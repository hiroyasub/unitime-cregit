<?xml version="1.0" encoding="UTF-8" ?>
<?xml-stylesheet type="text/css" href="Release-Notes.css"?>
<!DOCTYPE release-history PUBLIC "-//UniTime//UniTime Release Notes DTD/EN" "Release-Notes.dtd">
<!--
 * Licensed to The Apereo Foundation under one or more contributor license
 * agreements. See the NOTICE file distributed with this work for
 * additional information regarding copyright ownership.
 *
 * The Apereo Foundation licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at:
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 -->

<release-history>

<doc-title>UniTime 4.5 Release Notes</doc-title>
<release>
	<version>4.5.${build.number}</version>
	<release-date>${build.date}</release-date>
	<category>
		<title>Student Scheduling</title>
		<item>
			<name>Advisor Course Requests</name>
			<description>
				<line>A page for the advisor to fill with a student while advising him/her on what courses to take the next term.</line>
				<line>It looks a lot like the Student Course Requests page, with a few fields added (credits per course, notes, etc.).</line>
				<line>When opened, the advisor can look up a student and the page gets pre-populated with the existing data.</line>
				<line>The page  automatically offers course suggestions (but it is possible to put in a free text too), fills in credits, count the credit totals, etc.</line>
				<line>When submitted, there is a PDF version generated that can be printed and signed by the student.</line>
				<line>Allows for student status change when submitted; no need for the advisor to use the dashboard to change the student status.</line>
				<line>UniTime keeps record of these advisor course requests for possible auditing/reporting (what students requested versus what they have been advised, list students that have been already advised that did not fill their course requests in, etc.).</line>
				<line>Student Course Requests page can be pre-populated with these courses, or a student can review the courses filled in by the advisor.</line>
			</description>
		</item>
		<item>
			<name>Important Course Requests</name>
			<description>
				<line>Added ability to put a multiple levels to critical courses: Critical &gt; Important &gt; Normal.</line>
				<line>Critical course request are assigned first, then important requests, then the rest.</line>
				<line>More levels can be defined in the future, if needed.</line>
			</description>
		</item>
		<item>
			<name>Alternative Majors</name>
			<description>
				<line>Added ability to load critical courses and degree plans from an alternative major.</line>
				<line>Alternative majors are identified by a student group of a particular type a student is in.
					<line>By default group type is &quot;1st Choice&quot;, and the group abbreviation is area abbv - major code.</line>
				</line>
				<line>Custom class CriticalCoursesExplorers makes use of these (implementing both CriticalCoursesProvider and DegreePlansProvider interfaces).</line>
			</description>
		</item>
		<item>
			<name>Reservation Restrictions</name>
			<description>
				<line>Added ability to define on a reservation whether it is inclusive or not.</line>
				<line>There is a new mode field when editing a reservation (that is not an override) which can be:
					<line>Default: using unitime.reservations.restrictionsInclusive which defaults to true.</line>
					<line>Reservation: the currently default mode (restrictions are applied at all levels).</line>
					<line>Restriction: not-inclusive mode (restrictions are only applied on the selected level).</line>
				</line>
			</description>
		</item>
		<item>
			<name>Gradable Subpart</name>
			<description>
				<line>Added ability to show course credit information on a particular section (not just the first one).</line>
				<line>Gradable subpat (on which the credit is shown) can be provided using the ExternalClassNameHelperInterface interface, implementing HasGradableSubpart sub-interface.</line>
			</description>
		</item>
		<item>
			<name>Banner Integration: Assigned Credit</name>
			<description>
				<line>Show credit information on the gradable section.</line>
				<line>For variable credit courses, display assigned credit returned by XE API.</line>
			</description>
		</item>
	</category>
	<category>
		<title>Course Timetabling</title>
		<item>
			<name>Room Sharing</name>
			<description>
				<line>More precise computation of allowed room sharing (how much space is needed in a room).</line>
				<line>This is to avoid issues when three or more classes can share a room and some of these classes do not overlap.
					<line>For example, no more than two classes overlap when there is a Monday class, a Wednesday class, and a Monday-Wednesday class.</line>
				</line>
			</description>
		</item>
	</category>
	<category>
		<title>Other</title>
		<item>
			<name>Right-to-Left Support</name>
			<description>
				<line>Basic support for right-to-left languages.</line>
				<line>Enable by using ar locale.</line>
			</description>
		</item>
	</category>
</release>
</release-history>
