<?xml version="1.0" encoding="UTF-8" ?>
<?xml-stylesheet type="text/css" href="Release-Notes.css"?>
<!DOCTYPE release-history PUBLIC "-//UniTime//UniTime Release Notes DTD/EN" "Release-Notes.dtd">
<!-- 
 * UniTime 3.4 (University Timetabling Application)
 * Copyright (C) 2008 - 2012, UniTime LLC
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along
 * with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 -->

<release-history>

<doc-title>UniTime 3.4 Release Notes</doc-title>

<release>
	<version>3.4.${build.number}</version>
	<release-date>${build.date}</release-date>
	<category>
		<title>Technology Update</title>
		<item>
			<name>Event Management</name>
			<description>
				<line>Event management portion of the application was completely rewritten using Google Web Toolkit.</line>
				<line>All the existing (UniTime 3.3) functionality has remained, a number of new features was implemented (see below).</line>
			</description>
		</item>
		<item>
			<name>Spring Security</name>
			<description>
				<line>New security model is introduced in UniTime 3.4</line>
				<line>This includes both user authentication and authorization.</line>
				<line>This allows for better integration of UniTime 3.4 with other systems at a university.</line>
			</description>
		</item>
		<item>
			<name>Maven Builds</name>
			<description>
				<line>UniTime application can now be built using either Apache Ant or Maven.</line>
			</description>
		</item>
	</category>
	<category>
		<title>Event Management</title>
		<item>
			<name>Organizational / Database Changes</name>
			<description>
				<line>Departments that can manage events (event departments) are to be specified on the Departments page.
					<line>On a department, there is a new Event Management flag.</line>
				</line>
				<line>There is a new relation between rooms (including non-university locations) and event departments.
					<line>On the Edit Room page, a room that is to have event management enabled must have an event department selected (in the ).</line>
				</line>
				<line>On the update, the relations are automatically populated using the UniTime 3.3 way. That is:
					<line>An event department is a department that has a manager with an Event Manager role.</line>
					<line>Room is enabled for events if it is controlled by an event department.</line>
				</line>
			</description>
		</item>
		<item>
			<name>Events Page</name>
			<description>
				<line>Events page now contains all the filtering and display functionality that is needed for users to be able to see, request, and approve events.</line>
				<line>In the Timetable view, events are equally spaced (to see how much each time is used).
					<line>For room/personal timetable (when there is no or very unlikely overlap between events), events also shift into proper week/room.</line>
				</line>
				<line>Selection of time: allow selection of time from a drop down (15 or 30 minute increments) as well as type in (5 minute increments).</line>
				<line>Room filter: free text box, with a drop down with selections for features / groups / types, also allow for boolean queries.
					<line>For each selection, number of matching rooms is also provided.</line>
					<line>Room suggestions are also displayed.</line>
					<line>All the filtering capabilities are reachable via suggestions by just typing in (with no mouse clicking).</line>
				</line>
				<line>Event filter: combines event name, type and display mode into a similar component as the Room filter.</line>
				<line>Functionality of Events, Meetings, Add Event, and Room Availability is merged into one page.
					<line>This allows for easy swapping between different views.</line>
				</line>
				<line>The Timetable, List of Events, and List of Meetings can be easily filtered by a room or a week or weeks.</line>
				<line>Event page defaults to "My Events" (events requested by me) in "Event" rooms (rooms with event management enabled),
					changes in the filters are remembered in browser (session) cookies.
					<line>But it is possible to see (and query) class / examination events in all the rooms.</line>
				</line>
				<line>Users are able to see (and change) event meeting offsets (setup and teardown time).
					<line>Published Time: the "official" starting and end time of a meeting.</line>
					<line>Allocated Time: the time during which the room is blocked (start - setup, end + teardown)</line>
					<line>Setup Time: the offset (positive number in minutes) between allocated start time and published start time</line>
					<line>Teardown Time: the offset (positive number in minutes) between published end time and allocated end time</line>
				</line>
				<line>An event can now have additional contacts entered (not just a set of emails).</line>
				<line>It is now possible for the event to get automatically approved when it is entered by an event manager or an administrator.
					<line>Only for meetings that the user has permission to approve.</line>
					<line>When "Event Location Approve" permission is enabled for the user.</line>
				</line>
				<line>It is now possible to make multiple changes (e.g., drop a couple of meetings and add some now ones) within the Edit Event page.
					<line>Changes are only persisted (and the email notification is sent) at the end (when Save button is pressed).</line>
				</line>
				<line>It is now possible to approve / reject / inquire on multiple events at once, directly from the List of Events or List of Meetings.</line>
			</description>
		</item>
		<item>
			<name>Event Timetable page</name>
			<description>
				<line>Event Timetable page now contains much of the Events page, but it does not have the "My Events" default and it allows to see
					<line>Room Timetable: timetable of a room</line>
					<line>Subject Timetable: timetable of a subject area or a course</line>
					<line>Curriculum Timetable: timetable of a curriculum or a curriculum classification</line>
					<line>Department Timetable: timetable of a department.</line>
					<line>Personal Timetable: timetable of a person, listing all classes, exams, and other requested events.</line>
				</line>
			</description>
		</item>
		<item>
			<name>Room Availability</name>
			<description>
				<line>Not Available event type added.
					<line>Only event manager and administrator can create (Event Add Unavailable permission), no approval process.</line>
					<line>Not available events only show up in the timetable grid when showing a timetable of a room (or rooms), and they display differently than ordinary events (grayed out and without a shade).</line>
					<line>Not available events only show up in the events or meetings if the Not Available type is explicitly selected in the event filter, or when they are shown on the timetable grid.</line>
				</line>
				<line>Event Room Availability
					<line>Default event room availability can be edited on a room (Edit Event Availability on Room Details page).</line>
					<line>This is a semester-wide availability table very much like the one for course timetabling (Room Availability).</line>
					<line>It can be seen with Room Detail Event Availability permission, changed with Room Edit Event Availability permission.</line>
				</line>
			</description>
		</item>
		<item>
			<name>Localization</name>
			<description>
				<line>All event management pages are fully localizable.</line>
				<line>English and Czech translations are provided.</line>
			</description>
		</item>
		<item>
			<name>Event Approval Workflow Changes</name>
			<description>
				<line>Requested meeting is in a pending state.
					<line>A requested meeting is approved automatically when requested by an event manager with the Event Location Approve permission if in a room of the event department of the manager.</line>
				</line>
				<line>Pending meeting can be approved, rejected (Event Meeting Approve permission), cancelled (Event Meeting Cancel permission), or inquired (Event Meeting Inquire permission) by an event manager.</line>
				<line>Pending meeting can be deleted (Event Meeting Delete permission) or cancelled (Event Meeting Cancel permission) by the requester or an event manager. </line>
				<line>Approved meeting cannot be deleted or rejected, it can only be cancelled (by the requester or an event manager).</line>
				<line>Cancelled and rejected meetings are kept in the database, but their status can no longer be changed.
					<line>Deleted meetings are also deleted from the database.</line>
				</line>
				<line>Cancelled and rejected meetings are only visible on the Event Detail and Edit Event page, and on the Events page with the following Event Filter settings:
					<line>Mode: Cancelled / Rejected</line>
					<line>Mode: My Events</line>
					<line>Requested By: ...</line>
				</line>
				<line>Meetings in the past can be requested or deleted only with the Event Edit Past permission. They can be approved, rejected, or cancelled only with the Event Approve Past permission.</line>
				<line>Events in a room that is not managed in UniTime (it does not have an event department defined) can be only requested by a user with permission Event Any Location.</line>
				<line>Rooms can be overbooked only by a user with the Event Location Overbook permission (for an event manager the room also has to be from the appropriate event department).</line>
				<line>Special events can be requested by someone with Event Add Special permission, course related events by Event Add Course Related and unavailabilities by Event Add Unavailable.</line>
			</description>
		</item>
		<item>
			<name>Event Attachments</name>
			<description>
				<line>A file can be attached to an event (or a list of meetings) during its approval (approve / inquire / cancel / reject) as well as on the Add / Edit Event page (during creation or update of an event).</line>
				<line>An attached file gets included in the appropriate event email, but it is also persisted (within event notes) and can be accessed from the Event Detail page.
					<line>Only people that can access the detail page can get to the attached file.</line>
				</line>
				<line>This allows the approval process to be extended with the ability to attach a filled form with the request of an event.</line>
			</description>
		</item>
		<item>
			<name>Event Status</name>
			<description>
				<line>An event management can be enabled or disabled per department and room type, using the Event Statuses page.</line>
				<line>Only departments that have event management enabled (Departments page) and room types that have at least one event room (Event Department under Edit Room page) are visible (can be enabled for event management).</line>
				<line>One of the following status can be set:
					<line>No Event Management
						<line>Event management is disabled.</line>
					</line>
					<line>Authenticated Users Can Request Events Managers Can Approve
						<line>Any authenticated user (with the appropriate right) can request an event, event managers are allowed to approve an event.</line>
					</line>
					<line>Departmental Users Can Request Events Managers Can Approve
						<line>Any instructor or timetable manager (with the appropriate right) can request an event in a room of her/his department(s), event managers are allowed to approve an event.</line>
					</line>
					<line>Event Managers Can Request Events Managers Can Approve
						<line>Only event managers are allowed to request and to approve an event.</line>
					</line>
					<line>Authenticated Users Can Request Events No Approval
						<line>Any authenticated user (with the appropriate right) can request an event, event managers are not allowed to approve an event.</line>
					</line>
					<line>Departmental Users Can Request Events No Approval
						<line>Any instructor or timetable manager (with the appropriate right) can request an event in a room of her/his department(s), event managers are not allowed to approve an event.</line>
					</line>
					<line>Event Managers Can Request Events No Approval
						<line>Only event managers are allowed to request an event, event managers are not allowed to approve an event.</line>
					</line>
				</line>
				<line>Together with an event status, a message (that is to be displayed next to the requested room of the appropriate department and room type) and a default break time can be defined.
					<line>A message is displayed as an error (room not available), if the user is not allowed to request a meeting in the room.</line>
					<line>A message is displayed as a warning, if the user is allowed to request a meeting in the room.</line>
					<line>Default break time is used as an offset between published and allocated time of an event (e.g., 10 means that the published end time of an event is 10 minutes earlier than the allocated time).</line>
				</line>
				<line>Event status, message and break time can be overridden on an individual room (Edit Room page).</line>
			</description>
		</item>
		<item>
			<name>Instructor (Event) Roles</name>
			<description>
				<line>A (departmental) instructor can have an additional role assigned in UniTime, using Instructor Roles page.
					<line>Only roles that are made available to instructors (Instructor toggle on the Roles page) can be used.</line>
					<line>The page is only available when there is at least one role available to instructors.</line>
				</line>
				<line>Intended use case: event manager can assign people of his/her department with some lesser event roles (e.g., to be able to request course-related events, approve events, ...)
					<line>An instructor with an event role will be able to request an event while the event status is one of the following:
						<line>Authenticated Users Can Request</line>
						<line>Departmental Users Can Request</line>
						<line>Event Managers Can Request</line>
					</line>
					<line>An instructor with an event role that allows him / her to approve will be able to approve (or reject) an event while the event status allows for event managers to approve events.</line>
					<line>In both cases, department of the instructor is considered (and compared with event department of the room in question).</line>
				</line>
			</description>
		</item>
		<item>
			<name>Deprecated Pages</name>
			<description>
				<line>Meetings and Room Availability pages are no longer needed -- all the functionality is available on the new Events page.</line>
				<line>Classes, Examination, Personal schedule pages are no longer needed -- all the functionality is available on the new Event Timetable page.</line>
			</description>
		</item>
	</category>
	<category>
		<title>Application Security</title>
		<item>
			<name>User Permissions</name>
			<description>
				<line>Roles and their permissions can now be edited in UniTime which greatly improves customization possibilities.</line>
			</description>
		</item>
		<item>
			<name>System Administrator</name>
			<description>
				<line>The current Administrator role has been renamed to System Administrator role.</line>
				<line>New Session Administrator role has been introduced.
					<line>Very much like the System Administrator, but academic session dependent.</line>
					<line>Only system administrator is able to create and / or delete an academic session.</line>
					<line>Session independent entities (like room types) are only editable by system administrator.</line>
					<line>Chameleon is only available to a system administrator.</line>
				</line>
			</description>
		</item>
		<item>
			<name>Improved Application Security</name>
			<description>
				<line>For instance, a course timetabling solution can only be uncommitted when the online student scheduling is NOT enabled.</line>
			</description>
		</item>
	</category>
	<category>
		<title>Course Timetabling</title>
		<item>
			<name>Alternative Date Patterns</name>
			<description>
				<line>User interface for alternative date patterns created.
					<line>A date pattern can be of a new type "Alternative Pattern Set"</line>
					<line>Such a date pattern does not have any dates selected by itself, but other date patterns can be put into this set (one date pattern can belong into multiple sets).</line>
				</line>
				<line>When such a date pattern is assigned to a scheduling subpart or a class, one of the date patterns of the set are to be assigned to the class as a part of the time assignment.
					<line>An individual preference can be set on each of the alternative date patterns (including required and prohibited).</line>
				</line>
			</description>
		</item>
		<item>
			<name>Travel Times</name>
			<description>
				<line>Added ability to override distances computed using room coordinates by individual travel times set between pairs of rooms.
					<line>These, if set, override the default distances that are computed using room coordinates.</line> 
				</line>
			</description>
		</item>
		<item>
			<name>Back-To-Back Student Distance Conflicts</name>
			<description>
				<line>Added ability to consider student distance conflicts between classes that are not directly back-to-back.
					<line>Distance conflict is there if room distance (in minutes) is greater than the break time of the first class plus the difference between end of the first and start of the second class.</line>
					<line>To be enabled if needed by setting the solver parameter Distances.ComputeDistanceConflictsBetweenNonBTBClasses to true (defaults to false).</line>
				</line>
			</description>
		</item>
		<item>
			<name>Back-To-Back Instructor Distance Conflicts</name>
			<description>
				<line>
					Added ability to check travel times between classes that are not back-to-back (there is one or more empty slots in between).
					<line>A hard conflict is created between two consecutive classes that do not have enough time to travel.
						<line>Like with student conflicts, travel time in minutes is compared with the break time of the first class and the time between the classes.</line>
					</line>
					<line>Discouraged (soft) conflict is created if there is not enough time to travel while the break time of the first class is ignored (i.e., when break time has to be used for travel, not to wrap up the class).</line>
					<line>Strongly discouraged (soft) conflict is created for two consecutive classes that are too far away (regardless the available time in between).
						<line>This means that there is a strongly discouraged conflict every time when an instructor has a long travel time between two classes during the day.</line>
						<line>This is controlled by Instructor.InstructorLongTravelInMinutes solver parameter, defaults to 30 minutes (instructor has to travel for 30 minutes or more).</line>
						<line>This allows us to minimize long (instructor) travels during the day.</line>
					</line>
					<line>To be enabled if needed by setting the solver parameter Distances.ComputeDistanceConflictsBetweenNonBTBClasses to true (defaults to false).</line>
					<line>The distance check between back-to-back classes remains as before (the change only applies to non back-to-back consecutive classes, when enabled).</line>
				</line>
			</description>
		</item>
		<item>
			<name>Automatic Precedence Constraints</name>
			<description>
				<line>
					Added ability to automatically post a precedence constraint between a class and all its parent classes.
					<line>To be enabled by setting the solver parameter General.AutoPrecedence (value is the preference of the constraint, e.g., R for required, -2 for strongly preferred).</line>
					<line>Classes have to be of different instructional types (a constraint will not be created between Lec and Lec a).</line>
					<line>This is to allow lecture before seminar scenario without manually creating a lot of precedence constraints.</line>
				</line>
			</description>
		</item>
		<item>
			<name>Student Hard Conflicts</name>
			<description>
				<line>Added ability for the joint enrollment constraint (student conflicts) to be hard based on the number of students in common.</line>
				<line>This is controlled by the parameter General.JenrlMaxConflicts, the value is the percentage of the smaller class (using class limits) which gives the limit on the join enrollment (number of students in common) to become hard. Examples:
					<line>1.0 means the constraint is always soft (default)</line>
					<line>0.0 means the constraint is always hard</line>
					<line>0.25 means that a join enrollment constraint will be hard if there is at least 25% students of the smaller class in common</line>
					<line>So, for instance if there are two classes of limit 20, with the value 0.25 these classes can conflict only if there are 5 or less students attending both classes.</line>
				</line>
				<line>A hard conflict can weaken over time using the WeakeningConstraint interface.
					<line>With each unassignment caused by the constraint, the max conflicts parameter is increased by General.JenrlMaxConflictsWeaken parameter (defaults to 0.001).</line>
				</line>
				<line>Hard conflicts can be created only between classes that are not committed (otherwise there is a risk of not being able to assign a class in time because of committed conflicts).</line>
			</description>
		</item>
		<item>
			<name>Event Date Mapping</name>
			<description>
				<line>Added ability to create a mapping of class dates to event dates (list of pairs class date → event date related to an academic session).</line>
				<line>When a mapping is defined, it is used for creation of class events (class dates are mapped to event dates) and for room availability in course timetabling (events are mapped back from event dates to class dates).</line>
				<line>The mapping can be defined on Administration > Academic Sessions > Event Date Mappings page.
					<line>The existing mappings can be seen with Event Date Mappings permission (if there is any) and edited with the Event Date Mapping Edit permission (no timetable cannot be committed at that time).</line>
					<line>These two permissions are not assigned to any role by default, making this feature not visible by default.</line>
				</line>
				<line>When a date mapping is defined, the date patterns should be defined so that classes do take place on the class dates (marked with purple text color in the pattern) and not on the event dates (marked with teal color in the pattern).
					<line>Such meetings will be mapped from these class dates to the event dates using the defined mapping when a solution is committed (or a committed assignment is changed using Class Assignment page).</line>
				</line>
				<line>The mapping does not roll forward.</line>
				<line>Use Case: Rare timetabling exceptions usually caused by following a different day schedule on a certain dates (e.g., because there is too many Monday holidays in the term).</line>
			</description>
		</item>
		<item>
			<name>Ignore Student Conflicts Constraint</name>
			<description>
				<line>A new distribution constraint Ignore Student Conflicts was created.
					<line>If put (with Required preference) on a set of classes, all student conflicts are ignored between these classes.</line>
					<line>It is ignored when Neutral preference is used (it only allows for Required or Neutral preference).</line>
				</line>
				<line>The Same Students distribution constraint allows for classes that are also connected with a required Ignore Student Conflicts distribution constraint to be put on top of each other or back-to-back too far apart.</line>
				<line>If the number of student conflicts that are being ignored is to be displayed in the solution info, the following two classes need to be added to General.AdditionalCriteria solver parameter:
					<line>General.AdditionalCriteria=net.sf.cpsolver.coursett.criteria.additional.IgnoredStudentConflict;net.sf.cpsolver.coursett.criteria.additional.IgnoredCommittedStudentConflict</line>   
				</line>
			</description>
		</item>
	</category>
	<category>
		<title>Examination Timetabling</title>
		<item>
			<name>Can Share Room</name>
			<description>
				<line>Can Share Room distribution constraint was added.
					<line>Given examinations can share a room (use the same room during the same period) if the room is big enough.</line>
					<line>If examinations of different seating type are sharing a room, the more restrictive seating type is used to check the room size.</line>
				</line>
			</description>
		</item>
		<item>
			<name>Examination Types</name>
			<description>
				<line>Allow for multiple final/midterm examination types in one academic session.
					<line>Examination types are now editable within the application.</line>
					<line>Only examination types that have examination periods defined are visible within an academic session.</line>
				</line>
			</description>
		</item>
		<item>
			<name>Room Size Penalty</name>
			<description>
				<line>Added ability to make the difference function polynomial with a new parameter Exams.RoomSizeFactor (defaults to 1.0).</line>
				<line>New objective value: (room size - number of students) ^ room size factor.</line>
				<line>This is to be able to favor a room swap between two exams at the same period, in which a smaller exam takes a smaller room.
					<line>To do this, set Exams.RoomSizeFactor to a number bigger than one that is close to one (e.g., 1.05).</line>
				</line>
			</description>
		</item>
		<item>
			<name>Distance To A Strongly Preferred Room</name>
			<description>
				<line>Added an experimental criterion measuring average distance (in meters) to the strongly preferred room (or rooms) of the examination.</line>
				<line>The idea is to prefer rooms that are close to the strongly preference room (if there is a strongly preferred room but it is not available).</line>
				<line>A weight of the average distance between the assigned room(s) and the strongly preferred room or rooms can be set using Exams.DistanceToStronglyPreferredRoomWeight property.</line>
				<line>To enable this criterion add the DistanceToStronglyPreferredRoom class name to Exams.AdditionalCriteria parameter. For instance:
					<line>Exams.AdditionalCriteria=net.sf.cpsolver.exam.criteria.additional.DistanceToStronglyPreferredRoom</line>
				</line>
			</description>
		</item>
		<item>
			<name>Room Placement Penalty</name>
			<description>
				<line>Combination of examination room preference (set on an exam) and room period preference (set on a room) changed.</line>
				<line>Now it is 2x examination room preference PLUS room period preference of the examination period in question.
					<line>Was: examination room preference if it was set (there was a room, building,
						group, or feature containing the room set on the exam itself); room period
						preference otherwise (if there is no examination room preference).</line>
				</line>
				<line>This is to be able to distinguish between a preferred room that has no period preference and a preferred room that is discouraged at the given period.
					<line>While the preferences set on the exam have still higher weights than the period preferences set on the room.</line>
					<line>Except when the period is prohibited in which case the room cannot be used at that period at all (this did not change).</line>
				</line>
			</description>
		</item>
		<item>
			<name>Period Placement Penalty</name>
			<description>
				<line>Period placement penalty is now counted in the same way as the room placement penalty, that is: 2 * exam period penalty + default period penalty
					<line>where "exam period penalty" is the penalty set on the exam and "default period penalty" is the (default) penalty set on the period.</line>
				</line>
				<line>This way a preference on an exam does not get negated with a preference on the period (e.g., strongly preferring a period that is strongly discouraged does not result in zero penalty).</line>
			</description>
		</item>
		<item>
			<name>Examination Roll Forward</name>
			<description>
				<line>Added ability to
					<line>not roll forward any examination preferences, or</line>
					<line>roll forward all examination preferences.</line>
					The default is still to roll forward only building, room feature and room group preferences (excluding period and room preferences).
				</line>
			</description>
		</item>
	</category>
	<category>
		<title>Batch Student Scheduling</title>
		<item>
			<name>Ignore Student Conflicts Constraint</name>
			<description>
				<line>It is now allowed for a student to be enrolled in conflicting classes (overlapping in time or back-to-back too far a part) if there is a required Ignore Student Conflicts between them.
					<line>Such a conflict is completely ignored (e.g., unlike with classes that allow for overlap, it does not try to minimize the overlapping time).</line>
				</line>
			</description>
		</item>
		<item>
			<name>Student Sectioning Status (No Batch option)</name>
			<description>
				<line>Added ability to exclude some students from batch student scheduling.
					<line>Students with sectioning status that has "No Batch" option checked are not loaded into the solver.</line>
					<line>If these students already enrolled into some classes, they enrollments are counted towards the class, configuration, course, and reservation limits.
						<line>Internally, the appropriate limits (if not unlimited) are decreased by the number of students that are enrolled in and not being scheduled by the solver (during the data load).</line>
					</line>
					<line>This behavior is enabled by default, it can be switched off by setting the solver parameter Load.CheckForNoBatchStatus to false.</line>
				</line>
				<line>Added ability to set or reset student status (for the students that have been loaded into the solver) while a solution is being saved.
					<line>This is done by solver parameter Save.StudentSectioningStatusToSet, that can have the following parameters (e.g., defined as an enum):
						<line>N/A ... student status is kept as it is</line>
						<line>Default ... student status is set to null (the status of a student is given by the default status on the academic session)</line>
						<line>An abbreviation of the status (from Student Scheduling Status Types page) that is to be set to each student which has been loaded into the solver during the save.</line>
					</line>
					<line>If the parameter is not present (which is the default), student statuses are kept as they are during the save.</line> 
				</line>
			</description>
		</item>
	</category>
	<category>
		<title>Online Student Scheduling</title>
		<item>
			<name>Course Types</name>
			<description>
				<line>Course types can be defined under Administration &gt; Other &gt; Course Types</line>
				<line>Each course offering can have a course type (to be edited on Edit Course Offering page).</line>
				<line>Through student scheduling status types, a student can be allowed to request only courses of certain course types.</line>
			</description>
		</item>
		<item>
			<name>Consent Types</name>
			<description>
				<line>Consent of department / instructor moved from instructional offering to course offering level.</line>
				<line>This (together with course reservations) allows for the use case when a consent is only needed for students that enroll into the offering through one of the cross-listed courses.</line>
			</description>
		</item>
		<item>
			<name>Ignore Student Conflicts Constraint</name>
			<description>
				<line>It is now allowed for a student to be enrolled in conflicting classes (overlapping in time or back-to-back too far a part) if there is a required Ignore Student Conflicts between them.
					<line>Such a conflict is completely ignored (e.g., the two classes are not marked as conflicting in the Student Scheduling Assistant).</line>
				</line>
			</description>
		</item>
	</category>
	<category>
		<title>Other Changes</title>
		<item>
			<name>Rooms</name>
			<description>
				<line>Room availability grid rewritten in GWT.
					<line>Department code is displayed in each cell.</line>
					<line>It is now much easier to add / remove a department, add all departments.</line>
					<line>Localization (e.g., times / dates follow the locale settings)</line>
					<line>User interface is customizable, however, a lot of code still expects half hours starting on every half an hour.</line>
				</line>
			</description>
		</item>
		<item>
			<name>Room Feature Types</name>
			<description>
				<line>Room features can have a type (optional, to be defined on the page Administration > Other > Room Feature Types).
					<line>Room feature type can be enabled or disabled for event management, room features of a disabled feature type are not available in event management (Room Filter box).</line>
					<line>Rooms Features: if there are room feature types defined, each room feature (global or departmental) can have none (No Type) or one feature type assigned.</line>
					<line>Room feature preferences: feature type abbreviation is added to the room feature name in the dropdowns (next to the feature name, in brackets).</line>
					<line>Room tooltip: features are split by room feature type, only applicable feature types are displayed.</line>
					<line>Class Assignment: room features are split by type in the Available Rooms section.</line>
					<line>Examination Assignment: room features are split by type in the Available Rooms section, only room features with at least one examination room (of the same type as the exam) are displayed.</line>
					<line>Room Filter box (event management): features are split by type in the dropdown (+), they can also be searched by feature type (features of the type that is being typed in are suggested).</line>
					<line>The same rules as before still apply -- if two room features are selected, a room has to have both to match (regardless their type).</line>
				</line>
			</description>
		</item>
		<item>
			<name>Room Area (Square Footage)</name>
			<description>
				<line>Rooms and Non-University Locations have a new property called Area (double precision).
					<line>Room area can be edited on the Edit Room page (requires Room Edit Change Room Properties permission).</line>
					<line>It is displayed on the Room Detail and the Rooms pages, and also in the room tooltip (if present).</line>
					<line>Default units are square feet, but they can be changed through the localization.</line>
					<line>External rooms and the appropriate XML import can include room area as well.</line>
				</line>
			</description>
		</item>
		<item>
			<name>Room Note</name>
			<description>
				<line>Rooms and Non-University Locations have a new note.
					<line>A note can be edited on the Edit Room Page.</line>
					<line>It is visible on the Room Detail page (if present), in the room tooltip, and in the events (where it overrides the note that is set on the room type &amp; department combination, Event Statuses page).</line>
					<line>A history of the room note is available on the Room Detail page (section Room Note History at the bottom of the page).
						<line>There is also a toggle allowing to display note changes across all academic sessions (rooms are matched using their permanent ids).</line>
					</line>
				</line>
			</description>
		</item>		
		<item>
			<name>Room Sharing</name>
			<description>
				<line>Room Sharing Grid
					<line>Room sharing grid no longer needs to be defined in half-hour increments starting on every hour or half-hour.</line>
					<line>Default settings can be changed using unitime.room.sharingMode.X application properties (where X is a number starting from 1), or by overriding GWTConstant called roomSharingModes.</line>
					<line>Format: name|first slot|last slot|first day|last day|increment</line>
					<line>Defaults:
						<line>unitime.room.sharingMode1=Workdays × Daytime|0|4|90|222|6
							<line>Monday - Friday, starting at 7:30 am, ending at 6:30 pm, in half-hour increments</line>
						</line>
						<line>unitime.room.sharingMode2=All Week × Daytime|0|6|90|222|6
							<line>Monday - Sunday, starting at 7:30 am, ending at 6:30 pm, in half-hour increments</line>
						</line>
						<line>unitime.room.sharingMode3=Workdays × Evening|0|4|222|288|6
							<line>Monday - Friday, starting at 6:30 pm, ending at midnight, in half-hour increments</line>
						</line>
						<line>unitime.room.sharingMode4=All Week × Evening|0|5|222|288|6
							<line>Monday - Sunday, starting at 6:30 pm, ending at midnight, in half-hour increments</line>
						</line>
						<line>unitime.room.sharingMode5=All Week × All Times|0|6|0|288|6
							<line>Monday - Sunday, starting at midnight, ending at midnight, in half-hour increments</line>
						</line>
					</line>
				</line>
			</description>
		</item>		
		<item>
			<name>Export to PDF/CSV/XML</name>
			<description>
				<line>Instead of generating a temporary file, the PDF/CSV/XML content is exported within the HTTP servlet response.</line>
			</description>
		</item>
		<item>
			<name>Designators</name>
			<description>
				<line>Designators page and Designator Required toggle (on the offering) removed.</line>
			</description>
		</item>
	</category>
</release>
</release-history>
