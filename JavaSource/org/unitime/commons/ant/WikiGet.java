begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 - 3.5 (University Timetabling Application)  * Copyright (C) 2008 - 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|ant
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|DecimalFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|BuildException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|Task
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|WikiGet
extends|extends
name|Task
block|{
specifier|private
name|URL
name|iWikiUrl
init|=
literal|null
decl_stmt|;
specifier|private
name|File
name|iOutDir
init|=
literal|null
decl_stmt|;
specifier|private
name|File
name|iImgDir
init|=
literal|null
decl_stmt|;
specifier|private
name|Hashtable
name|iPages
init|=
operator|new
name|Hashtable
argument_list|()
decl_stmt|;
specifier|private
name|Hashtable
name|iImages
init|=
operator|new
name|Hashtable
argument_list|()
decl_stmt|;
specifier|private
name|HashSet
name|iRemainingPages
init|=
operator|new
name|HashSet
argument_list|()
decl_stmt|;
specifier|private
name|HashSet
name|iDonePages
init|=
operator|new
name|HashSet
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|String
name|sFirstPage
init|=
literal|"Main_Page"
decl_stmt|;
specifier|private
specifier|static
name|String
name|sWikiPrefix
init|=
literal|"/"
decl_stmt|;
specifier|private
specifier|static
name|String
name|sWikiIndex
init|=
literal|"/index.php"
decl_stmt|;
specifier|private
specifier|static
name|String
name|sWikiImagesPrefix
init|=
literal|"/images/"
decl_stmt|;
specifier|private
specifier|static
name|String
name|sWikiSkinsPrefix
init|=
literal|"/skins/"
decl_stmt|;
specifier|public
name|void
name|setOutput
parameter_list|(
name|String
name|outDir
parameter_list|)
block|{
name|iOutDir
operator|=
operator|new
name|File
argument_list|(
name|outDir
argument_list|)
expr_stmt|;
name|iOutDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|iImgDir
operator|=
operator|new
name|File
argument_list|(
name|iOutDir
argument_list|,
literal|"img"
argument_list|)
expr_stmt|;
name|iImgDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setUrl
parameter_list|(
name|String
name|wikiUrl
parameter_list|)
block|{
try|try
block|{
name|iWikiUrl
operator|=
operator|new
name|URL
argument_list|(
name|wikiUrl
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MalformedURLException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|boolean
name|copy
parameter_list|(
name|URL
name|url
parameter_list|,
name|File
name|file
parameter_list|)
block|{
try|try
block|{
name|System
operator|.
name|out
operator|.
name|print
argument_list|(
literal|"  Get: "
operator|+
name|url
operator|+
literal|" "
argument_list|)
expr_stmt|;
name|InputStream
name|is
init|=
name|url
operator|.
name|openStream
argument_list|()
decl_stmt|;
name|file
operator|.
name|getParentFile
argument_list|()
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|OutputStream
name|os
init|=
operator|new
name|FileOutputStream
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|byte
index|[]
name|buffer
init|=
operator|new
name|byte
index|[
literal|16
operator|*
literal|1024
index|]
decl_stmt|;
name|int
name|read
init|=
literal|0
decl_stmt|;
name|long
name|total
init|=
literal|0
decl_stmt|;
while|while
condition|(
operator|(
name|read
operator|=
name|is
operator|.
name|read
argument_list|(
name|buffer
argument_list|)
operator|)
operator|>
literal|0
condition|)
block|{
name|os
operator|.
name|write
argument_list|(
name|buffer
argument_list|,
literal|0
argument_list|,
name|read
argument_list|)
expr_stmt|;
name|total
operator|+=
name|read
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|print
argument_list|(
literal|"."
argument_list|)
expr_stmt|;
block|}
name|os
operator|.
name|flush
argument_list|()
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|" "
operator|+
name|total
operator|+
literal|" bytes read."
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Error: Unable to get "
operator|+
name|url
operator|+
literal|": "
operator|+
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|copyAndParse
parameter_list|(
name|URL
name|url
parameter_list|,
name|File
name|file
parameter_list|,
name|Parser
name|parser
parameter_list|)
block|{
try|try
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"  Get: "
operator|+
name|url
argument_list|)
expr_stmt|;
name|BufferedReader
name|is
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|url
operator|.
name|openStream
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|file
operator|.
name|getParentFile
argument_list|()
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
if|if
condition|(
name|file
operator|.
name|getName
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
literal|".html"
argument_list|)
condition|)
name|file
operator|=
operator|new
name|File
argument_list|(
name|file
operator|.
name|getParentFile
argument_list|()
argument_list|,
literal|"index.html"
argument_list|)
expr_stmt|;
name|PrintWriter
name|pw
init|=
operator|new
name|PrintWriter
argument_list|(
operator|new
name|FileWriter
argument_list|(
name|file
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|line
init|=
literal|null
decl_stmt|;
while|while
condition|(
operator|(
name|line
operator|=
name|is
operator|.
name|readLine
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|line
operator|=
name|parser
operator|.
name|parse
argument_list|(
name|line
argument_list|)
expr_stmt|;
if|if
condition|(
name|line
operator|!=
literal|null
condition|)
name|pw
operator|.
name|println
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
name|pw
operator|.
name|flush
argument_list|()
expr_stmt|;
name|pw
operator|.
name|close
argument_list|()
expr_stmt|;
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Error: Unable to get "
operator|+
name|url
operator|+
literal|": "
operator|+
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|BuildException
block|{
try|try
block|{
if|if
condition|(
name|iWikiUrl
operator|==
literal|null
condition|)
name|setUrl
argument_list|(
literal|"http://wiki.unitime.org"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iOutDir
operator|==
literal|null
condition|)
name|setOutput
argument_list|(
literal|"."
operator|+
name|File
operator|.
name|separator
operator|+
literal|"wiki"
argument_list|)
expr_stmt|;
name|iRemainingPages
operator|.
name|add
argument_list|(
name|sFirstPage
argument_list|)
expr_stmt|;
name|copy
argument_list|(
operator|new
name|URL
argument_list|(
name|iWikiUrl
operator|.
name|toString
argument_list|()
operator|+
literal|"/skins/monobook/headbg.jpg"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|iImgDir
argument_list|,
literal|"headbg.jpg"
argument_list|)
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|iRemainingPages
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|String
name|page
init|=
operator|(
name|String
operator|)
name|iRemainingPages
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|iRemainingPages
operator|.
name|remove
argument_list|(
name|page
argument_list|)
expr_stmt|;
name|iDonePages
operator|.
name|add
argument_list|(
name|page
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Page: "
operator|+
name|page
argument_list|)
expr_stmt|;
name|URL
name|pageUrl
init|=
operator|new
name|URL
argument_list|(
name|iWikiUrl
operator|.
name|toString
argument_list|()
operator|+
literal|"/"
operator|+
name|page
argument_list|)
decl_stmt|;
name|copyAndParse
argument_list|(
name|pageUrl
argument_list|,
operator|new
name|File
argument_list|(
name|iOutDir
argument_list|,
name|getPageFileName
argument_list|(
name|page
argument_list|)
argument_list|)
argument_list|,
operator|new
name|PageParser
argument_list|(
name|pageUrl
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
throw|throw
operator|new
name|BuildException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
specifier|static
name|DecimalFormat
name|sDF
init|=
operator|new
name|DecimalFormat
argument_list|(
literal|"000"
argument_list|)
decl_stmt|;
specifier|public
name|String
name|getPageFileName
parameter_list|(
name|String
name|pageName
parameter_list|)
block|{
name|String
name|pageFile
init|=
operator|(
name|String
operator|)
name|iPages
operator|.
name|get
argument_list|(
name|pageName
argument_list|)
decl_stmt|;
if|if
condition|(
name|pageFile
operator|!=
literal|null
condition|)
return|return
name|pageFile
operator|+
literal|".html"
return|;
name|pageFile
operator|=
name|pageName
operator|.
name|replaceAll
argument_list|(
literal|"\\%[0-9A-F][0-9A-F]"
argument_list|,
literal|""
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|":"
argument_list|,
literal|""
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"/"
argument_list|,
literal|""
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"\\\\"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
if|if
condition|(
name|pageFile
operator|.
name|length
argument_list|()
operator|>
literal|32
condition|)
name|pageFile
operator|=
name|pageFile
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|32
argument_list|)
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|iPages
operator|.
name|values
argument_list|()
operator|.
name|contains
argument_list|(
name|pageFile
operator|+
operator|(
name|idx
operator|==
literal|0
condition|?
literal|""
else|:
name|sDF
operator|.
name|format
argument_list|(
name|idx
argument_list|)
operator|)
argument_list|)
condition|)
name|idx
operator|++
expr_stmt|;
name|iPages
operator|.
name|put
argument_list|(
name|pageName
argument_list|,
name|pageFile
operator|+
operator|(
name|idx
operator|==
literal|0
condition|?
literal|""
else|:
name|sDF
operator|.
name|format
argument_list|(
name|idx
argument_list|)
operator|)
argument_list|)
expr_stmt|;
return|return
name|pageFile
operator|+
operator|(
name|idx
operator|==
literal|0
condition|?
literal|""
else|:
name|sDF
operator|.
name|format
argument_list|(
name|idx
argument_list|)
operator|)
operator|+
literal|".html"
return|;
block|}
specifier|public
name|void
name|addPage
parameter_list|(
name|String
name|page
parameter_list|)
block|{
if|if
condition|(
operator|!
name|iDonePages
operator|.
name|contains
argument_list|(
name|page
argument_list|)
condition|)
block|{
name|iRemainingPages
operator|.
name|add
argument_list|(
name|page
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|getImageFileName
parameter_list|(
name|URL
name|image
parameter_list|)
block|{
name|String
name|imageFile
init|=
operator|(
name|String
operator|)
name|iImages
operator|.
name|get
argument_list|(
name|image
argument_list|)
decl_stmt|;
if|if
condition|(
name|imageFile
operator|!=
literal|null
condition|)
return|return
name|imageFile
return|;
name|String
name|imageName
init|=
operator|new
name|File
argument_list|(
name|image
operator|.
name|getFile
argument_list|()
argument_list|)
operator|.
name|getName
argument_list|()
decl_stmt|;
name|String
name|ext
init|=
operator|(
name|imageName
operator|.
name|lastIndexOf
argument_list|(
literal|'.'
argument_list|)
operator|>
literal|0
condition|?
name|imageName
operator|.
name|substring
argument_list|(
name|imageName
operator|.
name|lastIndexOf
argument_list|(
literal|'.'
argument_list|)
operator|+
literal|1
argument_list|)
else|:
literal|null
operator|)
decl_stmt|;
if|if
condition|(
name|ext
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|ext
operator|.
name|indexOf
argument_list|(
literal|'?'
argument_list|)
operator|>
literal|0
condition|)
name|ext
operator|=
name|ext
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|ext
operator|.
name|indexOf
argument_list|(
literal|'?'
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|ext
operator|.
name|length
argument_list|()
operator|>
literal|10
operator|||
name|ext
operator|.
name|indexOf
argument_list|(
literal|':'
argument_list|)
operator|>=
literal|0
operator|||
name|ext
operator|.
name|indexOf
argument_list|(
literal|'%'
argument_list|)
operator|>=
literal|0
operator|||
name|ext
operator|.
name|indexOf
argument_list|(
literal|'\\'
argument_list|)
operator|>=
literal|0
operator|||
name|ext
operator|.
name|indexOf
argument_list|(
literal|'/'
argument_list|)
operator|>=
literal|0
condition|)
block|{
name|imageFile
operator|=
name|imageName
expr_stmt|;
name|ext
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|imageFile
operator|=
name|imageName
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|imageName
operator|.
name|lastIndexOf
argument_list|(
literal|'.'
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|imageFile
operator|=
name|imageName
expr_stmt|;
block|}
name|imageFile
operator|=
name|imageFile
operator|.
name|replaceAll
argument_list|(
literal|"\\%[0-9A-F][0-9A-F]"
argument_list|,
literal|""
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|":"
argument_list|,
literal|""
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"/"
argument_list|,
literal|""
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"\\\\"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
if|if
condition|(
name|imageFile
operator|.
name|length
argument_list|()
operator|>
literal|32
condition|)
name|imageFile
operator|=
name|imageFile
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|32
argument_list|)
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|iImages
operator|.
name|values
argument_list|()
operator|.
name|contains
argument_list|(
name|imageFile
operator|+
operator|(
name|idx
operator|==
literal|0
condition|?
literal|""
else|:
name|sDF
operator|.
name|format
argument_list|(
name|idx
argument_list|)
operator|)
operator|+
operator|(
name|ext
operator|==
literal|null
condition|?
literal|""
else|:
literal|"."
operator|+
name|ext
operator|)
argument_list|)
condition|)
name|idx
operator|++
expr_stmt|;
name|imageFile
operator|=
name|imageFile
operator|+
operator|(
name|idx
operator|==
literal|0
condition|?
literal|""
else|:
name|sDF
operator|.
name|format
argument_list|(
name|idx
argument_list|)
operator|)
operator|+
operator|(
name|ext
operator|==
literal|null
condition|?
literal|""
else|:
literal|"."
operator|+
name|ext
operator|)
expr_stmt|;
name|iImages
operator|.
name|put
argument_list|(
name|image
argument_list|,
name|imageFile
argument_list|)
expr_stmt|;
return|return
name|imageFile
return|;
block|}
specifier|public
specifier|static
name|String
name|replace
parameter_list|(
name|String
name|source
parameter_list|,
name|String
name|substring
parameter_list|,
name|String
name|newsubstring
parameter_list|)
block|{
name|int
name|idx
init|=
operator|-
literal|1
decl_stmt|;
name|int
name|len1
init|=
name|substring
operator|.
name|length
argument_list|()
decl_stmt|;
name|int
name|len2
init|=
name|newsubstring
operator|.
name|length
argument_list|()
decl_stmt|;
name|StringBuffer
name|sb
init|=
operator|new
name|StringBuffer
argument_list|(
name|source
argument_list|)
decl_stmt|;
while|while
condition|(
operator|(
name|idx
operator|=
operator|(
name|sb
operator|.
name|toString
argument_list|()
operator|.
name|indexOf
argument_list|(
name|substring
argument_list|,
name|idx
argument_list|)
operator|)
operator|)
operator|>=
literal|0
condition|)
block|{
name|sb
operator|.
name|replace
argument_list|(
name|idx
argument_list|,
name|idx
operator|+
name|len1
argument_list|,
name|newsubstring
argument_list|)
expr_stmt|;
name|idx
operator|+=
name|len2
expr_stmt|;
block|}
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
interface|interface
name|Parser
block|{
specifier|public
name|String
name|parse
parameter_list|(
name|String
name|line
parameter_list|)
throws|throws
name|Exception
function_decl|;
block|}
specifier|private
class|class
name|PageParser
implements|implements
name|Parser
block|{
specifier|private
name|URL
name|iURL
init|=
literal|null
decl_stmt|;
specifier|public
name|PageParser
parameter_list|(
name|URL
name|url
parameter_list|)
block|{
name|iURL
operator|=
name|url
expr_stmt|;
block|}
specifier|private
name|String
name|get
parameter_list|(
name|String
name|imageName
parameter_list|)
block|{
try|try
block|{
name|URL
name|imageUrl
init|=
literal|null
decl_stmt|;
try|try
block|{
name|imageUrl
operator|=
operator|new
name|URL
argument_list|(
name|iURL
argument_list|,
name|imageName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
empty_stmt|;
if|if
condition|(
name|imageUrl
operator|.
name|getHost
argument_list|()
operator|.
name|equals
argument_list|(
name|iWikiUrl
operator|.
name|getHost
argument_list|()
argument_list|)
operator|&&
name|imageUrl
operator|.
name|getPath
argument_list|()
operator|.
name|startsWith
argument_list|(
name|sWikiPrefix
argument_list|)
operator|&&
operator|!
name|imageUrl
operator|.
name|getPath
argument_list|()
operator|.
name|startsWith
argument_list|(
name|sWikiImagesPrefix
argument_list|)
operator|&&
operator|!
name|imageUrl
operator|.
name|getPath
argument_list|()
operator|.
name|startsWith
argument_list|(
name|sWikiSkinsPrefix
argument_list|)
condition|)
block|{
if|if
condition|(
name|imageUrl
operator|.
name|getPath
argument_list|()
operator|.
name|startsWith
argument_list|(
name|sWikiIndex
argument_list|)
condition|)
block|{
if|if
condition|(
name|imageUrl
operator|.
name|getFile
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"gen=js"
argument_list|)
operator|>
literal|0
operator|&&
name|imageUrl
operator|.
name|getFile
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"title="
argument_list|)
operator|>
literal|0
condition|)
block|{
name|int
name|titleIdx
init|=
name|imageUrl
operator|.
name|getFile
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"title="
argument_list|)
operator|+
literal|"title="
operator|.
name|length
argument_list|()
decl_stmt|;
name|String
name|title
init|=
name|imageUrl
operator|.
name|getFile
argument_list|()
operator|.
name|substring
argument_list|(
name|titleIdx
argument_list|,
name|imageUrl
operator|.
name|getFile
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|'&'
argument_list|,
name|titleIdx
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
literal|"-"
operator|.
name|equals
argument_list|(
name|title
argument_list|)
condition|)
name|title
operator|=
literal|"site"
expr_stmt|;
if|if
condition|(
operator|!
name|title
operator|.
name|endsWith
argument_list|(
literal|".js"
argument_list|)
condition|)
name|title
operator|+=
literal|".js"
expr_stmt|;
if|if
condition|(
name|title
operator|.
name|startsWith
argument_list|(
literal|"MediaWiki:"
argument_list|)
condition|)
name|title
operator|=
name|title
operator|.
name|substring
argument_list|(
literal|"MediaWiki:"
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|imageFile
init|=
operator|new
name|File
argument_list|(
name|iImgDir
argument_list|,
name|title
argument_list|)
decl_stmt|;
if|if
condition|(
name|imageFile
operator|.
name|exists
argument_list|()
operator|||
name|copy
argument_list|(
operator|new
name|URL
argument_list|(
name|imageUrl
operator|.
name|toString
argument_list|()
operator|.
name|replaceAll
argument_list|(
literal|"&amp;"
argument_list|,
literal|"&"
argument_list|)
argument_list|)
argument_list|,
name|imageFile
argument_list|)
condition|)
return|return
name|iImgDir
operator|.
name|getName
argument_list|()
operator|+
literal|"/"
operator|+
name|imageFile
operator|.
name|getName
argument_list|()
return|;
block|}
if|if
condition|(
operator|(
name|imageUrl
operator|.
name|getFile
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"gen=css"
argument_list|)
operator|>
literal|0
operator|||
name|imageUrl
operator|.
name|getFile
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"action=raw&ctype=text/css"
argument_list|)
operator|>
literal|0
operator|)
operator|&&
name|imageUrl
operator|.
name|getFile
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"title="
argument_list|)
operator|>
literal|0
condition|)
block|{
name|int
name|titleIdx
init|=
name|imageUrl
operator|.
name|getFile
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"title="
argument_list|)
operator|+
literal|"title="
operator|.
name|length
argument_list|()
decl_stmt|;
name|String
name|title
init|=
name|imageUrl
operator|.
name|getFile
argument_list|()
operator|.
name|substring
argument_list|(
name|titleIdx
argument_list|,
name|imageUrl
operator|.
name|getFile
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|'&'
argument_list|,
name|titleIdx
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
literal|"-"
operator|.
name|equals
argument_list|(
name|title
argument_list|)
condition|)
name|title
operator|=
literal|"site"
expr_stmt|;
if|if
condition|(
operator|!
name|title
operator|.
name|endsWith
argument_list|(
literal|".css"
argument_list|)
condition|)
name|title
operator|+=
literal|".css"
expr_stmt|;
if|if
condition|(
name|title
operator|.
name|startsWith
argument_list|(
literal|"MediaWiki:"
argument_list|)
condition|)
name|title
operator|=
name|title
operator|.
name|substring
argument_list|(
literal|"MediaWiki:"
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|imageFile
init|=
operator|new
name|File
argument_list|(
name|iImgDir
argument_list|,
name|title
argument_list|)
decl_stmt|;
if|if
condition|(
name|imageFile
operator|.
name|exists
argument_list|()
operator|||
name|copy
argument_list|(
operator|new
name|URL
argument_list|(
name|imageUrl
operator|.
name|toString
argument_list|()
operator|.
name|replaceAll
argument_list|(
literal|"&amp;"
argument_list|,
literal|"&"
argument_list|)
argument_list|)
argument_list|,
name|imageFile
argument_list|)
condition|)
return|return
name|iImgDir
operator|.
name|getName
argument_list|()
operator|+
literal|"/"
operator|+
name|imageFile
operator|.
name|getName
argument_list|()
return|;
block|}
comment|//System.out.println("Skip: "+imageUrl);
return|return
name|imageUrl
operator|.
name|toString
argument_list|()
return|;
block|}
name|String
name|pageName
init|=
name|imageUrl
operator|.
name|getPath
argument_list|()
operator|.
name|substring
argument_list|(
name|sWikiPrefix
operator|.
name|length
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|pageName
operator|.
name|startsWith
argument_list|(
literal|"Special:"
argument_list|)
operator|||
name|pageName
operator|.
name|startsWith
argument_list|(
literal|"User:"
argument_list|)
operator|||
name|pageName
operator|.
name|startsWith
argument_list|(
literal|"UniTime:"
argument_list|)
condition|)
block|{
comment|//System.out.println("Skip: "+imageUrl);
return|return
name|imageUrl
operator|.
name|toString
argument_list|()
return|;
block|}
name|addPage
argument_list|(
name|pageName
argument_list|)
expr_stmt|;
return|return
name|getPageFileName
argument_list|(
name|pageName
argument_list|)
return|;
block|}
if|if
condition|(
literal|"mailto"
operator|.
name|equalsIgnoreCase
argument_list|(
name|imageUrl
operator|.
name|getProtocol
argument_list|()
argument_list|)
condition|)
block|{
comment|//System.out.println("Skip: "+imageName);
return|return
name|imageName
return|;
block|}
if|if
condition|(
operator|!
name|iWikiUrl
operator|.
name|getHost
argument_list|()
operator|.
name|equals
argument_list|(
name|imageUrl
operator|.
name|getHost
argument_list|()
argument_list|)
condition|)
block|{
comment|//System.out.println("Skip: "+imageUrl);
return|return
name|imageUrl
operator|.
name|toString
argument_list|()
return|;
block|}
if|if
condition|(
operator|!
name|imageUrl
operator|.
name|getFile
argument_list|()
operator|.
name|startsWith
argument_list|(
name|sWikiPrefix
argument_list|)
condition|)
block|{
comment|//System.out.println("Skip: "+imageUrl);
return|return
name|imageUrl
operator|.
name|toString
argument_list|()
return|;
block|}
name|File
name|imageFile
init|=
operator|new
name|File
argument_list|(
name|iImgDir
argument_list|,
name|getImageFileName
argument_list|(
name|imageUrl
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|imageFile
operator|.
name|exists
argument_list|()
condition|)
return|return
name|iImgDir
operator|.
name|getName
argument_list|()
operator|+
literal|"/"
operator|+
name|imageFile
operator|.
name|getName
argument_list|()
return|;
if|if
condition|(
name|imageName
operator|.
name|toUpperCase
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|".HTML"
argument_list|)
operator|||
name|imageName
operator|.
name|toUpperCase
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|".HTM"
argument_list|)
condition|)
block|{
if|if
condition|(
operator|!
name|copyAndParse
argument_list|(
name|imageUrl
argument_list|,
name|imageFile
argument_list|,
operator|new
name|PageParser
argument_list|(
name|imageUrl
argument_list|)
argument_list|)
condition|)
return|return
name|imageUrl
operator|.
name|toString
argument_list|()
return|;
block|}
else|else
block|{
if|if
condition|(
operator|!
name|copy
argument_list|(
name|imageUrl
argument_list|,
name|imageFile
argument_list|)
condition|)
return|return
name|imageUrl
operator|.
name|toString
argument_list|()
return|;
block|}
return|return
name|iImgDir
operator|.
name|getName
argument_list|()
operator|+
literal|"/"
operator|+
name|imageFile
operator|.
name|getName
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|check
parameter_list|(
name|String
name|line
parameter_list|,
name|String
name|prefix
parameter_list|,
name|String
name|sufix
parameter_list|)
block|{
name|int
name|pos
init|=
operator|-
literal|1
decl_stmt|;
while|while
condition|(
operator|(
name|pos
operator|=
name|line
operator|.
name|indexOf
argument_list|(
name|prefix
argument_list|,
name|pos
operator|+
literal|1
argument_list|)
operator|)
operator|>=
literal|0
condition|)
block|{
name|int
name|begIdx
init|=
name|pos
operator|+
name|prefix
operator|.
name|length
argument_list|()
decl_stmt|;
name|int
name|endIdx
init|=
name|line
operator|.
name|indexOf
argument_list|(
name|sufix
argument_list|,
name|begIdx
argument_list|)
decl_stmt|;
name|String
name|imageName
init|=
name|line
operator|.
name|substring
argument_list|(
name|begIdx
argument_list|,
name|endIdx
argument_list|)
decl_stmt|;
if|if
condition|(
name|imageName
operator|.
name|startsWith
argument_list|(
literal|"#"
argument_list|)
condition|)
continue|continue;
if|if
condition|(
name|imageName
operator|.
name|startsWith
argument_list|(
literal|"&amp;"
argument_list|)
condition|)
continue|continue;
name|String
name|imageNameTr
init|=
name|get
argument_list|(
name|imageName
argument_list|)
decl_stmt|;
if|if
condition|(
name|imageNameTr
operator|!=
literal|null
condition|)
block|{
name|line
operator|=
name|line
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|begIdx
argument_list|)
operator|+
name|imageNameTr
operator|+
name|line
operator|.
name|substring
argument_list|(
name|endIdx
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|line
return|;
block|}
specifier|public
name|String
name|parse
parameter_list|(
name|String
name|line
parameter_list|)
throws|throws
name|Exception
block|{
name|line
operator|=
name|check
argument_list|(
name|line
argument_list|,
literal|"src=\""
argument_list|,
literal|"\""
argument_list|)
expr_stmt|;
name|line
operator|=
name|check
argument_list|(
name|line
argument_list|,
literal|"src=\'"
argument_list|,
literal|"\'"
argument_list|)
expr_stmt|;
name|line
operator|=
name|check
argument_list|(
name|line
argument_list|,
literal|"href=\""
argument_list|,
literal|"\""
argument_list|)
expr_stmt|;
name|line
operator|=
name|check
argument_list|(
name|line
argument_list|,
literal|"href=\'"
argument_list|,
literal|"\'"
argument_list|)
expr_stmt|;
name|line
operator|=
name|check
argument_list|(
name|line
argument_list|,
literal|"url(\""
argument_list|,
literal|"\""
argument_list|)
expr_stmt|;
name|line
operator|=
name|check
argument_list|(
name|line
argument_list|,
literal|"url(\'"
argument_list|,
literal|"\'"
argument_list|)
expr_stmt|;
name|line
operator|=
name|check
argument_list|(
name|line
argument_list|,
literal|"url("
argument_list|,
literal|")"
argument_list|)
expr_stmt|;
name|line
operator|=
name|check
argument_list|(
name|line
argument_list|,
literal|"@import \""
argument_list|,
literal|"\""
argument_list|)
expr_stmt|;
name|line
operator|=
name|check
argument_list|(
name|line
argument_list|,
literal|"@import \'"
argument_list|,
literal|"\'"
argument_list|)
expr_stmt|;
return|return
name|line
return|;
block|}
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|WikiGet
name|wg
init|=
operator|new
name|WikiGet
argument_list|()
decl_stmt|;
if|if
condition|(
name|args
operator|.
name|length
operator|>=
literal|1
condition|)
block|{
name|wg
operator|.
name|setUrl
argument_list|(
name|args
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|args
operator|.
name|length
operator|>=
literal|2
condition|)
block|{
name|wg
operator|.
name|setOutput
argument_list|(
name|args
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
name|wg
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

