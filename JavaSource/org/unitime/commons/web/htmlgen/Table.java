begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 - 3.5 (University Timetabling Application)  * Copyright (C) 2008 - 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|htmlgen
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_comment
comment|/**  * @author Stephanie Schluttenhofer  *  * TODO To change the template for this generated type comment go to  * Window - Preferences - Java - Code Style - Code Templates  */
end_comment

begin_class
specifier|public
class|class
name|Table
extends|extends
name|GeneralTableSupport
block|{
specifier|private
name|int
name|border
decl_stmt|;
specifier|private
name|int
name|cellPadding
decl_stmt|;
specifier|private
name|int
name|cellSpacing
decl_stmt|;
specifier|private
name|String
name|dataPageSize
decl_stmt|;
specifier|private
name|String
name|frame
decl_stmt|;
specifier|private
name|String
name|rules
decl_stmt|;
specifier|private
name|String
name|summary
decl_stmt|;
specifier|private
name|String
name|width
decl_stmt|;
specifier|private
name|ArrayList
name|rows
decl_stmt|;
comment|/** 	 * @return Returns the border. 	 */
specifier|public
name|int
name|getBorder
parameter_list|()
block|{
return|return
name|border
return|;
block|}
comment|/** 	 * @param border The border to set. 	 */
specifier|public
name|void
name|setBorder
parameter_list|(
name|int
name|border
parameter_list|)
block|{
name|this
operator|.
name|border
operator|=
name|border
expr_stmt|;
block|}
comment|/** 	 * @return Returns the cellPadding. 	 */
specifier|public
name|int
name|getCellPadding
parameter_list|()
block|{
return|return
name|cellPadding
return|;
block|}
comment|/** 	 * @param cellPadding The cellPadding to set. 	 */
specifier|public
name|void
name|setCellPadding
parameter_list|(
name|int
name|cellPadding
parameter_list|)
block|{
name|this
operator|.
name|cellPadding
operator|=
name|cellPadding
expr_stmt|;
block|}
comment|/** 	 * @return Returns the cellSpacing. 	 */
specifier|public
name|int
name|getCellSpacing
parameter_list|()
block|{
return|return
name|cellSpacing
return|;
block|}
comment|/** 	 * @param cellSpacing The cellSpacing to set. 	 */
specifier|public
name|void
name|setCellSpacing
parameter_list|(
name|int
name|cellSpacing
parameter_list|)
block|{
name|this
operator|.
name|cellSpacing
operator|=
name|cellSpacing
expr_stmt|;
block|}
comment|/** 	 * @return Returns the rows. 	 */
specifier|public
name|ArrayList
name|getRows
parameter_list|()
block|{
return|return
name|rows
return|;
block|}
comment|/** 	 * @param rows The rows to set. 	 */
specifier|public
name|void
name|setRows
parameter_list|(
name|ArrayList
name|rows
parameter_list|)
block|{
name|this
operator|.
name|rows
operator|=
name|rows
expr_stmt|;
block|}
comment|/** 	 * @return Returns the dataPageSize. 	 */
specifier|public
name|String
name|getDataPageSize
parameter_list|()
block|{
return|return
name|dataPageSize
return|;
block|}
comment|/** 	 * @param dataPageSize The dataPageSize to set. 	 */
specifier|public
name|void
name|setDataPageSize
parameter_list|(
name|String
name|dataPageSize
parameter_list|)
block|{
name|this
operator|.
name|dataPageSize
operator|=
name|dataPageSize
expr_stmt|;
block|}
comment|/** 	 * @return Returns the frame. 	 */
specifier|public
name|String
name|getFrame
parameter_list|()
block|{
return|return
name|frame
return|;
block|}
comment|/** 	 * @param frame The frame to set. 	 */
specifier|public
name|void
name|setFrame
parameter_list|(
name|String
name|frame
parameter_list|)
block|{
name|this
operator|.
name|frame
operator|=
name|frame
expr_stmt|;
block|}
comment|/** 	 * @return Returns the rules. 	 */
specifier|public
name|String
name|getRules
parameter_list|()
block|{
return|return
name|rules
return|;
block|}
comment|/** 	 * @param rules The rules to set. 	 */
specifier|public
name|void
name|setRules
parameter_list|(
name|String
name|rules
parameter_list|)
block|{
name|this
operator|.
name|rules
operator|=
name|rules
expr_stmt|;
block|}
comment|/** 	 * @return Returns the summary. 	 */
specifier|public
name|String
name|getSummary
parameter_list|()
block|{
return|return
name|summary
return|;
block|}
comment|/** 	 * @param summary The summary to set. 	 */
specifier|public
name|void
name|setSummary
parameter_list|(
name|String
name|summary
parameter_list|)
block|{
name|this
operator|.
name|summary
operator|=
name|summary
expr_stmt|;
block|}
comment|/** 	 * @return Returns the width. 	 */
specifier|public
name|String
name|getWidth
parameter_list|()
block|{
return|return
name|width
return|;
block|}
comment|/** 	 * @param width The width to set. 	 */
specifier|public
name|void
name|setWidth
parameter_list|(
name|String
name|width
parameter_list|)
block|{
name|this
operator|.
name|width
operator|=
name|width
expr_stmt|;
block|}
comment|/** 	 *  	 */
specifier|public
name|Table
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|setTag
argument_list|(
literal|"table"
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|String
name|htmlForAttributes
parameter_list|()
block|{
name|StringBuffer
name|sb
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|super
operator|.
name|htmlForAttributes
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|htmlForAttribute
argument_list|(
literal|"border"
argument_list|,
name|this
operator|.
name|getBorder
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|htmlForAttribute
argument_list|(
literal|"cellpadding"
argument_list|,
name|this
operator|.
name|getCellPadding
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|htmlForAttribute
argument_list|(
literal|"cellspacing"
argument_list|,
name|this
operator|.
name|getCellSpacing
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|htmlForAttribute
argument_list|(
literal|"datapagesize"
argument_list|,
name|this
operator|.
name|getDataPageSize
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|htmlForAttribute
argument_list|(
literal|"frame"
argument_list|,
name|this
operator|.
name|getFrame
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|htmlForAttribute
argument_list|(
literal|"rules"
argument_list|,
name|this
operator|.
name|getRules
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|htmlForAttribute
argument_list|(
literal|"summary"
argument_list|,
name|this
operator|.
name|getSummary
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|htmlForAttribute
argument_list|(
literal|"width"
argument_list|,
name|this
operator|.
name|getWidth
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
operator|(
name|sb
operator|.
name|toString
argument_list|()
operator|)
return|;
block|}
block|}
end_class

end_unit

