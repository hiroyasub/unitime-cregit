begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.5 (University Timetabling Application)  * Copyright (C) 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|jgroups
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|Channel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|JChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|fork
operator|.
name|ForkChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|protocols
operator|.
name|FRAG2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|protocols
operator|.
name|RSVP
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|stack
operator|.
name|ProtocolStack
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|Debug
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|ApplicationProperty
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|SectioningChannelLookup
extends|extends
name|UniTimeChannelLookup
block|{
annotation|@
name|Override
specifier|public
name|Channel
name|getJGroupsChannel
parameter_list|(
name|Properties
name|p
parameter_list|)
block|{
try|try
block|{
if|if
condition|(
name|ApplicationProperty
operator|.
name|OnlineSchedulingClusterForkChannel
operator|.
name|isTrue
argument_list|()
condition|)
block|{
return|return
operator|new
name|ForkChannel
argument_list|(
name|super
operator|.
name|getJGroupsChannel
argument_list|(
name|p
argument_list|)
argument_list|,
literal|"forked-stack"
argument_list|,
literal|"sectioning-channel"
argument_list|,
literal|true
argument_list|,
name|ProtocolStack
operator|.
name|ABOVE
argument_list|,
name|FRAG2
operator|.
name|class
argument_list|,
operator|new
name|RSVP
argument_list|()
operator|.
name|setValue
argument_list|(
literal|"timeout"
argument_list|,
literal|60000
argument_list|)
operator|.
name|setValue
argument_list|(
literal|"resend_interval"
argument_list|,
literal|500
argument_list|)
operator|.
name|setValue
argument_list|(
literal|"ack_on_delivery"
argument_list|,
literal|false
argument_list|)
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|JChannel
argument_list|(
name|JGroupsUtils
operator|.
name|getConfigurator
argument_list|(
name|ApplicationProperty
operator|.
name|OnlineSchedulingClusterConfiguration
operator|.
name|value
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Debug
operator|.
name|error
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
block|}
end_class

end_unit

