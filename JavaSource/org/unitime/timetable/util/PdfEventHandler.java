begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 - 3.5 (University Timetabling Application)  * Copyright (C) 2008 - 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|com
operator|.
name|lowagie
operator|.
name|text
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|com
operator|.
name|lowagie
operator|.
name|text
operator|.
name|DocumentException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|lowagie
operator|.
name|text
operator|.
name|Font
import|;
end_import

begin_import
import|import
name|com
operator|.
name|lowagie
operator|.
name|text
operator|.
name|pdf
operator|.
name|BaseFont
import|;
end_import

begin_import
import|import
name|com
operator|.
name|lowagie
operator|.
name|text
operator|.
name|pdf
operator|.
name|PdfContentByte
import|;
end_import

begin_import
import|import
name|com
operator|.
name|lowagie
operator|.
name|text
operator|.
name|pdf
operator|.
name|PdfPageEventHelper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|lowagie
operator|.
name|text
operator|.
name|pdf
operator|.
name|PdfWriter
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|PdfEventHandler
extends|extends
name|PdfPageEventHelper
block|{
specifier|private
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|Localization
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|BaseFont
name|baseFont
decl_stmt|;
specifier|private
name|float
name|fontSize
decl_stmt|;
specifier|private
name|Date
name|dateTime
init|=
literal|null
decl_stmt|;
specifier|private
name|Formats
operator|.
name|Format
argument_list|<
name|Date
argument_list|>
name|dateFormat
init|=
name|Formats
operator|.
name|getDateFormat
argument_list|(
name|Formats
operator|.
name|Pattern
operator|.
name|DATE_TIME_STAMP
argument_list|)
decl_stmt|;
comment|/**      * Constructor for PdfEventHandler      *       */
specifier|public
name|PdfEventHandler
parameter_list|()
throws|throws
name|DocumentException
throws|,
name|IOException
block|{
name|super
argument_list|()
expr_stmt|;
name|Font
name|font
init|=
name|PdfFont
operator|.
name|getSmallFont
argument_list|()
decl_stmt|;
name|setBaseFont
argument_list|(
name|font
operator|.
name|getBaseFont
argument_list|()
argument_list|)
expr_stmt|;
name|setFontSize
argument_list|(
name|font
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
comment|/**      * Initialize Pdf footer      * @param document      * @param outputStream      * @return PdfWriter      */
specifier|public
specifier|static
name|PdfWriter
name|initFooter
parameter_list|(
name|Document
name|document
parameter_list|,
name|OutputStream
name|outputStream
parameter_list|)
throws|throws
name|DocumentException
throws|,
name|IOException
block|{
name|PdfWriter
name|iWriter
init|=
name|PdfWriter
operator|.
name|getInstance
argument_list|(
name|document
argument_list|,
name|outputStream
argument_list|)
decl_stmt|;
name|iWriter
operator|.
name|setPageEvent
argument_list|(
operator|new
name|PdfEventHandler
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|iWriter
return|;
block|}
comment|/**      * Print footer string on each page      * @param writer      * @param document      */
specifier|public
name|void
name|onEndPage
parameter_list|(
name|PdfWriter
name|writer
parameter_list|,
name|Document
name|document
parameter_list|)
block|{
if|if
condition|(
name|getDateTime
argument_list|()
operator|==
literal|null
condition|)
block|{
name|setDateTime
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|PdfContentByte
name|cb
init|=
name|writer
operator|.
name|getDirectContent
argument_list|()
decl_stmt|;
name|cb
operator|.
name|beginText
argument_list|()
expr_stmt|;
name|cb
operator|.
name|setFontAndSize
argument_list|(
name|getBaseFont
argument_list|()
argument_list|,
name|getFontSize
argument_list|()
argument_list|)
expr_stmt|;
name|cb
operator|.
name|showTextAligned
argument_list|(
name|PdfContentByte
operator|.
name|ALIGN_LEFT
argument_list|,
name|getDateFormat
argument_list|()
operator|.
name|format
argument_list|(
name|getDateTime
argument_list|()
argument_list|)
argument_list|,
name|document
operator|.
name|left
argument_list|()
argument_list|,
literal|20
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|cb
operator|.
name|showTextAligned
argument_list|(
name|PdfContentByte
operator|.
name|ALIGN_RIGHT
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|document
operator|.
name|getPageNumber
argument_list|()
argument_list|)
argument_list|,
name|document
operator|.
name|right
argument_list|()
argument_list|,
literal|20
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|cb
operator|.
name|showTextAligned
argument_list|(
name|PdfContentByte
operator|.
name|ALIGN_CENTER
argument_list|,
name|MESSAGES
operator|.
name|pdfCopyright
argument_list|(
name|Constants
operator|.
name|getVersion
argument_list|()
argument_list|)
argument_list|,
operator|(
name|document
operator|.
name|left
argument_list|()
operator|+
name|document
operator|.
name|right
argument_list|()
operator|)
operator|/
literal|2
argument_list|,
literal|20
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|cb
operator|.
name|endText
argument_list|()
expr_stmt|;
return|return;
block|}
specifier|private
name|BaseFont
name|getBaseFont
parameter_list|()
block|{
return|return
name|baseFont
return|;
block|}
specifier|private
name|void
name|setBaseFont
parameter_list|(
name|BaseFont
name|baseFont
parameter_list|)
block|{
name|this
operator|.
name|baseFont
operator|=
name|baseFont
expr_stmt|;
block|}
specifier|private
name|float
name|getFontSize
parameter_list|()
block|{
return|return
name|fontSize
return|;
block|}
specifier|private
name|void
name|setFontSize
parameter_list|(
name|float
name|fontSize
parameter_list|)
block|{
name|this
operator|.
name|fontSize
operator|=
name|fontSize
expr_stmt|;
block|}
specifier|private
name|Date
name|getDateTime
parameter_list|()
block|{
return|return
name|dateTime
return|;
block|}
specifier|private
name|void
name|setDateTime
parameter_list|(
name|Date
name|dateTime
parameter_list|)
block|{
name|this
operator|.
name|dateTime
operator|=
name|dateTime
expr_stmt|;
block|}
specifier|private
name|Formats
operator|.
name|Format
argument_list|<
name|Date
argument_list|>
name|getDateFormat
parameter_list|()
block|{
return|return
name|dateFormat
return|;
block|}
block|}
end_class

end_unit

