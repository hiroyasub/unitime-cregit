begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|queue
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|Address
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|ApplicationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|events
operator|.
name|QueryEncoderBackend
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|SessionDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|_RootDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|UserContext
import|;
end_import

begin_comment
comment|/**  *   * @author Tomas Muller  *  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|QueueItem
implements|implements
name|Log
implements|,
name|Serializable
implements|,
name|Comparable
argument_list|<
name|QueueItem
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|protected
specifier|static
name|GwtMessages
name|MSG
init|=
name|Localization
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|Long
name|iSessionId
decl_stmt|;
specifier|private
name|String
name|iOwnerId
decl_stmt|;
specifier|private
name|String
name|iOwnerName
decl_stmt|;
specifier|private
name|String
name|iOwnerEmail
decl_stmt|;
specifier|private
specifier|transient
name|File
name|iOutput
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iOutputName
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iOutputLink
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|QueueMessage
argument_list|>
name|iLog
init|=
operator|new
name|ArrayList
argument_list|<
name|QueueMessage
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|String
name|iStatus
init|=
literal|null
decl_stmt|;
specifier|private
name|Date
name|iCreated
init|=
operator|new
name|Date
argument_list|()
decl_stmt|,
name|iStarted
init|=
literal|null
decl_stmt|,
name|iFinished
init|=
literal|null
decl_stmt|;
specifier|private
specifier|transient
name|Throwable
name|iException
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iLocale
init|=
literal|null
decl_stmt|;
specifier|private
name|double
name|iProgress
init|=
literal|0
decl_stmt|;
specifier|private
name|double
name|iMaxProgress
init|=
literal|100.0
decl_stmt|;
specifier|private
name|String
name|iId
init|=
literal|null
decl_stmt|;
specifier|private
name|Address
name|iAddress
init|=
literal|null
decl_stmt|;
empty_stmt|;
specifier|public
name|QueueItem
parameter_list|(
name|Long
name|sessionId
parameter_list|,
name|UserContext
name|owner
parameter_list|)
block|{
name|iSessionId
operator|=
name|sessionId
expr_stmt|;
name|iOwnerId
operator|=
name|owner
operator|.
name|getExternalUserId
argument_list|()
expr_stmt|;
name|iOwnerName
operator|=
name|owner
operator|.
name|getName
argument_list|()
expr_stmt|;
name|iOwnerEmail
operator|=
name|owner
operator|.
name|getEmail
argument_list|()
expr_stmt|;
name|iLocale
operator|=
name|Localization
operator|.
name|getLocale
argument_list|()
expr_stmt|;
name|iStatus
operator|=
name|MSG
operator|.
name|scriptStatusWaiting
argument_list|()
expr_stmt|;
block|}
specifier|public
name|QueueItem
parameter_list|(
name|Session
name|session
parameter_list|,
name|UserContext
name|owner
parameter_list|)
block|{
name|this
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|owner
argument_list|)
expr_stmt|;
block|}
specifier|public
name|QueueItem
parameter_list|(
name|UserContext
name|owner
parameter_list|)
block|{
name|this
argument_list|(
name|owner
operator|.
name|getCurrentAcademicSessionId
argument_list|()
argument_list|,
name|owner
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Long
name|getSessionId
parameter_list|()
block|{
return|return
name|iSessionId
return|;
block|}
specifier|public
name|Session
name|getSession
parameter_list|()
block|{
return|return
name|SessionDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|iSessionId
argument_list|)
return|;
block|}
specifier|public
name|String
name|getOwnerId
parameter_list|()
block|{
return|return
name|iOwnerId
return|;
block|}
specifier|public
name|String
name|getOwnerName
parameter_list|()
block|{
return|return
name|iOwnerName
return|;
block|}
specifier|public
name|boolean
name|hasOwnerEmail
parameter_list|()
block|{
return|return
name|iOwnerEmail
operator|!=
literal|null
operator|&&
operator|!
name|iOwnerEmail
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getOwnerEmail
parameter_list|()
block|{
return|return
name|iOwnerEmail
return|;
block|}
specifier|public
name|String
name|getLocale
parameter_list|()
block|{
return|return
name|iLocale
return|;
block|}
specifier|public
specifier|abstract
name|String
name|type
parameter_list|()
function_decl|;
specifier|public
specifier|abstract
name|String
name|name
parameter_list|()
function_decl|;
specifier|protected
specifier|abstract
name|void
name|execute
parameter_list|()
throws|throws
name|Exception
function_decl|;
specifier|public
name|void
name|executeItem
parameter_list|()
block|{
name|iStarted
operator|=
operator|new
name|Date
argument_list|()
expr_stmt|;
name|ApplicationProperties
operator|.
name|setSessionId
argument_list|(
name|getSessionId
argument_list|()
argument_list|)
expr_stmt|;
name|Localization
operator|.
name|setLocale
argument_list|(
name|getLocale
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|execute
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ThreadDeath
name|e
parameter_list|)
block|{
name|fatal
argument_list|(
name|MSG
operator|.
name|scriptLogExecutionStopped
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fatal
argument_list|(
name|MSG
operator|.
name|scriptLogExecutionFailed
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|ApplicationProperties
operator|.
name|setSessionId
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|_RootDAO
operator|.
name|closeCurrentThreadSessions
argument_list|()
expr_stmt|;
name|Localization
operator|.
name|removeLocale
argument_list|()
expr_stmt|;
block|}
name|iFinished
operator|=
operator|new
name|Date
argument_list|()
expr_stmt|;
name|iStatus
operator|=
name|MSG
operator|.
name|scriptStatusAllDone
argument_list|()
expr_stmt|;
if|if
condition|(
name|iException
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|iException
operator|instanceof
name|ThreadDeath
condition|)
name|iStatus
operator|=
name|MSG
operator|.
name|scriptStatusKilled
argument_list|()
expr_stmt|;
else|else
name|iStatus
operator|=
name|MSG
operator|.
name|scriptStatusFailed
argument_list|(
name|iException
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|boolean
name|hasOutput
parameter_list|()
block|{
return|return
name|iFinished
operator|!=
literal|null
operator|&&
name|iOutputLink
operator|!=
literal|null
return|;
block|}
specifier|public
name|File
name|output
parameter_list|()
block|{
return|return
name|iOutput
return|;
block|}
specifier|public
name|void
name|setOutput
parameter_list|(
name|File
name|output
parameter_list|)
block|{
name|iOutput
operator|=
name|output
expr_stmt|;
block|}
specifier|protected
name|File
name|createOutput
parameter_list|(
name|String
name|prefix
parameter_list|,
name|String
name|ext
parameter_list|)
block|{
if|if
condition|(
name|iOutput
operator|!=
literal|null
condition|)
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|MSG
operator|.
name|scriptErrorOutputAlreadyCreated
argument_list|()
argument_list|)
throw|;
name|iOutput
operator|=
name|ApplicationProperties
operator|.
name|getTempFile
argument_list|(
name|prefix
argument_list|,
name|ext
argument_list|)
expr_stmt|;
name|iOutputName
operator|=
name|prefix
operator|+
literal|"."
operator|+
name|ext
expr_stmt|;
name|iOutputLink
operator|=
literal|"qpfile?q="
operator|+
name|QueryEncoderBackend
operator|.
name|encode
argument_list|(
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|iOutput
return|;
block|}
specifier|public
name|String
name|getOutputName
parameter_list|()
block|{
return|return
name|iOutputName
return|;
block|}
specifier|public
name|String
name|getOutputLink
parameter_list|()
block|{
if|if
condition|(
name|iOutput
operator|!=
literal|null
condition|)
return|return
literal|"temp/"
operator|+
name|iOutput
operator|.
name|getName
argument_list|()
return|;
return|return
name|iOutputLink
return|;
block|}
specifier|public
name|List
argument_list|<
name|QueueMessage
argument_list|>
name|getLog
parameter_list|()
block|{
synchronized|synchronized
init|(
name|iLog
init|)
block|{
return|return
operator|new
name|ArrayList
argument_list|<
name|QueueMessage
argument_list|>
argument_list|(
name|iLog
argument_list|)
return|;
block|}
block|}
specifier|public
name|String
name|log
parameter_list|()
block|{
synchronized|synchronized
init|(
name|iLog
init|)
block|{
name|String
name|ret
init|=
literal|""
decl_stmt|;
for|for
control|(
name|QueueMessage
name|m
range|:
name|iLog
control|)
block|{
if|if
condition|(
operator|!
name|ret
operator|.
name|isEmpty
argument_list|()
condition|)
name|ret
operator|+=
literal|"<br>"
expr_stmt|;
name|ret
operator|+=
name|m
operator|.
name|toHTML
argument_list|()
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
block|}
specifier|public
name|void
name|log
parameter_list|(
name|String
name|message
parameter_list|)
block|{
synchronized|synchronized
init|(
name|iLog
init|)
block|{
name|iLog
operator|.
name|add
argument_list|(
operator|new
name|QueueMessage
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|HTML
argument_list|,
name|message
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setStatus
parameter_list|(
name|String
name|status
parameter_list|)
block|{
name|setStatus
argument_list|(
name|status
argument_list|,
literal|100.0
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setStatus
parameter_list|(
name|String
name|status
parameter_list|,
name|double
name|maxProgress
parameter_list|)
block|{
synchronized|synchronized
init|(
name|iLog
init|)
block|{
name|iStatus
operator|=
name|status
expr_stmt|;
name|iProgress
operator|=
literal|0
expr_stmt|;
name|iMaxProgress
operator|=
name|maxProgress
expr_stmt|;
name|iLog
operator|.
name|add
argument_list|(
operator|new
name|QueueMessage
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|STAGE
argument_list|,
name|status
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|status
parameter_list|()
block|{
return|return
name|iStatus
return|;
block|}
specifier|public
name|double
name|progress
parameter_list|()
block|{
return|return
name|iProgress
operator|/
name|iMaxProgress
return|;
block|}
specifier|public
name|void
name|incProgress
parameter_list|()
block|{
name|iProgress
operator|++
expr_stmt|;
block|}
specifier|public
name|void
name|incProgress
parameter_list|(
name|double
name|value
parameter_list|)
block|{
name|iProgress
operator|+=
name|value
expr_stmt|;
block|}
specifier|public
name|void
name|setProgress
parameter_list|(
name|double
name|value
parameter_list|)
block|{
name|iProgress
operator|=
name|value
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasError
parameter_list|()
block|{
return|return
name|iException
operator|!=
literal|null
return|;
block|}
specifier|protected
name|void
name|setError
parameter_list|(
name|Throwable
name|exception
parameter_list|)
block|{
name|iException
operator|=
name|exception
expr_stmt|;
block|}
specifier|public
name|Throwable
name|error
parameter_list|()
block|{
return|return
name|iException
return|;
block|}
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getHost
parameter_list|()
block|{
return|return
operator|(
name|iAddress
operator|==
literal|null
condition|?
literal|"Local"
else|:
name|iAddress
operator|.
name|toString
argument_list|()
operator|)
return|;
block|}
specifier|public
name|Address
name|getAddress
parameter_list|()
block|{
return|return
name|iAddress
return|;
block|}
specifier|public
name|void
name|setAddress
parameter_list|(
name|Address
name|address
parameter_list|)
block|{
name|iAddress
operator|=
name|address
expr_stmt|;
block|}
specifier|public
name|Date
name|created
parameter_list|()
block|{
return|return
name|iCreated
return|;
block|}
specifier|public
name|Date
name|started
parameter_list|()
block|{
return|return
name|iStarted
return|;
block|}
specifier|public
name|Date
name|finished
parameter_list|()
block|{
return|return
name|iFinished
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isDebugEnabled
parameter_list|()
block|{
return|return
name|Logger
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
operator|.
name|isDebugEnabled
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isErrorEnabled
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isFatalEnabled
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isInfoEnabled
parameter_list|()
block|{
return|return
name|Logger
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
operator|.
name|isInfoEnabled
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isTraceEnabled
parameter_list|()
block|{
return|return
name|Logger
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
operator|.
name|isTraceEnabled
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isWarnEnabled
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|trace
parameter_list|(
name|Object
name|message
parameter_list|)
block|{
name|Logger
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
operator|.
name|trace
argument_list|(
name|message
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|iLog
init|)
block|{
name|iLog
operator|.
name|add
argument_list|(
operator|new
name|QueueMessage
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|TRACE
argument_list|,
name|message
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|trace
parameter_list|(
name|Object
name|message
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
name|Logger
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
operator|.
name|trace
argument_list|(
name|message
argument_list|,
name|t
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|iLog
init|)
block|{
name|iLog
operator|.
name|add
argument_list|(
operator|new
name|QueueMessage
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|TRACE
argument_list|,
name|message
argument_list|,
name|t
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|debug
parameter_list|(
name|Object
name|message
parameter_list|)
block|{
name|Logger
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
operator|.
name|debug
argument_list|(
name|message
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|iLog
init|)
block|{
name|iLog
operator|.
name|add
argument_list|(
operator|new
name|QueueMessage
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|DEBUG
argument_list|,
name|message
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|debug
parameter_list|(
name|Object
name|message
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
name|Logger
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
operator|.
name|debug
argument_list|(
name|message
argument_list|,
name|t
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|iLog
init|)
block|{
name|iLog
operator|.
name|add
argument_list|(
operator|new
name|QueueMessage
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|DEBUG
argument_list|,
name|message
argument_list|,
name|t
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|info
parameter_list|(
name|Object
name|message
parameter_list|)
block|{
name|Logger
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
operator|.
name|info
argument_list|(
name|message
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|iLog
init|)
block|{
name|iLog
operator|.
name|add
argument_list|(
operator|new
name|QueueMessage
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|INFO
argument_list|,
name|message
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|info
parameter_list|(
name|Object
name|message
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
name|Logger
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
operator|.
name|info
argument_list|(
name|message
argument_list|,
name|t
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|iLog
init|)
block|{
name|iLog
operator|.
name|add
argument_list|(
operator|new
name|QueueMessage
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|INFO
argument_list|,
name|message
argument_list|,
name|t
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|warn
parameter_list|(
name|Object
name|message
parameter_list|)
block|{
name|Logger
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
operator|.
name|warn
argument_list|(
name|message
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|iLog
init|)
block|{
name|iLog
operator|.
name|add
argument_list|(
operator|new
name|QueueMessage
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|WARN
argument_list|,
name|message
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|warn
parameter_list|(
name|Object
name|message
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
name|Logger
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
operator|.
name|warn
argument_list|(
name|message
argument_list|,
name|t
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|iLog
init|)
block|{
name|iLog
operator|.
name|add
argument_list|(
operator|new
name|QueueMessage
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|WARN
argument_list|,
name|message
argument_list|,
name|t
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|error
parameter_list|(
name|Object
name|message
parameter_list|)
block|{
name|Logger
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
operator|.
name|error
argument_list|(
name|message
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|iLog
init|)
block|{
name|iLog
operator|.
name|add
argument_list|(
operator|new
name|QueueMessage
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|ERROR
argument_list|,
name|message
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|error
parameter_list|(
name|Object
name|message
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
name|Logger
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
operator|.
name|error
argument_list|(
name|message
argument_list|,
name|t
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|iLog
init|)
block|{
name|iLog
operator|.
name|add
argument_list|(
operator|new
name|QueueMessage
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|ERROR
argument_list|,
name|message
argument_list|,
name|t
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|fatal
parameter_list|(
name|Object
name|message
parameter_list|)
block|{
name|Logger
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
operator|.
name|fatal
argument_list|(
name|message
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|iLog
init|)
block|{
name|iLog
operator|.
name|add
argument_list|(
operator|new
name|QueueMessage
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|FATAL
argument_list|,
name|message
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|fatal
parameter_list|(
name|Object
name|message
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
name|Logger
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
operator|.
name|fatal
argument_list|(
name|message
argument_list|,
name|t
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|iLog
init|)
block|{
name|iLog
operator|.
name|add
argument_list|(
operator|new
name|QueueMessage
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|FATAL
argument_list|,
name|message
argument_list|,
name|t
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|QueueItem
name|item
parameter_list|)
block|{
name|int
name|cmp
init|=
name|created
argument_list|()
operator|.
name|compareTo
argument_list|(
name|item
operator|.
name|created
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
return|return
name|getId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|item
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

