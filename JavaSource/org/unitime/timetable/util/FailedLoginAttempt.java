begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 - 3.5 (University Timetabling Application)  * Copyright (C) 2008 - 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|ApplicationProperty
import|;
end_import

begin_comment
comment|/**  * @author Stephanie Schluttenhofer  */
end_comment

begin_class
specifier|public
class|class
name|FailedLoginAttempt
block|{
specifier|private
name|String
name|userId
decl_stmt|;
specifier|private
name|int
name|count
decl_stmt|;
specifier|private
name|Date
name|lastFailedAttempt
decl_stmt|;
specifier|public
name|FailedLoginAttempt
parameter_list|(
name|String
name|userId
parameter_list|,
name|int
name|count
parameter_list|,
name|Date
name|lastFailedAttempt
parameter_list|)
block|{
name|this
operator|.
name|userId
operator|=
name|userId
expr_stmt|;
name|this
operator|.
name|count
operator|=
name|count
expr_stmt|;
name|this
operator|.
name|lastFailedAttempt
operator|=
name|lastFailedAttempt
expr_stmt|;
block|}
specifier|public
name|boolean
name|isUserLockedOut
parameter_list|(
name|String
name|user
parameter_list|,
name|Date
name|attemptTime
parameter_list|)
block|{
if|if
condition|(
name|userId
operator|!=
literal|null
operator|&&
name|user
operator|!=
literal|null
operator|&&
name|userId
operator|.
name|equals
argument_list|(
name|user
argument_list|)
operator|&&
name|count
operator|>=
name|ApplicationProperty
operator|.
name|LoginMaxFailedAttempts
operator|.
name|intValue
argument_list|()
condition|)
block|{
name|Calendar
name|checkTime
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|checkTime
operator|.
name|setTime
argument_list|(
name|lastFailedAttempt
argument_list|)
expr_stmt|;
name|Calendar
name|attempt
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|attempt
operator|.
name|setTime
argument_list|(
name|attemptTime
argument_list|)
expr_stmt|;
name|checkTime
operator|.
name|add
argument_list|(
name|Calendar
operator|.
name|MINUTE
argument_list|,
name|ApplicationProperty
operator|.
name|LoginFailedLockout
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
name|lockedOut
init|=
name|attempt
operator|.
name|before
argument_list|(
name|checkTime
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|lockedOut
condition|)
block|{
name|count
operator|=
literal|0
expr_stmt|;
block|}
return|return
operator|(
name|lockedOut
operator|)
return|;
block|}
else|else
block|{
return|return
operator|(
literal|false
operator|)
return|;
block|}
block|}
specifier|public
name|String
name|getUserId
parameter_list|()
block|{
return|return
name|userId
return|;
block|}
specifier|public
name|void
name|setUserId
parameter_list|(
name|String
name|userId
parameter_list|)
block|{
name|this
operator|.
name|userId
operator|=
name|userId
expr_stmt|;
block|}
specifier|public
name|int
name|getCount
parameter_list|()
block|{
return|return
name|count
return|;
block|}
specifier|public
name|void
name|setCount
parameter_list|(
name|int
name|count
parameter_list|)
block|{
name|this
operator|.
name|count
operator|=
name|count
expr_stmt|;
block|}
specifier|public
name|Date
name|getLastFailedAttempt
parameter_list|()
block|{
return|return
name|lastFailedAttempt
return|;
block|}
specifier|public
name|void
name|setLastFailedAttempt
parameter_list|(
name|Date
name|lastFailedAttempt
parameter_list|)
block|{
name|this
operator|.
name|lastFailedAttempt
operator|=
name|lastFailedAttempt
expr_stmt|;
block|}
block|}
end_class

end_unit

