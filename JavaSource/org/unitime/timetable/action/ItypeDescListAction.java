begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.0 (University Course Timetabling& Student Sectioning Application)  * Copyright (C) 2007, UniTime.org, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program; if not, write to the Free Software Foundation, Inc.,  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|action
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForward
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|Debug
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|Web
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|WebTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ItypeDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|ItypeDescDAO
import|;
end_import

begin_comment
comment|/**   * MyEclipse Struts  * Creation date: 10-03-2005  *   * XDoclet definition:  * @struts:action validate="true"  */
end_comment

begin_class
specifier|public
class|class
name|ItypeDescListAction
extends|extends
name|Action
block|{
comment|// --------------------------------------------------------- Instance Variables
comment|// --------------------------------------------------------- Methods
comment|/**  	 * Method execute 	 * @param mapping 	 * @param form 	 * @param request 	 * @param response 	 * @return ActionForward 	 */
specifier|public
name|ActionForward
name|execute
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|ActionForm
name|form
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|errM
init|=
literal|""
decl_stmt|;
comment|// Check if user is logged in
name|HttpSession
name|webSession
init|=
name|request
operator|.
name|getSession
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|Web
operator|.
name|isLoggedIn
argument_list|(
name|webSession
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Access Denied."
argument_list|)
throw|;
block|}
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
init|=
literal|null
decl_stmt|;
comment|// Create new table
name|WebTable
name|webTable
init|=
operator|new
name|WebTable
argument_list|(
literal|6
argument_list|,
literal|"Instructional Types"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"ITYPE"
block|,
literal|"ABBV"
block|,
literal|"DESCRIPTION"
block|,
literal|"SIS_REF"
block|,
literal|"SMAS_ABBV"
block|,
literal|"BASIC"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|}
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// Loop through ItypeDesc class
try|try
block|{
name|ItypeDescDAO
name|itypeDescDao
init|=
operator|new
name|ItypeDescDAO
argument_list|()
decl_stmt|;
name|hibSession
operator|=
name|itypeDescDao
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|List
name|itypeDescList
init|=
name|hibSession
operator|.
name|createCriteria
argument_list|(
name|ItypeDesc
operator|.
name|class
argument_list|)
operator|.
name|list
argument_list|()
decl_stmt|;
name|Iterator
name|iterItypeDesc
init|=
name|itypeDescList
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iterItypeDesc
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|ItypeDesc
name|itypeDesc
init|=
operator|(
name|ItypeDesc
operator|)
name|iterItypeDesc
operator|.
name|next
argument_list|()
decl_stmt|;
comment|// Add to web table
name|webTable
operator|.
name|addLine
argument_list|(
literal|"onclick=\"document.location.href='itypeDescEdit.do?op=edit&id="
operator|+
name|itypeDesc
operator|.
name|getItype
argument_list|()
operator|+
literal|"';\""
argument_list|,
operator|new
name|String
index|[]
block|{
name|itypeDesc
operator|.
name|getItype
argument_list|()
operator|.
name|toString
argument_list|()
block|,
name|itypeDesc
operator|.
name|getAbbv
argument_list|()
block|,
name|itypeDesc
operator|.
name|getDesc
argument_list|()
block|,
name|itypeDesc
operator|.
name|getSis_ref
argument_list|()
block|,
name|itypeDesc
operator|.
name|getSmas_abbv
argument_list|()
block|,
name|itypeDesc
operator|.
name|getBasic
argument_list|()
operator|.
name|toString
argument_list|()
block|}
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Debug
operator|.
name|error
argument_list|(
name|e
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"fail"
argument_list|)
return|;
block|}
finally|finally
block|{
comment|//if(hibSession!=null&& hibSession.isOpen()) hibSession.close();
block|}
name|String
name|tblData
init|=
name|webTable
operator|.
name|printTable
argument_list|()
decl_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"itypeDescList"
argument_list|,
name|errM
operator|+
name|tblData
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"success"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

