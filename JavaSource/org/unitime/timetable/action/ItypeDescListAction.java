begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|action
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts2
operator|.
name|convention
operator|.
name|annotation
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts2
operator|.
name|convention
operator|.
name|annotation
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts2
operator|.
name|tiles
operator|.
name|annotation
operator|.
name|TilesDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts2
operator|.
name|tiles
operator|.
name|annotation
operator|.
name|TilesDefinitions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts2
operator|.
name|tiles
operator|.
name|annotation
operator|.
name|TilesPutAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|WebTable
operator|.
name|WebTableLine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|messages
operator|.
name|CourseMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
operator|.
name|BlankForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ItypeDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|rights
operator|.
name|Right
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|ExportUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|webutil
operator|.
name|PdfWebTable
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|Action
argument_list|(
name|value
operator|=
literal|"itypeDescList"
argument_list|,
name|results
operator|=
block|{
annotation|@
name|Result
argument_list|(
name|name
operator|=
literal|"success"
argument_list|,
name|type
operator|=
literal|"tiles"
argument_list|,
name|location
operator|=
literal|"itypeDescList.tiles"
argument_list|)
block|,
block|}
argument_list|)
annotation|@
name|TilesDefinitions
argument_list|(
name|value
operator|=
block|{
annotation|@
name|TilesDefinition
argument_list|(
name|name
operator|=
literal|"itypeDescList.tiles"
argument_list|,
name|extend
operator|=
literal|"baseLayout"
argument_list|,
name|putAttributes
operator|=
block|{
annotation|@
name|TilesPutAttribute
argument_list|(
name|name
operator|=
literal|"title"
argument_list|,
name|value
operator|=
literal|"Instructional Types"
argument_list|)
block|,
annotation|@
name|TilesPutAttribute
argument_list|(
name|name
operator|=
literal|"body"
argument_list|,
name|value
operator|=
literal|"/admin/itypeDescList.jsp"
argument_list|)
block|,
annotation|@
name|TilesPutAttribute
argument_list|(
name|name
operator|=
literal|"showNavigation"
argument_list|,
name|value
operator|=
literal|"false"
argument_list|,
name|cascade
operator|=
literal|true
argument_list|)
block|}
argument_list|)
block|}
argument_list|)
specifier|public
class|class
name|ItypeDescListAction
extends|extends
name|UniTimeAction
argument_list|<
name|BlankForm
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1462237807775084625L
decl_stmt|;
specifier|protected
name|CourseMessages
name|MSG
init|=
name|Localization
operator|.
name|create
argument_list|(
name|CourseMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
name|String
name|ord
decl_stmt|;
specifier|public
name|String
name|getOrd
parameter_list|()
block|{
return|return
name|ord
return|;
block|}
specifier|public
name|void
name|setOrd
parameter_list|(
name|String
name|ord
parameter_list|)
block|{
name|this
operator|.
name|ord
operator|=
name|ord
expr_stmt|;
block|}
specifier|protected
name|Integer
name|id
decl_stmt|;
specifier|public
name|Integer
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Integer
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|execute
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Check if user is logged in
name|sessionContext
operator|.
name|checkPermission
argument_list|(
name|Right
operator|.
name|InstructionalTypes
argument_list|)
expr_stmt|;
comment|// Create new table
name|PdfWebTable
name|webTable
init|=
operator|new
name|PdfWebTable
argument_list|(
literal|6
argument_list|,
literal|null
argument_list|,
literal|"itypeDescList.action?ord=%%"
argument_list|,
operator|new
name|String
index|[]
block|{
name|MSG
operator|.
name|fieldIType
argument_list|()
block|,
name|MSG
operator|.
name|fieldAbbreviation
argument_list|()
block|,
name|MSG
operator|.
name|fieldName
argument_list|()
block|,
name|MSG
operator|.
name|fieldReference
argument_list|()
block|,
name|MSG
operator|.
name|fieldType
argument_list|()
block|,
name|MSG
operator|.
name|fieldParent
argument_list|()
block|,
name|MSG
operator|.
name|fieldOrganized
argument_list|()
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"center"
block|}
argument_list|,
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|false
block|,
literal|true
block|,
literal|true
block|}
argument_list|)
decl_stmt|;
name|PdfWebTable
operator|.
name|setOrder
argument_list|(
name|sessionContext
argument_list|,
literal|"itypeDescList.ord"
argument_list|,
name|ord
argument_list|,
literal|1
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|ItypeDesc
operator|.
name|findAll
argument_list|(
literal|false
argument_list|)
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|ItypeDesc
name|itypeDesc
init|=
operator|(
name|ItypeDesc
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
comment|// Add to web table
name|WebTableLine
name|line
init|=
name|webTable
operator|.
name|addLine
argument_list|(
name|sessionContext
operator|.
name|hasPermission
argument_list|(
name|itypeDesc
argument_list|,
name|Right
operator|.
name|InstructionalTypeEdit
argument_list|)
condition|?
literal|"onclick=\"document.location='itypeDescEdit.action?id="
operator|+
name|itypeDesc
operator|.
name|getItype
argument_list|()
operator|+
literal|"';\""
else|:
literal|null
argument_list|,
operator|new
name|String
index|[]
block|{
name|itypeDesc
operator|.
name|getItype
argument_list|()
operator|.
name|toString
argument_list|()
block|,
name|itypeDesc
operator|.
name|getAbbv
argument_list|()
block|,
name|itypeDesc
operator|.
name|getDesc
argument_list|()
block|,
operator|(
name|itypeDesc
operator|.
name|getSis_ref
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|itypeDesc
operator|.
name|getSis_ref
argument_list|()
operator|)
block|,
name|itypeDesc
operator|.
name|getBasicType
argument_list|()
block|,
operator|(
name|itypeDesc
operator|.
name|getParent
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|itypeDesc
operator|.
name|getParent
argument_list|()
operator|.
name|getDesc
argument_list|()
operator|)
block|,
operator|(
name|itypeDesc
operator|.
name|isOrganized
argument_list|()
condition|?
name|MSG
operator|.
name|yes
argument_list|()
else|:
name|MSG
operator|.
name|no
argument_list|()
operator|)
block|}
argument_list|,
operator|new
name|Comparable
index|[]
block|{
name|itypeDesc
operator|.
name|getItype
argument_list|()
block|,
name|itypeDesc
operator|.
name|getAbbv
argument_list|()
block|,
name|itypeDesc
operator|.
name|getDesc
argument_list|()
block|,
operator|(
name|itypeDesc
operator|.
name|getSis_ref
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|itypeDesc
operator|.
name|getSis_ref
argument_list|()
operator|)
block|,
name|itypeDesc
operator|.
name|getBasic
argument_list|()
block|,
operator|(
name|itypeDesc
operator|.
name|getParent
argument_list|()
operator|==
literal|null
condition|?
name|Integer
operator|.
name|valueOf
argument_list|(
operator|-
literal|1
argument_list|)
else|:
name|itypeDesc
operator|.
name|getParent
argument_list|()
operator|.
name|getItype
argument_list|()
operator|)
block|,
operator|(
name|itypeDesc
operator|.
name|isOrganized
argument_list|()
condition|?
literal|0
else|:
literal|1
operator|)
block|}
argument_list|)
decl_stmt|;
if|if
condition|(
name|itypeDesc
operator|.
name|getItype
argument_list|()
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
name|line
operator|.
name|setBgColor
argument_list|(
literal|"rgb(168,187,225)"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|MSG
operator|.
name|actionExportPdf
argument_list|()
operator|.
name|equals
argument_list|(
name|op
argument_list|)
condition|)
block|{
name|ExportUtils
operator|.
name|exportPDF
argument_list|(
name|webTable
argument_list|,
name|PdfWebTable
operator|.
name|getOrder
argument_list|(
name|sessionContext
argument_list|,
literal|"itypeDescList.ord"
argument_list|)
argument_list|,
name|response
argument_list|,
literal|"itypes"
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
name|String
name|tblData
init|=
name|webTable
operator|.
name|printTable
argument_list|(
name|PdfWebTable
operator|.
name|getOrder
argument_list|(
name|sessionContext
argument_list|,
literal|"itypeDescList.ord"
argument_list|)
argument_list|)
decl_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"itypeDescList"
argument_list|,
name|tblData
argument_list|)
expr_stmt|;
return|return
literal|"success"
return|;
block|}
block|}
end_class

end_unit

