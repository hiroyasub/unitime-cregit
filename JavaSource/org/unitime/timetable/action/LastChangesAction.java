begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|action
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts2
operator|.
name|convention
operator|.
name|annotation
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts2
operator|.
name|convention
operator|.
name|annotation
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts2
operator|.
name|tiles
operator|.
name|annotation
operator|.
name|TilesDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts2
operator|.
name|tiles
operator|.
name|annotation
operator|.
name|TilesPutAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|WebTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|messages
operator|.
name|CourseMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
operator|.
name|LastChangesForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ChangeLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SubjectArea
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimetableManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|rights
operator|.
name|Right
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|ExportUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|webutil
operator|.
name|PdfWebTable
import|;
end_import

begin_comment
comment|/**   * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"/lastChanges"
argument_list|)
annotation|@
name|Action
argument_list|(
name|value
operator|=
literal|"lastChanges"
argument_list|,
name|results
operator|=
block|{
annotation|@
name|Result
argument_list|(
name|name
operator|=
literal|"list"
argument_list|,
name|type
operator|=
literal|"tiles"
argument_list|,
name|location
operator|=
literal|"lastChanges.tiles"
argument_list|)
block|,
block|}
argument_list|)
annotation|@
name|TilesDefinition
argument_list|(
name|name
operator|=
literal|"lastChanges.tiles"
argument_list|,
name|extend
operator|=
literal|"baseLayout"
argument_list|,
name|putAttributes
operator|=
block|{
annotation|@
name|TilesPutAttribute
argument_list|(
name|name
operator|=
literal|"title"
argument_list|,
name|value
operator|=
literal|"Last Changes"
argument_list|)
block|,
annotation|@
name|TilesPutAttribute
argument_list|(
name|name
operator|=
literal|"body"
argument_list|,
name|value
operator|=
literal|"/admin/lastChanges.jsp"
argument_list|)
block|,
annotation|@
name|TilesPutAttribute
argument_list|(
name|name
operator|=
literal|"showNavigation"
argument_list|,
name|value
operator|=
literal|"false"
argument_list|)
block|,
block|}
argument_list|)
specifier|public
class|class
name|LastChangesAction
extends|extends
name|UniTimeAction
argument_list|<
name|LastChangesForm
argument_list|>
block|{
comment|// Messages
specifier|protected
specifier|final
specifier|static
name|CourseMessages
name|MSG
init|=
name|Localization
operator|.
name|create
argument_list|(
name|CourseMessages
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
name|String
name|execute
parameter_list|()
throws|throws
name|Exception
block|{
name|sessionContext
operator|.
name|checkPermission
argument_list|(
name|Right
operator|.
name|Examinations
argument_list|)
expr_stmt|;
if|if
condition|(
name|getForm
argument_list|()
operator|==
literal|null
condition|)
name|setForm
argument_list|(
operator|new
name|LastChangesForm
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check Access
name|sessionContext
operator|.
name|checkPermission
argument_list|(
name|Right
operator|.
name|LastChanges
argument_list|)
expr_stmt|;
comment|// Read operation to be performed
name|String
name|op
init|=
operator|(
name|getForm
argument_list|()
operator|.
name|getOp
argument_list|()
operator|!=
literal|null
condition|?
name|getForm
argument_list|()
operator|.
name|getOp
argument_list|()
else|:
name|request
operator|.
name|getParameter
argument_list|(
literal|"op"
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
literal|"Apply"
operator|.
name|equals
argument_list|(
name|op
argument_list|)
operator|||
name|MSG
operator|.
name|buttonApply
argument_list|()
operator|.
name|equals
argument_list|(
name|op
argument_list|)
operator|||
literal|"Export PDF"
operator|.
name|equals
argument_list|(
name|op
argument_list|)
operator|||
name|MSG
operator|.
name|buttonExportPDF
argument_list|()
operator|.
name|equals
argument_list|(
name|op
argument_list|)
condition|)
block|{
name|getForm
argument_list|()
operator|.
name|save
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|getForm
argument_list|()
operator|.
name|load
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
name|Long
name|sessionId
init|=
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getCurrentAcademicSessionId
argument_list|()
decl_stmt|;
name|ArrayList
argument_list|<
name|Department
argument_list|>
name|departments
init|=
operator|new
name|ArrayList
argument_list|<
name|Department
argument_list|>
argument_list|()
decl_stmt|;
name|Department
name|d
init|=
operator|new
name|Department
argument_list|()
decl_stmt|;
name|d
operator|.
name|setUniqueId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|setDeptCode
argument_list|(
name|MSG
operator|.
name|itemAllDepartments
argument_list|()
argument_list|)
expr_stmt|;
name|d
operator|.
name|setName
argument_list|(
name|MSG
operator|.
name|itemAllDepartments
argument_list|()
argument_list|)
expr_stmt|;
name|d
operator|.
name|setExternalManager
argument_list|(
name|Boolean
operator|.
name|FALSE
argument_list|)
expr_stmt|;
name|departments
operator|.
name|add
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|departments
operator|.
name|addAll
argument_list|(
name|Department
operator|.
name|findAll
argument_list|(
name|sessionId
argument_list|)
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"departments"
argument_list|,
name|departments
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|SubjectArea
argument_list|>
name|subjects
init|=
operator|new
name|ArrayList
argument_list|<
name|SubjectArea
argument_list|>
argument_list|()
decl_stmt|;
name|SubjectArea
name|sa
init|=
operator|new
name|SubjectArea
argument_list|()
decl_stmt|;
name|sa
operator|.
name|setUniqueId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|sa
operator|.
name|setSubjectAreaAbbreviation
argument_list|(
name|MSG
operator|.
name|itemAllSubjects
argument_list|()
argument_list|)
expr_stmt|;
name|subjects
operator|.
name|add
argument_list|(
name|sa
argument_list|)
expr_stmt|;
name|subjects
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|SubjectArea
argument_list|>
argument_list|(
name|SubjectArea
operator|.
name|getSubjectAreaList
argument_list|(
name|sessionId
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"subjAreas"
argument_list|,
name|subjects
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|TimetableManager
argument_list|>
name|managers
init|=
operator|new
name|ArrayList
argument_list|<
name|TimetableManager
argument_list|>
argument_list|()
decl_stmt|;
name|TimetableManager
name|tm
init|=
operator|new
name|TimetableManager
argument_list|()
decl_stmt|;
name|tm
operator|.
name|setUniqueId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|tm
operator|.
name|setLastName
argument_list|(
name|MSG
operator|.
name|itemAllManagers
argument_list|()
argument_list|)
expr_stmt|;
name|managers
operator|.
name|add
argument_list|(
name|tm
argument_list|)
expr_stmt|;
name|managers
operator|.
name|addAll
argument_list|(
name|TimetableManager
operator|.
name|getManagerList
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"managers"
argument_list|,
name|managers
argument_list|)
expr_stmt|;
name|boolean
name|html
init|=
literal|true
decl_stmt|;
name|String
name|nl
init|=
operator|(
name|html
condition|?
literal|"<br>"
else|:
literal|"\n"
operator|)
decl_stmt|;
name|WebTable
operator|.
name|setOrder
argument_list|(
name|sessionContext
argument_list|,
literal|"lastChanges.ord2"
argument_list|,
name|request
operator|.
name|getParameter
argument_list|(
literal|"ord"
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|WebTable
name|webTable
init|=
operator|new
name|WebTable
argument_list|(
literal|7
argument_list|,
literal|"Last Changes"
argument_list|,
literal|"lastChanges.action?ord=%%"
argument_list|,
operator|new
name|String
index|[]
block|{
name|MSG
operator|.
name|columnDate
argument_list|()
operator|.
name|replace
argument_list|(
literal|"|"
argument_list|,
name|nl
argument_list|)
block|,
name|MSG
operator|.
name|columnDepartment
argument_list|()
operator|.
name|replace
argument_list|(
literal|"|"
argument_list|,
name|nl
argument_list|)
block|,
name|MSG
operator|.
name|columnSubject
argument_list|()
operator|.
name|replace
argument_list|(
literal|"|"
argument_list|,
name|nl
argument_list|)
block|,
name|MSG
operator|.
name|columnManager
argument_list|()
operator|.
name|replace
argument_list|(
literal|"|"
argument_list|,
name|nl
argument_list|)
block|,
name|MSG
operator|.
name|columnPage
argument_list|()
operator|.
name|replace
argument_list|(
literal|"|"
argument_list|,
name|nl
argument_list|)
block|,
name|MSG
operator|.
name|columnObject
argument_list|()
operator|.
name|replace
argument_list|(
literal|"|"
argument_list|,
name|nl
argument_list|)
block|,
name|MSG
operator|.
name|columnOperation
argument_list|()
operator|.
name|replace
argument_list|(
literal|"|"
argument_list|,
name|nl
argument_list|)
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|}
argument_list|,
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|}
argument_list|)
decl_stmt|;
name|List
name|changes
init|=
name|ChangeLog
operator|.
name|findLastNChanges
argument_list|(
name|sessionId
argument_list|,
operator|(
name|getForm
argument_list|()
operator|.
name|getManagerId
argument_list|()
operator|==
literal|null
operator|||
name|getForm
argument_list|()
operator|.
name|getManagerId
argument_list|()
operator|.
name|longValue
argument_list|()
operator|<
literal|0
condition|?
literal|null
else|:
name|getForm
argument_list|()
operator|.
name|getManagerId
argument_list|()
operator|)
argument_list|,
operator|(
name|getForm
argument_list|()
operator|.
name|getSubjAreaId
argument_list|()
operator|==
literal|null
operator|||
name|getForm
argument_list|()
operator|.
name|getSubjAreaId
argument_list|()
operator|.
name|longValue
argument_list|()
operator|<
literal|0
condition|?
literal|null
else|:
name|getForm
argument_list|()
operator|.
name|getSubjAreaId
argument_list|()
operator|)
argument_list|,
operator|(
name|getForm
argument_list|()
operator|.
name|getDepartmentId
argument_list|()
operator|==
literal|null
operator|||
name|getForm
argument_list|()
operator|.
name|getDepartmentId
argument_list|()
operator|.
name|longValue
argument_list|()
operator|<
literal|0
condition|?
literal|null
else|:
name|getForm
argument_list|()
operator|.
name|getDepartmentId
argument_list|()
operator|)
argument_list|,
name|getForm
argument_list|()
operator|.
name|getN
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|changes
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Iterator
name|i
init|=
name|changes
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
operator|(
name|ChangeLog
operator|)
name|i
operator|.
name|next
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|request
operator|.
name|setAttribute
argument_list|(
literal|"table"
argument_list|,
name|webTable
operator|.
name|printTable
argument_list|(
name|WebTable
operator|.
name|getOrder
argument_list|(
name|sessionContext
argument_list|,
literal|"lastChanges.ord2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
literal|"Export PDF"
operator|.
name|equals
argument_list|(
name|op
argument_list|)
operator|||
name|MSG
operator|.
name|buttonExportPDF
argument_list|()
operator|.
name|equals
argument_list|(
name|op
argument_list|)
operator|)
operator|&&
name|changes
operator|!=
literal|null
condition|)
block|{
name|html
operator|=
literal|false
expr_stmt|;
name|nl
operator|=
operator|(
name|html
condition|?
literal|"<br>"
else|:
literal|"\n"
operator|)
expr_stmt|;
name|PdfWebTable
name|pdfTable
init|=
operator|new
name|PdfWebTable
argument_list|(
literal|7
argument_list|,
literal|"Last Changes"
argument_list|,
literal|"lastChanges.do?ord=%%"
argument_list|,
operator|new
name|String
index|[]
block|{
name|MSG
operator|.
name|columnDate
argument_list|()
operator|.
name|replace
argument_list|(
literal|"|"
argument_list|,
name|nl
argument_list|)
block|,
name|MSG
operator|.
name|columnDepartment
argument_list|()
operator|.
name|replace
argument_list|(
literal|"|"
argument_list|,
name|nl
argument_list|)
block|,
name|MSG
operator|.
name|columnSubject
argument_list|()
operator|.
name|replace
argument_list|(
literal|"|"
argument_list|,
name|nl
argument_list|)
block|,
name|MSG
operator|.
name|columnManager
argument_list|()
operator|.
name|replace
argument_list|(
literal|"|"
argument_list|,
name|nl
argument_list|)
block|,
name|MSG
operator|.
name|columnPage
argument_list|()
operator|.
name|replace
argument_list|(
literal|"|"
argument_list|,
name|nl
argument_list|)
block|,
name|MSG
operator|.
name|columnObject
argument_list|()
operator|.
name|replace
argument_list|(
literal|"|"
argument_list|,
name|nl
argument_list|)
block|,
name|MSG
operator|.
name|columnOperation
argument_list|()
operator|.
name|replace
argument_list|(
literal|"|"
argument_list|,
name|nl
argument_list|)
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|}
argument_list|,
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|}
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|changes
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
name|printLastChangeTableRow
argument_list|(
name|pdfTable
argument_list|,
operator|(
name|ChangeLog
operator|)
name|i
operator|.
name|next
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|ExportUtils
operator|.
name|exportPDF
argument_list|(
name|pdfTable
argument_list|,
name|WebTable
operator|.
name|getOrder
argument_list|(
name|sessionContext
argument_list|,
literal|"lastChanges.ord2"
argument_list|)
argument_list|,
name|response
argument_list|,
literal|"lastChanges"
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
return|return
literal|"list"
return|;
block|}
specifier|private
name|int
name|printLastChangeTableRow
parameter_list|(
name|WebTable
name|webTable
parameter_list|,
name|ChangeLog
name|lastChange
parameter_list|,
name|boolean
name|html
parameter_list|)
block|{
if|if
condition|(
name|lastChange
operator|==
literal|null
condition|)
return|return
literal|0
return|;
name|webTable
operator|.
name|addLine
argument_list|(
literal|null
argument_list|,
operator|new
name|String
index|[]
block|{
name|ChangeLog
operator|.
name|sDF
operator|.
name|format
argument_list|(
name|lastChange
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
block|,
operator|(
name|lastChange
operator|.
name|getDepartment
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
operator|(
name|html
condition|?
literal|"<span title='"
operator|+
name|lastChange
operator|.
name|getDepartment
argument_list|()
operator|.
name|getHtmlTitle
argument_list|()
operator|+
literal|"'>"
operator|+
name|lastChange
operator|.
name|getDepartment
argument_list|()
operator|.
name|getShortLabel
argument_list|()
operator|+
literal|"</span>"
else|:
name|lastChange
operator|.
name|getDepartment
argument_list|()
operator|.
name|getShortLabel
argument_list|()
operator|)
operator|)
block|,
operator|(
name|lastChange
operator|.
name|getSubjectArea
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|lastChange
operator|.
name|getSubjectArea
argument_list|()
operator|.
name|getSubjectAreaAbbreviation
argument_list|()
operator|)
block|,
operator|(
name|html
condition|?
name|lastChange
operator|.
name|getManager
argument_list|()
operator|.
name|getShortName
argument_list|()
else|:
name|lastChange
operator|.
name|getManager
argument_list|()
operator|.
name|getShortName
argument_list|()
operator|.
name|replaceAll
argument_list|(
literal|"&nbsp;"
argument_list|,
literal|" "
argument_list|)
operator|)
block|,
name|lastChange
operator|.
name|getSourceTitle
argument_list|()
block|,
name|lastChange
operator|.
name|getObjectTitle
argument_list|()
block|,
name|lastChange
operator|.
name|getOperationTitle
argument_list|()
block|}
argument_list|,
operator|new
name|Comparable
index|[]
block|{
name|Long
operator|.
name|valueOf
argument_list|(
name|lastChange
operator|.
name|getTimeStamp
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
block|,
operator|(
name|lastChange
operator|.
name|getDepartment
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|lastChange
operator|.
name|getDepartment
argument_list|()
operator|.
name|getDeptCode
argument_list|()
operator|)
block|,
operator|(
name|lastChange
operator|.
name|getSubjectArea
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|lastChange
operator|.
name|getSubjectArea
argument_list|()
operator|.
name|getSubjectAreaAbbreviation
argument_list|()
operator|)
block|,
name|lastChange
operator|.
name|getManager
argument_list|()
operator|.
name|getName
argument_list|()
block|,
name|lastChange
operator|.
name|getSourceTitle
argument_list|()
block|,
comment|//Integer.valueOf(lastChange.getSource().ordinal()),
name|lastChange
operator|.
name|getObjectTitle
argument_list|()
block|,
name|Integer
operator|.
name|valueOf
argument_list|(
name|lastChange
operator|.
name|getOperation
argument_list|()
operator|.
name|ordinal
argument_list|()
argument_list|)
block|}
argument_list|)
expr_stmt|;
return|return
literal|1
return|;
block|}
block|}
end_class

end_unit

