begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.0 (University Course Timetabling& Student Sectioning Application)  * Copyright (C) 2007, UniTime.org, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program; if not, write to the Free Software Foundation, Inc.,  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|action
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForward
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|util
operator|.
name|MessageResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|Web
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
operator|.
name|ReservationEditForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Class_
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseOfferingReservation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|InstrOfferingConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|InstructionalOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|Class_DAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|CourseOfferingDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|InstrOfferingConfigDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|InstructionalOfferingDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|LookupTables
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|webutil
operator|.
name|BackTracker
import|;
end_import

begin_comment
comment|/**   * MyEclipse Struts  * Creation date: 08-30-2006  *   * XDoclet definition:  * @struts:action path="/reservationEdit" name="reservationEditForm" input="/user/reservationEdit.jsp" scope="request"  */
end_comment

begin_class
specifier|public
class|class
name|ReservationEditAction
extends|extends
name|ReservationAction
block|{
comment|// --------------------------------------------------------- Instance Variables
comment|// --------------------------------------------------------- Methods
comment|/**       * Method execute      * @param mapping      * @param form      * @param request      * @param response      * @return ActionForward      */
specifier|public
name|ActionForward
name|execute
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|ActionForm
name|form
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|Exception
block|{
name|HttpSession
name|httpSession
init|=
name|request
operator|.
name|getSession
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|Web
operator|.
name|isLoggedIn
argument_list|(
name|httpSession
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Access Denied."
argument_list|)
throw|;
block|}
name|MessageResources
name|rsc
init|=
name|getResources
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|User
name|user
init|=
name|Web
operator|.
name|getUser
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
decl_stmt|;
name|ReservationEditForm
name|frm
init|=
operator|(
name|ReservationEditForm
operator|)
name|form
decl_stmt|;
name|ActionMessages
name|errors
init|=
literal|null
decl_stmt|;
name|String
index|[]
name|excludeList
init|=
literal|null
decl_stmt|;
comment|// Get operation
name|String
name|op
init|=
operator|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"op"
argument_list|)
operator|==
literal|null
operator|)
condition|?
operator|(
name|frm
operator|.
name|getOp
argument_list|()
operator|==
literal|null
operator|||
name|frm
operator|.
name|getOp
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
operator|)
condition|?
operator|(
name|request
operator|.
name|getAttribute
argument_list|(
literal|"op"
argument_list|)
operator|==
literal|null
operator|)
condition|?
literal|null
else|:
name|request
operator|.
name|getAttribute
argument_list|(
literal|"op"
argument_list|)
operator|.
name|toString
argument_list|()
else|:
name|frm
operator|.
name|getOp
argument_list|()
else|:
name|request
operator|.
name|getParameter
argument_list|(
literal|"op"
argument_list|)
decl_stmt|;
if|if
condition|(
name|op
operator|==
literal|null
operator|||
name|op
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Invalid operation"
argument_list|)
throw|;
name|frm
operator|.
name|setOp
argument_list|(
name|op
argument_list|)
expr_stmt|;
comment|// Reservation class selected - redirect to appropriate reservation edit screen
if|if
condition|(
name|op
operator|.
name|equals
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.reservationNextStep"
argument_list|)
argument_list|)
condition|)
block|{
comment|// Validate data
name|errors
operator|=
name|frm
operator|.
name|validate
argument_list|(
name|mapping
argument_list|,
name|request
argument_list|)
expr_stmt|;
if|if
condition|(
name|errors
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|saveErrors
argument_list|(
name|request
argument_list|,
name|errors
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"displayReservationList"
argument_list|)
return|;
block|}
name|String
name|resvClass
init|=
name|frm
operator|.
name|getReservationClass
argument_list|()
decl_stmt|;
if|if
condition|(
name|frm
operator|.
name|getOwnerName
argument_list|()
operator|==
literal|null
condition|)
block|{
name|doLoad
argument_list|(
name|request
argument_list|,
name|frm
argument_list|,
name|frm
operator|.
name|getOwnerId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|frm
operator|.
name|getOwnerType
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"ownerName"
argument_list|,
name|frm
operator|.
name|getOwnerName
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"ownerTypeLabel"
argument_list|,
name|frm
operator|.
name|getOwnerTypeLabel
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"ioLimit"
argument_list|,
name|frm
operator|.
name|getIoLimit
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"crsLimit"
argument_list|,
name|frm
operator|.
name|getCrsLimit
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"unlimited"
argument_list|,
name|frm
operator|.
name|getUnlimited
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|resvClass
operator|.
name|equalsIgnoreCase
argument_list|(
name|Constants
operator|.
name|RESV_ACAD_AREA
argument_list|)
condition|)
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"displayAcadAreaReservation"
argument_list|)
return|;
if|if
condition|(
name|resvClass
operator|.
name|equalsIgnoreCase
argument_list|(
name|Constants
operator|.
name|RESV_COURSE
argument_list|)
condition|)
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"displayCourseReservation"
argument_list|)
return|;
if|if
condition|(
name|resvClass
operator|.
name|equalsIgnoreCase
argument_list|(
name|Constants
operator|.
name|RESV_POS
argument_list|)
condition|)
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"displayPosReservation"
argument_list|)
return|;
if|if
condition|(
name|resvClass
operator|.
name|equalsIgnoreCase
argument_list|(
name|Constants
operator|.
name|RESV_INDIVIDUAL
argument_list|)
condition|)
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"displayIndividualReservation"
argument_list|)
return|;
if|if
condition|(
name|resvClass
operator|.
name|equalsIgnoreCase
argument_list|(
name|Constants
operator|.
name|RESV_STU_GROUP
argument_list|)
condition|)
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"displayStudentGroupReservation"
argument_list|)
return|;
block|}
comment|// Add Reservation - from reservation list screen
if|if
condition|(
name|op
operator|.
name|equals
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.addReservationIo"
argument_list|)
argument_list|)
condition|)
block|{
comment|// Validate data
name|errors
operator|=
name|frm
operator|.
name|validate
argument_list|(
name|mapping
argument_list|,
name|request
argument_list|)
expr_stmt|;
if|if
condition|(
name|errors
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|saveErrors
argument_list|(
name|request
argument_list|,
name|errors
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"displayReservationList"
argument_list|)
return|;
block|}
name|String
name|courseNbr
init|=
name|frm
operator|.
name|getCourseNbr
argument_list|()
decl_stmt|;
name|String
name|subjAreaId
init|=
name|frm
operator|.
name|getSubjectAreaId
argument_list|()
decl_stmt|;
comment|// Offering does not exist - redirect back
name|Long
name|sessionId
init|=
operator|(
name|Long
operator|)
name|user
operator|.
name|getAttribute
argument_list|(
name|Constants
operator|.
name|SESSION_ID_ATTR_NAME
argument_list|)
decl_stmt|;
name|List
name|l
init|=
name|CourseOffering
operator|.
name|search
argument_list|(
name|sessionId
argument_list|,
name|subjAreaId
argument_list|,
name|courseNbr
argument_list|)
decl_stmt|;
if|if
condition|(
name|l
operator|==
literal|null
operator|||
name|l
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"courseNbr"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
literal|"Instructional Offering does not exist."
argument_list|)
argument_list|)
expr_stmt|;
name|saveErrors
argument_list|(
name|request
argument_list|,
name|errors
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"addNewError"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"displayReservationList"
argument_list|)
return|;
block|}
comment|//TODO Reservations - functionality to be removed later
name|CourseOffering
name|co
init|=
operator|(
name|CourseOffering
operator|)
name|l
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|InstructionalOffering
name|io
init|=
name|co
operator|.
name|getInstructionalOffering
argument_list|()
decl_stmt|;
if|if
condition|(
name|io
operator|.
name|getCourseOfferings
argument_list|()
operator|==
literal|null
operator|||
name|io
operator|.
name|getCourseOfferings
argument_list|()
operator|.
name|size
argument_list|()
operator|<=
literal|1
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"courseNbr"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
literal|"No reservations can be set on the instructional offering as it does not have cross-listed courses."
argument_list|)
argument_list|)
expr_stmt|;
name|saveErrors
argument_list|(
name|request
argument_list|,
name|errors
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"addNewError"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"displayReservationList"
argument_list|)
return|;
block|}
comment|// Set Session Variables
name|httpSession
operator|.
name|setAttribute
argument_list|(
name|Constants
operator|.
name|SUBJ_AREA_ID_ATTR_NAME
argument_list|,
name|subjAreaId
argument_list|)
expr_stmt|;
name|httpSession
operator|.
name|setAttribute
argument_list|(
name|Constants
operator|.
name|CRS_NBR_ATTR_NAME
argument_list|,
name|courseNbr
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"ownerId"
argument_list|,
name|io
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"ownerName"
argument_list|,
name|io
operator|.
name|getCourseNameWithTitle
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"ownerType"
argument_list|,
name|Constants
operator|.
name|RESV_OWNER_IO
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"ownerTypeLabel"
argument_list|,
name|Constants
operator|.
name|RESV_OWNER_IO_LBL
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"displayCourseReservation"
argument_list|)
return|;
comment|// End Bypass
comment|/*     	    // Set Session Variables             httpSession.setAttribute(Constants.SUBJ_AREA_ID_ATTR_NAME, subjAreaId);             httpSession.setAttribute(Constants.CRS_NBR_ATTR_NAME, courseNbr);             	                 // Set owner type and class             CourseOffering co = (CourseOffering) l.get(0);             InstructionalOffering io = co.getInstructionalOffering();             frm.setOwnerId(io.getUniqueId());             frm.setOwnerName(io.getCourseNameWithTitle());             frm.setOwnerType(Constants.RESV_OWNER_IO);             frm.setOwnerTypeLabel(Constants.RESV_OWNER_IO_LBL);             if (io.getCourseOfferings()==null || io.getCourseOfferings().size()<=1) {                 excludeList = new String[] { Constants.RESV_COURSE };             }             */
block|}
comment|// Reservation class selected - redirect to appropriate reservation edit screen
if|if
condition|(
name|op
operator|.
name|equals
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.addReservation"
argument_list|)
argument_list|)
condition|)
block|{
name|String
name|ownerId
init|=
name|request
operator|.
name|getAttribute
argument_list|(
literal|"ownerId"
argument_list|)
operator|!=
literal|null
condition|?
operator|(
name|String
operator|)
name|request
operator|.
name|getAttribute
argument_list|(
literal|"ownerId"
argument_list|)
else|:
name|request
operator|.
name|getParameter
argument_list|(
literal|"ownerId"
argument_list|)
decl_stmt|;
name|String
name|ownerClassId
init|=
name|request
operator|.
name|getAttribute
argument_list|(
literal|"ownerClassId"
argument_list|)
operator|!=
literal|null
condition|?
operator|(
name|String
operator|)
name|request
operator|.
name|getAttribute
argument_list|(
literal|"ownerClassId"
argument_list|)
else|:
name|request
operator|.
name|getParameter
argument_list|(
literal|"ownerClassId"
argument_list|)
decl_stmt|;
if|if
condition|(
name|ownerId
operator|==
literal|null
operator|||
name|ownerClassId
operator|==
literal|null
condition|)
block|{
name|errors
operator|=
operator|new
name|ActionMessages
argument_list|()
expr_stmt|;
name|errors
operator|.
name|add
argument_list|(
literal|"ownerId"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
literal|"Reservation owner could not be determined"
argument_list|)
argument_list|)
expr_stmt|;
name|saveErrors
argument_list|(
name|request
argument_list|,
name|errors
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"displayReservationList"
argument_list|)
return|;
block|}
name|excludeList
operator|=
name|doLoad
argument_list|(
name|request
argument_list|,
name|frm
argument_list|,
name|ownerId
argument_list|,
name|ownerClassId
argument_list|)
expr_stmt|;
block|}
comment|// Set up lists
name|LookupTables
operator|.
name|setupReservationClass
argument_list|(
name|request
argument_list|,
name|excludeList
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"displayReservationDetail"
argument_list|)
return|;
block|}
comment|/**      * Load form      * @param frm      * @param ownerId      * @param ownerClassId      * @return      */
specifier|private
name|String
index|[]
name|doLoad
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|ReservationEditForm
name|frm
parameter_list|,
name|String
name|ownerId
parameter_list|,
name|String
name|ownerClassId
parameter_list|)
block|{
name|String
index|[]
name|excludeList
init|=
literal|null
decl_stmt|;
name|InstructionalOffering
name|io
init|=
literal|null
decl_stmt|;
name|frm
operator|.
name|setOwnerId
argument_list|(
operator|new
name|Long
argument_list|(
name|ownerId
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setOwnerType
argument_list|(
name|ownerClassId
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setCrsLimit
argument_list|(
literal|"-"
argument_list|)
expr_stmt|;
if|if
condition|(
name|ownerClassId
operator|.
name|equals
argument_list|(
name|Constants
operator|.
name|RESV_OWNER_IO
argument_list|)
condition|)
block|{
name|frm
operator|.
name|setOwnerTypeLabel
argument_list|(
name|Constants
operator|.
name|RESV_OWNER_IO_LBL
argument_list|)
expr_stmt|;
name|io
operator|=
operator|new
name|InstructionalOfferingDAO
argument_list|()
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|ownerId
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setOwnerName
argument_list|(
name|io
operator|.
name|getCourseNameWithTitle
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ownerClassId
operator|.
name|equals
argument_list|(
name|Constants
operator|.
name|RESV_OWNER_CONFIG
argument_list|)
condition|)
block|{
name|frm
operator|.
name|setOwnerTypeLabel
argument_list|(
name|Constants
operator|.
name|RESV_OWNER_CONFIG_LBL
argument_list|)
expr_stmt|;
name|InstrOfferingConfig
name|config
init|=
operator|new
name|InstrOfferingConfigDAO
argument_list|()
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|ownerId
argument_list|)
argument_list|)
decl_stmt|;
name|io
operator|=
name|config
operator|.
name|getInstructionalOffering
argument_list|()
expr_stmt|;
name|frm
operator|.
name|setOwnerName
argument_list|(
name|config
operator|.
name|getCourseNameWithTitle
argument_list|()
operator|+
literal|" - Configuration "
operator|+
name|config
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ownerClassId
operator|.
name|equals
argument_list|(
name|Constants
operator|.
name|RESV_OWNER_CLASS
argument_list|)
condition|)
block|{
name|frm
operator|.
name|setOwnerTypeLabel
argument_list|(
name|Constants
operator|.
name|RESV_OWNER_CLASS_LBL
argument_list|)
expr_stmt|;
name|Class_
name|c
init|=
operator|new
name|Class_DAO
argument_list|()
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|ownerId
argument_list|)
argument_list|)
decl_stmt|;
name|io
operator|=
name|c
operator|.
name|getSchedulingSubpart
argument_list|()
operator|.
name|getInstrOfferingConfig
argument_list|()
operator|.
name|getInstructionalOffering
argument_list|()
expr_stmt|;
name|frm
operator|.
name|setOwnerName
argument_list|(
name|c
operator|.
name|getClassLabelWithTitle
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|//TODO Reservations - functionality to be removed later
if|if
condition|(
name|ownerClassId
operator|.
name|equals
argument_list|(
name|Constants
operator|.
name|RESV_OWNER_COURSE
argument_list|)
condition|)
block|{
name|frm
operator|.
name|setOwnerTypeLabel
argument_list|(
name|Constants
operator|.
name|RESV_OWNER_COURSE_LBL
argument_list|)
expr_stmt|;
name|CourseOffering
name|crs
init|=
operator|new
name|CourseOfferingDAO
argument_list|()
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|ownerId
argument_list|)
argument_list|)
decl_stmt|;
name|io
operator|=
name|crs
operator|.
name|getInstructionalOffering
argument_list|()
expr_stmt|;
name|frm
operator|.
name|setOwnerName
argument_list|(
name|crs
operator|.
name|getCourseNameWithTitle
argument_list|()
argument_list|)
expr_stmt|;
name|Collection
name|ioResvs2
init|=
name|io
operator|.
name|getReservations
argument_list|(
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
decl_stmt|;
if|if
condition|(
name|ioResvs2
operator|!=
literal|null
operator|&&
name|ioResvs2
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|Iterator
name|it1
init|=
name|ioResvs2
operator|.
name|iterator
argument_list|()
init|;
name|it1
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Object
name|o
init|=
name|it1
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|o
operator|instanceof
name|CourseOfferingReservation
condition|)
block|{
name|CourseOfferingReservation
name|cor
init|=
operator|(
name|CourseOfferingReservation
operator|)
name|o
decl_stmt|;
if|if
condition|(
name|cor
operator|.
name|getCourseOffering
argument_list|()
operator|.
name|equals
argument_list|(
name|crs
argument_list|)
condition|)
block|{
name|frm
operator|.
name|setCrsLimit
argument_list|(
name|cor
operator|.
name|getReserved
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
block|}
comment|//End Bypass
if|if
condition|(
name|io
operator|.
name|getCourseOfferings
argument_list|()
operator|==
literal|null
operator|||
name|io
operator|.
name|getCourseOfferings
argument_list|()
operator|.
name|size
argument_list|()
operator|<=
literal|1
condition|)
block|{
name|excludeList
operator|=
operator|new
name|String
index|[]
block|{
name|Constants
operator|.
name|RESV_COURSE
block|}
expr_stmt|;
block|}
name|frm
operator|.
name|setIoLimit
argument_list|(
name|io
operator|.
name|getLimit
argument_list|()
operator|!=
literal|null
condition|?
name|io
operator|.
name|getLimit
argument_list|()
operator|.
name|toString
argument_list|()
else|:
literal|null
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setUnlimited
argument_list|(
name|io
operator|.
name|hasUnlimitedEnrollment
argument_list|()
argument_list|)
expr_stmt|;
name|Vector
name|backList
init|=
name|BackTracker
operator|.
name|getBackList
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|backList
operator|!=
literal|null
operator|&&
name|backList
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|String
index|[]
name|lastBack
init|=
operator|(
name|String
index|[]
operator|)
name|backList
operator|.
name|elementAt
argument_list|(
name|backList
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
name|lastBack
index|[
literal|0
index|]
operator|.
name|indexOf
argument_list|(
literal|"reservationList"
argument_list|)
operator|>=
literal|0
operator|&&
name|lastBack
index|[
literal|0
index|]
operator|.
name|indexOf
argument_list|(
literal|"#"
argument_list|)
operator|<
literal|0
condition|)
block|{
name|lastBack
index|[
literal|0
index|]
operator|+=
literal|"#"
operator|+
name|io
operator|.
name|getUniqueId
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|excludeList
return|;
block|}
block|}
end_class

end_unit

