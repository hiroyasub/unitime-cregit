begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 - 3.5 (University Timetabling Application)  * Copyright (C) 2008 - 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|action
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForward
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|util
operator|.
name|LabelValueBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|util
operator|.
name|MessageResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|SessionAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
operator|.
name|EditRoomPrefForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ChangeLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Location
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|NonUniversityLocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Preference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PreferenceLevel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Room
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomDept
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomPref
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|LocationDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|PreferenceLevelDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|rights
operator|.
name|Right
import|;
end_import

begin_comment
comment|/**   * MyEclipse Struts  * Creation date: 05-12-2006  *   * XDoclet definition:  * @struts.action path="/editRoomPref" name="editRoomPrefForm" input="/admin/setUpRoomPref.jsp" scope="request"  * @struts.action-forward name="showRoomDetail" path="/roomDetail.do"  *  * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"/editRoomPref"
argument_list|)
specifier|public
class|class
name|EditRoomPrefAction
extends|extends
name|Action
block|{
annotation|@
name|Autowired
name|SessionContext
name|sessionContext
decl_stmt|;
comment|// --------------------------------------------------------- Instance Variables
comment|// --------------------------------------------------------- Methods
comment|/**  	 * Method execute 	 * @param mapping 	 * @param form 	 * @param request 	 * @param response 	 * @return ActionForward 	 * @throws Exception  	 */
specifier|public
name|ActionForward
name|execute
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|ActionForm
name|form
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|Exception
block|{
name|EditRoomPrefForm
name|editRoomPrefForm
init|=
operator|(
name|EditRoomPrefForm
operator|)
name|form
decl_stmt|;
name|MessageResources
name|rsc
init|=
name|getResources
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|String
name|doit
init|=
name|editRoomPrefForm
operator|.
name|getDoit
argument_list|()
decl_stmt|;
comment|//return to room list
if|if
condition|(
name|doit
operator|!=
literal|null
operator|&&
name|doit
operator|.
name|equals
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.returnToRoomDetail"
argument_list|)
argument_list|)
condition|)
block|{
name|response
operator|.
name|sendRedirect
argument_list|(
literal|"roomDetail.do?id="
operator|+
name|editRoomPrefForm
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
comment|//the following call cannot be used since doit is has the same value as for return to room list (Back)
comment|//return mapping.findForward("showRoomDetail");
block|}
comment|//update location
if|if
condition|(
name|doit
operator|!=
literal|null
operator|&&
name|doit
operator|.
name|equals
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.update"
argument_list|)
argument_list|)
condition|)
block|{
comment|//Validate input prefs
name|ActionMessages
name|errors
init|=
operator|new
name|ActionMessages
argument_list|()
decl_stmt|;
name|errors
operator|=
name|editRoomPrefForm
operator|.
name|validate
argument_list|(
name|mapping
argument_list|,
name|request
argument_list|)
expr_stmt|;
if|if
condition|(
name|errors
operator|!=
literal|null
operator|&&
name|errors
operator|.
name|size
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|saveErrors
argument_list|(
name|request
argument_list|,
name|errors
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|doUpdate
argument_list|(
name|editRoomPrefForm
argument_list|,
name|request
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showRoomDetail"
argument_list|)
return|;
block|}
block|}
comment|//get location information
name|Long
name|id
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"id"
argument_list|)
argument_list|)
decl_stmt|;
name|LocationDAO
name|ldao
init|=
operator|new
name|LocationDAO
argument_list|()
decl_stmt|;
name|Location
name|location
init|=
name|ldao
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|location
operator|instanceof
name|Room
condition|)
block|{
name|Room
name|r
init|=
operator|(
name|Room
operator|)
name|location
decl_stmt|;
name|editRoomPrefForm
operator|.
name|setName
argument_list|(
name|r
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|location
operator|instanceof
name|NonUniversityLocation
condition|)
block|{
name|NonUniversityLocation
name|nonUnivLocation
init|=
operator|(
name|NonUniversityLocation
operator|)
name|location
decl_stmt|;
name|editRoomPrefForm
operator|.
name|setName
argument_list|(
name|nonUnivLocation
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ActionMessages
name|errors
init|=
operator|new
name|ActionMessages
argument_list|()
decl_stmt|;
name|errors
operator|.
name|add
argument_list|(
literal|"editRoomGroup"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.lookup.notFound"
argument_list|,
literal|"Room Group"
argument_list|)
argument_list|)
expr_stmt|;
name|saveErrors
argument_list|(
name|request
argument_list|,
name|errors
argument_list|)
expr_stmt|;
block|}
name|sessionContext
operator|.
name|checkPermission
argument_list|(
name|location
argument_list|,
name|Right
operator|.
name|RoomEditPreference
argument_list|)
expr_stmt|;
name|TreeSet
argument_list|<
name|Department
argument_list|>
name|departments
init|=
name|Department
operator|.
name|getUserDepartments
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
argument_list|)
decl_stmt|;
name|TreeSet
argument_list|<
name|Department
argument_list|>
name|availableDepts
init|=
operator|new
name|TreeSet
argument_list|<
name|Department
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|RoomDept
name|rd
range|:
name|location
operator|.
name|getRoomDepts
argument_list|()
control|)
block|{
if|if
condition|(
name|departments
operator|.
name|contains
argument_list|(
name|rd
operator|.
name|getDepartment
argument_list|()
argument_list|)
condition|)
name|availableDepts
operator|.
name|add
argument_list|(
name|rd
operator|.
name|getDepartment
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|editRoomPrefForm
operator|.
name|setDepts
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|Department
argument_list|>
argument_list|(
name|availableDepts
argument_list|)
argument_list|)
expr_stmt|;
name|ArrayList
name|depts
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|ArrayList
name|selectedPrefs
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|Department
name|dept
range|:
name|availableDepts
control|)
block|{
name|RoomPref
name|roomPref
init|=
name|location
operator|.
name|getRoomPreference
argument_list|(
name|dept
argument_list|)
decl_stmt|;
if|if
condition|(
name|roomPref
operator|!=
literal|null
condition|)
block|{
name|selectedPrefs
operator|.
name|add
argument_list|(
name|roomPref
operator|.
name|getPrefLevel
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|selectedPrefs
operator|.
name|add
argument_list|(
name|PreferenceLevel
operator|.
name|PREF_LEVEL_NEUTRAL
argument_list|)
expr_stmt|;
block|}
name|depts
operator|.
name|add
argument_list|(
operator|new
name|LabelValueBean
argument_list|(
name|dept
operator|.
name|getDeptCode
argument_list|()
operator|+
literal|"-"
operator|+
name|dept
operator|.
name|getAbbreviation
argument_list|()
argument_list|,
name|dept
operator|.
name|getDeptCode
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|editRoomPrefForm
operator|.
name|setRoomPrefLevels
argument_list|(
name|selectedPrefs
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
name|Department
operator|.
name|DEPT_ATTR_NAME
argument_list|,
name|depts
argument_list|)
expr_stmt|;
comment|//set default department
if|if
condition|(
name|departments
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
block|{
name|editRoomPrefForm
operator|.
name|setDeptCode
argument_list|(
name|departments
operator|.
name|first
argument_list|()
operator|.
name|getDeptCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|sessionContext
operator|.
name|getAttribute
argument_list|(
name|SessionAttribute
operator|.
name|DepartmentCodeRoom
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|editRoomPrefForm
operator|.
name|setDeptCode
argument_list|(
operator|(
name|String
operator|)
name|sessionContext
operator|.
name|getAttribute
argument_list|(
name|SessionAttribute
operator|.
name|DepartmentCodeRoom
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//set availabe room preferences
name|Vector
argument_list|<
name|PreferenceLevel
argument_list|>
name|prefs
init|=
operator|new
name|Vector
argument_list|<
name|PreferenceLevel
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|PreferenceLevel
name|pref
range|:
name|PreferenceLevel
operator|.
name|getPreferenceLevelList
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|pref
operator|.
name|getPrefProlog
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|PreferenceLevel
operator|.
name|sRequired
argument_list|)
condition|)
name|prefs
operator|.
name|addElement
argument_list|(
name|pref
argument_list|)
expr_stmt|;
block|}
name|request
operator|.
name|setAttribute
argument_list|(
name|PreferenceLevel
operator|.
name|PREF_LEVEL_ATTR_NAME
argument_list|,
name|prefs
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showEditRoomPref"
argument_list|)
return|;
block|}
comment|/** 	 *  	 * @param editRoomPrefForm 	 * @param request 	 */
specifier|private
name|void
name|doUpdate
parameter_list|(
name|EditRoomPrefForm
name|editRoomPrefForm
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
throws|throws
name|Exception
block|{
comment|//get location information
name|Long
name|id
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"id"
argument_list|)
argument_list|)
decl_stmt|;
name|LocationDAO
name|ldao
init|=
operator|new
name|LocationDAO
argument_list|()
decl_stmt|;
name|Location
name|location
init|=
name|ldao
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|sessionContext
operator|.
name|checkPermission
argument_list|(
name|location
argument_list|,
name|Right
operator|.
name|RoomEditPreference
argument_list|)
expr_stmt|;
comment|//update dept preference information
name|TreeSet
argument_list|<
name|Department
argument_list|>
name|departments
init|=
name|Department
operator|.
name|getUserDepartments
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
argument_list|)
decl_stmt|;
name|TreeSet
argument_list|<
name|Department
argument_list|>
name|availableDepts
init|=
operator|new
name|TreeSet
argument_list|<
name|Department
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|RoomDept
name|rd
range|:
name|location
operator|.
name|getRoomDepts
argument_list|()
control|)
block|{
if|if
condition|(
name|departments
operator|.
name|contains
argument_list|(
name|rd
operator|.
name|getDepartment
argument_list|()
argument_list|)
condition|)
name|availableDepts
operator|.
name|add
argument_list|(
name|rd
operator|.
name|getDepartment
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|List
name|selectedId
init|=
name|editRoomPrefForm
operator|.
name|getRoomPrefLevels
argument_list|()
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Department
name|dept
range|:
name|availableDepts
control|)
block|{
name|PreferenceLevel
name|seletedPL
init|=
name|PreferenceLevelDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
operator|(
name|String
operator|)
name|selectedId
operator|.
name|get
argument_list|(
name|i
operator|++
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|RoomPref
name|selectedRP
init|=
operator|new
name|RoomPref
argument_list|()
decl_stmt|;
name|selectedRP
operator|.
name|setRoom
argument_list|(
name|location
argument_list|)
expr_stmt|;
name|selectedRP
operator|.
name|setPrefLevel
argument_list|(
name|seletedPL
argument_list|)
expr_stmt|;
name|selectedRP
operator|.
name|setOwner
argument_list|(
name|dept
argument_list|)
expr_stmt|;
name|Set
name|prefs
init|=
name|dept
operator|.
name|getPreferences
argument_list|()
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|prefs
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Preference
name|p
init|=
operator|(
name|Preference
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|p
operator|instanceof
name|RoomPref
operator|&&
operator|(
operator|(
name|RoomPref
operator|)
name|p
operator|)
operator|.
name|getRoom
argument_list|()
operator|.
name|equals
argument_list|(
name|location
argument_list|)
condition|)
block|{
name|PreferenceLevelDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|getSession
argument_list|()
operator|.
name|delete
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|iter
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
name|prefs
operator|.
name|add
argument_list|(
name|selectedRP
argument_list|)
expr_stmt|;
name|PreferenceLevelDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|getSession
argument_list|()
operator|.
name|saveOrUpdate
argument_list|(
name|dept
argument_list|)
expr_stmt|;
name|ChangeLog
operator|.
name|addChange
argument_list|(
literal|null
argument_list|,
name|sessionContext
argument_list|,
name|location
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|ROOM_PREF_EDIT
argument_list|,
name|ChangeLog
operator|.
name|Operation
operator|.
name|UPDATE
argument_list|,
literal|null
argument_list|,
name|dept
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

