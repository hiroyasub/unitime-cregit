begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.0 (University Course Timetabling& Student Sectioning Application)  * Copyright (C) 2007, UniTime.org, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program; if not, write to the Free Software Foundation, Inc.,  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|action
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|StringTokenizer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForward
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|Debug
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|Web
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|WebTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|ApplicationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
operator|.
name|SolutionChangesForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|UserData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|SolverProxy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|WebSolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|TimetableSolver
operator|.
name|RecordedAssignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|interactive
operator|.
name|ClassAssignmentDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|interactive
operator|.
name|SuggestionsModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|ui
operator|.
name|AssignmentPreferenceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|webutil
operator|.
name|PdfWebTable
import|;
end_import

begin_comment
comment|/**   * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|SolutionChangesAction
extends|extends
name|Action
block|{
specifier|public
name|ActionForward
name|execute
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|ActionForm
name|form
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|Exception
block|{
name|SolutionChangesForm
name|myForm
init|=
operator|(
name|SolutionChangesForm
operator|)
name|form
decl_stmt|;
comment|// Check Access
if|if
condition|(
operator|!
name|Web
operator|.
name|isLoggedIn
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Access Denied."
argument_list|)
throw|;
block|}
name|SuggestionsModel
name|model
init|=
operator|(
name|SuggestionsModel
operator|)
name|request
operator|.
name|getSession
argument_list|()
operator|.
name|getAttribute
argument_list|(
literal|"Suggestions.model"
argument_list|)
decl_stmt|;
if|if
condition|(
name|model
operator|==
literal|null
condition|)
block|{
name|model
operator|=
operator|new
name|SuggestionsModel
argument_list|()
expr_stmt|;
name|model
operator|.
name|load
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|getSession
argument_list|()
operator|.
name|setAttribute
argument_list|(
literal|"Suggestions.model"
argument_list|,
name|model
argument_list|)
expr_stmt|;
block|}
comment|// Read operation to be performed
name|String
name|op
init|=
operator|(
name|myForm
operator|.
name|getOp
argument_list|()
operator|!=
literal|null
condition|?
name|myForm
operator|.
name|getOp
argument_list|()
else|:
name|request
operator|.
name|getParameter
argument_list|(
literal|"op"
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
literal|"Apply"
operator|.
name|equals
argument_list|(
name|op
argument_list|)
operator|||
literal|"Export PDF"
operator|.
name|equals
argument_list|(
name|op
argument_list|)
condition|)
block|{
name|UserData
operator|.
name|setPropertyInt
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|,
literal|"SolutionChanges.reference"
argument_list|,
name|myForm
operator|.
name|getReferenceInt
argument_list|()
argument_list|)
expr_stmt|;
name|myForm
operator|.
name|save
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|model
operator|.
name|save
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
literal|"Refresh"
operator|.
name|equals
argument_list|(
name|op
argument_list|)
condition|)
block|{
name|myForm
operator|.
name|reset
argument_list|(
name|mapping
argument_list|,
name|request
argument_list|)
expr_stmt|;
block|}
name|myForm
operator|.
name|load
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|SolverProxy
name|solver
init|=
name|WebSolver
operator|.
name|getSolver
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|solver
operator|==
literal|null
condition|)
block|{
name|request
operator|.
name|setAttribute
argument_list|(
literal|"SolutionChanges.message"
argument_list|,
literal|"No timetable is loaded. However, you can load one<a target='__idContentFrame' href='listSolutions.do' onclick='window.close();'>here</a>."
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showSolutionChanges"
argument_list|)
return|;
block|}
name|Vector
name|changes
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|myForm
operator|.
name|getReferenceInt
argument_list|()
operator|==
name|SolutionChangesForm
operator|.
name|sReferenceBest
condition|)
block|{
if|if
condition|(
name|solver
operator|.
name|bestSolutionInfo
argument_list|()
operator|==
literal|null
condition|)
block|{
name|request
operator|.
name|setAttribute
argument_list|(
literal|"SolutionChanges.message"
argument_list|,
literal|"No best solution saved so far."
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showSolutionChanges"
argument_list|)
return|;
block|}
name|changes
operator|=
name|solver
operator|.
name|getChangesToBest
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|myForm
operator|.
name|getReferenceInt
argument_list|()
operator|==
name|SolutionChangesForm
operator|.
name|sReferenceInitial
condition|)
block|{
name|changes
operator|=
name|solver
operator|.
name|getChangesToInitial
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|myForm
operator|.
name|getReferenceInt
argument_list|()
operator|==
name|SolutionChangesForm
operator|.
name|sReferenceSelected
condition|)
block|{
name|String
name|solutionIdsStr
init|=
operator|(
name|String
operator|)
name|request
operator|.
name|getSession
argument_list|()
operator|.
name|getAttribute
argument_list|(
literal|"Solver.selectedSolutionId"
argument_list|)
decl_stmt|;
if|if
condition|(
name|solutionIdsStr
operator|==
literal|null
operator|||
name|solutionIdsStr
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|request
operator|.
name|setAttribute
argument_list|(
literal|"SolutionChanges.message"
argument_list|,
literal|"No solution selected. However, you can select one<a target='__idContentFrame' href='listSolutions.do' onclick='window.close();'>here"
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showSolutionChanges"
argument_list|)
return|;
block|}
name|changes
operator|=
operator|new
name|Vector
argument_list|()
expr_stmt|;
for|for
control|(
name|StringTokenizer
name|s
init|=
operator|new
name|StringTokenizer
argument_list|(
name|solutionIdsStr
argument_list|,
literal|","
argument_list|)
init|;
name|s
operator|.
name|hasMoreTokens
argument_list|()
condition|;
control|)
block|{
name|Long
name|solutionId
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|s
operator|.
name|nextToken
argument_list|()
argument_list|)
decl_stmt|;
name|Vector
name|ch
init|=
name|solver
operator|.
name|getChangesToSolution
argument_list|(
name|solutionId
argument_list|)
decl_stmt|;
if|if
condition|(
name|ch
operator|!=
literal|null
condition|)
name|changes
operator|.
name|addAll
argument_list|(
name|ch
argument_list|)
expr_stmt|;
block|}
block|}
name|String
name|changeTable
init|=
name|getChangesTable
argument_list|(
name|model
operator|.
name|getSimpleMode
argument_list|()
argument_list|,
name|model
operator|.
name|getReversedMode
argument_list|()
argument_list|,
name|request
argument_list|,
literal|"Changes"
argument_list|,
name|changes
argument_list|)
decl_stmt|;
if|if
condition|(
name|changeTable
operator|!=
literal|null
condition|)
block|{
name|request
operator|.
name|setAttribute
argument_list|(
literal|"SolutionChanges.table"
argument_list|,
name|changeTable
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"SolutionChanges.table.colspan"
argument_list|,
operator|new
name|Integer
argument_list|(
name|model
operator|.
name|getSimpleMode
argument_list|()
condition|?
literal|5
else|:
literal|14
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
name|request
operator|.
name|setAttribute
argument_list|(
literal|"SolutionChanges.message"
argument_list|,
literal|"No changes."
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"Export PDF"
operator|.
name|equals
argument_list|(
name|op
argument_list|)
condition|)
block|{
name|File
name|f
init|=
name|exportPdf
argument_list|(
name|model
operator|.
name|getSimpleMode
argument_list|()
argument_list|,
name|model
operator|.
name|getReversedMode
argument_list|()
argument_list|,
name|request
argument_list|,
literal|"Changes"
argument_list|,
name|changes
argument_list|)
decl_stmt|;
if|if
condition|(
name|f
operator|!=
literal|null
condition|)
name|request
operator|.
name|setAttribute
argument_list|(
name|Constants
operator|.
name|REQUEST_OPEN_URL
argument_list|,
literal|"temp/"
operator|+
name|f
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|//response.sendRedirect("temp/"+f.getName());
block|}
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showSolutionChanges"
argument_list|)
return|;
block|}
specifier|public
name|String
name|getChangesTable
parameter_list|(
name|boolean
name|simple
parameter_list|,
name|boolean
name|reversed
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|String
name|name
parameter_list|,
name|Vector
name|changes
parameter_list|)
block|{
if|if
condition|(
name|changes
operator|==
literal|null
operator|||
name|changes
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|null
return|;
name|WebTable
operator|.
name|setOrder
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|,
literal|"solutionChanges.ord"
argument_list|,
name|request
operator|.
name|getParameter
argument_list|(
literal|"ord"
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|WebTable
name|webTable
init|=
operator|(
name|simple
condition|?
operator|new
name|WebTable
argument_list|(
literal|5
argument_list|,
name|name
argument_list|,
literal|"solutionChanges.do?ord=%%"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"Class"
block|,
literal|"Date"
block|,
literal|"Time"
block|,
literal|"Room"
block|,
literal|"Students"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"right"
block|}
argument_list|,
literal|null
argument_list|)
else|:
operator|new
name|WebTable
argument_list|(
literal|14
argument_list|,
name|name
argument_list|,
literal|"solutionChanges.do?ord=%%"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"Class"
block|,
literal|"Date"
block|,
literal|"Time"
block|,
literal|"Room"
block|,
literal|"Std"
block|,
literal|"Tm"
block|,
literal|"Rm"
block|,
literal|"Gr"
block|,
literal|"Ins"
block|,
literal|"Usl"
block|,
literal|"Big"
block|,
literal|"Dept"
block|,
literal|"Subp"
block|,
literal|"Pert"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"right"
block|,
literal|"right"
block|,
literal|"right"
block|,
literal|"right"
block|,
literal|"right"
block|,
literal|"right"
block|,
literal|"right"
block|,
literal|"right"
block|,
literal|"right"
block|,
literal|"right"
block|,
literal|"right"
block|}
argument_list|,
literal|null
argument_list|)
operator|)
decl_stmt|;
name|webTable
operator|.
name|setRowStyle
argument_list|(
literal|"white-space:nowrap"
argument_list|)
expr_stmt|;
try|try
block|{
name|int
name|idx
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Enumeration
name|e
init|=
name|changes
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
name|idx
operator|++
control|)
block|{
name|RecordedAssignment
name|assignment
init|=
operator|(
name|RecordedAssignment
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|ClassAssignmentDetails
name|before
init|=
operator|(
name|assignment
operator|.
name|getBefore
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|assignment
operator|.
name|getBefore
argument_list|()
operator|.
name|getDetails
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|,
literal|false
argument_list|)
operator|)
decl_stmt|;
name|ClassAssignmentDetails
name|after
init|=
operator|(
name|assignment
operator|.
name|getAfter
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|assignment
operator|.
name|getAfter
argument_list|()
operator|.
name|getDetails
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|,
literal|false
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|reversed
condition|)
block|{
name|ClassAssignmentDetails
name|x
init|=
name|after
decl_stmt|;
name|after
operator|=
name|before
expr_stmt|;
name|before
operator|=
name|x
expr_stmt|;
block|}
name|String
name|className
init|=
operator|(
name|after
operator|==
literal|null
condition|?
name|before
operator|.
name|getClazz
argument_list|()
operator|.
name|toHtml
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|)
else|:
name|after
operator|.
name|getClazz
argument_list|()
operator|.
name|toHtml
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|)
operator|)
decl_stmt|;
name|ClassAssignmentDetails
name|classSort
init|=
operator|(
name|after
operator|==
literal|null
condition|?
name|before
else|:
name|after
operator|)
decl_stmt|;
name|String
name|time
init|=
name|ClassAssignmentDetails
operator|.
name|dispTime2
argument_list|(
operator|(
name|before
operator|==
literal|null
condition|?
literal|null
else|:
name|before
operator|.
name|getTime
argument_list|()
operator|)
argument_list|,
operator|(
name|after
operator|==
literal|null
condition|?
literal|null
else|:
name|after
operator|.
name|getTime
argument_list|()
operator|)
argument_list|)
decl_stmt|;
name|String
name|rooms
init|=
literal|""
decl_stmt|;
name|String
name|link
init|=
operator|(
name|before
operator|==
literal|null
condition|?
literal|null
else|:
literal|"id="
operator|+
name|before
operator|.
name|getClazz
argument_list|()
operator|.
name|getClassId
argument_list|()
operator|+
literal|"&days="
operator|+
name|before
operator|.
name|getTime
argument_list|()
operator|.
name|getDays
argument_list|()
operator|+
literal|"&slot="
operator|+
name|before
operator|.
name|getTime
argument_list|()
operator|.
name|getStartSlot
argument_list|()
operator|+
literal|"&pattern="
operator|+
name|before
operator|.
name|getTime
argument_list|()
operator|.
name|getPatternId
argument_list|()
operator|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
operator|(
name|before
operator|==
literal|null
condition|?
operator|(
name|after
operator|.
name|getRoom
argument_list|()
operator|==
literal|null
condition|?
literal|0
else|:
name|after
operator|.
name|getRoom
argument_list|()
operator|.
name|length
operator|)
else|:
operator|(
name|before
operator|.
name|getRoom
argument_list|()
operator|==
literal|null
condition|?
literal|0
else|:
name|before
operator|.
name|getRoom
argument_list|()
operator|.
name|length
operator|)
operator|)
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|i
operator|>
literal|0
condition|)
name|rooms
operator|+=
literal|", "
expr_stmt|;
name|rooms
operator|+=
operator|(
name|ClassAssignmentDetails
operator|.
name|dispRoom2
argument_list|(
operator|(
name|before
operator|==
literal|null
operator|||
name|before
operator|.
name|getRoom
argument_list|()
operator|.
name|length
operator|<=
name|i
condition|?
literal|null
else|:
name|before
operator|.
name|getRoom
argument_list|()
index|[
name|i
index|]
operator|)
argument_list|,
operator|(
name|after
operator|==
literal|null
operator|||
name|after
operator|.
name|getRoom
argument_list|()
operator|.
name|length
operator|<=
name|i
condition|?
literal|null
else|:
name|after
operator|.
name|getRoom
argument_list|()
index|[
name|i
index|]
operator|)
argument_list|)
operator|)
expr_stmt|;
if|if
condition|(
name|before
operator|!=
literal|null
condition|)
name|link
operator|+=
literal|"&room"
operator|+
name|i
operator|+
literal|"="
operator|+
name|before
operator|.
name|getRoom
argument_list|()
index|[
name|i
index|]
operator|.
name|getId
argument_list|()
expr_stmt|;
block|}
name|String
name|dates
init|=
operator|(
name|before
operator|==
literal|null
condition|?
name|after
operator|.
name|getDaysHtml
argument_list|()
else|:
name|before
operator|.
name|getDaysHtml
argument_list|()
operator|)
decl_stmt|;
name|String
name|timesSort
init|=
operator|(
name|before
operator|==
literal|null
condition|?
name|after
operator|.
name|getTimeName
argument_list|()
else|:
name|before
operator|.
name|getTimeName
argument_list|()
operator|)
decl_stmt|;
name|String
name|roomsSort
init|=
operator|(
name|before
operator|==
literal|null
condition|?
name|after
operator|.
name|getRoomName
argument_list|()
else|:
name|before
operator|.
name|getRoomName
argument_list|()
operator|)
decl_stmt|;
name|String
name|datesSort
init|=
operator|(
name|before
operator|==
literal|null
condition|?
name|after
operator|.
name|getDaysName
argument_list|()
else|:
name|before
operator|.
name|getDaysName
argument_list|()
operator|)
decl_stmt|;
name|AssignmentPreferenceInfo
name|bInf
init|=
operator|(
name|before
operator|==
literal|null
condition|?
literal|null
else|:
name|before
operator|.
name|getInfo
argument_list|()
operator|)
decl_stmt|;
name|AssignmentPreferenceInfo
name|aInf
init|=
operator|(
name|after
operator|==
literal|null
condition|?
literal|null
else|:
name|after
operator|.
name|getInfo
argument_list|()
operator|)
decl_stmt|;
if|if
condition|(
name|aInf
operator|==
literal|null
condition|)
name|aInf
operator|=
operator|new
name|AssignmentPreferenceInfo
argument_list|()
expr_stmt|;
if|if
condition|(
name|bInf
operator|==
literal|null
condition|)
name|bInf
operator|=
operator|new
name|AssignmentPreferenceInfo
argument_list|()
expr_stmt|;
name|StringBuffer
name|sb
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
if|if
condition|(
name|aInf
operator|.
name|getNrCommitedStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrCommitedStudentConflicts
argument_list|()
operator|!=
literal|0
condition|)
block|{
if|if
condition|(
name|sb
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|sb
operator|.
name|append
argument_list|(
literal|" ("
argument_list|)
expr_stmt|;
else|else
name|sb
operator|.
name|append
argument_list|(
literal|","
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|ClassAssignmentDetails
operator|.
name|dispNumber
argument_list|(
literal|"c"
argument_list|,
name|aInf
operator|.
name|getNrCommitedStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrCommitedStudentConflicts
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|aInf
operator|.
name|getNrDistanceStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrDistanceStudentConflicts
argument_list|()
operator|!=
literal|0
condition|)
block|{
if|if
condition|(
name|sb
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|sb
operator|.
name|append
argument_list|(
literal|" ("
argument_list|)
expr_stmt|;
else|else
name|sb
operator|.
name|append
argument_list|(
literal|","
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|ClassAssignmentDetails
operator|.
name|dispNumber
argument_list|(
literal|"d"
argument_list|,
name|bInf
operator|.
name|getNrDistanceStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrDistanceStudentConflicts
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|aInf
operator|.
name|getNrHardStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrHardStudentConflicts
argument_list|()
operator|!=
literal|0
condition|)
block|{
if|if
condition|(
name|sb
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|sb
operator|.
name|append
argument_list|(
literal|" ("
argument_list|)
expr_stmt|;
else|else
name|sb
operator|.
name|append
argument_list|(
literal|","
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|ClassAssignmentDetails
operator|.
name|dispNumber
argument_list|(
literal|"h"
argument_list|,
name|aInf
operator|.
name|getNrHardStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrHardStudentConflicts
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|sb
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|sb
operator|.
name|append
argument_list|(
literal|")"
argument_list|)
expr_stmt|;
if|if
condition|(
name|simple
condition|)
name|webTable
operator|.
name|addLine
argument_list|(
operator|(
name|link
operator|!=
literal|null
condition|?
literal|"onClick=\"window.open('suggestions.do?"
operator|+
name|link
operator|+
literal|"&op=Try','suggestions','width=1000,height=600,resizable=yes,scrollbars=yes,toolbar=no,location=no,directories=no,status=yes,menubar=no,copyhistory=no').focus();\""
else|:
literal|null
operator|)
argument_list|,
operator|new
name|String
index|[]
block|{
name|className
block|,
name|dates
block|,
name|time
block|,
name|rooms
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumber
argument_list|(
name|aInf
operator|.
name|getNrStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrStudentConflicts
argument_list|()
argument_list|)
operator|+
name|sb
block|}
argument_list|,
operator|new
name|Comparable
index|[]
block|{
name|classSort
block|,
name|datesSort
block|,
name|timesSort
block|,
name|roomsSort
block|,
operator|new
name|Long
argument_list|(
name|aInf
operator|.
name|getNrStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrStudentConflicts
argument_list|()
argument_list|)
block|}
argument_list|)
expr_stmt|;
else|else
name|webTable
operator|.
name|addLine
argument_list|(
operator|(
name|link
operator|!=
literal|null
condition|?
literal|"onClick=\"window.open('suggestions.do?"
operator|+
name|link
operator|+
literal|"&op=Try','suggestions','width=1000,height=600,resizable=yes,scrollbars=yes,toolbar=no,location=no,directories=no,status=yes,menubar=no,copyhistory=no').focus();\""
else|:
literal|null
operator|)
argument_list|,
operator|new
name|String
index|[]
block|{
name|className
block|,
name|dates
block|,
name|time
block|,
name|rooms
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumber
argument_list|(
name|aInf
operator|.
name|getNrStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrStudentConflicts
argument_list|()
argument_list|)
operator|+
name|sb
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumber
argument_list|(
name|aInf
operator|.
name|getTimePreference
argument_list|()
operator|-
name|bInf
operator|.
name|getTimePreference
argument_list|()
argument_list|)
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumber
argument_list|(
name|aInf
operator|.
name|sumRoomPreference
argument_list|()
operator|-
name|bInf
operator|.
name|sumRoomPreference
argument_list|()
argument_list|)
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumber
argument_list|(
name|aInf
operator|.
name|getGroupConstraintPref
argument_list|()
operator|-
name|bInf
operator|.
name|getGroupConstraintPref
argument_list|()
argument_list|)
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumber
argument_list|(
name|aInf
operator|.
name|getBtbInstructorPreference
argument_list|()
operator|-
name|bInf
operator|.
name|getBtbInstructorPreference
argument_list|()
argument_list|)
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumber
argument_list|(
name|aInf
operator|.
name|getUselessHalfHours
argument_list|()
operator|-
name|bInf
operator|.
name|getUselessHalfHours
argument_list|()
argument_list|)
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumber
argument_list|(
name|aInf
operator|.
name|getTooBigRoomPreference
argument_list|()
operator|-
name|bInf
operator|.
name|getTooBigRoomPreference
argument_list|()
argument_list|)
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumber
argument_list|(
name|aInf
operator|.
name|getDeptBalancPenalty
argument_list|()
operator|-
name|bInf
operator|.
name|getDeptBalancPenalty
argument_list|()
argument_list|)
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumber
argument_list|(
name|aInf
operator|.
name|getSpreadPenalty
argument_list|()
operator|-
name|bInf
operator|.
name|getSpreadPenalty
argument_list|()
argument_list|)
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumber
argument_list|(
name|aInf
operator|.
name|getPerturbationPenalty
argument_list|()
operator|-
name|bInf
operator|.
name|getPerturbationPenalty
argument_list|()
argument_list|)
block|}
argument_list|,
operator|new
name|Comparable
index|[]
block|{
name|classSort
block|,
name|datesSort
block|,
name|timesSort
block|,
name|roomsSort
block|,
operator|new
name|Long
argument_list|(
name|aInf
operator|.
name|getNrStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrStudentConflicts
argument_list|()
argument_list|)
block|,
operator|new
name|Double
argument_list|(
name|aInf
operator|.
name|getTimePreference
argument_list|()
operator|-
name|bInf
operator|.
name|getTimePreference
argument_list|()
argument_list|)
block|,
operator|new
name|Long
argument_list|(
name|aInf
operator|.
name|sumRoomPreference
argument_list|()
operator|-
name|bInf
operator|.
name|sumRoomPreference
argument_list|()
argument_list|)
block|,
operator|new
name|Long
argument_list|(
name|aInf
operator|.
name|getGroupConstraintPref
argument_list|()
operator|-
name|bInf
operator|.
name|getGroupConstraintPref
argument_list|()
argument_list|)
block|,
operator|new
name|Long
argument_list|(
name|aInf
operator|.
name|getBtbInstructorPreference
argument_list|()
operator|-
name|bInf
operator|.
name|getBtbInstructorPreference
argument_list|()
argument_list|)
block|,
operator|new
name|Long
argument_list|(
name|aInf
operator|.
name|getUselessHalfHours
argument_list|()
operator|-
name|bInf
operator|.
name|getUselessHalfHours
argument_list|()
argument_list|)
block|,
operator|new
name|Long
argument_list|(
name|aInf
operator|.
name|getTooBigRoomPreference
argument_list|()
operator|-
name|bInf
operator|.
name|getTooBigRoomPreference
argument_list|()
argument_list|)
block|,
operator|new
name|Double
argument_list|(
name|aInf
operator|.
name|getDeptBalancPenalty
argument_list|()
operator|-
name|bInf
operator|.
name|getDeptBalancPenalty
argument_list|()
argument_list|)
block|,
operator|new
name|Double
argument_list|(
name|aInf
operator|.
name|getSpreadPenalty
argument_list|()
operator|-
name|bInf
operator|.
name|getSpreadPenalty
argument_list|()
argument_list|)
block|,
operator|new
name|Double
argument_list|(
name|aInf
operator|.
name|getPerturbationPenalty
argument_list|()
operator|-
name|bInf
operator|.
name|getPerturbationPenalty
argument_list|()
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Debug
operator|.
name|error
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|webTable
operator|.
name|addLine
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"<font color='red'>ERROR:"
operator|+
name|e
operator|.
name|getMessage
argument_list|()
operator|+
literal|"</font>"
block|}
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
return|return
name|webTable
operator|.
name|printTable
argument_list|(
name|WebTable
operator|.
name|getOrder
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|,
literal|"solutionChanges.ord"
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|File
name|exportPdf
parameter_list|(
name|boolean
name|simple
parameter_list|,
name|boolean
name|reversed
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|String
name|name
parameter_list|,
name|Vector
name|changes
parameter_list|)
block|{
if|if
condition|(
name|changes
operator|==
literal|null
operator|||
name|changes
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|null
return|;
name|PdfWebTable
name|webTable
init|=
operator|(
name|simple
condition|?
operator|new
name|PdfWebTable
argument_list|(
literal|5
argument_list|,
name|name
argument_list|,
literal|"solutionChanges.do?ord=%%"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"Class"
block|,
literal|"Date"
block|,
literal|"Time"
block|,
literal|"Room"
block|,
literal|"Students"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"right"
block|}
argument_list|,
literal|null
argument_list|)
else|:
operator|new
name|PdfWebTable
argument_list|(
literal|14
argument_list|,
name|name
argument_list|,
literal|"solutionChanges.do?ord=%%"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"Class"
block|,
literal|"Date"
block|,
literal|"Time"
block|,
literal|"Room"
block|,
literal|"Std"
block|,
literal|"Tm"
block|,
literal|"Rm"
block|,
literal|"Gr"
block|,
literal|"Ins"
block|,
literal|"Usl"
block|,
literal|"Big"
block|,
literal|"Dept"
block|,
literal|"Subp"
block|,
literal|"Pert"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"right"
block|,
literal|"right"
block|,
literal|"right"
block|,
literal|"right"
block|,
literal|"right"
block|,
literal|"right"
block|,
literal|"right"
block|,
literal|"right"
block|,
literal|"right"
block|,
literal|"right"
block|,
literal|"right"
block|}
argument_list|,
literal|null
argument_list|)
operator|)
decl_stmt|;
try|try
block|{
name|int
name|idx
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Enumeration
name|e
init|=
name|changes
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
name|idx
operator|++
control|)
block|{
name|RecordedAssignment
name|assignment
init|=
operator|(
name|RecordedAssignment
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|ClassAssignmentDetails
name|before
init|=
operator|(
name|assignment
operator|.
name|getBefore
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|assignment
operator|.
name|getBefore
argument_list|()
operator|.
name|getDetails
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|,
literal|false
argument_list|)
operator|)
decl_stmt|;
name|ClassAssignmentDetails
name|after
init|=
operator|(
name|assignment
operator|.
name|getAfter
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|assignment
operator|.
name|getAfter
argument_list|()
operator|.
name|getDetails
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|,
literal|false
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|reversed
condition|)
block|{
name|ClassAssignmentDetails
name|x
init|=
name|after
decl_stmt|;
name|after
operator|=
name|before
expr_stmt|;
name|before
operator|=
name|x
expr_stmt|;
block|}
name|String
name|className
init|=
operator|(
name|after
operator|==
literal|null
condition|?
name|before
operator|.
name|getClazz
argument_list|()
operator|.
name|getName
argument_list|()
else|:
name|after
operator|.
name|getClazz
argument_list|()
operator|.
name|getName
argument_list|()
operator|)
decl_stmt|;
name|ClassAssignmentDetails
name|classSort
init|=
operator|(
name|after
operator|==
literal|null
condition|?
name|before
else|:
name|after
operator|)
decl_stmt|;
name|String
name|time
init|=
name|ClassAssignmentDetails
operator|.
name|dispTimeNoHtml
argument_list|(
operator|(
name|before
operator|==
literal|null
condition|?
literal|null
else|:
name|before
operator|.
name|getTime
argument_list|()
operator|)
argument_list|,
operator|(
name|after
operator|==
literal|null
condition|?
literal|null
else|:
name|after
operator|.
name|getTime
argument_list|()
operator|)
argument_list|)
decl_stmt|;
name|String
name|rooms
init|=
literal|""
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
operator|(
name|before
operator|==
literal|null
condition|?
operator|(
name|after
operator|.
name|getRoom
argument_list|()
operator|==
literal|null
condition|?
literal|0
else|:
name|after
operator|.
name|getRoom
argument_list|()
operator|.
name|length
operator|)
else|:
operator|(
name|before
operator|.
name|getRoom
argument_list|()
operator|==
literal|null
condition|?
literal|0
else|:
name|before
operator|.
name|getRoom
argument_list|()
operator|.
name|length
operator|)
operator|)
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|i
operator|>
literal|0
condition|)
name|rooms
operator|+=
literal|", "
expr_stmt|;
name|rooms
operator|+=
operator|(
name|ClassAssignmentDetails
operator|.
name|dispRoomNoHtml
argument_list|(
operator|(
name|before
operator|==
literal|null
condition|?
literal|null
else|:
name|before
operator|.
name|getRoom
argument_list|()
index|[
name|i
index|]
operator|)
argument_list|,
operator|(
name|after
operator|==
literal|null
condition|?
literal|null
else|:
name|after
operator|.
name|getRoom
argument_list|()
index|[
name|i
index|]
operator|)
argument_list|)
operator|)
expr_stmt|;
block|}
name|String
name|dates
init|=
operator|(
name|before
operator|==
literal|null
condition|?
name|after
operator|.
name|getDaysName
argument_list|()
else|:
name|before
operator|.
name|getDaysName
argument_list|()
operator|)
decl_stmt|;
name|String
name|timesSort
init|=
operator|(
name|before
operator|==
literal|null
condition|?
name|after
operator|.
name|getTimeName
argument_list|()
else|:
name|before
operator|.
name|getTimeName
argument_list|()
operator|)
decl_stmt|;
name|String
name|roomsSort
init|=
operator|(
name|before
operator|==
literal|null
condition|?
name|after
operator|.
name|getRoomName
argument_list|()
else|:
name|before
operator|.
name|getRoomName
argument_list|()
operator|)
decl_stmt|;
name|String
name|datesSort
init|=
operator|(
name|before
operator|==
literal|null
condition|?
name|after
operator|.
name|getDaysName
argument_list|()
else|:
name|before
operator|.
name|getDaysName
argument_list|()
operator|)
decl_stmt|;
name|AssignmentPreferenceInfo
name|bInf
init|=
operator|(
name|before
operator|==
literal|null
condition|?
literal|null
else|:
name|before
operator|.
name|getInfo
argument_list|()
operator|)
decl_stmt|;
name|AssignmentPreferenceInfo
name|aInf
init|=
operator|(
name|after
operator|==
literal|null
condition|?
literal|null
else|:
name|after
operator|.
name|getInfo
argument_list|()
operator|)
decl_stmt|;
if|if
condition|(
name|aInf
operator|==
literal|null
condition|)
name|aInf
operator|=
operator|new
name|AssignmentPreferenceInfo
argument_list|()
expr_stmt|;
if|if
condition|(
name|bInf
operator|==
literal|null
condition|)
name|bInf
operator|=
operator|new
name|AssignmentPreferenceInfo
argument_list|()
expr_stmt|;
name|StringBuffer
name|sb
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
if|if
condition|(
name|aInf
operator|.
name|getNrCommitedStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrCommitedStudentConflicts
argument_list|()
operator|!=
literal|0
condition|)
block|{
if|if
condition|(
name|sb
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|sb
operator|.
name|append
argument_list|(
literal|" ("
argument_list|)
expr_stmt|;
else|else
name|sb
operator|.
name|append
argument_list|(
literal|","
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|ClassAssignmentDetails
operator|.
name|dispNumberNoHtml
argument_list|(
literal|"c"
argument_list|,
name|aInf
operator|.
name|getNrCommitedStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrCommitedStudentConflicts
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|aInf
operator|.
name|getNrDistanceStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrDistanceStudentConflicts
argument_list|()
operator|!=
literal|0
condition|)
block|{
if|if
condition|(
name|sb
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|sb
operator|.
name|append
argument_list|(
literal|" ("
argument_list|)
expr_stmt|;
else|else
name|sb
operator|.
name|append
argument_list|(
literal|","
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|ClassAssignmentDetails
operator|.
name|dispNumberNoHtml
argument_list|(
literal|"d"
argument_list|,
name|bInf
operator|.
name|getNrDistanceStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrDistanceStudentConflicts
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|aInf
operator|.
name|getNrHardStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrHardStudentConflicts
argument_list|()
operator|!=
literal|0
condition|)
block|{
if|if
condition|(
name|sb
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|sb
operator|.
name|append
argument_list|(
literal|" ("
argument_list|)
expr_stmt|;
else|else
name|sb
operator|.
name|append
argument_list|(
literal|","
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|ClassAssignmentDetails
operator|.
name|dispNumberNoHtml
argument_list|(
literal|"h"
argument_list|,
name|aInf
operator|.
name|getNrHardStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrHardStudentConflicts
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|sb
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|sb
operator|.
name|append
argument_list|(
literal|")"
argument_list|)
expr_stmt|;
if|if
condition|(
name|simple
condition|)
name|webTable
operator|.
name|addLine
argument_list|(
literal|null
argument_list|,
operator|new
name|String
index|[]
block|{
name|className
block|,
name|dates
block|,
name|time
block|,
name|rooms
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumberNoHtml
argument_list|(
name|aInf
operator|.
name|getNrStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrStudentConflicts
argument_list|()
argument_list|)
operator|+
name|sb
block|}
argument_list|,
operator|new
name|Comparable
index|[]
block|{
name|classSort
block|,
name|datesSort
block|,
name|timesSort
block|,
name|roomsSort
block|,
operator|new
name|Long
argument_list|(
name|aInf
operator|.
name|getNrStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrStudentConflicts
argument_list|()
argument_list|)
block|}
argument_list|)
expr_stmt|;
else|else
name|webTable
operator|.
name|addLine
argument_list|(
literal|null
argument_list|,
operator|new
name|String
index|[]
block|{
name|className
block|,
name|dates
block|,
name|time
block|,
name|rooms
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumberNoHtml
argument_list|(
name|aInf
operator|.
name|getNrStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrStudentConflicts
argument_list|()
argument_list|)
operator|+
name|sb
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumberNoHtml
argument_list|(
name|aInf
operator|.
name|getTimePreference
argument_list|()
operator|-
name|bInf
operator|.
name|getTimePreference
argument_list|()
argument_list|)
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumberNoHtml
argument_list|(
name|aInf
operator|.
name|sumRoomPreference
argument_list|()
operator|-
name|bInf
operator|.
name|sumRoomPreference
argument_list|()
argument_list|)
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumberNoHtml
argument_list|(
name|aInf
operator|.
name|getGroupConstraintPref
argument_list|()
operator|-
name|bInf
operator|.
name|getGroupConstraintPref
argument_list|()
argument_list|)
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumberNoHtml
argument_list|(
name|aInf
operator|.
name|getBtbInstructorPreference
argument_list|()
operator|-
name|bInf
operator|.
name|getBtbInstructorPreference
argument_list|()
argument_list|)
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumberNoHtml
argument_list|(
name|aInf
operator|.
name|getUselessHalfHours
argument_list|()
operator|-
name|bInf
operator|.
name|getUselessHalfHours
argument_list|()
argument_list|)
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumberNoHtml
argument_list|(
name|aInf
operator|.
name|getTooBigRoomPreference
argument_list|()
operator|-
name|bInf
operator|.
name|getTooBigRoomPreference
argument_list|()
argument_list|)
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumberNoHtml
argument_list|(
name|aInf
operator|.
name|getDeptBalancPenalty
argument_list|()
operator|-
name|bInf
operator|.
name|getDeptBalancPenalty
argument_list|()
argument_list|)
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumberNoHtml
argument_list|(
name|aInf
operator|.
name|getSpreadPenalty
argument_list|()
operator|-
name|bInf
operator|.
name|getSpreadPenalty
argument_list|()
argument_list|)
block|,
name|ClassAssignmentDetails
operator|.
name|dispNumberNoHtml
argument_list|(
name|aInf
operator|.
name|getPerturbationPenalty
argument_list|()
operator|-
name|bInf
operator|.
name|getPerturbationPenalty
argument_list|()
argument_list|)
block|}
argument_list|,
operator|new
name|Comparable
index|[]
block|{
name|classSort
block|,
name|datesSort
block|,
name|timesSort
block|,
name|roomsSort
block|,
operator|new
name|Long
argument_list|(
name|aInf
operator|.
name|getNrStudentConflicts
argument_list|()
operator|-
name|bInf
operator|.
name|getNrStudentConflicts
argument_list|()
argument_list|)
block|,
operator|new
name|Double
argument_list|(
name|aInf
operator|.
name|getTimePreference
argument_list|()
operator|-
name|bInf
operator|.
name|getTimePreference
argument_list|()
argument_list|)
block|,
operator|new
name|Long
argument_list|(
name|aInf
operator|.
name|sumRoomPreference
argument_list|()
operator|-
name|bInf
operator|.
name|sumRoomPreference
argument_list|()
argument_list|)
block|,
operator|new
name|Long
argument_list|(
name|aInf
operator|.
name|getGroupConstraintPref
argument_list|()
operator|-
name|bInf
operator|.
name|getGroupConstraintPref
argument_list|()
argument_list|)
block|,
operator|new
name|Long
argument_list|(
name|aInf
operator|.
name|getBtbInstructorPreference
argument_list|()
operator|-
name|bInf
operator|.
name|getBtbInstructorPreference
argument_list|()
argument_list|)
block|,
operator|new
name|Long
argument_list|(
name|aInf
operator|.
name|getUselessHalfHours
argument_list|()
operator|-
name|bInf
operator|.
name|getUselessHalfHours
argument_list|()
argument_list|)
block|,
operator|new
name|Long
argument_list|(
name|aInf
operator|.
name|getTooBigRoomPreference
argument_list|()
operator|-
name|bInf
operator|.
name|getTooBigRoomPreference
argument_list|()
argument_list|)
block|,
operator|new
name|Double
argument_list|(
name|aInf
operator|.
name|getDeptBalancPenalty
argument_list|()
operator|-
name|bInf
operator|.
name|getDeptBalancPenalty
argument_list|()
argument_list|)
block|,
operator|new
name|Double
argument_list|(
name|aInf
operator|.
name|getSpreadPenalty
argument_list|()
operator|-
name|bInf
operator|.
name|getSpreadPenalty
argument_list|()
argument_list|)
block|,
operator|new
name|Double
argument_list|(
name|aInf
operator|.
name|getPerturbationPenalty
argument_list|()
operator|-
name|bInf
operator|.
name|getPerturbationPenalty
argument_list|()
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
name|File
name|file
init|=
name|ApplicationProperties
operator|.
name|getTempFile
argument_list|(
literal|"changes"
argument_list|,
literal|"pdf"
argument_list|)
decl_stmt|;
name|webTable
operator|.
name|exportPdf
argument_list|(
name|file
argument_list|,
name|WebTable
operator|.
name|getOrder
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|,
literal|"solutionChanges.ord"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|file
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Debug
operator|.
name|error
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

