begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2008 - 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|action
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForward
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|Web
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
operator|.
name|EventAddInfoForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|EventContact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Roles
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimetableManager
import|;
end_import

begin_class
specifier|public
class|class
name|EventAddInfoAction
extends|extends
name|Action
block|{
specifier|public
name|ActionForward
name|execute
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|ActionForm
name|form
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|Exception
block|{
name|EventAddInfoForm
name|myForm
init|=
operator|(
name|EventAddInfoForm
operator|)
name|form
decl_stmt|;
name|User
name|user
init|=
name|Web
operator|.
name|getUser
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
decl_stmt|;
comment|//Verification of user being logged in
if|if
condition|(
operator|!
name|Web
operator|.
name|isLoggedIn
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Access Denied."
argument_list|)
throw|;
block|}
name|myForm
operator|.
name|setMainContactLookup
argument_list|(
name|user
operator|.
name|isAdmin
argument_list|()
operator|||
name|Roles
operator|.
name|EVENT_MGR_ROLE
operator|.
name|equals
argument_list|(
name|user
operator|.
name|getRole
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|myForm
operator|.
name|getMainContactLookup
argument_list|()
condition|)
block|{
name|myForm
operator|.
name|setMainContactExternalId
argument_list|(
name|user
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|TimetableManager
name|m
init|=
name|TimetableManager
operator|.
name|getManager
argument_list|(
name|user
argument_list|)
decl_stmt|;
name|EventContact
name|c
init|=
name|EventContact
operator|.
name|findByExternalUniqueId
argument_list|(
name|user
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|c
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|myForm
operator|.
name|getMainContactFirstName
argument_list|()
operator|==
literal|null
operator|||
name|myForm
operator|.
name|getMainContactFirstName
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|myForm
operator|.
name|setMainContactFirstName
argument_list|(
name|c
operator|.
name|getFirstName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|myForm
operator|.
name|getMainContactMiddleName
argument_list|()
operator|==
literal|null
operator|||
name|myForm
operator|.
name|getMainContactMiddleName
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|myForm
operator|.
name|setMainContactMiddleName
argument_list|(
name|c
operator|.
name|getMiddleName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|myForm
operator|.
name|getMainContactLastName
argument_list|()
operator|==
literal|null
operator|||
name|myForm
operator|.
name|getMainContactLastName
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|myForm
operator|.
name|setMainContactLastName
argument_list|(
name|c
operator|.
name|getLastName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|myForm
operator|.
name|getMainContactEmail
argument_list|()
operator|==
literal|null
operator|||
name|myForm
operator|.
name|getMainContactEmail
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|myForm
operator|.
name|setMainContactEmail
argument_list|(
name|c
operator|.
name|getEmailAddress
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|myForm
operator|.
name|getMainContactPhone
argument_list|()
operator|==
literal|null
operator|||
name|myForm
operator|.
name|getMainContactPhone
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|myForm
operator|.
name|setMainContactPhone
argument_list|(
name|c
operator|.
name|getPhone
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|m
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|myForm
operator|.
name|getMainContactFirstName
argument_list|()
operator|==
literal|null
operator|||
name|myForm
operator|.
name|getMainContactFirstName
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|myForm
operator|.
name|setMainContactFirstName
argument_list|(
name|m
operator|.
name|getFirstName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|myForm
operator|.
name|getMainContactMiddleName
argument_list|()
operator|==
literal|null
operator|||
name|myForm
operator|.
name|getMainContactMiddleName
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|myForm
operator|.
name|setMainContactMiddleName
argument_list|(
name|m
operator|.
name|getMiddleName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|myForm
operator|.
name|getMainContactLastName
argument_list|()
operator|==
literal|null
operator|||
name|myForm
operator|.
name|getMainContactLastName
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|myForm
operator|.
name|setMainContactLastName
argument_list|(
name|m
operator|.
name|getLastName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|myForm
operator|.
name|getMainContactEmail
argument_list|()
operator|==
literal|null
operator|||
name|myForm
operator|.
name|getMainContactEmail
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|myForm
operator|.
name|setMainContactEmail
argument_list|(
name|m
operator|.
name|getEmailAddress
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|myForm
operator|.
name|getMainContactLastName
argument_list|()
operator|==
literal|null
operator|||
name|myForm
operator|.
name|getMainContactLastName
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|myForm
operator|.
name|setMainContactLastName
argument_list|(
name|user
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|//Operations
name|String
name|iOp
init|=
name|myForm
operator|.
name|getOp
argument_list|()
decl_stmt|;
if|if
condition|(
name|iOp
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
literal|"Change Selection"
operator|.
name|equals
argument_list|(
name|iOp
argument_list|)
condition|)
block|{
name|myForm
operator|.
name|save
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"back"
argument_list|,
literal|"eventAddInfo"
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"back"
argument_list|)
return|;
block|}
if|if
condition|(
literal|"Submit"
operator|.
name|equals
argument_list|(
name|iOp
argument_list|)
condition|)
block|{
name|ActionMessages
name|errors
init|=
name|myForm
operator|.
name|validate
argument_list|(
name|mapping
argument_list|,
name|request
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|errors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|saveErrors
argument_list|(
name|request
argument_list|,
name|errors
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|myForm
operator|.
name|submit
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|myForm
operator|.
name|cleanSessionAttributes
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
expr_stmt|;
name|response
operator|.
name|sendRedirect
argument_list|(
name|response
operator|.
name|encodeURL
argument_list|(
literal|"eventDetail.do?id="
operator|+
name|myForm
operator|.
name|getEventId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
if|if
condition|(
literal|"Update"
operator|.
name|equals
argument_list|(
name|iOp
argument_list|)
condition|)
block|{
name|ActionMessages
name|errors
init|=
name|myForm
operator|.
name|validate
argument_list|(
name|mapping
argument_list|,
name|request
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|errors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|saveErrors
argument_list|(
name|request
argument_list|,
name|errors
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|myForm
operator|.
name|update
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|myForm
operator|.
name|cleanSessionAttributes
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
expr_stmt|;
name|response
operator|.
name|sendRedirect
argument_list|(
name|response
operator|.
name|encodeURL
argument_list|(
literal|"eventDetail.do?id="
operator|+
name|myForm
operator|.
name|getEventId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
if|if
condition|(
literal|"Cancel Event"
operator|.
name|equals
argument_list|(
name|iOp
argument_list|)
condition|)
block|{
name|myForm
operator|.
name|cleanSessionAttributes
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
name|myForm
operator|.
name|getStartTime
argument_list|()
operator|>=
literal|0
condition|?
literal|"eventList"
else|:
literal|"eventGrid"
argument_list|)
return|;
block|}
if|if
condition|(
literal|"Cancel"
operator|.
name|equals
argument_list|(
name|iOp
argument_list|)
condition|)
block|{
name|myForm
operator|.
name|cleanSessionAttributes
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
expr_stmt|;
name|response
operator|.
name|sendRedirect
argument_list|(
name|response
operator|.
name|encodeURL
argument_list|(
literal|"eventDetail.do?id="
operator|+
name|myForm
operator|.
name|getEventId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"show"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

