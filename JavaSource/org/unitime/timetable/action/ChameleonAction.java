begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2008 - 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|action
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForward
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|util
operator|.
name|MessageResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|Debug
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|Web
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
operator|.
name|ChameleonForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ManagerRole
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Roles
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimetableManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|LookupTables
import|;
end_import

begin_comment
comment|/**   * MyEclipse Struts  * Creation date: 10-23-2006  *   * XDoclet definition:  * @struts:action path="/chameleon" name="chameleonForm" input="/admin/chameleon.jsp" scope="request"  */
end_comment

begin_class
specifier|public
class|class
name|ChameleonAction
extends|extends
name|Action
block|{
comment|// --------------------------------------------------------- Instance Variables
comment|// --------------------------------------------------------- Methods
comment|/**       * Method execute      * @param mapping      * @param form      * @param request      * @param response      * @return ActionForward      */
specifier|public
name|ActionForward
name|execute
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|ActionForm
name|form
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|Exception
block|{
name|HttpSession
name|httpSession
init|=
name|request
operator|.
name|getSession
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|Web
operator|.
name|isLoggedIn
argument_list|(
name|httpSession
argument_list|)
operator|||
operator|(
operator|!
name|Web
operator|.
name|isAdmin
argument_list|(
name|httpSession
argument_list|)
operator|&&
operator|(
name|httpSession
operator|.
name|getAttribute
argument_list|(
literal|"hdnAdminAlias"
argument_list|)
operator|==
literal|null
operator|||
operator|!
name|httpSession
operator|.
name|getAttribute
argument_list|(
literal|"hdnAdminAlias"
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
literal|"1"
argument_list|)
operator|)
operator|)
condition|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Access Denied."
argument_list|)
throw|;
block|}
name|MessageResources
name|rsc
init|=
name|getResources
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|User
name|user
init|=
name|Web
operator|.
name|getUser
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
decl_stmt|;
name|ChameleonForm
name|frm
init|=
operator|(
name|ChameleonForm
operator|)
name|form
decl_stmt|;
name|ActionMessages
name|errors
init|=
operator|new
name|ActionMessages
argument_list|()
decl_stmt|;
name|String
name|op
init|=
operator|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"op"
argument_list|)
operator|==
literal|null
operator|)
condition|?
operator|(
name|frm
operator|.
name|getOp
argument_list|()
operator|==
literal|null
operator|||
name|frm
operator|.
name|getOp
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
operator|)
condition|?
operator|(
name|request
operator|.
name|getAttribute
argument_list|(
literal|"op"
argument_list|)
operator|==
literal|null
operator|)
condition|?
literal|null
else|:
name|request
operator|.
name|getAttribute
argument_list|(
literal|"op"
argument_list|)
operator|.
name|toString
argument_list|()
else|:
name|frm
operator|.
name|getOp
argument_list|()
else|:
name|request
operator|.
name|getParameter
argument_list|(
literal|"op"
argument_list|)
decl_stmt|;
if|if
condition|(
name|op
operator|==
literal|null
operator|||
name|op
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|op
operator|=
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"op.view"
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setOp
argument_list|(
name|op
argument_list|)
expr_stmt|;
comment|// First Access - display blank form
if|if
condition|(
name|op
operator|.
name|equals
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"op.view"
argument_list|)
argument_list|)
condition|)
block|{
name|LookupTables
operator|.
name|setupTimetableManagers
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
comment|// Change User
if|if
condition|(
name|op
operator|.
name|equals
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.changeUser"
argument_list|)
argument_list|)
condition|)
block|{
try|try
block|{
name|doSwitch
argument_list|(
name|request
argument_list|,
name|frm
argument_list|,
name|user
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"reload"
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Debug
operator|.
name|error
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|errors
operator|.
name|add
argument_list|(
literal|"exception"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|saveErrors
argument_list|(
name|request
argument_list|,
name|errors
argument_list|)
expr_stmt|;
name|LookupTables
operator|.
name|setupTimetableManagers
argument_list|(
name|request
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"displayForm"
argument_list|)
return|;
block|}
block|}
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"displayForm"
argument_list|)
return|;
block|}
comment|/**      * Reads in new user attributes and reloads Timetabling for the new user      * @param request      * @param frm      * @param u      */
specifier|private
name|void
name|doSwitch
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|ChameleonForm
name|frm
parameter_list|,
name|User
name|u
parameter_list|)
throws|throws
name|Exception
block|{
name|TimetableManager
name|tm
init|=
name|TimetableManager
operator|.
name|findByExternalId
argument_list|(
name|frm
operator|.
name|getPuid
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|tm
operator|==
literal|null
condition|)
throw|throw
operator|new
name|Exception
argument_list|(
literal|"User is not a Timetable Manager"
argument_list|)
throw|;
name|String
name|puid
init|=
name|frm
operator|.
name|getPuid
argument_list|()
decl_stmt|;
comment|//while (puid.startsWith("0")) puid = puid.substring(1);
name|u
operator|.
name|setId
argument_list|(
name|puid
argument_list|)
expr_stmt|;
name|u
operator|.
name|setName
argument_list|(
name|tm
operator|.
name|getName
argument_list|()
operator|+
literal|" (A)"
argument_list|)
expr_stmt|;
name|u
operator|.
name|setAdmin
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|u
operator|.
name|setRole
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|u
operator|.
name|setOtherAttributes
argument_list|(
operator|new
name|Properties
argument_list|()
argument_list|)
expr_stmt|;
name|u
operator|.
name|setAttribute
argument_list|(
name|Constants
operator|.
name|TMTBL_MGR_ID_ATTR_NAME
argument_list|,
name|tm
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Vector
name|roles
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
if|if
condition|(
name|tm
operator|.
name|getManagerRoles
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|Iterator
name|it2
init|=
name|tm
operator|.
name|getManagerRoles
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|it2
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|ManagerRole
name|mr
init|=
operator|(
name|ManagerRole
operator|)
name|it2
operator|.
name|next
argument_list|()
decl_stmt|;
name|Roles
name|r
init|=
name|mr
operator|.
name|getRole
argument_list|()
decl_stmt|;
name|String
name|role1
init|=
name|r
operator|.
name|getReference
argument_list|()
decl_stmt|;
name|roles
operator|.
name|addElement
argument_list|(
name|role1
argument_list|)
expr_stmt|;
if|if
condition|(
name|role1
operator|.
name|equals
argument_list|(
name|Roles
operator|.
name|ADMIN_ROLE
argument_list|)
condition|)
name|u
operator|.
name|setAdmin
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
name|u
operator|.
name|setRoles
argument_list|(
name|roles
argument_list|)
expr_stmt|;
name|HashSet
name|depts
init|=
operator|new
name|HashSet
argument_list|()
decl_stmt|;
name|Set
name|dp
init|=
name|tm
operator|.
name|getDepartments
argument_list|()
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|dp
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Department
name|d
init|=
operator|(
name|Department
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|depts
operator|.
name|add
argument_list|(
name|d
operator|.
name|getDeptCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|u
operator|.
name|setDepartments
argument_list|(
operator|new
name|Vector
argument_list|(
name|depts
argument_list|)
argument_list|)
expr_stmt|;
comment|// Set Session Variables
name|HttpSession
name|session
init|=
name|request
operator|.
name|getSession
argument_list|()
decl_stmt|;
name|session
operator|.
name|setAttribute
argument_list|(
literal|"loggedOn"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|session
operator|.
name|setAttribute
argument_list|(
literal|"hdnCallingScreen"
argument_list|,
literal|"main.jsp"
argument_list|)
expr_stmt|;
name|session
operator|.
name|setAttribute
argument_list|(
literal|"hdnAdminAlias"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|Constants
operator|.
name|resetSessionAttributes
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|Web
operator|.
name|setUser
argument_list|(
name|session
argument_list|,
name|u
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

