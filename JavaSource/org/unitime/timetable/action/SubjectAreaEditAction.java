begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.0 (University Course Timetabling& Student Sectioning Application)  * Copyright (C) 2007, UniTime.org, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program; if not, write to the Free Software Foundation, Inc.,  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|action
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForward
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|util
operator|.
name|MessageResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|Transaction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|Web
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
operator|.
name|SubjectAreaEditForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ChangeLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|InstructionalOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Roles
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SubjectArea
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|DepartmentDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|SubjectAreaDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|LookupTables
import|;
end_import

begin_comment
comment|/**   * MyEclipse Struts  * Creation date: 05-15-2007  *   * XDoclet definition:  * @struts.action path="/subjectAreaEdit" name="subjectAreaEditForm" input="/admin/subjectAreaEdit.jsp" scope="request"  * @struts.action-forward name="editSubjectArea" path="SubjectAreaEditTile"  * @struts.action-forward name="addSubjectArea" path="SubjectAreaAddTile"  */
end_comment

begin_class
specifier|public
class|class
name|SubjectAreaEditAction
extends|extends
name|Action
block|{
comment|/* 	 * Generated Methods 	 */
comment|/**  	 * Method execute 	 * @param mapping 	 * @param form 	 * @param request 	 * @param response 	 * @return ActionForward 	 */
specifier|public
name|ActionForward
name|execute
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|ActionForm
name|form
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|Exception
block|{
comment|// Check Access
if|if
condition|(
operator|!
name|Web
operator|.
name|isLoggedIn
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
operator|||
operator|!
name|Web
operator|.
name|hasRole
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|,
name|Roles
operator|.
name|getAdminRoles
argument_list|()
argument_list|)
condition|)
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Access Denied."
argument_list|)
throw|;
name|SubjectAreaEditForm
name|frm
init|=
operator|(
name|SubjectAreaEditForm
operator|)
name|form
decl_stmt|;
name|MessageResources
name|rsc
init|=
name|getResources
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|User
name|user
init|=
name|Web
operator|.
name|getUser
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
decl_stmt|;
comment|// Read operation to be performed
name|String
name|op
init|=
operator|(
name|frm
operator|.
name|getOp
argument_list|()
operator|!=
literal|null
condition|?
name|frm
operator|.
name|getOp
argument_list|()
else|:
name|request
operator|.
name|getParameter
argument_list|(
literal|"op"
argument_list|)
operator|)
decl_stmt|;
comment|// Add
if|if
condition|(
name|op
operator|.
name|equals
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.addSubjectArea"
argument_list|)
argument_list|)
condition|)
block|{
name|LookupTables
operator|.
name|setupDepts
argument_list|(
name|request
argument_list|,
operator|(
name|Long
operator|)
name|user
operator|.
name|getAttribute
argument_list|(
name|Constants
operator|.
name|SESSION_ID_ATTR_NAME
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"addSubjectArea"
argument_list|)
return|;
block|}
comment|// Edit
if|if
condition|(
name|op
operator|.
name|equals
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"op.edit"
argument_list|)
argument_list|)
condition|)
block|{
name|doLoad
argument_list|(
name|request
argument_list|,
name|frm
argument_list|)
expr_stmt|;
name|LookupTables
operator|.
name|setupDepts
argument_list|(
name|request
argument_list|,
operator|(
name|Long
operator|)
name|user
operator|.
name|getAttribute
argument_list|(
name|Constants
operator|.
name|SESSION_ID_ATTR_NAME
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"editSubjectArea"
argument_list|)
return|;
block|}
comment|// Update
if|if
condition|(
name|op
operator|.
name|equals
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.updateSubjectArea"
argument_list|)
argument_list|)
operator|||
name|op
operator|.
name|equals
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.saveSubjectArea"
argument_list|)
argument_list|)
condition|)
block|{
comment|// Validate input
name|ActionMessages
name|errors
init|=
name|frm
operator|.
name|validate
argument_list|(
name|mapping
argument_list|,
name|request
argument_list|)
decl_stmt|;
if|if
condition|(
name|errors
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|saveErrors
argument_list|(
name|request
argument_list|,
name|errors
argument_list|)
expr_stmt|;
name|LookupTables
operator|.
name|setupDepts
argument_list|(
name|request
argument_list|,
operator|(
name|Long
operator|)
name|user
operator|.
name|getAttribute
argument_list|(
name|Constants
operator|.
name|SESSION_ID_ATTR_NAME
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|frm
operator|.
name|getUniqueId
argument_list|()
operator|!=
literal|null
condition|)
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"editSubjectArea"
argument_list|)
return|;
else|else
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"addSubjectArea"
argument_list|)
return|;
block|}
else|else
block|{
name|doUpdate
argument_list|(
name|request
argument_list|,
name|frm
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Delete
if|if
condition|(
name|op
operator|.
name|equals
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.deleteSubjectArea"
argument_list|)
argument_list|)
condition|)
block|{
name|doDelete
argument_list|(
name|request
argument_list|,
name|frm
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|frm
operator|.
name|getUniqueId
argument_list|()
operator|!=
literal|null
condition|)
name|request
operator|.
name|setAttribute
argument_list|(
name|Constants
operator|.
name|JUMP_TO_ATTR_NAME
argument_list|,
name|frm
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"back"
argument_list|)
return|;
block|}
comment|/** 	 * Load the subject area into the form 	 * @param request 	 * @param frm 	 */
specifier|private
name|void
name|doLoad
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|SubjectAreaEditForm
name|frm
parameter_list|)
throws|throws
name|Exception
block|{
name|Long
name|id
init|=
literal|null
decl_stmt|;
try|try
block|{
name|id
operator|=
name|Long
operator|.
name|parseLong
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Invalid Subject Area IDencountered"
argument_list|)
throw|;
block|}
name|SubjectArea
name|sa
init|=
operator|new
name|SubjectAreaDAO
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|frm
operator|.
name|setUniqueId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setAbbv
argument_list|(
name|sa
operator|.
name|getSubjectAreaAbbreviation
argument_list|()
operator|!=
literal|null
condition|?
name|sa
operator|.
name|getSubjectAreaAbbreviation
argument_list|()
else|:
literal|""
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setDepartment
argument_list|(
name|sa
operator|.
name|getDepartment
argument_list|()
operator|!=
literal|null
condition|?
name|sa
operator|.
name|getDepartment
argument_list|()
operator|.
name|getUniqueId
argument_list|()
else|:
literal|null
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setExternalId
argument_list|(
name|sa
operator|.
name|getExternalUniqueId
argument_list|()
operator|!=
literal|null
condition|?
name|sa
operator|.
name|getExternalUniqueId
argument_list|()
else|:
literal|""
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setShortTitle
argument_list|(
name|sa
operator|.
name|getShortTitle
argument_list|()
operator|!=
literal|null
condition|?
name|sa
operator|.
name|getShortTitle
argument_list|()
else|:
literal|""
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setLongTitle
argument_list|(
name|sa
operator|.
name|getLongTitle
argument_list|()
operator|!=
literal|null
condition|?
name|sa
operator|.
name|getLongTitle
argument_list|()
else|:
literal|""
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setPseudo
argument_list|(
name|sa
operator|.
name|isPseudoSubjectArea
argument_list|()
operator|!=
literal|null
condition|?
name|sa
operator|.
name|isPseudoSubjectArea
argument_list|()
else|:
literal|null
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setScheduleBkOnly
argument_list|(
name|sa
operator|.
name|isScheduleBookOnly
argument_list|()
operator|!=
literal|null
condition|?
name|sa
operator|.
name|isScheduleBookOnly
argument_list|()
else|:
literal|null
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Delete Subject Area 	 * @param request 	 * @param frm 	 */
specifier|private
name|void
name|doDelete
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|SubjectAreaEditForm
name|frm
parameter_list|)
throws|throws
name|Exception
block|{
name|Session
name|hibSession
init|=
literal|null
decl_stmt|;
name|Transaction
name|tx
init|=
literal|null
decl_stmt|;
try|try
block|{
name|SubjectAreaDAO
name|sdao
init|=
operator|new
name|SubjectAreaDAO
argument_list|()
decl_stmt|;
name|hibSession
operator|=
name|sdao
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|tx
operator|=
name|hibSession
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
name|SubjectArea
name|sa
init|=
name|sdao
operator|.
name|get
argument_list|(
name|frm
operator|.
name|getUniqueId
argument_list|()
argument_list|)
decl_stmt|;
name|Set
name|s
init|=
name|sa
operator|.
name|getInstructionalOfferings
argument_list|()
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|s
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|InstructionalOffering
name|io
init|=
operator|(
name|InstructionalOffering
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|io
operator|.
name|deleteAllDistributionPreferences
argument_list|(
name|hibSession
argument_list|)
expr_stmt|;
name|io
operator|.
name|deleteAllReservations
argument_list|(
name|hibSession
argument_list|)
expr_stmt|;
name|io
operator|.
name|deleteAllClasses
argument_list|(
name|hibSession
argument_list|)
expr_stmt|;
name|io
operator|.
name|deleteAllCourses
argument_list|(
name|hibSession
argument_list|)
expr_stmt|;
name|hibSession
operator|.
name|delete
argument_list|(
name|io
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Iterator
name|i
init|=
name|sa
operator|.
name|getCourseOfferings
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|CourseOffering
name|co
init|=
operator|(
name|CourseOffering
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|hibSession
operator|.
name|delete
argument_list|(
name|co
argument_list|)
expr_stmt|;
block|}
name|hibSession
operator|.
name|delete
argument_list|(
name|sa
argument_list|)
expr_stmt|;
name|tx
operator|.
name|commit
argument_list|()
expr_stmt|;
name|hibSession
operator|.
name|flush
argument_list|()
expr_stmt|;
name|hibSession
operator|.
name|refresh
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
operator|.
name|getCurrentAcadSession
argument_list|(
name|Web
operator|.
name|getUser
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
if|if
condition|(
name|tx
operator|!=
literal|null
condition|)
name|tx
operator|.
name|rollback
argument_list|()
expr_stmt|;
throw|throw
operator|(
name|e
operator|)
throw|;
block|}
block|}
comment|/** 	 * Update Subject Area 	 * @param request 	 * @param frm 	 */
specifier|private
name|void
name|doUpdate
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|SubjectAreaEditForm
name|frm
parameter_list|)
throws|throws
name|Exception
block|{
name|Session
name|hibSession
init|=
literal|null
decl_stmt|;
name|Transaction
name|tx
init|=
literal|null
decl_stmt|;
try|try
block|{
name|SubjectAreaDAO
name|sdao
init|=
operator|new
name|SubjectAreaDAO
argument_list|()
decl_stmt|;
name|DepartmentDAO
name|ddao
init|=
operator|new
name|DepartmentDAO
argument_list|()
decl_stmt|;
name|SubjectArea
name|sa
init|=
literal|null
decl_stmt|;
name|hibSession
operator|=
name|sdao
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|tx
operator|=
name|hibSession
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
if|if
condition|(
name|frm
operator|.
name|getUniqueId
argument_list|()
operator|!=
literal|null
condition|)
name|sa
operator|=
name|sdao
operator|.
name|get
argument_list|(
name|frm
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|sa
operator|=
operator|new
name|SubjectArea
argument_list|()
expr_stmt|;
name|Department
name|dept
init|=
name|ddao
operator|.
name|get
argument_list|(
name|frm
operator|.
name|getDepartment
argument_list|()
argument_list|)
decl_stmt|;
name|sa
operator|.
name|setSession
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
operator|.
name|getCurrentAcadSession
argument_list|(
name|Web
operator|.
name|getUser
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|sa
operator|.
name|setSubjectAreaAbbreviation
argument_list|(
name|frm
operator|.
name|getAbbv
argument_list|()
argument_list|)
expr_stmt|;
name|sa
operator|.
name|setDepartment
argument_list|(
name|dept
argument_list|)
expr_stmt|;
name|sa
operator|.
name|setExternalUniqueId
argument_list|(
name|frm
operator|.
name|getExternalId
argument_list|()
argument_list|)
expr_stmt|;
name|sa
operator|.
name|setShortTitle
argument_list|(
name|frm
operator|.
name|getShortTitle
argument_list|()
argument_list|)
expr_stmt|;
name|sa
operator|.
name|setLongTitle
argument_list|(
name|frm
operator|.
name|getLongTitle
argument_list|()
argument_list|)
expr_stmt|;
name|sa
operator|.
name|setPseudoSubjectArea
argument_list|(
name|frm
operator|.
name|getPseudo
argument_list|()
operator|==
literal|null
condition|?
name|Boolean
operator|.
name|FALSE
else|:
name|frm
operator|.
name|getPseudo
argument_list|()
argument_list|)
expr_stmt|;
name|sa
operator|.
name|setScheduleBookOnly
argument_list|(
name|frm
operator|.
name|getScheduleBkOnly
argument_list|()
operator|==
literal|null
condition|?
name|Boolean
operator|.
name|FALSE
else|:
name|frm
operator|.
name|getScheduleBkOnly
argument_list|()
argument_list|)
expr_stmt|;
name|hibSession
operator|.
name|saveOrUpdate
argument_list|(
name|sa
argument_list|)
expr_stmt|;
name|tx
operator|.
name|commit
argument_list|()
expr_stmt|;
name|hibSession
operator|.
name|refresh
argument_list|(
name|sa
argument_list|)
expr_stmt|;
name|ChangeLog
operator|.
name|addChange
argument_list|(
name|hibSession
argument_list|,
name|request
argument_list|,
name|sa
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|SUBJECT_AREA_EDIT
argument_list|,
operator|(
name|frm
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|?
name|ChangeLog
operator|.
name|Operation
operator|.
name|CREATE
else|:
name|ChangeLog
operator|.
name|Operation
operator|.
name|UPDATE
operator|)
argument_list|,
name|sa
argument_list|,
name|dept
argument_list|)
expr_stmt|;
name|hibSession
operator|.
name|flush
argument_list|()
expr_stmt|;
name|hibSession
operator|.
name|refresh
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
operator|.
name|getCurrentAcadSession
argument_list|(
name|Web
operator|.
name|getUser
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
if|if
condition|(
name|tx
operator|!=
literal|null
condition|)
name|tx
operator|.
name|rollback
argument_list|()
expr_stmt|;
throw|throw
operator|(
name|e
operator|)
throw|;
block|}
block|}
block|}
end_class

end_unit

