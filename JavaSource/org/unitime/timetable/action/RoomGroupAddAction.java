begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|action
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForward
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|util
operator|.
name|MessageResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|Transaction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|Debug
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|SessionAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
operator|.
name|RoomGroupEditForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ChangeLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|RoomGroupDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|SessionDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|rights
operator|.
name|Right
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|LookupTables
import|;
end_import

begin_comment
comment|/**   * MyEclipse Struts  * Creation date: 06-28-2006  *   * XDoclet definition:  * @struts.action path="/roomGroupAdd" name="roomGroupEditForm" input="/admin/roomGroupAdd.jsp" scope="request"  * @struts.action-forward name="showRoomGroupList" path="/roomGroupList.do"  * @struts.action-forward name="showAdd" path="roomGroupAddTile"  *  * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"/roomGroupAdd"
argument_list|)
specifier|public
class|class
name|RoomGroupAddAction
extends|extends
name|Action
block|{
annotation|@
name|Autowired
name|SessionContext
name|sessionContext
decl_stmt|;
comment|// --------------------------------------------------------- Instance Variables
comment|// --------------------------------------------------------- Methods
comment|/**  	 * Method execute 	 * @param mapping 	 * @param form 	 * @param request 	 * @param response 	 * @return ActionForward 	 */
specifier|public
name|ActionForward
name|execute
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|ActionForm
name|form
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|Exception
block|{
name|RoomGroupEditForm
name|roomGroupEditForm
init|=
operator|(
name|RoomGroupEditForm
operator|)
name|form
decl_stmt|;
name|MessageResources
name|rsc
init|=
name|getResources
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|String
name|doit
init|=
name|roomGroupEditForm
operator|.
name|getDoit
argument_list|()
decl_stmt|;
if|if
condition|(
name|doit
operator|!=
literal|null
condition|)
block|{
comment|//add new
if|if
condition|(
name|doit
operator|.
name|equals
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.addNew"
argument_list|)
argument_list|)
condition|)
block|{
name|ActionMessages
name|errors
init|=
operator|new
name|ActionMessages
argument_list|()
decl_stmt|;
name|errors
operator|=
name|roomGroupEditForm
operator|.
name|validate
argument_list|(
name|mapping
argument_list|,
name|request
argument_list|)
expr_stmt|;
if|if
condition|(
name|errors
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
name|save
argument_list|(
name|mapping
argument_list|,
name|roomGroupEditForm
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showRoomGroupList"
argument_list|)
return|;
block|}
else|else
block|{
name|saveErrors
argument_list|(
name|request
argument_list|,
name|errors
argument_list|)
expr_stmt|;
block|}
block|}
comment|//return to room list
if|if
condition|(
name|doit
operator|.
name|equals
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.returnToRoomGroupList"
argument_list|)
argument_list|)
condition|)
block|{
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showRoomGroupList"
argument_list|)
return|;
block|}
block|}
comment|//get depts owned by user
name|LookupTables
operator|.
name|setupDepartments
argument_list|(
name|request
argument_list|,
name|sessionContext
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//set default department
name|TreeSet
argument_list|<
name|Department
argument_list|>
name|departments
init|=
name|Department
operator|.
name|getUserDepartments
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|departments
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
block|{
name|roomGroupEditForm
operator|.
name|setDeptCode
argument_list|(
name|departments
operator|.
name|first
argument_list|()
operator|.
name|getDeptCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|String
name|deptCode
init|=
operator|(
name|String
operator|)
name|sessionContext
operator|.
name|getAttribute
argument_list|(
name|SessionAttribute
operator|.
name|DepartmentCodeRoom
argument_list|)
decl_stmt|;
if|if
condition|(
name|deptCode
operator|!=
literal|null
operator|&&
operator|!
name|deptCode
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
name|deptCode
operator|.
name|equals
argument_list|(
literal|"All"
argument_list|)
operator|&&
operator|!
name|deptCode
operator|.
name|matches
argument_list|(
literal|"Exam[0-9]*"
argument_list|)
condition|)
name|roomGroupEditForm
operator|.
name|setDeptCode
argument_list|(
name|deptCode
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|roomGroupEditForm
operator|.
name|getDeptCode
argument_list|()
operator|==
literal|null
operator|||
name|roomGroupEditForm
operator|.
name|getDeptCode
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|||
name|roomGroupEditForm
operator|.
name|getDeptCode
argument_list|()
operator|.
name|matches
argument_list|(
literal|"Exam[0-9]*"
argument_list|)
operator|||
operator|!
name|sessionContext
operator|.
name|hasPermission
argument_list|(
name|roomGroupEditForm
operator|.
name|getDeptCode
argument_list|()
argument_list|,
literal|"Department"
argument_list|,
name|Right
operator|.
name|DepartmentRoomGroupAdd
argument_list|)
condition|)
block|{
name|sessionContext
operator|.
name|checkPermission
argument_list|(
name|Right
operator|.
name|GlobalRoomGroupAdd
argument_list|)
expr_stmt|;
name|roomGroupEditForm
operator|.
name|setGlobal
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|sessionContext
operator|.
name|checkPermission
argument_list|(
name|roomGroupEditForm
operator|.
name|getDeptCode
argument_list|()
argument_list|,
literal|"Department"
argument_list|,
name|Right
operator|.
name|DepartmentRoomGroupAdd
argument_list|)
expr_stmt|;
name|roomGroupEditForm
operator|.
name|setGlobal
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
name|roomGroupEditForm
operator|.
name|setSessionId
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getCurrentAcademicSessionId
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showAdd"
argument_list|)
return|;
block|}
specifier|private
name|void
name|save
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|RoomGroupEditForm
name|roomGroupEditForm
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|Exception
block|{
name|Department
name|d
init|=
operator|(
name|roomGroupEditForm
operator|.
name|isGlobal
argument_list|()
condition|?
literal|null
else|:
name|Department
operator|.
name|findByDeptCode
argument_list|(
name|roomGroupEditForm
operator|.
name|getDeptCode
argument_list|()
argument_list|,
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getCurrentAcademicSessionId
argument_list|()
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|d
operator|==
literal|null
condition|)
name|sessionContext
operator|.
name|checkPermission
argument_list|(
name|Right
operator|.
name|GlobalRoomGroupAdd
argument_list|)
expr_stmt|;
else|else
name|sessionContext
operator|.
name|checkPermission
argument_list|(
name|d
argument_list|,
name|Right
operator|.
name|DepartmentRoomFeatureAdd
argument_list|)
expr_stmt|;
comment|//create new roomGroup
name|RoomGroupDAO
name|rgdao
init|=
operator|new
name|RoomGroupDAO
argument_list|()
decl_stmt|;
name|RoomGroup
name|rg
init|=
operator|new
name|RoomGroup
argument_list|()
decl_stmt|;
name|rg
operator|.
name|setName
argument_list|(
name|roomGroupEditForm
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|rg
operator|.
name|setAbbv
argument_list|(
name|roomGroupEditForm
operator|.
name|getAbbv
argument_list|()
argument_list|)
expr_stmt|;
name|rg
operator|.
name|setSession
argument_list|(
name|SessionDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getCurrentAcademicSessionId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|rg
operator|.
name|setDescription
argument_list|(
name|roomGroupEditForm
operator|.
name|getDesc
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|200
condition|?
name|roomGroupEditForm
operator|.
name|getDesc
argument_list|()
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|200
argument_list|)
else|:
name|roomGroupEditForm
operator|.
name|getDesc
argument_list|()
argument_list|)
expr_stmt|;
name|rg
operator|.
name|setGlobal
argument_list|(
name|d
operator|==
literal|null
argument_list|)
expr_stmt|;
name|rg
operator|.
name|setDepartment
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|rg
operator|.
name|setDefaultGroup
argument_list|(
name|roomGroupEditForm
operator|.
name|isDeft
argument_list|()
argument_list|)
expr_stmt|;
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
init|=
name|rgdao
operator|.
name|getSession
argument_list|()
decl_stmt|;
name|Transaction
name|tx
init|=
literal|null
decl_stmt|;
try|try
block|{
name|tx
operator|=
name|hibSession
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
name|checkDefault
argument_list|(
name|hibSession
argument_list|,
name|rg
argument_list|)
expr_stmt|;
name|hibSession
operator|.
name|saveOrUpdate
argument_list|(
name|rg
argument_list|)
expr_stmt|;
name|ChangeLog
operator|.
name|addChange
argument_list|(
name|hibSession
argument_list|,
name|sessionContext
argument_list|,
name|rg
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|ROOM_GROUP_EDIT
argument_list|,
name|ChangeLog
operator|.
name|Operation
operator|.
name|CREATE
argument_list|,
literal|null
argument_list|,
name|rg
operator|.
name|getDepartment
argument_list|()
argument_list|)
expr_stmt|;
name|tx
operator|.
name|commit
argument_list|()
expr_stmt|;
name|hibSession
operator|.
name|refresh
argument_list|(
name|rg
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"hash"
argument_list|,
literal|"A"
operator|+
name|rg
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Debug
operator|.
name|error
argument_list|(
name|e
argument_list|)
expr_stmt|;
try|try
block|{
if|if
condition|(
name|tx
operator|!=
literal|null
operator|&&
name|tx
operator|.
name|isActive
argument_list|()
condition|)
name|tx
operator|.
name|rollback
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e1
parameter_list|)
block|{
block|}
throw|throw
name|e
throw|;
block|}
block|}
comment|/** 	 *  	 * @param hibSession 	 * @param rg 	 */
specifier|public
name|void
name|checkDefault
parameter_list|(
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
parameter_list|,
name|RoomGroup
name|rg
parameter_list|)
block|{
if|if
condition|(
operator|!
name|rg
operator|.
name|isDefaultGroup
argument_list|()
operator|.
name|booleanValue
argument_list|()
condition|)
return|return;
for|for
control|(
name|RoomGroup
name|x
range|:
name|RoomGroup
operator|.
name|getAllRoomGroupsForSession
argument_list|(
name|rg
operator|.
name|getSession
argument_list|()
argument_list|)
control|)
block|{
if|if
condition|(
operator|!
name|x
operator|.
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
name|rg
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|&&
name|x
operator|.
name|isDefaultGroup
argument_list|()
operator|.
name|booleanValue
argument_list|()
condition|)
block|{
name|x
operator|.
name|setDefaultGroup
argument_list|(
name|Boolean
operator|.
name|FALSE
argument_list|)
expr_stmt|;
name|hibSession
operator|.
name|saveOrUpdate
argument_list|(
name|x
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

