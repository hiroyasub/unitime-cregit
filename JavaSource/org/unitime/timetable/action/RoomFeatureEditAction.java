begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|action
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForward
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|HibernateException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|Transaction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|criterion
operator|.
name|Order
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|Debug
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|SessionAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
operator|.
name|RoomFeatureEditForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ChangeLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DepartmentRoomFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|GlobalRoomFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Location
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomDept
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomFeaturePref
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|ExamTypeDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|RoomFeatureDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|RoomFeatureTypeDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|rights
operator|.
name|Right
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|spring
operator|.
name|struts
operator|.
name|SpringAwareLookupDispatchAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_comment
comment|/**   * MyEclipse Struts  * Creation date: 02-18-2005  *   * XDoclet definition:  * @struts:action path="/roomFeatureEdit" name="roomFeatureEditForm" parameter="do" scope="request" validate="true"  * @struts:action-forward name="showEdit" path="/admin/roomFeatureEdit.jsp"  * @struts:action-forward name="showAdd" path="/admin/roomFeatureAdd.jsp"  * @struts:action-forward name="showRoomFeatureList" path="/roomFeatureList.do" redirect="true"  *  * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"/roomFeatureEdit"
argument_list|)
specifier|public
class|class
name|RoomFeatureEditAction
extends|extends
name|SpringAwareLookupDispatchAction
block|{
annotation|@
name|Autowired
name|SessionContext
name|sessionContext
decl_stmt|;
comment|// --------------------------------------------------------- Methods
comment|/** 	 *  	 */
specifier|protected
name|Map
name|getKeyMethodMap
parameter_list|()
block|{
name|Map
name|map
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"editRoomFeature"
argument_list|,
literal|"editRoomFeature"
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"button.delete"
argument_list|,
literal|"deleteRoomFeature"
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"button.update"
argument_list|,
literal|"saveRoomFeature"
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"button.addNew"
argument_list|,
literal|"saveRoomFeature"
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"button.returnToRoomFeatureList"
argument_list|,
literal|"cancelRoomFeature"
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
comment|/** 	 *  	 * @param mapping 	 * @param form 	 * @param request 	 * @param response 	 * @return 	 * @throws HibernateException 	 * @throws Exception 	 */
specifier|public
name|ActionForward
name|editRoomFeature
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|ActionForm
name|form
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|HibernateException
throws|,
name|Exception
block|{
name|RoomFeatureEditForm
name|roomFeatureEditForm
init|=
operator|(
name|RoomFeatureEditForm
operator|)
name|form
decl_stmt|;
comment|//get roomFeature from request
name|Long
name|id
init|=
operator|new
name|Long
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"id"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|roomFeatureEditForm
operator|.
name|setId
argument_list|(
name|id
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|RoomFeatureDAO
name|rdao
init|=
operator|new
name|RoomFeatureDAO
argument_list|()
decl_stmt|;
name|RoomFeature
name|rf
init|=
name|rdao
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|sessionContext
operator|.
name|checkPermission
argument_list|(
name|rf
argument_list|,
name|rf
operator|instanceof
name|GlobalRoomFeature
condition|?
name|Right
operator|.
name|GlobalRoomFeatureEdit
else|:
name|Right
operator|.
name|DepartmenalRoomFeatureEdit
argument_list|)
expr_stmt|;
name|roomFeatureEditForm
operator|.
name|setSessionId
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getCurrentAcademicSessionId
argument_list|()
argument_list|)
expr_stmt|;
name|roomFeatureEditForm
operator|.
name|setFeatureTypeId
argument_list|(
name|rf
operator|.
name|getFeatureType
argument_list|()
operator|==
literal|null
condition|?
operator|-
literal|1
else|:
name|rf
operator|.
name|getFeatureType
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
comment|//set global
if|if
condition|(
name|rf
operator|instanceof
name|GlobalRoomFeature
condition|)
block|{
name|roomFeatureEditForm
operator|.
name|setGlobal
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|roomFeatureEditForm
operator|.
name|setDeptCode
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|roomFeatureEditForm
operator|.
name|setDeptName
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|String
name|dept
init|=
operator|(
name|String
operator|)
name|sessionContext
operator|.
name|getAttribute
argument_list|(
name|SessionAttribute
operator|.
name|DepartmentCodeRoom
argument_list|)
decl_stmt|;
if|if
condition|(
name|dept
operator|!=
literal|null
operator|&&
name|dept
operator|.
name|matches
argument_list|(
literal|"Exam[0-9]*"
argument_list|)
condition|)
block|{
name|roomFeatureEditForm
operator|.
name|setDeptName
argument_list|(
name|ExamTypeDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|dept
operator|.
name|substring
argument_list|(
literal|4
argument_list|)
argument_list|)
argument_list|)
operator|.
name|getLabel
argument_list|()
operator|+
literal|" Examination Rooms"
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|dept
operator|!=
literal|null
operator|&&
operator|!
name|dept
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
literal|"All"
operator|.
name|equals
argument_list|(
name|dept
argument_list|)
condition|)
block|{
name|Department
name|department
init|=
name|Department
operator|.
name|findByDeptCode
argument_list|(
name|dept
argument_list|,
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getCurrentAcademicSessionId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|department
operator|!=
literal|null
condition|)
name|roomFeatureEditForm
operator|.
name|setDeptName
argument_list|(
name|department
operator|.
name|getDeptCode
argument_list|()
operator|+
literal|" - "
operator|+
name|department
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|rf
operator|instanceof
name|DepartmentRoomFeature
condition|)
block|{
name|roomFeatureEditForm
operator|.
name|setGlobal
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Department
name|dept
init|=
operator|(
operator|(
name|DepartmentRoomFeature
operator|)
name|rf
operator|)
operator|.
name|getDepartment
argument_list|()
decl_stmt|;
name|roomFeatureEditForm
operator|.
name|setDeptCode
argument_list|(
name|dept
operator|.
name|getDeptCode
argument_list|()
argument_list|)
expr_stmt|;
name|roomFeatureEditForm
operator|.
name|setDeptName
argument_list|(
name|dept
operator|.
name|getDeptCode
argument_list|()
operator|+
literal|" - "
operator|+
name|dept
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|roomFeatureEditForm
operator|.
name|getName
argument_list|()
operator|==
literal|null
operator|||
name|roomFeatureEditForm
operator|.
name|getName
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|roomFeatureEditForm
operator|.
name|setName
argument_list|(
name|rf
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|roomFeatureEditForm
operator|.
name|getAbbv
argument_list|()
operator|==
literal|null
operator|||
name|roomFeatureEditForm
operator|.
name|getAbbv
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|roomFeatureEditForm
operator|.
name|setAbbv
argument_list|(
name|rf
operator|.
name|getAbbv
argument_list|()
argument_list|)
expr_stmt|;
comment|//get rooms
name|Collection
name|assigned
init|=
name|getAssignedRooms
argument_list|(
name|rf
argument_list|)
decl_stmt|;
name|Collection
name|available
init|=
name|getAvailableRooms
argument_list|(
name|rf
argument_list|)
decl_stmt|;
name|TreeSet
name|sortedAssignedRooms
init|=
operator|new
name|TreeSet
argument_list|(
name|assigned
argument_list|)
decl_stmt|;
name|roomFeatureEditForm
operator|.
name|setAssignedRooms
argument_list|(
name|sortedAssignedRooms
argument_list|)
expr_stmt|;
name|TreeSet
name|sortedAvailableRooms
init|=
operator|new
name|TreeSet
argument_list|(
name|available
argument_list|)
decl_stmt|;
name|roomFeatureEditForm
operator|.
name|setNotAssignedRooms
argument_list|(
name|sortedAvailableRooms
argument_list|)
expr_stmt|;
name|roomFeatureEditForm
operator|.
name|setRooms
argument_list|()
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"featureTypes"
argument_list|,
name|RoomFeatureTypeDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|findAll
argument_list|(
name|Order
operator|.
name|asc
argument_list|(
literal|"label"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showEdit"
argument_list|)
return|;
block|}
comment|/** 	 *  	 * @param mapping 	 * @param form 	 * @param request 	 * @param response 	 * @return 	 * @throws HibernateException 	 */
specifier|public
name|ActionForward
name|deleteRoomFeature
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|ActionForm
name|form
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|Exception
block|{
name|RoomFeatureEditForm
name|roomFeatureEditForm
init|=
operator|(
name|RoomFeatureEditForm
operator|)
name|form
decl_stmt|;
name|Long
name|id
init|=
operator|new
name|Long
argument_list|(
name|roomFeatureEditForm
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|RoomFeatureDAO
name|rdao
init|=
operator|new
name|RoomFeatureDAO
argument_list|()
decl_stmt|;
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
init|=
name|rdao
operator|.
name|getSession
argument_list|()
decl_stmt|;
name|Transaction
name|tx
init|=
literal|null
decl_stmt|;
try|try
block|{
name|tx
operator|=
name|hibSession
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
name|RoomFeature
name|rf
init|=
name|rdao
operator|.
name|get
argument_list|(
name|id
argument_list|,
name|hibSession
argument_list|)
decl_stmt|;
if|if
condition|(
name|rf
operator|!=
literal|null
condition|)
block|{
name|sessionContext
operator|.
name|checkPermission
argument_list|(
name|rf
argument_list|,
name|rf
operator|instanceof
name|GlobalRoomFeature
condition|?
name|Right
operator|.
name|GlobalRoomFeatureDelete
else|:
name|Right
operator|.
name|DepartmenalRoomFeatureDelete
argument_list|)
expr_stmt|;
name|ChangeLog
operator|.
name|addChange
argument_list|(
name|hibSession
argument_list|,
name|sessionContext
argument_list|,
name|rf
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|ROOM_FEATURE_EDIT
argument_list|,
name|ChangeLog
operator|.
name|Operation
operator|.
name|DELETE
argument_list|,
literal|null
argument_list|,
operator|(
name|rf
operator|instanceof
name|DepartmentRoomFeature
condition|?
operator|(
operator|(
name|DepartmentRoomFeature
operator|)
name|rf
operator|)
operator|.
name|getDepartment
argument_list|()
else|:
literal|null
operator|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|rf
operator|.
name|getRooms
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Location
name|loc
init|=
operator|(
name|Location
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|loc
operator|.
name|getFeatures
argument_list|()
operator|.
name|remove
argument_list|(
name|rf
argument_list|)
expr_stmt|;
name|hibSession
operator|.
name|save
argument_list|(
name|loc
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|RoomFeaturePref
name|p
range|:
operator|(
name|List
argument_list|<
name|RoomFeaturePref
argument_list|>
operator|)
name|hibSession
operator|.
name|createQuery
argument_list|(
literal|"from RoomFeaturePref p where p.roomFeature.uniqueId = :id"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"id"
argument_list|,
name|id
argument_list|)
operator|.
name|list
argument_list|()
control|)
block|{
name|p
operator|.
name|getOwner
argument_list|()
operator|.
name|getPreferences
argument_list|()
operator|.
name|remove
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|hibSession
operator|.
name|delete
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|hibSession
operator|.
name|saveOrUpdate
argument_list|(
name|p
operator|.
name|getOwner
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|hibSession
operator|.
name|delete
argument_list|(
name|rf
argument_list|)
expr_stmt|;
block|}
name|tx
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
if|if
condition|(
name|tx
operator|!=
literal|null
operator|&&
name|tx
operator|.
name|isActive
argument_list|()
condition|)
name|tx
operator|.
name|rollback
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
name|roomFeatureEditForm
operator|.
name|setDeptCode
argument_list|(
operator|(
name|String
operator|)
name|sessionContext
operator|.
name|getAttribute
argument_list|(
name|SessionAttribute
operator|.
name|DepartmentCodeRoom
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showRoomFeatureList"
argument_list|)
return|;
block|}
comment|/** 	 *  	 * @param mapping 	 * @param form 	 * @param request 	 * @param response 	 * @return 	 * @throws Exception 	 */
specifier|public
name|ActionForward
name|saveRoomFeature
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|ActionForm
name|form
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|Exception
block|{
name|RoomFeatureEditForm
name|roomFeatureEditForm
init|=
operator|(
name|RoomFeatureEditForm
operator|)
name|form
decl_stmt|;
name|ActionMessages
name|errors
init|=
operator|new
name|ActionMessages
argument_list|()
decl_stmt|;
comment|//Validate input prefs
name|errors
operator|=
name|roomFeatureEditForm
operator|.
name|validate
argument_list|(
name|mapping
argument_list|,
name|request
argument_list|)
expr_stmt|;
if|if
condition|(
name|errors
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
name|update
argument_list|(
name|mapping
argument_list|,
name|roomFeatureEditForm
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|saveErrors
argument_list|(
name|request
argument_list|,
name|errors
argument_list|)
expr_stmt|;
name|editRoomFeature
argument_list|(
name|mapping
argument_list|,
name|form
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showEdit"
argument_list|)
return|;
block|}
name|roomFeatureEditForm
operator|.
name|setDeptCode
argument_list|(
operator|(
name|String
operator|)
name|sessionContext
operator|.
name|getAttribute
argument_list|(
name|SessionAttribute
operator|.
name|DepartmentCodeRoom
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|roomFeatureEditForm
operator|.
name|getId
argument_list|()
operator|!=
literal|null
condition|)
name|request
operator|.
name|setAttribute
argument_list|(
literal|"hash"
argument_list|,
literal|"A"
operator|+
name|roomFeatureEditForm
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showRoomFeatureList"
argument_list|)
return|;
block|}
comment|/** 	 *  	 * @param mapping 	 * @param roomFeatureEditForm 	 * @param request 	 * @param response 	 * @throws Exception 	 */
specifier|private
name|void
name|update
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|RoomFeatureEditForm
name|roomFeatureEditForm
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|Exception
block|{
name|Long
name|id
init|=
operator|new
name|Long
argument_list|(
name|roomFeatureEditForm
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
init|=
operator|(
operator|new
name|RoomFeatureDAO
argument_list|()
operator|)
operator|.
name|getSession
argument_list|()
decl_stmt|;
name|Transaction
name|tx
init|=
literal|null
decl_stmt|;
try|try
block|{
name|tx
operator|=
name|hibSession
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
name|RoomFeature
name|roomFeature
init|=
operator|(
operator|new
name|RoomFeatureDAO
argument_list|()
operator|)
operator|.
name|get
argument_list|(
name|id
argument_list|,
name|hibSession
argument_list|)
decl_stmt|;
name|sessionContext
operator|.
name|checkPermission
argument_list|(
name|roomFeature
argument_list|,
name|roomFeature
operator|instanceof
name|GlobalRoomFeature
condition|?
name|Right
operator|.
name|GlobalRoomFeatureEdit
else|:
name|Right
operator|.
name|DepartmenalRoomFeatureEdit
argument_list|)
expr_stmt|;
name|roomFeature
operator|.
name|setLabel
argument_list|(
name|roomFeatureEditForm
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|roomFeature
operator|.
name|setAbbv
argument_list|(
name|roomFeatureEditForm
operator|.
name|getAbbv
argument_list|()
argument_list|)
expr_stmt|;
name|String
index|[]
name|selectedAssigned
init|=
name|roomFeatureEditForm
operator|.
name|getAssignedSelected
argument_list|()
decl_stmt|;
name|String
index|[]
name|selectedNotAssigned
init|=
name|roomFeatureEditForm
operator|.
name|getNotAssignedSelected
argument_list|()
decl_stmt|;
name|Collection
name|assignedRooms
init|=
name|getAssignedRooms
argument_list|(
name|roomFeature
argument_list|)
decl_stmt|;
name|Collection
name|notAssignedRooms
init|=
name|getAvailableRooms
argument_list|(
name|roomFeature
argument_list|)
decl_stmt|;
if|if
condition|(
name|roomFeatureEditForm
operator|.
name|getFeatureTypeId
argument_list|()
operator|!=
literal|null
operator|&&
name|roomFeatureEditForm
operator|.
name|getFeatureTypeId
argument_list|()
operator|>=
literal|0
condition|)
name|roomFeature
operator|.
name|setFeatureType
argument_list|(
name|RoomFeatureTypeDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|roomFeatureEditForm
operator|.
name|getFeatureTypeId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|roomFeature
operator|.
name|setFeatureType
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|String
name|s1
init|=
literal|null
decl_stmt|;
name|String
name|s2
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|selectedAssigned
operator|.
name|length
operator|!=
literal|0
condition|)
name|s1
operator|=
name|Constants
operator|.
name|arrayToStr
argument_list|(
name|selectedAssigned
argument_list|,
literal|""
argument_list|,
literal|","
argument_list|)
expr_stmt|;
else|else
name|s1
operator|=
operator|new
name|String
argument_list|()
expr_stmt|;
if|if
condition|(
name|selectedNotAssigned
operator|.
name|length
operator|!=
literal|0
condition|)
name|s2
operator|=
name|Constants
operator|.
name|arrayToStr
argument_list|(
name|selectedNotAssigned
argument_list|,
literal|""
argument_list|,
literal|","
argument_list|)
expr_stmt|;
else|else
name|s2
operator|=
operator|new
name|String
argument_list|()
expr_stmt|;
name|Collection
name|rooms
init|=
name|roomFeature
operator|.
name|getRooms
argument_list|()
decl_stmt|;
comment|//move room from assignedRooms to notAssignedRooms
if|if
condition|(
name|selectedAssigned
operator|.
name|length
operator|!=
name|assignedRooms
operator|.
name|size
argument_list|()
condition|)
block|{
name|Collection
name|m
init|=
operator|new
name|HashSet
argument_list|()
decl_stmt|;
comment|//remove room from feature
for|for
control|(
name|Iterator
name|iter
init|=
name|rooms
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Location
name|r
init|=
operator|(
name|Location
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|assignedRooms
operator|.
name|contains
argument_list|(
name|r
argument_list|)
operator|&&
name|s1
operator|.
name|indexOf
argument_list|(
name|r
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|==
operator|-
literal|1
condition|)
block|{
name|iter
operator|.
name|remove
argument_list|()
expr_stmt|;
name|m
operator|.
name|add
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
block|}
comment|//remove feature from room
for|for
control|(
name|Iterator
name|iter
init|=
name|m
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Location
name|r
init|=
operator|(
name|Location
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|Collection
name|features
init|=
name|r
operator|.
name|getFeatures
argument_list|()
decl_stmt|;
for|for
control|(
name|Iterator
name|innerIter
init|=
name|features
operator|.
name|iterator
argument_list|()
init|;
name|innerIter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|RoomFeature
name|innerRf
init|=
operator|(
name|RoomFeature
operator|)
name|innerIter
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|roomFeature
operator|.
name|equals
argument_list|(
name|innerRf
argument_list|)
condition|)
block|{
name|innerIter
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
name|hibSession
operator|.
name|saveOrUpdate
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
block|}
comment|//move room from notAssignedRooms to assignedRooms
if|if
condition|(
name|selectedNotAssigned
operator|.
name|length
operator|!=
literal|0
condition|)
block|{
name|Collection
name|m
init|=
operator|new
name|HashSet
argument_list|()
decl_stmt|;
comment|//add room to feature
for|for
control|(
name|Iterator
name|iter
init|=
name|notAssignedRooms
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Location
name|r
init|=
operator|(
name|Location
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|s2
operator|.
name|indexOf
argument_list|(
name|r
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|!=
operator|-
literal|1
condition|)
block|{
name|rooms
operator|.
name|add
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|m
operator|.
name|add
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
block|}
comment|//add feature to room
for|for
control|(
name|Iterator
name|iter
init|=
name|m
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Location
name|r
init|=
operator|(
name|Location
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|Collection
name|features
init|=
name|r
operator|.
name|getFeatures
argument_list|()
decl_stmt|;
name|features
operator|.
name|add
argument_list|(
name|roomFeature
argument_list|)
expr_stmt|;
name|hibSession
operator|.
name|saveOrUpdate
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
block|}
name|hibSession
operator|.
name|saveOrUpdate
argument_list|(
name|roomFeature
argument_list|)
expr_stmt|;
name|ChangeLog
operator|.
name|addChange
argument_list|(
name|hibSession
argument_list|,
name|sessionContext
argument_list|,
operator|(
name|RoomFeature
operator|)
name|roomFeature
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|ROOM_FEATURE_EDIT
argument_list|,
name|ChangeLog
operator|.
name|Operation
operator|.
name|UPDATE
argument_list|,
literal|null
argument_list|,
operator|(
name|roomFeature
operator|instanceof
name|DepartmentRoomFeature
condition|?
operator|(
operator|(
name|DepartmentRoomFeature
operator|)
name|roomFeature
operator|)
operator|.
name|getDepartment
argument_list|()
else|:
literal|null
operator|)
argument_list|)
expr_stmt|;
name|tx
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Debug
operator|.
name|error
argument_list|(
name|e
argument_list|)
expr_stmt|;
try|try
block|{
if|if
condition|(
name|tx
operator|!=
literal|null
operator|&&
name|tx
operator|.
name|isActive
argument_list|()
condition|)
name|tx
operator|.
name|rollback
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e1
parameter_list|)
block|{
block|}
throw|throw
name|e
throw|;
block|}
block|}
comment|/** 	 *  	 * @param mapping 	 * @param form 	 * @param request 	 * @param response 	 * @return 	 */
specifier|public
name|ActionForward
name|cancelRoomFeature
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|ActionForm
name|form
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
block|{
name|RoomFeatureEditForm
name|roomFeatureEditForm
init|=
operator|(
name|RoomFeatureEditForm
operator|)
name|form
decl_stmt|;
name|roomFeatureEditForm
operator|.
name|setDeptCode
argument_list|(
operator|(
name|String
operator|)
name|sessionContext
operator|.
name|getAttribute
argument_list|(
name|SessionAttribute
operator|.
name|DepartmentCodeRoom
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|roomFeatureEditForm
operator|.
name|getId
argument_list|()
operator|!=
literal|null
condition|)
name|request
operator|.
name|setAttribute
argument_list|(
literal|"hash"
argument_list|,
literal|"A"
operator|+
name|roomFeatureEditForm
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showRoomFeatureList"
argument_list|)
return|;
block|}
comment|/** 	 *  	 * @param user 	 * @param roomFeatureEditForm  	 * @param d 	 * @return 	 * @throws Exception  	 */
specifier|private
name|Collection
name|getAvailableRooms
parameter_list|(
name|RoomFeature
name|rf
parameter_list|)
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Location
argument_list|>
name|rooms
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|rf
operator|instanceof
name|DepartmentRoomFeature
condition|)
block|{
name|Department
name|dept
init|=
operator|(
operator|(
name|DepartmentRoomFeature
operator|)
name|rf
operator|)
operator|.
name|getDepartment
argument_list|()
decl_stmt|;
name|rooms
operator|=
operator|new
name|ArrayList
argument_list|<
name|Location
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|RoomDept
name|rd
range|:
name|dept
operator|.
name|getRoomDepts
argument_list|()
control|)
name|rooms
operator|.
name|add
argument_list|(
name|rd
operator|.
name|getRoom
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Session
name|session
init|=
operator|(
operator|(
name|GlobalRoomFeature
operator|)
name|rf
operator|)
operator|.
name|getSession
argument_list|()
decl_stmt|;
name|String
name|dept
init|=
operator|(
name|String
operator|)
name|sessionContext
operator|.
name|getAttribute
argument_list|(
name|SessionAttribute
operator|.
name|DepartmentCodeRoom
argument_list|)
decl_stmt|;
if|if
condition|(
name|dept
operator|!=
literal|null
operator|&&
name|dept
operator|.
name|matches
argument_list|(
literal|"Exam[0-9]*"
argument_list|)
condition|)
block|{
name|rooms
operator|=
operator|new
name|ArrayList
argument_list|<
name|Location
argument_list|>
argument_list|(
name|Location
operator|.
name|findAllExamLocations
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|Long
operator|.
name|valueOf
argument_list|(
name|dept
operator|.
name|substring
argument_list|(
literal|4
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|dept
operator|!=
literal|null
operator|&&
operator|!
name|dept
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
literal|"All"
operator|.
name|equals
argument_list|(
name|dept
argument_list|)
condition|)
block|{
name|Department
name|department
init|=
name|Department
operator|.
name|findByDeptCode
argument_list|(
name|dept
argument_list|,
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|department
operator|!=
literal|null
condition|)
block|{
name|rooms
operator|=
operator|new
name|ArrayList
argument_list|<
name|Location
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|RoomDept
name|rd
range|:
name|department
operator|.
name|getRoomDepts
argument_list|()
control|)
name|rooms
operator|.
name|add
argument_list|(
name|rd
operator|.
name|getRoom
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rooms
operator|=
operator|new
name|ArrayList
argument_list|<
name|Location
argument_list|>
argument_list|(
name|Location
operator|.
name|findAll
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|rooms
operator|=
operator|new
name|ArrayList
argument_list|<
name|Location
argument_list|>
argument_list|(
name|Location
operator|.
name|findAll
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|Collections
operator|.
name|sort
argument_list|(
name|rooms
argument_list|)
expr_stmt|;
name|rooms
operator|.
name|removeAll
argument_list|(
name|rf
operator|.
name|getRooms
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|rooms
return|;
block|}
comment|/** 	 *  	 * @param user  	 * @param roomFeatureEditForm  	 * @param rooms 	 * @param d  	 * @return 	 * @throws Exception  	 */
specifier|private
name|Collection
name|getAssignedRooms
parameter_list|(
name|RoomFeature
name|rf
parameter_list|)
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Location
argument_list|>
name|rooms
init|=
operator|new
name|ArrayList
argument_list|<
name|Location
argument_list|>
argument_list|(
name|rf
operator|.
name|getRooms
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|dept
init|=
operator|(
name|String
operator|)
name|sessionContext
operator|.
name|getAttribute
argument_list|(
name|SessionAttribute
operator|.
name|DepartmentCodeRoom
argument_list|)
decl_stmt|;
if|if
condition|(
name|dept
operator|!=
literal|null
operator|&&
name|dept
operator|.
name|matches
argument_list|(
literal|"Exam[0-9]*"
argument_list|)
condition|)
block|{
name|Long
name|examType
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|dept
operator|.
name|substring
argument_list|(
literal|4
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|Location
argument_list|>
name|i
init|=
name|rooms
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
if|if
condition|(
operator|!
name|i
operator|.
name|next
argument_list|()
operator|.
name|isExamEnabled
argument_list|(
name|examType
argument_list|)
condition|)
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|dept
operator|!=
literal|null
operator|&&
operator|!
name|dept
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
literal|"All"
operator|.
name|equals
argument_list|(
name|dept
argument_list|)
condition|)
block|{
name|Department
name|department
init|=
name|Department
operator|.
name|findByDeptCode
argument_list|(
name|dept
argument_list|,
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getCurrentAcademicSessionId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|department
operator|!=
literal|null
condition|)
block|{
name|rooms
label|:
for|for
control|(
name|Iterator
argument_list|<
name|Location
argument_list|>
name|i
init|=
name|rooms
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Location
name|location
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
for|for
control|(
name|RoomDept
name|rd
range|:
name|location
operator|.
name|getRoomDepts
argument_list|()
control|)
if|if
condition|(
name|rd
operator|.
name|getDepartment
argument_list|()
operator|.
name|equals
argument_list|(
name|department
argument_list|)
condition|)
continue|continue
name|rooms
continue|;
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
block|}
return|return
name|rooms
return|;
block|}
block|}
end_class

end_unit

