begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|action
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLEncoder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForward
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionRedirect
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|HibernateException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|LocalizedLookupDispatchAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|messages
operator|.
name|CourseMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|messages
operator|.
name|Messages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|ApplicationProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|SessionAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
operator|.
name|InstructionalOfferingListForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|InstructionalOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SubjectArea
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|comparators
operator|.
name|ClassCourseComparator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|SubjectAreaDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|rights
operator|.
name|Right
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|ClassAssignmentProxy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|WebSolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|service
operator|.
name|AssignmentService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|ExportUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|PdfWorksheet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|webutil
operator|.
name|BackTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|webutil
operator|.
name|csv
operator|.
name|CsvInstructionalOfferingTableBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|webutil
operator|.
name|pdf
operator|.
name|PdfInstructionalOfferingTableBuilder
import|;
end_import

begin_comment
comment|/**  * @author Stephanie Schluttenhofer, Tomas Muller  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"/instructionalOfferingSearch"
argument_list|)
specifier|public
class|class
name|InstructionalOfferingSearchAction
extends|extends
name|LocalizedLookupDispatchAction
block|{
specifier|protected
specifier|final
specifier|static
name|CourseMessages
name|MSG
init|=
name|Localization
operator|.
name|create
argument_list|(
name|CourseMessages
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Autowired
name|SessionContext
name|sessionContext
decl_stmt|;
annotation|@
name|Autowired
name|AssignmentService
argument_list|<
name|ClassAssignmentProxy
argument_list|>
name|classAssignmentService
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|Messages
name|getMessages
parameter_list|()
block|{
return|return
name|MSG
return|;
block|}
comment|/**  	 * Method execute 	 * @param mapping 	 * @param form 	 * @param request 	 * @param response 	 * @return ActionForward 	 * @throws HibernateException 	 */
specifier|public
name|ActionForward
name|searchInstructionalOfferings
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|ActionForm
name|form
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|Exception
block|{
name|sessionContext
operator|.
name|checkPermission
argument_list|(
name|Right
operator|.
name|InstructionalOfferings
argument_list|)
expr_stmt|;
comment|// Check that a valid subject area is selected
name|InstructionalOfferingListForm
name|frm
init|=
operator|(
name|InstructionalOfferingListForm
operator|)
name|form
decl_stmt|;
name|ActionMessages
name|errors
init|=
literal|null
decl_stmt|;
name|errors
operator|=
name|frm
operator|.
name|validate
argument_list|(
name|mapping
argument_list|,
name|request
argument_list|)
expr_stmt|;
comment|// Validation fails
if|if
condition|(
name|errors
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|saveErrors
argument_list|(
name|request
argument_list|,
name|errors
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setSubjectAreas
argument_list|(
name|SubjectArea
operator|.
name|getUserSubjectAreas
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setInstructionalOfferings
argument_list|(
literal|null
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showInstructionalOfferingSearch"
argument_list|)
return|;
block|}
name|StringBuffer
name|ids
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|StringBuffer
name|names
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|StringBuffer
name|subjIds
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|frm
operator|.
name|getSubjectAreaIds
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|i
operator|>
literal|0
condition|)
block|{
name|names
operator|.
name|append
argument_list|(
literal|","
argument_list|)
expr_stmt|;
name|subjIds
operator|.
name|append
argument_list|(
literal|","
argument_list|)
expr_stmt|;
block|}
name|ids
operator|.
name|append
argument_list|(
literal|"&subjectAreaIds="
operator|+
name|frm
operator|.
name|getSubjectAreaIds
argument_list|()
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|subjIds
operator|.
name|append
argument_list|(
name|frm
operator|.
name|getSubjectAreaIds
argument_list|()
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|names
operator|.
name|append
argument_list|(
operator|(
operator|(
operator|new
name|SubjectAreaDAO
argument_list|()
operator|)
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|frm
operator|.
name|getSubjectAreaIds
argument_list|()
index|[
name|i
index|]
argument_list|)
argument_list|)
operator|)
operator|.
name|getSubjectAreaAbbreviation
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Set Session Variables
name|sessionContext
operator|.
name|setAttribute
argument_list|(
name|SessionAttribute
operator|.
name|OfferingsSubjectArea
argument_list|,
name|subjIds
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|setAttribute
argument_list|(
name|SessionAttribute
operator|.
name|OfferingsCourseNumber
argument_list|,
name|frm
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"1"
operator|.
name|equals
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"loadInstrFilter"
argument_list|)
argument_list|)
condition|)
block|{
name|setupInstrOffrListSpecificFormFilters
argument_list|(
name|sessionContext
argument_list|,
name|frm
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.divSec"
argument_list|,
name|frm
operator|.
name|getDivSec
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.demand"
argument_list|,
name|frm
operator|.
name|getDemand
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.projectedDemand"
argument_list|,
name|frm
operator|.
name|getProjectedDemand
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.minPerWk"
argument_list|,
name|frm
operator|.
name|getMinPerWk
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.limit"
argument_list|,
name|frm
operator|.
name|getLimit
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.roomLimit"
argument_list|,
name|frm
operator|.
name|getRoomLimit
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.manager"
argument_list|,
name|frm
operator|.
name|getManager
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.datePattern"
argument_list|,
name|frm
operator|.
name|getDatePattern
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.timePattern"
argument_list|,
name|frm
operator|.
name|getTimePattern
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.instructor"
argument_list|,
name|frm
operator|.
name|getInstructor
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.preferences"
argument_list|,
name|frm
operator|.
name|getPreferences
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.timetable"
argument_list|,
operator|(
name|frm
operator|.
name|getTimetable
argument_list|()
operator|==
literal|null
condition|?
literal|"0"
else|:
name|frm
operator|.
name|getTimetable
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
operator|)
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.credit"
argument_list|,
name|frm
operator|.
name|getCredit
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.subpartCredit"
argument_list|,
name|frm
operator|.
name|getSubpartCredit
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.schedulePrintNote"
argument_list|,
name|frm
operator|.
name|getSchedulePrintNote
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.note"
argument_list|,
name|frm
operator|.
name|getNote
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.title"
argument_list|,
name|frm
operator|.
name|getTitle
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.exams"
argument_list|,
operator|(
name|frm
operator|.
name|getExams
argument_list|()
operator|==
literal|null
condition|?
literal|"0"
else|:
name|frm
operator|.
name|getExams
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
operator|)
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.instructorAssignment"
argument_list|,
operator|(
name|frm
operator|.
name|getInstructorAssignment
argument_list|()
operator|==
literal|null
condition|?
literal|"0"
else|:
name|frm
operator|.
name|getInstructorAssignment
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
operator|)
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.consent"
argument_list|,
name|frm
operator|.
name|getConsent
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"InstructionalOfferingList.sortBy"
argument_list|,
name|frm
operator|.
name|getSortBy
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|sessionContext
operator|.
name|hasPermission
argument_list|(
name|Right
operator|.
name|Examinations
argument_list|)
condition|)
name|frm
operator|.
name|setExams
argument_list|(
literal|null
argument_list|)
expr_stmt|;
comment|// Perform Search
name|Map
argument_list|<
name|Long
argument_list|,
name|TreeSet
argument_list|<
name|InstructionalOffering
argument_list|>
argument_list|>
name|instrOfferings
init|=
name|getInstructionalOfferings
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getCurrentAcademicSessionId
argument_list|()
argument_list|,
name|classAssignmentService
operator|.
name|getAssignment
argument_list|()
argument_list|,
name|frm
argument_list|)
decl_stmt|;
name|frm
operator|.
name|setSubjectAreas
argument_list|(
name|SubjectArea
operator|.
name|getUserSubjectAreas
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setInstructionalOfferings
argument_list|(
name|instrOfferings
argument_list|)
expr_stmt|;
comment|// No results returned
if|if
condition|(
name|instrOfferings
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"searchResult"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorNoRecords
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|saveErrors
argument_list|(
name|request
argument_list|,
name|errors
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showInstructionalOfferingSearch"
argument_list|)
return|;
block|}
else|else
block|{
name|BackTracker
operator|.
name|markForBack
argument_list|(
name|request
argument_list|,
literal|"instructionalOfferingSearch.do?op=Back&doit=Search&loadInstrFilter=1"
operator|+
name|ids
operator|+
literal|"&courseNbr="
operator|+
name|URLEncoder
operator|.
name|encode
argument_list|(
name|frm
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
literal|"utf-8"
argument_list|)
argument_list|,
name|MSG
operator|.
name|labelInstructionalOfferings
argument_list|()
operator|+
literal|" ("
operator|+
name|names
operator|+
operator|(
name|frm
operator|.
name|getCourseNbr
argument_list|()
operator|==
literal|null
operator|||
name|frm
operator|.
name|getCourseNbr
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|?
literal|""
else|:
literal|" "
operator|+
name|frm
operator|.
name|getCourseNbr
argument_list|()
operator|)
operator|+
literal|")"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"op"
argument_list|)
operator|==
literal|null
operator|||
operator|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"op"
argument_list|)
operator|!=
literal|null
operator|&&
operator|!
name|request
operator|.
name|getParameter
argument_list|(
literal|"op"
argument_list|)
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"Back"
argument_list|)
operator|)
condition|)
block|{
comment|// Search produces 1 result - redirect to offering detail
if|if
condition|(
name|frm
operator|.
name|getSubjectAreaIds
argument_list|()
operator|.
name|length
operator|==
literal|1
condition|)
block|{
name|TreeSet
argument_list|<
name|InstructionalOffering
argument_list|>
name|offerings
init|=
name|frm
operator|.
name|getInstructionalOfferings
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|frm
operator|.
name|getSubjectAreaIds
argument_list|()
index|[
literal|0
index|]
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|offerings
operator|!=
literal|null
operator|&&
name|offerings
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
block|{
name|InstructionalOffering
name|io
init|=
name|offerings
operator|.
name|first
argument_list|()
decl_stmt|;
if|if
condition|(
name|sessionContext
operator|.
name|hasPermission
argument_list|(
name|io
argument_list|,
name|Right
operator|.
name|InstructionalOfferingDetail
argument_list|)
condition|)
block|{
name|ActionRedirect
name|redirect
init|=
operator|new
name|ActionRedirect
argument_list|(
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showInstructionalOfferingDetail"
argument_list|)
argument_list|)
decl_stmt|;
name|redirect
operator|.
name|addParameter
argument_list|(
literal|"op"
argument_list|,
literal|"view"
argument_list|)
expr_stmt|;
name|redirect
operator|.
name|addParameter
argument_list|(
literal|"io"
argument_list|,
name|io
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|redirect
return|;
block|}
block|}
block|}
block|}
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showInstructionalOfferingList"
argument_list|)
return|;
block|}
block|}
specifier|public
name|ActionForward
name|exportPdf
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|ActionForm
name|form
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|Exception
block|{
name|ActionForward
name|fwd
init|=
name|searchInstructionalOfferings
argument_list|(
name|mapping
argument_list|,
name|form
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
decl_stmt|;
name|InstructionalOfferingListForm
name|frm
init|=
operator|(
name|InstructionalOfferingListForm
operator|)
name|form
decl_stmt|;
if|if
condition|(
name|getErrors
argument_list|(
name|request
argument_list|)
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|OutputStream
name|out
init|=
name|ExportUtils
operator|.
name|getPdfOutputStream
argument_list|(
name|response
argument_list|,
literal|"offerings"
argument_list|)
decl_stmt|;
operator|new
name|PdfInstructionalOfferingTableBuilder
argument_list|()
operator|.
name|pdfTableForInstructionalOfferings
argument_list|(
name|out
argument_list|,
name|WebSolver
operator|.
name|getClassAssignmentProxy
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
argument_list|,
name|WebSolver
operator|.
name|getExamSolver
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
argument_list|,
name|frm
argument_list|,
name|frm
operator|.
name|getSubjectAreaIds
argument_list|()
argument_list|,
name|sessionContext
argument_list|,
literal|true
argument_list|,
name|frm
operator|.
name|getCourseNbr
argument_list|()
operator|==
literal|null
operator|||
name|frm
operator|.
name|getCourseNbr
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|out
operator|.
name|flush
argument_list|()
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
return|return
name|fwd
return|;
block|}
specifier|public
name|ActionForward
name|exportCsv
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|ActionForm
name|form
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|Exception
block|{
name|ActionForward
name|fwd
init|=
name|searchInstructionalOfferings
argument_list|(
name|mapping
argument_list|,
name|form
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
decl_stmt|;
name|InstructionalOfferingListForm
name|frm
init|=
operator|(
name|InstructionalOfferingListForm
operator|)
name|form
decl_stmt|;
if|if
condition|(
name|getErrors
argument_list|(
name|request
argument_list|)
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|PrintWriter
name|out
init|=
name|ExportUtils
operator|.
name|getCsvWriter
argument_list|(
name|response
argument_list|,
literal|"offerings"
argument_list|)
decl_stmt|;
operator|new
name|CsvInstructionalOfferingTableBuilder
argument_list|()
operator|.
name|csvTableForInstructionalOfferings
argument_list|(
name|out
argument_list|,
name|WebSolver
operator|.
name|getClassAssignmentProxy
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
argument_list|,
name|WebSolver
operator|.
name|getExamSolver
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
argument_list|,
name|frm
argument_list|,
name|frm
operator|.
name|getSubjectAreaIds
argument_list|()
argument_list|,
name|sessionContext
argument_list|,
literal|true
argument_list|,
name|frm
operator|.
name|getCourseNbr
argument_list|()
operator|==
literal|null
operator|||
name|frm
operator|.
name|getCourseNbr
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|out
operator|.
name|flush
argument_list|()
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
return|return
name|fwd
return|;
block|}
specifier|public
specifier|static
name|void
name|setupInstrOffrListSpecificFormFilters
parameter_list|(
name|SessionContext
name|sessionContext
parameter_list|,
name|InstructionalOfferingListForm
name|frm
parameter_list|)
block|{
name|frm
operator|.
name|setDivSec
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.divSec"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setDemand
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.demand"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setProjectedDemand
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.projectedDemand"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setMinPerWk
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.minPerWk"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setLimit
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.limit"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setRoomLimit
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.roomLimit"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setManager
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.manager"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setDatePattern
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.datePattern"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setTimePattern
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.timePattern"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setInstructor
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.instructor"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setPreferences
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.preferences"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setTimetable
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.timetable"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setCredit
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.credit"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setSubpartCredit
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.subpartCredit"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setSchedulePrintNote
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.schedulePrintNote"
argument_list|,
literal|"1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setNote
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.note"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setTitle
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.title"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setConsent
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.consent"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setSortBy
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.sortBy"
argument_list|,
name|ClassCourseComparator
operator|.
name|getName
argument_list|(
name|ClassCourseComparator
operator|.
name|SortBy
operator|.
name|NAME
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setExams
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.exams"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|frm
operator|.
name|setInstructorAssignment
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"InstructionalOfferingList.instructorAssignment"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ActionForward
name|worksheetPdf
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|ActionForm
name|form
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|Exception
block|{
name|ActionForward
name|fwd
init|=
name|searchInstructionalOfferings
argument_list|(
name|mapping
argument_list|,
name|form
argument_list|,
name|request
argument_list|,
name|response
argument_list|)
decl_stmt|;
name|InstructionalOfferingListForm
name|frm
init|=
operator|(
name|InstructionalOfferingListForm
operator|)
name|form
decl_stmt|;
if|if
condition|(
name|getErrors
argument_list|(
name|request
argument_list|)
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|List
argument_list|<
name|SubjectArea
argument_list|>
name|subjectAreas
init|=
operator|new
name|ArrayList
argument_list|<
name|SubjectArea
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|subjectAreaId
range|:
name|frm
operator|.
name|getSubjectAreaIds
argument_list|()
control|)
block|{
name|SubjectArea
name|subjectArea
init|=
name|SubjectAreaDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|subjectAreaId
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|subjectArea
operator|!=
literal|null
condition|)
name|subjectAreas
operator|.
name|add
argument_list|(
name|subjectArea
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|subjectAreas
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
name|fwd
return|;
name|OutputStream
name|out
init|=
name|ExportUtils
operator|.
name|getPdfOutputStream
argument_list|(
name|response
argument_list|,
literal|"worksheet"
argument_list|)
decl_stmt|;
name|PdfWorksheet
operator|.
name|print
argument_list|(
name|out
argument_list|,
name|subjectAreas
argument_list|,
name|frm
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|flush
argument_list|()
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
return|return
name|fwd
return|;
block|}
specifier|public
specifier|static
name|Map
argument_list|<
name|Long
argument_list|,
name|TreeSet
argument_list|<
name|InstructionalOffering
argument_list|>
argument_list|>
name|getInstructionalOfferings
parameter_list|(
name|Long
name|sessionId
parameter_list|,
name|ClassAssignmentProxy
name|classAssignmentProxy
parameter_list|,
name|InstructionalOfferingListForm
name|form
parameter_list|)
block|{
name|boolean
name|fetchStructure
init|=
literal|true
decl_stmt|;
name|boolean
name|fetchCredits
init|=
literal|false
decl_stmt|;
comment|//singleCourseSelection || form.getCredit().booleanValue();
name|boolean
name|fetchInstructors
init|=
literal|false
decl_stmt|;
comment|//singleCourseSelection || form.getInstructor().booleanValue();
name|boolean
name|fetchPreferences
init|=
literal|false
decl_stmt|;
comment|//singleCourseSelection || form.getPreferences().booleanValue() || form.getTimePattern().booleanValue();
name|boolean
name|fetchAssignments
init|=
literal|false
decl_stmt|;
comment|//singleCourseSelection || (form.getTimetable()!=null&& form.getTimetable().booleanValue());
name|boolean
name|fetchReservations
init|=
literal|false
decl_stmt|;
comment|//singleCourseSelection;
name|Map
argument_list|<
name|Long
argument_list|,
name|TreeSet
argument_list|<
name|InstructionalOffering
argument_list|>
argument_list|>
name|map
init|=
operator|new
name|Hashtable
argument_list|<
name|Long
argument_list|,
name|TreeSet
argument_list|<
name|InstructionalOffering
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|subjectAreaId
range|:
name|form
operator|.
name|getSubjectAreaIds
argument_list|()
control|)
block|{
name|TreeSet
argument_list|<
name|InstructionalOffering
argument_list|>
name|ts
init|=
name|InstructionalOffering
operator|.
name|search
argument_list|(
name|sessionId
argument_list|,
name|Long
operator|.
name|valueOf
argument_list|(
name|subjectAreaId
argument_list|)
argument_list|,
name|form
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|fetchStructure
argument_list|,
name|fetchCredits
argument_list|,
name|fetchInstructors
argument_list|,
name|fetchPreferences
argument_list|,
name|fetchAssignments
argument_list|,
name|fetchReservations
argument_list|)
decl_stmt|;
if|if
condition|(
name|ts
operator|.
name|isEmpty
argument_list|()
condition|)
continue|continue;
name|map
operator|.
name|put
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|subjectAreaId
argument_list|)
argument_list|,
name|ts
argument_list|)
expr_stmt|;
block|}
return|return
name|map
return|;
block|}
comment|/**      * Creates an instructional offering      * @param mapping      * @param form      * @param request      * @param response      * @return      * @throws Exception      */
specifier|public
name|ActionForward
name|addInstructionalOfferings
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|ActionForm
name|form
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|Exception
block|{
name|InstructionalOfferingListForm
name|frm
init|=
operator|(
name|InstructionalOfferingListForm
operator|)
name|form
decl_stmt|;
name|Long
name|subjAreaId
init|=
operator|(
name|frm
operator|.
name|getSubjectAreaIds
argument_list|()
operator|==
literal|null
operator|||
name|frm
operator|.
name|getSubjectAreaIds
argument_list|()
operator|.
name|length
operator|<
literal|1
condition|?
literal|null
else|:
name|Long
operator|.
name|valueOf
argument_list|(
name|frm
operator|.
name|getSubjectAreaIds
argument_list|()
index|[
literal|0
index|]
argument_list|)
operator|)
decl_stmt|;
name|String
name|courseNbr
init|=
name|frm
operator|.
name|getCourseNbr
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
name|ActionMessages
name|errors
init|=
operator|new
name|ActionMessages
argument_list|()
decl_stmt|;
comment|// Check if errors were found
if|if
condition|(
operator|!
name|errors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|frm
operator|.
name|setSubjectAreas
argument_list|(
name|SubjectArea
operator|.
name|getUserSubjectAreas
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|saveErrors
argument_list|(
name|request
argument_list|,
name|errors
argument_list|)
expr_stmt|;
if|if
condition|(
name|frm
operator|.
name|getInstructionalOfferings
argument_list|()
operator|==
literal|null
operator|||
name|frm
operator|.
name|getInstructionalOfferings
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showInstructionalOfferingSearch"
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showInstructionalOfferingList"
argument_list|)
return|;
block|}
block|}
comment|// Set Session Variables
if|if
condition|(
name|subjAreaId
operator|!=
literal|null
condition|)
block|{
name|sessionContext
operator|.
name|setAttribute
argument_list|(
name|SessionAttribute
operator|.
name|OfferingsSubjectArea
argument_list|,
name|subjAreaId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|sessionContext
operator|.
name|setAttribute
argument_list|(
name|SessionAttribute
operator|.
name|OfferingsCourseNumber
argument_list|,
name|courseNbr
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|subjAreaId
operator|!=
literal|null
operator|&&
operator|!
name|courseNbr
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
comment|// Offering exists - redirect to offering detail
if|if
condition|(
name|ApplicationProperty
operator|.
name|CourseOfferingNumberMustBeUnique
operator|.
name|isTrue
argument_list|()
condition|)
block|{
name|CourseOffering
name|course
init|=
name|CourseOffering
operator|.
name|findBySessionSubjAreaIdCourseNbr
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getCurrentAcademicSessionId
argument_list|()
argument_list|,
name|subjAreaId
argument_list|,
name|courseNbr
argument_list|)
decl_stmt|;
if|if
condition|(
name|course
operator|!=
literal|null
condition|)
block|{
name|ActionRedirect
name|redirect
init|=
operator|new
name|ActionRedirect
argument_list|(
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showInstructionalOfferingDetail"
argument_list|)
argument_list|)
decl_stmt|;
name|redirect
operator|.
name|addParameter
argument_list|(
literal|"op"
argument_list|,
literal|"view"
argument_list|)
expr_stmt|;
name|redirect
operator|.
name|addParameter
argument_list|(
literal|"io"
argument_list|,
name|course
operator|.
name|getInstructionalOffering
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|redirect
return|;
block|}
block|}
block|}
name|ActionRedirect
name|redirect
init|=
operator|new
name|ActionRedirect
argument_list|(
name|mapping
operator|.
name|findForward
argument_list|(
literal|"showCourseOfferingEdit"
argument_list|)
argument_list|)
decl_stmt|;
name|redirect
operator|.
name|addParameter
argument_list|(
literal|"op"
argument_list|,
name|MSG
operator|.
name|actionAddCourseOffering
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|subjAreaId
operator|!=
literal|null
condition|)
name|redirect
operator|.
name|addParameter
argument_list|(
literal|"subjAreaId"
argument_list|,
name|subjAreaId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|redirect
operator|.
name|addParameter
argument_list|(
literal|"courseNbr"
argument_list|,
name|courseNbr
argument_list|)
expr_stmt|;
return|return
name|redirect
return|;
block|}
specifier|public
specifier|static
name|void
name|setLastInstructionalOffering
parameter_list|(
name|SessionContext
name|sessionContext
parameter_list|,
name|InstructionalOffering
name|offering
parameter_list|)
block|{
if|if
condition|(
name|offering
operator|==
literal|null
condition|)
return|return;
name|String
name|subjectAreaIds
init|=
operator|(
name|String
operator|)
name|sessionContext
operator|.
name|getAttribute
argument_list|(
name|SessionAttribute
operator|.
name|OfferingsSubjectArea
argument_list|)
decl_stmt|;
name|String
name|subjectAreaId
init|=
name|offering
operator|.
name|getControllingCourseOffering
argument_list|()
operator|.
name|getSubjectArea
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
if|if
condition|(
name|subjectAreaIds
operator|==
literal|null
condition|)
block|{
name|sessionContext
operator|.
name|setAttribute
argument_list|(
name|SessionAttribute
operator|.
name|OfferingsSubjectArea
argument_list|,
name|subjectAreaId
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|boolean
name|contain
init|=
literal|false
decl_stmt|;
for|for
control|(
name|String
name|s
range|:
name|subjectAreaIds
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
if|if
condition|(
name|s
operator|.
name|equals
argument_list|(
name|subjectAreaId
argument_list|)
condition|)
block|{
name|contain
operator|=
literal|true
expr_stmt|;
break|break;
block|}
if|if
condition|(
operator|!
name|contain
condition|)
block|{
name|sessionContext
operator|.
name|setAttribute
argument_list|(
name|SessionAttribute
operator|.
name|OfferingsSubjectArea
argument_list|,
name|subjectAreaId
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|sessionContext
operator|.
name|getAttribute
argument_list|(
name|SessionAttribute
operator|.
name|OfferingsCourseNumber
argument_list|)
operator|!=
literal|null
operator|&&
operator|!
name|sessionContext
operator|.
name|getAttribute
argument_list|(
name|SessionAttribute
operator|.
name|OfferingsCourseNumber
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|sessionContext
operator|.
name|setAttribute
argument_list|(
name|SessionAttribute
operator|.
name|OfferingsCourseNumber
argument_list|,
name|offering
operator|.
name|getControllingCourseOffering
argument_list|()
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

