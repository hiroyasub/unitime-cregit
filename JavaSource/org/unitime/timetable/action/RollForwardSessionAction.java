begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 - 3.5 (University Timetabling Application)  * Copyright (C) 2008 - 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|action
package|;
end_package

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionErrors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForward
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|util
operator|.
name|MessageResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|WebTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|WebTable
operator|.
name|WebTableLine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
operator|.
name|RollForwardSessionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcServlet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|SessionDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|UserContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|rights
operator|.
name|Right
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|Formats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|SessionRollForward
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|queue
operator|.
name|QueueItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|queue
operator|.
name|QueueProcessor
import|;
end_import

begin_comment
comment|/**   * MyEclipse Struts  * Creation date: 02-27-2007  *   * XDoclet definition:  * @struts.action path="/exportSessionToMsf" name="exportSessionToMsfForm" input="/form/exportSessionToMsf.jsp" scope="request" validate="true"  *  * @author Tomas Muller, Stephanie Schluttenhofer  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"/rollForwardSession"
argument_list|)
specifier|public
class|class
name|RollForwardSessionAction
extends|extends
name|Action
block|{
annotation|@
name|Autowired
name|SessionContext
name|sessionContext
decl_stmt|;
annotation|@
name|Autowired
name|ApplicationContext
name|applicationContext
decl_stmt|;
comment|/* 	 * Generated Methods 	 */
comment|/**  	 * Method execute 	 * @param mapping 	 * @param form 	 * @param request 	 * @param response 	 * @return ActionForward 	 * @throws Exception  	 */
specifier|public
name|ActionForward
name|execute
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|ActionForm
name|form
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|Exception
block|{
name|MessageResources
name|rsc
init|=
name|getResources
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|RollForwardSessionForm
name|rollForwardSessionForm
init|=
operator|(
name|RollForwardSessionForm
operator|)
name|form
decl_stmt|;
comment|// Get operation
name|String
name|op
init|=
name|request
operator|.
name|getParameter
argument_list|(
literal|"op"
argument_list|)
decl_stmt|;
if|if
condition|(
name|op
operator|!=
literal|null
operator|&&
name|op
operator|.
name|equals
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.rollForward"
argument_list|)
argument_list|)
condition|)
block|{
name|sessionContext
operator|.
name|checkPermission
argument_list|(
name|Right
operator|.
name|SessionRollForward
argument_list|)
expr_stmt|;
name|ActionMessages
name|errors
init|=
name|rollForwardSessionForm
operator|.
name|validate
argument_list|(
name|mapping
argument_list|,
name|request
argument_list|)
decl_stmt|;
if|if
condition|(
name|errors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QueueProcessor
operator|.
name|getInstance
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|RollForwardQueueItem
argument_list|(
name|SessionDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|rollForwardSessionForm
operator|.
name|getSessionToRollForwardTo
argument_list|()
argument_list|)
argument_list|,
name|sessionContext
operator|.
name|getUser
argument_list|()
argument_list|,
operator|(
name|RollForwardSessionForm
operator|)
name|rollForwardSessionForm
operator|.
name|clone
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|saveErrors
argument_list|(
name|request
argument_list|,
name|errors
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"remove"
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|QueueProcessor
operator|.
name|getInstance
argument_list|()
operator|.
name|remove
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"remove"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|WebTable
name|table
init|=
name|getQueueTable
argument_list|(
name|request
argument_list|,
name|rollForwardSessionForm
argument_list|)
decl_stmt|;
if|if
condition|(
name|table
operator|!=
literal|null
condition|)
block|{
name|request
operator|.
name|setAttribute
argument_list|(
literal|"table"
argument_list|,
name|table
operator|.
name|printTable
argument_list|(
name|WebTable
operator|.
name|getOrder
argument_list|(
name|sessionContext
argument_list|,
literal|"rollForwardSession.ord"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|setToFromSessionsInForm
argument_list|(
name|rollForwardSessionForm
argument_list|)
expr_stmt|;
name|rollForwardSessionForm
operator|.
name|setSubjectAreas
argument_list|(
name|getSubjectAreas
argument_list|(
name|rollForwardSessionForm
operator|.
name|getSessionToRollForwardTo
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|op
operator|==
literal|null
condition|)
name|setExpirationDates
argument_list|(
name|rollForwardSessionForm
argument_list|)
expr_stmt|;
if|if
condition|(
name|rollForwardSessionForm
operator|.
name|getSubpartLocationPrefsAction
argument_list|()
operator|==
literal|null
condition|)
block|{
name|rollForwardSessionForm
operator|.
name|setSubpartLocationPrefsAction
argument_list|(
name|SessionRollForward
operator|.
name|ROLL_PREFS_ACTION
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|rollForwardSessionForm
operator|.
name|getSubpartTimePrefsAction
argument_list|()
operator|==
literal|null
condition|)
block|{
name|rollForwardSessionForm
operator|.
name|setSubpartTimePrefsAction
argument_list|(
name|SessionRollForward
operator|.
name|ROLL_PREFS_ACTION
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|rollForwardSessionForm
operator|.
name|getClassPrefsAction
argument_list|()
operator|==
literal|null
condition|)
block|{
name|rollForwardSessionForm
operator|.
name|setClassPrefsAction
argument_list|(
name|SessionRollForward
operator|.
name|DO_NOT_ROLL_ACTION
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|rollForwardSessionForm
operator|.
name|getMidtermExamsPrefsAction
argument_list|()
operator|==
literal|null
condition|)
name|rollForwardSessionForm
operator|.
name|setMidtermExamsPrefsAction
argument_list|(
name|SessionRollForward
operator|.
name|EXAMS_ROOM_PREFS
argument_list|)
expr_stmt|;
if|if
condition|(
name|rollForwardSessionForm
operator|.
name|getFinalExamsPrefsAction
argument_list|()
operator|==
literal|null
condition|)
name|rollForwardSessionForm
operator|.
name|setFinalExamsPrefsAction
argument_list|(
name|SessionRollForward
operator|.
name|EXAMS_ROOM_PREFS
argument_list|)
expr_stmt|;
return|return
name|mapping
operator|.
name|findForward
argument_list|(
literal|"displayRollForwardSessionForm"
argument_list|)
return|;
block|}
specifier|private
name|WebTable
name|getQueueTable
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|RollForwardSessionForm
name|form
parameter_list|)
block|{
name|WebTable
operator|.
name|setOrder
argument_list|(
name|sessionContext
argument_list|,
literal|"rollForwardSession.ord"
argument_list|,
name|request
operator|.
name|getParameter
argument_list|(
literal|"ord"
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|String
name|log
init|=
name|request
operator|.
name|getParameter
argument_list|(
literal|"log"
argument_list|)
decl_stmt|;
name|Formats
operator|.
name|Format
argument_list|<
name|Date
argument_list|>
name|df
init|=
name|Formats
operator|.
name|getDateFormat
argument_list|(
name|Formats
operator|.
name|Pattern
operator|.
name|TIME_SHORT
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|QueueItem
argument_list|>
name|queue
init|=
name|QueueProcessor
operator|.
name|getInstance
argument_list|()
operator|.
name|getItems
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|"Roll Forward"
argument_list|)
decl_stmt|;
if|if
condition|(
name|queue
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|null
return|;
name|WebTable
name|table
init|=
operator|new
name|WebTable
argument_list|(
literal|9
argument_list|,
literal|null
argument_list|,
literal|"rollForwardSession.do?ord=%%"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"Name"
block|,
literal|"Status"
block|,
literal|"Progress"
block|,
literal|"Owner"
block|,
literal|"Session"
block|,
literal|"Created"
block|,
literal|"Started"
block|,
literal|"Finished"
block|,
literal|"Output"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"left"
block|,
literal|"left"
block|,
literal|"right"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"center"
block|}
argument_list|,
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|}
argument_list|)
decl_stmt|;
name|Date
name|now
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|long
name|timeToShow
init|=
literal|1000
operator|*
literal|60
operator|*
literal|60
decl_stmt|;
for|for
control|(
name|QueueItem
name|item
range|:
name|queue
control|)
block|{
if|if
condition|(
name|item
operator|.
name|finished
argument_list|()
operator|!=
literal|null
operator|&&
name|now
operator|.
name|getTime
argument_list|()
operator|-
name|item
operator|.
name|finished
argument_list|()
operator|.
name|getTime
argument_list|()
operator|>
name|timeToShow
condition|)
continue|continue;
if|if
condition|(
name|item
operator|.
name|getSession
argument_list|()
operator|==
literal|null
condition|)
continue|continue;
name|String
name|name
init|=
name|item
operator|.
name|name
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|length
argument_list|()
operator|>
literal|60
condition|)
name|name
operator|=
name|name
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|57
argument_list|)
operator|+
literal|"..."
expr_stmt|;
name|String
name|delete
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|sessionContext
operator|.
name|getUser
argument_list|()
operator|.
name|getExternalUserId
argument_list|()
operator|.
name|equals
argument_list|(
name|item
operator|.
name|getOwnerId
argument_list|()
argument_list|)
operator|&&
operator|(
name|item
operator|.
name|started
argument_list|()
operator|==
literal|null
operator|||
name|item
operator|.
name|finished
argument_list|()
operator|!=
literal|null
operator|)
condition|)
block|{
name|delete
operator|=
literal|"<img src='images/Delete16.gif' border='0' onClick=\"if (confirm('Do you really want to remove this roll forward?')) document.location='rollForwardSession.do?remove="
operator|+
name|item
operator|.
name|getId
argument_list|()
operator|+
literal|"'; event.cancelBubble=true;\">"
expr_stmt|;
block|}
name|WebTableLine
name|line
init|=
name|table
operator|.
name|addLine
argument_list|(
literal|"onClick=\"document.location='rollForwardSession.do?log="
operator|+
name|item
operator|.
name|getId
argument_list|()
operator|+
literal|"';\""
argument_list|,
operator|new
name|String
index|[]
block|{
name|name
operator|+
operator|(
name|delete
operator|==
literal|null
condition|?
literal|""
else|:
literal|" "
operator|+
name|delete
operator|)
block|,
name|item
operator|.
name|status
argument_list|()
block|,
operator|(
name|item
operator|.
name|progress
argument_list|()
operator|<=
literal|0.0
operator|||
name|item
operator|.
name|progress
argument_list|()
operator|>=
literal|1.0
condition|?
literal|""
else|:
name|String
operator|.
name|valueOf
argument_list|(
name|Math
operator|.
name|round
argument_list|(
literal|100
operator|*
name|item
operator|.
name|progress
argument_list|()
argument_list|)
argument_list|)
operator|+
literal|"%"
operator|)
block|,
name|item
operator|.
name|getOwnerName
argument_list|()
block|,
name|item
operator|.
name|getSession
argument_list|()
operator|.
name|getLabel
argument_list|()
block|,
name|df
operator|.
name|format
argument_list|(
name|item
operator|.
name|created
argument_list|()
argument_list|)
block|,
name|item
operator|.
name|started
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|df
operator|.
name|format
argument_list|(
name|item
operator|.
name|started
argument_list|()
argument_list|)
block|,
name|item
operator|.
name|finished
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|df
operator|.
name|format
argument_list|(
name|item
operator|.
name|finished
argument_list|()
argument_list|)
block|,
name|item
operator|.
name|output
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|"<A href='temp/"
operator|+
name|item
operator|.
name|output
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"'>"
operator|+
name|item
operator|.
name|output
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|substring
argument_list|(
name|item
operator|.
name|output
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|lastIndexOf
argument_list|(
literal|'.'
argument_list|)
operator|+
literal|1
argument_list|)
operator|.
name|toUpperCase
argument_list|()
operator|+
literal|"</A>"
block|}
argument_list|,
operator|new
name|Comparable
index|[]
block|{
name|item
operator|.
name|getId
argument_list|()
block|,
name|item
operator|.
name|status
argument_list|()
block|,
name|item
operator|.
name|progress
argument_list|()
block|,
name|item
operator|.
name|getOwnerName
argument_list|()
block|,
name|item
operator|.
name|getSession
argument_list|()
block|,
name|item
operator|.
name|created
argument_list|()
operator|.
name|getTime
argument_list|()
block|,
name|item
operator|.
name|started
argument_list|()
operator|==
literal|null
condition|?
name|Long
operator|.
name|MAX_VALUE
else|:
name|item
operator|.
name|started
argument_list|()
operator|.
name|getTime
argument_list|()
block|,
name|item
operator|.
name|finished
argument_list|()
operator|==
literal|null
condition|?
name|Long
operator|.
name|MAX_VALUE
else|:
name|item
operator|.
name|finished
argument_list|()
operator|.
name|getTime
argument_list|()
block|,
literal|null
block|}
argument_list|)
decl_stmt|;
if|if
condition|(
name|log
operator|!=
literal|null
operator|&&
name|log
operator|.
name|equals
argument_list|(
name|item
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|request
operator|.
name|setAttribute
argument_list|(
literal|"logname"
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"logid"
argument_list|,
name|item
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
literal|"log"
argument_list|,
name|item
operator|.
name|log
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|RollForwardQueueItem
operator|)
name|item
operator|)
operator|.
name|getForm
argument_list|()
operator|.
name|copyTo
argument_list|(
name|form
argument_list|)
expr_stmt|;
name|saveErrors
argument_list|(
name|request
argument_list|,
operator|(
operator|(
name|RollForwardQueueItem
operator|)
name|item
operator|)
operator|.
name|getErrors
argument_list|()
argument_list|)
expr_stmt|;
name|line
operator|.
name|setBgColor
argument_list|(
literal|"rgb(168,187,225)"
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|table
return|;
block|}
specifier|private
class|class
name|RollForwardQueueItem
extends|extends
name|QueueItem
block|{
specifier|private
name|RollForwardSessionForm
name|iForm
decl_stmt|;
specifier|private
name|int
name|iProgress
init|=
literal|0
decl_stmt|;
specifier|private
name|ActionErrors
name|iErrors
init|=
operator|new
name|ActionErrors
argument_list|()
decl_stmt|;
specifier|public
name|RollForwardQueueItem
parameter_list|(
name|Session
name|session
parameter_list|,
name|UserContext
name|owner
parameter_list|,
name|RollForwardSessionForm
name|form
parameter_list|)
block|{
name|super
argument_list|(
name|session
argument_list|,
name|owner
argument_list|)
expr_stmt|;
name|iForm
operator|=
name|form
expr_stmt|;
block|}
specifier|public
name|ActionMessages
name|getErrors
parameter_list|()
block|{
return|return
name|iErrors
return|;
block|}
specifier|public
name|RollForwardSessionForm
name|getForm
parameter_list|()
block|{
return|return
name|iForm
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|execute
parameter_list|()
throws|throws
name|Exception
block|{
name|SessionRollForward
name|sessionRollForward
init|=
operator|new
name|SessionRollForward
argument_list|()
decl_stmt|;
name|Session
name|toAcadSession
init|=
name|Session
operator|.
name|getSessionById
argument_list|(
name|iForm
operator|.
name|getSessionToRollForwardTo
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|toAcadSession
operator|==
literal|null
condition|)
block|{
name|iErrors
operator|.
name|add
argument_list|(
literal|"mustSelectSession"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.rollForward.missingToSession"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|validateDepartmentRollForward
argument_list|(
name|toAcadSession
argument_list|,
name|iErrors
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iForm
operator|.
name|getRollForwardDepartments
argument_list|()
condition|)
block|{
name|setStatus
argument_list|(
literal|"Departments ..."
argument_list|)
expr_stmt|;
name|sessionRollForward
operator|.
name|rollDepartmentsForward
argument_list|(
name|iErrors
argument_list|,
name|iForm
argument_list|)
expr_stmt|;
block|}
name|iProgress
operator|++
expr_stmt|;
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|validateCurriculaRollForward
argument_list|(
name|toAcadSession
argument_list|,
name|iErrors
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iForm
operator|.
name|getRollForwardSessionConfig
argument_list|()
condition|)
block|{
name|setStatus
argument_list|(
literal|"Session Configuration ..."
argument_list|)
expr_stmt|;
name|sessionRollForward
operator|.
name|rollSessionConfigurationForward
argument_list|(
name|iErrors
argument_list|,
name|iForm
argument_list|)
expr_stmt|;
block|}
name|iProgress
operator|++
expr_stmt|;
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|validateManagerRollForward
argument_list|(
name|toAcadSession
argument_list|,
name|iErrors
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iForm
operator|.
name|getRollForwardManagers
argument_list|()
condition|)
block|{
name|setStatus
argument_list|(
literal|"Managers ..."
argument_list|)
expr_stmt|;
name|sessionRollForward
operator|.
name|rollManagersForward
argument_list|(
name|iErrors
argument_list|,
name|iForm
argument_list|)
expr_stmt|;
block|}
name|iProgress
operator|++
expr_stmt|;
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|validateBuildingAndRoomRollForward
argument_list|(
name|toAcadSession
argument_list|,
name|iErrors
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iForm
operator|.
name|getRollForwardRoomData
argument_list|()
condition|)
block|{
name|setStatus
argument_list|(
literal|"Rooms ..."
argument_list|)
expr_stmt|;
name|sessionRollForward
operator|.
name|rollBuildingAndRoomDataForward
argument_list|(
name|iErrors
argument_list|,
name|iForm
argument_list|)
expr_stmt|;
block|}
name|iProgress
operator|++
expr_stmt|;
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|validateDatePatternRollForward
argument_list|(
name|toAcadSession
argument_list|,
name|iErrors
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iForm
operator|.
name|getRollForwardDatePatterns
argument_list|()
condition|)
block|{
name|setStatus
argument_list|(
literal|"Date patterns ..."
argument_list|)
expr_stmt|;
name|sessionRollForward
operator|.
name|rollDatePatternsForward
argument_list|(
name|iErrors
argument_list|,
name|iForm
argument_list|)
expr_stmt|;
block|}
name|iProgress
operator|++
expr_stmt|;
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|validateTimePatternRollForward
argument_list|(
name|toAcadSession
argument_list|,
name|iErrors
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iForm
operator|.
name|getRollForwardTimePatterns
argument_list|()
condition|)
block|{
name|setStatus
argument_list|(
literal|"Time patterns ..."
argument_list|)
expr_stmt|;
name|sessionRollForward
operator|.
name|rollTimePatternsForward
argument_list|(
name|iErrors
argument_list|,
name|iForm
argument_list|)
expr_stmt|;
block|}
name|iProgress
operator|++
expr_stmt|;
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|validateSubjectAreaRollForward
argument_list|(
name|toAcadSession
argument_list|,
name|iErrors
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iForm
operator|.
name|getRollForwardSubjectAreas
argument_list|()
condition|)
block|{
name|setStatus
argument_list|(
literal|"Subjects ..."
argument_list|)
expr_stmt|;
name|sessionRollForward
operator|.
name|rollSubjectAreasForward
argument_list|(
name|iErrors
argument_list|,
name|iForm
argument_list|)
expr_stmt|;
block|}
name|iProgress
operator|++
expr_stmt|;
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|validateInstructorDataRollForward
argument_list|(
name|toAcadSession
argument_list|,
name|iErrors
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iForm
operator|.
name|getRollForwardInstructorData
argument_list|()
condition|)
block|{
name|setStatus
argument_list|(
literal|"Instructors ..."
argument_list|)
expr_stmt|;
name|sessionRollForward
operator|.
name|rollInstructorDataForward
argument_list|(
name|iErrors
argument_list|,
name|iForm
argument_list|)
expr_stmt|;
block|}
name|iProgress
operator|++
expr_stmt|;
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|validateCourseOfferingRollForward
argument_list|(
name|toAcadSession
argument_list|,
name|iErrors
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iForm
operator|.
name|getRollForwardCourseOfferings
argument_list|()
condition|)
block|{
name|setStatus
argument_list|(
literal|"Courses ..."
argument_list|)
expr_stmt|;
name|sessionRollForward
operator|.
name|rollCourseOfferingsForward
argument_list|(
name|iErrors
argument_list|,
name|iForm
argument_list|)
expr_stmt|;
block|}
name|iProgress
operator|++
expr_stmt|;
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|validateClassInstructorRollForward
argument_list|(
name|toAcadSession
argument_list|,
name|iErrors
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iForm
operator|.
name|getRollForwardClassInstructors
argument_list|()
condition|)
block|{
name|setStatus
argument_list|(
literal|"Class instructors ..."
argument_list|)
expr_stmt|;
name|sessionRollForward
operator|.
name|rollClassInstructorsForward
argument_list|(
name|iErrors
argument_list|,
name|iForm
argument_list|)
expr_stmt|;
block|}
name|iProgress
operator|++
expr_stmt|;
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iForm
operator|.
name|getAddNewCourseOfferings
argument_list|()
condition|)
block|{
name|setStatus
argument_list|(
literal|"New courses ..."
argument_list|)
expr_stmt|;
name|sessionRollForward
operator|.
name|addNewCourseOfferings
argument_list|(
name|iErrors
argument_list|,
name|iForm
argument_list|)
expr_stmt|;
block|}
name|iProgress
operator|++
expr_stmt|;
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|validateExamConfigurationRollForward
argument_list|(
name|toAcadSession
argument_list|,
name|iErrors
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iForm
operator|.
name|getRollForwardExamConfiguration
argument_list|()
condition|)
block|{
name|setStatus
argument_list|(
literal|"Exam config ..."
argument_list|)
expr_stmt|;
name|sessionRollForward
operator|.
name|rollExamConfigurationDataForward
argument_list|(
name|iErrors
argument_list|,
name|iForm
argument_list|)
expr_stmt|;
block|}
name|iProgress
operator|++
expr_stmt|;
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|validateMidtermExamRollForward
argument_list|(
name|toAcadSession
argument_list|,
name|iErrors
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iForm
operator|.
name|getRollForwardMidtermExams
argument_list|()
condition|)
block|{
name|setStatus
argument_list|(
literal|"Midterm exams ..."
argument_list|)
expr_stmt|;
name|sessionRollForward
operator|.
name|rollMidtermExamsForward
argument_list|(
name|iErrors
argument_list|,
name|iForm
argument_list|)
expr_stmt|;
block|}
name|iProgress
operator|++
expr_stmt|;
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|validateFinalExamRollForward
argument_list|(
name|toAcadSession
argument_list|,
name|iErrors
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iForm
operator|.
name|getRollForwardFinalExams
argument_list|()
condition|)
block|{
name|setStatus
argument_list|(
literal|"Final exams ..."
argument_list|)
expr_stmt|;
name|sessionRollForward
operator|.
name|rollFinalExamsForward
argument_list|(
name|iErrors
argument_list|,
name|iForm
argument_list|)
expr_stmt|;
block|}
name|iProgress
operator|++
expr_stmt|;
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|validateLastLikeDemandRollForward
argument_list|(
name|toAcadSession
argument_list|,
name|iErrors
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iForm
operator|.
name|getRollForwardStudents
argument_list|()
condition|)
block|{
name|setStatus
argument_list|(
literal|"Students ..."
argument_list|)
expr_stmt|;
name|sessionRollForward
operator|.
name|rollStudentsForward
argument_list|(
name|iErrors
argument_list|,
name|iForm
argument_list|)
expr_stmt|;
block|}
name|iProgress
operator|++
expr_stmt|;
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|validateCurriculaRollForward
argument_list|(
name|toAcadSession
argument_list|,
name|iErrors
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iForm
operator|.
name|getRollForwardCurricula
argument_list|()
condition|)
block|{
name|setStatus
argument_list|(
literal|"Curricula ..."
argument_list|)
expr_stmt|;
name|sessionRollForward
operator|.
name|rollCurriculaForward
argument_list|(
name|iErrors
argument_list|,
name|iForm
argument_list|)
expr_stmt|;
block|}
name|iProgress
operator|++
expr_stmt|;
if|if
condition|(
name|iErrors
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iForm
operator|.
name|getRollForwardReservations
argument_list|()
condition|)
block|{
name|setStatus
argument_list|(
literal|"Reservations ..."
argument_list|)
expr_stmt|;
name|sessionRollForward
operator|.
name|rollReservationsForward
argument_list|(
name|iErrors
argument_list|,
name|iForm
argument_list|)
expr_stmt|;
block|}
name|iProgress
operator|++
expr_stmt|;
if|if
condition|(
operator|!
name|iErrors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|setError
argument_list|(
operator|new
name|Exception
argument_list|(
operator|(
operator|(
name|ActionMessage
operator|)
name|iErrors
operator|.
name|get
argument_list|()
operator|.
name|next
argument_list|()
operator|)
operator|.
name|getValues
argument_list|()
index|[
literal|0
index|]
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|name
parameter_list|()
block|{
name|List
argument_list|<
name|String
argument_list|>
name|names
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|iForm
operator|.
name|getRollForwardDepartments
argument_list|()
condition|)
name|names
operator|.
name|add
argument_list|(
literal|"departments"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iForm
operator|.
name|getRollForwardSessionConfig
argument_list|()
condition|)
name|names
operator|.
name|add
argument_list|(
literal|"configuration"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iForm
operator|.
name|getRollForwardManagers
argument_list|()
condition|)
name|names
operator|.
name|add
argument_list|(
literal|"managers"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iForm
operator|.
name|getRollForwardRoomData
argument_list|()
condition|)
name|names
operator|.
name|add
argument_list|(
literal|"rooms"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iForm
operator|.
name|getRollForwardDatePatterns
argument_list|()
condition|)
name|names
operator|.
name|add
argument_list|(
literal|"date patterns"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iForm
operator|.
name|getRollForwardTimePatterns
argument_list|()
condition|)
name|names
operator|.
name|add
argument_list|(
literal|"time patterns"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iForm
operator|.
name|getRollForwardSubjectAreas
argument_list|()
condition|)
name|names
operator|.
name|add
argument_list|(
literal|"subjects"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iForm
operator|.
name|getRollForwardInstructorData
argument_list|()
condition|)
name|names
operator|.
name|add
argument_list|(
literal|"instructors"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iForm
operator|.
name|getRollForwardCourseOfferings
argument_list|()
condition|)
name|names
operator|.
name|add
argument_list|(
literal|"courses"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iForm
operator|.
name|getRollForwardClassInstructors
argument_list|()
condition|)
name|names
operator|.
name|add
argument_list|(
literal|"class instructors"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iForm
operator|.
name|getAddNewCourseOfferings
argument_list|()
condition|)
name|names
operator|.
name|add
argument_list|(
literal|"new courses"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iForm
operator|.
name|getRollForwardExamConfiguration
argument_list|()
condition|)
name|names
operator|.
name|add
argument_list|(
literal|"exam config"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iForm
operator|.
name|getRollForwardMidtermExams
argument_list|()
condition|)
name|names
operator|.
name|add
argument_list|(
literal|"midterm exams"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iForm
operator|.
name|getRollForwardFinalExams
argument_list|()
condition|)
name|names
operator|.
name|add
argument_list|(
literal|"final exams"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iForm
operator|.
name|getRollForwardStudents
argument_list|()
condition|)
name|names
operator|.
name|add
argument_list|(
literal|"students"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iForm
operator|.
name|getRollForwardCurricula
argument_list|()
condition|)
name|names
operator|.
name|add
argument_list|(
literal|"curricula"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iForm
operator|.
name|getRollForwardReservations
argument_list|()
condition|)
name|names
operator|.
name|add
argument_list|(
literal|"reservations"
argument_list|)
expr_stmt|;
name|String
name|name
init|=
name|names
operator|.
name|toString
argument_list|()
operator|.
name|replace
argument_list|(
literal|"["
argument_list|,
literal|""
argument_list|)
operator|.
name|replace
argument_list|(
literal|"]"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|length
argument_list|()
operator|>
literal|50
condition|)
name|name
operator|=
name|name
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|47
argument_list|)
operator|+
literal|"..."
expr_stmt|;
return|return
name|name
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|progress
parameter_list|()
block|{
return|return
literal|100
operator|*
name|iProgress
operator|/
literal|14
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|type
parameter_list|()
block|{
return|return
literal|"Roll Forward"
return|;
block|}
block|}
specifier|protected
name|void
name|setToFromSessionsInForm
parameter_list|(
name|RollForwardSessionForm
name|rollForwardSessionForm
parameter_list|)
block|{
name|List
name|sessionList
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|sessionList
operator|.
name|addAll
argument_list|(
name|Session
operator|.
name|getAllSessions
argument_list|()
argument_list|)
expr_stmt|;
name|rollForwardSessionForm
operator|.
name|setFromSessions
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|)
expr_stmt|;
name|rollForwardSessionForm
operator|.
name|setToSessions
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|)
expr_stmt|;
name|Session
name|session
init|=
literal|null
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
operator|(
name|sessionList
operator|.
name|size
argument_list|()
operator|-
literal|1
operator|)
init|;
name|i
operator|>=
literal|0
condition|;
name|i
operator|--
control|)
block|{
name|session
operator|=
operator|(
name|Session
operator|)
name|sessionList
operator|.
name|get
argument_list|(
name|i
argument_list|)
expr_stmt|;
if|if
condition|(
name|session
operator|.
name|getStatusType
argument_list|()
operator|.
name|isAllowRollForward
argument_list|()
condition|)
block|{
name|rollForwardSessionForm
operator|.
name|getToSessions
argument_list|()
operator|.
name|add
argument_list|(
name|session
argument_list|)
expr_stmt|;
if|if
condition|(
name|rollForwardSessionForm
operator|.
name|getSessionToRollForwardTo
argument_list|()
operator|==
literal|null
condition|)
block|{
name|rollForwardSessionForm
operator|.
name|setSessionToRollForwardTo
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|rollForwardSessionForm
operator|.
name|getFromSessions
argument_list|()
operator|.
name|add
argument_list|(
name|session
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|protected
name|Set
name|getSubjectAreas
parameter_list|(
name|Long
name|selectedSessionId
parameter_list|)
block|{
name|Set
name|subjects
init|=
operator|new
name|TreeSet
argument_list|()
decl_stmt|;
name|Session
name|session
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|selectedSessionId
operator|==
literal|null
condition|)
block|{
name|boolean
name|found
init|=
literal|false
decl_stmt|;
name|TreeSet
name|allSessions
init|=
name|Session
operator|.
name|getAllSessions
argument_list|()
decl_stmt|;
name|List
name|sessionList
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|sessionList
operator|.
name|addAll
argument_list|(
name|Session
operator|.
name|getAllSessions
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
operator|(
name|sessionList
operator|.
name|size
argument_list|()
operator|-
literal|1
operator|)
init|;
name|i
operator|>=
literal|0
condition|;
name|i
operator|--
control|)
block|{
name|session
operator|=
operator|(
name|Session
operator|)
name|sessionList
operator|.
name|get
argument_list|(
name|i
argument_list|)
expr_stmt|;
if|if
condition|(
name|session
operator|.
name|getStatusType
argument_list|()
operator|.
name|isAllowRollForward
argument_list|()
condition|)
block|{
name|found
operator|=
literal|true
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|found
condition|)
block|{
name|session
operator|=
literal|null
expr_stmt|;
if|if
condition|(
name|allSessions
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|session
operator|=
operator|(
name|Session
operator|)
name|allSessions
operator|.
name|last
argument_list|()
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
name|session
operator|=
name|Session
operator|.
name|getSessionById
argument_list|(
name|selectedSessionId
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|session
operator|!=
literal|null
condition|)
name|subjects
operator|=
name|session
operator|.
name|getSubjectAreas
argument_list|()
expr_stmt|;
return|return
operator|(
name|subjects
operator|)
return|;
block|}
specifier|protected
name|void
name|setExpirationDates
parameter_list|(
name|RollForwardSessionForm
name|form
parameter_list|)
block|{
if|if
condition|(
name|form
operator|.
name|getSessionToRollForwardTo
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|ReservationInterface
operator|.
name|DefaultExpirationDates
name|dates
init|=
name|GwtRpcServlet
operator|.
name|execute
argument_list|(
operator|new
name|ReservationInterface
operator|.
name|ReservationDefaultExpirationDatesRpcRequest
argument_list|(
name|form
operator|.
name|getSessionToRollForwardTo
argument_list|()
argument_list|)
argument_list|,
name|applicationContext
argument_list|,
name|sessionContext
argument_list|)
decl_stmt|;
if|if
condition|(
name|dates
operator|!=
literal|null
condition|)
block|{
name|SimpleDateFormat
name|df
init|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"MM/dd/yyyy"
argument_list|)
decl_stmt|;
name|form
operator|.
name|setExpirationCourseReservations
argument_list|(
name|dates
operator|.
name|hasExpirationDate
argument_list|(
literal|"course"
argument_list|)
condition|?
name|df
operator|.
name|format
argument_list|(
name|dates
operator|.
name|getExpirationDate
argument_list|(
literal|"course"
argument_list|)
argument_list|)
else|:
literal|null
argument_list|)
expr_stmt|;
name|form
operator|.
name|setExpirationCurriculumReservations
argument_list|(
name|dates
operator|.
name|hasExpirationDate
argument_list|(
literal|"curriculum"
argument_list|)
condition|?
name|df
operator|.
name|format
argument_list|(
name|dates
operator|.
name|getExpirationDate
argument_list|(
literal|"curriculum"
argument_list|)
argument_list|)
else|:
literal|null
argument_list|)
expr_stmt|;
name|form
operator|.
name|setExpirationGroupReservations
argument_list|(
name|dates
operator|.
name|hasExpirationDate
argument_list|(
literal|"group"
argument_list|)
condition|?
name|df
operator|.
name|format
argument_list|(
name|dates
operator|.
name|getExpirationDate
argument_list|(
literal|"group"
argument_list|)
argument_list|)
else|:
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|form
operator|.
name|setExpirationCourseReservations
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|form
operator|.
name|setExpirationCurriculumReservations
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|form
operator|.
name|setExpirationGroupReservations
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

