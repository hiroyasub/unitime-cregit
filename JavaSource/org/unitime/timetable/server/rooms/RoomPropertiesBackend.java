begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|server
operator|.
name|rooms
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|ApplicationProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|CommonValues
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|UserProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplementation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplements
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|DepartmentInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|ExamTypeInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|FeatureTypeInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomPropertiesInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomPropertiesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomTypeInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ExamType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomFeatureType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|RoomFeatureTypeDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|rights
operator|.
name|Right
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|GwtRpcImplements
argument_list|(
name|RoomPropertiesRequest
operator|.
name|class
argument_list|)
specifier|public
class|class
name|RoomPropertiesBackend
implements|implements
name|GwtRpcImplementation
argument_list|<
name|RoomPropertiesRequest
argument_list|,
name|RoomPropertiesInterface
argument_list|>
block|{
specifier|protected
specifier|static
specifier|final
name|GwtConstants
name|CONSTANTS
init|=
name|Localization
operator|.
name|create
argument_list|(
name|GwtConstants
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|RoomPropertiesInterface
name|execute
parameter_list|(
name|RoomPropertiesRequest
name|request
parameter_list|,
name|SessionContext
name|context
parameter_list|)
block|{
name|context
operator|.
name|checkPermission
argument_list|(
name|Right
operator|.
name|Rooms
argument_list|)
expr_stmt|;
name|RoomPropertiesInterface
name|response
init|=
operator|new
name|RoomPropertiesInterface
argument_list|()
decl_stmt|;
name|response
operator|.
name|setAcademicSessionId
argument_list|(
name|context
operator|.
name|getUser
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|context
operator|.
name|getUser
argument_list|()
operator|.
name|getCurrentAcademicSessionId
argument_list|()
argument_list|)
expr_stmt|;
name|response
operator|.
name|setCanEditDepartments
argument_list|(
name|context
operator|.
name|hasPermission
argument_list|(
name|Right
operator|.
name|EditRoomDepartments
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|.
name|setCanExportCsv
argument_list|(
name|context
operator|.
name|hasPermission
argument_list|(
name|Right
operator|.
name|RoomsExportCsv
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|.
name|setCanExportPdf
argument_list|(
name|context
operator|.
name|hasPermission
argument_list|(
name|Right
operator|.
name|RoomsExportPdf
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|.
name|setCanEditRoomExams
argument_list|(
name|context
operator|.
name|hasPermission
argument_list|(
name|Right
operator|.
name|EditRoomDepartmentsExams
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|.
name|setCanAddRoom
argument_list|(
name|context
operator|.
name|hasPermission
argument_list|(
name|Right
operator|.
name|AddRoom
argument_list|)
operator|||
name|context
operator|.
name|hasPermission
argument_list|(
name|Right
operator|.
name|AddNonUnivLocation
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|.
name|setCanSeeCourses
argument_list|(
name|context
operator|.
name|hasPermission
argument_list|(
name|Right
operator|.
name|InstructionalOfferings
argument_list|)
operator|||
name|context
operator|.
name|hasPermission
argument_list|(
name|Right
operator|.
name|Classes
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|.
name|setCanSeeExams
argument_list|(
name|context
operator|.
name|hasPermission
argument_list|(
name|Right
operator|.
name|Examinations
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|.
name|setCanSeeEvents
argument_list|(
name|context
operator|.
name|hasPermission
argument_list|(
name|Right
operator|.
name|Events
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|RoomType
name|type
range|:
name|RoomType
operator|.
name|findAll
argument_list|()
control|)
name|response
operator|.
name|addRoomType
argument_list|(
operator|new
name|RoomTypeInterface
argument_list|(
name|type
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|type
operator|.
name|getLabel
argument_list|()
argument_list|,
name|type
operator|.
name|isRoom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|RoomFeatureType
name|type
range|:
operator|new
name|TreeSet
argument_list|<
name|RoomFeatureType
argument_list|>
argument_list|(
name|RoomFeatureTypeDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|findAll
argument_list|()
argument_list|)
control|)
name|response
operator|.
name|addFeatureType
argument_list|(
operator|new
name|FeatureTypeInterface
argument_list|(
name|type
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|type
operator|.
name|getReference
argument_list|()
argument_list|,
name|type
operator|.
name|getLabel
argument_list|()
argument_list|,
name|type
operator|.
name|isShowInEventManagement
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|ExamType
name|type
range|:
name|ExamType
operator|.
name|findAll
argument_list|()
control|)
name|response
operator|.
name|addExamType
argument_list|(
operator|new
name|ExamTypeInterface
argument_list|(
name|type
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|type
operator|.
name|getReference
argument_list|()
argument_list|,
name|type
operator|.
name|getLabel
argument_list|()
argument_list|,
name|type
operator|.
name|getType
argument_list|()
operator|==
name|ExamType
operator|.
name|sExamTypeFinal
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Department
name|d
range|:
name|Department
operator|.
name|getUserDepartments
argument_list|(
name|context
operator|.
name|getUser
argument_list|()
argument_list|)
control|)
block|{
name|DepartmentInterface
name|department
init|=
operator|new
name|DepartmentInterface
argument_list|()
decl_stmt|;
name|department
operator|.
name|setId
argument_list|(
name|d
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|department
operator|.
name|setDeptCode
argument_list|(
name|d
operator|.
name|getDeptCode
argument_list|()
argument_list|)
expr_stmt|;
name|department
operator|.
name|setAbbreviation
argument_list|(
name|d
operator|.
name|getAbbreviation
argument_list|()
argument_list|)
expr_stmt|;
name|department
operator|.
name|setLabel
argument_list|(
name|d
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|department
operator|.
name|setExternal
argument_list|(
name|d
operator|.
name|isExternalManager
argument_list|()
argument_list|)
expr_stmt|;
name|department
operator|.
name|setExtAbbreviation
argument_list|(
name|d
operator|.
name|getExternalMgrAbbv
argument_list|()
argument_list|)
expr_stmt|;
name|department
operator|.
name|setExtLabel
argument_list|(
name|d
operator|.
name|getExternalMgrLabel
argument_list|()
argument_list|)
expr_stmt|;
name|department
operator|.
name|setTitle
argument_list|(
name|d
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|response
operator|.
name|addDepartment
argument_list|(
name|department
argument_list|)
expr_stmt|;
block|}
name|response
operator|.
name|setHorizontal
argument_list|(
name|context
operator|.
name|getUser
argument_list|()
operator|==
literal|null
condition|?
literal|false
else|:
name|CommonValues
operator|.
name|HorizontalGrid
operator|.
name|eq
argument_list|(
name|context
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
name|UserProperty
operator|.
name|GridOrientation
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|response
operator|.
name|setGridAsText
argument_list|(
name|context
operator|.
name|getUser
argument_list|()
operator|==
literal|null
condition|?
literal|false
else|:
name|CommonValues
operator|.
name|TextGrid
operator|.
name|eq
argument_list|(
name|context
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
name|UserProperty
operator|.
name|GridOrientation
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
literal|true
condition|;
name|i
operator|++
control|)
block|{
name|String
name|mode
init|=
name|ApplicationProperty
operator|.
name|RoomSharingMode
operator|.
name|value
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
literal|1
operator|+
name|i
argument_list|)
argument_list|,
name|i
operator|<
name|CONSTANTS
operator|.
name|roomSharingModes
argument_list|()
operator|.
name|length
condition|?
name|CONSTANTS
operator|.
name|roomSharingModes
argument_list|()
index|[
name|i
index|]
else|:
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|mode
operator|==
literal|null
operator|||
name|mode
operator|.
name|isEmpty
argument_list|()
condition|)
break|break;
name|response
operator|.
name|addMode
argument_list|(
operator|new
name|RoomInterface
operator|.
name|RoomSharingDisplayMode
argument_list|(
name|mode
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|response
return|;
block|}
block|}
end_class

end_unit

