begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|server
operator|.
name|rooms
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|events
operator|.
name|EventAction
operator|.
name|EventContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|events
operator|.
name|RoomFilterBackend
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplementation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplements
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|FilterRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|FilterRpcResponse
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|FeatureInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|FeatureTypeInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|SearchRoomFeaturesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DepartmentRoomFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|GlobalRoomFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Location
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|rights
operator|.
name|Right
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|GwtRpcImplements
argument_list|(
name|SearchRoomFeaturesRequest
operator|.
name|class
argument_list|)
specifier|public
class|class
name|RoomFeaturesBackend
implements|implements
name|GwtRpcImplementation
argument_list|<
name|SearchRoomFeaturesRequest
argument_list|,
name|GwtRpcResponseList
argument_list|<
name|FeatureInterface
argument_list|>
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|GwtRpcResponseList
argument_list|<
name|FeatureInterface
argument_list|>
name|execute
parameter_list|(
name|SearchRoomFeaturesRequest
name|request
parameter_list|,
name|SessionContext
name|context
parameter_list|)
block|{
if|if
condition|(
name|request
operator|.
name|hasSessionId
argument_list|()
condition|)
name|context
operator|=
operator|new
name|EventContext
argument_list|(
name|context
argument_list|,
name|request
operator|.
name|getSessionId
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|context
operator|.
name|isAuthenticated
argument_list|()
condition|)
name|request
operator|.
name|getFilter
argument_list|()
operator|.
name|setOption
argument_list|(
literal|"user"
argument_list|,
name|context
operator|.
name|getUser
argument_list|()
operator|.
name|getExternalUserId
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|checkPermission
argument_list|(
name|Right
operator|.
name|RoomFeatures
argument_list|)
expr_stmt|;
name|GwtRpcResponseList
argument_list|<
name|FeatureInterface
argument_list|>
name|list
init|=
operator|new
name|GwtRpcResponseList
argument_list|<
name|FeatureInterface
argument_list|>
argument_list|()
decl_stmt|;
name|FilterRpcResponse
name|filterResponse
init|=
operator|new
name|FilterRpcResponse
argument_list|()
decl_stmt|;
operator|new
name|RoomFilterBackend
argument_list|()
operator|.
name|enumarate
argument_list|(
name|request
operator|.
name|getFilter
argument_list|()
argument_list|,
name|filterResponse
argument_list|,
operator|new
name|EventContext
argument_list|(
name|context
argument_list|,
name|context
operator|.
name|getUser
argument_list|()
operator|.
name|getCurrentAcademicSessionId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|Long
argument_list|,
name|Entity
argument_list|>
name|locations
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Entity
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|filterResponse
operator|.
name|hasResults
argument_list|()
condition|)
for|for
control|(
name|Entity
name|entity
range|:
name|filterResponse
operator|.
name|getResults
argument_list|()
control|)
name|locations
operator|.
name|put
argument_list|(
name|entity
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|entity
argument_list|)
expr_stmt|;
name|boolean
name|filterDepartments
init|=
name|context
operator|.
name|getUser
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|context
operator|.
name|getUser
argument_list|()
operator|.
name|getCurrentAuthority
argument_list|()
operator|.
name|hasRight
argument_list|(
name|Right
operator|.
name|DepartmentIndependent
argument_list|)
decl_stmt|;
for|for
control|(
name|GlobalRoomFeature
name|f
range|:
name|GlobalRoomFeature
operator|.
name|getAllGlobalRoomFeatures
argument_list|(
name|context
operator|.
name|getUser
argument_list|()
operator|.
name|getCurrentAcademicSessionId
argument_list|()
argument_list|)
control|)
block|{
name|FeatureInterface
name|feature
init|=
operator|new
name|FeatureInterface
argument_list|(
name|f
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|f
operator|.
name|getAbbv
argument_list|()
argument_list|,
name|f
operator|.
name|getLabel
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|f
operator|.
name|getFeatureType
argument_list|()
operator|!=
literal|null
condition|)
name|feature
operator|.
name|setType
argument_list|(
operator|new
name|FeatureTypeInterface
argument_list|(
name|f
operator|.
name|getFeatureType
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|f
operator|.
name|getFeatureType
argument_list|()
operator|.
name|getReference
argument_list|()
argument_list|,
name|f
operator|.
name|getFeatureType
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|,
name|f
operator|.
name|getFeatureType
argument_list|()
operator|.
name|isShowInEventManagement
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setCanEdit
argument_list|(
name|context
operator|.
name|hasPermission
argument_list|(
name|f
argument_list|,
name|Right
operator|.
name|GlobalRoomFeatureEdit
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setCanDelete
argument_list|(
name|context
operator|.
name|hasPermission
argument_list|(
name|f
argument_list|,
name|Right
operator|.
name|GlobalRoomFeatureDelete
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setSessionId
argument_list|(
name|f
operator|.
name|getSession
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setSessionName
argument_list|(
name|f
operator|.
name|getSession
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setDescription
argument_list|(
name|f
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Location
name|location
range|:
name|f
operator|.
name|getRooms
argument_list|()
control|)
block|{
name|Entity
name|e
init|=
name|locations
operator|.
name|get
argument_list|(
name|location
operator|.
name|getUniqueId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|e
operator|!=
literal|null
condition|)
name|feature
operator|.
name|addRoom
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|feature
operator|.
name|hasRooms
argument_list|()
condition|)
name|Collections
operator|.
name|sort
argument_list|(
name|feature
operator|.
name|getRooms
argument_list|()
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|feature
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|DepartmentRoomFeature
name|f
range|:
name|DepartmentRoomFeature
operator|.
name|getAllDepartmentRoomFeaturesInSession
argument_list|(
name|context
operator|.
name|getUser
argument_list|()
operator|.
name|getCurrentAcademicSessionId
argument_list|()
argument_list|)
control|)
block|{
if|if
condition|(
name|filterDepartments
operator|&&
operator|!
name|context
operator|.
name|getUser
argument_list|()
operator|.
name|getCurrentAuthority
argument_list|()
operator|.
name|hasQualifier
argument_list|(
name|f
operator|.
name|getDepartment
argument_list|()
argument_list|)
condition|)
continue|continue;
name|FeatureInterface
name|feature
init|=
operator|new
name|FeatureInterface
argument_list|(
name|f
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|f
operator|.
name|getAbbv
argument_list|()
argument_list|,
name|f
operator|.
name|getLabel
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|f
operator|.
name|getFeatureType
argument_list|()
operator|!=
literal|null
condition|)
name|feature
operator|.
name|setType
argument_list|(
operator|new
name|FeatureTypeInterface
argument_list|(
name|f
operator|.
name|getFeatureType
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|f
operator|.
name|getFeatureType
argument_list|()
operator|.
name|getReference
argument_list|()
argument_list|,
name|f
operator|.
name|getFeatureType
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|,
name|f
operator|.
name|getFeatureType
argument_list|()
operator|.
name|isShowInEventManagement
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setDepartment
argument_list|(
name|RoomDetailsBackend
operator|.
name|wrap
argument_list|(
name|f
operator|.
name|getDepartment
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setCanEdit
argument_list|(
name|context
operator|.
name|hasPermission
argument_list|(
name|f
argument_list|,
name|Right
operator|.
name|DepartmenalRoomFeatureEdit
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setCanDelete
argument_list|(
name|context
operator|.
name|hasPermission
argument_list|(
name|f
argument_list|,
name|Right
operator|.
name|DepartmenalRoomFeatureDelete
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setSessionId
argument_list|(
name|f
operator|.
name|getDepartment
argument_list|()
operator|.
name|getSession
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setSessionName
argument_list|(
name|f
operator|.
name|getDepartment
argument_list|()
operator|.
name|getSession
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setDescription
argument_list|(
name|f
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Location
name|location
range|:
name|f
operator|.
name|getRooms
argument_list|()
control|)
block|{
name|Entity
name|e
init|=
name|locations
operator|.
name|get
argument_list|(
name|location
operator|.
name|getUniqueId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|e
operator|!=
literal|null
condition|)
name|feature
operator|.
name|addRoom
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|feature
operator|.
name|hasRooms
argument_list|()
condition|)
name|Collections
operator|.
name|sort
argument_list|(
name|feature
operator|.
name|getRooms
argument_list|()
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|feature
argument_list|)
expr_stmt|;
block|}
return|return
name|list
return|;
block|}
block|}
end_class

end_unit

