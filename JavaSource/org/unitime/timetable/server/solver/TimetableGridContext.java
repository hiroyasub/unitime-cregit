begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|server
operator|.
name|solver
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|BitSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|ApplicationProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|FilterInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DatePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|server
operator|.
name|solver
operator|.
name|TimetableGridHelper
operator|.
name|DisplayMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|server
operator|.
name|solver
operator|.
name|TimetableGridHelper
operator|.
name|ResourceType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|DateUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|NameFormat
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|TimetableGridContext
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|String
name|iFilter
decl_stmt|;
specifier|private
name|int
name|iStartDayDayOfWeek
decl_stmt|;
specifier|private
name|int
name|iResourceType
decl_stmt|;
specifier|private
name|int
name|iFirstDay
decl_stmt|,
name|iFirstSessionDay
decl_stmt|;
specifier|private
name|int
name|iBgMode
decl_stmt|,
name|iDispMode
decl_stmt|;
specifier|private
name|boolean
name|iShowEvents
decl_stmt|;
specifier|private
name|int
name|iFirstSlot
decl_stmt|,
name|iLastSlot
decl_stmt|,
name|iDayCode
decl_stmt|;
specifier|private
name|BitSet
name|iPattern
decl_stmt|;
specifier|private
name|float
name|iNrWeeks
decl_stmt|;
specifier|private
name|int
name|iSlotsPerWeek
decl_stmt|;
specifier|private
name|Date
name|iFirstDate
decl_stmt|;
specifier|private
name|boolean
name|iShowInstructor
decl_stmt|,
name|iShowTime
decl_stmt|,
name|iShowPreference
decl_stmt|,
name|iShowFreeTimes
decl_stmt|,
name|iShowDate
decl_stmt|;
specifier|private
name|Date
name|iSessionStartDate
decl_stmt|,
name|iSessionEndDate
decl_stmt|;
specifier|private
name|boolean
name|iShowCrossLists
decl_stmt|,
name|iShowClassSuffix
decl_stmt|,
name|iShowConfigName
decl_stmt|,
name|iShowClassNameTwoLines
decl_stmt|,
name|iShowCourseTitle
decl_stmt|;
specifier|private
name|String
name|iLocale
decl_stmt|;
specifier|private
name|String
name|iInstructorNameFormat
init|=
name|NameFormat
operator|.
name|SHORT
operator|.
name|reference
argument_list|()
decl_stmt|;
specifier|private
name|int
name|iWeekOffset
init|=
literal|0
decl_stmt|;
specifier|public
name|TimetableGridContext
parameter_list|()
block|{
block|}
specifier|public
name|TimetableGridContext
parameter_list|(
name|FilterInterface
name|filter
parameter_list|,
name|Session
name|session
parameter_list|)
block|{
name|iWeekOffset
operator|=
name|ApplicationProperty
operator|.
name|TimeGridFirstDayOfWeek
operator|.
name|intValue
argument_list|()
expr_stmt|;
name|iLocale
operator|=
name|Localization
operator|.
name|getLocale
argument_list|()
expr_stmt|;
name|DatePattern
name|dp
init|=
name|session
operator|.
name|getDefaultDatePatternNotNull
argument_list|()
decl_stmt|;
name|iFilter
operator|=
name|filter
operator|.
name|getParameterValue
argument_list|(
literal|"filter"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|iStartDayDayOfWeek
operator|=
name|Constants
operator|.
name|getDayOfWeek
argument_list|(
name|DateUtils
operator|.
name|getDate
argument_list|(
literal|1
argument_list|,
name|session
operator|.
name|getPatternStartMonth
argument_list|()
argument_list|,
name|session
operator|.
name|getSessionStartYear
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|week
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|filter
operator|.
name|getParameterValue
argument_list|(
literal|"weeks"
argument_list|,
literal|"-100"
argument_list|)
argument_list|)
decl_stmt|;
name|iFirstDay
operator|=
operator|(
name|week
operator|==
operator|-
literal|100
condition|?
operator|-
literal|1
else|:
name|DateUtils
operator|.
name|getFirstDayOfWeek
argument_list|(
name|session
operator|.
name|getSessionStartYear
argument_list|()
argument_list|,
name|week
argument_list|)
operator|-
name|session
operator|.
name|getDayOfYear
argument_list|(
literal|1
argument_list|,
name|session
operator|.
name|getPatternStartMonth
argument_list|()
argument_list|)
operator|-
literal|1
operator|+
name|iWeekOffset
operator|)
expr_stmt|;
name|iResourceType
operator|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|filter
operator|.
name|getParameterValue
argument_list|(
literal|"resource"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
expr_stmt|;
name|iBgMode
operator|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|filter
operator|.
name|getParameterValue
argument_list|(
literal|"background"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
expr_stmt|;
name|iShowEvents
operator|=
literal|"1"
operator|.
name|equals
argument_list|(
name|filter
operator|.
name|getParameterValue
argument_list|(
literal|"showEvents"
argument_list|)
argument_list|)
expr_stmt|;
name|String
index|[]
name|times
init|=
name|filter
operator|.
name|getParameterValue
argument_list|(
literal|"times"
argument_list|,
literal|"0|288|6"
argument_list|)
operator|.
name|split
argument_list|(
literal|"\\|"
argument_list|)
decl_stmt|;
name|iFirstSlot
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|times
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|int
name|step
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|times
index|[
literal|2
index|]
argument_list|)
decl_stmt|;
name|int
name|nrTimes
init|=
operator|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|times
index|[
literal|1
index|]
argument_list|)
operator|-
name|iFirstSlot
operator|)
operator|/
name|step
decl_stmt|;
name|iLastSlot
operator|=
name|iFirstSlot
operator|+
operator|(
name|step
operator|*
name|nrTimes
operator|)
operator|-
literal|1
expr_stmt|;
name|iDayCode
operator|=
literal|0
expr_stmt|;
name|int
name|nrWeekDays
init|=
literal|0
decl_stmt|;
name|String
name|bitmap
init|=
name|filter
operator|.
name|getParameterValue
argument_list|(
literal|"days"
argument_list|,
literal|"1111111"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|bitmap
operator|.
name|length
argument_list|()
operator|&&
name|i
operator|<
literal|7
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|bitmap
operator|.
name|charAt
argument_list|(
name|i
argument_list|)
operator|==
literal|'1'
condition|)
block|{
name|iDayCode
operator|+=
name|Constants
operator|.
name|DAY_CODES
index|[
name|i
index|]
expr_stmt|;
name|nrWeekDays
operator|++
expr_stmt|;
block|}
name|iPattern
operator|=
name|dp
operator|.
name|getPatternBitSet
argument_list|()
expr_stmt|;
name|iNrWeeks
operator|=
name|dp
operator|.
name|getEffectiveNumberOfWeeks
argument_list|()
expr_stmt|;
if|if
condition|(
name|iFirstDay
operator|<
literal|0
operator|&&
name|ApplicationProperty
operator|.
name|TimetableGridUtilizationSkipHolidays
operator|.
name|isTrue
argument_list|()
condition|)
block|{
name|int
name|nrDays
init|=
literal|0
decl_stmt|;
name|int
name|idx
init|=
operator|-
literal|1
decl_stmt|;
name|int
name|daysInWeek
index|[]
init|=
operator|new
name|int
index|[]
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
decl_stmt|;
while|while
condition|(
operator|(
name|idx
operator|=
name|iPattern
operator|.
name|nextSetBit
argument_list|(
literal|1
operator|+
name|idx
argument_list|)
operator|)
operator|>=
literal|0
condition|)
block|{
name|int
name|dow
init|=
operator|(
operator|(
name|idx
operator|+
name|iStartDayDayOfWeek
operator|)
operator|%
literal|7
operator|)
decl_stmt|;
if|if
condition|(
operator|(
name|iDayCode
operator|&
name|Constants
operator|.
name|DAY_CODES
index|[
name|dow
index|]
operator|)
operator|!=
literal|0
condition|)
block|{
name|nrDays
operator|++
expr_stmt|;
name|daysInWeek
index|[
name|dow
index|]
operator|++
expr_stmt|;
block|}
block|}
name|float
name|weekDays
init|=
literal|1f
operator|/
name|nrWeekDays
decl_stmt|;
if|if
condition|(
name|weekDays
operator|>=
literal|0.2f
condition|)
block|{
name|iNrWeeks
operator|=
name|weekDays
operator|*
name|nrDays
expr_stmt|;
block|}
else|else
block|{
name|iNrWeeks
operator|=
literal|0.2f
operator|*
operator|(
name|daysInWeek
index|[
literal|0
index|]
operator|+
name|daysInWeek
index|[
literal|1
index|]
operator|+
name|daysInWeek
index|[
literal|2
index|]
operator|+
name|daysInWeek
index|[
literal|3
index|]
operator|+
name|daysInWeek
index|[
literal|4
index|]
operator|)
expr_stmt|;
block|}
block|}
name|iSlotsPerWeek
operator|=
operator|(
name|iLastSlot
operator|-
name|iFirstSlot
operator|+
literal|1
operator|)
operator|*
name|nrWeekDays
expr_stmt|;
name|int
name|startWeek
init|=
name|DateUtils
operator|.
name|getWeek
argument_list|(
name|session
operator|.
name|getSessionBeginDateTime
argument_list|()
argument_list|)
operator|-
name|ApplicationProperty
operator|.
name|SessionNrExcessDays
operator|.
name|intValue
argument_list|()
operator|/
literal|7
decl_stmt|;
name|iFirstDate
operator|=
name|DateUtils
operator|.
name|getStartDate
argument_list|(
name|session
operator|.
name|getSessionStartYear
argument_list|()
argument_list|,
name|startWeek
argument_list|)
expr_stmt|;
name|iFirstSessionDay
operator|=
name|DateUtils
operator|.
name|getFirstDayOfWeek
argument_list|(
name|session
operator|.
name|getSessionStartYear
argument_list|()
argument_list|,
name|startWeek
argument_list|)
operator|-
name|session
operator|.
name|getDayOfYear
argument_list|(
literal|1
argument_list|,
name|session
operator|.
name|getPatternStartMonth
argument_list|()
argument_list|)
operator|-
literal|1
expr_stmt|;
name|iShowInstructor
operator|=
literal|"1"
operator|.
name|equals
argument_list|(
name|filter
operator|.
name|getParameterValue
argument_list|(
literal|"showInstructors"
argument_list|)
argument_list|)
expr_stmt|;
name|iShowTime
operator|=
literal|"1"
operator|.
name|equals
argument_list|(
name|filter
operator|.
name|getParameterValue
argument_list|(
literal|"showTimes"
argument_list|)
argument_list|)
expr_stmt|;
name|iShowPreference
operator|=
literal|"1"
operator|.
name|equals
argument_list|(
name|filter
operator|.
name|getParameterValue
argument_list|(
literal|"showPreferences"
argument_list|)
argument_list|)
expr_stmt|;
name|iShowFreeTimes
operator|=
literal|"1"
operator|.
name|equals
argument_list|(
name|filter
operator|.
name|getParameterValue
argument_list|(
literal|"showFreeTimes"
argument_list|)
argument_list|)
expr_stmt|;
name|iShowDate
operator|=
literal|"-100"
operator|.
name|equals
argument_list|(
name|filter
operator|.
name|getParameterValue
argument_list|(
literal|"weeks"
argument_list|)
argument_list|)
expr_stmt|;
name|iDispMode
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|filter
operator|.
name|getParameterValue
argument_list|(
literal|"dispMode"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
expr_stmt|;
name|Calendar
name|startDateCal
init|=
name|Calendar
operator|.
name|getInstance
argument_list|(
name|Locale
operator|.
name|US
argument_list|)
decl_stmt|;
name|startDateCal
operator|.
name|setTime
argument_list|(
name|DateUtils
operator|.
name|getDate
argument_list|(
literal|1
argument_list|,
name|session
operator|.
name|getStartMonth
argument_list|()
argument_list|,
name|session
operator|.
name|getSessionStartYear
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|startDateCal
operator|.
name|set
argument_list|(
name|Calendar
operator|.
name|HOUR_OF_DAY
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|startDateCal
operator|.
name|set
argument_list|(
name|Calendar
operator|.
name|MINUTE
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|startDateCal
operator|.
name|set
argument_list|(
name|Calendar
operator|.
name|SECOND
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|iSessionStartDate
operator|=
name|startDateCal
operator|.
name|getTime
argument_list|()
expr_stmt|;
name|Calendar
name|endDateCal
init|=
name|Calendar
operator|.
name|getInstance
argument_list|(
name|Locale
operator|.
name|US
argument_list|)
decl_stmt|;
name|endDateCal
operator|.
name|setTime
argument_list|(
name|DateUtils
operator|.
name|getDate
argument_list|(
literal|0
argument_list|,
name|session
operator|.
name|getEndMonth
argument_list|()
operator|+
literal|1
argument_list|,
name|session
operator|.
name|getSessionStartYear
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|endDateCal
operator|.
name|set
argument_list|(
name|Calendar
operator|.
name|HOUR_OF_DAY
argument_list|,
literal|23
argument_list|)
expr_stmt|;
name|endDateCal
operator|.
name|set
argument_list|(
name|Calendar
operator|.
name|MINUTE
argument_list|,
literal|59
argument_list|)
expr_stmt|;
name|endDateCal
operator|.
name|set
argument_list|(
name|Calendar
operator|.
name|SECOND
argument_list|,
literal|59
argument_list|)
expr_stmt|;
name|iSessionEndDate
operator|=
name|endDateCal
operator|.
name|getTime
argument_list|()
expr_stmt|;
name|iShowCrossLists
operator|=
name|ApplicationProperty
operator|.
name|TimeGridShowCrosslists
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|iShowClassSuffix
operator|=
name|ApplicationProperty
operator|.
name|SolverShowClassSufix
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|iShowConfigName
operator|=
name|ApplicationProperty
operator|.
name|SolverShowConfiguratioName
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|iShowClassNameTwoLines
operator|=
name|ApplicationProperty
operator|.
name|TimeGridShowNameInTwoLines
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|iShowCourseTitle
operator|=
literal|"1"
operator|.
name|equals
argument_list|(
name|filter
operator|.
name|getParameterValue
argument_list|(
literal|"showTitles"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getFilter
parameter_list|()
block|{
return|return
name|iFilter
return|;
block|}
specifier|public
name|int
name|getResourceType
parameter_list|()
block|{
return|return
name|iResourceType
return|;
block|}
specifier|public
name|int
name|getFirstDay
parameter_list|()
block|{
return|return
name|iFirstDay
return|;
block|}
specifier|public
name|int
name|getFirstSessionDay
parameter_list|()
block|{
return|return
name|iFirstSessionDay
return|;
block|}
specifier|public
name|int
name|getBgMode
parameter_list|()
block|{
return|return
name|iBgMode
return|;
block|}
specifier|public
name|boolean
name|isShowEvents
parameter_list|()
block|{
return|return
name|iShowEvents
return|;
block|}
specifier|public
name|int
name|getStartDayDayOfWeek
parameter_list|()
block|{
return|return
name|iStartDayDayOfWeek
return|;
block|}
specifier|public
name|int
name|getFirstSlot
parameter_list|()
block|{
return|return
name|iFirstSlot
return|;
block|}
specifier|public
name|int
name|getLastSlot
parameter_list|()
block|{
return|return
name|iLastSlot
return|;
block|}
specifier|public
name|int
name|getDayCode
parameter_list|()
block|{
return|return
name|iDayCode
return|;
block|}
specifier|public
name|BitSet
name|getDefaultDatePattern
parameter_list|()
block|{
return|return
name|iPattern
return|;
block|}
specifier|public
name|float
name|getNumberOfWeeks
parameter_list|()
block|{
return|return
operator|(
name|iFirstDay
operator|>=
literal|0
condition|?
literal|1.0f
else|:
name|iNrWeeks
operator|)
return|;
block|}
specifier|public
name|int
name|getSlotsPerWeek
parameter_list|()
block|{
return|return
name|iSlotsPerWeek
return|;
block|}
specifier|public
name|Date
name|getFirstDate
parameter_list|()
block|{
return|return
name|iFirstDate
return|;
block|}
specifier|public
name|boolean
name|isShowInstructor
parameter_list|()
block|{
return|return
name|iShowInstructor
return|;
block|}
specifier|public
name|boolean
name|isShowTime
parameter_list|()
block|{
return|return
name|iShowTime
return|;
block|}
specifier|public
name|boolean
name|isShowPreference
parameter_list|()
block|{
return|return
name|iShowPreference
return|;
block|}
specifier|public
name|boolean
name|isShowFreeTimes
parameter_list|()
block|{
return|return
name|iShowFreeTimes
operator|&&
name|iResourceType
operator|<=
literal|1
return|;
block|}
specifier|public
name|boolean
name|isShowRoom
parameter_list|()
block|{
return|return
name|iResourceType
operator|!=
name|ResourceType
operator|.
name|ROOM
operator|.
name|ordinal
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isShowDate
parameter_list|()
block|{
return|return
name|iShowDate
return|;
block|}
specifier|public
name|int
name|getDisplayMode
parameter_list|()
block|{
return|return
name|iDispMode
return|;
block|}
specifier|public
name|boolean
name|isVertical
parameter_list|()
block|{
return|return
name|iDispMode
operator|==
name|DisplayMode
operator|.
name|PerWeekVertical
operator|.
name|ordinal
argument_list|()
return|;
block|}
specifier|public
name|Date
name|getSessionStartDate
parameter_list|()
block|{
return|return
name|iSessionStartDate
return|;
block|}
specifier|public
name|Date
name|getSessionEndDate
parameter_list|()
block|{
return|return
name|iSessionEndDate
return|;
block|}
specifier|public
name|boolean
name|isShowCrossLists
parameter_list|()
block|{
return|return
name|iShowCrossLists
return|;
block|}
specifier|public
name|boolean
name|isShowClassSuffix
parameter_list|()
block|{
return|return
name|iShowClassSuffix
return|;
block|}
specifier|public
name|boolean
name|isShowConfigName
parameter_list|()
block|{
return|return
name|iShowConfigName
return|;
block|}
specifier|public
name|boolean
name|isShowClassNameTwoLines
parameter_list|()
block|{
return|return
name|iShowClassNameTwoLines
return|;
block|}
specifier|public
name|boolean
name|isShowCourseTitle
parameter_list|()
block|{
return|return
name|iShowCourseTitle
return|;
block|}
specifier|public
name|void
name|ensureLocalizationIsSet
parameter_list|()
block|{
name|Localization
operator|.
name|setLocale
argument_list|(
name|iLocale
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getInstructorNameFormat
parameter_list|()
block|{
return|return
name|iInstructorNameFormat
return|;
block|}
specifier|public
name|void
name|setInstructorNameFormat
parameter_list|(
name|String
name|format
parameter_list|)
block|{
name|iInstructorNameFormat
operator|=
name|format
expr_stmt|;
block|}
specifier|public
name|int
name|getWeekOffset
parameter_list|()
block|{
return|return
name|iWeekOffset
return|;
block|}
block|}
end_class

end_unit

