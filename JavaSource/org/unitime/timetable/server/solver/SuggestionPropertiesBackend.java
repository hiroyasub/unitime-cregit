begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|server
operator|.
name|solver
package|;
end_package

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|ApplicationProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplementation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplements
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SuggestionsInterface
operator|.
name|PreferenceInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SuggestionsInterface
operator|.
name|SelectedAssignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SuggestionsInterface
operator|.
name|SuggestionProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SuggestionsInterface
operator|.
name|SuggestionPropertiesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PreferenceLevel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|SolverProxy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|TimetableSolver
operator|.
name|AssignmentRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|TimetableSolver
operator|.
name|RecordedAssignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|interactive
operator|.
name|Hint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|service
operator|.
name|SolverService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|GwtRpcImplements
argument_list|(
name|SuggestionPropertiesRequest
operator|.
name|class
argument_list|)
specifier|public
class|class
name|SuggestionPropertiesBackend
implements|implements
name|GwtRpcImplementation
argument_list|<
name|SuggestionPropertiesRequest
argument_list|,
name|SuggestionProperties
argument_list|>
block|{
annotation|@
name|Autowired
name|SolverService
argument_list|<
name|SolverProxy
argument_list|>
name|courseTimetablingSolverService
decl_stmt|;
annotation|@
name|Override
specifier|public
name|SuggestionProperties
name|execute
parameter_list|(
name|SuggestionPropertiesRequest
name|request
parameter_list|,
name|SessionContext
name|context
parameter_list|)
block|{
name|SuggestionProperties
name|response
init|=
operator|new
name|SuggestionProperties
argument_list|()
decl_stmt|;
for|for
control|(
name|PreferenceLevel
name|pref
range|:
name|PreferenceLevel
operator|.
name|getPreferenceLevelList
argument_list|(
literal|false
argument_list|)
control|)
block|{
name|response
operator|.
name|addPreference
argument_list|(
operator|new
name|PreferenceInterface
argument_list|(
name|pref
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|PreferenceLevel
operator|.
name|prolog2color
argument_list|(
name|pref
operator|.
name|getPrefProlog
argument_list|()
argument_list|)
argument_list|,
name|pref
operator|.
name|getPrefProlog
argument_list|()
argument_list|,
name|pref
operator|.
name|getPrefName
argument_list|()
argument_list|,
name|pref
operator|.
name|getAbbreviation
argument_list|()
argument_list|,
name|Constants
operator|.
name|preference2preferenceLevel
argument_list|(
name|pref
operator|.
name|getPrefProlog
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|response
operator|.
name|setSolver
argument_list|(
name|courseTimetablingSolverService
operator|.
name|getSolver
argument_list|()
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|response
operator|.
name|setFirstDay
argument_list|(
name|ApplicationProperty
operator|.
name|TimePatternFirstDayOfWeek
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|getHistoryId
argument_list|()
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|SolverProxy
name|solver
init|=
name|courseTimetablingSolverService
operator|.
name|getSolver
argument_list|()
decl_stmt|;
if|if
condition|(
name|solver
operator|!=
literal|null
condition|)
block|{
name|AssignmentRecord
name|record
init|=
name|solver
operator|.
name|getAssignmentRecords
argument_list|()
operator|.
name|get
argument_list|(
operator|(
name|int
operator|)
name|request
operator|.
name|getHistoryId
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|RecordedAssignment
name|assignment
range|:
name|record
operator|.
name|getAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|assignment
operator|.
name|getBefore
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|Hint
name|before
init|=
name|assignment
operator|.
name|getBefore
argument_list|()
decl_stmt|;
name|response
operator|.
name|addSelectedAssignment
argument_list|(
operator|new
name|SelectedAssignment
argument_list|(
name|before
operator|.
name|getClassId
argument_list|()
argument_list|,
name|before
operator|.
name|getDays
argument_list|()
argument_list|,
name|before
operator|.
name|getStartSlot
argument_list|()
argument_list|,
name|before
operator|.
name|getRoomIds
argument_list|()
argument_list|,
name|before
operator|.
name|getPatternId
argument_list|()
argument_list|,
name|before
operator|.
name|getDatePatternId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
block|}
return|return
name|response
return|;
block|}
block|}
end_class

end_unit

