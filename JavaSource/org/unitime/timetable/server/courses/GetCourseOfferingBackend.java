begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|server
operator|.
name|courses
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|ApplicationProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplementation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplements
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|CoordinatorInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|GetCourseOfferingRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|GetCourseOfferingResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|interfaces
operator|.
name|ExternalLinkLookup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseCreditUnitConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|FixedCreditUnitConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|InstructionalOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|OfferingCoordinator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|OverrideType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|VariableFixedCreditUnitConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|VariableRangeCreditUnitConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|rights
operator|.
name|Right
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_class
annotation|@
name|GwtRpcImplements
argument_list|(
name|GetCourseOfferingRequest
operator|.
name|class
argument_list|)
specifier|public
class|class
name|GetCourseOfferingBackend
implements|implements
name|GwtRpcImplementation
argument_list|<
name|GetCourseOfferingRequest
argument_list|,
name|GetCourseOfferingResponse
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|GetCourseOfferingResponse
name|execute
parameter_list|(
name|GetCourseOfferingRequest
name|request
parameter_list|,
name|SessionContext
name|context
parameter_list|)
block|{
if|if
condition|(
operator|!
name|context
operator|.
name|hasPermission
argument_list|(
name|request
operator|.
name|getCourseOfferingId
argument_list|()
argument_list|,
literal|"CourseOffering"
argument_list|,
name|Right
operator|.
name|EditCourseOffering
argument_list|)
operator|&&
operator|!
name|context
operator|.
name|hasPermission
argument_list|(
name|request
operator|.
name|getCourseOfferingId
argument_list|()
argument_list|,
literal|"CourseOffering"
argument_list|,
name|Right
operator|.
name|EditCourseOfferingCoordinators
argument_list|)
operator|&&
operator|!
name|context
operator|.
name|hasPermission
argument_list|(
name|request
operator|.
name|getCourseOfferingId
argument_list|()
argument_list|,
literal|"CourseOffering"
argument_list|,
name|Right
operator|.
name|EditCourseOfferingNote
argument_list|)
condition|)
block|{
comment|//If they don't have any of the permissions, reject based on any of them.
name|context
operator|.
name|checkPermission
argument_list|(
name|request
operator|.
name|getCourseOfferingId
argument_list|()
argument_list|,
literal|"CourseOffering"
argument_list|,
name|Right
operator|.
name|EditCourseOffering
argument_list|)
expr_stmt|;
block|}
name|GetCourseOfferingResponse
name|response
init|=
operator|new
name|GetCourseOfferingResponse
argument_list|()
decl_stmt|;
name|CourseOffering
name|courseOffering
init|=
name|CourseOffering
operator|.
name|findByUniqueId
argument_list|(
name|request
operator|.
name|getCourseOfferingId
argument_list|()
argument_list|)
decl_stmt|;
name|InstructionalOffering
name|instructionalOffering
init|=
name|courseOffering
operator|.
name|getInstructionalOffering
argument_list|()
decl_stmt|;
name|CourseOfferingInterface
name|cof
init|=
operator|new
name|CourseOfferingInterface
argument_list|()
decl_stmt|;
name|cof
operator|.
name|setId
argument_list|(
name|courseOffering
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setInstrOfferingId
argument_list|(
name|instructionalOffering
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setCourseNbr
argument_list|(
name|courseOffering
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setTitle
argument_list|(
name|courseOffering
operator|.
name|getTitle
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setCourseName
argument_list|(
name|courseOffering
operator|.
name|getCourseName
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setScheduleBookNote
argument_list|(
name|courseOffering
operator|.
name|getScheduleBookNote
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setSubjectAreaAbbv
argument_list|(
name|courseOffering
operator|.
name|getSubjectAreaAbbv
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setSubjectAreaId
argument_list|(
name|courseOffering
operator|.
name|getSubjectArea
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|courseOffering
operator|.
name|getConsentType
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|cof
operator|.
name|setConsent
argument_list|(
name|courseOffering
operator|.
name|getConsentType
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setConsentText
argument_list|(
name|courseOffering
operator|.
name|getConsentType
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cof
operator|.
name|setConsent
argument_list|(
operator|new
name|Long
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setConsentText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getCredit
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|CourseCreditUnitConfig
name|credit
init|=
name|courseOffering
operator|.
name|getCredit
argument_list|()
decl_stmt|;
name|cof
operator|.
name|setCreditText
argument_list|(
name|credit
operator|.
name|creditText
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setCreditFormat
argument_list|(
name|credit
operator|.
name|getCreditFormat
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setCreditType
argument_list|(
name|credit
operator|.
name|getCreditType
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setCreditUnitType
argument_list|(
name|credit
operator|.
name|getCreditUnitType
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|credit
operator|instanceof
name|FixedCreditUnitConfig
condition|)
block|{
name|cof
operator|.
name|setUnits
argument_list|(
operator|(
operator|(
name|FixedCreditUnitConfig
operator|)
name|credit
operator|)
operator|.
name|getFixedUnits
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|credit
operator|instanceof
name|VariableFixedCreditUnitConfig
condition|)
block|{
name|cof
operator|.
name|setUnits
argument_list|(
operator|(
operator|(
name|VariableFixedCreditUnitConfig
operator|)
name|credit
operator|)
operator|.
name|getMinUnits
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setMaxUnits
argument_list|(
operator|(
operator|(
name|VariableFixedCreditUnitConfig
operator|)
name|credit
operator|)
operator|.
name|getMaxUnits
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|credit
operator|instanceof
name|VariableRangeCreditUnitConfig
condition|)
block|{
name|cof
operator|.
name|setFractionalIncrementsAllowed
argument_list|(
operator|(
operator|(
name|VariableRangeCreditUnitConfig
operator|)
name|credit
operator|)
operator|.
name|isFractionalIncrementsAllowed
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|cof
operator|.
name|setExternalId
argument_list|(
name|courseOffering
operator|.
name|getExternalUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|response
operator|.
name|setWkEnrollDefault
argument_list|(
name|instructionalOffering
operator|.
name|getSession
argument_list|()
operator|.
name|getLastWeekToEnroll
argument_list|()
argument_list|)
expr_stmt|;
name|response
operator|.
name|setWkChangeDefault
argument_list|(
name|instructionalOffering
operator|.
name|getSession
argument_list|()
operator|.
name|getLastWeekToChange
argument_list|()
argument_list|)
expr_stmt|;
name|response
operator|.
name|setWkDropDefault
argument_list|(
name|instructionalOffering
operator|.
name|getSession
argument_list|()
operator|.
name|getLastWeekToDrop
argument_list|()
argument_list|)
expr_stmt|;
name|response
operator|.
name|setWeekStartDayOfWeek
argument_list|(
name|Localization
operator|.
name|getDateFormat
argument_list|(
literal|"EEEE"
argument_list|)
operator|.
name|format
argument_list|(
name|instructionalOffering
operator|.
name|getSession
argument_list|()
operator|.
name|getSessionBeginDateTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|courseOffering
operator|.
name|getDemandOffering
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|cof
operator|.
name|setDemandOfferingId
argument_list|(
name|courseOffering
operator|.
name|getDemandOffering
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setDemandOfferingText
argument_list|(
name|courseOffering
operator|.
name|getDemandOffering
argument_list|()
operator|.
name|getCourseNameWithTitle
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getAlternativeOffering
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|cof
operator|.
name|setAlternativeCourseOfferingId
argument_list|(
name|courseOffering
operator|.
name|getAlternativeOffering
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getFundingDept
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|cof
operator|.
name|setFundingDepartmentId
argument_list|(
name|courseOffering
operator|.
name|getFundingDept
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getEffectiveFundingDept
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|cof
operator|.
name|setEffectiveFundingDepartmentId
argument_list|(
name|courseOffering
operator|.
name|getEffectiveFundingDept
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getCourseType
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|cof
operator|.
name|setCourseTypeId
argument_list|(
name|courseOffering
operator|.
name|getCourseType
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|OfferingCoordinator
name|coordinator
range|:
operator|new
name|TreeSet
argument_list|<
name|OfferingCoordinator
argument_list|>
argument_list|(
name|instructionalOffering
operator|.
name|getOfferingCoordinators
argument_list|()
argument_list|)
control|)
block|{
name|CoordinatorInterface
name|coordinatorObject
init|=
operator|new
name|CoordinatorInterface
argument_list|()
decl_stmt|;
name|coordinatorObject
operator|.
name|setInstructorId
argument_list|(
name|coordinator
operator|.
name|getInstructor
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|coordinatorObject
operator|.
name|setPercShare
argument_list|(
name|coordinator
operator|.
name|getPercentShare
argument_list|()
operator|==
literal|null
condition|?
literal|"0"
else|:
name|coordinator
operator|.
name|getPercentShare
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|coordinatorObject
operator|.
name|setResponsibilityId
argument_list|(
name|coordinator
operator|.
name|getResponsibility
argument_list|()
operator|==
literal|null
condition|?
name|Constants
operator|.
name|BLANK_OPTION_VALUE
else|:
name|coordinator
operator|.
name|getResponsibility
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|addCoordinator
argument_list|(
name|coordinatorObject
argument_list|)
expr_stmt|;
block|}
name|cof
operator|.
name|setByReservationOnly
argument_list|(
name|instructionalOffering
operator|.
name|getByReservationOnly
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setLastWeekToChange
argument_list|(
name|instructionalOffering
operator|.
name|getLastWeekToChange
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setLastWeekToDrop
argument_list|(
name|instructionalOffering
operator|.
name|getLastWeekToDrop
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setLastWeekToEnroll
argument_list|(
name|instructionalOffering
operator|.
name|getLastWeekToEnroll
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setNotes
argument_list|(
name|instructionalOffering
operator|.
name|getNotes
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setInstrOfferingId
argument_list|(
name|instructionalOffering
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setIsControl
argument_list|(
name|courseOffering
operator|.
name|getIsControl
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
if|if
condition|(
name|cof
operator|.
name|getIsControl
argument_list|()
operator|==
literal|true
condition|)
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|String
name|linkLookupClass
init|=
name|ApplicationProperty
operator|.
name|CourseCatalogLinkProvider
operator|.
name|value
argument_list|()
decl_stmt|;
if|if
condition|(
name|linkLookupClass
operator|!=
literal|null
operator|&&
name|linkLookupClass
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|ExternalLinkLookup
name|lookup
init|=
operator|(
name|ExternalLinkLookup
operator|)
operator|(
name|Class
operator|.
name|forName
argument_list|(
name|linkLookupClass
argument_list|)
operator|.
name|newInstance
argument_list|()
operator|)
decl_stmt|;
name|Map
name|results
init|=
name|lookup
operator|.
name|getLink
argument_list|(
name|instructionalOffering
argument_list|)
decl_stmt|;
if|if
condition|(
name|results
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
name|lookup
operator|.
name|getErrorMessage
argument_list|()
argument_list|)
throw|;
block|}
name|cof
operator|.
name|setCatalogLinkLabel
argument_list|(
operator|(
name|String
operator|)
name|results
operator|.
name|get
argument_list|(
name|ExternalLinkLookup
operator|.
name|LINK_LABEL
argument_list|)
argument_list|)
expr_stmt|;
name|cof
operator|.
name|setCatalogLinkLocation
argument_list|(
operator|(
name|String
operator|)
name|results
operator|.
name|get
argument_list|(
name|ExternalLinkLookup
operator|.
name|LINK_LOCATION
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
name|cof
operator|.
name|setIoNotOffered
argument_list|(
name|instructionalOffering
operator|.
name|getNotOffered
argument_list|()
argument_list|)
expr_stmt|;
name|cof
operator|.
name|clearCourseOverrides
argument_list|()
expr_stmt|;
for|for
control|(
name|OverrideType
name|override
range|:
name|courseOffering
operator|.
name|getDisabledOverrides
argument_list|()
control|)
block|{
name|cof
operator|.
name|addCourseOverride
argument_list|(
name|override
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|cof
operator|.
name|setWaitList
argument_list|(
name|instructionalOffering
operator|.
name|getWaitlist
argument_list|()
argument_list|)
expr_stmt|;
name|response
operator|.
name|setCourseOffering
argument_list|(
name|cof
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
block|}
end_class

end_unit

