begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|server
operator|.
name|script
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplementation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplements
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ScriptInterface
operator|.
name|GetQueueTableRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ScriptInterface
operator|.
name|QueueItemInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|queue
operator|.
name|QueueItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|queue
operator|.
name|QueueProcessor
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|GwtRpcImplements
argument_list|(
name|GetQueueTableRpcRequest
operator|.
name|class
argument_list|)
specifier|public
class|class
name|GetQueueTableBackend
implements|implements
name|GwtRpcImplementation
argument_list|<
name|GetQueueTableRpcRequest
argument_list|,
name|GwtRpcResponseList
argument_list|<
name|QueueItemInterface
argument_list|>
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|GwtRpcResponseList
argument_list|<
name|QueueItemInterface
argument_list|>
name|execute
parameter_list|(
name|GetQueueTableRpcRequest
name|request
parameter_list|,
name|SessionContext
name|context
parameter_list|)
block|{
if|if
condition|(
name|request
operator|.
name|getDeleteId
argument_list|()
operator|!=
literal|null
condition|)
name|QueueProcessor
operator|.
name|getInstance
argument_list|()
operator|.
name|remove
argument_list|(
name|request
operator|.
name|getDeleteId
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|QueueItem
argument_list|>
name|queue
init|=
name|QueueProcessor
operator|.
name|getInstance
argument_list|()
operator|.
name|getItems
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|"Script"
argument_list|)
decl_stmt|;
name|GwtRpcResponseList
argument_list|<
name|QueueItemInterface
argument_list|>
name|table
init|=
operator|new
name|GwtRpcResponseList
argument_list|<
name|QueueItemInterface
argument_list|>
argument_list|()
decl_stmt|;
name|Date
name|now
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|long
name|timeToShow
init|=
literal|1000
operator|*
literal|60
operator|*
literal|60
decl_stmt|;
for|for
control|(
name|QueueItem
name|item
range|:
name|queue
control|)
block|{
if|if
condition|(
name|item
operator|.
name|finished
argument_list|()
operator|!=
literal|null
operator|&&
name|now
operator|.
name|getTime
argument_list|()
operator|-
name|item
operator|.
name|finished
argument_list|()
operator|.
name|getTime
argument_list|()
operator|>
name|timeToShow
condition|)
continue|continue;
name|table
operator|.
name|add
argument_list|(
name|convert
argument_list|(
name|item
argument_list|,
name|context
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|table
return|;
block|}
specifier|public
specifier|static
name|QueueItemInterface
name|convert
parameter_list|(
name|QueueItem
name|item
parameter_list|,
name|SessionContext
name|context
parameter_list|)
block|{
name|QueueItemInterface
name|q
init|=
operator|new
name|QueueItemInterface
argument_list|()
decl_stmt|;
name|q
operator|.
name|setId
argument_list|(
name|item
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|q
operator|.
name|setName
argument_list|(
name|item
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|q
operator|.
name|setStatus
argument_list|(
name|item
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|q
operator|.
name|setProgress
argument_list|(
name|item
operator|.
name|progress
argument_list|()
operator|<=
literal|0.0
operator|||
name|item
operator|.
name|progress
argument_list|()
operator|>=
literal|1.0
condition|?
literal|""
else|:
name|String
operator|.
name|valueOf
argument_list|(
name|Math
operator|.
name|round
argument_list|(
literal|100
operator|*
name|item
operator|.
name|progress
argument_list|()
argument_list|)
argument_list|)
operator|+
literal|"%"
argument_list|)
expr_stmt|;
name|q
operator|.
name|setOwner
argument_list|(
name|item
operator|.
name|getOwnerName
argument_list|()
argument_list|)
expr_stmt|;
name|q
operator|.
name|setSession
argument_list|(
name|item
operator|.
name|getSession
argument_list|()
operator|==
literal|null
condition|?
literal|"None"
else|:
name|item
operator|.
name|getSession
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|q
operator|.
name|setCreated
argument_list|(
name|item
operator|.
name|created
argument_list|()
argument_list|)
expr_stmt|;
name|q
operator|.
name|setStarted
argument_list|(
name|item
operator|.
name|started
argument_list|()
argument_list|)
expr_stmt|;
name|q
operator|.
name|setFinished
argument_list|(
name|item
operator|.
name|finished
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|item
operator|.
name|finished
argument_list|()
operator|!=
literal|null
operator|&&
name|item
operator|.
name|hasOutput
argument_list|()
condition|)
name|q
operator|.
name|setOutput
argument_list|(
name|item
operator|.
name|output
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|q
operator|.
name|setLog
argument_list|(
name|item
operator|.
name|log
argument_list|()
argument_list|)
expr_stmt|;
name|q
operator|.
name|setCanDelete
argument_list|(
name|context
operator|.
name|getUser
argument_list|()
operator|.
name|getExternalUserId
argument_list|()
operator|.
name|equals
argument_list|(
name|item
operator|.
name|getOwnerId
argument_list|()
argument_list|)
operator|&&
operator|(
name|item
operator|.
name|started
argument_list|()
operator|==
literal|null
operator|||
name|item
operator|.
name|finished
argument_list|()
operator|!=
literal|null
operator|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|item
operator|instanceof
name|ScriptExecution
condition|)
name|q
operator|.
name|setExecutionRequest
argument_list|(
operator|(
operator|(
name|ScriptExecution
operator|)
name|item
operator|)
operator|.
name|getRequest
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|q
return|;
block|}
block|}
end_class

end_unit

