begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|server
operator|.
name|script
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|script
operator|.
name|ScriptEngineFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|script
operator|.
name|ScriptEngineManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|access
operator|.
name|prepost
operator|.
name|PreAuthorize
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplementation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplements
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ScriptInterface
operator|.
name|GetScriptOptionsRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ScriptInterface
operator|.
name|ScriptOptionsInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SubjectArea
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|rights
operator|.
name|Right
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|GwtRpcImplements
argument_list|(
name|GetScriptOptionsRpcRequest
operator|.
name|class
argument_list|)
specifier|public
class|class
name|ScriptOptionsBackend
implements|implements
name|GwtRpcImplementation
argument_list|<
name|GetScriptOptionsRpcRequest
argument_list|,
name|ScriptOptionsInterface
argument_list|>
block|{
annotation|@
name|Override
annotation|@
name|PreAuthorize
argument_list|(
literal|"checkPermission('Scripts')"
argument_list|)
specifier|public
name|ScriptOptionsInterface
name|execute
parameter_list|(
name|GetScriptOptionsRpcRequest
name|request
parameter_list|,
name|SessionContext
name|context
parameter_list|)
block|{
name|ScriptOptionsInterface
name|options
init|=
operator|new
name|ScriptOptionsInterface
argument_list|()
decl_stmt|;
for|for
control|(
name|ScriptEngineFactory
name|factory
range|:
operator|new
name|ScriptEngineManager
argument_list|()
operator|.
name|getEngineFactories
argument_list|()
control|)
name|options
operator|.
name|addEngine
argument_list|(
name|factory
operator|.
name|getLanguageName
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Right
name|right
range|:
name|Right
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|right
operator|.
name|hasType
argument_list|()
operator|||
name|right
operator|.
name|type
argument_list|()
operator|.
name|equals
argument_list|(
name|Session
operator|.
name|class
argument_list|)
operator|||
name|right
operator|.
name|type
argument_list|()
operator|.
name|equals
argument_list|(
name|Department
operator|.
name|class
argument_list|)
operator|||
name|right
operator|.
name|type
argument_list|()
operator|.
name|equals
argument_list|(
name|SubjectArea
operator|.
name|class
argument_list|)
condition|)
name|options
operator|.
name|addPermission
argument_list|(
name|right
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|options
operator|.
name|setCanAdd
argument_list|(
name|context
operator|.
name|hasPermission
argument_list|(
name|Right
operator|.
name|ScriptEdit
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|.
name|setEmail
argument_list|(
name|context
operator|.
name|getUser
argument_list|()
operator|.
name|getEmail
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|options
return|;
block|}
block|}
end_class

end_unit

