begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|server
operator|.
name|pointintimedata
package|;
end_package

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|access
operator|.
name|prepost
operator|.
name|PreAuthorize
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplementation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplements
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|PointInTimeDataReportsInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|PointInTimeDataReportsInterface
operator|.
name|PITDQueriesRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|PointInTimeDataReportsInterface
operator|.
name|Parameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|PointInTimeDataReportsInterface
operator|.
name|Report
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|reports
operator|.
name|pointintimedata
operator|.
name|BasePointInTimeDataReports
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_comment
comment|/**  * @author Stephanie Schluttenhofer  */
end_comment

begin_class
annotation|@
name|GwtRpcImplements
argument_list|(
name|PITDQueriesRpcRequest
operator|.
name|class
argument_list|)
specifier|public
class|class
name|PITDQueriesBackend
implements|implements
name|GwtRpcImplementation
argument_list|<
name|PITDQueriesRpcRequest
argument_list|,
name|GwtRpcResponseList
argument_list|<
name|Report
argument_list|>
argument_list|>
block|{
annotation|@
name|Autowired
specifier|private
name|SessionContext
name|sessionContext
decl_stmt|;
annotation|@
name|Override
annotation|@
name|PreAuthorize
argument_list|(
literal|"checkPermission('PointInTimeDataReports')"
argument_list|)
specifier|public
name|GwtRpcResponseList
argument_list|<
name|Report
argument_list|>
name|execute
parameter_list|(
name|PITDQueriesRpcRequest
name|request
parameter_list|,
name|SessionContext
name|context
parameter_list|)
block|{
name|GwtRpcResponseList
argument_list|<
name|PointInTimeDataReportsInterface
operator|.
name|Report
argument_list|>
name|ret
init|=
operator|new
name|GwtRpcResponseList
argument_list|<
name|PointInTimeDataReportsInterface
operator|.
name|Report
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|key
range|:
name|BasePointInTimeDataReports
operator|.
name|sPointInTimeDataReportRegister
operator|.
name|keySet
argument_list|()
control|)
block|{
name|Class
name|rptCls
init|=
name|BasePointInTimeDataReports
operator|.
name|sPointInTimeDataReportRegister
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|BasePointInTimeDataReports
name|rpt
init|=
literal|null
decl_stmt|;
try|try
block|{
name|rpt
operator|=
operator|(
name|BasePointInTimeDataReports
operator|)
name|rptCls
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InstantiationException
name|e
parameter_list|)
block|{
comment|// TODO Auto-generated catch block
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalAccessException
name|e
parameter_list|)
block|{
comment|// TODO Auto-generated catch block
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|rpt
operator|!=
literal|null
condition|)
block|{
name|PointInTimeDataReportsInterface
operator|.
name|Report
name|report
init|=
operator|new
name|PointInTimeDataReportsInterface
operator|.
name|Report
argument_list|()
decl_stmt|;
name|report
operator|.
name|setName
argument_list|(
name|rpt
operator|.
name|reportName
argument_list|()
argument_list|)
expr_stmt|;
name|report
operator|.
name|setDescription
argument_list|(
name|rpt
operator|.
name|reportDescription
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|reports
operator|.
name|pointintimedata
operator|.
name|BasePointInTimeDataReports
operator|.
name|Parameter
name|parameter
range|:
name|rpt
operator|.
name|getParameters
argument_list|()
control|)
block|{
name|Parameter
name|rptParam
init|=
operator|new
name|Parameter
argument_list|()
decl_stmt|;
name|rptParam
operator|.
name|setType
argument_list|(
name|parameter
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|rptParam
operator|.
name|setDefaultTextValue
argument_list|(
name|parameter
operator|.
name|defaultValue
argument_list|(
name|sessionContext
operator|.
name|getUser
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|rptParam
operator|.
name|setMultiSelect
argument_list|(
name|parameter
operator|.
name|allowMultiSelection
argument_list|()
argument_list|)
expr_stmt|;
name|rptParam
operator|.
name|setName
argument_list|(
name|parameter
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|rptParam
operator|.
name|setTextField
argument_list|(
name|parameter
operator|.
name|isTextField
argument_list|()
argument_list|)
expr_stmt|;
name|report
operator|.
name|addParameter
argument_list|(
name|rptParam
argument_list|)
expr_stmt|;
block|}
name|report
operator|.
name|setFlags
argument_list|(
literal|255
argument_list|)
expr_stmt|;
name|report
operator|.
name|setId
argument_list|(
name|key
argument_list|)
expr_stmt|;
name|ret
operator|.
name|add
argument_list|(
name|report
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|ret
return|;
block|}
block|}
end_class

end_unit

