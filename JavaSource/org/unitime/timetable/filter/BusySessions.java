begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|filter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|FilterChain
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|FilterConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSessionEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSessionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|web
operator|.
name|context
operator|.
name|WebApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|web
operator|.
name|context
operator|.
name|support
operator|.
name|WebApplicationContextUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseBoolean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplementation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplements
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|MenuInterface
operator|.
name|IsSessionBusyRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|BusySessions
block|{
specifier|public
specifier|static
class|class
name|Filter
implements|implements
name|javax
operator|.
name|servlet
operator|.
name|Filter
block|{
specifier|private
name|Tracker
name|iTracker
decl_stmt|;
specifier|protected
name|Tracker
name|getTracker
parameter_list|(
name|ServletRequest
name|request
parameter_list|)
block|{
if|if
condition|(
name|iTracker
operator|==
literal|null
condition|)
block|{
name|WebApplicationContext
name|applicationContext
init|=
name|WebApplicationContextUtils
operator|.
name|getWebApplicationContext
argument_list|(
name|request
operator|.
name|getServletContext
argument_list|()
argument_list|)
decl_stmt|;
name|iTracker
operator|=
operator|(
name|Tracker
operator|)
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"unitimeBusySessions"
argument_list|)
expr_stmt|;
block|}
return|return
name|iTracker
return|;
block|}
specifier|protected
name|void
name|increment
parameter_list|(
name|ServletRequest
name|request
parameter_list|)
block|{
if|if
condition|(
name|request
operator|instanceof
name|HttpServletRequest
condition|)
block|{
name|Tracker
name|tracker
init|=
name|getTracker
argument_list|(
name|request
argument_list|)
decl_stmt|;
if|if
condition|(
name|tracker
operator|!=
literal|null
condition|)
name|tracker
operator|.
name|increment
argument_list|(
operator|(
operator|(
name|HttpServletRequest
operator|)
name|request
operator|)
operator|.
name|getSession
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|decrement
parameter_list|(
name|ServletRequest
name|request
parameter_list|)
block|{
if|if
condition|(
name|request
operator|instanceof
name|HttpServletRequest
condition|)
block|{
name|Tracker
name|tracker
init|=
name|getTracker
argument_list|(
name|request
argument_list|)
decl_stmt|;
if|if
condition|(
name|tracker
operator|!=
literal|null
condition|)
name|tracker
operator|.
name|decrement
argument_list|(
operator|(
operator|(
name|HttpServletRequest
operator|)
name|request
operator|)
operator|.
name|getSession
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|destroy
parameter_list|()
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|doFilter
parameter_list|(
name|ServletRequest
name|request
parameter_list|,
name|ServletResponse
name|response
parameter_list|,
name|FilterChain
name|chain
parameter_list|)
throws|throws
name|IOException
throws|,
name|ServletException
block|{
try|try
block|{
name|increment
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|chain
operator|.
name|doFilter
argument_list|(
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|decrement
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|init
parameter_list|(
name|FilterConfig
name|config
parameter_list|)
throws|throws
name|ServletException
block|{
block|}
block|}
specifier|public
specifier|static
class|class
name|Listener
implements|implements
name|HttpSessionListener
block|{
specifier|private
name|Tracker
name|iTracker
decl_stmt|;
specifier|protected
name|Tracker
name|getTracker
parameter_list|(
name|HttpSessionEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iTracker
operator|==
literal|null
condition|)
block|{
name|WebApplicationContext
name|applicationContext
init|=
name|WebApplicationContextUtils
operator|.
name|getWebApplicationContext
argument_list|(
name|event
operator|.
name|getSession
argument_list|()
operator|.
name|getServletContext
argument_list|()
argument_list|)
decl_stmt|;
name|iTracker
operator|=
operator|(
name|Tracker
operator|)
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"unitimeBusySessions"
argument_list|)
expr_stmt|;
block|}
return|return
name|iTracker
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|sessionCreated
parameter_list|(
name|HttpSessionEvent
name|event
parameter_list|)
block|{
name|Tracker
name|tracker
init|=
name|getTracker
argument_list|(
name|event
argument_list|)
decl_stmt|;
if|if
condition|(
name|tracker
operator|!=
literal|null
condition|)
name|tracker
operator|.
name|create
argument_list|(
name|event
operator|.
name|getSession
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|sessionDestroyed
parameter_list|(
name|HttpSessionEvent
name|event
parameter_list|)
block|{
name|Tracker
name|tracker
init|=
name|getTracker
argument_list|(
name|event
argument_list|)
decl_stmt|;
if|if
condition|(
name|tracker
operator|!=
literal|null
condition|)
name|tracker
operator|.
name|destroy
argument_list|(
name|event
operator|.
name|getSession
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
class|class
name|Counter
block|{
specifier|private
name|int
name|iValue
decl_stmt|;
specifier|public
name|int
name|get
parameter_list|()
block|{
return|return
name|iValue
return|;
block|}
specifier|public
name|void
name|increment
parameter_list|()
block|{
name|iValue
operator|++
expr_stmt|;
block|}
specifier|public
name|void
name|decrement
parameter_list|()
block|{
name|iValue
operator|--
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|String
operator|.
name|valueOf
argument_list|(
name|iValue
argument_list|)
return|;
block|}
block|}
annotation|@
name|Service
argument_list|(
literal|"unitimeBusySessions"
argument_list|)
specifier|public
specifier|static
class|class
name|Tracker
block|{
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Counter
argument_list|>
name|iCounters
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Counter
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|void
name|create
parameter_list|(
name|String
name|id
parameter_list|)
block|{
block|}
specifier|public
name|void
name|destroy
parameter_list|(
name|String
name|id
parameter_list|)
block|{
synchronized|synchronized
init|(
name|iCounters
init|)
block|{
name|iCounters
operator|.
name|remove
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|increment
parameter_list|(
name|String
name|id
parameter_list|)
block|{
synchronized|synchronized
init|(
name|iCounters
init|)
block|{
name|Counter
name|counter
init|=
name|iCounters
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|counter
operator|==
literal|null
condition|)
block|{
name|counter
operator|=
operator|new
name|Counter
argument_list|()
expr_stmt|;
name|iCounters
operator|.
name|put
argument_list|(
name|id
argument_list|,
name|counter
argument_list|)
expr_stmt|;
block|}
name|counter
operator|.
name|increment
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|decrement
parameter_list|(
name|String
name|id
parameter_list|)
block|{
synchronized|synchronized
init|(
name|iCounters
init|)
block|{
name|Counter
name|counter
init|=
name|iCounters
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|counter
operator|!=
literal|null
condition|)
name|counter
operator|.
name|decrement
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|boolean
name|isWorking
parameter_list|(
name|String
name|id
parameter_list|)
block|{
if|if
condition|(
name|id
operator|==
literal|null
condition|)
return|return
literal|false
return|;
synchronized|synchronized
init|(
name|iCounters
init|)
block|{
name|Counter
name|counter
init|=
name|iCounters
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
return|return
name|counter
operator|!=
literal|null
operator|&&
name|counter
operator|.
name|get
argument_list|()
operator|>
literal|1
return|;
block|}
block|}
block|}
annotation|@
name|GwtRpcImplements
argument_list|(
name|IsSessionBusyRpcRequest
operator|.
name|class
argument_list|)
specifier|public
specifier|static
class|class
name|Backend
implements|implements
name|GwtRpcImplementation
argument_list|<
name|IsSessionBusyRpcRequest
argument_list|,
name|GwtRpcResponseBoolean
argument_list|>
block|{
specifier|private
annotation|@
name|Autowired
name|Tracker
name|unitimeBusySessions
decl_stmt|;
annotation|@
name|Override
specifier|public
name|GwtRpcResponseBoolean
name|execute
parameter_list|(
name|IsSessionBusyRpcRequest
name|request
parameter_list|,
name|SessionContext
name|context
parameter_list|)
block|{
return|return
operator|new
name|GwtRpcResponseBoolean
argument_list|(
name|unitimeBusySessions
operator|.
name|isWorking
argument_list|(
name|context
operator|.
name|getHttpSessionId
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

