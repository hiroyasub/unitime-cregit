begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|// Generated by the protocol buffer compiler.  DO NOT EDIT!
end_comment

begin_comment
comment|// source: JavaSource/OnlineSectioningLog.proto
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
package|;
end_package

begin_class
specifier|public
specifier|final
class|class
name|OnlineSectioningLog
block|{
specifier|private
name|OnlineSectioningLog
parameter_list|()
block|{
block|}
specifier|public
specifier|static
name|void
name|registerAllExtensions
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|registry
parameter_list|)
block|{
block|}
specifier|public
specifier|static
name|void
name|registerAllExtensions
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistry
name|registry
parameter_list|)
block|{
name|registerAllExtensions
argument_list|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
operator|)
name|registry
argument_list|)
expr_stmt|;
block|}
specifier|public
interface|interface
name|EntityOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:Entity)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional int64 unique_id = 1;</code>      * @return Whether the uniqueId field is set.      */
name|boolean
name|hasUniqueId
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 unique_id = 1;</code>      * @return The uniqueId.      */
name|long
name|getUniqueId
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity.EntityType type = 2;</code>      * @return Whether the type field is set.      */
name|boolean
name|hasType
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity.EntityType type = 2;</code>      * @return The type.      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|EntityType
name|getType
parameter_list|()
function_decl|;
comment|/**      *<code>optional string external_id = 3;</code>      * @return Whether the externalId field is set.      */
name|boolean
name|hasExternalId
parameter_list|()
function_decl|;
comment|/**      *<code>optional string external_id = 3;</code>      * @return The externalId.      */
name|java
operator|.
name|lang
operator|.
name|String
name|getExternalId
parameter_list|()
function_decl|;
comment|/**      *<code>optional string external_id = 3;</code>      * @return The bytes for externalId.      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getExternalIdBytes
parameter_list|()
function_decl|;
comment|/**      *<code>optional string name = 4;</code>      * @return Whether the name field is set.      */
name|boolean
name|hasName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string name = 4;</code>      * @return The name.      */
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string name = 4;</code>      * @return The bytes for name.      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Property parameter = 5;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|>
name|getParameterList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Property parameter = 5;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|getParameter
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Property parameter = 5;</code>      */
name|int
name|getParameterCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Property parameter = 5;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
argument_list|>
name|getParameterOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Property parameter = 5;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
name|getParameterOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code Entity}    */
specifier|public
specifier|static
specifier|final
class|class
name|Entity
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:Entity)
name|EntityOrBuilder
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
comment|// Use Entity.newBuilder() to construct.
specifier|private
name|Entity
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Entity
parameter_list|()
block|{
name|type_
operator|=
literal|0
expr_stmt|;
name|externalId_
operator|=
literal|""
expr_stmt|;
name|name_
operator|=
literal|""
expr_stmt|;
name|parameter_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unused"
block|}
argument_list|)
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|newInstance
parameter_list|(
name|UnusedPrivateParameter
name|unused
parameter_list|)
block|{
return|return
operator|new
name|Entity
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Entity
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
if|if
condition|(
name|extensionRegistry
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|NullPointerException
argument_list|()
throw|;
block|}
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
case|case
literal|8
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|uniqueId_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|EntityType
name|value
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|EntityType
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|2
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|type_
operator|=
name|rawValue
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|26
case|:
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|externalId_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|34
case|:
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|name_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|42
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|parameter_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|parameter_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|parameter_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|parameter_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Entity_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Entity_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * Protobuf enum {@code Entity.EntityType}      */
specifier|public
enum|enum
name|EntityType
implements|implements
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolMessageEnum
block|{
comment|/**        *<code>CLAZZ = 0;</code>        */
name|CLAZZ
argument_list|(
literal|0
argument_list|)
block|,
comment|/**        *<code>COURSE = 1;</code>        */
name|COURSE
argument_list|(
literal|1
argument_list|)
block|,
comment|/**        *<code>LOCATION = 2;</code>        */
name|LOCATION
argument_list|(
literal|2
argument_list|)
block|,
comment|/**        *<code>INSTRUCTOR = 3;</code>        */
name|INSTRUCTOR
argument_list|(
literal|3
argument_list|)
block|,
comment|/**        *<code>STUDENT = 4;</code>        */
name|STUDENT
argument_list|(
literal|4
argument_list|)
block|,
comment|/**        *<code>OFFERING = 5;</code>        */
name|OFFERING
argument_list|(
literal|5
argument_list|)
block|,
comment|/**        *<code>RESERVATION = 6;</code>        */
name|RESERVATION
argument_list|(
literal|6
argument_list|)
block|,
comment|/**        *<code>INDIVIDUAL_RESERVATION = 7;</code>        */
name|INDIVIDUAL_RESERVATION
argument_list|(
literal|7
argument_list|)
block|,
comment|/**        *<code>GROUP_RESERVATION = 8;</code>        */
name|GROUP_RESERVATION
argument_list|(
literal|8
argument_list|)
block|,
comment|/**        *<code>CURRICULUM_RESERVATION = 9;</code>        */
name|CURRICULUM_RESERVATION
argument_list|(
literal|9
argument_list|)
block|,
comment|/**        *<code>COURSE_RESERVATION = 10;</code>        */
name|COURSE_RESERVATION
argument_list|(
literal|10
argument_list|)
block|,
comment|/**        *<code>MANAGER = 11;</code>        */
name|MANAGER
argument_list|(
literal|11
argument_list|)
block|,
comment|/**        *<code>OTHER = 12;</code>        */
name|OTHER
argument_list|(
literal|12
argument_list|)
block|,       ;
comment|/**        *<code>CLAZZ = 0;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|CLAZZ_VALUE
init|=
literal|0
decl_stmt|;
comment|/**        *<code>COURSE = 1;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|COURSE_VALUE
init|=
literal|1
decl_stmt|;
comment|/**        *<code>LOCATION = 2;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|LOCATION_VALUE
init|=
literal|2
decl_stmt|;
comment|/**        *<code>INSTRUCTOR = 3;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|INSTRUCTOR_VALUE
init|=
literal|3
decl_stmt|;
comment|/**        *<code>STUDENT = 4;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|STUDENT_VALUE
init|=
literal|4
decl_stmt|;
comment|/**        *<code>OFFERING = 5;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|OFFERING_VALUE
init|=
literal|5
decl_stmt|;
comment|/**        *<code>RESERVATION = 6;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|RESERVATION_VALUE
init|=
literal|6
decl_stmt|;
comment|/**        *<code>INDIVIDUAL_RESERVATION = 7;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|INDIVIDUAL_RESERVATION_VALUE
init|=
literal|7
decl_stmt|;
comment|/**        *<code>GROUP_RESERVATION = 8;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|GROUP_RESERVATION_VALUE
init|=
literal|8
decl_stmt|;
comment|/**        *<code>CURRICULUM_RESERVATION = 9;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|CURRICULUM_RESERVATION_VALUE
init|=
literal|9
decl_stmt|;
comment|/**        *<code>COURSE_RESERVATION = 10;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|COURSE_RESERVATION_VALUE
init|=
literal|10
decl_stmt|;
comment|/**        *<code>MANAGER = 11;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|MANAGER_VALUE
init|=
literal|11
decl_stmt|;
comment|/**        *<code>OTHER = 12;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|OTHER_VALUE
init|=
literal|12
decl_stmt|;
specifier|public
specifier|final
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|value
return|;
block|}
comment|/**        * @param value The numeric wire value of the corresponding enum entry.        * @return The enum associated with the given numeric wire value.        * @deprecated Use {@link #forNumber(int)} instead.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
name|EntityType
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
return|return
name|forNumber
argument_list|(
name|value
argument_list|)
return|;
block|}
comment|/**        * @param value The numeric wire value of the corresponding enum entry.        * @return The enum associated with the given numeric wire value.        */
specifier|public
specifier|static
name|EntityType
name|forNumber
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|0
case|:
return|return
name|CLAZZ
return|;
case|case
literal|1
case|:
return|return
name|COURSE
return|;
case|case
literal|2
case|:
return|return
name|LOCATION
return|;
case|case
literal|3
case|:
return|return
name|INSTRUCTOR
return|;
case|case
literal|4
case|:
return|return
name|STUDENT
return|;
case|case
literal|5
case|:
return|return
name|OFFERING
return|;
case|case
literal|6
case|:
return|return
name|RESERVATION
return|;
case|case
literal|7
case|:
return|return
name|INDIVIDUAL_RESERVATION
return|;
case|case
literal|8
case|:
return|return
name|GROUP_RESERVATION
return|;
case|case
literal|9
case|:
return|return
name|CURRICULUM_RESERVATION
return|;
case|case
literal|10
case|:
return|return
name|COURSE_RESERVATION
return|;
case|case
literal|11
case|:
return|return
name|MANAGER
return|;
case|case
literal|12
case|:
return|return
name|OTHER
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|EntityType
argument_list|>
name|internalGetValueMap
parameter_list|()
block|{
return|return
name|internalValueMap
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|EntityType
argument_list|>
name|internalValueMap
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|EntityType
argument_list|>
argument_list|()
block|{
specifier|public
name|EntityType
name|findValueByNumber
parameter_list|(
name|int
name|number
parameter_list|)
block|{
return|return
name|EntityType
operator|.
name|forNumber
argument_list|(
name|number
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|getValueDescriptor
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|ordinal
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getEnumTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
name|EntityType
index|[]
name|VALUES
init|=
name|values
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|EntityType
name|valueOf
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|desc
parameter_list|)
block|{
if|if
condition|(
name|desc
operator|.
name|getType
argument_list|()
operator|!=
name|getDescriptor
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|IllegalArgumentException
argument_list|(
literal|"EnumValueDescriptor is not for this type."
argument_list|)
throw|;
block|}
return|return
name|VALUES
index|[
name|desc
operator|.
name|getIndex
argument_list|()
index|]
return|;
block|}
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|private
name|EntityType
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(enum_scope:Entity.EntityType)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|UNIQUE_ID_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|long
name|uniqueId_
decl_stmt|;
comment|/**      *<code>optional int64 unique_id = 1;</code>      * @return Whether the uniqueId field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasUniqueId
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional int64 unique_id = 1;</code>      * @return The uniqueId.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getUniqueId
parameter_list|()
block|{
return|return
name|uniqueId_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|int
name|type_
decl_stmt|;
comment|/**      *<code>optional .Entity.EntityType type = 2;</code>      * @return Whether the type field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional .Entity.EntityType type = 2;</code>      * @return The type.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|EntityType
name|getType
parameter_list|()
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|EntityType
name|result
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|EntityType
operator|.
name|valueOf
argument_list|(
name|type_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|EntityType
operator|.
name|CLAZZ
else|:
name|result
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|EXTERNAL_ID_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|externalId_
decl_stmt|;
comment|/**      *<code>optional string external_id = 3;</code>      * @return Whether the externalId field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasExternalId
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional string external_id = 3;</code>      * @return The externalId.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getExternalId
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|externalId_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|externalId_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string external_id = 3;</code>      * @return The bytes for externalId.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getExternalIdBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|externalId_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|externalId_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|NAME_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
decl_stmt|;
comment|/**      *<code>optional string name = 4;</code>      * @return Whether the name field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional string name = 4;</code>      * @return The name.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string name = 4;</code>      * @return The bytes for name.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|PARAMETER_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|>
name|parameter_
decl_stmt|;
comment|/**      *<code>repeated .Property parameter = 5;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|>
name|getParameterList
parameter_list|()
block|{
return|return
name|parameter_
return|;
block|}
comment|/**      *<code>repeated .Property parameter = 5;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
argument_list|>
name|getParameterOrBuilderList
parameter_list|()
block|{
return|return
name|parameter_
return|;
block|}
comment|/**      *<code>repeated .Property parameter = 5;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getParameterCount
parameter_list|()
block|{
return|return
name|parameter_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Property parameter = 5;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|getParameter
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|parameter_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Property parameter = 5;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
name|getParameterOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|parameter_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getParameterCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getParameter
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|1
argument_list|,
name|uniqueId_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|2
argument_list|,
name|type_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|3
argument_list|,
name|externalId_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|4
argument_list|,
name|name_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|parameter_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|5
argument_list|,
name|parameter_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|1
argument_list|,
name|uniqueId_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|2
argument_list|,
name|type_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|3
argument_list|,
name|externalId_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|4
argument_list|,
name|name_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|parameter_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|5
argument_list|,
name|parameter_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|other
init|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|)
name|obj
decl_stmt|;
if|if
condition|(
name|hasUniqueId
argument_list|()
operator|!=
name|other
operator|.
name|hasUniqueId
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasUniqueId
argument_list|()
condition|)
block|{
if|if
condition|(
name|getUniqueId
argument_list|()
operator|!=
name|other
operator|.
name|getUniqueId
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasType
argument_list|()
operator|!=
name|other
operator|.
name|hasType
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasType
argument_list|()
condition|)
block|{
if|if
condition|(
name|type_
operator|!=
name|other
operator|.
name|type_
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasExternalId
argument_list|()
operator|!=
name|other
operator|.
name|hasExternalId
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasExternalId
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getExternalId
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getExternalId
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasName
argument_list|()
operator|!=
name|other
operator|.
name|hasName
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasName
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getParameterList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getParameterList
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasUniqueId
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|UNIQUE_ID_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashLong
argument_list|(
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasType
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|TYPE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|type_
expr_stmt|;
block|}
if|if
condition|(
name|hasExternalId
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|EXTERNAL_ID_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getExternalId
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasName
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NAME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getName
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getParameterCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|PARAMETER_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getParameterList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code Entity}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:Entity)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Entity_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Entity_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.unitime.timetable.onlinesectioning.OnlineSectioningLog.Entity.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getParameterFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|uniqueId_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|type_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|externalId_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|name_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
name|parameter_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Entity_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|build
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|result
init|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|uniqueId_
operator|=
name|uniqueId_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|type_
operator|=
name|type_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|externalId_
operator|=
name|externalId_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|name_
operator|=
name|name_
expr_stmt|;
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|parameter_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|parameter_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|parameter_
operator|=
name|parameter_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|parameter_
operator|=
name|parameterBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasUniqueId
argument_list|()
condition|)
block|{
name|setUniqueId
argument_list|(
name|other
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasType
argument_list|()
condition|)
block|{
name|setType
argument_list|(
name|other
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasExternalId
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|externalId_
operator|=
name|other
operator|.
name|externalId_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|name_
operator|=
name|other
operator|.
name|name_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|parameter_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|parameter_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|parameter_
operator|=
name|other
operator|.
name|parameter_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureParameterIsMutable
argument_list|()
expr_stmt|;
name|parameter_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|parameter_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|parameter_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|parameterBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|parameterBuilder_
operator|=
literal|null
expr_stmt|;
name|parameter_
operator|=
name|other
operator|.
name|parameter_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|parameterBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getParameterFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|parameter_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getParameterCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getParameter
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|long
name|uniqueId_
decl_stmt|;
comment|/**        *<code>optional int64 unique_id = 1;</code>        * @return Whether the uniqueId field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasUniqueId
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional int64 unique_id = 1;</code>        * @return The uniqueId.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getUniqueId
parameter_list|()
block|{
return|return
name|uniqueId_
return|;
block|}
comment|/**        *<code>optional int64 unique_id = 1;</code>        * @param value The uniqueId to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setUniqueId
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|uniqueId_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 unique_id = 1;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearUniqueId
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|uniqueId_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|type_
init|=
literal|0
decl_stmt|;
comment|/**        *<code>optional .Entity.EntityType type = 2;</code>        * @return Whether the type field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional .Entity.EntityType type = 2;</code>        * @return The type.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|EntityType
name|getType
parameter_list|()
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|EntityType
name|result
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|EntityType
operator|.
name|valueOf
argument_list|(
name|type_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|EntityType
operator|.
name|CLAZZ
else|:
name|result
return|;
block|}
comment|/**        *<code>optional .Entity.EntityType type = 2;</code>        * @param value The type to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setType
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|EntityType
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|type_
operator|=
name|value
operator|.
name|getNumber
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity.EntityType type = 2;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearType
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|type_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|externalId_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string external_id = 3;</code>        * @return Whether the externalId field is set.        */
specifier|public
name|boolean
name|hasExternalId
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional string external_id = 3;</code>        * @return The externalId.        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getExternalId
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|externalId_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|externalId_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string external_id = 3;</code>        * @return The bytes for externalId.        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getExternalIdBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|externalId_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|externalId_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string external_id = 3;</code>        * @param value The externalId to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setExternalId
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|externalId_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string external_id = 3;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearExternalId
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|externalId_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getExternalId
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string external_id = 3;</code>        * @param value The bytes for externalId to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setExternalIdBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|externalId_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string name = 4;</code>        * @return Whether the name field is set.        */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional string name = 4;</code>        * @return The name.        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string name = 4;</code>        * @return The bytes for name.        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string name = 4;</code>        * @param value The name to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string name = 4;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|name_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string name = 4;</code>        * @param value The bytes for name to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setNameBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|>
name|parameter_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureParameterIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|parameter_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|>
argument_list|(
name|parameter_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
argument_list|>
name|parameterBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Property parameter = 5;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|>
name|getParameterList
parameter_list|()
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|parameter_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|parameterBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Property parameter = 5;</code>        */
specifier|public
name|int
name|getParameterCount
parameter_list|()
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|parameter_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|parameterBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Property parameter = 5;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|getParameter
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|parameter_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|parameterBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Property parameter = 5;</code>        */
specifier|public
name|Builder
name|setParameter
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|value
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureParameterIsMutable
argument_list|()
expr_stmt|;
name|parameter_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Property parameter = 5;</code>        */
specifier|public
name|Builder
name|setParameter
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureParameterIsMutable
argument_list|()
expr_stmt|;
name|parameter_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Property parameter = 5;</code>        */
specifier|public
name|Builder
name|addParameter
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|value
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureParameterIsMutable
argument_list|()
expr_stmt|;
name|parameter_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Property parameter = 5;</code>        */
specifier|public
name|Builder
name|addParameter
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|value
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureParameterIsMutable
argument_list|()
expr_stmt|;
name|parameter_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Property parameter = 5;</code>        */
specifier|public
name|Builder
name|addParameter
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureParameterIsMutable
argument_list|()
expr_stmt|;
name|parameter_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Property parameter = 5;</code>        */
specifier|public
name|Builder
name|addParameter
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureParameterIsMutable
argument_list|()
expr_stmt|;
name|parameter_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Property parameter = 5;</code>        */
specifier|public
name|Builder
name|addAllParameter
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureParameterIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|parameter_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Property parameter = 5;</code>        */
specifier|public
name|Builder
name|clearParameter
parameter_list|()
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
name|parameter_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Property parameter = 5;</code>        */
specifier|public
name|Builder
name|removeParameter
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureParameterIsMutable
argument_list|()
expr_stmt|;
name|parameter_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Property parameter = 5;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
name|getParameterBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getParameterFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Property parameter = 5;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
name|getParameterOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|parameter_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|parameterBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Property parameter = 5;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
argument_list|>
name|getParameterOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|parameterBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|parameterBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|parameter_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Property parameter = 5;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
name|addParameterBuilder
parameter_list|()
block|{
return|return
name|getParameterFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Property parameter = 5;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
name|addParameterBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getParameterFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Property parameter = 5;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
argument_list|>
name|getParameterBuilderList
parameter_list|()
block|{
return|return
name|getParameterFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
argument_list|>
name|getParameterFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
name|parameterBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
argument_list|>
argument_list|(
name|parameter_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|parameter_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|parameterBuilder_
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:Entity)
block|}
comment|// @@protoc_insertion_point(class_scope:Entity)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Entity
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Entity
argument_list|>
argument_list|()
block|{
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Entity
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Entity
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Entity
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Entity
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|TimeOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:Time)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>required int32 days = 1;</code>      * @return Whether the days field is set.      */
name|boolean
name|hasDays
parameter_list|()
function_decl|;
comment|/**      *<code>required int32 days = 1;</code>      * @return The days.      */
name|int
name|getDays
parameter_list|()
function_decl|;
comment|/**      *<code>required int32 start = 2;</code>      * @return Whether the start field is set.      */
name|boolean
name|hasStart
parameter_list|()
function_decl|;
comment|/**      *<code>required int32 start = 2;</code>      * @return The start.      */
name|int
name|getStart
parameter_list|()
function_decl|;
comment|/**      *<code>required int32 length = 3;</code>      * @return Whether the length field is set.      */
name|boolean
name|hasLength
parameter_list|()
function_decl|;
comment|/**      *<code>required int32 length = 3;</code>      * @return The length.      */
name|int
name|getLength
parameter_list|()
function_decl|;
comment|/**      *<code>optional string pattern = 4;</code>      * @return Whether the pattern field is set.      */
name|boolean
name|hasPattern
parameter_list|()
function_decl|;
comment|/**      *<code>optional string pattern = 4;</code>      * @return The pattern.      */
name|java
operator|.
name|lang
operator|.
name|String
name|getPattern
parameter_list|()
function_decl|;
comment|/**      *<code>optional string pattern = 4;</code>      * @return The bytes for pattern.      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPatternBytes
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Section.Preference preference = 5;</code>      * @return Whether the preference field is set.      */
name|boolean
name|hasPreference
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Section.Preference preference = 5;</code>      * @return The preference.      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
name|getPreference
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code Time}    */
specifier|public
specifier|static
specifier|final
class|class
name|Time
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:Time)
name|TimeOrBuilder
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
comment|// Use Time.newBuilder() to construct.
specifier|private
name|Time
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Time
parameter_list|()
block|{
name|pattern_
operator|=
literal|""
expr_stmt|;
name|preference_
operator|=
literal|0
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unused"
block|}
argument_list|)
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|newInstance
parameter_list|(
name|UnusedPrivateParameter
name|unused
parameter_list|)
block|{
return|return
operator|new
name|Time
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Time
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
if|if
condition|(
name|extensionRegistry
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|NullPointerException
argument_list|()
throw|;
block|}
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
case|case
literal|8
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|days_
operator|=
name|input
operator|.
name|readInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|start_
operator|=
name|input
operator|.
name|readInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|length_
operator|=
name|input
operator|.
name|readInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|34
case|:
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|pattern_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|40
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
name|value
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|5
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|preference_
operator|=
name|rawValue
expr_stmt|;
block|}
break|break;
block|}
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Time_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Time_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|DAYS_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|int
name|days_
decl_stmt|;
comment|/**      *<code>required int32 days = 1;</code>      * @return Whether the days field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasDays
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>required int32 days = 1;</code>      * @return The days.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getDays
parameter_list|()
block|{
return|return
name|days_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|START_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|int
name|start_
decl_stmt|;
comment|/**      *<code>required int32 start = 2;</code>      * @return Whether the start field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasStart
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>required int32 start = 2;</code>      * @return The start.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getStart
parameter_list|()
block|{
return|return
name|start_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|LENGTH_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|int
name|length_
decl_stmt|;
comment|/**      *<code>required int32 length = 3;</code>      * @return Whether the length field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasLength
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>required int32 length = 3;</code>      * @return The length.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getLength
parameter_list|()
block|{
return|return
name|length_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|PATTERN_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|pattern_
decl_stmt|;
comment|/**      *<code>optional string pattern = 4;</code>      * @return Whether the pattern field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasPattern
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional string pattern = 4;</code>      * @return The pattern.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getPattern
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|pattern_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|pattern_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string pattern = 4;</code>      * @return The bytes for pattern.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPatternBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|pattern_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|pattern_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|PREFERENCE_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|int
name|preference_
decl_stmt|;
comment|/**      *<code>optional .Section.Preference preference = 5;</code>      * @return Whether the preference field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasPreference
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional .Section.Preference preference = 5;</code>      * @return The preference.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
name|getPreference
parameter_list|()
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
name|result
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
operator|.
name|valueOf
argument_list|(
name|preference_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
operator|.
name|REQUIRED
else|:
name|result
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|hasDays
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasStart
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasLength
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|1
argument_list|,
name|days_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|2
argument_list|,
name|start_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|3
argument_list|,
name|length_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|4
argument_list|,
name|pattern_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|5
argument_list|,
name|preference_
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32Size
argument_list|(
literal|1
argument_list|,
name|days_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32Size
argument_list|(
literal|2
argument_list|,
name|start_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32Size
argument_list|(
literal|3
argument_list|,
name|length_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|4
argument_list|,
name|pattern_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|5
argument_list|,
name|preference_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|other
init|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|)
name|obj
decl_stmt|;
if|if
condition|(
name|hasDays
argument_list|()
operator|!=
name|other
operator|.
name|hasDays
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasDays
argument_list|()
condition|)
block|{
if|if
condition|(
name|getDays
argument_list|()
operator|!=
name|other
operator|.
name|getDays
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasStart
argument_list|()
operator|!=
name|other
operator|.
name|hasStart
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasStart
argument_list|()
condition|)
block|{
if|if
condition|(
name|getStart
argument_list|()
operator|!=
name|other
operator|.
name|getStart
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasLength
argument_list|()
operator|!=
name|other
operator|.
name|hasLength
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasLength
argument_list|()
condition|)
block|{
if|if
condition|(
name|getLength
argument_list|()
operator|!=
name|other
operator|.
name|getLength
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasPattern
argument_list|()
operator|!=
name|other
operator|.
name|hasPattern
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasPattern
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getPattern
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getPattern
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasPreference
argument_list|()
operator|!=
name|other
operator|.
name|hasPreference
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasPreference
argument_list|()
condition|)
block|{
if|if
condition|(
name|preference_
operator|!=
name|other
operator|.
name|preference_
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasDays
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|DAYS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getDays
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasStart
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|START_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getStart
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasLength
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|LENGTH_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getLength
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasPattern
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|PATTERN_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getPattern
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasPreference
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|PREFERENCE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|preference_
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code Time}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:Time)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|TimeOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Time_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Time_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.unitime.timetable.onlinesectioning.OnlineSectioningLog.Time.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
block|}
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|days_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|start_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|length_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|pattern_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|preference_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Time_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|build
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|result
init|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|days_
operator|=
name|days_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|start_
operator|=
name|start_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|length_
operator|=
name|length_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|pattern_
operator|=
name|pattern_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|result
operator|.
name|preference_
operator|=
name|preference_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasDays
argument_list|()
condition|)
block|{
name|setDays
argument_list|(
name|other
operator|.
name|getDays
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasStart
argument_list|()
condition|)
block|{
name|setStart
argument_list|(
name|other
operator|.
name|getStart
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasLength
argument_list|()
condition|)
block|{
name|setLength
argument_list|(
name|other
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasPattern
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|pattern_
operator|=
name|other
operator|.
name|pattern_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasPreference
argument_list|()
condition|)
block|{
name|setPreference
argument_list|(
name|other
operator|.
name|getPreference
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasDays
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasStart
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasLength
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|int
name|days_
decl_stmt|;
comment|/**        *<code>required int32 days = 1;</code>        * @return Whether the days field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasDays
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>required int32 days = 1;</code>        * @return The days.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getDays
parameter_list|()
block|{
return|return
name|days_
return|;
block|}
comment|/**        *<code>required int32 days = 1;</code>        * @param value The days to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setDays
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|days_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required int32 days = 1;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearDays
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|days_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|start_
decl_stmt|;
comment|/**        *<code>required int32 start = 2;</code>        * @return Whether the start field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasStart
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>required int32 start = 2;</code>        * @return The start.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getStart
parameter_list|()
block|{
return|return
name|start_
return|;
block|}
comment|/**        *<code>required int32 start = 2;</code>        * @param value The start to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setStart
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|start_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required int32 start = 2;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearStart
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|start_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|length_
decl_stmt|;
comment|/**        *<code>required int32 length = 3;</code>        * @return Whether the length field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasLength
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>required int32 length = 3;</code>        * @return The length.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getLength
parameter_list|()
block|{
return|return
name|length_
return|;
block|}
comment|/**        *<code>required int32 length = 3;</code>        * @param value The length to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setLength
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|length_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required int32 length = 3;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearLength
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|length_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|pattern_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string pattern = 4;</code>        * @return Whether the pattern field is set.        */
specifier|public
name|boolean
name|hasPattern
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional string pattern = 4;</code>        * @return The pattern.        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getPattern
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|pattern_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|pattern_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string pattern = 4;</code>        * @return The bytes for pattern.        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPatternBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|pattern_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|pattern_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string pattern = 4;</code>        * @param value The pattern to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setPattern
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|pattern_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string pattern = 4;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearPattern
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|pattern_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getPattern
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string pattern = 4;</code>        * @param value The bytes for pattern to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setPatternBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|pattern_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|preference_
init|=
literal|0
decl_stmt|;
comment|/**        *<code>optional .Section.Preference preference = 5;</code>        * @return Whether the preference field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasPreference
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional .Section.Preference preference = 5;</code>        * @return The preference.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
name|getPreference
parameter_list|()
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
name|result
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
operator|.
name|valueOf
argument_list|(
name|preference_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
operator|.
name|REQUIRED
else|:
name|result
return|;
block|}
comment|/**        *<code>optional .Section.Preference preference = 5;</code>        * @param value The preference to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setPreference
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|preference_
operator|=
name|value
operator|.
name|getNumber
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Section.Preference preference = 5;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearPreference
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|preference_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:Time)
block|}
comment|// @@protoc_insertion_point(class_scope:Time)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Time
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Time
argument_list|>
argument_list|()
block|{
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Time
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Time
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Time
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Time
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|SectionOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:Section)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional .Entity clazz = 1;</code>      * @return Whether the clazz field is set.      */
name|boolean
name|hasClazz
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity clazz = 1;</code>      * @return The clazz.      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getClazz
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity clazz = 1;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getClazzOrBuilder
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Time time = 2;</code>      * @return Whether the time field is set.      */
name|boolean
name|hasTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Time time = 2;</code>      * @return The time.      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|getTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Time time = 2;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|TimeOrBuilder
name|getTimeOrBuilder
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Entity instructor = 3;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|getInstructorList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Entity instructor = 3;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getInstructor
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Entity instructor = 3;</code>      */
name|int
name|getInstructorCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Entity instructor = 3;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getInstructorOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Entity instructor = 3;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getInstructorOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Entity location = 4;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|getLocationList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Entity location = 4;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getLocation
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Entity location = 4;</code>      */
name|int
name|getLocationCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Entity location = 4;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getLocationOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Entity location = 4;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getLocationOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>optional .Section.Preference preference = 5;</code>      * @return Whether the preference field is set.      */
name|boolean
name|hasPreference
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Section.Preference preference = 5;</code>      * @return The preference.      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
name|getPreference
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity course = 6;</code>      * @return Whether the course field is set.      */
name|boolean
name|hasCourse
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity course = 6;</code>      * @return The course.      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getCourse
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity course = 6;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getCourseOrBuilder
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity reservation = 7;</code>      * @return Whether the reservation field is set.      */
name|boolean
name|hasReservation
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity reservation = 7;</code>      * @return The reservation.      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getReservation
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity reservation = 7;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getReservationOrBuilder
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 time_stamp = 8;</code>      * @return Whether the timeStamp field is set.      */
name|boolean
name|hasTimeStamp
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 time_stamp = 8;</code>      * @return The timeStamp.      */
name|long
name|getTimeStamp
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity subpart = 9;</code>      * @return Whether the subpart field is set.      */
name|boolean
name|hasSubpart
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity subpart = 9;</code>      * @return The subpart.      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getSubpart
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity subpart = 9;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getSubpartOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code Section}    */
specifier|public
specifier|static
specifier|final
class|class
name|Section
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:Section)
name|SectionOrBuilder
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
comment|// Use Section.newBuilder() to construct.
specifier|private
name|Section
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Section
parameter_list|()
block|{
name|instructor_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|location_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|preference_
operator|=
literal|0
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unused"
block|}
argument_list|)
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|newInstance
parameter_list|(
name|UnusedPrivateParameter
name|unused
parameter_list|)
block|{
return|return
operator|new
name|Section
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Section
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
if|if
condition|(
name|extensionRegistry
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|NullPointerException
argument_list|()
throw|;
block|}
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
case|case
literal|10
case|:
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|clazz_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|clazz_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|clazz_
argument_list|)
expr_stmt|;
name|clazz_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|time_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|time_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|time_
argument_list|)
expr_stmt|;
name|time_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|instructor_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|instructor_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|34
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|location_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|location_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|40
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
name|value
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|5
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|preference_
operator|=
name|rawValue
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|50
case|:
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|course_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|course_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|course_
argument_list|)
expr_stmt|;
name|course_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
break|break;
block|}
case|case
literal|58
case|:
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|reservation_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|reservation_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|reservation_
argument_list|)
expr_stmt|;
name|reservation_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
break|break;
block|}
case|case
literal|64
case|:
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|timeStamp_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|74
case|:
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|subpart_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|subpart_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|subpart_
argument_list|)
expr_stmt|;
name|subpart_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
break|break;
block|}
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|instructor_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|instructor_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|location_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|location_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Section_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Section_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * Protobuf enum {@code Section.Preference}      */
specifier|public
enum|enum
name|Preference
implements|implements
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolMessageEnum
block|{
comment|/**        *<code>REQUIRED = 0;</code>        */
name|REQUIRED
argument_list|(
literal|0
argument_list|)
block|,
comment|/**        *<code>PREFERRED = 1;</code>        */
name|PREFERRED
argument_list|(
literal|1
argument_list|)
block|,
comment|/**        *<code>SELECTED = 2;</code>        */
name|SELECTED
argument_list|(
literal|2
argument_list|)
block|,
comment|/**        *<code>ADD = 3;</code>        */
name|ADD
argument_list|(
literal|3
argument_list|)
block|,
comment|/**        *<code>DROP = 4;</code>        */
name|DROP
argument_list|(
literal|4
argument_list|)
block|,       ;
comment|/**        *<code>REQUIRED = 0;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|REQUIRED_VALUE
init|=
literal|0
decl_stmt|;
comment|/**        *<code>PREFERRED = 1;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|PREFERRED_VALUE
init|=
literal|1
decl_stmt|;
comment|/**        *<code>SELECTED = 2;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|SELECTED_VALUE
init|=
literal|2
decl_stmt|;
comment|/**        *<code>ADD = 3;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|ADD_VALUE
init|=
literal|3
decl_stmt|;
comment|/**        *<code>DROP = 4;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|DROP_VALUE
init|=
literal|4
decl_stmt|;
specifier|public
specifier|final
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|value
return|;
block|}
comment|/**        * @param value The numeric wire value of the corresponding enum entry.        * @return The enum associated with the given numeric wire value.        * @deprecated Use {@link #forNumber(int)} instead.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
name|Preference
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
return|return
name|forNumber
argument_list|(
name|value
argument_list|)
return|;
block|}
comment|/**        * @param value The numeric wire value of the corresponding enum entry.        * @return The enum associated with the given numeric wire value.        */
specifier|public
specifier|static
name|Preference
name|forNumber
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|0
case|:
return|return
name|REQUIRED
return|;
case|case
literal|1
case|:
return|return
name|PREFERRED
return|;
case|case
literal|2
case|:
return|return
name|SELECTED
return|;
case|case
literal|3
case|:
return|return
name|ADD
return|;
case|case
literal|4
case|:
return|return
name|DROP
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|Preference
argument_list|>
name|internalGetValueMap
parameter_list|()
block|{
return|return
name|internalValueMap
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|Preference
argument_list|>
name|internalValueMap
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|Preference
argument_list|>
argument_list|()
block|{
specifier|public
name|Preference
name|findValueByNumber
parameter_list|(
name|int
name|number
parameter_list|)
block|{
return|return
name|Preference
operator|.
name|forNumber
argument_list|(
name|number
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|getValueDescriptor
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|ordinal
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getEnumTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
name|Preference
index|[]
name|VALUES
init|=
name|values
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|Preference
name|valueOf
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|desc
parameter_list|)
block|{
if|if
condition|(
name|desc
operator|.
name|getType
argument_list|()
operator|!=
name|getDescriptor
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|IllegalArgumentException
argument_list|(
literal|"EnumValueDescriptor is not for this type."
argument_list|)
throw|;
block|}
return|return
name|VALUES
index|[
name|desc
operator|.
name|getIndex
argument_list|()
index|]
return|;
block|}
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|private
name|Preference
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(enum_scope:Section.Preference)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|CLAZZ_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|clazz_
decl_stmt|;
comment|/**      *<code>optional .Entity clazz = 1;</code>      * @return Whether the clazz field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasClazz
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional .Entity clazz = 1;</code>      * @return The clazz.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getClazz
parameter_list|()
block|{
return|return
name|clazz_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|clazz_
return|;
block|}
comment|/**      *<code>optional .Entity clazz = 1;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getClazzOrBuilder
parameter_list|()
block|{
return|return
name|clazz_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|clazz_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|TIME_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|time_
decl_stmt|;
comment|/**      *<code>optional .Time time = 2;</code>      * @return Whether the time field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional .Time time = 2;</code>      * @return The time.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|getTime
parameter_list|()
block|{
return|return
name|time_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|time_
return|;
block|}
comment|/**      *<code>optional .Time time = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|TimeOrBuilder
name|getTimeOrBuilder
parameter_list|()
block|{
return|return
name|time_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|time_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|INSTRUCTOR_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|instructor_
decl_stmt|;
comment|/**      *<code>repeated .Entity instructor = 3;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|getInstructorList
parameter_list|()
block|{
return|return
name|instructor_
return|;
block|}
comment|/**      *<code>repeated .Entity instructor = 3;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getInstructorOrBuilderList
parameter_list|()
block|{
return|return
name|instructor_
return|;
block|}
comment|/**      *<code>repeated .Entity instructor = 3;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getInstructorCount
parameter_list|()
block|{
return|return
name|instructor_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Entity instructor = 3;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getInstructor
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|instructor_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Entity instructor = 3;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getInstructorOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|instructor_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|LOCATION_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|location_
decl_stmt|;
comment|/**      *<code>repeated .Entity location = 4;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|getLocationList
parameter_list|()
block|{
return|return
name|location_
return|;
block|}
comment|/**      *<code>repeated .Entity location = 4;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getLocationOrBuilderList
parameter_list|()
block|{
return|return
name|location_
return|;
block|}
comment|/**      *<code>repeated .Entity location = 4;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getLocationCount
parameter_list|()
block|{
return|return
name|location_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Entity location = 4;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getLocation
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|location_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Entity location = 4;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getLocationOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|location_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|PREFERENCE_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|int
name|preference_
decl_stmt|;
comment|/**      *<code>optional .Section.Preference preference = 5;</code>      * @return Whether the preference field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasPreference
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional .Section.Preference preference = 5;</code>      * @return The preference.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
name|getPreference
parameter_list|()
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
name|result
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
operator|.
name|valueOf
argument_list|(
name|preference_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
operator|.
name|REQUIRED
else|:
name|result
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|COURSE_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|course_
decl_stmt|;
comment|/**      *<code>optional .Entity course = 6;</code>      * @return Whether the course field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasCourse
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional .Entity course = 6;</code>      * @return The course.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getCourse
parameter_list|()
block|{
return|return
name|course_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|course_
return|;
block|}
comment|/**      *<code>optional .Entity course = 6;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getCourseOrBuilder
parameter_list|()
block|{
return|return
name|course_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|course_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|RESERVATION_FIELD_NUMBER
init|=
literal|7
decl_stmt|;
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|reservation_
decl_stmt|;
comment|/**      *<code>optional .Entity reservation = 7;</code>      * @return Whether the reservation field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasReservation
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional .Entity reservation = 7;</code>      * @return The reservation.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getReservation
parameter_list|()
block|{
return|return
name|reservation_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|reservation_
return|;
block|}
comment|/**      *<code>optional .Entity reservation = 7;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getReservationOrBuilder
parameter_list|()
block|{
return|return
name|reservation_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|reservation_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|TIME_STAMP_FIELD_NUMBER
init|=
literal|8
decl_stmt|;
specifier|private
name|long
name|timeStamp_
decl_stmt|;
comment|/**      *<code>optional int64 time_stamp = 8;</code>      * @return Whether the timeStamp field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasTimeStamp
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional int64 time_stamp = 8;</code>      * @return The timeStamp.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getTimeStamp
parameter_list|()
block|{
return|return
name|timeStamp_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|SUBPART_FIELD_NUMBER
init|=
literal|9
decl_stmt|;
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|subpart_
decl_stmt|;
comment|/**      *<code>optional .Entity subpart = 9;</code>      * @return Whether the subpart field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasSubpart
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional .Entity subpart = 9;</code>      * @return The subpart.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getSubpart
parameter_list|()
block|{
return|return
name|subpart_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|subpart_
return|;
block|}
comment|/**      *<code>optional .Entity subpart = 9;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getSubpartOrBuilder
parameter_list|()
block|{
return|return
name|subpart_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|subpart_
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasClazz
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getClazz
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasTime
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getTime
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getInstructorCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getInstructor
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getLocationCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getLocation
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasCourse
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getCourse
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasReservation
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getReservation
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasSubpart
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getSubpart
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|getClazz
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|instructor_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|3
argument_list|,
name|instructor_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|location_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|4
argument_list|,
name|location_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|5
argument_list|,
name|preference_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|6
argument_list|,
name|getCourse
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|7
argument_list|,
name|getReservation
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|8
argument_list|,
name|timeStamp_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|9
argument_list|,
name|getSubpart
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|getClazz
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|instructor_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|3
argument_list|,
name|instructor_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|location_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|4
argument_list|,
name|location_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|5
argument_list|,
name|preference_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|6
argument_list|,
name|getCourse
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|7
argument_list|,
name|getReservation
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|8
argument_list|,
name|timeStamp_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|9
argument_list|,
name|getSubpart
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|other
init|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|)
name|obj
decl_stmt|;
if|if
condition|(
name|hasClazz
argument_list|()
operator|!=
name|other
operator|.
name|hasClazz
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasClazz
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getClazz
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getClazz
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasTime
argument_list|()
operator|!=
name|other
operator|.
name|hasTime
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasTime
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getTime
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getTime
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getInstructorList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getInstructorList
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|getLocationList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getLocationList
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasPreference
argument_list|()
operator|!=
name|other
operator|.
name|hasPreference
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasPreference
argument_list|()
condition|)
block|{
if|if
condition|(
name|preference_
operator|!=
name|other
operator|.
name|preference_
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasCourse
argument_list|()
operator|!=
name|other
operator|.
name|hasCourse
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasCourse
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getCourse
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getCourse
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasReservation
argument_list|()
operator|!=
name|other
operator|.
name|hasReservation
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasReservation
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getReservation
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getReservation
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasTimeStamp
argument_list|()
operator|!=
name|other
operator|.
name|hasTimeStamp
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasTimeStamp
argument_list|()
condition|)
block|{
if|if
condition|(
name|getTimeStamp
argument_list|()
operator|!=
name|other
operator|.
name|getTimeStamp
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasSubpart
argument_list|()
operator|!=
name|other
operator|.
name|hasSubpart
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasSubpart
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getSubpart
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getSubpart
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasClazz
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|CLAZZ_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getClazz
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasTime
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|TIME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getTime
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getInstructorCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|INSTRUCTOR_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getInstructorList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getLocationCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|LOCATION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getLocationList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasPreference
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|PREFERENCE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|preference_
expr_stmt|;
block|}
if|if
condition|(
name|hasCourse
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|COURSE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getCourse
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasReservation
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|RESERVATION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getReservation
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasTimeStamp
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|TIME_STAMP_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashLong
argument_list|(
name|getTimeStamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasSubpart
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|SUBPART_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getSubpart
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code Section}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:Section)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Section_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Section_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.unitime.timetable.onlinesectioning.OnlineSectioningLog.Section.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getClazzFieldBuilder
argument_list|()
expr_stmt|;
name|getTimeFieldBuilder
argument_list|()
expr_stmt|;
name|getInstructorFieldBuilder
argument_list|()
expr_stmt|;
name|getLocationFieldBuilder
argument_list|()
expr_stmt|;
name|getCourseFieldBuilder
argument_list|()
expr_stmt|;
name|getReservationFieldBuilder
argument_list|()
expr_stmt|;
name|getSubpartFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|clazzBuilder_
operator|==
literal|null
condition|)
block|{
name|clazz_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|clazzBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|timeBuilder_
operator|==
literal|null
condition|)
block|{
name|time_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|timeBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
if|if
condition|(
name|instructorBuilder_
operator|==
literal|null
condition|)
block|{
name|instructor_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
else|else
block|{
name|instructorBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
name|location_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|preference_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
name|course_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|courseBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
if|if
condition|(
name|reservationBuilder_
operator|==
literal|null
condition|)
block|{
name|reservation_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|reservationBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|timeStamp_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
if|if
condition|(
name|subpartBuilder_
operator|==
literal|null
condition|)
block|{
name|subpart_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|subpartBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Section_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|build
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|result
init|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
if|if
condition|(
name|clazzBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|clazz_
operator|=
name|clazz_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|clazz_
operator|=
name|clazzBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
if|if
condition|(
name|timeBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|time_
operator|=
name|time_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|time_
operator|=
name|timeBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
if|if
condition|(
name|instructorBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|instructor_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|instructor_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|instructor_
operator|=
name|instructor_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|instructor_
operator|=
name|instructorBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|location_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|location_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|location_
operator|=
name|location_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|location_
operator|=
name|locationBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|preference_
operator|=
name|preference_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|course_
operator|=
name|course_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|course_
operator|=
name|courseBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
if|if
condition|(
name|reservationBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|reservation_
operator|=
name|reservation_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|reservation_
operator|=
name|reservationBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000080
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|timeStamp_
operator|=
name|timeStamp_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000100
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
if|if
condition|(
name|subpartBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|subpart_
operator|=
name|subpart_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|subpart_
operator|=
name|subpartBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|to_bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasClazz
argument_list|()
condition|)
block|{
name|mergeClazz
argument_list|(
name|other
operator|.
name|getClazz
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasTime
argument_list|()
condition|)
block|{
name|mergeTime
argument_list|(
name|other
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|instructorBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|instructor_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|instructor_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|instructor_
operator|=
name|other
operator|.
name|instructor_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureInstructorIsMutable
argument_list|()
expr_stmt|;
name|instructor_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|instructor_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|instructor_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|instructorBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|instructorBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|instructorBuilder_
operator|=
literal|null
expr_stmt|;
name|instructor_
operator|=
name|other
operator|.
name|instructor_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|instructorBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getInstructorFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|instructorBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|instructor_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|location_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|location_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|location_
operator|=
name|other
operator|.
name|location_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureLocationIsMutable
argument_list|()
expr_stmt|;
name|location_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|location_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|location_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|locationBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|locationBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|locationBuilder_
operator|=
literal|null
expr_stmt|;
name|location_
operator|=
name|other
operator|.
name|location_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|locationBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getLocationFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|location_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasPreference
argument_list|()
condition|)
block|{
name|setPreference
argument_list|(
name|other
operator|.
name|getPreference
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasCourse
argument_list|()
condition|)
block|{
name|mergeCourse
argument_list|(
name|other
operator|.
name|getCourse
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasReservation
argument_list|()
condition|)
block|{
name|mergeReservation
argument_list|(
name|other
operator|.
name|getReservation
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasTimeStamp
argument_list|()
condition|)
block|{
name|setTimeStamp
argument_list|(
name|other
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasSubpart
argument_list|()
condition|)
block|{
name|mergeSubpart
argument_list|(
name|other
operator|.
name|getSubpart
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
name|hasClazz
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getClazz
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasTime
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getTime
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getInstructorCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getInstructor
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getLocationCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getLocation
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasCourse
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getCourse
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasReservation
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getReservation
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasSubpart
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getSubpart
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|clazz_
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|clazzBuilder_
decl_stmt|;
comment|/**        *<code>optional .Entity clazz = 1;</code>        * @return Whether the clazz field is set.        */
specifier|public
name|boolean
name|hasClazz
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional .Entity clazz = 1;</code>        * @return The clazz.        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getClazz
parameter_list|()
block|{
if|if
condition|(
name|clazzBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|clazz_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|clazz_
return|;
block|}
else|else
block|{
return|return
name|clazzBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .Entity clazz = 1;</code>        */
specifier|public
name|Builder
name|setClazz
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|clazzBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|clazz_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|clazzBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity clazz = 1;</code>        */
specifier|public
name|Builder
name|setClazz
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|clazzBuilder_
operator|==
literal|null
condition|)
block|{
name|clazz_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|clazzBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity clazz = 1;</code>        */
specifier|public
name|Builder
name|mergeClazz
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|clazzBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
operator|&&
name|clazz_
operator|!=
literal|null
operator|&&
name|clazz_
operator|!=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|clazz_
operator|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|newBuilder
argument_list|(
name|clazz_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|clazz_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|clazzBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity clazz = 1;</code>        */
specifier|public
name|Builder
name|clearClazz
parameter_list|()
block|{
if|if
condition|(
name|clazzBuilder_
operator|==
literal|null
condition|)
block|{
name|clazz_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|clazzBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity clazz = 1;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|getClazzBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getClazzFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .Entity clazz = 1;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getClazzOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|clazzBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|clazzBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|clazz_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|clazz_
return|;
block|}
block|}
comment|/**        *<code>optional .Entity clazz = 1;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getClazzFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|clazzBuilder_
operator|==
literal|null
condition|)
block|{
name|clazzBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
argument_list|(
name|getClazz
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|clazz_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|clazzBuilder_
return|;
block|}
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|time_
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|TimeOrBuilder
argument_list|>
name|timeBuilder_
decl_stmt|;
comment|/**        *<code>optional .Time time = 2;</code>        * @return Whether the time field is set.        */
specifier|public
name|boolean
name|hasTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional .Time time = 2;</code>        * @return The time.        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|getTime
parameter_list|()
block|{
if|if
condition|(
name|timeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|time_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|time_
return|;
block|}
else|else
block|{
return|return
name|timeBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .Time time = 2;</code>        */
specifier|public
name|Builder
name|setTime
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|value
parameter_list|)
block|{
if|if
condition|(
name|timeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|time_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|timeBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Time time = 2;</code>        */
specifier|public
name|Builder
name|setTime
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|timeBuilder_
operator|==
literal|null
condition|)
block|{
name|time_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|timeBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Time time = 2;</code>        */
specifier|public
name|Builder
name|mergeTime
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|value
parameter_list|)
block|{
if|if
condition|(
name|timeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
operator|&&
name|time_
operator|!=
literal|null
operator|&&
name|time_
operator|!=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|time_
operator|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|newBuilder
argument_list|(
name|time_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|time_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|timeBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Time time = 2;</code>        */
specifier|public
name|Builder
name|clearTime
parameter_list|()
block|{
if|if
condition|(
name|timeBuilder_
operator|==
literal|null
condition|)
block|{
name|time_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|timeBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Time time = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|Builder
name|getTimeBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getTimeFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .Time time = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|TimeOrBuilder
name|getTimeOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|timeBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|timeBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|time_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|time_
return|;
block|}
block|}
comment|/**        *<code>optional .Time time = 2;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|TimeOrBuilder
argument_list|>
name|getTimeFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|timeBuilder_
operator|==
literal|null
condition|)
block|{
name|timeBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|TimeOrBuilder
argument_list|>
argument_list|(
name|getTime
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|time_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|timeBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|instructor_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureInstructorIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|instructor_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
argument_list|(
name|instructor_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|instructorBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Entity instructor = 3;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|getInstructorList
parameter_list|()
block|{
if|if
condition|(
name|instructorBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|instructor_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|instructorBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity instructor = 3;</code>        */
specifier|public
name|int
name|getInstructorCount
parameter_list|()
block|{
if|if
condition|(
name|instructorBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|instructor_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|instructorBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity instructor = 3;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getInstructor
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|instructorBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|instructor_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|instructorBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity instructor = 3;</code>        */
specifier|public
name|Builder
name|setInstructor
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|instructorBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureInstructorIsMutable
argument_list|()
expr_stmt|;
name|instructor_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|instructorBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity instructor = 3;</code>        */
specifier|public
name|Builder
name|setInstructor
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|instructorBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureInstructorIsMutable
argument_list|()
expr_stmt|;
name|instructor_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|instructorBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity instructor = 3;</code>        */
specifier|public
name|Builder
name|addInstructor
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|instructorBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureInstructorIsMutable
argument_list|()
expr_stmt|;
name|instructor_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|instructorBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity instructor = 3;</code>        */
specifier|public
name|Builder
name|addInstructor
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|instructorBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureInstructorIsMutable
argument_list|()
expr_stmt|;
name|instructor_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|instructorBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity instructor = 3;</code>        */
specifier|public
name|Builder
name|addInstructor
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|instructorBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureInstructorIsMutable
argument_list|()
expr_stmt|;
name|instructor_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|instructorBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity instructor = 3;</code>        */
specifier|public
name|Builder
name|addInstructor
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|instructorBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureInstructorIsMutable
argument_list|()
expr_stmt|;
name|instructor_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|instructorBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity instructor = 3;</code>        */
specifier|public
name|Builder
name|addAllInstructor
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|instructorBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureInstructorIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|instructor_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|instructorBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity instructor = 3;</code>        */
specifier|public
name|Builder
name|clearInstructor
parameter_list|()
block|{
if|if
condition|(
name|instructorBuilder_
operator|==
literal|null
condition|)
block|{
name|instructor_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|instructorBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity instructor = 3;</code>        */
specifier|public
name|Builder
name|removeInstructor
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|instructorBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureInstructorIsMutable
argument_list|()
expr_stmt|;
name|instructor_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|instructorBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity instructor = 3;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|getInstructorBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getInstructorFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Entity instructor = 3;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getInstructorOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|instructorBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|instructor_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|instructorBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity instructor = 3;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getInstructorOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|instructorBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|instructorBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|instructor_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity instructor = 3;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|addInstructorBuilder
parameter_list|()
block|{
return|return
name|getInstructorFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Entity instructor = 3;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|addInstructorBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getInstructorFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Entity instructor = 3;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|>
name|getInstructorBuilderList
parameter_list|()
block|{
return|return
name|getInstructorFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getInstructorFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|instructorBuilder_
operator|==
literal|null
condition|)
block|{
name|instructorBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
argument_list|(
name|instructor_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|instructor_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|instructorBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|location_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureLocationIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|location_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
argument_list|(
name|location_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|locationBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Entity location = 4;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|getLocationList
parameter_list|()
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|location_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|locationBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity location = 4;</code>        */
specifier|public
name|int
name|getLocationCount
parameter_list|()
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|location_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|locationBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity location = 4;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getLocation
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|location_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|locationBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity location = 4;</code>        */
specifier|public
name|Builder
name|setLocation
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureLocationIsMutable
argument_list|()
expr_stmt|;
name|location_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity location = 4;</code>        */
specifier|public
name|Builder
name|setLocation
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureLocationIsMutable
argument_list|()
expr_stmt|;
name|location_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity location = 4;</code>        */
specifier|public
name|Builder
name|addLocation
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureLocationIsMutable
argument_list|()
expr_stmt|;
name|location_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity location = 4;</code>        */
specifier|public
name|Builder
name|addLocation
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureLocationIsMutable
argument_list|()
expr_stmt|;
name|location_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity location = 4;</code>        */
specifier|public
name|Builder
name|addLocation
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureLocationIsMutable
argument_list|()
expr_stmt|;
name|location_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity location = 4;</code>        */
specifier|public
name|Builder
name|addLocation
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureLocationIsMutable
argument_list|()
expr_stmt|;
name|location_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity location = 4;</code>        */
specifier|public
name|Builder
name|addAllLocation
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureLocationIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|location_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity location = 4;</code>        */
specifier|public
name|Builder
name|clearLocation
parameter_list|()
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
name|location_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity location = 4;</code>        */
specifier|public
name|Builder
name|removeLocation
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureLocationIsMutable
argument_list|()
expr_stmt|;
name|location_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity location = 4;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|getLocationBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getLocationFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Entity location = 4;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getLocationOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|location_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|locationBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity location = 4;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getLocationOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|locationBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|locationBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|location_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity location = 4;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|addLocationBuilder
parameter_list|()
block|{
return|return
name|getLocationFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Entity location = 4;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|addLocationBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getLocationFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Entity location = 4;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|>
name|getLocationBuilderList
parameter_list|()
block|{
return|return
name|getLocationFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getLocationFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
name|locationBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
argument_list|(
name|location_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|location_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|locationBuilder_
return|;
block|}
specifier|private
name|int
name|preference_
init|=
literal|0
decl_stmt|;
comment|/**        *<code>optional .Section.Preference preference = 5;</code>        * @return Whether the preference field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasPreference
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional .Section.Preference preference = 5;</code>        * @return The preference.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
name|getPreference
parameter_list|()
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
name|result
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
operator|.
name|valueOf
argument_list|(
name|preference_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
operator|.
name|REQUIRED
else|:
name|result
return|;
block|}
comment|/**        *<code>optional .Section.Preference preference = 5;</code>        * @param value The preference to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setPreference
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Preference
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|preference_
operator|=
name|value
operator|.
name|getNumber
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Section.Preference preference = 5;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearPreference
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|preference_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|course_
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|courseBuilder_
decl_stmt|;
comment|/**        *<code>optional .Entity course = 6;</code>        * @return Whether the course field is set.        */
specifier|public
name|boolean
name|hasCourse
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional .Entity course = 6;</code>        * @return The course.        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getCourse
parameter_list|()
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|course_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|course_
return|;
block|}
else|else
block|{
return|return
name|courseBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .Entity course = 6;</code>        */
specifier|public
name|Builder
name|setCourse
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|course_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|courseBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity course = 6;</code>        */
specifier|public
name|Builder
name|setCourse
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
name|course_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|courseBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity course = 6;</code>        */
specifier|public
name|Builder
name|mergeCourse
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
operator|&&
name|course_
operator|!=
literal|null
operator|&&
name|course_
operator|!=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|course_
operator|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|newBuilder
argument_list|(
name|course_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|course_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|courseBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity course = 6;</code>        */
specifier|public
name|Builder
name|clearCourse
parameter_list|()
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
name|course_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|courseBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity course = 6;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|getCourseBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getCourseFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .Entity course = 6;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getCourseOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|courseBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|courseBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|course_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|course_
return|;
block|}
block|}
comment|/**        *<code>optional .Entity course = 6;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getCourseFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
name|courseBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
argument_list|(
name|getCourse
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|course_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|courseBuilder_
return|;
block|}
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|reservation_
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|reservationBuilder_
decl_stmt|;
comment|/**        *<code>optional .Entity reservation = 7;</code>        * @return Whether the reservation field is set.        */
specifier|public
name|boolean
name|hasReservation
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional .Entity reservation = 7;</code>        * @return The reservation.        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getReservation
parameter_list|()
block|{
if|if
condition|(
name|reservationBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|reservation_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|reservation_
return|;
block|}
else|else
block|{
return|return
name|reservationBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .Entity reservation = 7;</code>        */
specifier|public
name|Builder
name|setReservation
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|reservationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|reservation_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|reservationBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity reservation = 7;</code>        */
specifier|public
name|Builder
name|setReservation
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|reservationBuilder_
operator|==
literal|null
condition|)
block|{
name|reservation_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|reservationBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity reservation = 7;</code>        */
specifier|public
name|Builder
name|mergeReservation
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|reservationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
operator|&&
name|reservation_
operator|!=
literal|null
operator|&&
name|reservation_
operator|!=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|reservation_
operator|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|newBuilder
argument_list|(
name|reservation_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|reservation_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|reservationBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity reservation = 7;</code>        */
specifier|public
name|Builder
name|clearReservation
parameter_list|()
block|{
if|if
condition|(
name|reservationBuilder_
operator|==
literal|null
condition|)
block|{
name|reservation_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|reservationBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity reservation = 7;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|getReservationBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getReservationFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .Entity reservation = 7;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getReservationOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|reservationBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|reservationBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|reservation_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|reservation_
return|;
block|}
block|}
comment|/**        *<code>optional .Entity reservation = 7;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getReservationFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|reservationBuilder_
operator|==
literal|null
condition|)
block|{
name|reservationBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
argument_list|(
name|getReservation
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|reservation_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|reservationBuilder_
return|;
block|}
specifier|private
name|long
name|timeStamp_
decl_stmt|;
comment|/**        *<code>optional int64 time_stamp = 8;</code>        * @return Whether the timeStamp field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasTimeStamp
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional int64 time_stamp = 8;</code>        * @return The timeStamp.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getTimeStamp
parameter_list|()
block|{
return|return
name|timeStamp_
return|;
block|}
comment|/**        *<code>optional int64 time_stamp = 8;</code>        * @param value The timeStamp to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setTimeStamp
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
name|timeStamp_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 time_stamp = 8;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearTimeStamp
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|timeStamp_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|subpart_
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|subpartBuilder_
decl_stmt|;
comment|/**        *<code>optional .Entity subpart = 9;</code>        * @return Whether the subpart field is set.        */
specifier|public
name|boolean
name|hasSubpart
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional .Entity subpart = 9;</code>        * @return The subpart.        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getSubpart
parameter_list|()
block|{
if|if
condition|(
name|subpartBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|subpart_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|subpart_
return|;
block|}
else|else
block|{
return|return
name|subpartBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .Entity subpart = 9;</code>        */
specifier|public
name|Builder
name|setSubpart
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|subpartBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|subpart_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|subpartBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity subpart = 9;</code>        */
specifier|public
name|Builder
name|setSubpart
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|subpartBuilder_
operator|==
literal|null
condition|)
block|{
name|subpart_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|subpartBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity subpart = 9;</code>        */
specifier|public
name|Builder
name|mergeSubpart
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|subpartBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|!=
literal|0
operator|)
operator|&&
name|subpart_
operator|!=
literal|null
operator|&&
name|subpart_
operator|!=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|subpart_
operator|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|newBuilder
argument_list|(
name|subpart_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|subpart_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|subpartBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity subpart = 9;</code>        */
specifier|public
name|Builder
name|clearSubpart
parameter_list|()
block|{
if|if
condition|(
name|subpartBuilder_
operator|==
literal|null
condition|)
block|{
name|subpart_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|subpartBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity subpart = 9;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|getSubpartBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getSubpartFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .Entity subpart = 9;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getSubpartOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|subpartBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|subpartBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|subpart_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|subpart_
return|;
block|}
block|}
comment|/**        *<code>optional .Entity subpart = 9;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getSubpartFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|subpartBuilder_
operator|==
literal|null
condition|)
block|{
name|subpartBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
argument_list|(
name|getSubpart
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|subpart_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|subpartBuilder_
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:Section)
block|}
comment|// @@protoc_insertion_point(class_scope:Section)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Section
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Section
argument_list|>
argument_list|()
block|{
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Section
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Section
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Section
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Section
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|RequestOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:Request)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional int64 id = 1;</code>      * @return Whether the id field is set.      */
name|boolean
name|hasId
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 id = 1;</code>      * @return The id.      */
name|long
name|getId
parameter_list|()
function_decl|;
comment|/**      *<code>required int32 priority = 2;</code>      * @return Whether the priority field is set.      */
name|boolean
name|hasPriority
parameter_list|()
function_decl|;
comment|/**      *<code>required int32 priority = 2;</code>      * @return The priority.      */
name|int
name|getPriority
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool alternative = 3 [default = false];</code>      * @return Whether the alternative field is set.      */
name|boolean
name|hasAlternative
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool alternative = 3 [default = false];</code>      * @return The alternative.      */
name|boolean
name|getAlternative
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Time free_time = 4;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
argument_list|>
name|getFreeTimeList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Time free_time = 4;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|getFreeTime
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Time free_time = 4;</code>      */
name|int
name|getFreeTimeCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Time free_time = 4;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|TimeOrBuilder
argument_list|>
name|getFreeTimeOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Time free_time = 4;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|TimeOrBuilder
name|getFreeTimeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Entity course = 5;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|getCourseList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Entity course = 5;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getCourse
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Entity course = 5;</code>      */
name|int
name|getCourseCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Entity course = 5;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getCourseOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Entity course = 5;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getCourseOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Section section = 6;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
name|getSectionList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Section section = 6;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|getSection
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Section section = 6;</code>      */
name|int
name|getSectionCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Section section = 6;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
argument_list|>
name|getSectionOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Section section = 6;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
name|getSectionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>optional int64 time_stamp = 8;</code>      * @return Whether the timeStamp field is set.      */
name|boolean
name|hasTimeStamp
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 time_stamp = 8;</code>      * @return The timeStamp.      */
name|long
name|getTimeStamp
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool wait_list = 9 [default = false];</code>      * @return Whether the waitList field is set.      */
name|boolean
name|hasWaitList
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool wait_list = 9 [default = false];</code>      * @return The waitList.      */
name|boolean
name|getWaitList
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool critical = 10 [default = false];</code>      * @return Whether the critical field is set.      */
name|boolean
name|hasCritical
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool critical = 10 [default = false];</code>      * @return The critical.      */
name|boolean
name|getCritical
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool no_subs = 11 [default = false];</code>      * @return Whether the noSubs field is set.      */
name|boolean
name|hasNoSubs
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool no_subs = 11 [default = false];</code>      * @return The noSubs.      */
name|boolean
name|getNoSubs
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 waitlisted_time_stamp = 12;</code>      * @return Whether the waitlistedTimeStamp field is set.      */
name|boolean
name|hasWaitlistedTimeStamp
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 waitlisted_time_stamp = 12;</code>      * @return The waitlistedTimeStamp.      */
name|long
name|getWaitlistedTimeStamp
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool important = 13 [default = false];</code>      * @return Whether the important field is set.      */
name|boolean
name|hasImportant
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool important = 13 [default = false];</code>      * @return The important.      */
name|boolean
name|getImportant
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool vital = 14 [default = false];</code>      * @return Whether the vital field is set.      */
name|boolean
name|hasVital
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool vital = 14 [default = false];</code>      * @return The vital.      */
name|boolean
name|getVital
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code Request}    */
specifier|public
specifier|static
specifier|final
class|class
name|Request
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:Request)
name|RequestOrBuilder
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
comment|// Use Request.newBuilder() to construct.
specifier|private
name|Request
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Request
parameter_list|()
block|{
name|freeTime_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|course_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|section_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unused"
block|}
argument_list|)
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|newInstance
parameter_list|(
name|UnusedPrivateParameter
name|unused
parameter_list|)
block|{
return|return
operator|new
name|Request
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Request
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
if|if
condition|(
name|extensionRegistry
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|NullPointerException
argument_list|()
throw|;
block|}
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
case|case
literal|8
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|id_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|priority_
operator|=
name|input
operator|.
name|readInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|alternative_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|34
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|freeTime_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|freeTime_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|42
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|course_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|course_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|50
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|section_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
name|section_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|64
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|timeStamp_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|72
case|:
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|waitList_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|80
case|:
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|critical_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|88
case|:
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|noSubs_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|96
case|:
block|{
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
name|waitlistedTimeStamp_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|104
case|:
block|{
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|important_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|112
case|:
block|{
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
name|vital_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|freeTime_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|freeTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|course_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|course_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|section_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|section_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Request_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Request_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|ID_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|long
name|id_
decl_stmt|;
comment|/**      *<code>optional int64 id = 1;</code>      * @return Whether the id field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasId
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional int64 id = 1;</code>      * @return The id.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getId
parameter_list|()
block|{
return|return
name|id_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|PRIORITY_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|int
name|priority_
decl_stmt|;
comment|/**      *<code>required int32 priority = 2;</code>      * @return Whether the priority field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasPriority
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>required int32 priority = 2;</code>      * @return The priority.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getPriority
parameter_list|()
block|{
return|return
name|priority_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|ALTERNATIVE_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|boolean
name|alternative_
decl_stmt|;
comment|/**      *<code>optional bool alternative = 3 [default = false];</code>      * @return Whether the alternative field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasAlternative
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional bool alternative = 3 [default = false];</code>      * @return The alternative.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|getAlternative
parameter_list|()
block|{
return|return
name|alternative_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|FREE_TIME_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
argument_list|>
name|freeTime_
decl_stmt|;
comment|/**      *<code>repeated .Time free_time = 4;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
argument_list|>
name|getFreeTimeList
parameter_list|()
block|{
return|return
name|freeTime_
return|;
block|}
comment|/**      *<code>repeated .Time free_time = 4;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|TimeOrBuilder
argument_list|>
name|getFreeTimeOrBuilderList
parameter_list|()
block|{
return|return
name|freeTime_
return|;
block|}
comment|/**      *<code>repeated .Time free_time = 4;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getFreeTimeCount
parameter_list|()
block|{
return|return
name|freeTime_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Time free_time = 4;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|getFreeTime
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|freeTime_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Time free_time = 4;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|TimeOrBuilder
name|getFreeTimeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|freeTime_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|COURSE_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|course_
decl_stmt|;
comment|/**      *<code>repeated .Entity course = 5;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|getCourseList
parameter_list|()
block|{
return|return
name|course_
return|;
block|}
comment|/**      *<code>repeated .Entity course = 5;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getCourseOrBuilderList
parameter_list|()
block|{
return|return
name|course_
return|;
block|}
comment|/**      *<code>repeated .Entity course = 5;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getCourseCount
parameter_list|()
block|{
return|return
name|course_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Entity course = 5;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getCourse
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|course_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Entity course = 5;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getCourseOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|course_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|SECTION_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
name|section_
decl_stmt|;
comment|/**      *<code>repeated .Section section = 6;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
name|getSectionList
parameter_list|()
block|{
return|return
name|section_
return|;
block|}
comment|/**      *<code>repeated .Section section = 6;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
argument_list|>
name|getSectionOrBuilderList
parameter_list|()
block|{
return|return
name|section_
return|;
block|}
comment|/**      *<code>repeated .Section section = 6;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getSectionCount
parameter_list|()
block|{
return|return
name|section_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Section section = 6;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|getSection
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|section_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Section section = 6;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
name|getSectionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|section_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|TIME_STAMP_FIELD_NUMBER
init|=
literal|8
decl_stmt|;
specifier|private
name|long
name|timeStamp_
decl_stmt|;
comment|/**      *<code>optional int64 time_stamp = 8;</code>      * @return Whether the timeStamp field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasTimeStamp
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional int64 time_stamp = 8;</code>      * @return The timeStamp.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getTimeStamp
parameter_list|()
block|{
return|return
name|timeStamp_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|WAIT_LIST_FIELD_NUMBER
init|=
literal|9
decl_stmt|;
specifier|private
name|boolean
name|waitList_
decl_stmt|;
comment|/**      *<code>optional bool wait_list = 9 [default = false];</code>      * @return Whether the waitList field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasWaitList
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional bool wait_list = 9 [default = false];</code>      * @return The waitList.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|getWaitList
parameter_list|()
block|{
return|return
name|waitList_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|CRITICAL_FIELD_NUMBER
init|=
literal|10
decl_stmt|;
specifier|private
name|boolean
name|critical_
decl_stmt|;
comment|/**      *<code>optional bool critical = 10 [default = false];</code>      * @return Whether the critical field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasCritical
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional bool critical = 10 [default = false];</code>      * @return The critical.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|getCritical
parameter_list|()
block|{
return|return
name|critical_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|NO_SUBS_FIELD_NUMBER
init|=
literal|11
decl_stmt|;
specifier|private
name|boolean
name|noSubs_
decl_stmt|;
comment|/**      *<code>optional bool no_subs = 11 [default = false];</code>      * @return Whether the noSubs field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasNoSubs
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional bool no_subs = 11 [default = false];</code>      * @return The noSubs.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|getNoSubs
parameter_list|()
block|{
return|return
name|noSubs_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|WAITLISTED_TIME_STAMP_FIELD_NUMBER
init|=
literal|12
decl_stmt|;
specifier|private
name|long
name|waitlistedTimeStamp_
decl_stmt|;
comment|/**      *<code>optional int64 waitlisted_time_stamp = 12;</code>      * @return Whether the waitlistedTimeStamp field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasWaitlistedTimeStamp
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional int64 waitlisted_time_stamp = 12;</code>      * @return The waitlistedTimeStamp.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getWaitlistedTimeStamp
parameter_list|()
block|{
return|return
name|waitlistedTimeStamp_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|IMPORTANT_FIELD_NUMBER
init|=
literal|13
decl_stmt|;
specifier|private
name|boolean
name|important_
decl_stmt|;
comment|/**      *<code>optional bool important = 13 [default = false];</code>      * @return Whether the important field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasImportant
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional bool important = 13 [default = false];</code>      * @return The important.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|getImportant
parameter_list|()
block|{
return|return
name|important_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|VITAL_FIELD_NUMBER
init|=
literal|14
decl_stmt|;
specifier|private
name|boolean
name|vital_
decl_stmt|;
comment|/**      *<code>optional bool vital = 14 [default = false];</code>      * @return Whether the vital field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasVital
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional bool vital = 14 [default = false];</code>      * @return The vital.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|getVital
parameter_list|()
block|{
return|return
name|vital_
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|hasPriority
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getFreeTimeCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getFreeTime
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getCourseCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getCourse
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getSectionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getSection
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|1
argument_list|,
name|id_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|2
argument_list|,
name|priority_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|3
argument_list|,
name|alternative_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|freeTime_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|4
argument_list|,
name|freeTime_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|course_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|5
argument_list|,
name|course_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|section_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|6
argument_list|,
name|section_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|8
argument_list|,
name|timeStamp_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|9
argument_list|,
name|waitList_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|10
argument_list|,
name|critical_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|11
argument_list|,
name|noSubs_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|12
argument_list|,
name|waitlistedTimeStamp_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|13
argument_list|,
name|important_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|14
argument_list|,
name|vital_
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|1
argument_list|,
name|id_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32Size
argument_list|(
literal|2
argument_list|,
name|priority_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|3
argument_list|,
name|alternative_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|freeTime_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|4
argument_list|,
name|freeTime_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|course_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|5
argument_list|,
name|course_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|section_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|6
argument_list|,
name|section_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|8
argument_list|,
name|timeStamp_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|9
argument_list|,
name|waitList_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|10
argument_list|,
name|critical_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|11
argument_list|,
name|noSubs_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|12
argument_list|,
name|waitlistedTimeStamp_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|13
argument_list|,
name|important_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|14
argument_list|,
name|vital_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|other
init|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|)
name|obj
decl_stmt|;
if|if
condition|(
name|hasId
argument_list|()
operator|!=
name|other
operator|.
name|hasId
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasId
argument_list|()
condition|)
block|{
if|if
condition|(
name|getId
argument_list|()
operator|!=
name|other
operator|.
name|getId
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasPriority
argument_list|()
operator|!=
name|other
operator|.
name|hasPriority
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasPriority
argument_list|()
condition|)
block|{
if|if
condition|(
name|getPriority
argument_list|()
operator|!=
name|other
operator|.
name|getPriority
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasAlternative
argument_list|()
operator|!=
name|other
operator|.
name|hasAlternative
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasAlternative
argument_list|()
condition|)
block|{
if|if
condition|(
name|getAlternative
argument_list|()
operator|!=
name|other
operator|.
name|getAlternative
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getFreeTimeList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getFreeTimeList
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|getCourseList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getCourseList
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|getSectionList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getSectionList
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasTimeStamp
argument_list|()
operator|!=
name|other
operator|.
name|hasTimeStamp
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasTimeStamp
argument_list|()
condition|)
block|{
if|if
condition|(
name|getTimeStamp
argument_list|()
operator|!=
name|other
operator|.
name|getTimeStamp
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasWaitList
argument_list|()
operator|!=
name|other
operator|.
name|hasWaitList
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasWaitList
argument_list|()
condition|)
block|{
if|if
condition|(
name|getWaitList
argument_list|()
operator|!=
name|other
operator|.
name|getWaitList
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasCritical
argument_list|()
operator|!=
name|other
operator|.
name|hasCritical
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasCritical
argument_list|()
condition|)
block|{
if|if
condition|(
name|getCritical
argument_list|()
operator|!=
name|other
operator|.
name|getCritical
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasNoSubs
argument_list|()
operator|!=
name|other
operator|.
name|hasNoSubs
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasNoSubs
argument_list|()
condition|)
block|{
if|if
condition|(
name|getNoSubs
argument_list|()
operator|!=
name|other
operator|.
name|getNoSubs
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasWaitlistedTimeStamp
argument_list|()
operator|!=
name|other
operator|.
name|hasWaitlistedTimeStamp
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasWaitlistedTimeStamp
argument_list|()
condition|)
block|{
if|if
condition|(
name|getWaitlistedTimeStamp
argument_list|()
operator|!=
name|other
operator|.
name|getWaitlistedTimeStamp
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasImportant
argument_list|()
operator|!=
name|other
operator|.
name|hasImportant
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasImportant
argument_list|()
condition|)
block|{
if|if
condition|(
name|getImportant
argument_list|()
operator|!=
name|other
operator|.
name|getImportant
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasVital
argument_list|()
operator|!=
name|other
operator|.
name|hasVital
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasVital
argument_list|()
condition|)
block|{
if|if
condition|(
name|getVital
argument_list|()
operator|!=
name|other
operator|.
name|getVital
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasId
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|ID_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashLong
argument_list|(
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasPriority
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|PRIORITY_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getPriority
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasAlternative
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|ALTERNATIVE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getAlternative
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getFreeTimeCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|FREE_TIME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getFreeTimeList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getCourseCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|COURSE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getCourseList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getSectionCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|SECTION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getSectionList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasTimeStamp
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|TIME_STAMP_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashLong
argument_list|(
name|getTimeStamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasWaitList
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|WAIT_LIST_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getWaitList
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasCritical
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|CRITICAL_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getCritical
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasNoSubs
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NO_SUBS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getNoSubs
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasWaitlistedTimeStamp
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|WAITLISTED_TIME_STAMP_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashLong
argument_list|(
name|getWaitlistedTimeStamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasImportant
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|IMPORTANT_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getImportant
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasVital
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|VITAL_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getVital
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code Request}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:Request)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Request_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Request_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.unitime.timetable.onlinesectioning.OnlineSectioningLog.Request.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getFreeTimeFieldBuilder
argument_list|()
expr_stmt|;
name|getCourseFieldBuilder
argument_list|()
expr_stmt|;
name|getSectionFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|id_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|priority_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|alternative_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
if|if
condition|(
name|freeTimeBuilder_
operator|==
literal|null
condition|)
block|{
name|freeTime_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
block|}
else|else
block|{
name|freeTimeBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
name|course_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
else|else
block|{
name|courseBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|section_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|timeStamp_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|waitList_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|critical_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|noSubs_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
name|waitlistedTimeStamp_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
name|important_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000800
operator|)
expr_stmt|;
name|vital_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00001000
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Request_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|build
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|result
init|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|id_
operator|=
name|id_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|priority_
operator|=
name|priority_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|alternative_
operator|=
name|alternative_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
if|if
condition|(
name|freeTimeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|freeTime_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|freeTime_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|freeTime_
operator|=
name|freeTime_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|freeTime_
operator|=
name|freeTimeBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|course_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|course_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|course_
operator|=
name|course_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|course_
operator|=
name|courseBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|section_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|section_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|section_
operator|=
name|section_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|section_
operator|=
name|sectionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|timeStamp_
operator|=
name|timeStamp_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000080
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|waitList_
operator|=
name|waitList_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000100
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|critical_
operator|=
name|critical_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000200
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|noSubs_
operator|=
name|noSubs_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000400
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|waitlistedTimeStamp_
operator|=
name|waitlistedTimeStamp_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000800
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|important_
operator|=
name|important_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000100
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00001000
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|vital_
operator|=
name|vital_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000200
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasId
argument_list|()
condition|)
block|{
name|setId
argument_list|(
name|other
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasPriority
argument_list|()
condition|)
block|{
name|setPriority
argument_list|(
name|other
operator|.
name|getPriority
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasAlternative
argument_list|()
condition|)
block|{
name|setAlternative
argument_list|(
name|other
operator|.
name|getAlternative
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|freeTimeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|freeTime_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|freeTime_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|freeTime_
operator|=
name|other
operator|.
name|freeTime_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureFreeTimeIsMutable
argument_list|()
expr_stmt|;
name|freeTime_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|freeTime_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|freeTime_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|freeTimeBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|freeTimeBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|freeTimeBuilder_
operator|=
literal|null
expr_stmt|;
name|freeTime_
operator|=
name|other
operator|.
name|freeTime_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|freeTimeBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getFreeTimeFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|freeTimeBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|freeTime_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|course_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|course_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|course_
operator|=
name|other
operator|.
name|course_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureCourseIsMutable
argument_list|()
expr_stmt|;
name|course_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|course_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|course_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|courseBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|courseBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|courseBuilder_
operator|=
literal|null
expr_stmt|;
name|course_
operator|=
name|other
operator|.
name|course_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|courseBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getCourseFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|courseBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|course_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|section_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|section_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|section_
operator|=
name|other
operator|.
name|section_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|section_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|section_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|sectionBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|sectionBuilder_
operator|=
literal|null
expr_stmt|;
name|section_
operator|=
name|other
operator|.
name|section_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|sectionBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getSectionFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|section_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasTimeStamp
argument_list|()
condition|)
block|{
name|setTimeStamp
argument_list|(
name|other
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasWaitList
argument_list|()
condition|)
block|{
name|setWaitList
argument_list|(
name|other
operator|.
name|getWaitList
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasCritical
argument_list|()
condition|)
block|{
name|setCritical
argument_list|(
name|other
operator|.
name|getCritical
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasNoSubs
argument_list|()
condition|)
block|{
name|setNoSubs
argument_list|(
name|other
operator|.
name|getNoSubs
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasWaitlistedTimeStamp
argument_list|()
condition|)
block|{
name|setWaitlistedTimeStamp
argument_list|(
name|other
operator|.
name|getWaitlistedTimeStamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasImportant
argument_list|()
condition|)
block|{
name|setImportant
argument_list|(
name|other
operator|.
name|getImportant
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasVital
argument_list|()
condition|)
block|{
name|setVital
argument_list|(
name|other
operator|.
name|getVital
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasPriority
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getFreeTimeCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getFreeTime
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getCourseCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getCourse
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getSectionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getSection
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|long
name|id_
decl_stmt|;
comment|/**        *<code>optional int64 id = 1;</code>        * @return Whether the id field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasId
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional int64 id = 1;</code>        * @return The id.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getId
parameter_list|()
block|{
return|return
name|id_
return|;
block|}
comment|/**        *<code>optional int64 id = 1;</code>        * @param value The id to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setId
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|id_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 id = 1;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearId
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|id_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|priority_
decl_stmt|;
comment|/**        *<code>required int32 priority = 2;</code>        * @return Whether the priority field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasPriority
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>required int32 priority = 2;</code>        * @return The priority.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getPriority
parameter_list|()
block|{
return|return
name|priority_
return|;
block|}
comment|/**        *<code>required int32 priority = 2;</code>        * @param value The priority to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setPriority
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|priority_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required int32 priority = 2;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearPriority
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|priority_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|alternative_
decl_stmt|;
comment|/**        *<code>optional bool alternative = 3 [default = false];</code>        * @return Whether the alternative field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasAlternative
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional bool alternative = 3 [default = false];</code>        * @return The alternative.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|getAlternative
parameter_list|()
block|{
return|return
name|alternative_
return|;
block|}
comment|/**        *<code>optional bool alternative = 3 [default = false];</code>        * @param value The alternative to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setAlternative
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|alternative_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool alternative = 3 [default = false];</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearAlternative
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|alternative_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
argument_list|>
name|freeTime_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureFreeTimeIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|freeTime_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
argument_list|>
argument_list|(
name|freeTime_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|TimeOrBuilder
argument_list|>
name|freeTimeBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Time free_time = 4;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
argument_list|>
name|getFreeTimeList
parameter_list|()
block|{
if|if
condition|(
name|freeTimeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|freeTime_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|freeTimeBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Time free_time = 4;</code>        */
specifier|public
name|int
name|getFreeTimeCount
parameter_list|()
block|{
if|if
condition|(
name|freeTimeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|freeTime_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|freeTimeBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Time free_time = 4;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|getFreeTime
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|freeTimeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|freeTime_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|freeTimeBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Time free_time = 4;</code>        */
specifier|public
name|Builder
name|setFreeTime
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|value
parameter_list|)
block|{
if|if
condition|(
name|freeTimeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureFreeTimeIsMutable
argument_list|()
expr_stmt|;
name|freeTime_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|freeTimeBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Time free_time = 4;</code>        */
specifier|public
name|Builder
name|setFreeTime
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|freeTimeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureFreeTimeIsMutable
argument_list|()
expr_stmt|;
name|freeTime_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|freeTimeBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Time free_time = 4;</code>        */
specifier|public
name|Builder
name|addFreeTime
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|value
parameter_list|)
block|{
if|if
condition|(
name|freeTimeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureFreeTimeIsMutable
argument_list|()
expr_stmt|;
name|freeTime_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|freeTimeBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Time free_time = 4;</code>        */
specifier|public
name|Builder
name|addFreeTime
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
name|value
parameter_list|)
block|{
if|if
condition|(
name|freeTimeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureFreeTimeIsMutable
argument_list|()
expr_stmt|;
name|freeTime_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|freeTimeBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Time free_time = 4;</code>        */
specifier|public
name|Builder
name|addFreeTime
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|freeTimeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureFreeTimeIsMutable
argument_list|()
expr_stmt|;
name|freeTime_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|freeTimeBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Time free_time = 4;</code>        */
specifier|public
name|Builder
name|addFreeTime
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|freeTimeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureFreeTimeIsMutable
argument_list|()
expr_stmt|;
name|freeTime_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|freeTimeBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Time free_time = 4;</code>        */
specifier|public
name|Builder
name|addAllFreeTime
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|freeTimeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureFreeTimeIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|freeTime_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|freeTimeBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Time free_time = 4;</code>        */
specifier|public
name|Builder
name|clearFreeTime
parameter_list|()
block|{
if|if
condition|(
name|freeTimeBuilder_
operator|==
literal|null
condition|)
block|{
name|freeTime_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|freeTimeBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Time free_time = 4;</code>        */
specifier|public
name|Builder
name|removeFreeTime
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|freeTimeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureFreeTimeIsMutable
argument_list|()
expr_stmt|;
name|freeTime_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|freeTimeBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Time free_time = 4;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|Builder
name|getFreeTimeBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getFreeTimeFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Time free_time = 4;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|TimeOrBuilder
name|getFreeTimeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|freeTimeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|freeTime_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|freeTimeBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Time free_time = 4;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|TimeOrBuilder
argument_list|>
name|getFreeTimeOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|freeTimeBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|freeTimeBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|freeTime_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Time free_time = 4;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|Builder
name|addFreeTimeBuilder
parameter_list|()
block|{
return|return
name|getFreeTimeFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Time free_time = 4;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|Builder
name|addFreeTimeBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getFreeTimeFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Time free_time = 4;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|Builder
argument_list|>
name|getFreeTimeBuilderList
parameter_list|()
block|{
return|return
name|getFreeTimeFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|TimeOrBuilder
argument_list|>
name|getFreeTimeFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|freeTimeBuilder_
operator|==
literal|null
condition|)
block|{
name|freeTimeBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Time
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|TimeOrBuilder
argument_list|>
argument_list|(
name|freeTime_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|freeTime_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|freeTimeBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|course_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureCourseIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|course_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
argument_list|(
name|course_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|courseBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Entity course = 5;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|getCourseList
parameter_list|()
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|course_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|courseBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity course = 5;</code>        */
specifier|public
name|int
name|getCourseCount
parameter_list|()
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|course_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|courseBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity course = 5;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getCourse
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|course_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|courseBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity course = 5;</code>        */
specifier|public
name|Builder
name|setCourse
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureCourseIsMutable
argument_list|()
expr_stmt|;
name|course_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|courseBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity course = 5;</code>        */
specifier|public
name|Builder
name|setCourse
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureCourseIsMutable
argument_list|()
expr_stmt|;
name|course_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|courseBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity course = 5;</code>        */
specifier|public
name|Builder
name|addCourse
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureCourseIsMutable
argument_list|()
expr_stmt|;
name|course_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|courseBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity course = 5;</code>        */
specifier|public
name|Builder
name|addCourse
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureCourseIsMutable
argument_list|()
expr_stmt|;
name|course_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|courseBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity course = 5;</code>        */
specifier|public
name|Builder
name|addCourse
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureCourseIsMutable
argument_list|()
expr_stmt|;
name|course_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|courseBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity course = 5;</code>        */
specifier|public
name|Builder
name|addCourse
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureCourseIsMutable
argument_list|()
expr_stmt|;
name|course_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|courseBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity course = 5;</code>        */
specifier|public
name|Builder
name|addAllCourse
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureCourseIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|course_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|courseBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity course = 5;</code>        */
specifier|public
name|Builder
name|clearCourse
parameter_list|()
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
name|course_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|courseBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity course = 5;</code>        */
specifier|public
name|Builder
name|removeCourse
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureCourseIsMutable
argument_list|()
expr_stmt|;
name|course_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|courseBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity course = 5;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|getCourseBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getCourseFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Entity course = 5;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getCourseOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|course_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|courseBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity course = 5;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getCourseOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|courseBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|courseBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|course_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity course = 5;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|addCourseBuilder
parameter_list|()
block|{
return|return
name|getCourseFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Entity course = 5;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|addCourseBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getCourseFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Entity course = 5;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|>
name|getCourseBuilderList
parameter_list|()
block|{
return|return
name|getCourseFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getCourseFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|courseBuilder_
operator|==
literal|null
condition|)
block|{
name|courseBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
argument_list|(
name|course_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|course_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|courseBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
name|section_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureSectionIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|section_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
argument_list|(
name|section_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
argument_list|>
name|sectionBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Section section = 6;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
name|getSectionList
parameter_list|()
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|section_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|sectionBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Section section = 6;</code>        */
specifier|public
name|int
name|getSectionCount
parameter_list|()
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|section_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|sectionBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Section section = 6;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|getSection
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|section_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|sectionBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Section section = 6;</code>        */
specifier|public
name|Builder
name|setSection
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|value
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 6;</code>        */
specifier|public
name|Builder
name|setSection
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 6;</code>        */
specifier|public
name|Builder
name|addSection
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|value
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 6;</code>        */
specifier|public
name|Builder
name|addSection
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|value
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 6;</code>        */
specifier|public
name|Builder
name|addSection
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 6;</code>        */
specifier|public
name|Builder
name|addSection
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 6;</code>        */
specifier|public
name|Builder
name|addAllSection
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|section_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 6;</code>        */
specifier|public
name|Builder
name|clearSection
parameter_list|()
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|section_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 6;</code>        */
specifier|public
name|Builder
name|removeSection
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 6;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|getSectionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getSectionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Section section = 6;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
name|getSectionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|section_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|sectionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Section section = 6;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
argument_list|>
name|getSectionOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|sectionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|sectionBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|section_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Section section = 6;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|addSectionBuilder
parameter_list|()
block|{
return|return
name|getSectionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Section section = 6;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|addSectionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getSectionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Section section = 6;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
argument_list|>
name|getSectionBuilderList
parameter_list|()
block|{
return|return
name|getSectionFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
argument_list|>
name|getSectionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|sectionBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
argument_list|>
argument_list|(
name|section_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|section_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|sectionBuilder_
return|;
block|}
specifier|private
name|long
name|timeStamp_
decl_stmt|;
comment|/**        *<code>optional int64 time_stamp = 8;</code>        * @return Whether the timeStamp field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasTimeStamp
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional int64 time_stamp = 8;</code>        * @return The timeStamp.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getTimeStamp
parameter_list|()
block|{
return|return
name|timeStamp_
return|;
block|}
comment|/**        *<code>optional int64 time_stamp = 8;</code>        * @param value The timeStamp to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setTimeStamp
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|timeStamp_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 time_stamp = 8;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearTimeStamp
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|timeStamp_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|waitList_
decl_stmt|;
comment|/**        *<code>optional bool wait_list = 9 [default = false];</code>        * @return Whether the waitList field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasWaitList
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional bool wait_list = 9 [default = false];</code>        * @return The waitList.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|getWaitList
parameter_list|()
block|{
return|return
name|waitList_
return|;
block|}
comment|/**        *<code>optional bool wait_list = 9 [default = false];</code>        * @param value The waitList to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setWaitList
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
name|waitList_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool wait_list = 9 [default = false];</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearWaitList
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|waitList_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|critical_
decl_stmt|;
comment|/**        *<code>optional bool critical = 10 [default = false];</code>        * @return Whether the critical field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasCritical
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional bool critical = 10 [default = false];</code>        * @return The critical.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|getCritical
parameter_list|()
block|{
return|return
name|critical_
return|;
block|}
comment|/**        *<code>optional bool critical = 10 [default = false];</code>        * @param value The critical to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setCritical
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|critical_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool critical = 10 [default = false];</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearCritical
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|critical_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|noSubs_
decl_stmt|;
comment|/**        *<code>optional bool no_subs = 11 [default = false];</code>        * @return Whether the noSubs field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasNoSubs
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional bool no_subs = 11 [default = false];</code>        * @return The noSubs.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|getNoSubs
parameter_list|()
block|{
return|return
name|noSubs_
return|;
block|}
comment|/**        *<code>optional bool no_subs = 11 [default = false];</code>        * @param value The noSubs to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setNoSubs
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
name|noSubs_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool no_subs = 11 [default = false];</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearNoSubs
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
name|noSubs_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|long
name|waitlistedTimeStamp_
decl_stmt|;
comment|/**        *<code>optional int64 waitlisted_time_stamp = 12;</code>        * @return Whether the waitlistedTimeStamp field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasWaitlistedTimeStamp
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional int64 waitlisted_time_stamp = 12;</code>        * @return The waitlistedTimeStamp.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getWaitlistedTimeStamp
parameter_list|()
block|{
return|return
name|waitlistedTimeStamp_
return|;
block|}
comment|/**        *<code>optional int64 waitlisted_time_stamp = 12;</code>        * @param value The waitlistedTimeStamp to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setWaitlistedTimeStamp
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|waitlistedTimeStamp_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 waitlisted_time_stamp = 12;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearWaitlistedTimeStamp
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
name|waitlistedTimeStamp_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|important_
decl_stmt|;
comment|/**        *<code>optional bool important = 13 [default = false];</code>        * @return Whether the important field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasImportant
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional bool important = 13 [default = false];</code>        * @return The important.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|getImportant
parameter_list|()
block|{
return|return
name|important_
return|;
block|}
comment|/**        *<code>optional bool important = 13 [default = false];</code>        * @param value The important to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setImportant
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
name|important_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool important = 13 [default = false];</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearImportant
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000800
operator|)
expr_stmt|;
name|important_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|vital_
decl_stmt|;
comment|/**        *<code>optional bool vital = 14 [default = false];</code>        * @return Whether the vital field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasVital
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional bool vital = 14 [default = false];</code>        * @return The vital.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|getVital
parameter_list|()
block|{
return|return
name|vital_
return|;
block|}
comment|/**        *<code>optional bool vital = 14 [default = false];</code>        * @param value The vital to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setVital
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00001000
expr_stmt|;
name|vital_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool vital = 14 [default = false];</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearVital
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00001000
operator|)
expr_stmt|;
name|vital_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:Request)
block|}
comment|// @@protoc_insertion_point(class_scope:Request)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Request
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Request
argument_list|>
argument_list|()
block|{
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Request
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Request
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Request
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Request
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|EnrollmentOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:Enrollment)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>required .Enrollment.EnrollmentType type = 1;</code>      * @return Whether the type field is set.      */
name|boolean
name|hasType
parameter_list|()
function_decl|;
comment|/**      *<code>required .Enrollment.EnrollmentType type = 1;</code>      * @return The type.      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|EnrollmentType
name|getType
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Section section = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
name|getSectionList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Section section = 2;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|getSection
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Section section = 2;</code>      */
name|int
name|getSectionCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Section section = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
argument_list|>
name|getSectionOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Section section = 2;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
name|getSectionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>optional double value = 3;</code>      * @return Whether the value field is set.      */
name|boolean
name|hasValue
parameter_list|()
function_decl|;
comment|/**      *<code>optional double value = 3;</code>      * @return The value.      */
name|double
name|getValue
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code Enrollment}    */
specifier|public
specifier|static
specifier|final
class|class
name|Enrollment
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:Enrollment)
name|EnrollmentOrBuilder
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
comment|// Use Enrollment.newBuilder() to construct.
specifier|private
name|Enrollment
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Enrollment
parameter_list|()
block|{
name|type_
operator|=
literal|0
expr_stmt|;
name|section_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unused"
block|}
argument_list|)
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|newInstance
parameter_list|(
name|UnusedPrivateParameter
name|unused
parameter_list|)
block|{
return|return
operator|new
name|Enrollment
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Enrollment
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
if|if
condition|(
name|extensionRegistry
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|NullPointerException
argument_list|()
throw|;
block|}
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
case|case
literal|8
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|EnrollmentType
name|value
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|EnrollmentType
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|1
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|type_
operator|=
name|rawValue
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|18
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|section_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|section_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|25
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|value_
operator|=
name|input
operator|.
name|readDouble
argument_list|()
expr_stmt|;
break|break;
block|}
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|section_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|section_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Enrollment_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Enrollment_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * Protobuf enum {@code Enrollment.EnrollmentType}      */
specifier|public
enum|enum
name|EnrollmentType
implements|implements
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolMessageEnum
block|{
comment|/**        *<code>REQUESTED = 0;</code>        */
name|REQUESTED
argument_list|(
literal|0
argument_list|)
block|,
comment|/**        *<code>COMPUTED = 1;</code>        */
name|COMPUTED
argument_list|(
literal|1
argument_list|)
block|,
comment|/**        *<code>PREVIOUS = 2;</code>        */
name|PREVIOUS
argument_list|(
literal|2
argument_list|)
block|,
comment|/**        *<code>STORED = 3;</code>        */
name|STORED
argument_list|(
literal|3
argument_list|)
block|,
comment|/**        *<code>APPROVED = 4;</code>        */
name|APPROVED
argument_list|(
literal|4
argument_list|)
block|,
comment|/**        *<code>REJECTED = 5;</code>        */
name|REJECTED
argument_list|(
literal|5
argument_list|)
block|,
comment|/**        *<code>EXTERNAL = 6;</code>        */
name|EXTERNAL
argument_list|(
literal|6
argument_list|)
block|,       ;
comment|/**        *<code>REQUESTED = 0;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|REQUESTED_VALUE
init|=
literal|0
decl_stmt|;
comment|/**        *<code>COMPUTED = 1;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|COMPUTED_VALUE
init|=
literal|1
decl_stmt|;
comment|/**        *<code>PREVIOUS = 2;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|PREVIOUS_VALUE
init|=
literal|2
decl_stmt|;
comment|/**        *<code>STORED = 3;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|STORED_VALUE
init|=
literal|3
decl_stmt|;
comment|/**        *<code>APPROVED = 4;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|APPROVED_VALUE
init|=
literal|4
decl_stmt|;
comment|/**        *<code>REJECTED = 5;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|REJECTED_VALUE
init|=
literal|5
decl_stmt|;
comment|/**        *<code>EXTERNAL = 6;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|EXTERNAL_VALUE
init|=
literal|6
decl_stmt|;
specifier|public
specifier|final
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|value
return|;
block|}
comment|/**        * @param value The numeric wire value of the corresponding enum entry.        * @return The enum associated with the given numeric wire value.        * @deprecated Use {@link #forNumber(int)} instead.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
name|EnrollmentType
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
return|return
name|forNumber
argument_list|(
name|value
argument_list|)
return|;
block|}
comment|/**        * @param value The numeric wire value of the corresponding enum entry.        * @return The enum associated with the given numeric wire value.        */
specifier|public
specifier|static
name|EnrollmentType
name|forNumber
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|0
case|:
return|return
name|REQUESTED
return|;
case|case
literal|1
case|:
return|return
name|COMPUTED
return|;
case|case
literal|2
case|:
return|return
name|PREVIOUS
return|;
case|case
literal|3
case|:
return|return
name|STORED
return|;
case|case
literal|4
case|:
return|return
name|APPROVED
return|;
case|case
literal|5
case|:
return|return
name|REJECTED
return|;
case|case
literal|6
case|:
return|return
name|EXTERNAL
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|EnrollmentType
argument_list|>
name|internalGetValueMap
parameter_list|()
block|{
return|return
name|internalValueMap
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|EnrollmentType
argument_list|>
name|internalValueMap
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|EnrollmentType
argument_list|>
argument_list|()
block|{
specifier|public
name|EnrollmentType
name|findValueByNumber
parameter_list|(
name|int
name|number
parameter_list|)
block|{
return|return
name|EnrollmentType
operator|.
name|forNumber
argument_list|(
name|number
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|getValueDescriptor
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|ordinal
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getEnumTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
name|EnrollmentType
index|[]
name|VALUES
init|=
name|values
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|EnrollmentType
name|valueOf
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|desc
parameter_list|)
block|{
if|if
condition|(
name|desc
operator|.
name|getType
argument_list|()
operator|!=
name|getDescriptor
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|IllegalArgumentException
argument_list|(
literal|"EnumValueDescriptor is not for this type."
argument_list|)
throw|;
block|}
return|return
name|VALUES
index|[
name|desc
operator|.
name|getIndex
argument_list|()
index|]
return|;
block|}
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|private
name|EnrollmentType
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(enum_scope:Enrollment.EnrollmentType)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|int
name|type_
decl_stmt|;
comment|/**      *<code>required .Enrollment.EnrollmentType type = 1;</code>      * @return Whether the type field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>required .Enrollment.EnrollmentType type = 1;</code>      * @return The type.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|EnrollmentType
name|getType
parameter_list|()
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|EnrollmentType
name|result
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|EnrollmentType
operator|.
name|valueOf
argument_list|(
name|type_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|EnrollmentType
operator|.
name|REQUESTED
else|:
name|result
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|SECTION_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
name|section_
decl_stmt|;
comment|/**      *<code>repeated .Section section = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
name|getSectionList
parameter_list|()
block|{
return|return
name|section_
return|;
block|}
comment|/**      *<code>repeated .Section section = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
argument_list|>
name|getSectionOrBuilderList
parameter_list|()
block|{
return|return
name|section_
return|;
block|}
comment|/**      *<code>repeated .Section section = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getSectionCount
parameter_list|()
block|{
return|return
name|section_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Section section = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|getSection
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|section_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Section section = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
name|getSectionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|section_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|VALUE_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|double
name|value_
decl_stmt|;
comment|/**      *<code>optional double value = 3;</code>      * @return Whether the value field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional double value = 3;</code>      * @return The value.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|double
name|getValue
parameter_list|()
block|{
return|return
name|value_
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|hasType
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getSectionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getSection
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|1
argument_list|,
name|type_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|section_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|section_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeDouble
argument_list|(
literal|3
argument_list|,
name|value_
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|1
argument_list|,
name|type_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|section_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|section_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeDoubleSize
argument_list|(
literal|3
argument_list|,
name|value_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|other
init|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|)
name|obj
decl_stmt|;
if|if
condition|(
name|hasType
argument_list|()
operator|!=
name|other
operator|.
name|hasType
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasType
argument_list|()
condition|)
block|{
if|if
condition|(
name|type_
operator|!=
name|other
operator|.
name|type_
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getSectionList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getSectionList
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasValue
argument_list|()
operator|!=
name|other
operator|.
name|hasValue
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasValue
argument_list|()
condition|)
block|{
if|if
condition|(
name|java
operator|.
name|lang
operator|.
name|Double
operator|.
name|doubleToLongBits
argument_list|(
name|getValue
argument_list|()
argument_list|)
operator|!=
name|java
operator|.
name|lang
operator|.
name|Double
operator|.
name|doubleToLongBits
argument_list|(
name|other
operator|.
name|getValue
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasType
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|TYPE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|type_
expr_stmt|;
block|}
if|if
condition|(
name|getSectionCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|SECTION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getSectionList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasValue
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|VALUE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashLong
argument_list|(
name|java
operator|.
name|lang
operator|.
name|Double
operator|.
name|doubleToLongBits
argument_list|(
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code Enrollment}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:Enrollment)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EnrollmentOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Enrollment_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Enrollment_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.unitime.timetable.onlinesectioning.OnlineSectioningLog.Enrollment.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getSectionFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|type_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|section_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|value_
operator|=
literal|0D
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Enrollment_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|build
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|result
init|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|type_
operator|=
name|type_
expr_stmt|;
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|section_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|section_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|section_
operator|=
name|section_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|section_
operator|=
name|sectionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|value_
operator|=
name|value_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasType
argument_list|()
condition|)
block|{
name|setType
argument_list|(
name|other
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|section_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|section_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|section_
operator|=
name|other
operator|.
name|section_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|section_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|section_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|sectionBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|sectionBuilder_
operator|=
literal|null
expr_stmt|;
name|section_
operator|=
name|other
operator|.
name|section_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|sectionBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getSectionFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|section_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasValue
argument_list|()
condition|)
block|{
name|setValue
argument_list|(
name|other
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasType
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getSectionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getSection
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|int
name|type_
init|=
literal|0
decl_stmt|;
comment|/**        *<code>required .Enrollment.EnrollmentType type = 1;</code>        * @return Whether the type field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>required .Enrollment.EnrollmentType type = 1;</code>        * @return The type.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|EnrollmentType
name|getType
parameter_list|()
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|EnrollmentType
name|result
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|EnrollmentType
operator|.
name|valueOf
argument_list|(
name|type_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|EnrollmentType
operator|.
name|REQUESTED
else|:
name|result
return|;
block|}
comment|/**        *<code>required .Enrollment.EnrollmentType type = 1;</code>        * @param value The type to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setType
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|EnrollmentType
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|type_
operator|=
name|value
operator|.
name|getNumber
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .Enrollment.EnrollmentType type = 1;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearType
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|type_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
name|section_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureSectionIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|section_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
argument_list|(
name|section_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
argument_list|>
name|sectionBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
name|getSectionList
parameter_list|()
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|section_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|sectionBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|int
name|getSectionCount
parameter_list|()
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|section_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|sectionBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|getSection
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|section_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|sectionBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|Builder
name|setSection
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|value
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|Builder
name|setSection
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|Builder
name|addSection
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|value
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|Builder
name|addSection
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|value
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|Builder
name|addSection
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|Builder
name|addSection
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|Builder
name|addAllSection
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|section_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|Builder
name|clearSection
parameter_list|()
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|section_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|Builder
name|removeSection
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|getSectionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getSectionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
name|getSectionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|section_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|sectionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
argument_list|>
name|getSectionOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|sectionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|sectionBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|section_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|addSectionBuilder
parameter_list|()
block|{
return|return
name|getSectionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|addSectionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getSectionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
argument_list|>
name|getSectionBuilderList
parameter_list|()
block|{
return|return
name|getSectionFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
argument_list|>
name|getSectionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|sectionBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
argument_list|>
argument_list|(
name|section_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|section_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|sectionBuilder_
return|;
block|}
specifier|private
name|double
name|value_
decl_stmt|;
comment|/**        *<code>optional double value = 3;</code>        * @return Whether the value field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional double value = 3;</code>        * @return The value.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|double
name|getValue
parameter_list|()
block|{
return|return
name|value_
return|;
block|}
comment|/**        *<code>optional double value = 3;</code>        * @param value The value to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setValue
parameter_list|(
name|double
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|value_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional double value = 3;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearValue
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|value_
operator|=
literal|0D
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:Enrollment)
block|}
comment|// @@protoc_insertion_point(class_scope:Enrollment)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Enrollment
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Enrollment
argument_list|>
argument_list|()
block|{
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Enrollment
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Enrollment
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Enrollment
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Enrollment
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|ActionOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:Action)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>required string operation = 1;</code>      * @return Whether the operation field is set.      */
name|boolean
name|hasOperation
parameter_list|()
function_decl|;
comment|/**      *<code>required string operation = 1;</code>      * @return The operation.      */
name|java
operator|.
name|lang
operator|.
name|String
name|getOperation
parameter_list|()
function_decl|;
comment|/**      *<code>required string operation = 1;</code>      * @return The bytes for operation.      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOperationBytes
parameter_list|()
function_decl|;
comment|/**      *<code>required .Entity session = 2;</code>      * @return Whether the session field is set.      */
name|boolean
name|hasSession
parameter_list|()
function_decl|;
comment|/**      *<code>required .Entity session = 2;</code>      * @return The session.      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getSession
parameter_list|()
function_decl|;
comment|/**      *<code>required .Entity session = 2;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getSessionOrBuilder
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity student = 3;</code>      * @return Whether the student field is set.      */
name|boolean
name|hasStudent
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity student = 3;</code>      * @return The student.      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getStudent
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity student = 3;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getStudentOrBuilder
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 start_time = 4;</code>      * @return Whether the startTime field is set.      */
name|boolean
name|hasStartTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 start_time = 4;</code>      * @return The startTime.      */
name|long
name|getStartTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 end_time = 5;</code>      * @return Whether the endTime field is set.      */
name|boolean
name|hasEndTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 end_time = 5;</code>      * @return The endTime.      */
name|long
name|getEndTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 cpu_time = 6;</code>      * @return Whether the cpuTime field is set.      */
name|boolean
name|hasCpuTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 cpu_time = 6;</code>      * @return The cpuTime.      */
name|long
name|getCpuTime
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Request request = 7;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|>
name|getRequestList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Request request = 7;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|getRequest
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Request request = 7;</code>      */
name|int
name|getRequestCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Request request = 7;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
argument_list|>
name|getRequestOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Request request = 7;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
name|getRequestOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Enrollment enrollment = 8;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
argument_list|>
name|getEnrollmentList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Enrollment enrollment = 8;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|getEnrollment
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Enrollment enrollment = 8;</code>      */
name|int
name|getEnrollmentCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Enrollment enrollment = 8;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EnrollmentOrBuilder
argument_list|>
name|getEnrollmentOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Enrollment enrollment = 8;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EnrollmentOrBuilder
name|getEnrollmentOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Entity other = 9;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|getOtherList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Entity other = 9;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getOther
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Entity other = 9;</code>      */
name|int
name|getOtherCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Entity other = 9;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getOtherOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Entity other = 9;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getOtherOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Message message = 10;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|>
name|getMessageList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Message message = 10;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|getMessage
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Message message = 10;</code>      */
name|int
name|getMessageCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Message message = 10;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
argument_list|>
name|getMessageOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Message message = 10;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
name|getMessageOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>optional .Action.ResultType result = 11;</code>      * @return Whether the result field is set.      */
name|boolean
name|hasResult
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Action.ResultType result = 11;</code>      * @return The result.      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|ResultType
name|getResult
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity user = 12;</code>      * @return Whether the user field is set.      */
name|boolean
name|hasUser
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity user = 12;</code>      * @return The user.      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getUser
parameter_list|()
function_decl|;
comment|/**      *<code>optional .Entity user = 12;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getUserOrBuilder
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Property option = 13;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|>
name|getOptionList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Property option = 13;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|getOption
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Property option = 13;</code>      */
name|int
name|getOptionCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Property option = 13;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
argument_list|>
name|getOptionOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Property option = 13;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
name|getOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>optional int64 api_get_time = 14;</code>      * @return Whether the apiGetTime field is set.      */
name|boolean
name|hasApiGetTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 api_get_time = 14;</code>      * @return The apiGetTime.      */
name|long
name|getApiGetTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 api_post_time = 15;</code>      * @return Whether the apiPostTime field is set.      */
name|boolean
name|hasApiPostTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 api_post_time = 15;</code>      * @return The apiPostTime.      */
name|long
name|getApiPostTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional string api_exception = 16;</code>      * @return Whether the apiException field is set.      */
name|boolean
name|hasApiException
parameter_list|()
function_decl|;
comment|/**      *<code>optional string api_exception = 16;</code>      * @return The apiException.      */
name|java
operator|.
name|lang
operator|.
name|String
name|getApiException
parameter_list|()
function_decl|;
comment|/**      *<code>optional string api_exception = 16;</code>      * @return The bytes for apiException.      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getApiExceptionBytes
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Request recommendation = 17;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|>
name|getRecommendationList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Request recommendation = 17;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|getRecommendation
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Request recommendation = 17;</code>      */
name|int
name|getRecommendationCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Request recommendation = 17;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
argument_list|>
name|getRecommendationOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Request recommendation = 17;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
name|getRecommendationOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code Action}    */
specifier|public
specifier|static
specifier|final
class|class
name|Action
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:Action)
name|ActionOrBuilder
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
comment|// Use Action.newBuilder() to construct.
specifier|private
name|Action
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Action
parameter_list|()
block|{
name|operation_
operator|=
literal|""
expr_stmt|;
name|request_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|enrollment_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|other_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|message_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|result_
operator|=
literal|0
expr_stmt|;
name|option_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|apiException_
operator|=
literal|""
expr_stmt|;
name|recommendation_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unused"
block|}
argument_list|)
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|newInstance
parameter_list|(
name|UnusedPrivateParameter
name|unused
parameter_list|)
block|{
return|return
operator|new
name|Action
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Action
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
if|if
condition|(
name|extensionRegistry
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|NullPointerException
argument_list|()
throw|;
block|}
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
case|case
literal|10
case|:
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|operation_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|session_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|session_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|session_
argument_list|)
expr_stmt|;
name|session_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|student_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|student_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|student_
argument_list|)
expr_stmt|;
name|student_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
break|break;
block|}
case|case
literal|32
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|startTime_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|40
case|:
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|endTime_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|48
case|:
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|cpuTime_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|58
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|request_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
name|request_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|66
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000080
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|enrollment_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
name|enrollment_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|74
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000100
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|other_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000100
expr_stmt|;
block|}
name|other_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|82
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000200
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|message_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000200
expr_stmt|;
block|}
name|message_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|88
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|ResultType
name|value
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|ResultType
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|11
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|result_
operator|=
name|rawValue
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|98
case|:
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|user_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|user_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|user_
argument_list|)
expr_stmt|;
name|user_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
break|break;
block|}
case|case
literal|106
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00001000
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|option_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00001000
expr_stmt|;
block|}
name|option_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|112
case|:
block|{
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|apiGetTime_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|120
case|:
block|{
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
name|apiPostTime_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|130
case|:
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|apiException_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|138
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00010000
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|recommendation_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00010000
expr_stmt|;
block|}
name|recommendation_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|request_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|request_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000080
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|enrollment_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|enrollment_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000100
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|other_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|other_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000200
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|message_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|message_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00001000
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|option_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|option_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00010000
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|recommendation_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|recommendation_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Action_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Action_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * Protobuf enum {@code Action.ResultType}      */
specifier|public
enum|enum
name|ResultType
implements|implements
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolMessageEnum
block|{
comment|/**        *<code>SUCCESS = 0;</code>        */
name|SUCCESS
argument_list|(
literal|0
argument_list|)
block|,
comment|/**        *<code>FAILURE = 1;</code>        */
name|FAILURE
argument_list|(
literal|1
argument_list|)
block|,
comment|/**        *<code>TRUE = 2;</code>        */
name|TRUE
argument_list|(
literal|2
argument_list|)
block|,
comment|/**        *<code>FALSE = 3;</code>        */
name|FALSE
argument_list|(
literal|3
argument_list|)
block|,
comment|/**        *<code>NULL = 4;</code>        */
name|NULL
argument_list|(
literal|4
argument_list|)
block|,       ;
comment|/**        *<code>SUCCESS = 0;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|SUCCESS_VALUE
init|=
literal|0
decl_stmt|;
comment|/**        *<code>FAILURE = 1;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|FAILURE_VALUE
init|=
literal|1
decl_stmt|;
comment|/**        *<code>TRUE = 2;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TRUE_VALUE
init|=
literal|2
decl_stmt|;
comment|/**        *<code>FALSE = 3;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|FALSE_VALUE
init|=
literal|3
decl_stmt|;
comment|/**        *<code>NULL = 4;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|NULL_VALUE
init|=
literal|4
decl_stmt|;
specifier|public
specifier|final
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|value
return|;
block|}
comment|/**        * @param value The numeric wire value of the corresponding enum entry.        * @return The enum associated with the given numeric wire value.        * @deprecated Use {@link #forNumber(int)} instead.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
name|ResultType
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
return|return
name|forNumber
argument_list|(
name|value
argument_list|)
return|;
block|}
comment|/**        * @param value The numeric wire value of the corresponding enum entry.        * @return The enum associated with the given numeric wire value.        */
specifier|public
specifier|static
name|ResultType
name|forNumber
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|0
case|:
return|return
name|SUCCESS
return|;
case|case
literal|1
case|:
return|return
name|FAILURE
return|;
case|case
literal|2
case|:
return|return
name|TRUE
return|;
case|case
literal|3
case|:
return|return
name|FALSE
return|;
case|case
literal|4
case|:
return|return
name|NULL
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|ResultType
argument_list|>
name|internalGetValueMap
parameter_list|()
block|{
return|return
name|internalValueMap
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|ResultType
argument_list|>
name|internalValueMap
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|ResultType
argument_list|>
argument_list|()
block|{
specifier|public
name|ResultType
name|findValueByNumber
parameter_list|(
name|int
name|number
parameter_list|)
block|{
return|return
name|ResultType
operator|.
name|forNumber
argument_list|(
name|number
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|getValueDescriptor
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|ordinal
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getEnumTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
name|ResultType
index|[]
name|VALUES
init|=
name|values
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|ResultType
name|valueOf
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|desc
parameter_list|)
block|{
if|if
condition|(
name|desc
operator|.
name|getType
argument_list|()
operator|!=
name|getDescriptor
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|IllegalArgumentException
argument_list|(
literal|"EnumValueDescriptor is not for this type."
argument_list|)
throw|;
block|}
return|return
name|VALUES
index|[
name|desc
operator|.
name|getIndex
argument_list|()
index|]
return|;
block|}
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|private
name|ResultType
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(enum_scope:Action.ResultType)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|OPERATION_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|operation_
decl_stmt|;
comment|/**      *<code>required string operation = 1;</code>      * @return Whether the operation field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasOperation
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>required string operation = 1;</code>      * @return The operation.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getOperation
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|operation_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|operation_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string operation = 1;</code>      * @return The bytes for operation.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOperationBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|operation_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|operation_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|SESSION_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|session_
decl_stmt|;
comment|/**      *<code>required .Entity session = 2;</code>      * @return Whether the session field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasSession
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>required .Entity session = 2;</code>      * @return The session.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getSession
parameter_list|()
block|{
return|return
name|session_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|session_
return|;
block|}
comment|/**      *<code>required .Entity session = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getSessionOrBuilder
parameter_list|()
block|{
return|return
name|session_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|session_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|STUDENT_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|student_
decl_stmt|;
comment|/**      *<code>optional .Entity student = 3;</code>      * @return Whether the student field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasStudent
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional .Entity student = 3;</code>      * @return The student.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getStudent
parameter_list|()
block|{
return|return
name|student_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|student_
return|;
block|}
comment|/**      *<code>optional .Entity student = 3;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getStudentOrBuilder
parameter_list|()
block|{
return|return
name|student_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|student_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|START_TIME_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|long
name|startTime_
decl_stmt|;
comment|/**      *<code>optional int64 start_time = 4;</code>      * @return Whether the startTime field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasStartTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional int64 start_time = 4;</code>      * @return The startTime.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getStartTime
parameter_list|()
block|{
return|return
name|startTime_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|END_TIME_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|long
name|endTime_
decl_stmt|;
comment|/**      *<code>optional int64 end_time = 5;</code>      * @return Whether the endTime field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasEndTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional int64 end_time = 5;</code>      * @return The endTime.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getEndTime
parameter_list|()
block|{
return|return
name|endTime_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|CPU_TIME_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|long
name|cpuTime_
decl_stmt|;
comment|/**      *<code>optional int64 cpu_time = 6;</code>      * @return Whether the cpuTime field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasCpuTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional int64 cpu_time = 6;</code>      * @return The cpuTime.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getCpuTime
parameter_list|()
block|{
return|return
name|cpuTime_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|REQUEST_FIELD_NUMBER
init|=
literal|7
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|>
name|request_
decl_stmt|;
comment|/**      *<code>repeated .Request request = 7;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|>
name|getRequestList
parameter_list|()
block|{
return|return
name|request_
return|;
block|}
comment|/**      *<code>repeated .Request request = 7;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
argument_list|>
name|getRequestOrBuilderList
parameter_list|()
block|{
return|return
name|request_
return|;
block|}
comment|/**      *<code>repeated .Request request = 7;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getRequestCount
parameter_list|()
block|{
return|return
name|request_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Request request = 7;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|getRequest
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|request_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Request request = 7;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
name|getRequestOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|request_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|ENROLLMENT_FIELD_NUMBER
init|=
literal|8
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
argument_list|>
name|enrollment_
decl_stmt|;
comment|/**      *<code>repeated .Enrollment enrollment = 8;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
argument_list|>
name|getEnrollmentList
parameter_list|()
block|{
return|return
name|enrollment_
return|;
block|}
comment|/**      *<code>repeated .Enrollment enrollment = 8;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EnrollmentOrBuilder
argument_list|>
name|getEnrollmentOrBuilderList
parameter_list|()
block|{
return|return
name|enrollment_
return|;
block|}
comment|/**      *<code>repeated .Enrollment enrollment = 8;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getEnrollmentCount
parameter_list|()
block|{
return|return
name|enrollment_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Enrollment enrollment = 8;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|getEnrollment
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|enrollment_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Enrollment enrollment = 8;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EnrollmentOrBuilder
name|getEnrollmentOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|enrollment_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|OTHER_FIELD_NUMBER
init|=
literal|9
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|other_
decl_stmt|;
comment|/**      *<code>repeated .Entity other = 9;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|getOtherList
parameter_list|()
block|{
return|return
name|other_
return|;
block|}
comment|/**      *<code>repeated .Entity other = 9;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getOtherOrBuilderList
parameter_list|()
block|{
return|return
name|other_
return|;
block|}
comment|/**      *<code>repeated .Entity other = 9;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getOtherCount
parameter_list|()
block|{
return|return
name|other_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Entity other = 9;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getOther
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|other_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Entity other = 9;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getOtherOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|other_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|MESSAGE_FIELD_NUMBER
init|=
literal|10
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|>
name|message_
decl_stmt|;
comment|/**      *<code>repeated .Message message = 10;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|>
name|getMessageList
parameter_list|()
block|{
return|return
name|message_
return|;
block|}
comment|/**      *<code>repeated .Message message = 10;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
argument_list|>
name|getMessageOrBuilderList
parameter_list|()
block|{
return|return
name|message_
return|;
block|}
comment|/**      *<code>repeated .Message message = 10;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getMessageCount
parameter_list|()
block|{
return|return
name|message_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Message message = 10;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|getMessage
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|message_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Message message = 10;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
name|getMessageOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|message_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|RESULT_FIELD_NUMBER
init|=
literal|11
decl_stmt|;
specifier|private
name|int
name|result_
decl_stmt|;
comment|/**      *<code>optional .Action.ResultType result = 11;</code>      * @return Whether the result field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasResult
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional .Action.ResultType result = 11;</code>      * @return The result.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|ResultType
name|getResult
parameter_list|()
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|ResultType
name|result
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|ResultType
operator|.
name|valueOf
argument_list|(
name|result_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|ResultType
operator|.
name|SUCCESS
else|:
name|result
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|USER_FIELD_NUMBER
init|=
literal|12
decl_stmt|;
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|user_
decl_stmt|;
comment|/**      *<code>optional .Entity user = 12;</code>      * @return Whether the user field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasUser
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional .Entity user = 12;</code>      * @return The user.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getUser
parameter_list|()
block|{
return|return
name|user_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|user_
return|;
block|}
comment|/**      *<code>optional .Entity user = 12;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getUserOrBuilder
parameter_list|()
block|{
return|return
name|user_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|user_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|OPTION_FIELD_NUMBER
init|=
literal|13
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|>
name|option_
decl_stmt|;
comment|/**      *<code>repeated .Property option = 13;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|>
name|getOptionList
parameter_list|()
block|{
return|return
name|option_
return|;
block|}
comment|/**      *<code>repeated .Property option = 13;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
argument_list|>
name|getOptionOrBuilderList
parameter_list|()
block|{
return|return
name|option_
return|;
block|}
comment|/**      *<code>repeated .Property option = 13;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getOptionCount
parameter_list|()
block|{
return|return
name|option_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Property option = 13;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|getOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|option_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Property option = 13;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
name|getOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|option_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|API_GET_TIME_FIELD_NUMBER
init|=
literal|14
decl_stmt|;
specifier|private
name|long
name|apiGetTime_
decl_stmt|;
comment|/**      *<code>optional int64 api_get_time = 14;</code>      * @return Whether the apiGetTime field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasApiGetTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional int64 api_get_time = 14;</code>      * @return The apiGetTime.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getApiGetTime
parameter_list|()
block|{
return|return
name|apiGetTime_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|API_POST_TIME_FIELD_NUMBER
init|=
literal|15
decl_stmt|;
specifier|private
name|long
name|apiPostTime_
decl_stmt|;
comment|/**      *<code>optional int64 api_post_time = 15;</code>      * @return Whether the apiPostTime field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasApiPostTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional int64 api_post_time = 15;</code>      * @return The apiPostTime.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getApiPostTime
parameter_list|()
block|{
return|return
name|apiPostTime_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|API_EXCEPTION_FIELD_NUMBER
init|=
literal|16
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|apiException_
decl_stmt|;
comment|/**      *<code>optional string api_exception = 16;</code>      * @return Whether the apiException field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasApiException
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional string api_exception = 16;</code>      * @return The apiException.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getApiException
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|apiException_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|apiException_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string api_exception = 16;</code>      * @return The bytes for apiException.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getApiExceptionBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|apiException_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|apiException_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|RECOMMENDATION_FIELD_NUMBER
init|=
literal|17
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|>
name|recommendation_
decl_stmt|;
comment|/**      *<code>repeated .Request recommendation = 17;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|>
name|getRecommendationList
parameter_list|()
block|{
return|return
name|recommendation_
return|;
block|}
comment|/**      *<code>repeated .Request recommendation = 17;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
argument_list|>
name|getRecommendationOrBuilderList
parameter_list|()
block|{
return|return
name|recommendation_
return|;
block|}
comment|/**      *<code>repeated .Request recommendation = 17;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getRecommendationCount
parameter_list|()
block|{
return|return
name|recommendation_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Request recommendation = 17;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|getRecommendation
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|recommendation_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Request recommendation = 17;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
name|getRecommendationOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|recommendation_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|hasOperation
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasSession
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getSession
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasStudent
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getStudent
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getRequestCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getRequest
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getEnrollmentCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getEnrollment
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getOtherCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getOther
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getMessageCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getMessage
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasUser
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getUser
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getOptionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getOption
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getRecommendationCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getRecommendation
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|1
argument_list|,
name|operation_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|getSession
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|3
argument_list|,
name|getStudent
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|4
argument_list|,
name|startTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|5
argument_list|,
name|endTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|6
argument_list|,
name|cpuTime_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|request_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|7
argument_list|,
name|request_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|enrollment_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|8
argument_list|,
name|enrollment_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|other_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|9
argument_list|,
name|other_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|message_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|10
argument_list|,
name|message_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|11
argument_list|,
name|result_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|12
argument_list|,
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|option_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|13
argument_list|,
name|option_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|14
argument_list|,
name|apiGetTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|15
argument_list|,
name|apiPostTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|16
argument_list|,
name|apiException_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|recommendation_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|17
argument_list|,
name|recommendation_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|1
argument_list|,
name|operation_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|getSession
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|3
argument_list|,
name|getStudent
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|4
argument_list|,
name|startTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|5
argument_list|,
name|endTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|6
argument_list|,
name|cpuTime_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|request_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|7
argument_list|,
name|request_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|enrollment_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|8
argument_list|,
name|enrollment_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|other_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|9
argument_list|,
name|other_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|message_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|10
argument_list|,
name|message_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|11
argument_list|,
name|result_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|12
argument_list|,
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|option_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|13
argument_list|,
name|option_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|14
argument_list|,
name|apiGetTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|15
argument_list|,
name|apiPostTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|16
argument_list|,
name|apiException_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|recommendation_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|17
argument_list|,
name|recommendation_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|other
init|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|)
name|obj
decl_stmt|;
if|if
condition|(
name|hasOperation
argument_list|()
operator|!=
name|other
operator|.
name|hasOperation
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasOperation
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getOperation
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getOperation
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasSession
argument_list|()
operator|!=
name|other
operator|.
name|hasSession
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasSession
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getSession
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getSession
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasStudent
argument_list|()
operator|!=
name|other
operator|.
name|hasStudent
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasStudent
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getStudent
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getStudent
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasStartTime
argument_list|()
operator|!=
name|other
operator|.
name|hasStartTime
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasStartTime
argument_list|()
condition|)
block|{
if|if
condition|(
name|getStartTime
argument_list|()
operator|!=
name|other
operator|.
name|getStartTime
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasEndTime
argument_list|()
operator|!=
name|other
operator|.
name|hasEndTime
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasEndTime
argument_list|()
condition|)
block|{
if|if
condition|(
name|getEndTime
argument_list|()
operator|!=
name|other
operator|.
name|getEndTime
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasCpuTime
argument_list|()
operator|!=
name|other
operator|.
name|hasCpuTime
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasCpuTime
argument_list|()
condition|)
block|{
if|if
condition|(
name|getCpuTime
argument_list|()
operator|!=
name|other
operator|.
name|getCpuTime
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getRequestList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getRequestList
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|getEnrollmentList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getEnrollmentList
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|getOtherList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getOtherList
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|getMessageList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getMessageList
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasResult
argument_list|()
operator|!=
name|other
operator|.
name|hasResult
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasResult
argument_list|()
condition|)
block|{
if|if
condition|(
name|result_
operator|!=
name|other
operator|.
name|result_
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasUser
argument_list|()
operator|!=
name|other
operator|.
name|hasUser
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasUser
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getUser
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUser
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getOptionList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getOptionList
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasApiGetTime
argument_list|()
operator|!=
name|other
operator|.
name|hasApiGetTime
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasApiGetTime
argument_list|()
condition|)
block|{
if|if
condition|(
name|getApiGetTime
argument_list|()
operator|!=
name|other
operator|.
name|getApiGetTime
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasApiPostTime
argument_list|()
operator|!=
name|other
operator|.
name|hasApiPostTime
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasApiPostTime
argument_list|()
condition|)
block|{
if|if
condition|(
name|getApiPostTime
argument_list|()
operator|!=
name|other
operator|.
name|getApiPostTime
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasApiException
argument_list|()
operator|!=
name|other
operator|.
name|hasApiException
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasApiException
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getApiException
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getApiException
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getRecommendationList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getRecommendationList
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasOperation
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|OPERATION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getOperation
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasSession
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|SESSION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getSession
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasStudent
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|STUDENT_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getStudent
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasStartTime
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|START_TIME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashLong
argument_list|(
name|getStartTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasEndTime
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|END_TIME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashLong
argument_list|(
name|getEndTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasCpuTime
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|CPU_TIME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashLong
argument_list|(
name|getCpuTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getRequestCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|REQUEST_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getRequestList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getEnrollmentCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|ENROLLMENT_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getEnrollmentList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getOtherCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|OTHER_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getOtherList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getMessageCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|MESSAGE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getMessageList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasResult
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|RESULT_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|result_
expr_stmt|;
block|}
if|if
condition|(
name|hasUser
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|USER_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getUser
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getOptionCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|OPTION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getOptionList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasApiGetTime
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|API_GET_TIME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashLong
argument_list|(
name|getApiGetTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasApiPostTime
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|API_POST_TIME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashLong
argument_list|(
name|getApiPostTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasApiException
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|API_EXCEPTION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getApiException
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getRecommendationCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|RECOMMENDATION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getRecommendationList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code Action}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:Action)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Action_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Action_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.unitime.timetable.onlinesectioning.OnlineSectioningLog.Action.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getSessionFieldBuilder
argument_list|()
expr_stmt|;
name|getStudentFieldBuilder
argument_list|()
expr_stmt|;
name|getRequestFieldBuilder
argument_list|()
expr_stmt|;
name|getEnrollmentFieldBuilder
argument_list|()
expr_stmt|;
name|getOtherFieldBuilder
argument_list|()
expr_stmt|;
name|getMessageFieldBuilder
argument_list|()
expr_stmt|;
name|getUserFieldBuilder
argument_list|()
expr_stmt|;
name|getOptionFieldBuilder
argument_list|()
expr_stmt|;
name|getRecommendationFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|operation_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|sessionBuilder_
operator|==
literal|null
condition|)
block|{
name|session_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|sessionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
if|if
condition|(
name|studentBuilder_
operator|==
literal|null
condition|)
block|{
name|student_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|studentBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|startTime_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|endTime_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|cpuTime_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
if|if
condition|(
name|requestBuilder_
operator|==
literal|null
condition|)
block|{
name|request_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
block|}
else|else
block|{
name|requestBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|enrollmentBuilder_
operator|==
literal|null
condition|)
block|{
name|enrollment_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
block|}
else|else
block|{
name|enrollmentBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|otherBuilder_
operator|==
literal|null
condition|)
block|{
name|other_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
block|}
else|else
block|{
name|otherBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
name|message_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|result_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
if|if
condition|(
name|userBuilder_
operator|==
literal|null
condition|)
block|{
name|user_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|userBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000800
operator|)
expr_stmt|;
if|if
condition|(
name|optionBuilder_
operator|==
literal|null
condition|)
block|{
name|option_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00001000
operator|)
expr_stmt|;
block|}
else|else
block|{
name|optionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|apiGetTime_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00002000
operator|)
expr_stmt|;
name|apiPostTime_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00004000
operator|)
expr_stmt|;
name|apiException_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00008000
operator|)
expr_stmt|;
if|if
condition|(
name|recommendationBuilder_
operator|==
literal|null
condition|)
block|{
name|recommendation_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00010000
operator|)
expr_stmt|;
block|}
else|else
block|{
name|recommendationBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Action_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|build
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|result
init|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|operation_
operator|=
name|operation_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
if|if
condition|(
name|sessionBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|session_
operator|=
name|session_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|session_
operator|=
name|sessionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
if|if
condition|(
name|studentBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|student_
operator|=
name|student_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|student_
operator|=
name|studentBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|startTime_
operator|=
name|startTime_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|endTime_
operator|=
name|endTime_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|cpuTime_
operator|=
name|cpuTime_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
if|if
condition|(
name|requestBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|request_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|request_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|request_
operator|=
name|request_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|request_
operator|=
name|requestBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|enrollmentBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|enrollment_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|enrollment_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|enrollment_
operator|=
name|enrollment_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|enrollment_
operator|=
name|enrollmentBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|otherBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|other_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|other_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|other_
operator|=
name|other_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|other_
operator|=
name|otherBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|message_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|message_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|message_
operator|=
name|message_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|message_
operator|=
name|messageBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000400
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
name|result
operator|.
name|result_
operator|=
name|result_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000800
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
if|if
condition|(
name|userBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|user_
operator|=
name|user_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|user_
operator|=
name|userBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|to_bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
if|if
condition|(
name|optionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|option_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|option_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00001000
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|option_
operator|=
name|option_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|option_
operator|=
name|optionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00002000
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|apiGetTime_
operator|=
name|apiGetTime_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000100
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00004000
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|apiPostTime_
operator|=
name|apiPostTime_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000200
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00008000
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000400
expr_stmt|;
block|}
name|result
operator|.
name|apiException_
operator|=
name|apiException_
expr_stmt|;
if|if
condition|(
name|recommendationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00010000
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|recommendation_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|recommendation_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00010000
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|recommendation_
operator|=
name|recommendation_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|recommendation_
operator|=
name|recommendationBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasOperation
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|operation_
operator|=
name|other
operator|.
name|operation_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasSession
argument_list|()
condition|)
block|{
name|mergeSession
argument_list|(
name|other
operator|.
name|getSession
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasStudent
argument_list|()
condition|)
block|{
name|mergeStudent
argument_list|(
name|other
operator|.
name|getStudent
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasStartTime
argument_list|()
condition|)
block|{
name|setStartTime
argument_list|(
name|other
operator|.
name|getStartTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasEndTime
argument_list|()
condition|)
block|{
name|setEndTime
argument_list|(
name|other
operator|.
name|getEndTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasCpuTime
argument_list|()
condition|)
block|{
name|setCpuTime
argument_list|(
name|other
operator|.
name|getCpuTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|requestBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|request_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|request_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|request_
operator|=
name|other
operator|.
name|request_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureRequestIsMutable
argument_list|()
expr_stmt|;
name|request_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|request_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|request_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|requestBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|requestBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|requestBuilder_
operator|=
literal|null
expr_stmt|;
name|request_
operator|=
name|other
operator|.
name|request_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|requestBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getRequestFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|requestBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|request_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|enrollmentBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|enrollment_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|enrollment_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|enrollment_
operator|=
name|other
operator|.
name|enrollment_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureEnrollmentIsMutable
argument_list|()
expr_stmt|;
name|enrollment_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|enrollment_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|enrollment_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|enrollmentBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|enrollmentBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|enrollmentBuilder_
operator|=
literal|null
expr_stmt|;
name|enrollment_
operator|=
name|other
operator|.
name|enrollment_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|enrollmentBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getEnrollmentFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|enrollmentBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|enrollment_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|otherBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|other_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|other_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|other_
operator|=
name|other
operator|.
name|other_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureOtherIsMutable
argument_list|()
expr_stmt|;
name|other_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|other_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|other_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|otherBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|otherBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|otherBuilder_
operator|=
literal|null
expr_stmt|;
name|other_
operator|=
name|other
operator|.
name|other_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|otherBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getOtherFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|otherBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|other_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|message_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|message_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|message_
operator|=
name|other
operator|.
name|message_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureMessageIsMutable
argument_list|()
expr_stmt|;
name|message_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|message_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|message_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|messageBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|messageBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|messageBuilder_
operator|=
literal|null
expr_stmt|;
name|message_
operator|=
name|other
operator|.
name|message_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
name|messageBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getMessageFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|message_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasResult
argument_list|()
condition|)
block|{
name|setResult
argument_list|(
name|other
operator|.
name|getResult
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasUser
argument_list|()
condition|)
block|{
name|mergeUser
argument_list|(
name|other
operator|.
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|optionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|option_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|option_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|option_
operator|=
name|other
operator|.
name|option_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00001000
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureOptionIsMutable
argument_list|()
expr_stmt|;
name|option_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|option_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|option_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|optionBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|optionBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|optionBuilder_
operator|=
literal|null
expr_stmt|;
name|option_
operator|=
name|other
operator|.
name|option_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00001000
operator|)
expr_stmt|;
name|optionBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getOptionFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|optionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|option_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasApiGetTime
argument_list|()
condition|)
block|{
name|setApiGetTime
argument_list|(
name|other
operator|.
name|getApiGetTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasApiPostTime
argument_list|()
condition|)
block|{
name|setApiPostTime
argument_list|(
name|other
operator|.
name|getApiPostTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasApiException
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00008000
expr_stmt|;
name|apiException_
operator|=
name|other
operator|.
name|apiException_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|recommendationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|recommendation_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|recommendation_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|recommendation_
operator|=
name|other
operator|.
name|recommendation_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00010000
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureRecommendationIsMutable
argument_list|()
expr_stmt|;
name|recommendation_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|recommendation_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|recommendation_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|recommendationBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|recommendationBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|recommendationBuilder_
operator|=
literal|null
expr_stmt|;
name|recommendation_
operator|=
name|other
operator|.
name|recommendation_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00010000
operator|)
expr_stmt|;
name|recommendationBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getRecommendationFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|recommendationBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|recommendation_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasOperation
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasSession
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getSession
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasStudent
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getStudent
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getRequestCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getRequest
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getEnrollmentCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getEnrollment
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getOtherCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getOther
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getMessageCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getMessage
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasUser
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getUser
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getOptionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getOption
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getRecommendationCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getRecommendation
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|operation_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string operation = 1;</code>        * @return Whether the operation field is set.        */
specifier|public
name|boolean
name|hasOperation
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>required string operation = 1;</code>        * @return The operation.        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getOperation
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|operation_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|operation_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string operation = 1;</code>        * @return The bytes for operation.        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOperationBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|operation_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|operation_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string operation = 1;</code>        * @param value The operation to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setOperation
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|operation_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string operation = 1;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearOperation
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|operation_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getOperation
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string operation = 1;</code>        * @param value The bytes for operation to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setOperationBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|operation_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|session_
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|sessionBuilder_
decl_stmt|;
comment|/**        *<code>required .Entity session = 2;</code>        * @return Whether the session field is set.        */
specifier|public
name|boolean
name|hasSession
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>required .Entity session = 2;</code>        * @return The session.        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getSession
parameter_list|()
block|{
if|if
condition|(
name|sessionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|session_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|session_
return|;
block|}
else|else
block|{
return|return
name|sessionBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>required .Entity session = 2;</code>        */
specifier|public
name|Builder
name|setSession
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|sessionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|session_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sessionBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .Entity session = 2;</code>        */
specifier|public
name|Builder
name|setSession
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|sessionBuilder_
operator|==
literal|null
condition|)
block|{
name|session_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sessionBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .Entity session = 2;</code>        */
specifier|public
name|Builder
name|mergeSession
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|sessionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
operator|&&
name|session_
operator|!=
literal|null
operator|&&
name|session_
operator|!=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|session_
operator|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|newBuilder
argument_list|(
name|session_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|session_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sessionBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .Entity session = 2;</code>        */
specifier|public
name|Builder
name|clearSession
parameter_list|()
block|{
if|if
condition|(
name|sessionBuilder_
operator|==
literal|null
condition|)
block|{
name|session_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sessionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .Entity session = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|getSessionBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getSessionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>required .Entity session = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getSessionOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|sessionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|sessionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|session_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|session_
return|;
block|}
block|}
comment|/**        *<code>required .Entity session = 2;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getSessionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|sessionBuilder_
operator|==
literal|null
condition|)
block|{
name|sessionBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
argument_list|(
name|getSession
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|session_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|sessionBuilder_
return|;
block|}
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|student_
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|studentBuilder_
decl_stmt|;
comment|/**        *<code>optional .Entity student = 3;</code>        * @return Whether the student field is set.        */
specifier|public
name|boolean
name|hasStudent
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional .Entity student = 3;</code>        * @return The student.        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getStudent
parameter_list|()
block|{
if|if
condition|(
name|studentBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|student_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|student_
return|;
block|}
else|else
block|{
return|return
name|studentBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .Entity student = 3;</code>        */
specifier|public
name|Builder
name|setStudent
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|studentBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|student_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|studentBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity student = 3;</code>        */
specifier|public
name|Builder
name|setStudent
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|studentBuilder_
operator|==
literal|null
condition|)
block|{
name|student_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|studentBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity student = 3;</code>        */
specifier|public
name|Builder
name|mergeStudent
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|studentBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
operator|&&
name|student_
operator|!=
literal|null
operator|&&
name|student_
operator|!=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|student_
operator|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|newBuilder
argument_list|(
name|student_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|student_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|studentBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity student = 3;</code>        */
specifier|public
name|Builder
name|clearStudent
parameter_list|()
block|{
if|if
condition|(
name|studentBuilder_
operator|==
literal|null
condition|)
block|{
name|student_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|studentBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity student = 3;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|getStudentBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getStudentFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .Entity student = 3;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getStudentOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|studentBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|studentBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|student_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|student_
return|;
block|}
block|}
comment|/**        *<code>optional .Entity student = 3;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getStudentFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|studentBuilder_
operator|==
literal|null
condition|)
block|{
name|studentBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
argument_list|(
name|getStudent
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|student_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|studentBuilder_
return|;
block|}
specifier|private
name|long
name|startTime_
decl_stmt|;
comment|/**        *<code>optional int64 start_time = 4;</code>        * @return Whether the startTime field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasStartTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional int64 start_time = 4;</code>        * @return The startTime.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getStartTime
parameter_list|()
block|{
return|return
name|startTime_
return|;
block|}
comment|/**        *<code>optional int64 start_time = 4;</code>        * @param value The startTime to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setStartTime
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|startTime_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 start_time = 4;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearStartTime
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|startTime_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|long
name|endTime_
decl_stmt|;
comment|/**        *<code>optional int64 end_time = 5;</code>        * @return Whether the endTime field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasEndTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional int64 end_time = 5;</code>        * @return The endTime.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getEndTime
parameter_list|()
block|{
return|return
name|endTime_
return|;
block|}
comment|/**        *<code>optional int64 end_time = 5;</code>        * @param value The endTime to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setEndTime
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|endTime_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 end_time = 5;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearEndTime
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|endTime_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|long
name|cpuTime_
decl_stmt|;
comment|/**        *<code>optional int64 cpu_time = 6;</code>        * @return Whether the cpuTime field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasCpuTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional int64 cpu_time = 6;</code>        * @return The cpuTime.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getCpuTime
parameter_list|()
block|{
return|return
name|cpuTime_
return|;
block|}
comment|/**        *<code>optional int64 cpu_time = 6;</code>        * @param value The cpuTime to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setCpuTime
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|cpuTime_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 cpu_time = 6;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearCpuTime
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|cpuTime_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|>
name|request_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureRequestIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|request_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|>
argument_list|(
name|request_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
argument_list|>
name|requestBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Request request = 7;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|>
name|getRequestList
parameter_list|()
block|{
if|if
condition|(
name|requestBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|request_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|requestBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Request request = 7;</code>        */
specifier|public
name|int
name|getRequestCount
parameter_list|()
block|{
if|if
condition|(
name|requestBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|request_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|requestBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Request request = 7;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|getRequest
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|requestBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|request_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|requestBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Request request = 7;</code>        */
specifier|public
name|Builder
name|setRequest
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|value
parameter_list|)
block|{
if|if
condition|(
name|requestBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRequestIsMutable
argument_list|()
expr_stmt|;
name|request_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|requestBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Request request = 7;</code>        */
specifier|public
name|Builder
name|setRequest
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|requestBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRequestIsMutable
argument_list|()
expr_stmt|;
name|request_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|requestBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Request request = 7;</code>        */
specifier|public
name|Builder
name|addRequest
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|value
parameter_list|)
block|{
if|if
condition|(
name|requestBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRequestIsMutable
argument_list|()
expr_stmt|;
name|request_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|requestBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Request request = 7;</code>        */
specifier|public
name|Builder
name|addRequest
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|value
parameter_list|)
block|{
if|if
condition|(
name|requestBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRequestIsMutable
argument_list|()
expr_stmt|;
name|request_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|requestBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Request request = 7;</code>        */
specifier|public
name|Builder
name|addRequest
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|requestBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRequestIsMutable
argument_list|()
expr_stmt|;
name|request_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|requestBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Request request = 7;</code>        */
specifier|public
name|Builder
name|addRequest
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|requestBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRequestIsMutable
argument_list|()
expr_stmt|;
name|request_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|requestBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Request request = 7;</code>        */
specifier|public
name|Builder
name|addAllRequest
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|requestBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRequestIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|request_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|requestBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Request request = 7;</code>        */
specifier|public
name|Builder
name|clearRequest
parameter_list|()
block|{
if|if
condition|(
name|requestBuilder_
operator|==
literal|null
condition|)
block|{
name|request_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|requestBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Request request = 7;</code>        */
specifier|public
name|Builder
name|removeRequest
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|requestBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRequestIsMutable
argument_list|()
expr_stmt|;
name|request_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|requestBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Request request = 7;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
name|getRequestBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getRequestFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Request request = 7;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
name|getRequestOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|requestBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|request_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|requestBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Request request = 7;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
argument_list|>
name|getRequestOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|requestBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|requestBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|request_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Request request = 7;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
name|addRequestBuilder
parameter_list|()
block|{
return|return
name|getRequestFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Request request = 7;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
name|addRequestBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getRequestFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Request request = 7;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
argument_list|>
name|getRequestBuilderList
parameter_list|()
block|{
return|return
name|getRequestFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
argument_list|>
name|getRequestFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|requestBuilder_
operator|==
literal|null
condition|)
block|{
name|requestBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
argument_list|>
argument_list|(
name|request_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|request_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|requestBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
argument_list|>
name|enrollment_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureEnrollmentIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|enrollment_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
argument_list|>
argument_list|(
name|enrollment_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EnrollmentOrBuilder
argument_list|>
name|enrollmentBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Enrollment enrollment = 8;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
argument_list|>
name|getEnrollmentList
parameter_list|()
block|{
if|if
condition|(
name|enrollmentBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|enrollment_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|enrollmentBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Enrollment enrollment = 8;</code>        */
specifier|public
name|int
name|getEnrollmentCount
parameter_list|()
block|{
if|if
condition|(
name|enrollmentBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|enrollment_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|enrollmentBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Enrollment enrollment = 8;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|getEnrollment
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|enrollmentBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|enrollment_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|enrollmentBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Enrollment enrollment = 8;</code>        */
specifier|public
name|Builder
name|setEnrollment
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|value
parameter_list|)
block|{
if|if
condition|(
name|enrollmentBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureEnrollmentIsMutable
argument_list|()
expr_stmt|;
name|enrollment_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enrollmentBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Enrollment enrollment = 8;</code>        */
specifier|public
name|Builder
name|setEnrollment
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|enrollmentBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureEnrollmentIsMutable
argument_list|()
expr_stmt|;
name|enrollment_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enrollmentBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Enrollment enrollment = 8;</code>        */
specifier|public
name|Builder
name|addEnrollment
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|value
parameter_list|)
block|{
if|if
condition|(
name|enrollmentBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureEnrollmentIsMutable
argument_list|()
expr_stmt|;
name|enrollment_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enrollmentBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Enrollment enrollment = 8;</code>        */
specifier|public
name|Builder
name|addEnrollment
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
name|value
parameter_list|)
block|{
if|if
condition|(
name|enrollmentBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureEnrollmentIsMutable
argument_list|()
expr_stmt|;
name|enrollment_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enrollmentBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Enrollment enrollment = 8;</code>        */
specifier|public
name|Builder
name|addEnrollment
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|enrollmentBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureEnrollmentIsMutable
argument_list|()
expr_stmt|;
name|enrollment_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enrollmentBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Enrollment enrollment = 8;</code>        */
specifier|public
name|Builder
name|addEnrollment
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|enrollmentBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureEnrollmentIsMutable
argument_list|()
expr_stmt|;
name|enrollment_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enrollmentBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Enrollment enrollment = 8;</code>        */
specifier|public
name|Builder
name|addAllEnrollment
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|enrollmentBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureEnrollmentIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|enrollment_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enrollmentBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Enrollment enrollment = 8;</code>        */
specifier|public
name|Builder
name|clearEnrollment
parameter_list|()
block|{
if|if
condition|(
name|enrollmentBuilder_
operator|==
literal|null
condition|)
block|{
name|enrollment_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enrollmentBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Enrollment enrollment = 8;</code>        */
specifier|public
name|Builder
name|removeEnrollment
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|enrollmentBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureEnrollmentIsMutable
argument_list|()
expr_stmt|;
name|enrollment_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enrollmentBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Enrollment enrollment = 8;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|Builder
name|getEnrollmentBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getEnrollmentFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Enrollment enrollment = 8;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EnrollmentOrBuilder
name|getEnrollmentOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|enrollmentBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|enrollment_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|enrollmentBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Enrollment enrollment = 8;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EnrollmentOrBuilder
argument_list|>
name|getEnrollmentOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|enrollmentBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|enrollmentBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|enrollment_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Enrollment enrollment = 8;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|Builder
name|addEnrollmentBuilder
parameter_list|()
block|{
return|return
name|getEnrollmentFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Enrollment enrollment = 8;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|Builder
name|addEnrollmentBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getEnrollmentFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Enrollment enrollment = 8;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|Builder
argument_list|>
name|getEnrollmentBuilderList
parameter_list|()
block|{
return|return
name|getEnrollmentFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EnrollmentOrBuilder
argument_list|>
name|getEnrollmentFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|enrollmentBuilder_
operator|==
literal|null
condition|)
block|{
name|enrollmentBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Enrollment
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EnrollmentOrBuilder
argument_list|>
argument_list|(
name|enrollment_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|enrollment_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|enrollmentBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|other_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureOtherIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|other_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
argument_list|(
name|other_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|otherBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Entity other = 9;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|getOtherList
parameter_list|()
block|{
if|if
condition|(
name|otherBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|other_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|otherBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity other = 9;</code>        */
specifier|public
name|int
name|getOtherCount
parameter_list|()
block|{
if|if
condition|(
name|otherBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|other_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|otherBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity other = 9;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getOther
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|otherBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|other_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|otherBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity other = 9;</code>        */
specifier|public
name|Builder
name|setOther
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|otherBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureOtherIsMutable
argument_list|()
expr_stmt|;
name|other_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|otherBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity other = 9;</code>        */
specifier|public
name|Builder
name|setOther
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|otherBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOtherIsMutable
argument_list|()
expr_stmt|;
name|other_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|otherBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity other = 9;</code>        */
specifier|public
name|Builder
name|addOther
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|otherBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureOtherIsMutable
argument_list|()
expr_stmt|;
name|other_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|otherBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity other = 9;</code>        */
specifier|public
name|Builder
name|addOther
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|otherBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureOtherIsMutable
argument_list|()
expr_stmt|;
name|other_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|otherBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity other = 9;</code>        */
specifier|public
name|Builder
name|addOther
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|otherBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOtherIsMutable
argument_list|()
expr_stmt|;
name|other_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|otherBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity other = 9;</code>        */
specifier|public
name|Builder
name|addOther
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|otherBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOtherIsMutable
argument_list|()
expr_stmt|;
name|other_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|otherBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity other = 9;</code>        */
specifier|public
name|Builder
name|addAllOther
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|otherBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOtherIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|other_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|otherBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity other = 9;</code>        */
specifier|public
name|Builder
name|clearOther
parameter_list|()
block|{
if|if
condition|(
name|otherBuilder_
operator|==
literal|null
condition|)
block|{
name|other_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|otherBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity other = 9;</code>        */
specifier|public
name|Builder
name|removeOther
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|otherBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOtherIsMutable
argument_list|()
expr_stmt|;
name|other_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|otherBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity other = 9;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|getOtherBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getOtherFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Entity other = 9;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getOtherOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|otherBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|other_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|otherBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity other = 9;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getOtherOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|otherBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|otherBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|other_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity other = 9;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|addOtherBuilder
parameter_list|()
block|{
return|return
name|getOtherFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Entity other = 9;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|addOtherBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getOtherFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Entity other = 9;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|>
name|getOtherBuilderList
parameter_list|()
block|{
return|return
name|getOtherFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getOtherFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|otherBuilder_
operator|==
literal|null
condition|)
block|{
name|otherBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
argument_list|(
name|other_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|other_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|otherBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|>
name|message_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureMessageIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|message_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|>
argument_list|(
name|message_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
argument_list|>
name|messageBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Message message = 10;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|>
name|getMessageList
parameter_list|()
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|message_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|messageBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Message message = 10;</code>        */
specifier|public
name|int
name|getMessageCount
parameter_list|()
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|message_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|messageBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Message message = 10;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|getMessage
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|message_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|messageBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Message message = 10;</code>        */
specifier|public
name|Builder
name|setMessage
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|value
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureMessageIsMutable
argument_list|()
expr_stmt|;
name|message_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Message message = 10;</code>        */
specifier|public
name|Builder
name|setMessage
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMessageIsMutable
argument_list|()
expr_stmt|;
name|message_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Message message = 10;</code>        */
specifier|public
name|Builder
name|addMessage
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|value
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureMessageIsMutable
argument_list|()
expr_stmt|;
name|message_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Message message = 10;</code>        */
specifier|public
name|Builder
name|addMessage
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|value
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureMessageIsMutable
argument_list|()
expr_stmt|;
name|message_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Message message = 10;</code>        */
specifier|public
name|Builder
name|addMessage
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMessageIsMutable
argument_list|()
expr_stmt|;
name|message_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Message message = 10;</code>        */
specifier|public
name|Builder
name|addMessage
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMessageIsMutable
argument_list|()
expr_stmt|;
name|message_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Message message = 10;</code>        */
specifier|public
name|Builder
name|addAllMessage
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMessageIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|message_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Message message = 10;</code>        */
specifier|public
name|Builder
name|clearMessage
parameter_list|()
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
name|message_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Message message = 10;</code>        */
specifier|public
name|Builder
name|removeMessage
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMessageIsMutable
argument_list|()
expr_stmt|;
name|message_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Message message = 10;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
name|getMessageBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getMessageFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Message message = 10;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
name|getMessageOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|message_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|messageBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Message message = 10;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
argument_list|>
name|getMessageOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|messageBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|messageBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|message_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Message message = 10;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
name|addMessageBuilder
parameter_list|()
block|{
return|return
name|getMessageFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Message message = 10;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
name|addMessageBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getMessageFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Message message = 10;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
argument_list|>
name|getMessageBuilderList
parameter_list|()
block|{
return|return
name|getMessageFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
argument_list|>
name|getMessageFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
name|messageBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
argument_list|>
argument_list|(
name|message_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|message_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|messageBuilder_
return|;
block|}
specifier|private
name|int
name|result_
init|=
literal|0
decl_stmt|;
comment|/**        *<code>optional .Action.ResultType result = 11;</code>        * @return Whether the result field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasResult
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional .Action.ResultType result = 11;</code>        * @return The result.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|ResultType
name|getResult
parameter_list|()
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|ResultType
name|result
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|ResultType
operator|.
name|valueOf
argument_list|(
name|result_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|ResultType
operator|.
name|SUCCESS
else|:
name|result
return|;
block|}
comment|/**        *<code>optional .Action.ResultType result = 11;</code>        * @param value The result to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setResult
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|ResultType
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|result_
operator|=
name|value
operator|.
name|getNumber
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Action.ResultType result = 11;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearResult
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
name|result_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|user_
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|userBuilder_
decl_stmt|;
comment|/**        *<code>optional .Entity user = 12;</code>        * @return Whether the user field is set.        */
specifier|public
name|boolean
name|hasUser
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional .Entity user = 12;</code>        * @return The user.        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getUser
parameter_list|()
block|{
if|if
condition|(
name|userBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|user_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|user_
return|;
block|}
else|else
block|{
return|return
name|userBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .Entity user = 12;</code>        */
specifier|public
name|Builder
name|setUser
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|userBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|user_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|userBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity user = 12;</code>        */
specifier|public
name|Builder
name|setUser
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|userBuilder_
operator|==
literal|null
condition|)
block|{
name|user_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|userBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity user = 12;</code>        */
specifier|public
name|Builder
name|mergeUser
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|userBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|!=
literal|0
operator|)
operator|&&
name|user_
operator|!=
literal|null
operator|&&
name|user_
operator|!=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|user_
operator|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|newBuilder
argument_list|(
name|user_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|user_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|userBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity user = 12;</code>        */
specifier|public
name|Builder
name|clearUser
parameter_list|()
block|{
if|if
condition|(
name|userBuilder_
operator|==
literal|null
condition|)
block|{
name|user_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|userBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000800
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .Entity user = 12;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|getUserBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getUserFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .Entity user = 12;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getUserOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|userBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|userBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|user_
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|user_
return|;
block|}
block|}
comment|/**        *<code>optional .Entity user = 12;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getUserFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|userBuilder_
operator|==
literal|null
condition|)
block|{
name|userBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
argument_list|(
name|getUser
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|user_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|userBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|>
name|option_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureOptionIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|option_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|>
argument_list|(
name|option_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00001000
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
argument_list|>
name|optionBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Property option = 13;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|>
name|getOptionList
parameter_list|()
block|{
if|if
condition|(
name|optionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|option_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|optionBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Property option = 13;</code>        */
specifier|public
name|int
name|getOptionCount
parameter_list|()
block|{
if|if
condition|(
name|optionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|option_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|optionBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Property option = 13;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|getOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|optionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|option_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|optionBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Property option = 13;</code>        */
specifier|public
name|Builder
name|setOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureOptionIsMutable
argument_list|()
expr_stmt|;
name|option_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Property option = 13;</code>        */
specifier|public
name|Builder
name|setOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|optionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOptionIsMutable
argument_list|()
expr_stmt|;
name|option_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Property option = 13;</code>        */
specifier|public
name|Builder
name|addOption
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureOptionIsMutable
argument_list|()
expr_stmt|;
name|option_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Property option = 13;</code>        */
specifier|public
name|Builder
name|addOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureOptionIsMutable
argument_list|()
expr_stmt|;
name|option_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Property option = 13;</code>        */
specifier|public
name|Builder
name|addOption
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|optionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOptionIsMutable
argument_list|()
expr_stmt|;
name|option_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Property option = 13;</code>        */
specifier|public
name|Builder
name|addOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|optionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOptionIsMutable
argument_list|()
expr_stmt|;
name|option_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Property option = 13;</code>        */
specifier|public
name|Builder
name|addAllOption
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|optionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOptionIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|option_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Property option = 13;</code>        */
specifier|public
name|Builder
name|clearOption
parameter_list|()
block|{
if|if
condition|(
name|optionBuilder_
operator|==
literal|null
condition|)
block|{
name|option_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00001000
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Property option = 13;</code>        */
specifier|public
name|Builder
name|removeOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|optionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOptionIsMutable
argument_list|()
expr_stmt|;
name|option_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Property option = 13;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
name|getOptionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getOptionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Property option = 13;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
name|getOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|optionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|option_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|optionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Property option = 13;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
argument_list|>
name|getOptionOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|optionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|optionBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|option_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Property option = 13;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
name|addOptionBuilder
parameter_list|()
block|{
return|return
name|getOptionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Property option = 13;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
name|addOptionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getOptionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Property option = 13;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
argument_list|>
name|getOptionBuilderList
parameter_list|()
block|{
return|return
name|getOptionFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
argument_list|>
name|getOptionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|optionBuilder_
operator|==
literal|null
condition|)
block|{
name|optionBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
argument_list|>
argument_list|(
name|option_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|option_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|optionBuilder_
return|;
block|}
specifier|private
name|long
name|apiGetTime_
decl_stmt|;
comment|/**        *<code>optional int64 api_get_time = 14;</code>        * @return Whether the apiGetTime field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasApiGetTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00002000
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional int64 api_get_time = 14;</code>        * @return The apiGetTime.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getApiGetTime
parameter_list|()
block|{
return|return
name|apiGetTime_
return|;
block|}
comment|/**        *<code>optional int64 api_get_time = 14;</code>        * @param value The apiGetTime to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setApiGetTime
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00002000
expr_stmt|;
name|apiGetTime_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 api_get_time = 14;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearApiGetTime
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00002000
operator|)
expr_stmt|;
name|apiGetTime_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|long
name|apiPostTime_
decl_stmt|;
comment|/**        *<code>optional int64 api_post_time = 15;</code>        * @return Whether the apiPostTime field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasApiPostTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00004000
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional int64 api_post_time = 15;</code>        * @return The apiPostTime.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getApiPostTime
parameter_list|()
block|{
return|return
name|apiPostTime_
return|;
block|}
comment|/**        *<code>optional int64 api_post_time = 15;</code>        * @param value The apiPostTime to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setApiPostTime
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00004000
expr_stmt|;
name|apiPostTime_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 api_post_time = 15;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearApiPostTime
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00004000
operator|)
expr_stmt|;
name|apiPostTime_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|apiException_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string api_exception = 16;</code>        * @return Whether the apiException field is set.        */
specifier|public
name|boolean
name|hasApiException
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00008000
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional string api_exception = 16;</code>        * @return The apiException.        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getApiException
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|apiException_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|apiException_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string api_exception = 16;</code>        * @return The bytes for apiException.        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getApiExceptionBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|apiException_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|apiException_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string api_exception = 16;</code>        * @param value The apiException to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setApiException
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00008000
expr_stmt|;
name|apiException_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string api_exception = 16;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearApiException
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00008000
operator|)
expr_stmt|;
name|apiException_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getApiException
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string api_exception = 16;</code>        * @param value The bytes for apiException to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setApiExceptionBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00008000
expr_stmt|;
name|apiException_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|>
name|recommendation_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureRecommendationIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00010000
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|recommendation_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|>
argument_list|(
name|recommendation_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00010000
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
argument_list|>
name|recommendationBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Request recommendation = 17;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|>
name|getRecommendationList
parameter_list|()
block|{
if|if
condition|(
name|recommendationBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|recommendation_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|recommendationBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Request recommendation = 17;</code>        */
specifier|public
name|int
name|getRecommendationCount
parameter_list|()
block|{
if|if
condition|(
name|recommendationBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|recommendation_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|recommendationBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Request recommendation = 17;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|getRecommendation
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|recommendationBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|recommendation_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|recommendationBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Request recommendation = 17;</code>        */
specifier|public
name|Builder
name|setRecommendation
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|value
parameter_list|)
block|{
if|if
condition|(
name|recommendationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRecommendationIsMutable
argument_list|()
expr_stmt|;
name|recommendation_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|recommendationBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Request recommendation = 17;</code>        */
specifier|public
name|Builder
name|setRecommendation
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|recommendationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRecommendationIsMutable
argument_list|()
expr_stmt|;
name|recommendation_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|recommendationBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Request recommendation = 17;</code>        */
specifier|public
name|Builder
name|addRecommendation
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|value
parameter_list|)
block|{
if|if
condition|(
name|recommendationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRecommendationIsMutable
argument_list|()
expr_stmt|;
name|recommendation_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|recommendationBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Request recommendation = 17;</code>        */
specifier|public
name|Builder
name|addRecommendation
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
name|value
parameter_list|)
block|{
if|if
condition|(
name|recommendationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRecommendationIsMutable
argument_list|()
expr_stmt|;
name|recommendation_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|recommendationBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Request recommendation = 17;</code>        */
specifier|public
name|Builder
name|addRecommendation
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|recommendationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRecommendationIsMutable
argument_list|()
expr_stmt|;
name|recommendation_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|recommendationBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Request recommendation = 17;</code>        */
specifier|public
name|Builder
name|addRecommendation
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|recommendationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRecommendationIsMutable
argument_list|()
expr_stmt|;
name|recommendation_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|recommendationBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Request recommendation = 17;</code>        */
specifier|public
name|Builder
name|addAllRecommendation
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|recommendationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRecommendationIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|recommendation_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|recommendationBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Request recommendation = 17;</code>        */
specifier|public
name|Builder
name|clearRecommendation
parameter_list|()
block|{
if|if
condition|(
name|recommendationBuilder_
operator|==
literal|null
condition|)
block|{
name|recommendation_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00010000
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|recommendationBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Request recommendation = 17;</code>        */
specifier|public
name|Builder
name|removeRecommendation
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|recommendationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRecommendationIsMutable
argument_list|()
expr_stmt|;
name|recommendation_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|recommendationBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Request recommendation = 17;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
name|getRecommendationBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getRecommendationFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Request recommendation = 17;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
name|getRecommendationOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|recommendationBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|recommendation_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|recommendationBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Request recommendation = 17;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
argument_list|>
name|getRecommendationOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|recommendationBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|recommendationBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|recommendation_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Request recommendation = 17;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
name|addRecommendationBuilder
parameter_list|()
block|{
return|return
name|getRecommendationFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Request recommendation = 17;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
name|addRecommendationBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getRecommendationFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Request recommendation = 17;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
argument_list|>
name|getRecommendationBuilderList
parameter_list|()
block|{
return|return
name|getRecommendationFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
argument_list|>
name|getRecommendationFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|recommendationBuilder_
operator|==
literal|null
condition|)
block|{
name|recommendationBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Request
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|RequestOrBuilder
argument_list|>
argument_list|(
name|recommendation_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00010000
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|recommendation_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|recommendationBuilder_
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:Action)
block|}
comment|// @@protoc_insertion_point(class_scope:Action)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Action
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Action
argument_list|>
argument_list|()
block|{
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Action
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Action
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Action
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Action
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|MessageOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:Message)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>required .Message.Level level = 1;</code>      * @return Whether the level field is set.      */
name|boolean
name|hasLevel
parameter_list|()
function_decl|;
comment|/**      *<code>required .Message.Level level = 1;</code>      * @return The level.      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Level
name|getLevel
parameter_list|()
function_decl|;
comment|/**      *<code>required string text = 2;</code>      * @return Whether the text field is set.      */
name|boolean
name|hasText
parameter_list|()
function_decl|;
comment|/**      *<code>required string text = 2;</code>      * @return The text.      */
name|java
operator|.
name|lang
operator|.
name|String
name|getText
parameter_list|()
function_decl|;
comment|/**      *<code>required string text = 2;</code>      * @return The bytes for text.      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTextBytes
parameter_list|()
function_decl|;
comment|/**      *<code>optional string exception = 3;</code>      * @return Whether the exception field is set.      */
name|boolean
name|hasException
parameter_list|()
function_decl|;
comment|/**      *<code>optional string exception = 3;</code>      * @return The exception.      */
name|java
operator|.
name|lang
operator|.
name|String
name|getException
parameter_list|()
function_decl|;
comment|/**      *<code>optional string exception = 3;</code>      * @return The bytes for exception.      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getExceptionBytes
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 time_stamp = 4;</code>      * @return Whether the timeStamp field is set.      */
name|boolean
name|hasTimeStamp
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 time_stamp = 4;</code>      * @return The timeStamp.      */
name|long
name|getTimeStamp
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code Message}    */
specifier|public
specifier|static
specifier|final
class|class
name|Message
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:Message)
name|MessageOrBuilder
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
comment|// Use Message.newBuilder() to construct.
specifier|private
name|Message
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Message
parameter_list|()
block|{
name|level_
operator|=
literal|0
expr_stmt|;
name|text_
operator|=
literal|""
expr_stmt|;
name|exception_
operator|=
literal|""
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unused"
block|}
argument_list|)
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|newInstance
parameter_list|(
name|UnusedPrivateParameter
name|unused
parameter_list|)
block|{
return|return
operator|new
name|Message
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Message
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
if|if
condition|(
name|extensionRegistry
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|NullPointerException
argument_list|()
throw|;
block|}
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
case|case
literal|8
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Level
name|value
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Level
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|1
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|level_
operator|=
name|rawValue
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|18
case|:
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|text_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|exception_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|32
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|timeStamp_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Message_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Message_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * Protobuf enum {@code Message.Level}      */
specifier|public
enum|enum
name|Level
implements|implements
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolMessageEnum
block|{
comment|/**        *<code>DEBUG = 0;</code>        */
name|DEBUG
argument_list|(
literal|0
argument_list|)
block|,
comment|/**        *<code>INFO = 1;</code>        */
name|INFO
argument_list|(
literal|1
argument_list|)
block|,
comment|/**        *<code>WARN = 2;</code>        */
name|WARN
argument_list|(
literal|2
argument_list|)
block|,
comment|/**        *<code>ERROR = 3;</code>        */
name|ERROR
argument_list|(
literal|3
argument_list|)
block|,
comment|/**        *<code>FATAL = 4;</code>        */
name|FATAL
argument_list|(
literal|4
argument_list|)
block|,       ;
comment|/**        *<code>DEBUG = 0;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|DEBUG_VALUE
init|=
literal|0
decl_stmt|;
comment|/**        *<code>INFO = 1;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|INFO_VALUE
init|=
literal|1
decl_stmt|;
comment|/**        *<code>WARN = 2;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|WARN_VALUE
init|=
literal|2
decl_stmt|;
comment|/**        *<code>ERROR = 3;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|ERROR_VALUE
init|=
literal|3
decl_stmt|;
comment|/**        *<code>FATAL = 4;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|FATAL_VALUE
init|=
literal|4
decl_stmt|;
specifier|public
specifier|final
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|value
return|;
block|}
comment|/**        * @param value The numeric wire value of the corresponding enum entry.        * @return The enum associated with the given numeric wire value.        * @deprecated Use {@link #forNumber(int)} instead.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
name|Level
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
return|return
name|forNumber
argument_list|(
name|value
argument_list|)
return|;
block|}
comment|/**        * @param value The numeric wire value of the corresponding enum entry.        * @return The enum associated with the given numeric wire value.        */
specifier|public
specifier|static
name|Level
name|forNumber
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|0
case|:
return|return
name|DEBUG
return|;
case|case
literal|1
case|:
return|return
name|INFO
return|;
case|case
literal|2
case|:
return|return
name|WARN
return|;
case|case
literal|3
case|:
return|return
name|ERROR
return|;
case|case
literal|4
case|:
return|return
name|FATAL
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|Level
argument_list|>
name|internalGetValueMap
parameter_list|()
block|{
return|return
name|internalValueMap
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|Level
argument_list|>
name|internalValueMap
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|Level
argument_list|>
argument_list|()
block|{
specifier|public
name|Level
name|findValueByNumber
parameter_list|(
name|int
name|number
parameter_list|)
block|{
return|return
name|Level
operator|.
name|forNumber
argument_list|(
name|number
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|getValueDescriptor
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|ordinal
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getEnumTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
name|Level
index|[]
name|VALUES
init|=
name|values
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|Level
name|valueOf
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|desc
parameter_list|)
block|{
if|if
condition|(
name|desc
operator|.
name|getType
argument_list|()
operator|!=
name|getDescriptor
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|IllegalArgumentException
argument_list|(
literal|"EnumValueDescriptor is not for this type."
argument_list|)
throw|;
block|}
return|return
name|VALUES
index|[
name|desc
operator|.
name|getIndex
argument_list|()
index|]
return|;
block|}
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|private
name|Level
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(enum_scope:Message.Level)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LEVEL_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|int
name|level_
decl_stmt|;
comment|/**      *<code>required .Message.Level level = 1;</code>      * @return Whether the level field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasLevel
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>required .Message.Level level = 1;</code>      * @return The level.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Level
name|getLevel
parameter_list|()
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Level
name|result
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Level
operator|.
name|valueOf
argument_list|(
name|level_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Level
operator|.
name|DEBUG
else|:
name|result
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|TEXT_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|text_
decl_stmt|;
comment|/**      *<code>required string text = 2;</code>      * @return Whether the text field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasText
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>required string text = 2;</code>      * @return The text.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getText
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|text_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|text_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string text = 2;</code>      * @return The bytes for text.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTextBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|text_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|text_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|EXCEPTION_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|exception_
decl_stmt|;
comment|/**      *<code>optional string exception = 3;</code>      * @return Whether the exception field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasException
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional string exception = 3;</code>      * @return The exception.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getException
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|exception_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|exception_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string exception = 3;</code>      * @return The bytes for exception.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getExceptionBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|exception_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|exception_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|TIME_STAMP_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|long
name|timeStamp_
decl_stmt|;
comment|/**      *<code>optional int64 time_stamp = 4;</code>      * @return Whether the timeStamp field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasTimeStamp
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>optional int64 time_stamp = 4;</code>      * @return The timeStamp.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getTimeStamp
parameter_list|()
block|{
return|return
name|timeStamp_
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|hasLevel
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasText
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|1
argument_list|,
name|level_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|2
argument_list|,
name|text_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|3
argument_list|,
name|exception_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|4
argument_list|,
name|timeStamp_
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|1
argument_list|,
name|level_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|2
argument_list|,
name|text_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|3
argument_list|,
name|exception_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|4
argument_list|,
name|timeStamp_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|other
init|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|)
name|obj
decl_stmt|;
if|if
condition|(
name|hasLevel
argument_list|()
operator|!=
name|other
operator|.
name|hasLevel
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasLevel
argument_list|()
condition|)
block|{
if|if
condition|(
name|level_
operator|!=
name|other
operator|.
name|level_
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasText
argument_list|()
operator|!=
name|other
operator|.
name|hasText
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasText
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getText
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getText
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasException
argument_list|()
operator|!=
name|other
operator|.
name|hasException
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasException
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getException
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getException
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasTimeStamp
argument_list|()
operator|!=
name|other
operator|.
name|hasTimeStamp
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasTimeStamp
argument_list|()
condition|)
block|{
if|if
condition|(
name|getTimeStamp
argument_list|()
operator|!=
name|other
operator|.
name|getTimeStamp
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasLevel
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|LEVEL_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|level_
expr_stmt|;
block|}
if|if
condition|(
name|hasText
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|TEXT_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getText
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasException
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|EXCEPTION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getException
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasTimeStamp
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|TIME_STAMP_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashLong
argument_list|(
name|getTimeStamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code Message}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:Message)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Message_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Message_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.unitime.timetable.onlinesectioning.OnlineSectioningLog.Message.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
block|}
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|level_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|text_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|exception_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|timeStamp_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Message_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|build
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|result
init|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|level_
operator|=
name|level_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|text_
operator|=
name|text_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|exception_
operator|=
name|exception_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|result
operator|.
name|timeStamp_
operator|=
name|timeStamp_
expr_stmt|;
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasLevel
argument_list|()
condition|)
block|{
name|setLevel
argument_list|(
name|other
operator|.
name|getLevel
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasText
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|text_
operator|=
name|other
operator|.
name|text_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasException
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|exception_
operator|=
name|other
operator|.
name|exception_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasTimeStamp
argument_list|()
condition|)
block|{
name|setTimeStamp
argument_list|(
name|other
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasLevel
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasText
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|int
name|level_
init|=
literal|0
decl_stmt|;
comment|/**        *<code>required .Message.Level level = 1;</code>        * @return Whether the level field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasLevel
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>required .Message.Level level = 1;</code>        * @return The level.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Level
name|getLevel
parameter_list|()
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Level
name|result
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Level
operator|.
name|valueOf
argument_list|(
name|level_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Level
operator|.
name|DEBUG
else|:
name|result
return|;
block|}
comment|/**        *<code>required .Message.Level level = 1;</code>        * @param value The level to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setLevel
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Level
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|level_
operator|=
name|value
operator|.
name|getNumber
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .Message.Level level = 1;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearLevel
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|level_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|text_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string text = 2;</code>        * @return Whether the text field is set.        */
specifier|public
name|boolean
name|hasText
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>required string text = 2;</code>        * @return The text.        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getText
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|text_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|text_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string text = 2;</code>        * @return The bytes for text.        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTextBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|text_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|text_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string text = 2;</code>        * @param value The text to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setText
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|text_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string text = 2;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearText
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|text_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getText
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string text = 2;</code>        * @param value The bytes for text to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setTextBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|text_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|exception_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string exception = 3;</code>        * @return Whether the exception field is set.        */
specifier|public
name|boolean
name|hasException
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional string exception = 3;</code>        * @return The exception.        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getException
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|exception_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|exception_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string exception = 3;</code>        * @return The bytes for exception.        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getExceptionBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|exception_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|exception_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string exception = 3;</code>        * @param value The exception to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setException
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|exception_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string exception = 3;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearException
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|exception_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getException
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string exception = 3;</code>        * @param value The bytes for exception to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setExceptionBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|exception_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|long
name|timeStamp_
decl_stmt|;
comment|/**        *<code>optional int64 time_stamp = 4;</code>        * @return Whether the timeStamp field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasTimeStamp
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>optional int64 time_stamp = 4;</code>        * @return The timeStamp.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|long
name|getTimeStamp
parameter_list|()
block|{
return|return
name|timeStamp_
return|;
block|}
comment|/**        *<code>optional int64 time_stamp = 4;</code>        * @param value The timeStamp to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setTimeStamp
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|timeStamp_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 time_stamp = 4;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearTimeStamp
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|timeStamp_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:Message)
block|}
comment|// @@protoc_insertion_point(class_scope:Message)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Message
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Message
argument_list|>
argument_list|()
block|{
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Message
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Message
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Message
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Message
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|PropertyOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:Property)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>required string key = 1;</code>      * @return Whether the key field is set.      */
name|boolean
name|hasKey
parameter_list|()
function_decl|;
comment|/**      *<code>required string key = 1;</code>      * @return The key.      */
name|java
operator|.
name|lang
operator|.
name|String
name|getKey
parameter_list|()
function_decl|;
comment|/**      *<code>required string key = 1;</code>      * @return The bytes for key.      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getKeyBytes
parameter_list|()
function_decl|;
comment|/**      *<code>required string value = 2;</code>      * @return Whether the value field is set.      */
name|boolean
name|hasValue
parameter_list|()
function_decl|;
comment|/**      *<code>required string value = 2;</code>      * @return The value.      */
name|java
operator|.
name|lang
operator|.
name|String
name|getValue
parameter_list|()
function_decl|;
comment|/**      *<code>required string value = 2;</code>      * @return The bytes for value.      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getValueBytes
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code Property}    */
specifier|public
specifier|static
specifier|final
class|class
name|Property
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:Property)
name|PropertyOrBuilder
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
comment|// Use Property.newBuilder() to construct.
specifier|private
name|Property
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Property
parameter_list|()
block|{
name|key_
operator|=
literal|""
expr_stmt|;
name|value_
operator|=
literal|""
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unused"
block|}
argument_list|)
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|newInstance
parameter_list|(
name|UnusedPrivateParameter
name|unused
parameter_list|)
block|{
return|return
operator|new
name|Property
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Property
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
if|if
condition|(
name|extensionRegistry
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|NullPointerException
argument_list|()
throw|;
block|}
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
case|case
literal|10
case|:
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|key_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|value_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Property_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Property_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|KEY_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|key_
decl_stmt|;
comment|/**      *<code>required string key = 1;</code>      * @return Whether the key field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasKey
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>required string key = 1;</code>      * @return The key.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getKey
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|key_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|key_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string key = 1;</code>      * @return The bytes for key.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getKeyBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|key_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|key_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|VALUE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|value_
decl_stmt|;
comment|/**      *<code>required string value = 2;</code>      * @return Whether the value field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>required string value = 2;</code>      * @return The value.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getValue
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|value_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|value_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string value = 2;</code>      * @return The bytes for value.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getValueBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|value_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|value_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|hasKey
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasValue
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|1
argument_list|,
name|key_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|2
argument_list|,
name|value_
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|1
argument_list|,
name|key_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|2
argument_list|,
name|value_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|other
init|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|)
name|obj
decl_stmt|;
if|if
condition|(
name|hasKey
argument_list|()
operator|!=
name|other
operator|.
name|hasKey
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasKey
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getKey
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getKey
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasValue
argument_list|()
operator|!=
name|other
operator|.
name|hasValue
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasValue
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getValue
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getValue
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasKey
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|KEY_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getKey
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasValue
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|VALUE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getValue
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code Property}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:Property)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|PropertyOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Property_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Property_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.unitime.timetable.onlinesectioning.OnlineSectioningLog.Property.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
block|}
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|key_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|value_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Property_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|build
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|result
init|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|key_
operator|=
name|key_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|value_
operator|=
name|value_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasKey
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|key_
operator|=
name|other
operator|.
name|key_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasValue
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|value_
operator|=
name|other
operator|.
name|value_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasKey
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasValue
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|key_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string key = 1;</code>        * @return Whether the key field is set.        */
specifier|public
name|boolean
name|hasKey
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>required string key = 1;</code>        * @return The key.        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getKey
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|key_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|key_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string key = 1;</code>        * @return The bytes for key.        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getKeyBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|key_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|key_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string key = 1;</code>        * @param value The key to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setKey
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|key_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string key = 1;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearKey
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|key_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getKey
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string key = 1;</code>        * @param value The bytes for key to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setKeyBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|key_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|value_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string value = 2;</code>        * @return Whether the value field is set.        */
specifier|public
name|boolean
name|hasValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>required string value = 2;</code>        * @return The value.        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getValue
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|value_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|value_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string value = 2;</code>        * @return The bytes for value.        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getValueBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|value_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|value_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string value = 2;</code>        * @param value The value to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setValue
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|value_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string value = 2;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearValue
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|value_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getValue
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string value = 2;</code>        * @param value The bytes for value to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setValueBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|value_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:Property)
block|}
comment|// @@protoc_insertion_point(class_scope:Property)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Property
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Property
argument_list|>
argument_list|()
block|{
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Property
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Property
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Property
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Property
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Property
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|LogOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:Log)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>repeated .Action action = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|>
name|getActionList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Action action = 1;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|getAction
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Action action = 1;</code>      */
name|int
name|getActionCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Action action = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
argument_list|>
name|getActionOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Action action = 1;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
name|getActionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Message message = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|>
name|getMessageList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Message message = 2;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|getMessage
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Message message = 2;</code>      */
name|int
name|getMessageCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Message message = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
argument_list|>
name|getMessageOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Message message = 2;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
name|getMessageOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code Log}    */
specifier|public
specifier|static
specifier|final
class|class
name|Log
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:Log)
name|LogOrBuilder
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
comment|// Use Log.newBuilder() to construct.
specifier|private
name|Log
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Log
parameter_list|()
block|{
name|action_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|message_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unused"
block|}
argument_list|)
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|newInstance
parameter_list|(
name|UnusedPrivateParameter
name|unused
parameter_list|)
block|{
return|return
operator|new
name|Log
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Log
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
if|if
condition|(
name|extensionRegistry
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|NullPointerException
argument_list|()
throw|;
block|}
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
case|case
literal|10
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|action_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|action_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|message_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|message_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|action_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|action_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|message_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|message_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Log_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Log_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|ACTION_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|>
name|action_
decl_stmt|;
comment|/**      *<code>repeated .Action action = 1;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|>
name|getActionList
parameter_list|()
block|{
return|return
name|action_
return|;
block|}
comment|/**      *<code>repeated .Action action = 1;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
argument_list|>
name|getActionOrBuilderList
parameter_list|()
block|{
return|return
name|action_
return|;
block|}
comment|/**      *<code>repeated .Action action = 1;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getActionCount
parameter_list|()
block|{
return|return
name|action_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Action action = 1;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|getAction
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|action_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Action action = 1;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
name|getActionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|action_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|MESSAGE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|>
name|message_
decl_stmt|;
comment|/**      *<code>repeated .Message message = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|>
name|getMessageList
parameter_list|()
block|{
return|return
name|message_
return|;
block|}
comment|/**      *<code>repeated .Message message = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
argument_list|>
name|getMessageOrBuilderList
parameter_list|()
block|{
return|return
name|message_
return|;
block|}
comment|/**      *<code>repeated .Message message = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getMessageCount
parameter_list|()
block|{
return|return
name|message_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Message message = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|getMessage
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|message_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Message message = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
name|getMessageOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|message_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getActionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getAction
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getMessageCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getMessage
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|action_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|action_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|message_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|message_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|action_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|action_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|message_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|message_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|other
init|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
operator|)
name|obj
decl_stmt|;
if|if
condition|(
operator|!
name|getActionList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getActionList
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|getMessageList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getMessageList
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|getActionCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|ACTION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getActionList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getMessageCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|MESSAGE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getMessageList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code Log}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:Log)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|LogOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Log_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Log_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.unitime.timetable.onlinesectioning.OnlineSectioningLog.Log.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getActionFieldBuilder
argument_list|()
expr_stmt|;
name|getMessageFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
name|action_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
name|message_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_Log_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|build
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|result
init|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|action_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|action_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|action_
operator|=
name|action_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|action_
operator|=
name|actionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|message_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|message_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|message_
operator|=
name|message_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|message_
operator|=
name|messageBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|action_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|action_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|action_
operator|=
name|other
operator|.
name|action_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureActionIsMutable
argument_list|()
expr_stmt|;
name|action_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|action_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|action_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|actionBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|actionBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|actionBuilder_
operator|=
literal|null
expr_stmt|;
name|action_
operator|=
name|other
operator|.
name|action_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|actionBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getActionFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|action_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|message_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|message_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|message_
operator|=
name|other
operator|.
name|message_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureMessageIsMutable
argument_list|()
expr_stmt|;
name|message_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|message_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|message_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|messageBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|messageBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|messageBuilder_
operator|=
literal|null
expr_stmt|;
name|message_
operator|=
name|other
operator|.
name|message_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|messageBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getMessageFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|message_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getActionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getAction
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getMessageCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getMessage
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|>
name|action_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureActionIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|action_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|>
argument_list|(
name|action_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
argument_list|>
name|actionBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Action action = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|>
name|getActionList
parameter_list|()
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|action_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|actionBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Action action = 1;</code>        */
specifier|public
name|int
name|getActionCount
parameter_list|()
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|action_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|actionBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Action action = 1;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|getAction
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|action_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|actionBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Action action = 1;</code>        */
specifier|public
name|Builder
name|setAction
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|value
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureActionIsMutable
argument_list|()
expr_stmt|;
name|action_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Action action = 1;</code>        */
specifier|public
name|Builder
name|setAction
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureActionIsMutable
argument_list|()
expr_stmt|;
name|action_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Action action = 1;</code>        */
specifier|public
name|Builder
name|addAction
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|value
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureActionIsMutable
argument_list|()
expr_stmt|;
name|action_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Action action = 1;</code>        */
specifier|public
name|Builder
name|addAction
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|value
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureActionIsMutable
argument_list|()
expr_stmt|;
name|action_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Action action = 1;</code>        */
specifier|public
name|Builder
name|addAction
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureActionIsMutable
argument_list|()
expr_stmt|;
name|action_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Action action = 1;</code>        */
specifier|public
name|Builder
name|addAction
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureActionIsMutable
argument_list|()
expr_stmt|;
name|action_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Action action = 1;</code>        */
specifier|public
name|Builder
name|addAllAction
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureActionIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|action_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Action action = 1;</code>        */
specifier|public
name|Builder
name|clearAction
parameter_list|()
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
name|action_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Action action = 1;</code>        */
specifier|public
name|Builder
name|removeAction
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureActionIsMutable
argument_list|()
expr_stmt|;
name|action_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Action action = 1;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
name|getActionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getActionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Action action = 1;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
name|getActionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|action_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|actionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Action action = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
argument_list|>
name|getActionOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|actionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|actionBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|action_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Action action = 1;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
name|addActionBuilder
parameter_list|()
block|{
return|return
name|getActionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Action action = 1;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
name|addActionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getActionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Action action = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
argument_list|>
name|getActionBuilderList
parameter_list|()
block|{
return|return
name|getActionFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
argument_list|>
name|getActionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
name|actionBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
argument_list|>
argument_list|(
name|action_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|action_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|actionBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|>
name|message_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureMessageIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|message_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|>
argument_list|(
name|message_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
argument_list|>
name|messageBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Message message = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|>
name|getMessageList
parameter_list|()
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|message_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|messageBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Message message = 2;</code>        */
specifier|public
name|int
name|getMessageCount
parameter_list|()
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|message_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|messageBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Message message = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|getMessage
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|message_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|messageBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Message message = 2;</code>        */
specifier|public
name|Builder
name|setMessage
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|value
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureMessageIsMutable
argument_list|()
expr_stmt|;
name|message_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Message message = 2;</code>        */
specifier|public
name|Builder
name|setMessage
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMessageIsMutable
argument_list|()
expr_stmt|;
name|message_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Message message = 2;</code>        */
specifier|public
name|Builder
name|addMessage
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|value
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureMessageIsMutable
argument_list|()
expr_stmt|;
name|message_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Message message = 2;</code>        */
specifier|public
name|Builder
name|addMessage
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
name|value
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureMessageIsMutable
argument_list|()
expr_stmt|;
name|message_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Message message = 2;</code>        */
specifier|public
name|Builder
name|addMessage
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMessageIsMutable
argument_list|()
expr_stmt|;
name|message_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Message message = 2;</code>        */
specifier|public
name|Builder
name|addMessage
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMessageIsMutable
argument_list|()
expr_stmt|;
name|message_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Message message = 2;</code>        */
specifier|public
name|Builder
name|addAllMessage
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMessageIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|message_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Message message = 2;</code>        */
specifier|public
name|Builder
name|clearMessage
parameter_list|()
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
name|message_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Message message = 2;</code>        */
specifier|public
name|Builder
name|removeMessage
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMessageIsMutable
argument_list|()
expr_stmt|;
name|message_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Message message = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
name|getMessageBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getMessageFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Message message = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
name|getMessageOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|message_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|messageBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Message message = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
argument_list|>
name|getMessageOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|messageBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|messageBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|message_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Message message = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
name|addMessageBuilder
parameter_list|()
block|{
return|return
name|getMessageFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Message message = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
name|addMessageBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getMessageFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Message message = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
argument_list|>
name|getMessageBuilderList
parameter_list|()
block|{
return|return
name|getMessageFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
argument_list|>
name|getMessageFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|messageBuilder_
operator|==
literal|null
condition|)
block|{
name|messageBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|MessageOrBuilder
argument_list|>
argument_list|(
name|message_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|message_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|messageBuilder_
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:Log)
block|}
comment|// @@protoc_insertion_point(class_scope:Log)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Log
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Log
argument_list|>
argument_list|()
block|{
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Log
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Log
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Log
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Log
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Log
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|CourseRequestOptionOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:CourseRequestOption)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>required .CourseRequestOption.OptionType type = 1;</code>      * @return Whether the type field is set.      */
name|boolean
name|hasType
parameter_list|()
function_decl|;
comment|/**      *<code>required .CourseRequestOption.OptionType type = 1;</code>      * @return The type.      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|OptionType
name|getType
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Section section = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
name|getSectionList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Section section = 2;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|getSection
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Section section = 2;</code>      */
name|int
name|getSectionCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Section section = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
argument_list|>
name|getSectionOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Section section = 2;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
name|getSectionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Entity instructionalMethod = 3;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|getInstructionalMethodList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Entity instructionalMethod = 3;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getInstructionalMethod
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Entity instructionalMethod = 3;</code>      */
name|int
name|getInstructionalMethodCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Entity instructionalMethod = 3;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getInstructionalMethodOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Entity instructionalMethod = 3;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getInstructionalMethodOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code CourseRequestOption}    */
specifier|public
specifier|static
specifier|final
class|class
name|CourseRequestOption
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:CourseRequestOption)
name|CourseRequestOptionOrBuilder
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
comment|// Use CourseRequestOption.newBuilder() to construct.
specifier|private
name|CourseRequestOption
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|CourseRequestOption
parameter_list|()
block|{
name|type_
operator|=
literal|0
expr_stmt|;
name|section_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|instructionalMethod_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unused"
block|}
argument_list|)
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|newInstance
parameter_list|(
name|UnusedPrivateParameter
name|unused
parameter_list|)
block|{
return|return
operator|new
name|CourseRequestOption
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|CourseRequestOption
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
if|if
condition|(
name|extensionRegistry
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|NullPointerException
argument_list|()
throw|;
block|}
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
case|case
literal|8
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|OptionType
name|value
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|OptionType
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|1
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|type_
operator|=
name|rawValue
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|18
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|section_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|section_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|instructionalMethod_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|instructionalMethod_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|section_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|section_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|instructionalMethod_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|instructionalMethod_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_CourseRequestOption_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_CourseRequestOption_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * Protobuf enum {@code CourseRequestOption.OptionType}      */
specifier|public
enum|enum
name|OptionType
implements|implements
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolMessageEnum
block|{
comment|/**        *<code>ORIGINAL_ENROLLMENT = 0;</code>        */
name|ORIGINAL_ENROLLMENT
argument_list|(
literal|0
argument_list|)
block|,
comment|/**        *<code>REQUEST_PREFERENCE = 1;</code>        */
name|REQUEST_PREFERENCE
argument_list|(
literal|1
argument_list|)
block|,       ;
comment|/**        *<code>ORIGINAL_ENROLLMENT = 0;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|ORIGINAL_ENROLLMENT_VALUE
init|=
literal|0
decl_stmt|;
comment|/**        *<code>REQUEST_PREFERENCE = 1;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|REQUEST_PREFERENCE_VALUE
init|=
literal|1
decl_stmt|;
specifier|public
specifier|final
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|value
return|;
block|}
comment|/**        * @param value The numeric wire value of the corresponding enum entry.        * @return The enum associated with the given numeric wire value.        * @deprecated Use {@link #forNumber(int)} instead.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
name|OptionType
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
return|return
name|forNumber
argument_list|(
name|value
argument_list|)
return|;
block|}
comment|/**        * @param value The numeric wire value of the corresponding enum entry.        * @return The enum associated with the given numeric wire value.        */
specifier|public
specifier|static
name|OptionType
name|forNumber
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|0
case|:
return|return
name|ORIGINAL_ENROLLMENT
return|;
case|case
literal|1
case|:
return|return
name|REQUEST_PREFERENCE
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|OptionType
argument_list|>
name|internalGetValueMap
parameter_list|()
block|{
return|return
name|internalValueMap
return|;
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|OptionType
argument_list|>
name|internalValueMap
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|OptionType
argument_list|>
argument_list|()
block|{
specifier|public
name|OptionType
name|findValueByNumber
parameter_list|(
name|int
name|number
parameter_list|)
block|{
return|return
name|OptionType
operator|.
name|forNumber
argument_list|(
name|number
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|getValueDescriptor
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|ordinal
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getEnumTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
name|OptionType
index|[]
name|VALUES
init|=
name|values
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|OptionType
name|valueOf
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|desc
parameter_list|)
block|{
if|if
condition|(
name|desc
operator|.
name|getType
argument_list|()
operator|!=
name|getDescriptor
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|IllegalArgumentException
argument_list|(
literal|"EnumValueDescriptor is not for this type."
argument_list|)
throw|;
block|}
return|return
name|VALUES
index|[
name|desc
operator|.
name|getIndex
argument_list|()
index|]
return|;
block|}
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|private
name|OptionType
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(enum_scope:CourseRequestOption.OptionType)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|int
name|type_
decl_stmt|;
comment|/**      *<code>required .CourseRequestOption.OptionType type = 1;</code>      * @return Whether the type field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>required .CourseRequestOption.OptionType type = 1;</code>      * @return The type.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|OptionType
name|getType
parameter_list|()
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|OptionType
name|result
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|OptionType
operator|.
name|valueOf
argument_list|(
name|type_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|OptionType
operator|.
name|ORIGINAL_ENROLLMENT
else|:
name|result
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|SECTION_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
name|section_
decl_stmt|;
comment|/**      *<code>repeated .Section section = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
name|getSectionList
parameter_list|()
block|{
return|return
name|section_
return|;
block|}
comment|/**      *<code>repeated .Section section = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
argument_list|>
name|getSectionOrBuilderList
parameter_list|()
block|{
return|return
name|section_
return|;
block|}
comment|/**      *<code>repeated .Section section = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getSectionCount
parameter_list|()
block|{
return|return
name|section_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Section section = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|getSection
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|section_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Section section = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
name|getSectionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|section_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|INSTRUCTIONALMETHOD_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|instructionalMethod_
decl_stmt|;
comment|/**      *<code>repeated .Entity instructionalMethod = 3;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|getInstructionalMethodList
parameter_list|()
block|{
return|return
name|instructionalMethod_
return|;
block|}
comment|/**      *<code>repeated .Entity instructionalMethod = 3;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getInstructionalMethodOrBuilderList
parameter_list|()
block|{
return|return
name|instructionalMethod_
return|;
block|}
comment|/**      *<code>repeated .Entity instructionalMethod = 3;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getInstructionalMethodCount
parameter_list|()
block|{
return|return
name|instructionalMethod_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Entity instructionalMethod = 3;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getInstructionalMethod
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|instructionalMethod_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Entity instructionalMethod = 3;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getInstructionalMethodOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|instructionalMethod_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|hasType
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getSectionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getSection
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getInstructionalMethodCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getInstructionalMethod
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|1
argument_list|,
name|type_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|section_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|section_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|instructionalMethod_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|3
argument_list|,
name|instructionalMethod_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|1
argument_list|,
name|type_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|section_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|section_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|instructionalMethod_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|3
argument_list|,
name|instructionalMethod_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|other
init|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|)
name|obj
decl_stmt|;
if|if
condition|(
name|hasType
argument_list|()
operator|!=
name|other
operator|.
name|hasType
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasType
argument_list|()
condition|)
block|{
if|if
condition|(
name|type_
operator|!=
name|other
operator|.
name|type_
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getSectionList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getSectionList
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|getInstructionalMethodList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getInstructionalMethodList
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasType
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|TYPE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|type_
expr_stmt|;
block|}
if|if
condition|(
name|getSectionCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|SECTION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getSectionList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getInstructionalMethodCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|INSTRUCTIONALMETHOD_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getInstructionalMethodList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code CourseRequestOption}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:CourseRequestOption)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOptionOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_CourseRequestOption_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_CourseRequestOption_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.unitime.timetable.onlinesectioning.OnlineSectioningLog.CourseRequestOption.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getSectionFieldBuilder
argument_list|()
expr_stmt|;
name|getInstructionalMethodFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|type_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|section_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|instructionalMethodBuilder_
operator|==
literal|null
condition|)
block|{
name|instructionalMethod_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
else|else
block|{
name|instructionalMethodBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_CourseRequestOption_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|build
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|result
init|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|type_
operator|=
name|type_
expr_stmt|;
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|section_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|section_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|section_
operator|=
name|section_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|section_
operator|=
name|sectionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|instructionalMethodBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|instructionalMethod_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|instructionalMethod_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|instructionalMethod_
operator|=
name|instructionalMethod_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|instructionalMethod_
operator|=
name|instructionalMethodBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasType
argument_list|()
condition|)
block|{
name|setType
argument_list|(
name|other
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|section_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|section_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|section_
operator|=
name|other
operator|.
name|section_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|section_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|section_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|sectionBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|sectionBuilder_
operator|=
literal|null
expr_stmt|;
name|section_
operator|=
name|other
operator|.
name|section_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|sectionBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getSectionFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|section_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|instructionalMethodBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|instructionalMethod_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|instructionalMethod_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|instructionalMethod_
operator|=
name|other
operator|.
name|instructionalMethod_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureInstructionalMethodIsMutable
argument_list|()
expr_stmt|;
name|instructionalMethod_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|instructionalMethod_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|instructionalMethod_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|instructionalMethodBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|instructionalMethodBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|instructionalMethodBuilder_
operator|=
literal|null
expr_stmt|;
name|instructionalMethod_
operator|=
name|other
operator|.
name|instructionalMethod_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|instructionalMethodBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getInstructionalMethodFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|instructionalMethodBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|instructionalMethod_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasType
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getSectionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getSection
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getInstructionalMethodCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getInstructionalMethod
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|int
name|type_
init|=
literal|0
decl_stmt|;
comment|/**        *<code>required .CourseRequestOption.OptionType type = 1;</code>        * @return Whether the type field is set.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>required .CourseRequestOption.OptionType type = 1;</code>        * @return The type.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|OptionType
name|getType
parameter_list|()
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|OptionType
name|result
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|OptionType
operator|.
name|valueOf
argument_list|(
name|type_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|OptionType
operator|.
name|ORIGINAL_ENROLLMENT
else|:
name|result
return|;
block|}
comment|/**        *<code>required .CourseRequestOption.OptionType type = 1;</code>        * @param value The type to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setType
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|OptionType
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|type_
operator|=
name|value
operator|.
name|getNumber
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .CourseRequestOption.OptionType type = 1;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearType
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|type_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
name|section_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureSectionIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|section_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
argument_list|(
name|section_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
argument_list|>
name|sectionBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
name|getSectionList
parameter_list|()
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|section_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|sectionBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|int
name|getSectionCount
parameter_list|()
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|section_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|sectionBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|getSection
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|section_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|sectionBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|Builder
name|setSection
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|value
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|Builder
name|setSection
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|Builder
name|addSection
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|value
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|Builder
name|addSection
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
name|value
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|Builder
name|addSection
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|Builder
name|addSection
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|Builder
name|addAllSection
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|section_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|Builder
name|clearSection
parameter_list|()
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|section_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|Builder
name|removeSection
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSectionIsMutable
argument_list|()
expr_stmt|;
name|section_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sectionBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|getSectionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getSectionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
name|getSectionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|section_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|sectionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
argument_list|>
name|getSectionOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|sectionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|sectionBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|section_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|addSectionBuilder
parameter_list|()
block|{
return|return
name|getSectionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|addSectionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getSectionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Section section = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
argument_list|>
name|getSectionBuilderList
parameter_list|()
block|{
return|return
name|getSectionFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
argument_list|>
name|getSectionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|sectionBuilder_
operator|==
literal|null
condition|)
block|{
name|sectionBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|SectionOrBuilder
argument_list|>
argument_list|(
name|section_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|section_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|sectionBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|instructionalMethod_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureInstructionalMethodIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|instructionalMethod_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
argument_list|(
name|instructionalMethod_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|instructionalMethodBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Entity instructionalMethod = 3;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|getInstructionalMethodList
parameter_list|()
block|{
if|if
condition|(
name|instructionalMethodBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|instructionalMethod_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|instructionalMethodBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity instructionalMethod = 3;</code>        */
specifier|public
name|int
name|getInstructionalMethodCount
parameter_list|()
block|{
if|if
condition|(
name|instructionalMethodBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|instructionalMethod_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|instructionalMethodBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity instructionalMethod = 3;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|getInstructionalMethod
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|instructionalMethodBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|instructionalMethod_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|instructionalMethodBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity instructionalMethod = 3;</code>        */
specifier|public
name|Builder
name|setInstructionalMethod
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|instructionalMethodBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureInstructionalMethodIsMutable
argument_list|()
expr_stmt|;
name|instructionalMethod_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|instructionalMethodBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity instructionalMethod = 3;</code>        */
specifier|public
name|Builder
name|setInstructionalMethod
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|instructionalMethodBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureInstructionalMethodIsMutable
argument_list|()
expr_stmt|;
name|instructionalMethod_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|instructionalMethodBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity instructionalMethod = 3;</code>        */
specifier|public
name|Builder
name|addInstructionalMethod
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|instructionalMethodBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureInstructionalMethodIsMutable
argument_list|()
expr_stmt|;
name|instructionalMethod_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|instructionalMethodBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity instructionalMethod = 3;</code>        */
specifier|public
name|Builder
name|addInstructionalMethod
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
name|value
parameter_list|)
block|{
if|if
condition|(
name|instructionalMethodBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureInstructionalMethodIsMutable
argument_list|()
expr_stmt|;
name|instructionalMethod_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|instructionalMethodBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity instructionalMethod = 3;</code>        */
specifier|public
name|Builder
name|addInstructionalMethod
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|instructionalMethodBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureInstructionalMethodIsMutable
argument_list|()
expr_stmt|;
name|instructionalMethod_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|instructionalMethodBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity instructionalMethod = 3;</code>        */
specifier|public
name|Builder
name|addInstructionalMethod
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|instructionalMethodBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureInstructionalMethodIsMutable
argument_list|()
expr_stmt|;
name|instructionalMethod_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|instructionalMethodBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity instructionalMethod = 3;</code>        */
specifier|public
name|Builder
name|addAllInstructionalMethod
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|instructionalMethodBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureInstructionalMethodIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|instructionalMethod_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|instructionalMethodBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity instructionalMethod = 3;</code>        */
specifier|public
name|Builder
name|clearInstructionalMethod
parameter_list|()
block|{
if|if
condition|(
name|instructionalMethodBuilder_
operator|==
literal|null
condition|)
block|{
name|instructionalMethod_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|instructionalMethodBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity instructionalMethod = 3;</code>        */
specifier|public
name|Builder
name|removeInstructionalMethod
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|instructionalMethodBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureInstructionalMethodIsMutable
argument_list|()
expr_stmt|;
name|instructionalMethod_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|instructionalMethodBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Entity instructionalMethod = 3;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|getInstructionalMethodBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getInstructionalMethodFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Entity instructionalMethod = 3;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
name|getInstructionalMethodOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|instructionalMethodBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|instructionalMethod_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|instructionalMethodBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity instructionalMethod = 3;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getInstructionalMethodOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|instructionalMethodBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|instructionalMethodBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|instructionalMethod_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Entity instructionalMethod = 3;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|addInstructionalMethodBuilder
parameter_list|()
block|{
return|return
name|getInstructionalMethodFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Entity instructionalMethod = 3;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|addInstructionalMethodBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getInstructionalMethodFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Entity instructionalMethod = 3;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|>
name|getInstructionalMethodBuilderList
parameter_list|()
block|{
return|return
name|getInstructionalMethodFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
name|getInstructionalMethodFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|instructionalMethodBuilder_
operator|==
literal|null
condition|)
block|{
name|instructionalMethodBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|EntityOrBuilder
argument_list|>
argument_list|(
name|instructionalMethod_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|instructionalMethod_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|instructionalMethodBuilder_
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:CourseRequestOption)
block|}
comment|// @@protoc_insertion_point(class_scope:CourseRequestOption)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|CourseRequestOption
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|CourseRequestOption
argument_list|>
argument_list|()
block|{
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|CourseRequestOption
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|CourseRequestOption
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|CourseRequestOption
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|CourseRequestOption
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|ExportedLogOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:ExportedLog)
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>required string student = 1;</code>      * @return Whether the student field is set.      */
name|boolean
name|hasStudent
parameter_list|()
function_decl|;
comment|/**      *<code>required string student = 1;</code>      * @return The student.      */
name|java
operator|.
name|lang
operator|.
name|String
name|getStudent
parameter_list|()
function_decl|;
comment|/**      *<code>required string student = 1;</code>      * @return The bytes for student.      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getStudentBytes
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Action action = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|>
name|getActionList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Action action = 2;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|getAction
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Action action = 2;</code>      */
name|int
name|getActionCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Action action = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
argument_list|>
name|getActionOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Action action = 2;</code>      */
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
name|getActionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code ExportedLog}    */
specifier|public
specifier|static
specifier|final
class|class
name|ExportedLog
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:ExportedLog)
name|ExportedLogOrBuilder
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
comment|// Use ExportedLog.newBuilder() to construct.
specifier|private
name|ExportedLog
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ExportedLog
parameter_list|()
block|{
name|student_
operator|=
literal|""
expr_stmt|;
name|action_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unused"
block|}
argument_list|)
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|newInstance
parameter_list|(
name|UnusedPrivateParameter
name|unused
parameter_list|)
block|{
return|return
operator|new
name|ExportedLog
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|ExportedLog
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
if|if
condition|(
name|extensionRegistry
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|NullPointerException
argument_list|()
throw|;
block|}
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
case|case
literal|10
case|:
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|student_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|action_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|action_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|action_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|action_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_ExportedLog_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_ExportedLog_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|STUDENT_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|student_
decl_stmt|;
comment|/**      *<code>required string student = 1;</code>      * @return Whether the student field is set.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|hasStudent
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**      *<code>required string student = 1;</code>      * @return The student.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getStudent
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|student_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|student_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string student = 1;</code>      * @return The bytes for student.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getStudentBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|student_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|student_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|ACTION_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|>
name|action_
decl_stmt|;
comment|/**      *<code>repeated .Action action = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|>
name|getActionList
parameter_list|()
block|{
return|return
name|action_
return|;
block|}
comment|/**      *<code>repeated .Action action = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
argument_list|>
name|getActionOrBuilderList
parameter_list|()
block|{
return|return
name|action_
return|;
block|}
comment|/**      *<code>repeated .Action action = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getActionCount
parameter_list|()
block|{
return|return
name|action_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Action action = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|getAction
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|action_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Action action = 2;</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
name|getActionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|action_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|hasStudent
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getActionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getAction
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|1
argument_list|,
name|student_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|action_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|action_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|1
argument_list|,
name|student_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|action_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|action_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|other
init|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
operator|)
name|obj
decl_stmt|;
if|if
condition|(
name|hasStudent
argument_list|()
operator|!=
name|other
operator|.
name|hasStudent
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasStudent
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getStudent
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getStudent
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getActionList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getActionList
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasStudent
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|STUDENT_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getStudent
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getActionCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|ACTION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getActionList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|parseFrom
parameter_list|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code ExportedLog}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:ExportedLog)
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLogOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_ExportedLog_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_ExportedLog_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.unitime.timetable.onlinesectioning.OnlineSectioningLog.ExportedLog.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getActionFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|student_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
name|action_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|internal_static_ExportedLog_descriptor
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|build
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|result
init|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|student_
operator|=
name|student_
expr_stmt|;
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|action_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|action_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|action_
operator|=
name|action_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|action_
operator|=
name|actionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value
parameter_list|)
block|{
return|return
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasStudent
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|student_
operator|=
name|other
operator|.
name|student_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|action_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|action_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|action_
operator|=
name|other
operator|.
name|action_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureActionIsMutable
argument_list|()
expr_stmt|;
name|action_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|action_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|action_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|actionBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|actionBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|actionBuilder_
operator|=
literal|null
expr_stmt|;
name|action_
operator|=
name|other
operator|.
name|action_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|actionBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getActionFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|action_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasStudent
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getActionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getAction
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|student_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string student = 1;</code>        * @return Whether the student field is set.        */
specifier|public
name|boolean
name|hasStudent
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|!=
literal|0
operator|)
return|;
block|}
comment|/**        *<code>required string student = 1;</code>        * @return The student.        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getStudent
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|student_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|student_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string student = 1;</code>        * @return The bytes for student.        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getStudentBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|student_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|student_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string student = 1;</code>        * @param value The student to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setStudent
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|student_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string student = 1;</code>        * @return This builder for chaining.        */
specifier|public
name|Builder
name|clearStudent
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|student_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getStudent
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string student = 1;</code>        * @param value The bytes for student to set.        * @return This builder for chaining.        */
specifier|public
name|Builder
name|setStudentBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|student_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|>
name|action_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureActionIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
condition|)
block|{
name|action_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|>
argument_list|(
name|action_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
argument_list|>
name|actionBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Action action = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|>
name|getActionList
parameter_list|()
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|action_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|actionBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Action action = 2;</code>        */
specifier|public
name|int
name|getActionCount
parameter_list|()
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|action_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|actionBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Action action = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|getAction
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|action_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|actionBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Action action = 2;</code>        */
specifier|public
name|Builder
name|setAction
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|value
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureActionIsMutable
argument_list|()
expr_stmt|;
name|action_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Action action = 2;</code>        */
specifier|public
name|Builder
name|setAction
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureActionIsMutable
argument_list|()
expr_stmt|;
name|action_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Action action = 2;</code>        */
specifier|public
name|Builder
name|addAction
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|value
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureActionIsMutable
argument_list|()
expr_stmt|;
name|action_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Action action = 2;</code>        */
specifier|public
name|Builder
name|addAction
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
name|value
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureActionIsMutable
argument_list|()
expr_stmt|;
name|action_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Action action = 2;</code>        */
specifier|public
name|Builder
name|addAction
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureActionIsMutable
argument_list|()
expr_stmt|;
name|action_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Action action = 2;</code>        */
specifier|public
name|Builder
name|addAction
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureActionIsMutable
argument_list|()
expr_stmt|;
name|action_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Action action = 2;</code>        */
specifier|public
name|Builder
name|addAllAction
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureActionIsMutable
argument_list|()
expr_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|action_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Action action = 2;</code>        */
specifier|public
name|Builder
name|clearAction
parameter_list|()
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
name|action_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Action action = 2;</code>        */
specifier|public
name|Builder
name|removeAction
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureActionIsMutable
argument_list|()
expr_stmt|;
name|action_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|actionBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Action action = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
name|getActionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getActionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Action action = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
name|getActionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|action_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|actionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Action action = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
argument_list|>
name|getActionOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|actionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|actionBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|action_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Action action = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
name|addActionBuilder
parameter_list|()
block|{
return|return
name|getActionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Action action = 2;</code>        */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
name|addActionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getActionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Action action = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
argument_list|>
name|getActionBuilderList
parameter_list|()
block|{
return|return
name|getActionFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
argument_list|>
name|getActionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|actionBuilder_
operator|==
literal|null
condition|)
block|{
name|actionBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ActionOrBuilder
argument_list|>
argument_list|(
name|action_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|!=
literal|0
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|action_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|actionBuilder_
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:ExportedLog)
block|}
comment|// @@protoc_insertion_point(class_scope:ExportedLog)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ExportedLog
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|ExportedLog
argument_list|>
argument_list|()
block|{
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|ExportedLog
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|ExportedLog
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ExportedLog
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ExportedLog
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|ExportedLog
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_Entity_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_Entity_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_Time_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_Time_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_Section_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_Section_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_Request_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_Request_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_Enrollment_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_Enrollment_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_Action_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_Action_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_Message_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_Message_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_Property_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_Property_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_Log_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_Log_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_CourseRequestOption_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_CourseRequestOption_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_ExportedLog_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_ExportedLog_fieldAccessorTable
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|descriptor
return|;
block|}
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|descriptor
decl_stmt|;
static|static
block|{
name|java
operator|.
name|lang
operator|.
name|String
index|[]
name|descriptorData
init|=
block|{
literal|"\n$JavaSource/OnlineSectioningLog.proto\"\355"
operator|+
literal|"\002\n\006Entity\022\021\n\tunique_id\030\001 \001(\003\022 \n\004type\030\002 \001"
operator|+
literal|"(\0162\022.Entity.EntityType\022\023\n\013external_id\030\003 "
operator|+
literal|"\001(\t\022\014\n\004name\030\004 \001(\t\022\034\n\tparameter\030\005 \003(\0132\t.P"
operator|+
literal|"roperty\"\354\001\n\nEntityType\022\t\n\005CLAZZ\020\000\022\n\n\006COU"
operator|+
literal|"RSE\020\001\022\014\n\010LOCATION\020\002\022\016\n\nINSTRUCTOR\020\003\022\013\n\007S"
operator|+
literal|"TUDENT\020\004\022\014\n\010OFFERING\020\005\022\017\n\013RESERVATION\020\006\022"
operator|+
literal|"\032\n\026INDIVIDUAL_RESERVATION\020\007\022\025\n\021GROUP_RES"
operator|+
literal|"ERVATION\020\010\022\032\n\026CURRICULUM_RESERVATION\020\t\022\026"
operator|+
literal|"\n\022COURSE_RESERVATION\020\n\022\013\n\007MANAGER\020\013\022\t\n\005O"
operator|+
literal|"THER\020\014\"m\n\004Time\022\014\n\004days\030\001 \002(\005\022\r\n\005start\030\002 "
operator|+
literal|"\002(\005\022\016\n\006length\030\003 \002(\005\022\017\n\007pattern\030\004 \001(\t\022\'\n\n"
operator|+
literal|"preference\030\005 \001(\0162\023.Section.Preference\"\310\002"
operator|+
literal|"\n\007Section\022\026\n\005clazz\030\001 \001(\0132\007.Entity\022\023\n\004tim"
operator|+
literal|"e\030\002 \001(\0132\005.Time\022\033\n\ninstructor\030\003 \003(\0132\007.Ent"
operator|+
literal|"ity\022\031\n\010location\030\004 \003(\0132\007.Entity\022\'\n\nprefer"
operator|+
literal|"ence\030\005 \001(\0162\023.Section.Preference\022\027\n\006cours"
operator|+
literal|"e\030\006 \001(\0132\007.Entity\022\034\n\013reservation\030\007 \001(\0132\007."
operator|+
literal|"Entity\022\022\n\ntime_stamp\030\010 \001(\003\022\030\n\007subpart\030\t "
operator|+
literal|"\001(\0132\007.Entity\"J\n\nPreference\022\014\n\010REQUIRED\020\000"
operator|+
literal|"\022\r\n\tPREFERRED\020\001\022\014\n\010SELECTED\020\002\022\007\n\003ADD\020\003\022\010"
operator|+
literal|"\n\004DROP\020\004\"\277\002\n\007Request\022\n\n\002id\030\001 \001(\003\022\020\n\010prio"
operator|+
literal|"rity\030\002 \002(\005\022\032\n\013alternative\030\003 \001(\010:\005false\022\030"
operator|+
literal|"\n\tfree_time\030\004 \003(\0132\005.Time\022\027\n\006course\030\005 \003(\013"
operator|+
literal|"2\007.Entity\022\031\n\007section\030\006 \003(\0132\010.Section\022\022\n\n"
operator|+
literal|"time_stamp\030\010 \001(\003\022\030\n\twait_list\030\t \001(\010:\005fal"
operator|+
literal|"se\022\027\n\010critical\030\n \001(\010:\005false\022\026\n\007no_subs\030\013"
operator|+
literal|" \001(\010:\005false\022\035\n\025waitlisted_time_stamp\030\014 \001"
operator|+
literal|"(\003\022\030\n\timportant\030\r \001(\010:\005false\022\024\n\005vital\030\016 "
operator|+
literal|"\001(\010:\005false\"\323\001\n\nEnrollment\022(\n\004type\030\001 \002(\0162"
operator|+
literal|"\032.Enrollment.EnrollmentType\022\031\n\007section\030\002"
operator|+
literal|" \003(\0132\010.Section\022\r\n\005value\030\003 \001(\001\"q\n\016Enrollm"
operator|+
literal|"entType\022\r\n\tREQUESTED\020\000\022\014\n\010COMPUTED\020\001\022\014\n\010"
operator|+
literal|"PREVIOUS\020\002\022\n\n\006STORED\020\003\022\014\n\010APPROVED\020\004\022\014\n\010"
operator|+
literal|"REJECTED\020\005\022\014\n\010EXTERNAL\020\006\"\371\003\n\006Action\022\021\n\to"
operator|+
literal|"peration\030\001 \002(\t\022\030\n\007session\030\002 \002(\0132\007.Entity"
operator|+
literal|"\022\030\n\007student\030\003 \001(\0132\007.Entity\022\022\n\nstart_time"
operator|+
literal|"\030\004 \001(\003\022\020\n\010end_time\030\005 \001(\003\022\020\n\010cpu_time\030\006 \001"
operator|+
literal|"(\003\022\031\n\007request\030\007 \003(\0132\010.Request\022\037\n\nenrollm"
operator|+
literal|"ent\030\010 \003(\0132\013.Enrollment\022\026\n\005other\030\t \003(\0132\007."
operator|+
literal|"Entity\022\031\n\007message\030\n \003(\0132\010.Message\022\"\n\006res"
operator|+
literal|"ult\030\013 \001(\0162\022.Action.ResultType\022\025\n\004user\030\014 "
operator|+
literal|"\001(\0132\007.Entity\022\031\n\006option\030\r \003(\0132\t.Property\022"
operator|+
literal|"\024\n\014api_get_time\030\016 \001(\003\022\025\n\rapi_post_time\030\017"
operator|+
literal|" \001(\003\022\025\n\rapi_exception\030\020 \001(\t\022 \n\016recommend"
operator|+
literal|"ation\030\021 \003(\0132\010.Request\"E\n\nResultType\022\013\n\007S"
operator|+
literal|"UCCESS\020\000\022\013\n\007FAILURE\020\001\022\010\n\004TRUE\020\002\022\t\n\005FALSE"
operator|+
literal|"\020\003\022\010\n\004NULL\020\004\"\233\001\n\007Message\022\035\n\005level\030\001 \002(\0162"
operator|+
literal|"\016.Message.Level\022\014\n\004text\030\002 \002(\t\022\021\n\texcepti"
operator|+
literal|"on\030\003 \001(\t\022\022\n\ntime_stamp\030\004 \001(\003\"<\n\005Level\022\t\n"
operator|+
literal|"\005DEBUG\020\000\022\010\n\004INFO\020\001\022\010\n\004WARN\020\002\022\t\n\005ERROR\020\003\022"
operator|+
literal|"\t\n\005FATAL\020\004\"&\n\010Property\022\013\n\003key\030\001 \002(\t\022\r\n\005v"
operator|+
literal|"alue\030\002 \002(\t\"9\n\003Log\022\027\n\006action\030\001 \003(\0132\007.Acti"
operator|+
literal|"on\022\031\n\007message\030\002 \003(\0132\010.Message\"\304\001\n\023Course"
operator|+
literal|"RequestOption\022-\n\004type\030\001 \002(\0162\037.CourseRequ"
operator|+
literal|"estOption.OptionType\022\031\n\007section\030\002 \003(\0132\010."
operator|+
literal|"Section\022$\n\023instructionalMethod\030\003 \003(\0132\007.E"
operator|+
literal|"ntity\"=\n\nOptionType\022\027\n\023ORIGINAL_ENROLLME"
operator|+
literal|"NT\020\000\022\026\n\022REQUEST_PREFERENCE\020\001\"7\n\013Exported"
operator|+
literal|"Log\022\017\n\007student\030\001 \002(\t\022\027\n\006action\030\002 \003(\0132\007.A"
operator|+
literal|"ctionB(\n&org.unitime.timetable.onlinesec"
operator|+
literal|"tioning"
block|}
decl_stmt|;
name|descriptor
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|internalBuildGeneratedFileFrom
argument_list|(
name|descriptorData
argument_list|,
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
index|[]
block|{         }
argument_list|)
expr_stmt|;
name|internal_static_Entity_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_Entity_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_Entity_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"UniqueId"
block|,
literal|"Type"
block|,
literal|"ExternalId"
block|,
literal|"Name"
block|,
literal|"Parameter"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_Time_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|internal_static_Time_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_Time_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Days"
block|,
literal|"Start"
block|,
literal|"Length"
block|,
literal|"Pattern"
block|,
literal|"Preference"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_Section_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|internal_static_Section_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_Section_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Clazz"
block|,
literal|"Time"
block|,
literal|"Instructor"
block|,
literal|"Location"
block|,
literal|"Preference"
block|,
literal|"Course"
block|,
literal|"Reservation"
block|,
literal|"TimeStamp"
block|,
literal|"Subpart"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_Request_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|internal_static_Request_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_Request_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Id"
block|,
literal|"Priority"
block|,
literal|"Alternative"
block|,
literal|"FreeTime"
block|,
literal|"Course"
block|,
literal|"Section"
block|,
literal|"TimeStamp"
block|,
literal|"WaitList"
block|,
literal|"Critical"
block|,
literal|"NoSubs"
block|,
literal|"WaitlistedTimeStamp"
block|,
literal|"Important"
block|,
literal|"Vital"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_Enrollment_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|internal_static_Enrollment_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_Enrollment_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Type"
block|,
literal|"Section"
block|,
literal|"Value"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_Action_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|internal_static_Action_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_Action_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Operation"
block|,
literal|"Session"
block|,
literal|"Student"
block|,
literal|"StartTime"
block|,
literal|"EndTime"
block|,
literal|"CpuTime"
block|,
literal|"Request"
block|,
literal|"Enrollment"
block|,
literal|"Other"
block|,
literal|"Message"
block|,
literal|"Result"
block|,
literal|"User"
block|,
literal|"Option"
block|,
literal|"ApiGetTime"
block|,
literal|"ApiPostTime"
block|,
literal|"ApiException"
block|,
literal|"Recommendation"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_Message_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|internal_static_Message_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_Message_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Level"
block|,
literal|"Text"
block|,
literal|"Exception"
block|,
literal|"TimeStamp"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_Property_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|7
argument_list|)
expr_stmt|;
name|internal_static_Property_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_Property_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Key"
block|,
literal|"Value"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_Log_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|8
argument_list|)
expr_stmt|;
name|internal_static_Log_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_Log_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Action"
block|,
literal|"Message"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_CourseRequestOption_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|9
argument_list|)
expr_stmt|;
name|internal_static_CourseRequestOption_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_CourseRequestOption_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Type"
block|,
literal|"Section"
block|,
literal|"InstructionalMethod"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_ExportedLog_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|internal_static_ExportedLog_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_ExportedLog_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Student"
block|,
literal|"Action"
block|, }
argument_list|)
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(outer_class_scope)
block|}
end_class

end_unit

