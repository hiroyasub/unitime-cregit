begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Externalizable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ObjectInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ObjectOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|commons
operator|.
name|marshall
operator|.
name|Externalizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|commons
operator|.
name|marshall
operator|.
name|SerializeWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|StudentNote
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|SerializeWith
argument_list|(
name|XStudentNote
operator|.
name|XStudentNoteSerializer
operator|.
name|class
argument_list|)
specifier|public
class|class
name|XStudentNote
implements|implements
name|Serializable
implements|,
name|Comparable
argument_list|<
name|XStudentNote
argument_list|>
implements|,
name|Externalizable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iNote
decl_stmt|;
specifier|private
name|String
name|iUserId
decl_stmt|;
specifier|private
name|Date
name|iTimeStamp
decl_stmt|;
specifier|public
name|XStudentNote
parameter_list|(
name|StudentNote
name|note
parameter_list|)
block|{
name|iId
operator|=
name|note
operator|.
name|getUniqueId
argument_list|()
expr_stmt|;
name|iNote
operator|=
name|note
operator|.
name|getTextNote
argument_list|()
expr_stmt|;
name|iUserId
operator|=
name|note
operator|.
name|getUserId
argument_list|()
expr_stmt|;
name|iTimeStamp
operator|=
name|note
operator|.
name|getTimeStamp
argument_list|()
expr_stmt|;
block|}
specifier|public
name|XStudentNote
parameter_list|(
name|ObjectInput
name|in
parameter_list|)
throws|throws
name|IOException
throws|,
name|ClassNotFoundException
block|{
name|readExternal
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Long
name|getNoteId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|String
name|getNote
parameter_list|()
block|{
return|return
name|iNote
return|;
block|}
specifier|public
name|boolean
name|hasNote
parameter_list|()
block|{
return|return
name|iNote
operator|!=
literal|null
operator|&&
operator|!
name|iNote
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getUserId
parameter_list|()
block|{
return|return
name|iUserId
return|;
block|}
specifier|public
name|Date
name|getTimeStamp
parameter_list|()
block|{
return|return
name|iTimeStamp
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
operator|(
name|int
operator|)
operator|(
name|getNoteId
argument_list|()
operator|^
operator|(
name|getNoteId
argument_list|()
operator|>>>
literal|32
operator|)
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|XStudentNote
name|note
parameter_list|)
block|{
name|int
name|cmp
init|=
name|getTimeStamp
argument_list|()
operator|.
name|compareTo
argument_list|(
name|note
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
return|return
name|getNoteId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|note
operator|.
name|getNoteId
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getNote
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|readExternal
parameter_list|(
name|ObjectInput
name|in
parameter_list|)
throws|throws
name|IOException
throws|,
name|ClassNotFoundException
block|{
name|long
name|id
init|=
name|in
operator|.
name|readLong
argument_list|()
decl_stmt|;
name|iId
operator|=
operator|(
name|id
operator|<
literal|0
condition|?
literal|null
else|:
name|Long
operator|.
name|valueOf
argument_list|(
name|id
argument_list|)
operator|)
expr_stmt|;
name|iNote
operator|=
operator|(
name|String
operator|)
name|in
operator|.
name|readObject
argument_list|()
expr_stmt|;
name|iUserId
operator|=
operator|(
name|String
operator|)
name|in
operator|.
name|readObject
argument_list|()
expr_stmt|;
name|long
name|ts
init|=
name|in
operator|.
name|readLong
argument_list|()
decl_stmt|;
name|iTimeStamp
operator|=
operator|(
name|ts
operator|==
literal|0l
condition|?
literal|null
else|:
operator|new
name|Date
argument_list|(
name|ts
argument_list|)
operator|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|writeExternal
parameter_list|(
name|ObjectOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeLong
argument_list|(
name|iId
operator|==
literal|null
condition|?
operator|-
literal|1l
else|:
name|iId
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeObject
argument_list|(
name|iNote
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeObject
argument_list|(
name|iUserId
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|iTimeStamp
operator|==
literal|null
condition|?
literal|0l
else|:
name|iTimeStamp
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|XStudentNoteSerializer
implements|implements
name|Externalizer
argument_list|<
name|XStudentNote
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|writeObject
parameter_list|(
name|ObjectOutput
name|output
parameter_list|,
name|XStudentNote
name|object
parameter_list|)
throws|throws
name|IOException
block|{
name|object
operator|.
name|writeExternal
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|XStudentNote
name|readObject
parameter_list|(
name|ObjectInput
name|input
parameter_list|)
throws|throws
name|IOException
throws|,
name|ClassNotFoundException
block|{
return|return
operator|new
name|XStudentNote
argument_list|(
name|input
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

