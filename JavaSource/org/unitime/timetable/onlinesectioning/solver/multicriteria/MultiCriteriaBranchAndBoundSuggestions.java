begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.3 (University Timetabling Application)  * Copyright (C) 2011, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|solver
operator|.
name|multicriteria
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|cpsolver
operator|.
name|ifs
operator|.
name|util
operator|.
name|DataProperties
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|cpsolver
operator|.
name|studentsct
operator|.
name|StudentSectioningModel
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|cpsolver
operator|.
name|studentsct
operator|.
name|model
operator|.
name|CourseRequest
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|cpsolver
operator|.
name|studentsct
operator|.
name|model
operator|.
name|FreeTimeRequest
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|cpsolver
operator|.
name|studentsct
operator|.
name|model
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|cpsolver
operator|.
name|studentsct
operator|.
name|model
operator|.
name|Section
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|cpsolver
operator|.
name|studentsct
operator|.
name|model
operator|.
name|Student
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|solver
operator|.
name|SuggestionsBranchAndBound
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|solver
operator|.
name|multicriteria
operator|.
name|MultiCriteriaBranchAndBoundSelection
operator|.
name|SelectionCriterion
import|;
end_import

begin_class
specifier|public
class|class
name|MultiCriteriaBranchAndBoundSuggestions
extends|extends
name|SuggestionsBranchAndBound
block|{
specifier|public
name|MultiCriteriaBranchAndBoundSuggestions
parameter_list|(
name|DataProperties
name|properties
parameter_list|,
name|Student
name|student
parameter_list|,
name|Hashtable
argument_list|<
name|CourseRequest
argument_list|,
name|Set
argument_list|<
name|Section
argument_list|>
argument_list|>
name|requiredSections
parameter_list|,
name|Set
argument_list|<
name|FreeTimeRequest
argument_list|>
name|requiredFreeTimes
parameter_list|,
name|Hashtable
argument_list|<
name|CourseRequest
argument_list|,
name|Set
argument_list|<
name|Section
argument_list|>
argument_list|>
name|preferredSections
parameter_list|,
name|Request
name|selectedRequest
parameter_list|,
name|Section
name|selectedSection
parameter_list|,
name|String
name|filter
parameter_list|,
name|Date
name|firstDate
parameter_list|)
block|{
name|super
argument_list|(
name|properties
argument_list|,
name|student
argument_list|,
name|requiredSections
argument_list|,
name|requiredFreeTimes
argument_list|,
name|preferredSections
argument_list|,
name|selectedRequest
argument_list|,
name|selectedSection
argument_list|,
name|filter
argument_list|,
name|firstDate
argument_list|)
expr_stmt|;
name|iComparator
operator|=
operator|new
name|OnlineSectioningCriterion
argument_list|(
name|student
argument_list|,
operator|(
name|StudentSectioningModel
operator|)
name|selectedRequest
operator|.
name|getModel
argument_list|()
argument_list|,
name|preferredSections
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|int
name|compare
parameter_list|(
name|Suggestion
name|s1
parameter_list|,
name|Suggestion
name|s2
parameter_list|)
block|{
return|return
operator|(
operator|(
name|SelectionCriterion
operator|)
name|iComparator
operator|)
operator|.
name|compare
argument_list|(
name|s1
operator|.
name|getEnrollments
argument_list|()
argument_list|,
name|s2
operator|.
name|getEnrollments
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

