begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|advisors
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|server
operator|.
name|DayCode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SectioningException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|RequestedCourse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|AdvisingStudentDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|AdvisorCourseRequestSubmission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|AdvisorCourseRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|FreeTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Student
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|StudentSectioningStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|CourseOfferingDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|StudentDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningServer
operator|.
name|Lock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|custom
operator|.
name|CustomCriticalCoursesHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|custom
operator|.
name|CriticalCoursesProvider
operator|.
name|CriticalCourses
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|model
operator|.
name|XStudent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|model
operator|.
name|XStudentId
import|;
end_import

begin_import
import|import
name|com
operator|.
name|lowagie
operator|.
name|text
operator|.
name|DocumentException
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|AdvisorCourseRequestsSubmit
implements|implements
name|OnlineSectioningAction
argument_list|<
name|AdvisorCourseRequestSubmission
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|protected
specifier|static
name|StudentSectioningMessages
name|MSG
init|=
name|Localization
operator|.
name|create
argument_list|(
name|StudentSectioningMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
name|StudentSectioningConstants
name|CONST
init|=
name|Localization
operator|.
name|create
argument_list|(
name|StudentSectioningConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|AdvisingStudentDetails
name|iDetails
decl_stmt|;
specifier|public
name|AdvisorCourseRequestsSubmit
name|withDetails
parameter_list|(
name|AdvisingStudentDetails
name|details
parameter_list|)
block|{
name|iDetails
operator|=
name|details
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|AdvisingStudentDetails
name|getDetails
parameter_list|()
block|{
return|return
name|iDetails
return|;
block|}
annotation|@
name|Override
specifier|public
name|AdvisorCourseRequestSubmission
name|execute
parameter_list|(
name|OnlineSectioningServer
name|server
parameter_list|,
name|OnlineSectioningHelper
name|helper
parameter_list|)
block|{
try|try
block|{
name|AdvisorCourseRequestSubmission
name|ret
init|=
operator|new
name|AdvisorCourseRequestSubmission
argument_list|()
decl_stmt|;
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
name|action
init|=
name|helper
operator|.
name|addAction
argument_list|(
name|this
argument_list|,
name|server
operator|.
name|getAcademicSession
argument_list|()
argument_list|)
decl_stmt|;
name|action
operator|.
name|setStudent
argument_list|(
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|newBuilder
argument_list|()
operator|.
name|setUniqueId
argument_list|(
name|getDetails
argument_list|()
operator|.
name|getStudentId
argument_list|()
argument_list|)
operator|.
name|setExternalId
argument_list|(
name|getDetails
argument_list|()
operator|.
name|getStudentExternalId
argument_list|()
argument_list|)
operator|.
name|setName
argument_list|(
name|getDetails
argument_list|()
operator|.
name|getStudentName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|getDetails
argument_list|()
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
operator|&&
name|getDetails
argument_list|()
operator|.
name|getStatus
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|action
operator|.
name|addOther
argument_list|(
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|newBuilder
argument_list|()
operator|.
name|setUniqueId
argument_list|(
name|getDetails
argument_list|()
operator|.
name|getStatus
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|.
name|setName
argument_list|(
name|getDetails
argument_list|()
operator|.
name|getStatus
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|)
operator|.
name|setExternalId
argument_list|(
name|getDetails
argument_list|()
operator|.
name|getStatus
argument_list|()
operator|.
name|getReference
argument_list|()
argument_list|)
operator|.
name|setType
argument_list|(
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|EntityType
operator|.
name|OTHER
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getDetails
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|!=
literal|null
condition|)
for|for
control|(
name|OnlineSectioningLog
operator|.
name|Request
name|r
range|:
name|OnlineSectioningHelper
operator|.
name|toProto
argument_list|(
name|getDetails
argument_list|()
operator|.
name|getRequest
argument_list|()
argument_list|)
control|)
name|action
operator|.
name|addRequest
argument_list|(
name|r
argument_list|)
expr_stmt|;
if|if
condition|(
name|getDetails
argument_list|()
operator|.
name|isCanUpdate
argument_list|()
condition|)
block|{
name|Date
name|ts
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|Lock
name|lock
init|=
name|server
operator|.
name|lockStudent
argument_list|(
name|getDetails
argument_list|()
operator|.
name|getStudentId
argument_list|()
argument_list|,
literal|null
argument_list|,
name|name
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|helper
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
name|XStudent
name|student
init|=
name|server
operator|.
name|getStudent
argument_list|(
name|getDetails
argument_list|()
operator|.
name|getStudentId
argument_list|()
argument_list|)
decl_stmt|;
name|Student
name|dbStudent
init|=
name|StudentDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|getDetails
argument_list|()
operator|.
name|getStudentId
argument_list|()
argument_list|,
name|helper
operator|.
name|getHibSession
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|dbStudent
operator|!=
literal|null
condition|)
block|{
name|CriticalCourses
name|critical
init|=
literal|null
decl_stmt|;
try|try
block|{
if|if
condition|(
name|CustomCriticalCoursesHolder
operator|.
name|hasProvider
argument_list|()
condition|)
name|critical
operator|=
name|CustomCriticalCoursesHolder
operator|.
name|getProvider
argument_list|()
operator|.
name|getCriticalCourses
argument_list|(
name|server
argument_list|,
name|helper
argument_list|,
operator|new
name|XStudentId
argument_list|(
name|dbStudent
argument_list|,
name|helper
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|helper
operator|.
name|warn
argument_list|(
literal|"Failed to lookup critical courses: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|AdvisorCourseRequest
argument_list|>
name|acrs
init|=
operator|new
name|ArrayList
argument_list|<
name|AdvisorCourseRequest
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|dbStudent
operator|.
name|getAdvisorCourseRequests
argument_list|()
operator|==
literal|null
condition|)
block|{
name|dbStudent
operator|.
name|setAdvisorCourseRequests
argument_list|(
operator|new
name|HashSet
argument_list|<
name|AdvisorCourseRequest
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|acrs
operator|.
name|addAll
argument_list|(
name|dbStudent
operator|.
name|getAdvisorCourseRequests
argument_list|()
argument_list|)
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|acrs
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getDetails
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|int
name|priority
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Request
name|request
range|:
name|getDetails
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getCourses
argument_list|()
control|)
block|{
if|if
condition|(
name|request
operator|.
name|hasRequestedCourse
argument_list|()
condition|)
block|{
name|int
name|alt
init|=
literal|0
decl_stmt|;
for|for
control|(
name|RequestedCourse
name|rc
range|:
name|request
operator|.
name|getRequestedCourse
argument_list|()
control|)
block|{
if|if
condition|(
name|rc
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
for|for
control|(
name|CourseRequestInterface
operator|.
name|FreeTime
name|ft
range|:
name|rc
operator|.
name|getFreeTime
argument_list|()
control|)
block|{
name|AdvisorCourseRequest
name|acr
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|AdvisorCourseRequest
argument_list|>
name|i
init|=
name|acrs
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|AdvisorCourseRequest
name|adept
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|adept
operator|.
name|getFreeTime
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|acr
operator|=
name|adept
expr_stmt|;
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|acr
operator|==
literal|null
condition|)
block|{
name|acr
operator|=
operator|new
name|AdvisorCourseRequest
argument_list|()
expr_stmt|;
name|acr
operator|.
name|setStudent
argument_list|(
name|dbStudent
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setChangedBy
argument_list|(
name|helper
operator|.
name|getUser
argument_list|()
operator|.
name|getExternalId
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setTimestamp
argument_list|(
name|ts
argument_list|)
expr_stmt|;
name|dbStudent
operator|.
name|getAdvisorCourseRequests
argument_list|()
operator|.
name|add
argument_list|(
name|acr
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|acr
operator|.
name|getPreferences
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|acr
operator|.
name|getPreferences
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|FreeTime
name|free
init|=
name|acr
operator|.
name|getFreeTime
argument_list|()
decl_stmt|;
if|if
condition|(
name|free
operator|==
literal|null
condition|)
block|{
name|free
operator|=
operator|new
name|FreeTime
argument_list|()
expr_stmt|;
name|acr
operator|.
name|setFreeTime
argument_list|(
name|free
argument_list|)
expr_stmt|;
block|}
name|free
operator|.
name|setCategory
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|free
operator|.
name|setDayCode
argument_list|(
name|DayCode
operator|.
name|toInt
argument_list|(
name|DayCode
operator|.
name|toDayCodes
argument_list|(
name|ft
operator|.
name|getDays
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|free
operator|.
name|setStartSlot
argument_list|(
name|ft
operator|.
name|getStart
argument_list|()
argument_list|)
expr_stmt|;
name|free
operator|.
name|setLength
argument_list|(
name|ft
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|free
operator|.
name|setSession
argument_list|(
name|dbStudent
operator|.
name|getSession
argument_list|()
argument_list|)
expr_stmt|;
name|free
operator|.
name|setName
argument_list|(
name|ft
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setCourseOffering
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setCourse
argument_list|(
name|CONST
operator|.
name|freePrefix
argument_list|()
operator|+
name|ft
operator|.
name|toString
argument_list|(
name|CONST
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONST
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setPriority
argument_list|(
name|priority
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setAlternative
argument_list|(
name|alt
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setSubstitute
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|alt
operator|==
literal|0
condition|)
block|{
name|acr
operator|.
name|setCredit
argument_list|(
name|request
operator|.
name|getAdvisorCredit
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setNotes
argument_list|(
name|request
operator|.
name|getAdvisorNote
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|acr
operator|.
name|setCredit
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setNotes
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
name|acr
operator|.
name|setCritical
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|helper
operator|.
name|getHibSession
argument_list|()
operator|.
name|saveOrUpdate
argument_list|(
name|free
argument_list|)
expr_stmt|;
name|helper
operator|.
name|getHibSession
argument_list|()
operator|.
name|saveOrUpdate
argument_list|(
name|acr
argument_list|)
expr_stmt|;
name|alt
operator|++
expr_stmt|;
block|}
continue|continue;
block|}
name|AdvisorCourseRequest
name|acr
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|AdvisorCourseRequest
argument_list|>
name|i
init|=
name|acrs
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|AdvisorCourseRequest
name|adept
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|hasCourseId
argument_list|()
operator|&&
name|adept
operator|.
name|getCourseOffering
argument_list|()
operator|!=
literal|null
operator|&&
name|rc
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|adept
operator|.
name|getCourseOffering
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
condition|)
block|{
name|acr
operator|=
name|adept
expr_stmt|;
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
break|break;
block|}
if|else if
condition|(
operator|!
name|rc
operator|.
name|hasCourseId
argument_list|()
operator|&&
name|adept
operator|.
name|getCourseOffering
argument_list|()
operator|==
literal|null
operator|&&
name|rc
operator|.
name|getCourseName
argument_list|()
operator|.
name|equals
argument_list|(
name|adept
operator|.
name|getCourse
argument_list|()
argument_list|)
condition|)
block|{
name|acr
operator|=
name|adept
expr_stmt|;
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|acr
operator|==
literal|null
condition|)
block|{
name|acr
operator|=
operator|new
name|AdvisorCourseRequest
argument_list|()
expr_stmt|;
name|acr
operator|.
name|setStudent
argument_list|(
name|dbStudent
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setChangedBy
argument_list|(
name|helper
operator|.
name|getUser
argument_list|()
operator|.
name|getExternalId
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setTimestamp
argument_list|(
name|ts
argument_list|)
expr_stmt|;
name|dbStudent
operator|.
name|getAdvisorCourseRequests
argument_list|()
operator|.
name|add
argument_list|(
name|acr
argument_list|)
expr_stmt|;
block|}
name|acr
operator|.
name|setCourseOffering
argument_list|(
name|rc
operator|.
name|hasCourseId
argument_list|()
condition|?
name|CourseOfferingDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|rc
operator|.
name|getCourseId
argument_list|()
argument_list|,
name|helper
operator|.
name|getHibSession
argument_list|()
argument_list|)
else|:
literal|null
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setCourse
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setPriority
argument_list|(
name|priority
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setAlternative
argument_list|(
name|alt
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setSubstitute
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|acr
operator|.
name|getFreeTime
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|helper
operator|.
name|getHibSession
argument_list|()
operator|.
name|delete
argument_list|(
name|acr
operator|.
name|getFreeTime
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setFreeTime
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|alt
operator|==
literal|0
condition|)
block|{
name|acr
operator|.
name|setCredit
argument_list|(
name|request
operator|.
name|getAdvisorCredit
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setNotes
argument_list|(
name|request
operator|.
name|getAdvisorNote
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|acr
operator|.
name|setCredit
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setNotes
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
name|acr
operator|.
name|setCritical
argument_list|(
name|acr
operator|.
name|isCritical
argument_list|(
name|critical
argument_list|)
argument_list|)
expr_stmt|;
name|acr
operator|.
name|updatePreferences
argument_list|(
name|rc
argument_list|,
name|helper
operator|.
name|getHibSession
argument_list|()
argument_list|)
expr_stmt|;
name|helper
operator|.
name|getHibSession
argument_list|()
operator|.
name|saveOrUpdate
argument_list|(
name|acr
argument_list|)
expr_stmt|;
name|alt
operator|++
expr_stmt|;
block|}
block|}
else|else
block|{
name|AdvisorCourseRequest
name|acr
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|AdvisorCourseRequest
argument_list|>
name|i
init|=
name|acrs
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|AdvisorCourseRequest
name|adept
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|adept
operator|.
name|getCourseOffering
argument_list|()
operator|==
literal|null
operator|&&
name|adept
operator|.
name|getFreeTime
argument_list|()
operator|==
literal|null
operator|&&
name|adept
operator|.
name|getCourse
argument_list|()
operator|==
literal|null
condition|)
block|{
name|acr
operator|=
name|adept
expr_stmt|;
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|acr
operator|==
literal|null
condition|)
block|{
name|acr
operator|=
operator|new
name|AdvisorCourseRequest
argument_list|()
expr_stmt|;
name|acr
operator|.
name|setStudent
argument_list|(
name|dbStudent
argument_list|)
expr_stmt|;
name|dbStudent
operator|.
name|getAdvisorCourseRequests
argument_list|()
operator|.
name|add
argument_list|(
name|acr
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|acr
operator|.
name|getPreferences
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|acr
operator|.
name|getPreferences
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|acr
operator|.
name|getFreeTime
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|helper
operator|.
name|getHibSession
argument_list|()
operator|.
name|delete
argument_list|(
name|acr
operator|.
name|getFreeTime
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setFreeTime
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
name|acr
operator|.
name|setFreeTime
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setCourse
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setCourseOffering
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setPriority
argument_list|(
name|priority
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setAlternative
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setSubstitute
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setCredit
argument_list|(
name|request
operator|.
name|getAdvisorCredit
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setNotes
argument_list|(
name|request
operator|.
name|getAdvisorNote
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setChangedBy
argument_list|(
name|helper
operator|.
name|getUser
argument_list|()
operator|.
name|getExternalId
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setTimestamp
argument_list|(
name|ts
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setCritical
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|helper
operator|.
name|getHibSession
argument_list|()
operator|.
name|saveOrUpdate
argument_list|(
name|acr
argument_list|)
expr_stmt|;
block|}
name|priority
operator|++
expr_stmt|;
block|}
comment|// substitutes
for|for
control|(
name|Request
name|request
range|:
name|getDetails
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getAlternatives
argument_list|()
control|)
block|{
if|if
condition|(
name|request
operator|.
name|hasRequestedCourse
argument_list|()
condition|)
block|{
name|int
name|alt
init|=
literal|0
decl_stmt|;
for|for
control|(
name|RequestedCourse
name|rc
range|:
name|request
operator|.
name|getRequestedCourse
argument_list|()
control|)
block|{
name|AdvisorCourseRequest
name|acr
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|AdvisorCourseRequest
argument_list|>
name|i
init|=
name|acrs
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|AdvisorCourseRequest
name|adept
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|hasCourseId
argument_list|()
operator|&&
name|adept
operator|.
name|getCourseOffering
argument_list|()
operator|!=
literal|null
operator|&&
name|rc
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|adept
operator|.
name|getCourseOffering
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
condition|)
block|{
name|acr
operator|=
name|adept
expr_stmt|;
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
break|break;
block|}
if|else if
condition|(
operator|!
name|rc
operator|.
name|hasCourseId
argument_list|()
operator|&&
name|adept
operator|.
name|getCourseOffering
argument_list|()
operator|==
literal|null
operator|&&
name|rc
operator|.
name|getCourseName
argument_list|()
operator|.
name|equals
argument_list|(
name|adept
operator|.
name|getCourse
argument_list|()
argument_list|)
condition|)
block|{
name|acr
operator|=
name|adept
expr_stmt|;
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|acr
operator|==
literal|null
condition|)
block|{
name|acr
operator|=
operator|new
name|AdvisorCourseRequest
argument_list|()
expr_stmt|;
name|acr
operator|.
name|setStudent
argument_list|(
name|dbStudent
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setChangedBy
argument_list|(
name|helper
operator|.
name|getUser
argument_list|()
operator|.
name|getExternalId
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setTimestamp
argument_list|(
name|ts
argument_list|)
expr_stmt|;
name|dbStudent
operator|.
name|getAdvisorCourseRequests
argument_list|()
operator|.
name|add
argument_list|(
name|acr
argument_list|)
expr_stmt|;
block|}
name|acr
operator|.
name|setCourseOffering
argument_list|(
name|rc
operator|.
name|hasCourseId
argument_list|()
condition|?
name|CourseOfferingDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|rc
operator|.
name|getCourseId
argument_list|()
argument_list|,
name|helper
operator|.
name|getHibSession
argument_list|()
argument_list|)
else|:
literal|null
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setCourse
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setPriority
argument_list|(
name|priority
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setAlternative
argument_list|(
name|alt
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setSubstitute
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|alt
operator|==
literal|0
condition|)
block|{
name|acr
operator|.
name|setCredit
argument_list|(
name|request
operator|.
name|getAdvisorCredit
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setNotes
argument_list|(
name|request
operator|.
name|getAdvisorNote
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|acr
operator|.
name|setCredit
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setNotes
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|acr
operator|.
name|getFreeTime
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|helper
operator|.
name|getHibSession
argument_list|()
operator|.
name|delete
argument_list|(
name|acr
operator|.
name|getFreeTime
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setFreeTime
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
name|acr
operator|.
name|setCritical
argument_list|(
name|acr
operator|.
name|isCritical
argument_list|(
name|critical
argument_list|)
argument_list|)
expr_stmt|;
name|acr
operator|.
name|updatePreferences
argument_list|(
name|rc
argument_list|,
name|helper
operator|.
name|getHibSession
argument_list|()
argument_list|)
expr_stmt|;
name|helper
operator|.
name|getHibSession
argument_list|()
operator|.
name|saveOrUpdate
argument_list|(
name|acr
argument_list|)
expr_stmt|;
name|alt
operator|++
expr_stmt|;
block|}
block|}
else|else
block|{
name|AdvisorCourseRequest
name|acr
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|AdvisorCourseRequest
argument_list|>
name|i
init|=
name|acrs
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|AdvisorCourseRequest
name|adept
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|adept
operator|.
name|getCourseOffering
argument_list|()
operator|==
literal|null
operator|&&
name|adept
operator|.
name|getFreeTime
argument_list|()
operator|==
literal|null
operator|&&
name|adept
operator|.
name|getCourse
argument_list|()
operator|==
literal|null
condition|)
block|{
name|acr
operator|=
name|adept
expr_stmt|;
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|acr
operator|==
literal|null
condition|)
block|{
name|acr
operator|=
operator|new
name|AdvisorCourseRequest
argument_list|()
expr_stmt|;
name|acr
operator|.
name|setStudent
argument_list|(
name|dbStudent
argument_list|)
expr_stmt|;
name|dbStudent
operator|.
name|getAdvisorCourseRequests
argument_list|()
operator|.
name|add
argument_list|(
name|acr
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|acr
operator|.
name|getPreferences
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|acr
operator|.
name|getPreferences
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|acr
operator|.
name|getFreeTime
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|helper
operator|.
name|getHibSession
argument_list|()
operator|.
name|delete
argument_list|(
name|acr
operator|.
name|getFreeTime
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setFreeTime
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
name|acr
operator|.
name|setCourse
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setCourseOffering
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setPriority
argument_list|(
name|priority
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setAlternative
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setSubstitute
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setCredit
argument_list|(
name|request
operator|.
name|getAdvisorCredit
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setNotes
argument_list|(
name|request
operator|.
name|getAdvisorNote
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setChangedBy
argument_list|(
name|helper
operator|.
name|getUser
argument_list|()
operator|.
name|getExternalId
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setTimestamp
argument_list|(
name|ts
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setCritical
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|helper
operator|.
name|getHibSession
argument_list|()
operator|.
name|saveOrUpdate
argument_list|(
name|acr
argument_list|)
expr_stmt|;
block|}
name|priority
operator|++
expr_stmt|;
block|}
if|if
condition|(
name|getDetails
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|hasCreditNote
argument_list|()
condition|)
block|{
name|AdvisorCourseRequest
name|acr
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|AdvisorCourseRequest
argument_list|>
name|i
init|=
name|acrs
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|AdvisorCourseRequest
name|adept
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|adept
operator|.
name|getPriority
argument_list|()
operator|==
operator|-
literal|1
condition|)
block|{
name|acr
operator|=
name|adept
expr_stmt|;
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|acr
operator|==
literal|null
condition|)
block|{
name|acr
operator|=
operator|new
name|AdvisorCourseRequest
argument_list|()
expr_stmt|;
name|acr
operator|.
name|setStudent
argument_list|(
name|dbStudent
argument_list|)
expr_stmt|;
name|dbStudent
operator|.
name|getAdvisorCourseRequests
argument_list|()
operator|.
name|add
argument_list|(
name|acr
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|acr
operator|.
name|getPreferences
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|acr
operator|.
name|getPreferences
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|acr
operator|.
name|getFreeTime
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|helper
operator|.
name|getHibSession
argument_list|()
operator|.
name|delete
argument_list|(
name|acr
operator|.
name|getFreeTime
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setFreeTime
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
name|acr
operator|.
name|setCourse
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setCourseOffering
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setPriority
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setAlternative
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setSubstitute
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setCredit
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setNotes
argument_list|(
name|getDetails
argument_list|()
operator|.
name|getRequest
argument_list|()
operator|.
name|getCreditNote
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setChangedBy
argument_list|(
name|helper
operator|.
name|getUser
argument_list|()
operator|.
name|getExternalId
argument_list|()
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setTimestamp
argument_list|(
name|ts
argument_list|)
expr_stmt|;
name|acr
operator|.
name|setCritical
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|helper
operator|.
name|getHibSession
argument_list|()
operator|.
name|saveOrUpdate
argument_list|(
name|acr
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|AdvisorCourseRequest
name|acr
range|:
name|acrs
control|)
block|{
if|if
condition|(
name|acr
operator|.
name|getFreeTime
argument_list|()
operator|!=
literal|null
condition|)
name|helper
operator|.
name|getHibSession
argument_list|()
operator|.
name|delete
argument_list|(
name|acr
operator|.
name|getFreeTime
argument_list|()
argument_list|)
expr_stmt|;
name|helper
operator|.
name|getHibSession
argument_list|()
operator|.
name|delete
argument_list|(
name|acr
argument_list|)
expr_stmt|;
name|dbStudent
operator|.
name|getAdvisorCourseRequests
argument_list|()
operator|.
name|remove
argument_list|(
name|acr
argument_list|)
expr_stmt|;
block|}
comment|// change status
if|if
condition|(
name|getDetails
argument_list|()
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
operator|&&
name|student
operator|!=
literal|null
condition|)
block|{
name|String
name|current
init|=
operator|(
name|student
operator|.
name|getStatus
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|student
operator|.
name|getStatus
argument_list|()
operator|)
decl_stmt|;
if|if
condition|(
operator|!
name|getDetails
argument_list|()
operator|.
name|getStatus
argument_list|()
operator|.
name|getReference
argument_list|()
operator|.
name|equals
argument_list|(
name|current
argument_list|)
condition|)
block|{
comment|//status change
name|StudentSectioningStatus
name|status
init|=
operator|(
name|getDetails
argument_list|()
operator|.
name|getStatus
argument_list|()
operator|.
name|getReference
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
name|StudentSectioningStatus
operator|.
name|getStatus
argument_list|(
name|getDetails
argument_list|()
operator|.
name|getStatus
argument_list|()
operator|.
name|getReference
argument_list|()
argument_list|,
name|server
operator|.
name|getAcademicSession
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|helper
operator|.
name|getHibSession
argument_list|()
argument_list|)
operator|)
decl_stmt|;
name|String
name|oldStatus
init|=
operator|(
name|dbStudent
operator|.
name|getSectioningStatus
argument_list|()
operator|!=
literal|null
condition|?
name|dbStudent
operator|.
name|getSectioningStatus
argument_list|()
operator|.
name|getReference
argument_list|()
else|:
name|dbStudent
operator|.
name|getSession
argument_list|()
operator|.
name|getDefaultSectioningStatus
argument_list|()
operator|!=
literal|null
condition|?
name|MSG
operator|.
name|studentStatusSessionDefault
argument_list|(
name|dbStudent
operator|.
name|getSession
argument_list|()
operator|.
name|getDefaultSectioningStatus
argument_list|()
operator|.
name|getReference
argument_list|()
argument_list|)
else|:
name|MSG
operator|.
name|studentStatusSystemDefault
argument_list|()
operator|)
decl_stmt|;
if|if
condition|(
name|dbStudent
operator|.
name|getSectioningStatus
argument_list|()
operator|!=
literal|null
condition|)
name|action
operator|.
name|addOptionBuilder
argument_list|()
operator|.
name|setKey
argument_list|(
literal|"old-status"
argument_list|)
operator|.
name|setValue
argument_list|(
name|dbStudent
operator|.
name|getSectioningStatus
argument_list|()
operator|.
name|getReference
argument_list|()
argument_list|)
expr_stmt|;
name|student
operator|.
name|setStatus
argument_list|(
name|status
operator|==
literal|null
condition|?
literal|null
else|:
name|status
operator|.
name|getReference
argument_list|()
argument_list|)
expr_stmt|;
name|dbStudent
operator|.
name|setSectioningStatus
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|String
name|newStatus
init|=
operator|(
name|dbStudent
operator|.
name|getSectioningStatus
argument_list|()
operator|!=
literal|null
condition|?
name|dbStudent
operator|.
name|getSectioningStatus
argument_list|()
operator|.
name|getReference
argument_list|()
else|:
name|dbStudent
operator|.
name|getSession
argument_list|()
operator|.
name|getDefaultSectioningStatus
argument_list|()
operator|!=
literal|null
condition|?
name|MSG
operator|.
name|studentStatusSessionDefault
argument_list|(
name|dbStudent
operator|.
name|getSession
argument_list|()
operator|.
name|getDefaultSectioningStatus
argument_list|()
operator|.
name|getReference
argument_list|()
argument_list|)
else|:
name|MSG
operator|.
name|studentStatusSystemDefault
argument_list|()
operator|)
decl_stmt|;
if|if
condition|(
name|dbStudent
operator|.
name|getSectioningStatus
argument_list|()
operator|!=
literal|null
condition|)
name|action
operator|.
name|addOptionBuilder
argument_list|()
operator|.
name|setKey
argument_list|(
literal|"new-status"
argument_list|)
operator|.
name|setValue
argument_list|(
name|dbStudent
operator|.
name|getSectioningStatus
argument_list|()
operator|.
name|getReference
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|oldStatus
operator|.
name|equals
argument_list|(
name|newStatus
argument_list|)
condition|)
name|action
operator|.
name|addMessage
argument_list|(
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|newBuilder
argument_list|()
operator|.
name|setText
argument_list|(
name|oldStatus
argument_list|)
operator|.
name|setTimeStamp
argument_list|(
name|ts
operator|.
name|getTime
argument_list|()
argument_list|)
operator|.
name|setLevel
argument_list|(
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Level
operator|.
name|INFO
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|action
operator|.
name|addMessage
argument_list|(
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|newBuilder
argument_list|()
operator|.
name|setText
argument_list|(
name|oldStatus
operator|+
literal|"&rarr; "
operator|+
name|newStatus
argument_list|)
operator|.
name|setTimeStamp
argument_list|(
name|ts
operator|.
name|getTime
argument_list|()
argument_list|)
operator|.
name|setLevel
argument_list|(
name|OnlineSectioningLog
operator|.
name|Message
operator|.
name|Level
operator|.
name|INFO
argument_list|)
argument_list|)
expr_stmt|;
name|helper
operator|.
name|getHibSession
argument_list|()
operator|.
name|saveOrUpdate
argument_list|(
name|dbStudent
argument_list|)
expr_stmt|;
name|action
operator|.
name|setResult
argument_list|(
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|ResultType
operator|.
name|TRUE
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|action
operator|.
name|setResult
argument_list|(
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|ResultType
operator|.
name|FALSE
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|student
operator|!=
literal|null
condition|)
block|{
name|student
operator|.
name|setAdvisorRequests
argument_list|(
name|dbStudent
argument_list|,
name|helper
argument_list|,
name|server
operator|.
name|getAcademicSession
argument_list|()
operator|.
name|getFreeTimePattern
argument_list|()
argument_list|)
expr_stmt|;
name|server
operator|.
name|update
argument_list|(
name|student
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
name|helper
operator|.
name|commitTransaction
argument_list|()
expr_stmt|;
name|ret
operator|.
name|setUpdated
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|helper
operator|.
name|rollbackTransaction
argument_list|()
expr_stmt|;
if|if
condition|(
name|e
operator|instanceof
name|SectioningException
condition|)
throw|throw
operator|(
name|SectioningException
operator|)
name|e
throw|;
throw|throw
operator|new
name|SectioningException
argument_list|(
name|MSG
operator|.
name|exceptionUnknown
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|e
argument_list|)
throw|;
block|}
finally|finally
block|{
name|lock
operator|.
name|release
argument_list|()
expr_stmt|;
block|}
block|}
name|generatePdfConfirmation
argument_list|(
name|ret
argument_list|,
name|server
argument_list|,
name|helper
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|helper
operator|.
name|error
argument_list|(
literal|"Failed to produce confirmation PDF: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|SectioningException
argument_list|(
literal|"Failed to produce confirmation PDF: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|protected
name|void
name|generatePdfConfirmation
parameter_list|(
name|AdvisorCourseRequestSubmission
name|ret
parameter_list|,
name|OnlineSectioningServer
name|server
parameter_list|,
name|OnlineSectioningHelper
name|helper
parameter_list|)
throws|throws
name|IOException
throws|,
name|DocumentException
block|{
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
operator|new
name|AdvisorConfirmationPDF
argument_list|(
name|getDetails
argument_list|()
argument_list|)
operator|.
name|generatePdfConfirmation
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setPdf
argument_list|(
name|out
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|name
parameter_list|()
block|{
return|return
literal|"advisor-submit"
return|;
block|}
block|}
end_class

end_unit

