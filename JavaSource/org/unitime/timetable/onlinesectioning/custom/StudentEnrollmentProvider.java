begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.5 (University Timetabling Application)  * Copyright (C) 2014, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|custom
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SectioningException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|EligibilityCheck
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|model
operator|.
name|XCourse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|model
operator|.
name|XSection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|model
operator|.
name|XStudent
import|;
end_import

begin_interface
specifier|public
interface|interface
name|StudentEnrollmentProvider
block|{
specifier|public
name|void
name|checkEligibility
parameter_list|(
name|OnlineSectioningServer
name|server
parameter_list|,
name|OnlineSectioningHelper
name|helper
parameter_list|,
name|EligibilityCheck
name|check
parameter_list|,
name|XStudent
name|student
parameter_list|)
throws|throws
name|SectioningException
function_decl|;
specifier|public
name|List
argument_list|<
name|EnrolledSection
argument_list|>
name|getEnrollment
parameter_list|(
name|OnlineSectioningServer
name|server
parameter_list|,
name|OnlineSectioningHelper
name|helper
parameter_list|,
name|XStudent
name|student
parameter_list|)
throws|throws
name|SectioningException
function_decl|;
specifier|public
name|List
argument_list|<
name|EnrollmentFailure
argument_list|>
name|enroll
parameter_list|(
name|OnlineSectioningServer
name|server
parameter_list|,
name|OnlineSectioningHelper
name|helper
parameter_list|,
name|XStudent
name|student
parameter_list|,
name|Map
argument_list|<
name|XCourse
argument_list|,
name|List
argument_list|<
name|XSection
argument_list|>
argument_list|>
name|enrollments
parameter_list|)
throws|throws
name|SectioningException
function_decl|;
specifier|public
name|void
name|dispose
parameter_list|()
function_decl|;
specifier|public
name|boolean
name|isAllowWaitListing
parameter_list|()
function_decl|;
specifier|public
specifier|static
class|class
name|EnrollmentFailure
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|XCourse
name|iCourse
decl_stmt|;
specifier|private
name|XSection
name|iSection
decl_stmt|;
specifier|private
name|String
name|iMessage
decl_stmt|;
specifier|private
name|boolean
name|iEnrolled
decl_stmt|;
specifier|public
name|EnrollmentFailure
parameter_list|(
name|XCourse
name|course
parameter_list|,
name|XSection
name|section
parameter_list|,
name|String
name|message
parameter_list|,
name|boolean
name|enrolled
parameter_list|)
block|{
name|iCourse
operator|=
name|course
expr_stmt|;
name|iSection
operator|=
name|section
expr_stmt|;
name|iMessage
operator|=
name|message
expr_stmt|;
name|iEnrolled
operator|=
name|enrolled
expr_stmt|;
block|}
specifier|public
name|XCourse
name|getCourse
parameter_list|()
block|{
return|return
name|iCourse
return|;
block|}
specifier|public
name|XSection
name|getSection
parameter_list|()
block|{
return|return
name|iSection
return|;
block|}
specifier|public
name|String
name|getMessage
parameter_list|()
block|{
return|return
name|iMessage
return|;
block|}
specifier|public
name|boolean
name|isEnrolled
parameter_list|()
block|{
return|return
name|iEnrolled
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getCourse
argument_list|()
operator|.
name|getCourseName
argument_list|()
operator|+
literal|" "
operator|+
name|getSection
argument_list|()
operator|.
name|getSubpartName
argument_list|()
operator|+
literal|" "
operator|+
name|getSection
argument_list|()
operator|.
name|getName
argument_list|(
name|getCourse
argument_list|()
operator|.
name|getCourseId
argument_list|()
argument_list|)
operator|+
literal|": "
operator|+
name|getMessage
argument_list|()
operator|+
operator|(
name|isEnrolled
argument_list|()
condition|?
literal|" (e)"
else|:
literal|""
operator|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|EnrolledSection
block|{
specifier|private
name|String
name|iSubjectArea
decl_stmt|;
specifier|private
name|String
name|iCourseNubmber
decl_stmt|;
specifier|private
name|String
name|iSection
decl_stmt|;
specifier|public
name|EnrolledSection
parameter_list|(
name|String
name|subject
parameter_list|,
name|String
name|course
parameter_list|,
name|String
name|section
parameter_list|)
block|{
name|iSubjectArea
operator|=
name|subject
expr_stmt|;
name|iCourseNubmber
operator|=
name|course
expr_stmt|;
name|iSection
operator|=
name|section
expr_stmt|;
block|}
specifier|public
name|String
name|getSubjectArea
parameter_list|()
block|{
return|return
name|iSubjectArea
return|;
block|}
specifier|public
name|String
name|getCourseNumber
parameter_list|()
block|{
return|return
name|iCourseNubmber
return|;
block|}
specifier|public
name|String
name|getSection
parameter_list|()
block|{
return|return
name|iSection
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getSubjectArea
argument_list|()
operator|+
literal|" "
operator|+
name|getCourseNumber
argument_list|()
operator|+
literal|": "
operator|+
name|getSection
argument_list|()
return|;
block|}
block|}
block|}
end_interface

end_unit

