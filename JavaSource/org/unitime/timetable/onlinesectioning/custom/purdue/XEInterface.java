begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.5 (University Timetabling Application)  * Copyright (C) 2014, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|custom
operator|.
name|purdue
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTime
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|reflect
operator|.
name|TypeToken
import|;
end_import

begin_class
specifier|public
class|class
name|XEInterface
block|{
specifier|static
class|class
name|Registration
block|{
name|String
name|subject
decl_stmt|;
name|String
name|subjectDescription
decl_stmt|;
name|String
name|courseNumber
decl_stmt|;
name|String
name|courseReferenceNumber
decl_stmt|;
name|String
name|courseTitle
decl_stmt|;
comment|/** 		 * 40	CEC 40% refund 		 * 60	CEC 60% refund 		 * 80	CEC 80% refund 		 * AA	Auditor Access 		 * AU	Audit 		 * CA	Cancel Administratively 		 * DB	Boiler Gold Rush Drop Course 		 * DC	Drop Course 		 * DD	Drop/Delete 		 * DT	Drop Course-TSW 		 * DW	Drop (Web) 		 * RC	**ReAdd Course** 		 * RE	**Registered** 		 * RT	**Web Registered** 		 * RW	**Web Registered** 		 * W	Withdrawn-W 		 * W1	Withdrawn 		 * W2	Withdrawn 		 * W3	Withdrawn 		 * W4	Withdrawn 		 * W5	Withdrawn 		 * WF	Withdrawn-WF 		 * WG	Withdrawn-pending grade 		 * WN	Withdrawn-WN 		 * WT	Withdrawn-W 		 * WU	Withdrawn-WU 		 * WL	Waitlist 		 */
name|String
name|courseRegistrationStatus
decl_stmt|;
name|String
name|courseRegistrationStatusDescription
decl_stmt|;
name|Double
name|creditHour
decl_stmt|;
name|String
name|gradingMode
decl_stmt|;
name|String
name|gradingModeDescription
decl_stmt|;
name|String
name|level
decl_stmt|;
name|String
name|levelDescription
decl_stmt|;
name|DateTime
name|registrationStatusDate
decl_stmt|;
name|String
name|scheduleDescription
decl_stmt|;
name|String
name|scheduleType
decl_stmt|;
name|String
name|sequenceNumber
decl_stmt|;
name|String
name|statusDescription
decl_stmt|;
comment|/** 		 * P = pending 		 * R = registered 		 * D = dropped 		 * L = waitlisted 		 * F = fatal error prevented registration 		 * W = withdrawn  		 */
name|String
name|statusIndicator
decl_stmt|;
name|List
argument_list|<
name|CrnError
argument_list|>
name|crnErrors
decl_stmt|;
block|}
specifier|static
class|class
name|CrnError
block|{
name|String
name|errorFlag
decl_stmt|;
name|String
name|message
decl_stmt|;
name|String
name|messageType
decl_stmt|;
block|}
specifier|static
class|class
name|RegistrationAction
block|{
name|String
name|courseRegistrationStatus
decl_stmt|;
name|String
name|description
decl_stmt|;
name|Boolean
name|remove
decl_stmt|;
name|String
name|voiceType
decl_stmt|;
block|}
specifier|static
class|class
name|TimeTicket
block|{
name|DateTime
name|beginDate
decl_stmt|;
name|DateTime
name|endDate
decl_stmt|;
name|String
name|startTime
decl_stmt|;
name|String
name|endTime
decl_stmt|;
block|}
specifier|static
class|class
name|FailedRegistration
block|{
name|String
name|failedCRN
decl_stmt|;
name|String
name|failure
decl_stmt|;
name|Registration
name|registration
decl_stmt|;
block|}
specifier|public
specifier|static
class|class
name|RegisterResponse
block|{
specifier|public
specifier|static
specifier|final
name|Type
name|TYPE_LIST
init|=
operator|new
name|TypeToken
argument_list|<
name|ArrayList
argument_list|<
name|RegisterResponse
argument_list|>
argument_list|>
argument_list|()
block|{}
operator|.
name|getType
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|FailedRegistration
argument_list|>
name|failedRegistrations
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|failureReasons
decl_stmt|;
name|List
argument_list|<
name|Registration
argument_list|>
name|registrations
decl_stmt|;
name|List
argument_list|<
name|TimeTicket
argument_list|>
name|timeTickets
decl_stmt|;
name|Boolean
name|validStudent
decl_stmt|;
name|String
name|registrationException
decl_stmt|;
block|}
specifier|public
specifier|static
class|class
name|CourseReferenceNumber
block|{
name|String
name|courseReferenceNumber
decl_stmt|;
specifier|public
name|CourseReferenceNumber
parameter_list|()
block|{
block|}
specifier|public
name|CourseReferenceNumber
parameter_list|(
name|String
name|crn
parameter_list|)
block|{
name|this
operator|.
name|courseReferenceNumber
operator|=
name|crn
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RegisterAction
block|{
name|String
name|courseReferenceNumber
decl_stmt|;
name|String
name|selectedAction
decl_stmt|;
name|String
name|selectedLevel
decl_stmt|;
name|String
name|selectedGradingMode
decl_stmt|;
name|String
name|selectedStudyPath
decl_stmt|;
name|String
name|selectedCreditHour
decl_stmt|;
specifier|public
name|RegisterAction
parameter_list|(
name|String
name|action
parameter_list|,
name|String
name|crn
parameter_list|)
block|{
name|selectedAction
operator|=
name|action
expr_stmt|;
name|courseReferenceNumber
operator|=
name|crn
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RegisterRequest
block|{
name|String
name|bannerId
decl_stmt|;
name|String
name|term
decl_stmt|;
name|String
name|altPin
decl_stmt|;
name|List
argument_list|<
name|CourseReferenceNumber
argument_list|>
name|courseReferenceNumbers
decl_stmt|;
name|List
argument_list|<
name|RegisterAction
argument_list|>
name|actionsAndOptions
decl_stmt|;
specifier|public
name|RegisterRequest
parameter_list|(
name|String
name|term
parameter_list|,
name|String
name|bannerId
parameter_list|,
name|String
name|pin
parameter_list|)
block|{
name|this
operator|.
name|term
operator|=
name|term
expr_stmt|;
name|this
operator|.
name|bannerId
operator|=
name|bannerId
expr_stmt|;
name|this
operator|.
name|altPin
operator|=
name|pin
expr_stmt|;
block|}
specifier|public
name|RegisterRequest
name|drop
parameter_list|(
name|String
name|crn
parameter_list|)
block|{
if|if
condition|(
name|actionsAndOptions
operator|==
literal|null
condition|)
name|actionsAndOptions
operator|=
operator|new
name|ArrayList
argument_list|<
name|RegisterAction
argument_list|>
argument_list|()
expr_stmt|;
name|actionsAndOptions
operator|.
name|add
argument_list|(
operator|new
name|RegisterAction
argument_list|(
literal|"DW"
argument_list|,
name|crn
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|RegisterRequest
name|add
parameter_list|(
name|String
name|crn
parameter_list|)
block|{
if|if
condition|(
name|courseReferenceNumbers
operator|==
literal|null
condition|)
name|courseReferenceNumbers
operator|=
operator|new
name|ArrayList
argument_list|<
name|XEInterface
operator|.
name|CourseReferenceNumber
argument_list|>
argument_list|()
expr_stmt|;
name|courseReferenceNumbers
operator|.
name|add
argument_list|(
operator|new
name|CourseReferenceNumber
argument_list|(
name|crn
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|boolean
name|isEmpty
parameter_list|()
block|{
return|return
operator|(
name|actionsAndOptions
operator|==
literal|null
operator|||
name|actionsAndOptions
operator|.
name|isEmpty
argument_list|()
operator|)
operator|&&
operator|(
name|courseReferenceNumbers
operator|==
literal|null
operator|||
name|courseReferenceNumbers
operator|.
name|isEmpty
argument_list|()
operator|)
return|;
block|}
block|}
block|}
end_class

end_unit

