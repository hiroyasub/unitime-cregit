begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|custom
operator|.
name|purdue
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|MessagingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|Email
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|JavaMailWrapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|ApplicationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|custom
operator|.
name|StudentEmailProvider
import|;
end_import

begin_class
specifier|public
class|class
name|BoilerConnectEmailAddress
implements|implements
name|StudentEmailProvider
block|{
annotation|@
name|Override
specifier|public
name|Email
name|createEmail
parameter_list|(
name|OnlineSectioningServer
name|server
parameter_list|,
name|OnlineSectioningHelper
name|helper
parameter_list|,
name|Boolean
name|optional
parameter_list|)
block|{
if|if
condition|(
name|optional
operator|==
literal|null
operator|||
operator|!
name|optional
operator|.
name|booleanValue
argument_list|()
condition|)
return|return
operator|new
name|JavaMailWrapper
argument_list|()
return|;
return|return
operator|new
name|BoilerConnectEmail
argument_list|(
name|helper
operator|.
name|getAction
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|isOptional
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
return|return
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"purdue.boilerconnect.toggle"
argument_list|,
literal|"Send via BoilerConnect (use<i>@boilerconnect.purdue.edu</i> email address)"
argument_list|)
return|;
block|}
specifier|static
class|class
name|BoilerConnectEmail
extends|extends
name|JavaMailWrapper
block|{
name|String
name|iReplyToEmail
init|=
literal|null
decl_stmt|,
name|iReplyToName
init|=
literal|null
decl_stmt|;
name|String
name|iRecipientEmail
init|=
literal|null
decl_stmt|,
name|iRecipientName
init|=
literal|null
decl_stmt|;
name|String
name|iSuffix
decl_stmt|;
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
name|iAction
decl_stmt|;
name|BoilerConnectEmail
parameter_list|(
name|OnlineSectioningLog
operator|.
name|Action
operator|.
name|Builder
name|action
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|iSuffix
operator|=
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"purdue.boilerconnect.oldSuffix"
argument_list|,
literal|"@purdue.edu"
argument_list|)
expr_stmt|;
name|iAction
operator|=
name|action
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setReplyTo
parameter_list|(
name|String
name|email
parameter_list|,
name|String
name|name
parameter_list|)
throws|throws
name|UnsupportedEncodingException
throws|,
name|MessagingException
block|{
if|if
condition|(
name|email
operator|.
name|endsWith
argument_list|(
name|iSuffix
argument_list|)
condition|)
block|{
name|iReplyToEmail
operator|=
name|email
expr_stmt|;
name|iReplyToName
operator|=
name|name
expr_stmt|;
block|}
name|super
operator|.
name|setReplyTo
argument_list|(
name|email
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addRecipient
parameter_list|(
name|String
name|email
parameter_list|,
name|String
name|name
parameter_list|)
throws|throws
name|UnsupportedEncodingException
throws|,
name|MessagingException
block|{
if|if
condition|(
name|iRecipientEmail
operator|==
literal|null
operator|&&
name|email
operator|.
name|endsWith
argument_list|(
name|iSuffix
argument_list|)
condition|)
block|{
name|iRecipientEmail
operator|=
name|email
expr_stmt|;
name|iRecipientName
operator|=
name|name
expr_stmt|;
block|}
else|else
block|{
name|super
operator|.
name|addRecipient
argument_list|(
name|email
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|send
parameter_list|()
throws|throws
name|MessagingException
throws|,
name|UnsupportedEncodingException
block|{
if|if
condition|(
name|iRecipientEmail
operator|!=
literal|null
operator|&&
name|iReplyToEmail
operator|!=
literal|null
condition|)
block|{
name|String
name|email
init|=
name|iRecipientEmail
operator|.
name|replace
argument_list|(
name|iSuffix
argument_list|,
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"purdue.boilerconnect.newSuffix"
argument_list|,
literal|"@boilerconnect.purdue.edu"
argument_list|)
argument_list|)
decl_stmt|;
name|super
operator|.
name|addRecipient
argument_list|(
name|email
argument_list|,
name|iRecipientName
argument_list|)
expr_stmt|;
name|setFrom
argument_list|(
name|iReplyToEmail
argument_list|,
name|iReplyToName
argument_list|)
expr_stmt|;
if|if
condition|(
name|iAction
operator|!=
literal|null
condition|)
block|{
name|iAction
operator|.
name|addOptionBuilder
argument_list|()
operator|.
name|setKey
argument_list|(
literal|"bc-email"
argument_list|)
operator|.
name|setValue
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|iAction
operator|.
name|addOptionBuilder
argument_list|()
operator|.
name|setKey
argument_list|(
literal|"bc-sender"
argument_list|)
operator|.
name|setValue
argument_list|(
name|iReplyToEmail
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|iRecipientEmail
operator|!=
literal|null
condition|)
block|{
name|super
operator|.
name|addRecipient
argument_list|(
name|iRecipientEmail
argument_list|,
name|iRecipientName
argument_list|)
expr_stmt|;
block|}
name|super
operator|.
name|send
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

