begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|custom
operator|.
name|purdue
package|;
end_package

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|ApplicationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Student
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|custom
operator|.
name|StudentEmailProvider
import|;
end_import

begin_class
specifier|public
class|class
name|BoilerConnectEmailAddress
implements|implements
name|StudentEmailProvider
block|{
annotation|@
name|Override
specifier|public
name|String
name|getEmailAddress
parameter_list|(
name|OnlineSectioningServer
name|server
parameter_list|,
name|OnlineSectioningHelper
name|helper
parameter_list|,
name|Student
name|student
parameter_list|,
name|Boolean
name|optional
parameter_list|)
block|{
if|if
condition|(
name|optional
operator|==
literal|null
operator|||
operator|!
name|optional
operator|.
name|booleanValue
argument_list|()
condition|)
return|return
name|student
operator|.
name|getEmail
argument_list|()
return|;
name|String
name|suffix
init|=
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"purdue.boilerconnect.oldSuffix"
argument_list|,
literal|"@purdue.edu"
argument_list|)
decl_stmt|;
if|if
condition|(
name|student
operator|.
name|getEmail
argument_list|()
operator|!=
literal|null
operator|&&
name|student
operator|.
name|getEmail
argument_list|()
operator|.
name|endsWith
argument_list|(
name|suffix
argument_list|)
condition|)
block|{
return|return
name|student
operator|.
name|getEmail
argument_list|()
operator|.
name|replace
argument_list|(
name|suffix
argument_list|,
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"purdue.boilerconnect.newSuffix"
argument_list|,
literal|"@boilerconnect.purdue.edu"
argument_list|)
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|student
operator|.
name|getEmail
argument_list|()
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|isOptional
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
return|return
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"purdue.boilerconnect.toggle"
argument_list|,
literal|"Send via BoilerConnect (use<i>@boilerconnect.purdue.edu</i> email address)"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

