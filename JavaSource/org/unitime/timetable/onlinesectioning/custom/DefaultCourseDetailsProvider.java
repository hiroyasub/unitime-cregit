begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.5 (University Timetabling Application)  * Copyright (C) 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|custom
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationTargetException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLEncoder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Matcher
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|BasicConfigurator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|ApplicationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|ApplicationProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SectioningException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|AcademicSessionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|custom
operator|.
name|purdue
operator|.
name|BannerTermProvider
import|;
end_import

begin_import
import|import
name|freemarker
operator|.
name|template
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|freemarker
operator|.
name|template
operator|.
name|Template
import|;
end_import

begin_import
import|import
name|freemarker
operator|.
name|template
operator|.
name|TemplateException
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|DefaultCourseDetailsProvider
implements|implements
name|CourseDetailsProvider
implements|,
name|CourseUrlProvider
block|{
specifier|private
specifier|static
name|Logger
name|sLog
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|DefaultCourseDetailsProvider
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|StudentSectioningMessages
name|MSG
init|=
name|Localization
operator|.
name|create
argument_list|(
name|StudentSectioningMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|StudentSectioningConstants
name|CONST
init|=
name|Localization
operator|.
name|create
argument_list|(
name|StudentSectioningConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|ExternalTermProvider
name|iExternalTermProvider
init|=
literal|null
decl_stmt|;
specifier|protected
name|String
name|replaceExternal
parameter_list|(
name|String
name|url
parameter_list|,
name|AcademicSessionInfo
name|session
parameter_list|,
name|String
name|subject
parameter_list|,
name|String
name|courseNbr
parameter_list|)
throws|throws
name|InstantiationException
throws|,
name|IllegalAccessException
throws|,
name|IllegalArgumentException
throws|,
name|InvocationTargetException
throws|,
name|NoSuchMethodException
throws|,
name|SecurityException
throws|,
name|ClassNotFoundException
throws|,
name|UnsupportedEncodingException
block|{
if|if
condition|(
name|iExternalTermProvider
operator|==
literal|null
condition|)
block|{
name|String
name|clazz
init|=
name|ApplicationProperty
operator|.
name|CustomizationExternalTerm
operator|.
name|value
argument_list|()
decl_stmt|;
if|if
condition|(
name|clazz
operator|==
literal|null
operator|||
name|clazz
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
name|url
return|;
name|iExternalTermProvider
operator|=
operator|(
name|ExternalTermProvider
operator|)
name|Class
operator|.
name|forName
argument_list|(
name|clazz
argument_list|)
operator|.
name|getConstructor
argument_list|()
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
return|return
name|url
operator|.
name|replace
argument_list|(
literal|":xterm"
argument_list|,
name|URLEncoder
operator|.
name|encode
argument_list|(
name|iExternalTermProvider
operator|.
name|getExternalTerm
argument_list|(
name|session
argument_list|)
argument_list|,
literal|"utf-8"
argument_list|)
argument_list|)
operator|.
name|replace
argument_list|(
literal|":xcampus"
argument_list|,
name|URLEncoder
operator|.
name|encode
argument_list|(
name|iExternalTermProvider
operator|.
name|getExternalTerm
argument_list|(
name|session
argument_list|)
argument_list|,
literal|"utf-8"
argument_list|)
argument_list|)
operator|.
name|replace
argument_list|(
literal|":xsubject"
argument_list|,
name|URLEncoder
operator|.
name|encode
argument_list|(
name|iExternalTermProvider
operator|.
name|getExternalSubject
argument_list|(
name|session
argument_list|,
name|subject
argument_list|,
name|courseNbr
argument_list|)
argument_list|,
literal|"utf-8"
argument_list|)
argument_list|)
operator|.
name|replace
argument_list|(
literal|":xcourseNbr"
argument_list|,
name|URLEncoder
operator|.
name|encode
argument_list|(
name|iExternalTermProvider
operator|.
name|getExternalCourseNumber
argument_list|(
name|session
argument_list|,
name|subject
argument_list|,
name|courseNbr
argument_list|)
argument_list|,
literal|"utf-8"
argument_list|)
argument_list|)
return|;
block|}
specifier|protected
name|String
name|getExternalSubject
parameter_list|(
name|AcademicSessionInfo
name|session
parameter_list|,
name|String
name|subjectArea
parameter_list|,
name|String
name|courseNumber
parameter_list|)
block|{
return|return
operator|(
name|iExternalTermProvider
operator|==
literal|null
condition|?
name|subjectArea
else|:
name|iExternalTermProvider
operator|.
name|getExternalSubject
argument_list|(
name|session
argument_list|,
name|subjectArea
argument_list|,
name|courseNumber
argument_list|)
operator|)
return|;
block|}
specifier|protected
name|String
name|getExternalCourseNbr
parameter_list|(
name|AcademicSessionInfo
name|session
parameter_list|,
name|String
name|subjectArea
parameter_list|,
name|String
name|courseNumber
parameter_list|)
block|{
return|return
operator|(
name|iExternalTermProvider
operator|==
literal|null
condition|?
name|courseNumber
else|:
name|iExternalTermProvider
operator|.
name|getExternalCourseNumber
argument_list|(
name|session
argument_list|,
name|subjectArea
argument_list|,
name|courseNumber
argument_list|)
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|URL
name|getCourseUrl
parameter_list|(
name|AcademicSessionInfo
name|session
parameter_list|,
name|String
name|subject
parameter_list|,
name|String
name|courseNbr
parameter_list|)
throws|throws
name|SectioningException
block|{
try|try
block|{
name|String
name|url
init|=
name|ApplicationProperty
operator|.
name|CustomizationDefaultCourseUrl
operator|.
name|value
argument_list|()
decl_stmt|;
if|if
condition|(
name|url
operator|==
literal|null
operator|||
name|url
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|null
return|;
return|return
operator|new
name|URL
argument_list|(
name|replaceExternal
argument_list|(
name|url
operator|.
name|replace
argument_list|(
literal|":year"
argument_list|,
name|URLEncoder
operator|.
name|encode
argument_list|(
name|session
operator|.
name|getYear
argument_list|()
argument_list|,
literal|"utf-8"
argument_list|)
argument_list|)
operator|.
name|replace
argument_list|(
literal|":term"
argument_list|,
name|URLEncoder
operator|.
name|encode
argument_list|(
name|session
operator|.
name|getTerm
argument_list|()
argument_list|,
literal|"utf-8"
argument_list|)
argument_list|)
operator|.
name|replace
argument_list|(
literal|":campus"
argument_list|,
name|URLEncoder
operator|.
name|encode
argument_list|(
name|session
operator|.
name|getCampus
argument_list|()
argument_list|,
literal|"utf-8"
argument_list|)
argument_list|)
operator|.
name|replace
argument_list|(
literal|":subject"
argument_list|,
name|URLEncoder
operator|.
name|encode
argument_list|(
name|subject
argument_list|,
literal|"utf-8"
argument_list|)
argument_list|)
operator|.
name|replace
argument_list|(
literal|":courseNbr"
argument_list|,
name|URLEncoder
operator|.
name|encode
argument_list|(
name|courseNbr
argument_list|,
literal|"utf-8"
argument_list|)
argument_list|)
argument_list|,
name|session
argument_list|,
name|subject
argument_list|,
name|courseNbr
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SectioningException
argument_list|(
literal|"Failed to get course URL: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDetails
parameter_list|(
name|AcademicSessionInfo
name|session
parameter_list|,
name|String
name|subject
parameter_list|,
name|String
name|courseNbr
parameter_list|)
throws|throws
name|SectioningException
block|{
if|if
condition|(
name|ApplicationProperty
operator|.
name|CustomizationDefaultCourseDetailsDownload
operator|.
name|isTrue
argument_list|()
condition|)
block|{
name|URL
name|url
init|=
name|getCourseUrl
argument_list|(
name|session
argument_list|,
name|subject
argument_list|,
name|courseNbr
argument_list|)
decl_stmt|;
if|if
condition|(
name|url
operator|!=
literal|null
condition|)
return|return
name|downloadDetails
argument_list|(
name|url
argument_list|)
return|;
block|}
name|CourseOffering
name|course
init|=
name|CourseOffering
operator|.
name|findBySessionSubjAreaAbbvCourseNbr
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|subject
argument_list|,
name|courseNbr
argument_list|)
decl_stmt|;
if|if
condition|(
name|course
operator|==
literal|null
condition|)
return|return
name|MSG
operator|.
name|infoCourseDetailsNotAvailable
argument_list|(
name|subject
argument_list|,
name|courseNbr
argument_list|)
return|;
try|try
block|{
name|Configuration
name|cfg
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|cfg
operator|.
name|setClassForTemplateLoading
argument_list|(
name|DefaultCourseDetailsProvider
operator|.
name|class
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|cfg
operator|.
name|setLocale
argument_list|(
name|Localization
operator|.
name|getJavaLocale
argument_list|()
argument_list|)
expr_stmt|;
name|cfg
operator|.
name|setOutputEncoding
argument_list|(
literal|"utf-8"
argument_list|)
expr_stmt|;
name|Template
name|template
init|=
name|cfg
operator|.
name|getTemplate
argument_list|(
literal|"details.ftl"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|input
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"msg"
argument_list|,
name|MSG
argument_list|)
expr_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"const"
argument_list|,
name|CONST
argument_list|)
expr_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"session"
argument_list|,
name|session
argument_list|)
expr_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"course"
argument_list|,
name|course
argument_list|)
expr_stmt|;
name|StringWriter
name|s
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|template
operator|.
name|process
argument_list|(
name|input
argument_list|,
operator|new
name|PrintWriter
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|.
name|flush
argument_list|()
expr_stmt|;
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|s
operator|.
name|toString
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|TemplateException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SectioningException
argument_list|(
name|MSG
operator|.
name|failedLoadCourseDetails
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SectioningException
argument_list|(
name|MSG
operator|.
name|failedLoadCourseDetails
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
throw|;
block|}
block|}
specifier|protected
name|String
name|downloadDetails
parameter_list|(
name|URL
name|url
parameter_list|)
throws|throws
name|SectioningException
block|{
try|try
block|{
name|BufferedReader
name|in
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|url
operator|.
name|openStream
argument_list|()
argument_list|,
literal|"utf-8"
argument_list|)
argument_list|)
decl_stmt|;
name|StringBuffer
name|content
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|String
name|line
decl_stmt|;
while|while
condition|(
operator|(
name|line
operator|=
name|in
operator|.
name|readLine
argument_list|()
operator|)
operator|!=
literal|null
condition|)
name|content
operator|.
name|append
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
name|Pattern
name|pattern
init|=
name|Pattern
operator|.
name|compile
argument_list|(
name|ApplicationProperty
operator|.
name|CustomizationDefaultCourseDetailsContent
operator|.
name|value
argument_list|()
argument_list|)
decl_stmt|;
name|Matcher
name|match
init|=
name|pattern
operator|.
name|matcher
argument_list|(
name|content
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|match
operator|.
name|find
argument_list|()
condition|)
return|return
literal|"<div class='unitime-ErrorMessage'>"
operator|+
name|MSG
operator|.
name|exceptionCustomCourseDetailsFailed
argument_list|(
literal|"unable to parse<a href='"
operator|+
name|url
operator|+
literal|"'>course detial page</a>"
argument_list|)
operator|+
literal|"</div>"
return|;
name|String
name|table
init|=
name|match
operator|.
name|group
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|String
name|modif
init|=
name|ApplicationProperty
operator|.
name|CustomizationDefaultCourseDetailsModifiers
operator|.
name|value
argument_list|()
decl_stmt|;
if|if
condition|(
name|modif
operator|!=
literal|null
operator|&&
operator|!
name|modif
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|String
index|[]
name|modifiers
init|=
name|modif
operator|.
name|split
argument_list|(
literal|"\\r?\\n"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|+
literal|1
operator|<
name|modifiers
operator|.
name|length
condition|;
name|i
operator|+=
literal|2
control|)
block|{
name|table
operator|=
name|table
operator|.
name|replaceAll
argument_list|(
name|modifiers
index|[
name|i
index|]
argument_list|,
name|modifiers
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|table
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|sLog
operator|.
name|error
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|SectioningException
argument_list|(
name|MSG
operator|.
name|exceptionCustomCourseDetailsFailed
argument_list|(
literal|"unable to read<a href='"
operator|+
name|url
operator|+
literal|"'>course detail page</a>"
argument_list|)
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|BasicConfigurator
operator|.
name|configure
argument_list|()
expr_stmt|;
name|ApplicationProperties
operator|.
name|getDefaultProperties
argument_list|()
operator|.
name|setProperty
argument_list|(
name|ApplicationProperty
operator|.
name|CustomizationExternalTerm
operator|.
name|key
argument_list|()
argument_list|,
name|BannerTermProvider
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ApplicationProperties
operator|.
name|getDefaultProperties
argument_list|()
operator|.
name|setProperty
argument_list|(
name|ApplicationProperty
operator|.
name|CustomizationDefaultCourseUrl
operator|.
name|key
argument_list|()
argument_list|,
literal|"https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=:xterm&subject=:xsubject&cnbr=:xcourseNbr&enhanced=Y"
argument_list|)
expr_stmt|;
name|ApplicationProperties
operator|.
name|getDefaultProperties
argument_list|()
operator|.
name|setProperty
argument_list|(
name|ApplicationProperty
operator|.
name|CustomizationDefaultCourseDetailsDownload
operator|.
name|key
argument_list|()
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|ApplicationProperties
operator|.
name|getDefaultProperties
argument_list|()
operator|.
name|setProperty
argument_list|(
name|ApplicationProperty
operator|.
name|CustomizationDefaultCourseDetailsContent
operator|.
name|key
argument_list|()
argument_list|,
literal|"(?idm)(<table [ ]*class=\"[a-z]*\" summary=\"This table lists the course detail for the selected term.\" .*)<table [ ]*class=\"[a-z]*\" summary=\"This is table displays line separator at end of the page.\""
argument_list|)
expr_stmt|;
name|ApplicationProperties
operator|.
name|getDefaultProperties
argument_list|()
operator|.
name|setProperty
argument_list|(
name|ApplicationProperty
operator|.
name|CustomizationDefaultCourseDetailsModifiers
operator|.
name|key
argument_list|()
argument_list|,
literal|"(?i)<a href=\"[^>]*\">\n<b>\n"
operator|+
literal|"(?i)</a>\n</b>\n"
operator|+
literal|"(?i)<span class=[\"]?fieldlabeltext[\"]?>\n<b>\n"
operator|+
literal|"(?i)</span>\n</b>\n"
operator|+
literal|"(?i) class=\"nttitle\" \n class=\"unitime-MainTableHeader\" \n"
operator|+
literal|"(?i) class=\"datadisplaytable\" \n class=\"unitime-MainTable\" "
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"URL:"
operator|+
operator|new
name|DefaultCourseDetailsProvider
argument_list|()
operator|.
name|getCourseUrl
argument_list|(
operator|new
name|AcademicSessionInfo
argument_list|(
operator|-
literal|1l
argument_list|,
literal|"2010"
argument_list|,
literal|"Spring"
argument_list|,
literal|"PWL"
argument_list|)
argument_list|,
literal|"AAE"
argument_list|,
literal|"20300A"
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Details:\n"
operator|+
operator|new
name|DefaultCourseDetailsProvider
argument_list|()
operator|.
name|getDetails
argument_list|(
operator|new
name|AcademicSessionInfo
argument_list|(
operator|-
literal|1l
argument_list|,
literal|"2010"
argument_list|,
literal|"Spring"
argument_list|,
literal|"PWL"
argument_list|)
argument_list|,
literal|"AAE"
argument_list|,
literal|"20300A"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

