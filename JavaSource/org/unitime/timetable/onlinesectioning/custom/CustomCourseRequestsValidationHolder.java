begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|custom
package|;
end_package

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|ApplicationProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SectioningException
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|CustomCourseRequestsValidationHolder
block|{
specifier|private
specifier|static
name|StudentSectioningMessages
name|MSG
init|=
name|Localization
operator|.
name|create
argument_list|(
name|StudentSectioningMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|CourseRequestsValidationProvider
name|sProvider
init|=
literal|null
decl_stmt|;
specifier|public
specifier|synchronized
specifier|static
name|CourseRequestsValidationProvider
name|getProvider
parameter_list|()
block|{
if|if
condition|(
name|sProvider
operator|==
literal|null
condition|)
block|{
try|try
block|{
name|sProvider
operator|=
operator|(
operator|(
name|CourseRequestsValidationProvider
operator|)
name|Class
operator|.
name|forName
argument_list|(
name|ApplicationProperty
operator|.
name|CustomizationCourseRequestsValidation
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|newInstance
argument_list|()
operator|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SectioningException
argument_list|(
name|MSG
operator|.
name|exceptionCourseRequestValidationProvider
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
return|return
name|sProvider
return|;
block|}
specifier|public
specifier|synchronized
specifier|static
name|void
name|release
parameter_list|()
block|{
if|if
condition|(
name|sProvider
operator|!=
literal|null
condition|)
block|{
name|sProvider
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|sProvider
operator|=
literal|null
expr_stmt|;
block|}
block|}
specifier|public
specifier|synchronized
specifier|static
name|boolean
name|hasProvider
parameter_list|()
block|{
return|return
name|sProvider
operator|!=
literal|null
operator|||
name|ApplicationProperty
operator|.
name|CustomizationCourseRequestsValidation
operator|.
name|value
argument_list|()
operator|!=
literal|null
return|;
block|}
block|}
end_class

end_unit

