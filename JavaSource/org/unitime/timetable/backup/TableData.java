begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|// Generated by the protocol buffer compiler.  DO NOT EDIT!
end_comment

begin_comment
comment|// source: JavaSource/TableData.proto
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
package|;
end_package

begin_class
specifier|public
specifier|final
class|class
name|TableData
block|{
specifier|private
name|TableData
parameter_list|()
block|{
block|}
specifier|public
specifier|static
name|void
name|registerAllExtensions
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistry
name|registry
parameter_list|)
block|{
block|}
specifier|public
interface|interface
name|TableOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required string name = 1;
name|boolean
name|hasName
parameter_list|()
function_decl|;
name|String
name|getName
parameter_list|()
function_decl|;
comment|// repeated .Record record = 2;
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
argument_list|>
name|getRecordList
parameter_list|()
function_decl|;
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|getRecord
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
name|int
name|getRecordCount
parameter_list|()
function_decl|;
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|RecordOrBuilder
argument_list|>
name|getRecordOrBuilderList
parameter_list|()
function_decl|;
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|RecordOrBuilder
name|getRecordOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
specifier|public
specifier|static
specifier|final
class|class
name|Table
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|TableOrBuilder
block|{
comment|// Use Table.newBuilder() to construct.
specifier|private
name|Table
parameter_list|(
name|Builder
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Table
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
block|}
specifier|private
specifier|static
specifier|final
name|Table
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|Table
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|Table
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|internal_static_Table_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|internal_static_Table_fieldAccessorTable
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string name = 1;
specifier|public
specifier|static
specifier|final
name|int
name|NAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
decl_stmt|;
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
return|return
operator|(
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|isValidUtf8
argument_list|(
name|bs
argument_list|)
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// repeated .Record record = 2;
specifier|public
specifier|static
specifier|final
name|int
name|RECORD_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
argument_list|>
name|record_
decl_stmt|;
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
argument_list|>
name|getRecordList
parameter_list|()
block|{
return|return
name|record_
return|;
block|}
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|RecordOrBuilder
argument_list|>
name|getRecordOrBuilderList
parameter_list|()
block|{
return|return
name|record_
return|;
block|}
specifier|public
name|int
name|getRecordCount
parameter_list|()
block|{
return|return
name|record_
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|getRecord
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|record_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|RecordOrBuilder
name|getRecordOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|record_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|name_
operator|=
literal|""
expr_stmt|;
name|record_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasName
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getRecordCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getRecord
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|record_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|record_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|record_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|record_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|data
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|data
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|input
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|Builder
name|builder
init|=
name|newBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|builder
operator|.
name|mergeDelimitedFrom
argument_list|(
name|input
argument_list|)
condition|)
block|{
return|return
name|builder
operator|.
name|buildParsed
argument_list|()
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|Builder
name|builder
init|=
name|newBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|builder
operator|.
name|mergeDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
condition|)
block|{
return|return
name|builder
operator|.
name|buildParsed
argument_list|()
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|input
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|TableOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|internal_static_Table_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|internal_static_Table_fieldAccessorTable
return|;
block|}
comment|// Construct using org.unitime.timetable.backup.TableData.Table.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getRecordFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|name_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|recordBuilder_
operator|==
literal|null
condition|)
block|{
name|record_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|recordBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
operator|.
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|build
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|buildParsed
parameter_list|()
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
operator|.
name|asInvalidProtocolBufferException
argument_list|()
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|result
init|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|name_
operator|=
name|name_
expr_stmt|;
if|if
condition|(
name|recordBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|record_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|record_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|record_
operator|=
name|record_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|record_
operator|=
name|recordBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasName
argument_list|()
condition|)
block|{
name|setName
argument_list|(
name|other
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|recordBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|record_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|record_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|record_
operator|=
name|other
operator|.
name|record_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureRecordIsMutable
argument_list|()
expr_stmt|;
name|record_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|record_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|record_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|recordBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|recordBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|recordBuilder_
operator|=
literal|null
expr_stmt|;
name|record_
operator|=
name|other
operator|.
name|record_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|recordBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getRecordFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|recordBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|record_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasName
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getRecordCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getRecord
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|(
name|this
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
decl_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|this
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|this
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|Builder
name|subBuilder
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|input
operator|.
name|readMessage
argument_list|(
name|subBuilder
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
name|addRecord
argument_list|(
name|subBuilder
operator|.
name|buildPartial
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string name = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
init|=
literal|""
decl_stmt|;
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|String
operator|)
condition|)
block|{
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|name_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|String
operator|)
name|ref
return|;
block|}
block|}
specifier|public
name|Builder
name|setName
parameter_list|(
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clearName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|name_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
name|void
name|setName
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
comment|// repeated .Record record = 2;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
argument_list|>
name|record_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureRecordIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|record_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
argument_list|>
argument_list|(
name|record_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|RecordOrBuilder
argument_list|>
name|recordBuilder_
decl_stmt|;
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
argument_list|>
name|getRecordList
parameter_list|()
block|{
if|if
condition|(
name|recordBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|record_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|recordBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
specifier|public
name|int
name|getRecordCount
parameter_list|()
block|{
if|if
condition|(
name|recordBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|record_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|recordBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|getRecord
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|recordBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|record_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|recordBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
specifier|public
name|Builder
name|setRecord
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|value
parameter_list|)
block|{
if|if
condition|(
name|recordBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRecordIsMutable
argument_list|()
expr_stmt|;
name|record_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|recordBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|setRecord
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|recordBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRecordIsMutable
argument_list|()
expr_stmt|;
name|record_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|recordBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|addRecord
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|value
parameter_list|)
block|{
if|if
condition|(
name|recordBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRecordIsMutable
argument_list|()
expr_stmt|;
name|record_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|recordBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|addRecord
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|value
parameter_list|)
block|{
if|if
condition|(
name|recordBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRecordIsMutable
argument_list|()
expr_stmt|;
name|record_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|recordBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|addRecord
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|recordBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRecordIsMutable
argument_list|()
expr_stmt|;
name|record_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|recordBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|addRecord
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|recordBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRecordIsMutable
argument_list|()
expr_stmt|;
name|record_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|recordBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|addAllRecord
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|recordBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRecordIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|record_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|recordBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clearRecord
parameter_list|()
block|{
if|if
condition|(
name|recordBuilder_
operator|==
literal|null
condition|)
block|{
name|record_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|recordBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|removeRecord
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|recordBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRecordIsMutable
argument_list|()
expr_stmt|;
name|record_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|recordBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|Builder
name|getRecordBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getRecordFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|RecordOrBuilder
name|getRecordOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|recordBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|record_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|recordBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|RecordOrBuilder
argument_list|>
name|getRecordOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|recordBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|recordBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|record_
argument_list|)
return|;
block|}
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|Builder
name|addRecordBuilder
parameter_list|()
block|{
return|return
name|getRecordFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|Builder
name|addRecordBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getRecordFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|Builder
argument_list|>
name|getRecordBuilderList
parameter_list|()
block|{
return|return
name|getRecordFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|RecordOrBuilder
argument_list|>
name|getRecordFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|recordBuilder_
operator|==
literal|null
condition|)
block|{
name|recordBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|RecordOrBuilder
argument_list|>
argument_list|(
name|record_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|record_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|recordBuilder_
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:Table)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|Table
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:Table)
block|}
specifier|public
interface|interface
name|RecordOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required string id = 1;
name|boolean
name|hasId
parameter_list|()
function_decl|;
name|String
name|getId
parameter_list|()
function_decl|;
comment|// repeated .Element element = 2;
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
argument_list|>
name|getElementList
parameter_list|()
function_decl|;
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|getElement
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
name|int
name|getElementCount
parameter_list|()
function_decl|;
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|ElementOrBuilder
argument_list|>
name|getElementOrBuilderList
parameter_list|()
function_decl|;
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|ElementOrBuilder
name|getElementOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
specifier|public
specifier|static
specifier|final
class|class
name|Record
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|RecordOrBuilder
block|{
comment|// Use Record.newBuilder() to construct.
specifier|private
name|Record
parameter_list|(
name|Builder
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Record
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
block|}
specifier|private
specifier|static
specifier|final
name|Record
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|Record
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|Record
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|internal_static_Record_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|internal_static_Record_fieldAccessorTable
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string id = 1;
specifier|public
specifier|static
specifier|final
name|int
name|ID_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|id_
decl_stmt|;
specifier|public
name|boolean
name|hasId
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
specifier|public
name|String
name|getId
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|id_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
return|return
operator|(
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|isValidUtf8
argument_list|(
name|bs
argument_list|)
condition|)
block|{
name|id_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getIdBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|id_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|id_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// repeated .Element element = 2;
specifier|public
specifier|static
specifier|final
name|int
name|ELEMENT_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
argument_list|>
name|element_
decl_stmt|;
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
argument_list|>
name|getElementList
parameter_list|()
block|{
return|return
name|element_
return|;
block|}
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|ElementOrBuilder
argument_list|>
name|getElementOrBuilderList
parameter_list|()
block|{
return|return
name|element_
return|;
block|}
specifier|public
name|int
name|getElementCount
parameter_list|()
block|{
return|return
name|element_
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|getElement
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|element_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|ElementOrBuilder
name|getElementOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|element_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|id_
operator|=
literal|""
expr_stmt|;
name|element_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasId
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getElementCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getElement
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getIdBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|element_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|element_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getIdBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|element_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|element_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|data
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|data
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|input
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|Builder
name|builder
init|=
name|newBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|builder
operator|.
name|mergeDelimitedFrom
argument_list|(
name|input
argument_list|)
condition|)
block|{
return|return
name|builder
operator|.
name|buildParsed
argument_list|()
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|Builder
name|builder
init|=
name|newBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|builder
operator|.
name|mergeDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
condition|)
block|{
return|return
name|builder
operator|.
name|buildParsed
argument_list|()
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|input
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|RecordOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|internal_static_Record_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|internal_static_Record_fieldAccessorTable
return|;
block|}
comment|// Construct using org.unitime.timetable.backup.TableData.Record.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getElementFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|id_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|elementBuilder_
operator|==
literal|null
condition|)
block|{
name|element_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|elementBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|build
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|buildParsed
parameter_list|()
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
operator|.
name|asInvalidProtocolBufferException
argument_list|()
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|result
init|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|id_
operator|=
name|id_
expr_stmt|;
if|if
condition|(
name|elementBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|element_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|element_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|element_
operator|=
name|element_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|element_
operator|=
name|elementBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasId
argument_list|()
condition|)
block|{
name|setId
argument_list|(
name|other
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|elementBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|element_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|element_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|element_
operator|=
name|other
operator|.
name|element_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureElementIsMutable
argument_list|()
expr_stmt|;
name|element_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|element_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|element_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|elementBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|elementBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|elementBuilder_
operator|=
literal|null
expr_stmt|;
name|element_
operator|=
name|other
operator|.
name|element_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|elementBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getElementFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|elementBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|element_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasId
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getElementCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getElement
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|(
name|this
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
decl_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|this
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|this
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|id_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|Builder
name|subBuilder
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|input
operator|.
name|readMessage
argument_list|(
name|subBuilder
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
name|addElement
argument_list|(
name|subBuilder
operator|.
name|buildPartial
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string id = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|id_
init|=
literal|""
decl_stmt|;
specifier|public
name|boolean
name|hasId
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
specifier|public
name|String
name|getId
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|id_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|String
operator|)
condition|)
block|{
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|id_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|String
operator|)
name|ref
return|;
block|}
block|}
specifier|public
name|Builder
name|setId
parameter_list|(
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|id_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clearId
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|id_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getId
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
name|void
name|setId
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|id_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
comment|// repeated .Element element = 2;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
argument_list|>
name|element_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureElementIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|element_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
argument_list|>
argument_list|(
name|element_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|ElementOrBuilder
argument_list|>
name|elementBuilder_
decl_stmt|;
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
argument_list|>
name|getElementList
parameter_list|()
block|{
if|if
condition|(
name|elementBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|element_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|elementBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
specifier|public
name|int
name|getElementCount
parameter_list|()
block|{
if|if
condition|(
name|elementBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|element_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|elementBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|getElement
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|elementBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|element_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|elementBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
specifier|public
name|Builder
name|setElement
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|value
parameter_list|)
block|{
if|if
condition|(
name|elementBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureElementIsMutable
argument_list|()
expr_stmt|;
name|element_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|elementBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|setElement
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|elementBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureElementIsMutable
argument_list|()
expr_stmt|;
name|element_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|elementBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|addElement
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|value
parameter_list|)
block|{
if|if
condition|(
name|elementBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureElementIsMutable
argument_list|()
expr_stmt|;
name|element_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|elementBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|addElement
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|value
parameter_list|)
block|{
if|if
condition|(
name|elementBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureElementIsMutable
argument_list|()
expr_stmt|;
name|element_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|elementBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|addElement
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|elementBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureElementIsMutable
argument_list|()
expr_stmt|;
name|element_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|elementBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|addElement
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|elementBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureElementIsMutable
argument_list|()
expr_stmt|;
name|element_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|elementBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|addAllElement
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|elementBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureElementIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|element_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|elementBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clearElement
parameter_list|()
block|{
if|if
condition|(
name|elementBuilder_
operator|==
literal|null
condition|)
block|{
name|element_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|elementBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|removeElement
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|elementBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureElementIsMutable
argument_list|()
expr_stmt|;
name|element_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|elementBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|Builder
name|getElementBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getElementFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|ElementOrBuilder
name|getElementOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|elementBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|element_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|elementBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|ElementOrBuilder
argument_list|>
name|getElementOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|elementBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|elementBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|element_
argument_list|)
return|;
block|}
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|Builder
name|addElementBuilder
parameter_list|()
block|{
return|return
name|getElementFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|Builder
name|addElementBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getElementFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|Builder
argument_list|>
name|getElementBuilderList
parameter_list|()
block|{
return|return
name|getElementFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|ElementOrBuilder
argument_list|>
name|getElementFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|elementBuilder_
operator|==
literal|null
condition|)
block|{
name|elementBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|ElementOrBuilder
argument_list|>
argument_list|(
name|element_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|element_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|elementBuilder_
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:Record)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|Record
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:Record)
block|}
specifier|public
interface|interface
name|ElementOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required string name = 1;
name|boolean
name|hasName
parameter_list|()
function_decl|;
name|String
name|getName
parameter_list|()
function_decl|;
comment|// repeated string value = 2;
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|String
argument_list|>
name|getValueList
parameter_list|()
function_decl|;
name|int
name|getValueCount
parameter_list|()
function_decl|;
name|String
name|getValue
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
specifier|public
specifier|static
specifier|final
class|class
name|Element
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|ElementOrBuilder
block|{
comment|// Use Element.newBuilder() to construct.
specifier|private
name|Element
parameter_list|(
name|Builder
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Element
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
block|}
specifier|private
specifier|static
specifier|final
name|Element
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|Element
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|Element
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|internal_static_Element_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|internal_static_Element_fieldAccessorTable
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string name = 1;
specifier|public
specifier|static
specifier|final
name|int
name|NAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
decl_stmt|;
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
return|return
operator|(
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|isValidUtf8
argument_list|(
name|bs
argument_list|)
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// repeated string value = 2;
specifier|public
specifier|static
specifier|final
name|int
name|VALUE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|value_
decl_stmt|;
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|String
argument_list|>
name|getValueList
parameter_list|()
block|{
return|return
name|value_
return|;
block|}
specifier|public
name|int
name|getValueCount
parameter_list|()
block|{
return|return
name|value_
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|String
name|getValue
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|value_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|name_
operator|=
literal|""
expr_stmt|;
name|value_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasName
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|value_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|2
argument_list|,
name|value_
operator|.
name|getByteString
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|int
name|dataSize
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|value_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|dataSize
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSizeNoTag
argument_list|(
name|value_
operator|.
name|getByteString
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|dataSize
expr_stmt|;
name|size
operator|+=
literal|1
operator|*
name|getValueList
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|data
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|data
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|input
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|Builder
name|builder
init|=
name|newBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|builder
operator|.
name|mergeDelimitedFrom
argument_list|(
name|input
argument_list|)
condition|)
block|{
return|return
name|builder
operator|.
name|buildParsed
argument_list|()
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|Builder
name|builder
init|=
name|newBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|builder
operator|.
name|mergeDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
condition|)
block|{
return|return
name|builder
operator|.
name|buildParsed
argument_list|()
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|input
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
operator|.
name|buildParsed
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|ElementOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|internal_static_Element_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|internal_static_Element_fieldAccessorTable
return|;
block|}
comment|// Construct using org.unitime.timetable.backup.TableData.Element.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|name_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|value_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|build
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|buildParsed
parameter_list|()
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
operator|.
name|asInvalidProtocolBufferException
argument_list|()
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|result
init|=
operator|new
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|name_
operator|=
name|name_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|value_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnmodifiableLazyStringList
argument_list|(
name|value_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|value_
operator|=
name|value_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasName
argument_list|()
condition|)
block|{
name|setName
argument_list|(
name|other
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|other
operator|.
name|value_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|value_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|value_
operator|=
name|other
operator|.
name|value_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureValueIsMutable
argument_list|()
expr_stmt|;
name|value_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|value_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasName
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|(
name|this
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
decl_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|this
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|this
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|ensureValueIsMutable
argument_list|()
expr_stmt|;
name|value_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readBytes
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string name = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
init|=
literal|""
decl_stmt|;
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|String
operator|)
condition|)
block|{
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|name_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|String
operator|)
name|ref
return|;
block|}
block|}
specifier|public
name|Builder
name|setName
parameter_list|(
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clearName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|name_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
name|void
name|setName
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
comment|// repeated string value = 2;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|value_
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
decl_stmt|;
specifier|private
name|void
name|ensureValueIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|value_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|(
name|value_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
block|}
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|String
argument_list|>
name|getValueList
parameter_list|()
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|value_
argument_list|)
return|;
block|}
specifier|public
name|int
name|getValueCount
parameter_list|()
block|{
return|return
name|value_
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|String
name|getValue
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|value_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setValue
parameter_list|(
name|int
name|index
parameter_list|,
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureValueIsMutable
argument_list|()
expr_stmt|;
name|value_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|addValue
parameter_list|(
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureValueIsMutable
argument_list|()
expr_stmt|;
name|value_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|addAllValue
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|ensureValueIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|value_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clearValue
parameter_list|()
block|{
name|value_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
name|void
name|addValue
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
name|ensureValueIsMutable
argument_list|()
expr_stmt|;
name|value_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(builder_scope:Element)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|Element
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:Element)
block|}
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_Table_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_Table_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_Record_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_Record_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_Element_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_Element_fieldAccessorTable
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|descriptor
return|;
block|}
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|descriptor
decl_stmt|;
static|static
block|{
name|java
operator|.
name|lang
operator|.
name|String
index|[]
name|descriptorData
init|=
block|{
literal|"\n\032JavaSource/TableData.proto\".\n\005Table\022\014\n"
operator|+
literal|"\004name\030\001 \002(\t\022\027\n\006record\030\002 \003(\0132\007.Record\"/\n\006"
operator|+
literal|"Record\022\n\n\002id\030\001 \002(\t\022\031\n\007element\030\002 \003(\0132\010.El"
operator|+
literal|"ement\"&\n\007Element\022\014\n\004name\030\001 \002(\t\022\r\n\005value\030"
operator|+
literal|"\002 \003(\tB\036\n\034org.unitime.timetable.backup"
block|}
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|InternalDescriptorAssigner
name|assigner
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|InternalDescriptorAssigner
argument_list|()
block|{
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistry
name|assignDescriptors
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|root
parameter_list|)
block|{
name|descriptor
operator|=
name|root
expr_stmt|;
name|internal_static_Table_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_Table_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_Table_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Name"
block|,
literal|"Record"
block|, }
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Table
operator|.
name|Builder
operator|.
name|class
argument_list|)
expr_stmt|;
name|internal_static_Record_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|internal_static_Record_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_Record_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Id"
block|,
literal|"Element"
block|, }
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Record
operator|.
name|Builder
operator|.
name|class
argument_list|)
expr_stmt|;
name|internal_static_Element_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|internal_static_Element_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_Element_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Name"
block|,
literal|"Value"
block|, }
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|class
argument_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
operator|.
name|TableData
operator|.
name|Element
operator|.
name|Builder
operator|.
name|class
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|internalBuildGeneratedFileFrom
argument_list|(
name|descriptorData
argument_list|,
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
index|[]
block|{         }
argument_list|,
name|assigner
argument_list|)
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(outer_class_scope)
block|}
end_class

end_unit

