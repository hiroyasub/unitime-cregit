begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|StringTokenizer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|PropertyConfigurator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|cpsolver
operator|.
name|ifs
operator|.
name|util
operator|.
name|Progress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|cpsolver
operator|.
name|ifs
operator|.
name|util
operator|.
name|ProgressWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|DocumentException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|io
operator|.
name|SAXReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|CacheMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|EntityMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|FlushMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|NonUniqueResultException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|SessionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|criterion
operator|.
name|Restrictions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|engine
operator|.
name|spi
operator|.
name|SessionFactoryImplementor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|mapping
operator|.
name|Column
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|mapping
operator|.
name|PersistentClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|metadata
operator|.
name|ClassMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|BinaryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|BooleanType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|ByteType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|CharacterType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|CollectionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|ComponentType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|CustomType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|DateType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|DoubleType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|EntityType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|FloatType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|IntegerType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|ListType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|LongType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|PrimitiveType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|SetType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|ShortType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|StringType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|TimestampType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|hibernate
operator|.
name|util
operator|.
name|HibernateUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|ApplicationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|ApplicationProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|AcademicArea
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|AcademicClassification
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ChangeLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Class_
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseRequestOption
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Curriculum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DepartmentalInstructor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DistributionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|EventContact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|EventServiceProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ExamOwner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ExamType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|InstrOfferingConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|InstructionalMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|InstructionalOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ItypeDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Location
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ManagerRole
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|OfferingConsentType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|OfferingCoordinator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|OnlineSectioningLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PosMajor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PosMinor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PreferenceLevel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RefTableEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RelatedCourseInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Roles
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Script
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ScriptParameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverInfoDef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverParameterDef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverParameterGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverPredefinedSetting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Student
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|StudentAreaClassificationMajor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|StudentAreaClassificationMinor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimetableManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TravelTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|_RootDAO
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|SessionRestore
implements|implements
name|SessionRestoreInterface
block|{
specifier|private
specifier|static
name|Log
name|sLog
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|SessionBackup
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|SessionFactory
name|iHibSessionFactory
init|=
literal|null
decl_stmt|;
specifier|private
name|org
operator|.
name|hibernate
operator|.
name|Session
name|iHibSession
init|=
literal|null
decl_stmt|;
specifier|private
name|BackupProgress
name|iProgress
init|=
literal|null
decl_stmt|;
specifier|private
name|boolean
name|iIsClone
init|=
literal|false
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Entity
argument_list|>
argument_list|>
name|iEntities
init|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Entity
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Entity
argument_list|>
name|iAllEntitites
init|=
operator|new
name|ArrayList
argument_list|<
name|Entity
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Student
argument_list|>
name|iStudents
init|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Student
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|PrintWriter
name|iDebug
init|=
literal|null
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|TableData
operator|.
name|Table
argument_list|>
name|iSkippedTables
init|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|TableData
operator|.
name|Table
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|InputStream
name|iIn
decl_stmt|;
specifier|public
name|BackupProgress
name|getProgress
parameter_list|()
block|{
return|return
name|iProgress
return|;
block|}
specifier|public
name|void
name|debug
parameter_list|(
name|PrintWriter
name|pw
parameter_list|)
block|{
name|iDebug
operator|=
name|pw
expr_stmt|;
block|}
specifier|private
name|boolean
name|lookup
parameter_list|(
name|Entity
name|entity
parameter_list|,
name|String
name|property
parameter_list|,
name|Object
name|value
parameter_list|,
name|String
name|session
parameter_list|)
block|{
name|boolean
name|hasSession
init|=
literal|false
decl_stmt|;
for|for
control|(
name|String
name|p
range|:
name|entity
operator|.
name|getMetaData
argument_list|()
operator|.
name|getPropertyNames
argument_list|()
control|)
if|if
condition|(
name|session
operator|.
name|equals
argument_list|(
name|p
argument_list|)
condition|)
block|{
name|hasSession
operator|=
literal|true
expr_stmt|;
break|break;
block|}
if|if
condition|(
operator|!
name|hasSession
condition|)
return|return
name|lookup
argument_list|(
name|entity
argument_list|,
name|property
argument_list|,
name|value
argument_list|)
return|;
if|if
condition|(
name|entity
operator|.
name|getElement
argument_list|(
name|session
argument_list|)
operator|!=
literal|null
condition|)
return|return
literal|false
return|;
try|try
block|{
name|Object
name|object
init|=
name|iHibSession
operator|.
name|createCriteria
argument_list|(
name|entity
operator|.
name|getMetaData
argument_list|()
operator|.
name|getMappedClass
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
name|property
argument_list|,
name|value
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|isNull
argument_list|(
name|session
argument_list|)
argument_list|)
operator|.
name|uniqueResult
argument_list|()
decl_stmt|;
if|if
condition|(
name|object
operator|!=
literal|null
condition|)
name|entity
operator|.
name|setObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
else|else
name|message
argument_list|(
literal|"Lookup "
operator|+
name|entity
operator|.
name|getAbbv
argument_list|()
operator|+
literal|"."
operator|+
name|property
operator|+
literal|" failed"
argument_list|,
operator|(
name|value
operator|==
literal|null
condition|?
literal|"null"
else|:
name|value
operator|.
name|toString
argument_list|()
operator|)
argument_list|)
expr_stmt|;
return|return
name|object
operator|!=
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|NonUniqueResultException
name|e
parameter_list|)
block|{
name|message
argument_list|(
literal|"Lookup "
operator|+
name|entity
operator|.
name|getAbbv
argument_list|()
operator|+
literal|"."
operator|+
name|property
operator|+
literal|"="
operator|+
name|value
operator|+
literal|" is not unique"
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|list
init|=
name|iHibSession
operator|.
name|createCriteria
argument_list|(
name|entity
operator|.
name|getMetaData
argument_list|()
operator|.
name|getMappedClass
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
name|property
argument_list|,
name|value
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|isNull
argument_list|(
name|session
argument_list|)
argument_list|)
operator|.
name|list
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|list
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Object
name|object
init|=
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
block|}
specifier|private
name|boolean
name|lookup
parameter_list|(
name|Entity
name|entity
parameter_list|,
name|String
name|property
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
try|try
block|{
name|Object
name|object
init|=
name|iHibSession
operator|.
name|createCriteria
argument_list|(
name|entity
operator|.
name|getMetaData
argument_list|()
operator|.
name|getMappedClass
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
name|property
argument_list|,
name|value
argument_list|)
argument_list|)
operator|.
name|uniqueResult
argument_list|()
decl_stmt|;
if|if
condition|(
name|object
operator|!=
literal|null
condition|)
name|entity
operator|.
name|setObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
else|else
name|message
argument_list|(
literal|"Lookup "
operator|+
name|entity
operator|.
name|getAbbv
argument_list|()
operator|+
literal|"."
operator|+
name|property
operator|+
literal|" failed"
argument_list|,
operator|(
name|value
operator|==
literal|null
condition|?
literal|"null"
else|:
name|value
operator|.
name|toString
argument_list|()
operator|)
argument_list|)
expr_stmt|;
return|return
name|object
operator|!=
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|NonUniqueResultException
name|e
parameter_list|)
block|{
name|message
argument_list|(
literal|"Lookup "
operator|+
name|entity
operator|.
name|getAbbv
argument_list|()
operator|+
literal|"."
operator|+
name|property
operator|+
literal|"="
operator|+
name|value
operator|+
literal|" is not unique"
argument_list|,
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|list
init|=
name|iHibSession
operator|.
name|createCriteria
argument_list|(
name|entity
operator|.
name|getMetaData
argument_list|()
operator|.
name|getMappedClass
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
name|property
argument_list|,
name|value
argument_list|)
argument_list|)
operator|.
name|list
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|list
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Object
name|object
init|=
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
block|}
specifier|protected
name|void
name|add
parameter_list|(
name|Entity
name|entity
parameter_list|)
block|{
name|boolean
name|save
init|=
literal|true
decl_stmt|;
name|boolean
name|lookup
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|Session
condition|)
block|{
name|Session
name|oldSession
init|=
operator|(
name|Session
operator|)
name|iHibSession
operator|.
name|get
argument_list|(
name|Session
operator|.
name|class
argument_list|,
name|Long
operator|.
name|valueOf
argument_list|(
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|oldSession
operator|!=
literal|null
condition|)
name|iIsClone
operator|=
literal|true
expr_stmt|;
name|Session
name|session
init|=
operator|(
name|Session
operator|)
name|entity
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|int
name|attempt
init|=
literal|0
decl_stmt|;
while|while
condition|(
operator|!
name|iHibSession
operator|.
name|createCriteria
argument_list|(
name|Session
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
literal|"academicInitiative"
argument_list|,
name|session
operator|.
name|getAcademicInitiative
argument_list|()
operator|+
operator|(
name|attempt
operator|==
literal|0
condition|?
literal|""
else|:
literal|" ["
operator|+
name|attempt
operator|+
literal|"]"
operator|)
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
literal|"academicYear"
argument_list|,
name|session
operator|.
name|getAcademicYear
argument_list|()
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
literal|"academicTerm"
argument_list|,
name|session
operator|.
name|getAcademicTerm
argument_list|()
argument_list|)
argument_list|)
operator|.
name|list
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|attempt
operator|++
expr_stmt|;
block|}
if|if
condition|(
name|attempt
operator|>
literal|0
condition|)
name|session
operator|.
name|setAcademicInitiative
argument_list|(
name|session
operator|.
name|getAcademicInitiative
argument_list|()
operator|+
literal|" ["
operator|+
name|attempt
operator|+
literal|"]"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|PreferenceLevel
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"prefProlog"
argument_list|,
operator|(
operator|(
name|PreferenceLevel
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getPrefProlog
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|RefTableEntry
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"reference"
argument_list|,
operator|(
operator|(
name|RefTableEntry
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getReference
argument_list|()
argument_list|,
literal|"session"
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|TimetableManager
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"externalUniqueId"
argument_list|,
operator|(
operator|(
name|TimetableManager
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getExternalUniqueId
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|ItypeDesc
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"itype"
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|SolverInfoDef
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"name"
argument_list|,
operator|(
operator|(
name|SolverInfoDef
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|SolverParameterGroup
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"name"
argument_list|,
operator|(
operator|(
name|SolverParameterGroup
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|SolverPredefinedSetting
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"name"
argument_list|,
operator|(
operator|(
name|SolverPredefinedSetting
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|Roles
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"reference"
argument_list|,
operator|(
operator|(
name|Roles
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getReference
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|OfferingConsentType
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"label"
argument_list|,
operator|(
operator|(
name|OfferingConsentType
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getLabel
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|ChangeLog
condition|)
block|{
name|save
operator|=
literal|false
expr_stmt|;
name|lookup
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|OnlineSectioningLog
condition|)
block|{
name|save
operator|=
literal|false
expr_stmt|;
name|lookup
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|Settings
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"key"
argument_list|,
operator|(
operator|(
name|Settings
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getKey
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|EventContact
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"externalUniqueId"
argument_list|,
operator|(
operator|(
name|EventContact
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getExternalUniqueId
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|EventServiceProvider
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"reference"
argument_list|,
operator|(
operator|(
name|EventServiceProvider
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getReference
argument_list|()
argument_list|,
literal|"session"
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|Script
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"name"
argument_list|,
operator|(
operator|(
name|Script
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|ScriptParameter
condition|)
block|{
name|Script
name|x
init|=
operator|(
name|Script
operator|)
name|get
argument_list|(
name|Script
operator|.
name|class
argument_list|,
name|entity
operator|.
name|getElement
argument_list|(
literal|"script"
argument_list|)
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|x
operator|!=
literal|null
operator|&&
name|x
operator|.
name|getUniqueId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|save
operator|=
literal|false
expr_stmt|;
name|lookup
operator|=
literal|false
expr_stmt|;
block|}
block|}
if|if
condition|(
name|save
condition|)
name|iAllEntitites
operator|.
name|add
argument_list|(
name|entity
argument_list|)
expr_stmt|;
if|if
condition|(
name|lookup
condition|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Entity
argument_list|>
name|entityOfThisType
init|=
name|iEntities
operator|.
name|get
argument_list|(
name|entity
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|entityOfThisType
operator|==
literal|null
condition|)
block|{
name|entityOfThisType
operator|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Entity
argument_list|>
argument_list|()
expr_stmt|;
name|iEntities
operator|.
name|put
argument_list|(
name|entity
operator|.
name|getName
argument_list|()
argument_list|,
name|entityOfThisType
argument_list|)
expr_stmt|;
block|}
name|entityOfThisType
operator|.
name|put
argument_list|(
name|entity
operator|.
name|getId
argument_list|()
argument_list|,
name|entity
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|Student
condition|)
block|{
name|Student
name|student
init|=
operator|(
name|Student
operator|)
name|entity
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|iStudents
operator|.
name|put
argument_list|(
name|student
operator|.
name|getExternalUniqueId
argument_list|()
argument_list|,
name|student
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|Entity
name|lookupSkippedRecord
parameter_list|(
name|String
name|tableName
parameter_list|,
name|String
name|id
parameter_list|)
block|{
name|TableData
operator|.
name|Table
name|table
init|=
name|iSkippedTables
operator|.
name|get
argument_list|(
name|tableName
argument_list|)
decl_stmt|;
if|if
condition|(
name|table
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|TableData
operator|.
name|Record
name|record
range|:
name|table
operator|.
name|getRecordList
argument_list|()
control|)
block|{
if|if
condition|(
name|id
operator|.
name|equals
argument_list|(
name|record
operator|.
name|getId
argument_list|()
argument_list|)
operator|&&
name|record
operator|.
name|getElementCount
argument_list|()
operator|>
literal|0
condition|)
return|return
operator|new
name|Entity
argument_list|(
literal|null
argument_list|,
name|record
argument_list|,
literal|null
argument_list|,
name|id
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|create
parameter_list|(
name|TableData
operator|.
name|Table
name|table
parameter_list|)
throws|throws
name|InstantiationException
throws|,
name|IllegalAccessException
throws|,
name|DocumentException
block|{
name|ClassMetadata
name|metadata
init|=
name|iHibSessionFactory
operator|.
name|getClassMetadata
argument_list|(
name|table
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|metadata
operator|==
literal|null
condition|)
block|{
name|iSkippedTables
operator|.
name|put
argument_list|(
name|table
operator|.
name|getName
argument_list|()
argument_list|,
name|table
argument_list|)
expr_stmt|;
return|return;
block|}
name|PersistentClass
name|mapping
init|=
name|_RootDAO
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getClassMapping
argument_list|(
name|table
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
name|lengths
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|property
range|:
name|metadata
operator|.
name|getPropertyNames
argument_list|()
control|)
block|{
if|if
condition|(
literal|"org.unitime.timetable.model.CurriculumClassification.students"
operator|.
name|equals
argument_list|(
name|metadata
operator|.
name|getEntityName
argument_list|()
operator|+
literal|"."
operator|+
name|property
argument_list|)
condition|)
continue|continue;
if|if
condition|(
literal|"org.unitime.timetable.model.Script.script"
operator|.
name|equals
argument_list|(
name|metadata
operator|.
name|getEntityName
argument_list|()
operator|+
literal|"."
operator|+
name|property
argument_list|)
condition|)
continue|continue;
if|if
condition|(
literal|"org.unitime.timetable.model.TaskExecution.logFile"
operator|.
name|equals
argument_list|(
name|metadata
operator|.
name|getEntityName
argument_list|()
operator|+
literal|"."
operator|+
name|property
argument_list|)
condition|)
continue|continue;
name|Type
name|type
init|=
name|metadata
operator|.
name|getPropertyType
argument_list|(
name|property
argument_list|)
decl_stmt|;
if|if
condition|(
name|type
operator|instanceof
name|StringType
condition|)
for|for
control|(
name|Iterator
argument_list|<
name|?
argument_list|>
name|i
init|=
name|mapping
operator|.
name|getProperty
argument_list|(
name|property
argument_list|)
operator|.
name|getColumnIterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Object
name|o
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|o
operator|instanceof
name|Column
condition|)
block|{
name|Column
name|column
init|=
operator|(
name|Column
operator|)
name|o
decl_stmt|;
name|lengths
operator|.
name|put
argument_list|(
name|property
argument_list|,
name|column
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
block|}
name|iProgress
operator|.
name|setPhase
argument_list|(
name|metadata
operator|.
name|getEntityName
argument_list|()
operator|.
name|substring
argument_list|(
name|metadata
operator|.
name|getEntityName
argument_list|()
operator|.
name|lastIndexOf
argument_list|(
literal|'.'
argument_list|)
operator|+
literal|1
argument_list|)
operator|+
literal|" ["
operator|+
name|table
operator|.
name|getRecordCount
argument_list|()
operator|+
literal|"]"
argument_list|,
name|table
operator|.
name|getRecordCount
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|TableData
operator|.
name|Record
name|record
range|:
name|table
operator|.
name|getRecordList
argument_list|()
control|)
block|{
name|iProgress
operator|.
name|incProgress
argument_list|()
expr_stmt|;
name|Object
name|object
init|=
name|metadata
operator|.
name|getMappedClass
argument_list|()
operator|.
name|newInstance
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|property
range|:
name|metadata
operator|.
name|getPropertyNames
argument_list|()
control|)
block|{
name|TableData
operator|.
name|Element
name|element
init|=
literal|null
decl_stmt|;
for|for
control|(
name|TableData
operator|.
name|Element
name|e
range|:
name|record
operator|.
name|getElementList
argument_list|()
control|)
if|if
condition|(
name|e
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|property
argument_list|)
condition|)
block|{
name|element
operator|=
name|e
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|element
operator|==
literal|null
condition|)
continue|continue;
name|Object
name|value
init|=
literal|null
decl_stmt|;
name|Type
name|type
init|=
name|metadata
operator|.
name|getPropertyType
argument_list|(
name|property
argument_list|)
decl_stmt|;
if|if
condition|(
name|type
operator|instanceof
name|PrimitiveType
condition|)
block|{
if|if
condition|(
name|type
operator|instanceof
name|BooleanType
condition|)
block|{
name|value
operator|=
operator|new
name|Boolean
argument_list|(
literal|"true"
operator|.
name|equals
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|ByteType
condition|)
block|{
name|value
operator|=
name|Byte
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|CharacterType
condition|)
block|{
name|value
operator|=
name|Character
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
operator|.
name|charAt
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|DoubleType
condition|)
block|{
name|value
operator|=
name|Double
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|FloatType
condition|)
block|{
name|value
operator|=
name|Float
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|IntegerType
condition|)
block|{
name|value
operator|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|LongType
condition|)
block|{
name|value
operator|=
name|Long
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|ShortType
condition|)
block|{
name|value
operator|=
name|Short
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|type
operator|instanceof
name|DateType
condition|)
block|{
try|try
block|{
name|value
operator|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"dd MMMM yyyy"
argument_list|,
name|Localization
operator|.
name|getJavaLocale
argument_list|()
argument_list|)
operator|.
name|parse
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParseException
name|e
parameter_list|)
block|{
name|value
operator|=
operator|new
name|DateType
argument_list|()
operator|.
name|fromStringValue
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|type
operator|instanceof
name|TimestampType
condition|)
block|{
name|value
operator|=
operator|new
name|TimestampType
argument_list|()
operator|.
name|fromStringValue
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|StringType
condition|)
block|{
name|value
operator|=
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|Integer
name|len
init|=
name|lengths
operator|.
name|get
argument_list|(
name|property
argument_list|)
decl_stmt|;
if|if
condition|(
name|len
operator|!=
literal|null
operator|&&
name|value
operator|.
name|toString
argument_list|()
operator|.
name|length
argument_list|()
operator|>
name|len
condition|)
block|{
name|message
argument_list|(
literal|"Value is  too long, truncated (property "
operator|+
name|metadata
operator|.
name|getEntityName
argument_list|()
operator|+
literal|"."
operator|+
name|property
operator|+
literal|", length "
operator|+
name|len
operator|+
literal|")"
argument_list|,
name|record
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|value
operator|=
name|value
operator|.
name|toString
argument_list|()
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|type
operator|instanceof
name|BinaryType
condition|)
block|{
name|value
operator|=
name|element
operator|.
name|getValueBytes
argument_list|(
literal|0
argument_list|)
operator|.
name|toByteArray
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|CustomType
operator|&&
name|type
operator|.
name|getReturnedClass
argument_list|()
operator|.
name|equals
argument_list|(
name|Document
operator|.
name|class
argument_list|)
condition|)
block|{
name|value
operator|=
operator|new
name|SAXReader
argument_list|()
operator|.
name|read
argument_list|(
operator|new
name|StringReader
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|EntityType
condition|)
block|{
block|}
if|else if
condition|(
name|type
operator|instanceof
name|CollectionType
condition|)
block|{
block|}
else|else
block|{
name|message
argument_list|(
literal|"Unknown type "
operator|+
name|type
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" (property "
operator|+
name|metadata
operator|.
name|getEntityName
argument_list|()
operator|+
literal|"."
operator|+
name|property
operator|+
literal|", class "
operator|+
name|type
operator|.
name|getReturnedClass
argument_list|()
operator|+
literal|")"
argument_list|,
name|record
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|setPropertyValue
argument_list|(
name|object
argument_list|,
name|property
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
name|add
argument_list|(
operator|new
name|Entity
argument_list|(
name|metadata
argument_list|,
name|record
argument_list|,
name|object
argument_list|,
name|record
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|iMessages
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|protected
name|void
name|message
parameter_list|(
name|String
name|message
parameter_list|,
name|String
name|id
parameter_list|)
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|ids
init|=
name|iMessages
operator|.
name|get
argument_list|(
name|message
argument_list|)
decl_stmt|;
if|if
condition|(
name|ids
operator|==
literal|null
condition|)
block|{
name|ids
operator|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|iMessages
operator|.
name|put
argument_list|(
name|message
argument_list|,
name|ids
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ids
operator|.
name|add
argument_list|(
name|id
argument_list|)
operator|&&
name|ids
operator|.
name|size
argument_list|()
operator|<=
literal|5
condition|)
name|iProgress
operator|.
name|warn
argument_list|(
name|message
operator|+
operator|(
name|id
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|": "
operator|+
name|id
operator|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Object
name|checkUnknown
parameter_list|(
name|Class
name|clazz
parameter_list|,
name|String
name|id
parameter_list|,
name|Object
name|object
parameter_list|)
block|{
if|if
condition|(
name|object
operator|==
literal|null
condition|)
name|message
argument_list|(
literal|"Unknown "
operator|+
name|clazz
operator|.
name|getName
argument_list|()
operator|.
name|substring
argument_list|(
name|clazz
operator|.
name|getName
argument_list|()
operator|.
name|lastIndexOf
argument_list|(
literal|'.'
argument_list|)
operator|+
literal|1
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
return|return
name|object
return|;
block|}
specifier|private
name|void
name|printMessages
parameter_list|()
block|{
for|for
control|(
name|String
name|message
range|:
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|iMessages
operator|.
name|keySet
argument_list|()
argument_list|)
control|)
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|ids
init|=
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|iMessages
operator|.
name|get
argument_list|(
name|message
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|ids
operator|.
name|isEmpty
argument_list|()
operator|||
operator|(
name|ids
operator|.
name|size
argument_list|()
operator|==
literal|1
operator|&&
name|ids
operator|.
name|contains
argument_list|(
literal|""
argument_list|)
operator|)
condition|)
name|iProgress
operator|.
name|info
argument_list|(
name|message
argument_list|)
expr_stmt|;
else|else
block|{
name|String
name|list
init|=
literal|""
decl_stmt|;
name|int
name|size
init|=
literal|0
decl_stmt|;
for|for
control|(
name|String
name|id
range|:
name|ids
control|)
block|{
if|if
condition|(
operator|!
name|list
operator|.
name|isEmpty
argument_list|()
condition|)
name|list
operator|+=
literal|", "
expr_stmt|;
if|if
condition|(
name|size
operator|>
literal|20
condition|)
block|{
name|list
operator|+=
literal|"... "
operator|+
operator|(
name|ids
operator|.
name|size
argument_list|()
operator|-
name|size
operator|)
operator|+
literal|" more"
expr_stmt|;
break|break;
block|}
name|list
operator|+=
name|id
expr_stmt|;
name|size
operator|++
expr_stmt|;
block|}
name|iProgress
operator|.
name|info
argument_list|(
name|message
operator|+
literal|": "
operator|+
name|list
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|protected
name|Entity
name|getEntity
parameter_list|(
name|Class
name|clazz
parameter_list|,
name|String
name|id
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Entity
argument_list|>
name|entities
init|=
name|iEntities
operator|.
name|get
argument_list|(
name|clazz
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|entities
operator|!=
literal|null
condition|)
block|{
return|return
name|entities
operator|.
name|get
argument_list|(
name|id
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|protected
name|Object
name|get
parameter_list|(
name|Class
name|clazz
parameter_list|,
name|String
name|id
parameter_list|)
block|{
if|if
condition|(
name|clazz
operator|.
name|equals
argument_list|(
name|String
operator|.
name|class
argument_list|)
operator|||
name|clazz
operator|.
name|equals
argument_list|(
name|StringType
operator|.
name|class
argument_list|)
condition|)
return|return
name|id
return|;
if|if
condition|(
name|clazz
operator|.
name|equals
argument_list|(
name|Character
operator|.
name|class
argument_list|)
operator|||
name|clazz
operator|.
name|equals
argument_list|(
name|CharacterType
operator|.
name|class
argument_list|)
condition|)
return|return
operator|(
name|id
operator|==
literal|null
operator|||
name|id
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
name|id
operator|.
name|charAt
argument_list|(
literal|0
argument_list|)
operator|)
return|;
if|if
condition|(
name|clazz
operator|.
name|equals
argument_list|(
name|Byte
operator|.
name|class
argument_list|)
operator|||
name|clazz
operator|.
name|equals
argument_list|(
name|ByteType
operator|.
name|class
argument_list|)
condition|)
return|return
name|Byte
operator|.
name|valueOf
argument_list|(
name|id
argument_list|)
return|;
if|if
condition|(
name|clazz
operator|.
name|equals
argument_list|(
name|Short
operator|.
name|class
argument_list|)
operator|||
name|clazz
operator|.
name|equals
argument_list|(
name|ShortType
operator|.
name|class
argument_list|)
condition|)
return|return
name|Short
operator|.
name|valueOf
argument_list|(
name|id
argument_list|)
return|;
if|if
condition|(
name|clazz
operator|.
name|equals
argument_list|(
name|Integer
operator|.
name|class
argument_list|)
operator|||
name|clazz
operator|.
name|equals
argument_list|(
name|IntegerType
operator|.
name|class
argument_list|)
condition|)
return|return
name|Integer
operator|.
name|valueOf
argument_list|(
name|id
argument_list|)
return|;
if|if
condition|(
name|clazz
operator|.
name|equals
argument_list|(
name|Long
operator|.
name|class
argument_list|)
operator|||
name|clazz
operator|.
name|equals
argument_list|(
name|LongType
operator|.
name|class
argument_list|)
condition|)
return|return
name|Long
operator|.
name|valueOf
argument_list|(
name|id
argument_list|)
return|;
if|if
condition|(
name|clazz
operator|.
name|equals
argument_list|(
name|Float
operator|.
name|class
argument_list|)
operator|||
name|clazz
operator|.
name|equals
argument_list|(
name|FloatType
operator|.
name|class
argument_list|)
condition|)
return|return
name|Float
operator|.
name|valueOf
argument_list|(
name|id
argument_list|)
return|;
if|if
condition|(
name|clazz
operator|.
name|equals
argument_list|(
name|Double
operator|.
name|class
argument_list|)
operator|||
name|clazz
operator|.
name|equals
argument_list|(
name|DoubleType
operator|.
name|class
argument_list|)
condition|)
return|return
name|Double
operator|.
name|valueOf
argument_list|(
name|id
argument_list|)
return|;
if|if
condition|(
name|clazz
operator|.
name|equals
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
operator|||
name|clazz
operator|.
name|equals
argument_list|(
name|BooleanType
operator|.
name|class
argument_list|)
condition|)
return|return
name|Boolean
operator|.
name|valueOf
argument_list|(
name|id
argument_list|)
return|;
name|Map
argument_list|<
name|String
argument_list|,
name|Entity
argument_list|>
name|entities
init|=
name|iEntities
operator|.
name|get
argument_list|(
name|clazz
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|entities
operator|!=
literal|null
condition|)
block|{
name|Entity
name|entity
init|=
name|entities
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|entity
operator|!=
literal|null
condition|)
return|return
name|entity
operator|.
name|getObject
argument_list|()
return|;
block|}
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Entity
argument_list|>
argument_list|>
name|entry
range|:
name|iEntities
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|Entity
name|o
init|=
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|o
operator|!=
literal|null
operator|&&
name|clazz
operator|.
name|isInstance
argument_list|(
name|o
operator|.
name|getObject
argument_list|()
argument_list|)
condition|)
return|return
name|o
operator|.
name|getObject
argument_list|()
return|;
block|}
if|if
condition|(
name|clazz
operator|.
name|equals
argument_list|(
name|Session
operator|.
name|class
argument_list|)
condition|)
return|return
operator|(
operator|(
name|Entity
operator|)
name|iEntities
operator|.
name|get
argument_list|(
name|Session
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|values
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|)
operator|.
name|getObject
argument_list|()
return|;
if|if
condition|(
name|clazz
operator|.
name|equals
argument_list|(
name|Student
operator|.
name|class
argument_list|)
condition|)
return|return
name|checkUnknown
argument_list|(
name|clazz
argument_list|,
name|id
argument_list|,
name|iStudents
operator|.
name|get
argument_list|(
name|id
argument_list|)
argument_list|)
return|;
if|if
condition|(
name|iIsClone
condition|)
return|return
name|checkUnknown
argument_list|(
name|clazz
argument_list|,
name|id
argument_list|,
name|iHibSession
operator|.
name|get
argument_list|(
name|clazz
argument_list|,
name|clazz
operator|.
name|equals
argument_list|(
name|ItypeDesc
operator|.
name|class
argument_list|)
condition|?
operator|(
name|Serializable
operator|)
name|Integer
operator|.
name|valueOf
argument_list|(
name|id
argument_list|)
else|:
operator|(
name|Serializable
operator|)
name|Long
operator|.
name|valueOf
argument_list|(
name|id
argument_list|)
argument_list|)
argument_list|)
return|;
return|return
name|checkUnknown
argument_list|(
name|clazz
argument_list|,
name|id
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|private
name|boolean
name|fix
parameter_list|(
name|Entity
name|entity
parameter_list|)
block|{
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|SolverParameterDef
condition|)
block|{
name|SolverParameterDef
name|def
init|=
operator|(
name|SolverParameterDef
operator|)
name|entity
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|TableData
operator|.
name|Element
name|element
init|=
name|entity
operator|.
name|getElement
argument_list|(
literal|"group"
argument_list|)
decl_stmt|;
name|SolverParameterGroup
name|group
init|=
operator|(
name|SolverParameterGroup
operator|)
name|get
argument_list|(
name|SolverParameterGroup
operator|.
name|class
argument_list|,
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|group
operator|!=
literal|null
operator|&&
name|group
operator|.
name|getUniqueId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|List
name|list
init|=
name|iHibSession
operator|.
name|createCriteria
argument_list|(
name|SolverParameterDef
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
literal|"name"
argument_list|,
name|def
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
literal|"group"
argument_list|,
name|group
argument_list|)
argument_list|)
operator|.
name|list
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|list
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|list
operator|.
name|size
argument_list|()
operator|>
literal|1
condition|)
name|message
argument_list|(
literal|"Multiple results for SolverParameterDef (name="
operator|+
name|def
operator|.
name|getName
argument_list|()
operator|+
literal|", group="
operator|+
name|group
operator|.
name|getName
argument_list|()
operator|+
literal|")"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setObject
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
block|}
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|ManagerRole
condition|)
block|{
name|Roles
name|role
init|=
operator|(
name|Roles
operator|)
name|get
argument_list|(
name|Roles
operator|.
name|class
argument_list|,
name|entity
operator|.
name|getElement
argument_list|(
literal|"role"
argument_list|)
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|TimetableManager
name|manager
init|=
operator|(
name|TimetableManager
operator|)
name|get
argument_list|(
name|TimetableManager
operator|.
name|class
argument_list|,
name|entity
operator|.
name|getElement
argument_list|(
literal|"timetableManager"
argument_list|)
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|role
operator|.
name|getRoleId
argument_list|()
operator|!=
literal|null
operator|&&
name|manager
operator|.
name|getUniqueId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|Object
name|object
init|=
name|iHibSession
operator|.
name|createCriteria
argument_list|(
name|ManagerRole
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
literal|"role"
argument_list|,
name|role
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
literal|"timetableManager"
argument_list|,
name|manager
argument_list|)
argument_list|)
operator|.
name|uniqueResult
argument_list|()
decl_stmt|;
if|if
condition|(
name|object
operator|!=
literal|null
condition|)
block|{
name|entity
operator|.
name|setObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
block|}
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|Department
condition|)
block|{
name|Department
name|department
init|=
operator|(
name|Department
operator|)
name|entity
operator|.
name|getObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|department
operator|.
name|isInheritInstructorPreferences
argument_list|()
operator|==
literal|null
condition|)
name|department
operator|.
name|setInheritInstructorPreferences
argument_list|(
operator|!
name|department
operator|.
name|isExternalManager
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|ItypeDesc
condition|)
block|{
name|ItypeDesc
name|itype
init|=
operator|(
name|ItypeDesc
operator|)
name|entity
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|itype
operator|.
name|setItype
argument_list|(
operator|new
name|Integer
argument_list|(
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|DistributionType
condition|)
block|{
name|int
name|maxReqId
init|=
operator|(
operator|(
name|Number
operator|)
name|iHibSession
operator|.
name|createQuery
argument_list|(
literal|"select max(requirementId) from DistributionType"
argument_list|)
operator|.
name|uniqueResult
argument_list|()
operator|)
operator|.
name|intValue
argument_list|()
decl_stmt|;
name|int
name|distReqId
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Entity
name|e
range|:
name|iEntities
operator|.
name|get
argument_list|(
name|DistributionType
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|values
argument_list|()
control|)
if|if
condition|(
name|e
operator|.
name|getId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
operator|<=
literal|0
operator|&&
operator|(
operator|(
name|DistributionType
operator|)
name|e
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
name|distReqId
operator|++
expr_stmt|;
operator|(
operator|(
name|DistributionType
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|setRequirementId
argument_list|(
name|maxReqId
operator|+
name|distReqId
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|restore
parameter_list|(
name|InputStream
name|input
parameter_list|,
name|BackupProgress
name|progress
parameter_list|)
throws|throws
name|IOException
throws|,
name|InstantiationException
throws|,
name|IllegalAccessException
throws|,
name|DocumentException
block|{
name|iIn
operator|=
name|input
expr_stmt|;
name|iProgress
operator|=
name|progress
expr_stmt|;
name|iHibSession
operator|=
operator|new
name|_RootDAO
argument_list|()
operator|.
name|createNewSession
argument_list|()
expr_stmt|;
name|iHibSession
operator|.
name|setCacheMode
argument_list|(
name|CacheMode
operator|.
name|IGNORE
argument_list|)
expr_stmt|;
name|iHibSessionFactory
operator|=
name|iHibSession
operator|.
name|getSessionFactory
argument_list|()
expr_stmt|;
try|try
block|{
name|CodedInputStream
name|cin
init|=
name|CodedInputStream
operator|.
name|newInstance
argument_list|(
name|iIn
argument_list|)
decl_stmt|;
name|cin
operator|.
name|setSizeLimit
argument_list|(
literal|1024
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
expr_stmt|;
comment|// 1 GB
name|iProgress
operator|.
name|setPhase
argument_list|(
literal|"Loading data"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|TableData
operator|.
name|Table
name|t
init|=
literal|null
decl_stmt|;
while|while
condition|(
operator|(
name|t
operator|=
name|readTable
argument_list|(
name|cin
argument_list|)
operator|)
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|iDebug
operator|!=
literal|null
condition|)
block|{
name|iDebug
operator|.
name|println
argument_list|(
literal|"## "
operator|+
name|t
operator|.
name|getName
argument_list|()
operator|+
literal|" ##"
argument_list|)
expr_stmt|;
name|iDebug
operator|.
name|print
argument_list|(
name|t
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|iDebug
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
name|create
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
name|iProgress
operator|.
name|incProgress
argument_list|()
expr_stmt|;
name|iHibSession
operator|.
name|setFlushMode
argument_list|(
name|FlushMode
operator|.
name|MANUAL
argument_list|)
expr_stmt|;
name|iProgress
operator|.
name|setPhase
argument_list|(
literal|"Fixing"
argument_list|,
name|iAllEntitites
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|Entity
argument_list|>
name|i
init|=
name|iAllEntitites
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|iProgress
operator|.
name|incProgress
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|fix
argument_list|(
name|i
operator|.
name|next
argument_list|()
argument_list|)
condition|)
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
name|iProgress
operator|.
name|setPhase
argument_list|(
literal|"Saving (not-null)"
argument_list|,
name|iAllEntitites
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Entity
argument_list|>
name|save
init|=
operator|new
name|ArrayList
argument_list|<
name|Entity
argument_list|>
argument_list|(
name|iAllEntitites
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|otherObjectsToSave
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|boolean
name|saved
init|=
literal|true
decl_stmt|;
while|while
condition|(
operator|!
name|save
operator|.
name|isEmpty
argument_list|()
operator|&&
name|saved
condition|)
block|{
name|saved
operator|=
literal|false
expr_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|Entity
argument_list|>
name|i
init|=
name|save
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Entity
name|e
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|e
operator|.
name|canSave
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iProgress
operator|.
name|incProgress
argument_list|()
expr_stmt|;
name|e
operator|.
name|fixRelationsNullOnly
argument_list|(
name|otherObjectsToSave
argument_list|)
expr_stmt|;
name|iHibSession
operator|.
name|save
argument_list|(
name|e
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
name|saved
operator|=
literal|true
expr_stmt|;
block|}
block|}
name|iHibSession
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|Object
name|object
range|:
name|otherObjectsToSave
control|)
name|iHibSession
operator|.
name|save
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|otherObjectsToSave
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iHibSession
operator|.
name|flush
argument_list|()
expr_stmt|;
name|iProgress
operator|.
name|setPhase
argument_list|(
literal|"Saving (all)"
argument_list|,
name|iAllEntitites
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Entity
name|e
range|:
name|iAllEntitites
control|)
block|{
name|iProgress
operator|.
name|incProgress
argument_list|()
expr_stmt|;
name|String
name|property
init|=
name|e
operator|.
name|canSave
argument_list|()
decl_stmt|;
if|if
condition|(
name|property
operator|==
literal|null
condition|)
block|{
name|e
operator|.
name|fixRelations
argument_list|(
name|otherObjectsToSave
argument_list|)
expr_stmt|;
name|iHibSession
operator|.
name|update
argument_list|(
name|e
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|message
argument_list|(
literal|"Skipping "
operator|+
name|e
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" (missing not-null relation "
operator|+
name|property
operator|+
literal|")"
argument_list|,
name|e
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
continue|continue;
block|}
block|}
for|for
control|(
name|Object
name|object
range|:
name|otherObjectsToSave
control|)
name|iHibSession
operator|.
name|save
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|otherObjectsToSave
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iProgress
operator|.
name|setPhase
argument_list|(
literal|"Flush"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iHibSession
operator|.
name|flush
argument_list|()
expr_stmt|;
name|iProgress
operator|.
name|incProgress
argument_list|()
expr_stmt|;
name|printMessages
argument_list|()
expr_stmt|;
name|iProgress
operator|.
name|setStatus
argument_list|(
literal|"All done."
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|iHibSession
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|protected
class|class
name|Entity
block|{
specifier|private
name|ClassMetadata
name|iMetaData
decl_stmt|;
specifier|private
name|TableData
operator|.
name|Record
name|iRecord
decl_stmt|;
specifier|private
name|Object
name|iObject
decl_stmt|;
specifier|private
name|String
name|iId
decl_stmt|;
specifier|protected
name|Entity
parameter_list|(
name|ClassMetadata
name|metadata
parameter_list|,
name|TableData
operator|.
name|Record
name|record
parameter_list|,
name|Object
name|object
parameter_list|,
name|String
name|id
parameter_list|)
block|{
name|iMetaData
operator|=
name|metadata
expr_stmt|;
name|iRecord
operator|=
name|record
expr_stmt|;
name|iObject
operator|=
name|object
expr_stmt|;
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|ClassMetadata
name|getMetaData
parameter_list|()
block|{
return|return
name|iMetaData
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|getMetaData
argument_list|()
operator|.
name|getEntityName
argument_list|()
return|;
block|}
specifier|public
name|String
name|getAbbv
parameter_list|()
block|{
return|return
name|getName
argument_list|()
operator|.
name|substring
argument_list|(
name|getName
argument_list|()
operator|.
name|lastIndexOf
argument_list|(
literal|'.'
argument_list|)
operator|+
literal|1
argument_list|)
return|;
block|}
specifier|public
name|Object
name|getObject
parameter_list|()
block|{
return|return
name|iObject
return|;
block|}
specifier|public
name|void
name|setObject
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
name|iObject
operator|=
name|object
expr_stmt|;
block|}
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|TableData
operator|.
name|Record
name|getRecord
parameter_list|()
block|{
return|return
name|iRecord
return|;
block|}
specifier|public
name|TableData
operator|.
name|Element
name|getElement
parameter_list|(
name|String
name|property
parameter_list|)
block|{
for|for
control|(
name|TableData
operator|.
name|Element
name|e
range|:
name|getRecord
argument_list|()
operator|.
name|getElementList
argument_list|()
control|)
if|if
condition|(
name|e
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|property
argument_list|)
condition|)
return|return
name|e
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|Entity
operator|)
condition|)
return|return
literal|false
return|;
name|Entity
name|e
init|=
operator|(
name|Entity
operator|)
name|o
decl_stmt|;
return|return
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|e
operator|.
name|getName
argument_list|()
argument_list|)
operator|&&
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|e
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getAbbv
argument_list|()
operator|+
literal|"@"
operator|+
name|getId
argument_list|()
return|;
block|}
specifier|public
name|String
name|canSave
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getMetaData
argument_list|()
operator|.
name|getPropertyNames
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|getMetaData
argument_list|()
operator|.
name|getPropertyNullability
argument_list|()
index|[
name|i
index|]
condition|)
continue|continue;
name|Type
name|type
init|=
name|getMetaData
argument_list|()
operator|.
name|getPropertyTypes
argument_list|()
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|type
operator|instanceof
name|EntityType
condition|)
block|{
name|TableData
operator|.
name|Element
name|element
init|=
name|getElement
argument_list|(
name|getMetaData
argument_list|()
operator|.
name|getPropertyNames
argument_list|()
index|[
name|i
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
name|element
operator|==
literal|null
operator|||
name|element
operator|.
name|getValueCount
argument_list|()
operator|==
literal|0
condition|)
continue|continue;
name|Object
name|value
init|=
name|get
argument_list|(
name|type
operator|.
name|getReturnedClass
argument_list|()
argument_list|,
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
operator|||
operator|!
name|iHibSession
operator|.
name|contains
argument_list|(
name|value
argument_list|)
condition|)
return|return
name|getMetaData
argument_list|()
operator|.
name|getPropertyNames
argument_list|()
index|[
name|i
index|]
return|;
block|}
block|}
if|if
condition|(
name|getMetaData
argument_list|()
operator|.
name|getIdentifierType
argument_list|()
operator|.
name|isComponentType
argument_list|()
condition|)
block|{
name|ComponentType
name|cid
init|=
operator|(
name|ComponentType
operator|)
name|getMetaData
argument_list|()
operator|.
name|getIdentifierType
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|cid
operator|.
name|getPropertyNames
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Type
name|type
init|=
name|cid
operator|.
name|getSubtypes
argument_list|()
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|type
operator|instanceof
name|EntityType
condition|)
block|{
name|TableData
operator|.
name|Element
name|element
init|=
name|getElement
argument_list|(
name|cid
operator|.
name|getPropertyNames
argument_list|()
index|[
name|i
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
name|element
operator|==
literal|null
condition|)
continue|continue;
name|Object
name|value
init|=
name|get
argument_list|(
name|type
operator|.
name|getReturnedClass
argument_list|()
argument_list|,
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
operator|||
operator|!
name|iHibSession
operator|.
name|contains
argument_list|(
name|value
argument_list|)
condition|)
return|return
name|cid
operator|.
name|getPropertyNames
argument_list|()
index|[
name|i
index|]
return|;
block|}
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|fixRelationsNullOnly
parameter_list|(
name|List
argument_list|<
name|Object
argument_list|>
name|otherObjectsToSave
parameter_list|)
block|{
name|fixRelationsNullOnly
argument_list|()
expr_stmt|;
if|if
condition|(
name|getObject
argument_list|()
operator|instanceof
name|InstructionalOffering
condition|)
block|{
name|TableData
operator|.
name|Element
name|element
init|=
name|getElement
argument_list|(
literal|"coordinators"
argument_list|)
decl_stmt|;
if|if
condition|(
name|element
operator|!=
literal|null
condition|)
block|{
name|InstructionalOffering
name|io
init|=
operator|(
name|InstructionalOffering
operator|)
name|getObject
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|element
operator|.
name|getValueCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|DepartmentalInstructor
name|instructor
init|=
operator|(
name|DepartmentalInstructor
operator|)
name|get
argument_list|(
name|DepartmentalInstructor
operator|.
name|class
argument_list|,
name|element
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|instructor
operator|!=
literal|null
condition|)
block|{
name|OfferingCoordinator
name|oc
init|=
operator|new
name|OfferingCoordinator
argument_list|()
decl_stmt|;
name|oc
operator|.
name|setInstructor
argument_list|(
name|instructor
argument_list|)
expr_stmt|;
name|oc
operator|.
name|setOffering
argument_list|(
name|io
argument_list|)
expr_stmt|;
name|oc
operator|.
name|setPercentShare
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|io
operator|.
name|addToofferingCoordinators
argument_list|(
name|oc
argument_list|)
expr_stmt|;
name|otherObjectsToSave
operator|.
name|add
argument_list|(
name|oc
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
specifier|public
name|void
name|fixRelationsNullOnly
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getMetaData
argument_list|()
operator|.
name|getPropertyNames
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|String
name|property
init|=
name|getMetaData
argument_list|()
operator|.
name|getPropertyNames
argument_list|()
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|getMetaData
argument_list|()
operator|.
name|getPropertyNullability
argument_list|()
index|[
name|i
index|]
condition|)
continue|continue;
name|Type
name|type
init|=
name|getMetaData
argument_list|()
operator|.
name|getPropertyTypes
argument_list|()
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|type
operator|instanceof
name|EntityType
condition|)
block|{
name|TableData
operator|.
name|Element
name|element
init|=
name|getElement
argument_list|(
name|getMetaData
argument_list|()
operator|.
name|getPropertyNames
argument_list|()
index|[
name|i
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
name|element
operator|==
literal|null
condition|)
continue|continue;
if|if
condition|(
name|element
operator|.
name|getValueCount
argument_list|()
operator|==
literal|0
condition|)
block|{
name|message
argument_list|(
literal|"Required "
operator|+
name|getAbbv
argument_list|()
operator|+
literal|"."
operator|+
name|property
operator|+
literal|" has no value"
argument_list|,
name|getRecord
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
continue|continue;
block|}
name|Object
name|value
init|=
name|get
argument_list|(
name|type
operator|.
name|getReturnedClass
argument_list|()
argument_list|,
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|iHibSession
operator|.
name|contains
argument_list|(
name|value
argument_list|)
condition|)
name|message
argument_list|(
literal|"Required "
operator|+
name|getAbbv
argument_list|()
operator|+
literal|"."
operator|+
name|property
operator|+
literal|" has transient value"
argument_list|,
name|getId
argument_list|()
operator|+
literal|"-"
operator|+
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|getMetaData
argument_list|()
operator|.
name|setPropertyValue
argument_list|(
name|getObject
argument_list|()
argument_list|,
name|getMetaData
argument_list|()
operator|.
name|getPropertyNames
argument_list|()
index|[
name|i
index|]
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|getMetaData
argument_list|()
operator|.
name|getIdentifierType
argument_list|()
operator|.
name|isComponentType
argument_list|()
condition|)
block|{
name|ComponentType
name|cid
init|=
operator|(
name|ComponentType
operator|)
name|getMetaData
argument_list|()
operator|.
name|getIdentifierType
argument_list|()
decl_stmt|;
name|Object
index|[]
name|id
init|=
operator|new
name|Object
index|[
name|cid
operator|.
name|getPropertyNames
argument_list|()
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|cid
operator|.
name|getPropertyNames
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|String
name|property
init|=
name|cid
operator|.
name|getPropertyNames
argument_list|()
index|[
name|i
index|]
decl_stmt|;
name|Type
name|type
init|=
name|cid
operator|.
name|getSubtypes
argument_list|()
index|[
name|i
index|]
decl_stmt|;
name|TableData
operator|.
name|Element
name|element
init|=
name|getElement
argument_list|(
name|cid
operator|.
name|getPropertyNames
argument_list|()
index|[
name|i
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
name|element
operator|==
literal|null
condition|)
continue|continue;
name|Object
name|value
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|type
operator|instanceof
name|PrimitiveType
condition|)
block|{
if|if
condition|(
name|type
operator|instanceof
name|BooleanType
condition|)
block|{
name|value
operator|=
operator|new
name|Boolean
argument_list|(
literal|"true"
operator|.
name|equals
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|ByteType
condition|)
block|{
name|value
operator|=
name|Byte
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|CharacterType
condition|)
block|{
name|value
operator|=
name|Character
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
operator|.
name|charAt
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|DoubleType
condition|)
block|{
name|value
operator|=
name|Double
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|FloatType
condition|)
block|{
name|value
operator|=
name|Float
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|IntegerType
condition|)
block|{
name|value
operator|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|LongType
condition|)
block|{
name|value
operator|=
name|Long
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|ShortType
condition|)
block|{
name|value
operator|=
name|Short
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|type
operator|instanceof
name|DateType
condition|)
block|{
try|try
block|{
name|value
operator|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"dd MMMM yyyy"
argument_list|,
name|Localization
operator|.
name|getJavaLocale
argument_list|()
argument_list|)
operator|.
name|parse
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParseException
name|e
parameter_list|)
block|{
name|value
operator|=
operator|new
name|DateType
argument_list|()
operator|.
name|fromStringValue
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|type
operator|instanceof
name|TimestampType
condition|)
block|{
name|value
operator|=
operator|new
name|TimestampType
argument_list|()
operator|.
name|fromStringValue
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|StringType
condition|)
block|{
name|value
operator|=
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|BinaryType
condition|)
block|{
name|value
operator|=
name|element
operator|.
name|getValueBytes
argument_list|(
literal|0
argument_list|)
operator|.
name|toByteArray
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|EntityType
condition|)
block|{
name|value
operator|=
name|get
argument_list|(
name|type
operator|.
name|getReturnedClass
argument_list|()
argument_list|,
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|!=
literal|null
operator|&&
operator|!
name|iHibSession
operator|.
name|contains
argument_list|(
name|value
argument_list|)
condition|)
name|message
argument_list|(
literal|"Required "
operator|+
name|getAbbv
argument_list|()
operator|+
literal|"."
operator|+
name|property
operator|+
literal|" has transient value"
argument_list|,
name|getId
argument_list|()
operator|+
literal|"-"
operator|+
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|message
argument_list|(
literal|"Not-supported composite key type "
operator|+
name|type
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" (property "
operator|+
name|getMetaData
argument_list|()
operator|.
name|getEntityName
argument_list|()
operator|+
literal|"."
operator|+
name|property
operator|+
literal|", class "
operator|+
name|type
operator|.
name|getReturnedClass
argument_list|()
operator|+
literal|")"
argument_list|,
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|id
index|[
name|i
index|]
operator|=
name|value
expr_stmt|;
block|}
name|cid
operator|.
name|setPropertyValues
argument_list|(
name|getObject
argument_list|()
argument_list|,
name|id
argument_list|,
name|EntityMode
operator|.
name|POJO
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getObject
argument_list|()
operator|instanceof
name|Class_
condition|)
block|{
name|Class_
name|clazz
init|=
operator|(
name|Class_
operator|)
name|getObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|clazz
operator|.
name|getCancelled
argument_list|()
operator|==
literal|null
condition|)
name|clazz
operator|.
name|setCancelled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getObject
argument_list|()
operator|instanceof
name|Curriculum
condition|)
block|{
name|Curriculum
name|curriculum
init|=
operator|(
name|Curriculum
operator|)
name|getObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|curriculum
operator|.
name|isMultipleMajors
argument_list|()
operator|==
literal|null
condition|)
name|curriculum
operator|.
name|setMultipleMajors
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getObject
argument_list|()
operator|instanceof
name|ExamType
condition|)
block|{
name|ExamType
name|type
init|=
operator|(
name|ExamType
operator|)
name|getObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|type
operator|.
name|getHighlightInEvents
argument_list|()
operator|==
literal|null
condition|)
name|type
operator|.
name|setHighlightInEvents
argument_list|(
name|type
operator|.
name|getType
argument_list|()
operator|==
name|ExamType
operator|.
name|sExamTypeFinal
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getObject
argument_list|()
operator|instanceof
name|SolverInfo
condition|)
block|{
name|SolverInfo
name|info
init|=
operator|(
name|SolverInfo
operator|)
name|getObject
argument_list|()
decl_stmt|;
name|TableData
operator|.
name|Element
name|element
init|=
name|getElement
argument_list|(
literal|"data"
argument_list|)
decl_stmt|;
if|if
condition|(
name|element
operator|!=
literal|null
condition|)
block|{
comment|// use byte[] type
name|info
operator|.
name|setData
argument_list|(
name|element
operator|.
name|getValueBytes
argument_list|(
literal|0
argument_list|)
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// fall back to XML
name|element
operator|=
name|getElement
argument_list|(
literal|"value"
argument_list|)
expr_stmt|;
try|try
block|{
name|Document
name|value
init|=
operator|new
name|SAXReader
argument_list|()
operator|.
name|read
argument_list|(
operator|new
name|StringReader
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|info
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|DocumentException
name|e
parameter_list|)
block|{
name|sLog
operator|.
name|warn
argument_list|(
literal|"Failed to parse solver info for "
operator|+
name|getId
argument_list|()
operator|+
literal|": "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|getObject
argument_list|()
operator|instanceof
name|Department
condition|)
block|{
name|Department
name|dept
init|=
operator|(
name|Department
operator|)
name|getObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|dept
operator|.
name|isAllowStudentScheduling
argument_list|()
operator|==
literal|null
condition|)
name|dept
operator|.
name|setAllowStudentScheduling
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|fixRelations
parameter_list|(
name|List
argument_list|<
name|Object
argument_list|>
name|otherObjectsToSave
parameter_list|)
block|{
name|fixRelations
argument_list|()
expr_stmt|;
if|if
condition|(
name|getObject
argument_list|()
operator|instanceof
name|Student
condition|)
block|{
name|TableData
operator|.
name|Element
name|ac
init|=
name|getElement
argument_list|(
literal|"academicAreaClassifications"
argument_list|)
decl_stmt|;
name|TableData
operator|.
name|Element
name|mj
init|=
name|getElement
argument_list|(
literal|"posMajors"
argument_list|)
decl_stmt|;
name|TableData
operator|.
name|Element
name|mn
init|=
name|getElement
argument_list|(
literal|"posMinors"
argument_list|)
decl_stmt|;
if|if
condition|(
name|ac
operator|!=
literal|null
operator|&&
name|mj
operator|!=
literal|null
condition|)
block|{
name|Student
name|student
init|=
operator|(
name|Student
operator|)
name|getObject
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|majorId
range|:
name|mj
operator|.
name|getValueList
argument_list|()
control|)
block|{
name|Entity
name|majorEntity
init|=
name|getEntity
argument_list|(
name|PosMajor
operator|.
name|class
argument_list|,
name|majorId
argument_list|)
decl_stmt|;
if|if
condition|(
name|majorEntity
operator|==
literal|null
condition|)
continue|continue;
name|List
argument_list|<
name|String
argument_list|>
name|areaIds
init|=
name|majorEntity
operator|.
name|getElement
argument_list|(
literal|"academicAreas"
argument_list|)
operator|.
name|getValueList
argument_list|()
decl_stmt|;
name|PosMajor
name|major
init|=
operator|(
name|PosMajor
operator|)
name|majorEntity
operator|.
name|getObject
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|aacId
range|:
name|ac
operator|.
name|getValueList
argument_list|()
control|)
block|{
name|Entity
name|aac
init|=
name|lookupSkippedRecord
argument_list|(
literal|"org.unitime.timetable.model.AcademicAreaClassification"
argument_list|,
name|aacId
argument_list|)
decl_stmt|;
if|if
condition|(
name|aac
operator|==
literal|null
condition|)
continue|continue;
name|String
name|areaId
init|=
name|aac
operator|.
name|getElement
argument_list|(
literal|"academicArea"
argument_list|)
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|String
name|clasfId
init|=
name|aac
operator|.
name|getElement
argument_list|(
literal|"academicClassification"
argument_list|)
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|areaIds
operator|.
name|contains
argument_list|(
name|areaId
argument_list|)
condition|)
continue|continue;
name|AcademicArea
name|area
init|=
operator|(
name|AcademicArea
operator|)
name|get
argument_list|(
name|AcademicArea
operator|.
name|class
argument_list|,
name|areaId
argument_list|)
decl_stmt|;
name|AcademicClassification
name|clasf
init|=
operator|(
name|AcademicClassification
operator|)
name|get
argument_list|(
name|AcademicClassification
operator|.
name|class
argument_list|,
name|clasfId
argument_list|)
decl_stmt|;
if|if
condition|(
name|area
operator|!=
literal|null
operator|&&
name|clasf
operator|!=
literal|null
condition|)
block|{
name|StudentAreaClassificationMajor
name|acm
init|=
operator|new
name|StudentAreaClassificationMajor
argument_list|()
decl_stmt|;
name|acm
operator|.
name|setAcademicArea
argument_list|(
name|area
argument_list|)
expr_stmt|;
name|acm
operator|.
name|setStudent
argument_list|(
name|student
argument_list|)
expr_stmt|;
name|acm
operator|.
name|setAcademicClassification
argument_list|(
name|clasf
argument_list|)
expr_stmt|;
name|acm
operator|.
name|setMajor
argument_list|(
name|major
argument_list|)
expr_stmt|;
name|acm
operator|.
name|setWeight
argument_list|(
literal|1.0
argument_list|)
expr_stmt|;
name|student
operator|.
name|addToareaClasfMajors
argument_list|(
name|acm
argument_list|)
expr_stmt|;
name|otherObjectsToSave
operator|.
name|add
argument_list|(
name|acm
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
if|if
condition|(
name|ac
operator|!=
literal|null
operator|&&
name|mn
operator|!=
literal|null
condition|)
block|{
name|Student
name|student
init|=
operator|(
name|Student
operator|)
name|getObject
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|minorId
range|:
name|mn
operator|.
name|getValueList
argument_list|()
control|)
block|{
name|Entity
name|minorEntity
init|=
name|getEntity
argument_list|(
name|PosMinor
operator|.
name|class
argument_list|,
name|minorId
argument_list|)
decl_stmt|;
if|if
condition|(
name|minorEntity
operator|==
literal|null
condition|)
continue|continue;
name|List
argument_list|<
name|String
argument_list|>
name|areaIds
init|=
name|minorEntity
operator|.
name|getElement
argument_list|(
literal|"academicAreas"
argument_list|)
operator|.
name|getValueList
argument_list|()
decl_stmt|;
name|PosMinor
name|minor
init|=
operator|(
name|PosMinor
operator|)
name|minorEntity
operator|.
name|getObject
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|aacId
range|:
name|ac
operator|.
name|getValueList
argument_list|()
control|)
block|{
name|Entity
name|aac
init|=
name|lookupSkippedRecord
argument_list|(
literal|"org.unitime.timetable.model.AcademicAreaClassification"
argument_list|,
name|aacId
argument_list|)
decl_stmt|;
if|if
condition|(
name|aac
operator|==
literal|null
condition|)
continue|continue;
name|String
name|areaId
init|=
name|aac
operator|.
name|getElement
argument_list|(
literal|"academicArea"
argument_list|)
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|String
name|clasfId
init|=
name|aac
operator|.
name|getElement
argument_list|(
literal|"academicClassification"
argument_list|)
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|areaIds
operator|.
name|contains
argument_list|(
name|areaId
argument_list|)
condition|)
continue|continue;
name|AcademicArea
name|area
init|=
operator|(
name|AcademicArea
operator|)
name|get
argument_list|(
name|AcademicArea
operator|.
name|class
argument_list|,
name|areaId
argument_list|)
decl_stmt|;
name|AcademicClassification
name|clasf
init|=
operator|(
name|AcademicClassification
operator|)
name|get
argument_list|(
name|AcademicClassification
operator|.
name|class
argument_list|,
name|clasfId
argument_list|)
decl_stmt|;
if|if
condition|(
name|area
operator|!=
literal|null
operator|&&
name|clasf
operator|!=
literal|null
condition|)
block|{
name|StudentAreaClassificationMinor
name|acm
init|=
operator|new
name|StudentAreaClassificationMinor
argument_list|()
decl_stmt|;
name|acm
operator|.
name|setAcademicArea
argument_list|(
name|area
argument_list|)
expr_stmt|;
name|acm
operator|.
name|setStudent
argument_list|(
name|student
argument_list|)
expr_stmt|;
name|acm
operator|.
name|setAcademicClassification
argument_list|(
name|clasf
argument_list|)
expr_stmt|;
name|acm
operator|.
name|setMinor
argument_list|(
name|minor
argument_list|)
expr_stmt|;
name|student
operator|.
name|addToareaClasfMinors
argument_list|(
name|acm
argument_list|)
expr_stmt|;
name|otherObjectsToSave
operator|.
name|add
argument_list|(
name|acm
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
block|}
specifier|public
name|void
name|fixRelations
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getMetaData
argument_list|()
operator|.
name|getPropertyNames
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|String
name|property
init|=
name|getMetaData
argument_list|()
operator|.
name|getPropertyNames
argument_list|()
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
operator|!
name|getMetaData
argument_list|()
operator|.
name|getPropertyNullability
argument_list|()
index|[
name|i
index|]
condition|)
continue|continue;
name|Type
name|type
init|=
name|getMetaData
argument_list|()
operator|.
name|getPropertyType
argument_list|(
name|property
argument_list|)
decl_stmt|;
if|if
condition|(
name|type
operator|instanceof
name|EntityType
condition|)
block|{
name|TableData
operator|.
name|Element
name|element
init|=
name|getElement
argument_list|(
name|property
argument_list|)
decl_stmt|;
if|if
condition|(
name|element
operator|==
literal|null
operator|||
name|element
operator|.
name|getValueCount
argument_list|()
operator|==
literal|0
condition|)
continue|continue;
name|Object
name|value
init|=
name|get
argument_list|(
name|type
operator|.
name|getReturnedClass
argument_list|()
argument_list|,
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|iHibSession
operator|.
name|contains
argument_list|(
name|value
argument_list|)
condition|)
name|message
argument_list|(
literal|"Optional "
operator|+
name|getAbbv
argument_list|()
operator|+
literal|"."
operator|+
name|property
operator|+
literal|" has transient value"
argument_list|,
name|getId
argument_list|()
operator|+
literal|"-"
operator|+
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|getMetaData
argument_list|()
operator|.
name|setPropertyValue
argument_list|(
name|getObject
argument_list|()
argument_list|,
name|property
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|type
operator|instanceof
name|CollectionType
condition|)
block|{
name|TableData
operator|.
name|Element
name|element
init|=
name|getElement
argument_list|(
name|property
argument_list|)
decl_stmt|;
if|if
condition|(
name|element
operator|==
literal|null
condition|)
continue|continue;
name|Type
name|elementType
init|=
operator|(
operator|(
name|CollectionType
operator|)
name|type
operator|)
operator|.
name|getElementType
argument_list|(
operator|(
name|SessionFactoryImplementor
operator|)
name|iHibSessionFactory
argument_list|)
decl_stmt|;
name|Class
name|clazz
init|=
name|elementType
operator|.
name|getReturnedClass
argument_list|()
decl_stmt|;
if|if
condition|(
name|type
operator|instanceof
name|SetType
condition|)
block|{
name|Set
argument_list|<
name|Object
argument_list|>
name|set
init|=
operator|new
name|HashSet
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|id
range|:
name|element
operator|.
name|getValueList
argument_list|()
control|)
block|{
name|Object
name|v
init|=
name|get
argument_list|(
name|clazz
argument_list|,
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|v
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|elementType
operator|instanceof
name|EntityType
operator|&&
operator|!
name|iHibSession
operator|.
name|contains
argument_list|(
name|v
argument_list|)
condition|)
name|message
argument_list|(
literal|"Collection "
operator|+
name|getAbbv
argument_list|()
operator|+
literal|"."
operator|+
name|property
operator|+
literal|" has transient value"
argument_list|,
name|getId
argument_list|()
operator|+
literal|"-"
operator|+
name|id
argument_list|)
expr_stmt|;
else|else
name|set
operator|.
name|add
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
block|}
name|getMetaData
argument_list|()
operator|.
name|setPropertyValue
argument_list|(
name|getObject
argument_list|()
argument_list|,
name|property
argument_list|,
name|set
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|ListType
condition|)
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|set
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|id
range|:
name|element
operator|.
name|getValueList
argument_list|()
control|)
block|{
name|Object
name|v
init|=
name|get
argument_list|(
name|clazz
argument_list|,
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|v
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|elementType
operator|instanceof
name|EntityType
operator|&&
operator|!
name|iHibSession
operator|.
name|contains
argument_list|(
name|v
argument_list|)
condition|)
name|message
argument_list|(
literal|"Collection "
operator|+
name|getAbbv
argument_list|()
operator|+
literal|"."
operator|+
name|property
operator|+
literal|" has transient value"
argument_list|,
name|getId
argument_list|()
operator|+
literal|"-"
operator|+
name|id
argument_list|)
expr_stmt|;
else|else
name|set
operator|.
name|add
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
block|}
name|getMetaData
argument_list|()
operator|.
name|setPropertyValue
argument_list|(
name|getObject
argument_list|()
argument_list|,
name|property
argument_list|,
name|set
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|message
argument_list|(
literal|"Unimplemented collection type: "
operator|+
name|type
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" ("
operator|+
name|getAbbv
argument_list|()
operator|+
literal|"."
operator|+
name|property
operator|+
literal|")"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|getObject
argument_list|()
operator|instanceof
name|ExamOwner
condition|)
block|{
name|ExamOwner
name|owner
init|=
operator|(
name|ExamOwner
operator|)
name|getObject
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|owner
operator|.
name|getOwnerType
argument_list|()
condition|)
block|{
case|case
name|ExamOwner
operator|.
name|sOwnerTypeClass
case|:
name|owner
operator|.
name|setOwnerId
argument_list|(
operator|(
operator|(
name|Class_
operator|)
name|get
argument_list|(
name|Class_
operator|.
name|class
argument_list|,
name|owner
operator|.
name|getOwnerId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ExamOwner
operator|.
name|sOwnerTypeConfig
case|:
name|owner
operator|.
name|setOwnerId
argument_list|(
operator|(
operator|(
name|InstrOfferingConfig
operator|)
name|get
argument_list|(
name|InstrOfferingConfig
operator|.
name|class
argument_list|,
name|owner
operator|.
name|getOwnerId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ExamOwner
operator|.
name|sOwnerTypeCourse
case|:
name|owner
operator|.
name|setOwnerId
argument_list|(
operator|(
operator|(
name|CourseOffering
operator|)
name|get
argument_list|(
name|CourseOffering
operator|.
name|class
argument_list|,
name|owner
operator|.
name|getOwnerId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ExamOwner
operator|.
name|sOwnerTypeOffering
case|:
name|owner
operator|.
name|setOwnerId
argument_list|(
operator|(
operator|(
name|InstructionalOffering
operator|)
name|get
argument_list|(
name|InstructionalOffering
operator|.
name|class
argument_list|,
name|owner
operator|.
name|getOwnerId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|getObject
argument_list|()
operator|instanceof
name|RelatedCourseInfo
condition|)
block|{
name|RelatedCourseInfo
name|owner
init|=
operator|(
name|RelatedCourseInfo
operator|)
name|getObject
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|owner
operator|.
name|getOwnerType
argument_list|()
condition|)
block|{
case|case
name|ExamOwner
operator|.
name|sOwnerTypeClass
case|:
name|owner
operator|.
name|setOwnerId
argument_list|(
operator|(
operator|(
name|Class_
operator|)
name|get
argument_list|(
name|Class_
operator|.
name|class
argument_list|,
name|owner
operator|.
name|getOwnerId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ExamOwner
operator|.
name|sOwnerTypeConfig
case|:
name|owner
operator|.
name|setOwnerId
argument_list|(
operator|(
operator|(
name|InstrOfferingConfig
operator|)
name|get
argument_list|(
name|InstrOfferingConfig
operator|.
name|class
argument_list|,
name|owner
operator|.
name|getOwnerId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ExamOwner
operator|.
name|sOwnerTypeCourse
case|:
name|owner
operator|.
name|setOwnerId
argument_list|(
operator|(
operator|(
name|CourseOffering
operator|)
name|get
argument_list|(
name|CourseOffering
operator|.
name|class
argument_list|,
name|owner
operator|.
name|getOwnerId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ExamOwner
operator|.
name|sOwnerTypeOffering
case|:
name|owner
operator|.
name|setOwnerId
argument_list|(
operator|(
operator|(
name|InstructionalOffering
operator|)
name|get
argument_list|(
name|InstructionalOffering
operator|.
name|class
argument_list|,
name|owner
operator|.
name|getOwnerId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|getObject
argument_list|()
operator|instanceof
name|TravelTime
condition|)
block|{
name|TravelTime
name|tt
init|=
operator|(
name|TravelTime
operator|)
name|getObject
argument_list|()
decl_stmt|;
name|Location
name|l1
init|=
operator|(
name|Location
operator|)
name|get
argument_list|(
name|Location
operator|.
name|class
argument_list|,
name|tt
operator|.
name|getLocation1Id
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|l1
operator|!=
literal|null
condition|)
name|tt
operator|.
name|setLocation1Id
argument_list|(
name|l1
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|Location
name|l2
init|=
operator|(
name|Location
operator|)
name|get
argument_list|(
name|Location
operator|.
name|class
argument_list|,
name|tt
operator|.
name|getLocation2Id
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|l2
operator|!=
literal|null
condition|)
name|tt
operator|.
name|setLocation2Id
argument_list|(
name|l2
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getObject
argument_list|()
operator|instanceof
name|Location
condition|)
block|{
name|Location
name|loc
init|=
operator|(
name|Location
operator|)
name|getObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|loc
operator|.
name|getManagerIds
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|managerIds
init|=
literal|null
decl_stmt|;
for|for
control|(
name|StringTokenizer
name|stk
init|=
operator|new
name|StringTokenizer
argument_list|(
name|loc
operator|.
name|getManagerIds
argument_list|()
argument_list|,
literal|","
argument_list|)
init|;
name|stk
operator|.
name|hasMoreTokens
argument_list|()
condition|;
control|)
block|{
name|Department
name|dept
init|=
operator|(
name|Department
operator|)
name|get
argument_list|(
name|Department
operator|.
name|class
argument_list|,
name|stk
operator|.
name|nextToken
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|dept
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|managerIds
operator|==
literal|null
condition|)
name|managerIds
operator|=
name|dept
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
else|else
name|managerIds
operator|+=
literal|","
operator|+
name|dept
operator|.
name|getUniqueId
argument_list|()
expr_stmt|;
block|}
block|}
name|loc
operator|.
name|setManagerIds
argument_list|(
name|managerIds
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|getObject
argument_list|()
operator|instanceof
name|CourseRequestOption
condition|)
block|{
name|CourseRequestOption
name|o
init|=
operator|(
name|CourseRequestOption
operator|)
name|getObject
argument_list|()
decl_stmt|;
try|try
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|Builder
name|option
init|=
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|CourseRequestOption
operator|.
name|parseFrom
argument_list|(
name|o
operator|.
name|getValue
argument_list|()
argument_list|)
operator|.
name|toBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|option
operator|.
name|getInstructionalMethodCount
argument_list|()
operator|>
literal|0
condition|)
for|for
control|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|e
range|:
name|option
operator|.
name|getInstructionalMethodBuilderList
argument_list|()
control|)
block|{
name|InstructionalMethod
name|im
init|=
name|InstructionalMethod
operator|.
name|findByReference
argument_list|(
name|e
operator|.
name|getExternalId
argument_list|()
argument_list|,
name|iHibSession
argument_list|)
decl_stmt|;
if|if
condition|(
name|im
operator|!=
literal|null
condition|)
name|e
operator|.
name|setUniqueId
argument_list|(
name|im
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|option
operator|.
name|getSectionCount
argument_list|()
operator|>
literal|0
condition|)
for|for
control|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Section
operator|.
name|Builder
name|e
range|:
name|option
operator|.
name|getSectionBuilderList
argument_list|()
control|)
block|{
name|Class_
name|clazz
init|=
operator|(
name|Class_
operator|)
name|get
argument_list|(
name|Class_
operator|.
name|class
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|e
operator|.
name|getClazzBuilder
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|clazz
operator|!=
literal|null
condition|)
block|{
name|e
operator|.
name|getClazzBuilder
argument_list|()
operator|.
name|setUniqueId
argument_list|(
name|clazz
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|e
operator|.
name|getSubpartBuilder
argument_list|()
operator|.
name|setUniqueId
argument_list|(
name|clazz
operator|.
name|getSchedulingSubpart
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|e
operator|.
name|hasCourse
argument_list|()
condition|)
block|{
name|CourseOffering
name|course
init|=
operator|(
name|CourseOffering
operator|)
name|get
argument_list|(
name|CourseOffering
operator|.
name|class
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|e
operator|.
name|getCourseBuilder
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|course
operator|!=
literal|null
condition|)
name|e
operator|.
name|getCourseBuilder
argument_list|()
operator|.
name|setUniqueId
argument_list|(
name|course
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|e
operator|.
name|getInstructorCount
argument_list|()
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|f
range|:
name|e
operator|.
name|getInstructorBuilderList
argument_list|()
control|)
block|{
name|DepartmentalInstructor
name|instructor
init|=
operator|(
name|DepartmentalInstructor
operator|)
name|get
argument_list|(
name|DepartmentalInstructor
operator|.
name|class
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|f
operator|.
name|getUniqueId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|instructor
operator|!=
literal|null
condition|)
name|f
operator|.
name|setUniqueId
argument_list|(
name|instructor
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|e
operator|.
name|getLocationCount
argument_list|()
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|onlinesectioning
operator|.
name|OnlineSectioningLog
operator|.
name|Entity
operator|.
name|Builder
name|f
range|:
name|e
operator|.
name|getLocationBuilderList
argument_list|()
control|)
block|{
name|Location
name|location
init|=
operator|(
name|Location
operator|)
name|get
argument_list|(
name|Location
operator|.
name|class
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|f
operator|.
name|getUniqueId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|location
operator|!=
literal|null
condition|)
name|f
operator|.
name|setUniqueId
argument_list|(
name|location
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|o
operator|.
name|setValue
argument_list|(
name|option
operator|.
name|build
argument_list|()
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
block|}
block|}
if|if
condition|(
name|getObject
argument_list|()
operator|instanceof
name|StudentAreaClassificationMajor
condition|)
block|{
name|StudentAreaClassificationMajor
name|m
init|=
operator|(
name|StudentAreaClassificationMajor
operator|)
name|getObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|m
operator|.
name|getWeight
argument_list|()
operator|==
literal|null
condition|)
name|m
operator|.
name|setWeight
argument_list|(
literal|1.0
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
name|TableData
operator|.
name|Table
name|readTable
parameter_list|(
name|CodedInputStream
name|cin
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|cin
operator|.
name|isAtEnd
argument_list|()
condition|)
return|return
literal|null
return|;
name|int
name|size
init|=
name|cin
operator|.
name|readInt32
argument_list|()
decl_stmt|;
name|int
name|limit
init|=
name|cin
operator|.
name|pushLimit
argument_list|(
name|size
argument_list|)
decl_stmt|;
name|TableData
operator|.
name|Table
name|ret
init|=
name|TableData
operator|.
name|Table
operator|.
name|parseFrom
argument_list|(
name|cin
argument_list|)
decl_stmt|;
name|cin
operator|.
name|popLimit
argument_list|(
name|limit
argument_list|)
expr_stmt|;
name|cin
operator|.
name|resetSizeCounter
argument_list|()
expr_stmt|;
return|return
name|ret
return|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"log4j.rootLogger"
argument_list|,
literal|"DEBUG, A1"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"log4j.appender.A1"
argument_list|,
literal|"org.apache.log4j.ConsoleAppender"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"log4j.appender.A1.layout"
argument_list|,
literal|"org.apache.log4j.PatternLayout"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"log4j.appender.A1.layout.ConversionPattern"
argument_list|,
literal|"%-5p %m%n"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"log4j.logger.org.hibernate"
argument_list|,
literal|"INFO"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"log4j.logger.org.hibernate.cfg"
argument_list|,
literal|"WARN"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"log4j.logger.org.hibernate.cache.EhCacheProvider"
argument_list|,
literal|"ERROR"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"log4j.logger.org.unitime.commons.hibernate"
argument_list|,
literal|"INFO"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"log4j.logger.net"
argument_list|,
literal|"INFO"
argument_list|)
expr_stmt|;
name|PropertyConfigurator
operator|.
name|configure
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|HibernateUtil
operator|.
name|configureHibernate
argument_list|(
name|ApplicationProperties
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
name|FileInputStream
name|in
init|=
operator|new
name|FileInputStream
argument_list|(
name|args
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|sLog
operator|.
name|info
argument_list|(
literal|"Using "
operator|+
name|ApplicationProperty
operator|.
name|SessionRestoreInterface
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|SessionRestore
name|restore
init|=
operator|(
name|SessionRestore
operator|)
name|Class
operator|.
name|forName
argument_list|(
name|ApplicationProperty
operator|.
name|SessionRestoreInterface
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|PrintWriter
name|debug
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|args
operator|.
name|length
operator|>=
literal|2
condition|)
block|{
name|debug
operator|=
operator|new
name|PrintWriter
argument_list|(
name|args
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|restore
operator|.
name|debug
argument_list|(
name|debug
argument_list|)
expr_stmt|;
block|}
specifier|final
name|Progress
name|progress
init|=
name|Progress
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|progress
operator|.
name|addProgressListener
argument_list|(
operator|new
name|ProgressWriter
argument_list|(
name|System
operator|.
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|restore
operator|.
name|restore
argument_list|(
name|in
argument_list|,
operator|new
name|BackupProgress
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|setStatus
parameter_list|(
name|String
name|status
parameter_list|)
block|{
name|progress
operator|.
name|setStatus
argument_list|(
name|status
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setPhase
parameter_list|(
name|String
name|phase
parameter_list|,
name|double
name|max
parameter_list|)
block|{
name|progress
operator|.
name|setPhase
argument_list|(
name|phase
argument_list|,
name|Math
operator|.
name|round
argument_list|(
name|max
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|incProgress
parameter_list|()
block|{
name|progress
operator|.
name|incProgress
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|info
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|progress
operator|.
name|info
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|warn
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|progress
operator|.
name|warn
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|error
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|progress
operator|.
name|error
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
if|if
condition|(
name|debug
operator|!=
literal|null
condition|)
name|debug
operator|.
name|close
argument_list|()
expr_stmt|;
name|HibernateUtil
operator|.
name|closeHibernate
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|sLog
operator|.
name|fatal
argument_list|(
literal|"Backup failed: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

