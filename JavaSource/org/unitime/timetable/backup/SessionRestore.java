begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.3 (University Timetabling Application)  * Copyright (C) 2011, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|backup
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|cpsolver
operator|.
name|ifs
operator|.
name|util
operator|.
name|Progress
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|cpsolver
operator|.
name|ifs
operator|.
name|util
operator|.
name|ProgressWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|PropertyConfigurator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|DocumentException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|io
operator|.
name|SAXReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|EntityMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|FlushMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|SessionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|criterion
operator|.
name|Restrictions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|engine
operator|.
name|SessionFactoryImplementor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|metadata
operator|.
name|ClassMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|BinaryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|BooleanType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|ByteType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|CharacterType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|CollectionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|CustomType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|DateType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|DoubleType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|EntityType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|FloatType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|IntegerType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|ListType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|LongType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|PrimitiveType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|SetType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|ShortType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|StringType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|TimestampType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|type
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|hibernate
operator|.
name|util
operator|.
name|HibernateUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|ApplicationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ChangeLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Class_
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ExamOwner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|GlobalRoomFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|InstrOfferingConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|InstructionalOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ItypeDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ManagerRole
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|OfferingConsentType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|OnlineSectioningLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PositionCodeType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PreferenceLevel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RefTableEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RelatedCourseInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Roles
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverInfoDef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverParameterDef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverParameterGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverPredefinedSetting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimetableManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|_RootDAO
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
import|;
end_import

begin_class
specifier|public
class|class
name|SessionRestore
block|{
specifier|private
specifier|static
name|Log
name|sLog
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|SessionBackup
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|SessionFactory
name|iHibSessionFactory
init|=
literal|null
decl_stmt|;
specifier|private
name|org
operator|.
name|hibernate
operator|.
name|Session
name|iHibSession
init|=
literal|null
decl_stmt|;
specifier|private
name|Progress
name|iProgress
init|=
literal|null
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Entity
argument_list|>
argument_list|>
name|iEntities
init|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Entity
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Entity
argument_list|>
name|iAllEntitites
init|=
operator|new
name|ArrayList
argument_list|<
name|Entity
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|SessionRestore
parameter_list|()
block|{
name|iHibSession
operator|=
operator|new
name|_RootDAO
argument_list|()
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|iHibSessionFactory
operator|=
name|iHibSession
operator|.
name|getSessionFactory
argument_list|()
expr_stmt|;
name|iProgress
operator|=
name|Progress
operator|.
name|getInstance
argument_list|()
expr_stmt|;
block|}
specifier|public
name|Progress
name|getProgress
parameter_list|()
block|{
return|return
name|iProgress
return|;
block|}
specifier|private
name|boolean
name|lookup
parameter_list|(
name|Entity
name|entity
parameter_list|,
name|String
name|property
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|Object
name|object
init|=
name|iHibSession
operator|.
name|createCriteria
argument_list|(
name|entity
operator|.
name|getMetaData
argument_list|()
operator|.
name|getMappedClass
argument_list|(
name|EntityMode
operator|.
name|POJO
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
name|property
argument_list|,
name|value
argument_list|)
argument_list|)
operator|.
name|uniqueResult
argument_list|()
decl_stmt|;
if|if
condition|(
name|object
operator|!=
literal|null
condition|)
name|entity
operator|.
name|setObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
return|return
name|object
operator|!=
literal|null
return|;
block|}
specifier|private
name|void
name|add
parameter_list|(
name|Entity
name|entity
parameter_list|)
block|{
name|boolean
name|save
init|=
literal|true
decl_stmt|;
name|boolean
name|lookup
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|PreferenceLevel
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"prefProlog"
argument_list|,
operator|(
operator|(
name|PreferenceLevel
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getPrefProlog
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|RefTableEntry
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"reference"
argument_list|,
operator|(
operator|(
name|RefTableEntry
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getReference
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|GlobalRoomFeature
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"abbv"
argument_list|,
operator|(
operator|(
name|GlobalRoomFeature
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getAbbv
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|RoomGroup
operator|&&
operator|(
operator|(
name|RoomGroup
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|isGlobal
argument_list|()
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"abbv"
argument_list|,
operator|(
operator|(
name|RoomGroup
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getAbbv
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|TimetableManager
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"externalUniqueId"
argument_list|,
operator|(
operator|(
name|TimetableManager
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getExternalUniqueId
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|ItypeDesc
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"itype"
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
name|entity
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|SolverInfoDef
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"name"
argument_list|,
operator|(
operator|(
name|SolverInfoDef
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|SolverParameterGroup
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"name"
argument_list|,
operator|(
operator|(
name|SolverParameterGroup
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|SolverPredefinedSetting
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"name"
argument_list|,
operator|(
operator|(
name|SolverPredefinedSetting
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|Roles
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"abbv"
argument_list|,
operator|(
operator|(
name|Roles
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getAbbv
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|OfferingConsentType
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"label"
argument_list|,
operator|(
operator|(
name|OfferingConsentType
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getLabel
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|ChangeLog
condition|)
block|{
name|save
operator|=
literal|false
expr_stmt|;
name|lookup
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|OnlineSectioningLog
condition|)
block|{
name|save
operator|=
literal|false
expr_stmt|;
name|lookup
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|PositionCodeType
operator|&&
name|lookup
argument_list|(
name|entity
argument_list|,
literal|"positionCode"
argument_list|,
operator|(
operator|(
name|PositionCodeType
operator|)
name|entity
operator|.
name|getObject
argument_list|()
operator|)
operator|.
name|getPositionCode
argument_list|()
argument_list|)
condition|)
name|save
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|save
condition|)
name|iAllEntitites
operator|.
name|add
argument_list|(
name|entity
argument_list|)
expr_stmt|;
if|if
condition|(
name|lookup
condition|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Entity
argument_list|>
name|entityOfThisType
init|=
name|iEntities
operator|.
name|get
argument_list|(
name|entity
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|entityOfThisType
operator|==
literal|null
condition|)
block|{
name|entityOfThisType
operator|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Entity
argument_list|>
argument_list|()
expr_stmt|;
name|iEntities
operator|.
name|put
argument_list|(
name|entity
operator|.
name|getName
argument_list|()
argument_list|,
name|entityOfThisType
argument_list|)
expr_stmt|;
block|}
name|entityOfThisType
operator|.
name|put
argument_list|(
name|entity
operator|.
name|getId
argument_list|()
argument_list|,
name|entity
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|create
parameter_list|(
name|TableData
operator|.
name|Table
name|table
parameter_list|)
throws|throws
name|InstantiationException
throws|,
name|IllegalAccessException
throws|,
name|DocumentException
block|{
name|ClassMetadata
name|metadata
init|=
name|iHibSessionFactory
operator|.
name|getClassMetadata
argument_list|(
name|table
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|iProgress
operator|.
name|setPhase
argument_list|(
name|metadata
operator|.
name|getEntityName
argument_list|()
operator|.
name|substring
argument_list|(
name|metadata
operator|.
name|getEntityName
argument_list|()
operator|.
name|lastIndexOf
argument_list|(
literal|'.'
argument_list|)
operator|+
literal|1
argument_list|)
operator|+
literal|" ["
operator|+
name|table
operator|.
name|getRecordCount
argument_list|()
operator|+
literal|"]"
argument_list|,
name|table
operator|.
name|getRecordCount
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|TableData
operator|.
name|Record
name|record
range|:
name|table
operator|.
name|getRecordList
argument_list|()
control|)
block|{
name|iProgress
operator|.
name|incProgress
argument_list|()
expr_stmt|;
name|Object
name|object
init|=
name|metadata
operator|.
name|getMappedClass
argument_list|(
name|EntityMode
operator|.
name|POJO
argument_list|)
operator|.
name|newInstance
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|property
range|:
name|metadata
operator|.
name|getPropertyNames
argument_list|()
control|)
block|{
name|TableData
operator|.
name|Element
name|element
init|=
literal|null
decl_stmt|;
for|for
control|(
name|TableData
operator|.
name|Element
name|e
range|:
name|record
operator|.
name|getElementList
argument_list|()
control|)
if|if
condition|(
name|e
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|property
argument_list|)
condition|)
block|{
name|element
operator|=
name|e
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|element
operator|==
literal|null
condition|)
continue|continue;
name|Object
name|value
init|=
literal|null
decl_stmt|;
name|Type
name|type
init|=
name|metadata
operator|.
name|getPropertyType
argument_list|(
name|property
argument_list|)
decl_stmt|;
if|if
condition|(
name|type
operator|instanceof
name|PrimitiveType
condition|)
block|{
if|if
condition|(
name|type
operator|instanceof
name|BooleanType
condition|)
block|{
name|value
operator|=
operator|new
name|Boolean
argument_list|(
literal|"true"
operator|.
name|equals
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|ByteType
condition|)
block|{
name|value
operator|=
name|Byte
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|CharacterType
condition|)
block|{
name|value
operator|=
name|Character
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
operator|.
name|charAt
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|DoubleType
condition|)
block|{
name|value
operator|=
name|Double
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|FloatType
condition|)
block|{
name|value
operator|=
name|Float
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|IntegerType
condition|)
block|{
name|value
operator|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|LongType
condition|)
block|{
name|value
operator|=
name|Long
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|ShortType
condition|)
block|{
name|value
operator|=
name|Long
operator|.
name|valueOf
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|type
operator|instanceof
name|DateType
condition|)
block|{
name|value
operator|=
operator|new
name|DateType
argument_list|()
operator|.
name|fromStringValue
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|TimestampType
condition|)
block|{
name|value
operator|=
operator|new
name|TimestampType
argument_list|()
operator|.
name|fromStringValue
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|StringType
condition|)
block|{
name|value
operator|=
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|BinaryType
condition|)
block|{
name|value
operator|=
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|toByteArray
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|CustomType
operator|&&
name|type
operator|.
name|getReturnedClass
argument_list|()
operator|.
name|equals
argument_list|(
name|Document
operator|.
name|class
argument_list|)
condition|)
block|{
name|value
operator|=
operator|new
name|SAXReader
argument_list|()
operator|.
name|read
argument_list|(
operator|new
name|StringReader
argument_list|(
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|EntityType
condition|)
block|{
block|}
if|else if
condition|(
name|type
operator|instanceof
name|CollectionType
condition|)
block|{
block|}
else|else
block|{
name|sLog
operator|.
name|warn
argument_list|(
literal|"Unknown data type: "
operator|+
name|type
operator|+
literal|" (property "
operator|+
name|metadata
operator|.
name|getEntityName
argument_list|()
operator|+
literal|"."
operator|+
name|property
operator|+
literal|", class "
operator|+
name|type
operator|.
name|getReturnedClass
argument_list|()
operator|+
literal|")"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|setPropertyValue
argument_list|(
name|object
argument_list|,
name|property
argument_list|,
name|value
argument_list|,
name|EntityMode
operator|.
name|POJO
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|object
operator|instanceof
name|PositionCodeType
condition|)
operator|(
operator|(
name|PositionCodeType
operator|)
name|object
operator|)
operator|.
name|setPositionCode
argument_list|(
name|record
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|add
argument_list|(
operator|new
name|Entity
argument_list|(
name|metadata
argument_list|,
name|record
argument_list|,
name|object
argument_list|,
name|record
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|Object
name|get
parameter_list|(
name|Class
name|clazz
parameter_list|,
name|String
name|id
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Entity
argument_list|>
name|entities
init|=
name|iEntities
operator|.
name|get
argument_list|(
name|clazz
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|entities
operator|!=
literal|null
condition|)
block|{
name|Entity
name|entity
init|=
name|entities
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|entity
operator|!=
literal|null
condition|)
return|return
name|entity
operator|.
name|getObject
argument_list|()
return|;
block|}
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Entity
argument_list|>
argument_list|>
name|entry
range|:
name|iEntities
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|Entity
name|o
init|=
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|o
operator|!=
literal|null
operator|&&
name|clazz
operator|.
name|isInstance
argument_list|(
name|o
operator|.
name|getObject
argument_list|()
argument_list|)
condition|)
return|return
name|o
operator|.
name|getObject
argument_list|()
return|;
block|}
comment|// sLog.info(clazz.getName() + " " + id + " not imported.");
comment|// Object value = iHibSession.get(clazz, clazz.equals(ItypeDesc.class) ? (Serializable) Integer.valueOf(id) : (Serializable) Long.valueOf(id));
comment|// if (value == null)
comment|// sLog.warn(clazz.getName() + " " + id + " not known.");
comment|// return value;
return|return
literal|null
return|;
block|}
specifier|private
name|boolean
name|fix
parameter_list|(
name|Entity
name|entity
parameter_list|)
block|{
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|SolverParameterDef
condition|)
block|{
name|SolverParameterDef
name|def
init|=
operator|(
name|SolverParameterDef
operator|)
name|entity
operator|.
name|getObject
argument_list|()
decl_stmt|;
name|TableData
operator|.
name|Element
name|element
init|=
name|entity
operator|.
name|getElement
argument_list|(
literal|"group"
argument_list|)
decl_stmt|;
name|SolverParameterGroup
name|group
init|=
operator|(
name|SolverParameterGroup
operator|)
name|get
argument_list|(
name|SolverParameterGroup
operator|.
name|class
argument_list|,
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|group
operator|!=
literal|null
operator|&&
name|group
operator|.
name|getUniqueId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|List
name|list
init|=
name|iHibSession
operator|.
name|createCriteria
argument_list|(
name|SolverParameterDef
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
literal|"name"
argument_list|,
name|def
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
literal|"group"
argument_list|,
name|group
argument_list|)
argument_list|)
operator|.
name|list
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|list
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
comment|// if (list.size()> 1)
comment|//	sLog.warn("Multiple results for SolverParameterDef (name=" + def.getName() + ", group=" + group.getName() + ")");
name|entity
operator|.
name|setObject
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
block|}
if|if
condition|(
name|entity
operator|.
name|getObject
argument_list|()
operator|instanceof
name|ManagerRole
condition|)
block|{
name|Roles
name|role
init|=
operator|(
name|Roles
operator|)
name|get
argument_list|(
name|Roles
operator|.
name|class
argument_list|,
name|entity
operator|.
name|getElement
argument_list|(
literal|"role"
argument_list|)
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|TimetableManager
name|manager
init|=
operator|(
name|TimetableManager
operator|)
name|get
argument_list|(
name|TimetableManager
operator|.
name|class
argument_list|,
name|entity
operator|.
name|getElement
argument_list|(
literal|"timetableManager"
argument_list|)
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|role
operator|.
name|getRoleId
argument_list|()
operator|!=
literal|null
operator|&&
name|manager
operator|.
name|getUniqueId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|Object
name|object
init|=
name|iHibSession
operator|.
name|createCriteria
argument_list|(
name|ManagerRole
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
literal|"role"
argument_list|,
name|role
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
literal|"timetableManager"
argument_list|,
name|manager
argument_list|)
argument_list|)
operator|.
name|uniqueResult
argument_list|()
decl_stmt|;
if|if
condition|(
name|object
operator|!=
literal|null
condition|)
block|{
name|entity
operator|.
name|setObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|persist
parameter_list|()
block|{
name|iHibSession
operator|.
name|setFlushMode
argument_list|(
name|FlushMode
operator|.
name|MANUAL
argument_list|)
expr_stmt|;
name|iProgress
operator|.
name|setPhase
argument_list|(
literal|"Fixing"
argument_list|,
name|iAllEntitites
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|Entity
argument_list|>
name|i
init|=
name|iAllEntitites
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|iProgress
operator|.
name|incProgress
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|fix
argument_list|(
name|i
operator|.
name|next
argument_list|()
argument_list|)
condition|)
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
name|iProgress
operator|.
name|setPhase
argument_list|(
literal|"Saving (not-null)"
argument_list|,
name|iAllEntitites
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Entity
argument_list|>
name|save
init|=
operator|new
name|ArrayList
argument_list|<
name|Entity
argument_list|>
argument_list|(
name|iAllEntitites
argument_list|)
decl_stmt|;
name|boolean
name|saved
init|=
literal|true
decl_stmt|;
while|while
condition|(
operator|!
name|save
operator|.
name|isEmpty
argument_list|()
operator|&&
name|saved
condition|)
block|{
name|saved
operator|=
literal|false
expr_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|Entity
argument_list|>
name|i
init|=
name|save
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Entity
name|e
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|e
operator|.
name|canSave
argument_list|()
condition|)
block|{
name|iProgress
operator|.
name|incProgress
argument_list|()
expr_stmt|;
name|e
operator|.
name|fixRelationsNullOnly
argument_list|()
expr_stmt|;
name|iHibSession
operator|.
name|save
argument_list|(
name|e
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
name|saved
operator|=
literal|true
expr_stmt|;
block|}
block|}
name|iHibSession
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
name|iProgress
operator|.
name|setPhase
argument_list|(
literal|"Saving (all)"
argument_list|,
name|iAllEntitites
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Entity
name|e
range|:
name|iAllEntitites
control|)
block|{
name|iProgress
operator|.
name|incProgress
argument_list|()
expr_stmt|;
if|if
condition|(
name|e
operator|.
name|canSave
argument_list|()
condition|)
block|{
name|e
operator|.
name|fixRelations
argument_list|()
expr_stmt|;
name|iHibSession
operator|.
name|update
argument_list|(
name|e
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// sLog.info("Skipping " + e.getName() + " " + e.getId() + ": missing not-null relation");
continue|continue;
block|}
block|}
name|iHibSession
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
class|class
name|Entity
block|{
specifier|private
name|ClassMetadata
name|iMetaData
decl_stmt|;
specifier|private
name|TableData
operator|.
name|Record
name|iRecord
decl_stmt|;
specifier|private
name|Object
name|iObject
decl_stmt|;
specifier|private
name|String
name|iId
decl_stmt|;
name|Entity
parameter_list|(
name|ClassMetadata
name|metadata
parameter_list|,
name|TableData
operator|.
name|Record
name|record
parameter_list|,
name|Object
name|object
parameter_list|,
name|String
name|id
parameter_list|)
block|{
name|iMetaData
operator|=
name|metadata
expr_stmt|;
name|iRecord
operator|=
name|record
expr_stmt|;
name|iObject
operator|=
name|object
expr_stmt|;
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|ClassMetadata
name|getMetaData
parameter_list|()
block|{
return|return
name|iMetaData
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|getMetaData
argument_list|()
operator|.
name|getEntityName
argument_list|()
return|;
block|}
specifier|public
name|Object
name|getObject
parameter_list|()
block|{
return|return
name|iObject
return|;
block|}
specifier|public
name|void
name|setObject
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
name|iObject
operator|=
name|object
expr_stmt|;
block|}
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|TableData
operator|.
name|Record
name|getRecord
parameter_list|()
block|{
return|return
name|iRecord
return|;
block|}
specifier|public
name|TableData
operator|.
name|Element
name|getElement
parameter_list|(
name|String
name|property
parameter_list|)
block|{
for|for
control|(
name|TableData
operator|.
name|Element
name|e
range|:
name|getRecord
argument_list|()
operator|.
name|getElementList
argument_list|()
control|)
if|if
condition|(
name|e
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|property
argument_list|)
condition|)
return|return
name|e
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|Entity
operator|)
condition|)
return|return
literal|false
return|;
name|Entity
name|e
init|=
operator|(
name|Entity
operator|)
name|o
decl_stmt|;
return|return
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|e
operator|.
name|getName
argument_list|()
argument_list|)
operator|&&
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|e
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|canSave
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getMetaData
argument_list|()
operator|.
name|getPropertyNames
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|getMetaData
argument_list|()
operator|.
name|getPropertyNullability
argument_list|()
index|[
name|i
index|]
condition|)
continue|continue;
name|Type
name|type
init|=
name|getMetaData
argument_list|()
operator|.
name|getPropertyTypes
argument_list|()
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|type
operator|instanceof
name|EntityType
condition|)
block|{
name|TableData
operator|.
name|Element
name|element
init|=
name|getElement
argument_list|(
name|getMetaData
argument_list|()
operator|.
name|getPropertyNames
argument_list|()
index|[
name|i
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
name|element
operator|==
literal|null
condition|)
continue|continue;
name|Object
name|value
init|=
name|get
argument_list|(
name|type
operator|.
name|getReturnedClass
argument_list|()
argument_list|,
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
operator|||
operator|!
name|iHibSession
operator|.
name|contains
argument_list|(
name|value
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|fixRelationsNullOnly
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getMetaData
argument_list|()
operator|.
name|getPropertyNames
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|getMetaData
argument_list|()
operator|.
name|getPropertyNullability
argument_list|()
index|[
name|i
index|]
condition|)
continue|continue;
name|Type
name|type
init|=
name|getMetaData
argument_list|()
operator|.
name|getPropertyTypes
argument_list|()
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|type
operator|instanceof
name|EntityType
condition|)
block|{
name|TableData
operator|.
name|Element
name|element
init|=
name|getElement
argument_list|(
name|getMetaData
argument_list|()
operator|.
name|getPropertyNames
argument_list|()
index|[
name|i
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
name|element
operator|==
literal|null
condition|)
continue|continue;
name|Object
name|value
init|=
name|get
argument_list|(
name|type
operator|.
name|getReturnedClass
argument_list|()
argument_list|,
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
name|getMetaData
argument_list|()
operator|.
name|setPropertyValue
argument_list|(
name|getObject
argument_list|()
argument_list|,
name|getMetaData
argument_list|()
operator|.
name|getPropertyNames
argument_list|()
index|[
name|i
index|]
argument_list|,
name|value
argument_list|,
name|EntityMode
operator|.
name|POJO
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|fixRelations
parameter_list|()
block|{
for|for
control|(
name|String
name|property
range|:
name|getMetaData
argument_list|()
operator|.
name|getPropertyNames
argument_list|()
control|)
block|{
name|TableData
operator|.
name|Element
name|element
init|=
name|getElement
argument_list|(
name|property
argument_list|)
decl_stmt|;
if|if
condition|(
name|element
operator|==
literal|null
condition|)
continue|continue;
name|Type
name|type
init|=
name|getMetaData
argument_list|()
operator|.
name|getPropertyType
argument_list|(
name|property
argument_list|)
decl_stmt|;
if|if
condition|(
name|type
operator|instanceof
name|EntityType
condition|)
block|{
name|Object
name|value
init|=
name|get
argument_list|(
name|type
operator|.
name|getReturnedClass
argument_list|()
argument_list|,
name|element
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
name|getMetaData
argument_list|()
operator|.
name|setPropertyValue
argument_list|(
name|getObject
argument_list|()
argument_list|,
name|property
argument_list|,
name|value
argument_list|,
name|EntityMode
operator|.
name|POJO
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|CollectionType
condition|)
block|{
name|Class
name|clazz
init|=
operator|(
operator|(
name|CollectionType
operator|)
name|type
operator|)
operator|.
name|getElementType
argument_list|(
operator|(
name|SessionFactoryImplementor
operator|)
name|iHibSessionFactory
argument_list|)
operator|.
name|getReturnedClass
argument_list|()
decl_stmt|;
if|if
condition|(
name|type
operator|instanceof
name|SetType
condition|)
block|{
name|Set
argument_list|<
name|Object
argument_list|>
name|set
init|=
operator|new
name|HashSet
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|id
range|:
name|element
operator|.
name|getValueList
argument_list|()
control|)
block|{
name|Object
name|v
init|=
name|get
argument_list|(
name|clazz
argument_list|,
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|v
operator|!=
literal|null
condition|)
name|set
operator|.
name|add
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
name|getMetaData
argument_list|()
operator|.
name|setPropertyValue
argument_list|(
name|getObject
argument_list|()
argument_list|,
name|property
argument_list|,
name|set
argument_list|,
name|EntityMode
operator|.
name|POJO
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|instanceof
name|ListType
condition|)
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|set
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|id
range|:
name|element
operator|.
name|getValueList
argument_list|()
control|)
block|{
name|Object
name|v
init|=
name|get
argument_list|(
name|clazz
argument_list|,
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|v
operator|!=
literal|null
condition|)
name|set
operator|.
name|add
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
name|getMetaData
argument_list|()
operator|.
name|setPropertyValue
argument_list|(
name|getObject
argument_list|()
argument_list|,
name|property
argument_list|,
name|set
argument_list|,
name|EntityMode
operator|.
name|POJO
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|sLog
operator|.
name|warn
argument_list|(
literal|"Unimplemented collection type: "
operator|+
name|type
operator|+
literal|" (property "
operator|+
name|getMetaData
argument_list|()
operator|.
name|getEntityName
argument_list|()
operator|+
literal|"."
operator|+
name|property
operator|+
literal|", class "
operator|+
name|type
operator|.
name|getReturnedClass
argument_list|()
operator|+
literal|")"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|getObject
argument_list|()
operator|instanceof
name|ExamOwner
condition|)
block|{
name|ExamOwner
name|owner
init|=
operator|(
name|ExamOwner
operator|)
name|getObject
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|owner
operator|.
name|getOwnerType
argument_list|()
condition|)
block|{
case|case
name|ExamOwner
operator|.
name|sOwnerTypeClass
case|:
name|owner
operator|.
name|setOwnerId
argument_list|(
operator|(
operator|(
name|Class_
operator|)
name|get
argument_list|(
name|Class_
operator|.
name|class
argument_list|,
name|owner
operator|.
name|getOwnerId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ExamOwner
operator|.
name|sOwnerTypeConfig
case|:
name|owner
operator|.
name|setOwnerId
argument_list|(
operator|(
operator|(
name|InstrOfferingConfig
operator|)
name|get
argument_list|(
name|InstrOfferingConfig
operator|.
name|class
argument_list|,
name|owner
operator|.
name|getOwnerId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ExamOwner
operator|.
name|sOwnerTypeCourse
case|:
name|owner
operator|.
name|setOwnerId
argument_list|(
operator|(
operator|(
name|CourseOffering
operator|)
name|get
argument_list|(
name|CourseOffering
operator|.
name|class
argument_list|,
name|owner
operator|.
name|getOwnerId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ExamOwner
operator|.
name|sOwnerTypeOffering
case|:
name|owner
operator|.
name|setOwnerId
argument_list|(
operator|(
operator|(
name|InstructionalOffering
operator|)
name|get
argument_list|(
name|InstructionalOffering
operator|.
name|class
argument_list|,
name|owner
operator|.
name|getOwnerId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|getObject
argument_list|()
operator|instanceof
name|RelatedCourseInfo
condition|)
block|{
name|RelatedCourseInfo
name|owner
init|=
operator|(
name|RelatedCourseInfo
operator|)
name|getObject
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|owner
operator|.
name|getOwnerType
argument_list|()
condition|)
block|{
case|case
name|ExamOwner
operator|.
name|sOwnerTypeClass
case|:
name|owner
operator|.
name|setOwnerId
argument_list|(
operator|(
operator|(
name|Class_
operator|)
name|get
argument_list|(
name|Class_
operator|.
name|class
argument_list|,
name|owner
operator|.
name|getOwnerId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ExamOwner
operator|.
name|sOwnerTypeConfig
case|:
name|owner
operator|.
name|setOwnerId
argument_list|(
operator|(
operator|(
name|InstrOfferingConfig
operator|)
name|get
argument_list|(
name|InstrOfferingConfig
operator|.
name|class
argument_list|,
name|owner
operator|.
name|getOwnerId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ExamOwner
operator|.
name|sOwnerTypeCourse
case|:
name|owner
operator|.
name|setOwnerId
argument_list|(
operator|(
operator|(
name|CourseOffering
operator|)
name|get
argument_list|(
name|CourseOffering
operator|.
name|class
argument_list|,
name|owner
operator|.
name|getOwnerId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|ExamOwner
operator|.
name|sOwnerTypeOffering
case|:
name|owner
operator|.
name|setOwnerId
argument_list|(
operator|(
operator|(
name|InstructionalOffering
operator|)
name|get
argument_list|(
name|InstructionalOffering
operator|.
name|class
argument_list|,
name|owner
operator|.
name|getOwnerId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
specifier|public
specifier|static
name|TableData
operator|.
name|Table
name|readTable
parameter_list|(
name|CodedInputStream
name|cin
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|cin
operator|.
name|isAtEnd
argument_list|()
condition|)
return|return
literal|null
return|;
name|int
name|size
init|=
name|cin
operator|.
name|readInt32
argument_list|()
decl_stmt|;
name|int
name|limit
init|=
name|cin
operator|.
name|pushLimit
argument_list|(
name|size
argument_list|)
decl_stmt|;
name|TableData
operator|.
name|Table
name|ret
init|=
name|TableData
operator|.
name|Table
operator|.
name|parseFrom
argument_list|(
name|cin
argument_list|)
decl_stmt|;
name|cin
operator|.
name|popLimit
argument_list|(
name|limit
argument_list|)
expr_stmt|;
name|cin
operator|.
name|resetSizeCounter
argument_list|()
expr_stmt|;
return|return
name|ret
return|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"log4j.rootLogger"
argument_list|,
literal|"DEBUG, A1"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"log4j.appender.A1"
argument_list|,
literal|"org.apache.log4j.ConsoleAppender"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"log4j.appender.A1.layout"
argument_list|,
literal|"org.apache.log4j.PatternLayout"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"log4j.appender.A1.layout.ConversionPattern"
argument_list|,
literal|"%-5p %c{2}: %m%n"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"log4j.logger.org.hibernate"
argument_list|,
literal|"INFO"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"log4j.logger.org.hibernate.cfg"
argument_list|,
literal|"WARN"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"log4j.logger.org.hibernate.cache.EhCacheProvider"
argument_list|,
literal|"ERROR"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"log4j.logger.org.unitime.commons.hibernate"
argument_list|,
literal|"INFO"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"log4j.logger.net"
argument_list|,
literal|"INFO"
argument_list|)
expr_stmt|;
name|PropertyConfigurator
operator|.
name|configure
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|HibernateUtil
operator|.
name|configureHibernate
argument_list|(
name|ApplicationProperties
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
name|FileInputStream
name|in
init|=
operator|new
name|FileInputStream
argument_list|(
name|args
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|SessionRestore
name|restore
init|=
operator|new
name|SessionRestore
argument_list|()
decl_stmt|;
name|restore
operator|.
name|getProgress
argument_list|()
operator|.
name|addProgressListener
argument_list|(
operator|new
name|ProgressWriter
argument_list|(
name|System
operator|.
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|CodedInputStream
name|cin
init|=
name|CodedInputStream
operator|.
name|newInstance
argument_list|(
name|in
argument_list|)
decl_stmt|;
name|cin
operator|.
name|setSizeLimit
argument_list|(
literal|1024
operator|*
literal|1024
operator|*
literal|1024
argument_list|)
expr_stmt|;
comment|// 1 GB
name|TableData
operator|.
name|Table
name|t
init|=
literal|null
decl_stmt|;
while|while
condition|(
operator|(
name|t
operator|=
name|readTable
argument_list|(
name|cin
argument_list|)
operator|)
operator|!=
literal|null
condition|)
name|restore
operator|.
name|create
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
name|restore
operator|.
name|persist
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|sLog
operator|.
name|fatal
argument_list|(
literal|"Backup failed: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

