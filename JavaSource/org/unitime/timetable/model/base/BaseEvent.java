begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 - 3.5 (University Timetabling Application)  * Copyright (C) 2010 - 2014, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|EventContact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|EventNote
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Meeting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SponsoringOrganization
import|;
end_import

begin_comment
comment|/**  * Do not change this class. It has been automatically generated using ant create-model.  * @see org.unitime.commons.ant.CreateBaseModelFromXml  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|BaseEvent
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|Long
name|iUniqueId
decl_stmt|;
specifier|private
name|String
name|iEventName
decl_stmt|;
specifier|private
name|Integer
name|iMinCapacity
decl_stmt|;
specifier|private
name|Integer
name|iMaxCapacity
decl_stmt|;
specifier|private
name|String
name|iEmail
decl_stmt|;
specifier|private
name|Date
name|iExpirationDate
decl_stmt|;
specifier|private
name|EventContact
name|iMainContact
decl_stmt|;
specifier|private
name|SponsoringOrganization
name|iSponsoringOrganization
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|EventContact
argument_list|>
name|iAdditionalContacts
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|EventNote
argument_list|>
name|iNotes
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|Meeting
argument_list|>
name|iMeetings
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_UNIQUEID
init|=
literal|"uniqueId"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_EVENT_NAME
init|=
literal|"eventName"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_MIN_CAPACITY
init|=
literal|"minCapacity"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_MAX_CAPACITY
init|=
literal|"maxCapacity"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_EMAIL
init|=
literal|"email"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_EXPIRATION_DATE
init|=
literal|"expirationDate"
decl_stmt|;
specifier|public
name|BaseEvent
parameter_list|()
block|{
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|public
name|BaseEvent
parameter_list|(
name|Long
name|uniqueId
parameter_list|)
block|{
name|setUniqueId
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|initialize
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getUniqueId
parameter_list|()
block|{
return|return
name|iUniqueId
return|;
block|}
specifier|public
name|void
name|setUniqueId
parameter_list|(
name|Long
name|uniqueId
parameter_list|)
block|{
name|iUniqueId
operator|=
name|uniqueId
expr_stmt|;
block|}
specifier|public
name|String
name|getEventName
parameter_list|()
block|{
return|return
name|iEventName
return|;
block|}
specifier|public
name|void
name|setEventName
parameter_list|(
name|String
name|eventName
parameter_list|)
block|{
name|iEventName
operator|=
name|eventName
expr_stmt|;
block|}
specifier|public
name|Integer
name|getMinCapacity
parameter_list|()
block|{
return|return
name|iMinCapacity
return|;
block|}
specifier|public
name|void
name|setMinCapacity
parameter_list|(
name|Integer
name|minCapacity
parameter_list|)
block|{
name|iMinCapacity
operator|=
name|minCapacity
expr_stmt|;
block|}
specifier|public
name|Integer
name|getMaxCapacity
parameter_list|()
block|{
return|return
name|iMaxCapacity
return|;
block|}
specifier|public
name|void
name|setMaxCapacity
parameter_list|(
name|Integer
name|maxCapacity
parameter_list|)
block|{
name|iMaxCapacity
operator|=
name|maxCapacity
expr_stmt|;
block|}
specifier|public
name|String
name|getEmail
parameter_list|()
block|{
return|return
name|iEmail
return|;
block|}
specifier|public
name|void
name|setEmail
parameter_list|(
name|String
name|email
parameter_list|)
block|{
name|iEmail
operator|=
name|email
expr_stmt|;
block|}
specifier|public
name|Date
name|getExpirationDate
parameter_list|()
block|{
return|return
name|iExpirationDate
return|;
block|}
specifier|public
name|void
name|setExpirationDate
parameter_list|(
name|Date
name|expirationDate
parameter_list|)
block|{
name|iExpirationDate
operator|=
name|expirationDate
expr_stmt|;
block|}
specifier|public
name|EventContact
name|getMainContact
parameter_list|()
block|{
return|return
name|iMainContact
return|;
block|}
specifier|public
name|void
name|setMainContact
parameter_list|(
name|EventContact
name|mainContact
parameter_list|)
block|{
name|iMainContact
operator|=
name|mainContact
expr_stmt|;
block|}
specifier|public
name|SponsoringOrganization
name|getSponsoringOrganization
parameter_list|()
block|{
return|return
name|iSponsoringOrganization
return|;
block|}
specifier|public
name|void
name|setSponsoringOrganization
parameter_list|(
name|SponsoringOrganization
name|sponsoringOrganization
parameter_list|)
block|{
name|iSponsoringOrganization
operator|=
name|sponsoringOrganization
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|EventContact
argument_list|>
name|getAdditionalContacts
parameter_list|()
block|{
return|return
name|iAdditionalContacts
return|;
block|}
specifier|public
name|void
name|setAdditionalContacts
parameter_list|(
name|Set
argument_list|<
name|EventContact
argument_list|>
name|additionalContacts
parameter_list|)
block|{
name|iAdditionalContacts
operator|=
name|additionalContacts
expr_stmt|;
block|}
specifier|public
name|void
name|addToadditionalContacts
parameter_list|(
name|EventContact
name|eventContact
parameter_list|)
block|{
if|if
condition|(
name|iAdditionalContacts
operator|==
literal|null
condition|)
name|iAdditionalContacts
operator|=
operator|new
name|HashSet
argument_list|<
name|EventContact
argument_list|>
argument_list|()
expr_stmt|;
name|iAdditionalContacts
operator|.
name|add
argument_list|(
name|eventContact
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|EventNote
argument_list|>
name|getNotes
parameter_list|()
block|{
return|return
name|iNotes
return|;
block|}
specifier|public
name|void
name|setNotes
parameter_list|(
name|Set
argument_list|<
name|EventNote
argument_list|>
name|notes
parameter_list|)
block|{
name|iNotes
operator|=
name|notes
expr_stmt|;
block|}
specifier|public
name|void
name|addTonotes
parameter_list|(
name|EventNote
name|eventNote
parameter_list|)
block|{
if|if
condition|(
name|iNotes
operator|==
literal|null
condition|)
name|iNotes
operator|=
operator|new
name|HashSet
argument_list|<
name|EventNote
argument_list|>
argument_list|()
expr_stmt|;
name|iNotes
operator|.
name|add
argument_list|(
name|eventNote
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|Meeting
argument_list|>
name|getMeetings
parameter_list|()
block|{
return|return
name|iMeetings
return|;
block|}
specifier|public
name|void
name|setMeetings
parameter_list|(
name|Set
argument_list|<
name|Meeting
argument_list|>
name|meetings
parameter_list|)
block|{
name|iMeetings
operator|=
name|meetings
expr_stmt|;
block|}
specifier|public
name|void
name|addTomeetings
parameter_list|(
name|Meeting
name|meeting
parameter_list|)
block|{
if|if
condition|(
name|iMeetings
operator|==
literal|null
condition|)
name|iMeetings
operator|=
operator|new
name|HashSet
argument_list|<
name|Meeting
argument_list|>
argument_list|()
expr_stmt|;
name|iMeetings
operator|.
name|add
argument_list|(
name|meeting
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|Event
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|||
operator|(
operator|(
name|Event
operator|)
name|o
operator|)
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
return|return
literal|false
return|;
return|return
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|Event
operator|)
name|o
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
return|return
name|getUniqueId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"Event["
operator|+
name|getUniqueId
argument_list|()
operator|+
literal|"]"
return|;
block|}
specifier|public
name|String
name|toDebugString
parameter_list|()
block|{
return|return
literal|"Event["
operator|+
literal|"\n	Email: "
operator|+
name|getEmail
argument_list|()
operator|+
literal|"\n	EventName: "
operator|+
name|getEventName
argument_list|()
operator|+
literal|"\n	ExpirationDate: "
operator|+
name|getExpirationDate
argument_list|()
operator|+
literal|"\n	MainContact: "
operator|+
name|getMainContact
argument_list|()
operator|+
literal|"\n	MaxCapacity: "
operator|+
name|getMaxCapacity
argument_list|()
operator|+
literal|"\n	MinCapacity: "
operator|+
name|getMinCapacity
argument_list|()
operator|+
literal|"\n	SponsoringOrganization: "
operator|+
name|getSponsoringOrganization
argument_list|()
operator|+
literal|"\n	UniqueId: "
operator|+
name|getUniqueId
argument_list|()
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

