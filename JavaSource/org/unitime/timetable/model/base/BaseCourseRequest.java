begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.1 (University Timetabling Application)  * Copyright (C) 2008, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program; if not, write to the Free Software Foundation, Inc.,  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_comment
comment|/**  * This is an object that contains data related to the COURSE_REQUEST table.  * Do not modify this class because it will be overwritten if the configuration file  * related to this class is modified.  *  * @hibernate.class  *  table="COURSE_REQUEST"  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|BaseCourseRequest
implements|implements
name|Serializable
block|{
specifier|public
specifier|static
name|String
name|REF
init|=
literal|"CourseRequest"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_ORDER
init|=
literal|"order"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_ALLOW_OVERLAP
init|=
literal|"allowOverlap"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_CREDIT
init|=
literal|"credit"
decl_stmt|;
comment|// constructors
specifier|public
name|BaseCourseRequest
parameter_list|()
block|{
name|initialize
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * Constructor for primary key 	 */
specifier|public
name|BaseCourseRequest
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueId
parameter_list|)
block|{
name|this
operator|.
name|setUniqueId
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * Constructor for required fields 	 */
specifier|public
name|BaseCourseRequest
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueId
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseDemand
name|courseDemand
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseOffering
name|courseOffering
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Integer
name|order
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Boolean
name|allowOverlap
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Integer
name|credit
parameter_list|)
block|{
name|this
operator|.
name|setUniqueId
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
name|this
operator|.
name|setCourseDemand
argument_list|(
name|courseDemand
argument_list|)
expr_stmt|;
name|this
operator|.
name|setCourseOffering
argument_list|(
name|courseOffering
argument_list|)
expr_stmt|;
name|this
operator|.
name|setOrder
argument_list|(
name|order
argument_list|)
expr_stmt|;
name|this
operator|.
name|setAllowOverlap
argument_list|(
name|allowOverlap
argument_list|)
expr_stmt|;
name|this
operator|.
name|setCredit
argument_list|(
name|credit
argument_list|)
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|initialize
parameter_list|()
block|{
block|}
specifier|private
name|int
name|hashCode
init|=
name|Integer
operator|.
name|MIN_VALUE
decl_stmt|;
comment|// primary key
specifier|private
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueId
decl_stmt|;
comment|// fields
specifier|private
name|java
operator|.
name|lang
operator|.
name|Integer
name|order
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Boolean
name|allowOverlap
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Integer
name|credit
decl_stmt|;
comment|// many to one
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseDemand
name|courseDemand
decl_stmt|;
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseOffering
name|courseOffering
decl_stmt|;
comment|// collections
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|classEnrollments
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|courseRequestOptions
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|classWaitLists
decl_stmt|;
comment|/** 	 * Return the unique identifier of this class      * @hibernate.id      *  generator-class="sequence"      *  column="UNIQUEID"      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Long
name|getUniqueId
parameter_list|()
block|{
return|return
name|uniqueId
return|;
block|}
comment|/** 	 * Set the unique identifier of this class 	 * @param uniqueId the new ID 	 */
specifier|public
name|void
name|setUniqueId
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueId
parameter_list|)
block|{
name|this
operator|.
name|uniqueId
operator|=
name|uniqueId
expr_stmt|;
name|this
operator|.
name|hashCode
operator|=
name|Integer
operator|.
name|MIN_VALUE
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: ORD 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Integer
name|getOrder
parameter_list|()
block|{
return|return
name|order
return|;
block|}
comment|/** 	 * Set the value related to the column: ORD 	 * @param order the ORD value 	 */
specifier|public
name|void
name|setOrder
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Integer
name|order
parameter_list|)
block|{
name|this
operator|.
name|order
operator|=
name|order
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: ALLOW_OVERLAP 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Boolean
name|isAllowOverlap
parameter_list|()
block|{
return|return
name|allowOverlap
return|;
block|}
comment|/** 	 * Set the value related to the column: ALLOW_OVERLAP 	 * @param allowOverlap the ALLOW_OVERLAP value 	 */
specifier|public
name|void
name|setAllowOverlap
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Boolean
name|allowOverlap
parameter_list|)
block|{
name|this
operator|.
name|allowOverlap
operator|=
name|allowOverlap
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: CREDIT 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Integer
name|getCredit
parameter_list|()
block|{
return|return
name|credit
return|;
block|}
comment|/** 	 * Set the value related to the column: CREDIT 	 * @param credit the CREDIT value 	 */
specifier|public
name|void
name|setCredit
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Integer
name|credit
parameter_list|)
block|{
name|this
operator|.
name|credit
operator|=
name|credit
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: COURSE_DEMAND_ID 	 */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseDemand
name|getCourseDemand
parameter_list|()
block|{
return|return
name|courseDemand
return|;
block|}
comment|/** 	 * Set the value related to the column: COURSE_DEMAND_ID 	 * @param courseDemand the COURSE_DEMAND_ID value 	 */
specifier|public
name|void
name|setCourseDemand
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseDemand
name|courseDemand
parameter_list|)
block|{
name|this
operator|.
name|courseDemand
operator|=
name|courseDemand
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: COURSE_OFFERING_ID 	 */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseOffering
name|getCourseOffering
parameter_list|()
block|{
return|return
name|courseOffering
return|;
block|}
comment|/** 	 * Set the value related to the column: COURSE_OFFERING_ID 	 * @param courseOffering the COURSE_OFFERING_ID value 	 */
specifier|public
name|void
name|setCourseOffering
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseOffering
name|courseOffering
parameter_list|)
block|{
name|this
operator|.
name|courseOffering
operator|=
name|courseOffering
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: classEnrollments 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getClassEnrollments
parameter_list|()
block|{
return|return
name|classEnrollments
return|;
block|}
comment|/** 	 * Set the value related to the column: classEnrollments 	 * @param classEnrollments the classEnrollments value 	 */
specifier|public
name|void
name|setClassEnrollments
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|classEnrollments
parameter_list|)
block|{
name|this
operator|.
name|classEnrollments
operator|=
name|classEnrollments
expr_stmt|;
block|}
specifier|public
name|void
name|addToclassEnrollments
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|StudentClassEnrollment
name|studentClassEnrollment
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|getClassEnrollments
argument_list|()
condition|)
name|setClassEnrollments
argument_list|(
operator|new
name|java
operator|.
name|util
operator|.
name|HashSet
argument_list|()
argument_list|)
expr_stmt|;
name|getClassEnrollments
argument_list|()
operator|.
name|add
argument_list|(
name|studentClassEnrollment
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: courseRequestOptions 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getCourseRequestOptions
parameter_list|()
block|{
return|return
name|courseRequestOptions
return|;
block|}
comment|/** 	 * Set the value related to the column: courseRequestOptions 	 * @param courseRequestOptions the courseRequestOptions value 	 */
specifier|public
name|void
name|setCourseRequestOptions
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|courseRequestOptions
parameter_list|)
block|{
name|this
operator|.
name|courseRequestOptions
operator|=
name|courseRequestOptions
expr_stmt|;
block|}
specifier|public
name|void
name|addTocourseRequestOptions
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseRequestOption
name|courseRequestOption
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|getCourseRequestOptions
argument_list|()
condition|)
name|setCourseRequestOptions
argument_list|(
operator|new
name|java
operator|.
name|util
operator|.
name|HashSet
argument_list|()
argument_list|)
expr_stmt|;
name|getCourseRequestOptions
argument_list|()
operator|.
name|add
argument_list|(
name|courseRequestOption
argument_list|)
expr_stmt|;
block|}
comment|/**      * Return the value associated with the column: classWaitLists      */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getClassWaitLists
parameter_list|()
block|{
return|return
name|classWaitLists
return|;
block|}
comment|/**      * Set the value related to the column: classWaitLists      * @param classWaitLists the classWaitLists value      */
specifier|public
name|void
name|setClassWaitLists
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|classWaitLists
parameter_list|)
block|{
name|this
operator|.
name|classWaitLists
operator|=
name|classWaitLists
expr_stmt|;
block|}
specifier|public
name|void
name|addToclassWaitLists
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ClassWaitList
name|classWaitLists
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|getClassWaitLists
argument_list|()
condition|)
name|setClassWaitLists
argument_list|(
operator|new
name|java
operator|.
name|util
operator|.
name|HashSet
argument_list|()
argument_list|)
expr_stmt|;
name|getClassWaitLists
argument_list|()
operator|.
name|add
argument_list|(
name|classWaitLists
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|obj
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseRequest
operator|)
condition|)
return|return
literal|false
return|;
else|else
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseRequest
name|courseRequest
init|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseRequest
operator|)
name|obj
decl_stmt|;
if|if
condition|(
literal|null
operator|==
name|this
operator|.
name|getUniqueId
argument_list|()
operator|||
literal|null
operator|==
name|courseRequest
operator|.
name|getUniqueId
argument_list|()
condition|)
return|return
literal|false
return|;
else|else
return|return
operator|(
name|this
operator|.
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
name|courseRequest
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|)
return|;
block|}
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|Integer
operator|.
name|MIN_VALUE
operator|==
name|this
operator|.
name|hashCode
condition|)
block|{
if|if
condition|(
literal|null
operator|==
name|this
operator|.
name|getUniqueId
argument_list|()
condition|)
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
else|else
block|{
name|String
name|hashStr
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|":"
operator|+
name|this
operator|.
name|getUniqueId
argument_list|()
operator|.
name|hashCode
argument_list|()
decl_stmt|;
name|this
operator|.
name|hashCode
operator|=
name|hashStr
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|this
operator|.
name|hashCode
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|super
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

