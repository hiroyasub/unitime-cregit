begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.1 (University Timetabling Application)  * Copyright (C) 2008, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program; if not, write to the Free Software Foundation, Inc.,  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_comment
comment|/**  * This is an object that contains data related to the EXAM table.  * Do not modify this class because it will be overwritten if the configuration file  * related to this class is modified.  *  * @hibernate.class  *  table="EXAM"  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|BaseExam
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PreferenceGroup
implements|implements
name|Serializable
block|{
specifier|public
specifier|static
name|String
name|REF
init|=
literal|"Exam"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_NAME
init|=
literal|"name"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_NOTE
init|=
literal|"note"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_LENGTH
init|=
literal|"length"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_MAX_NBR_ROOMS
init|=
literal|"maxNbrRooms"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_SEATING_TYPE
init|=
literal|"seatingType"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_ASSIGNED_PREFERENCE
init|=
literal|"assignedPreference"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_EXAM_TYPE
init|=
literal|"examType"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_AVG_PERIOD
init|=
literal|"avgPeriod"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_UNIQUE_ID_ROLLED_FORWARD_FROM
init|=
literal|"uniqueIdRolledForwardFrom"
decl_stmt|;
comment|// constructors
specifier|public
name|BaseExam
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * Constructor for primary key 	 */
specifier|public
name|BaseExam
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueId
parameter_list|)
block|{
name|super
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|initialize
parameter_list|()
block|{
block|}
specifier|private
name|int
name|hashCode
init|=
name|Integer
operator|.
name|MIN_VALUE
decl_stmt|;
comment|// fields
specifier|private
name|java
operator|.
name|lang
operator|.
name|String
name|name
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|String
name|note
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Integer
name|length
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Integer
name|maxNbrRooms
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Integer
name|seatingType
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|String
name|assignedPreference
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Integer
name|examType
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Integer
name|avgPeriod
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueIdRolledForwardFrom
decl_stmt|;
comment|// many to one
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
name|session
decl_stmt|;
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ExamPeriod
name|assignedPeriod
decl_stmt|;
comment|// collections
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|owners
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|assignedRooms
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|instructors
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|conflicts
decl_stmt|;
comment|/** 	 * Return the value associated with the column: NAME 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
comment|/** 	 * Set the value related to the column: NAME 	 * @param name the NAME value 	 */
specifier|public
name|void
name|setName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: NOTE 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getNote
parameter_list|()
block|{
return|return
name|note
return|;
block|}
comment|/** 	 * Set the value related to the column: NOTE 	 * @param note the NOTE value 	 */
specifier|public
name|void
name|setNote
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|note
parameter_list|)
block|{
name|this
operator|.
name|note
operator|=
name|note
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: LENGTH 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Integer
name|getLength
parameter_list|()
block|{
return|return
name|length
return|;
block|}
comment|/** 	 * Set the value related to the column: LENGTH 	 * @param length the LENGTH value 	 */
specifier|public
name|void
name|setLength
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Integer
name|length
parameter_list|)
block|{
name|this
operator|.
name|length
operator|=
name|length
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: MAX_NBR_ROOMS 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Integer
name|getMaxNbrRooms
parameter_list|()
block|{
return|return
name|maxNbrRooms
return|;
block|}
comment|/** 	 * Set the value related to the column: MAX_NBR_ROOMS 	 * @param maxNbrRooms the MAX_NBR_ROOMS value 	 */
specifier|public
name|void
name|setMaxNbrRooms
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Integer
name|maxNbrRooms
parameter_list|)
block|{
name|this
operator|.
name|maxNbrRooms
operator|=
name|maxNbrRooms
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: SEATING_TYPE 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Integer
name|getSeatingType
parameter_list|()
block|{
return|return
name|seatingType
return|;
block|}
comment|/** 	 * Set the value related to the column: SEATING_TYPE 	 * @param seatingType the SEATING_TYPE value 	 */
specifier|public
name|void
name|setSeatingType
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Integer
name|seatingType
parameter_list|)
block|{
name|this
operator|.
name|seatingType
operator|=
name|seatingType
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: ASSIGNED_PREF 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getAssignedPreference
parameter_list|()
block|{
return|return
name|assignedPreference
return|;
block|}
comment|/** 	 * Set the value related to the column: ASSIGNED_PREF 	 * @param assignedPreference the ASSIGNED_PREF value 	 */
specifier|public
name|void
name|setAssignedPreference
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|assignedPreference
parameter_list|)
block|{
name|this
operator|.
name|assignedPreference
operator|=
name|assignedPreference
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: EXAM_TYPE 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Integer
name|getExamType
parameter_list|()
block|{
return|return
name|examType
return|;
block|}
comment|/** 	 * Set the value related to the column: EXAM_TYPE 	 * @param examType the EXAM_TYPE value 	 */
specifier|public
name|void
name|setExamType
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Integer
name|examType
parameter_list|)
block|{
name|this
operator|.
name|examType
operator|=
name|examType
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: AVG_PERIOD 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Integer
name|getAvgPeriod
parameter_list|()
block|{
return|return
name|avgPeriod
return|;
block|}
comment|/** 	 * Set the value related to the column: AVG_PERIOD 	 * @param avgPeriod the AVG_PERIOD value 	 */
specifier|public
name|void
name|setAvgPeriod
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Integer
name|avgPeriod
parameter_list|)
block|{
name|this
operator|.
name|avgPeriod
operator|=
name|avgPeriod
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: UID_ROLLED_FWD_FROM 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Long
name|getUniqueIdRolledForwardFrom
parameter_list|()
block|{
return|return
name|uniqueIdRolledForwardFrom
return|;
block|}
comment|/** 	 * Set the value related to the column: UID_ROLLED_FWD_FROM 	 * @param uniqueIdRolledForwardFrom the UID_ROLLED_FWD_FROM value 	 */
specifier|public
name|void
name|setUniqueIdRolledForwardFrom
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueIdRolledForwardFrom
parameter_list|)
block|{
name|this
operator|.
name|uniqueIdRolledForwardFrom
operator|=
name|uniqueIdRolledForwardFrom
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: SESSION_ID 	 */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
name|getSession
parameter_list|()
block|{
return|return
name|session
return|;
block|}
comment|/** 	 * Set the value related to the column: SESSION_ID 	 * @param session the SESSION_ID value 	 */
specifier|public
name|void
name|setSession
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
name|session
parameter_list|)
block|{
name|this
operator|.
name|session
operator|=
name|session
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: ASSIGNED_PERIOD 	 */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ExamPeriod
name|getAssignedPeriod
parameter_list|()
block|{
return|return
name|assignedPeriod
return|;
block|}
comment|/** 	 * Set the value related to the column: ASSIGNED_PERIOD 	 * @param assignedPeriod the ASSIGNED_PERIOD value 	 */
specifier|public
name|void
name|setAssignedPeriod
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ExamPeriod
name|assignedPeriod
parameter_list|)
block|{
name|this
operator|.
name|assignedPeriod
operator|=
name|assignedPeriod
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: owners 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getOwners
parameter_list|()
block|{
return|return
name|owners
return|;
block|}
comment|/** 	 * Set the value related to the column: owners 	 * @param owners the owners value 	 */
specifier|public
name|void
name|setOwners
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|owners
parameter_list|)
block|{
name|this
operator|.
name|owners
operator|=
name|owners
expr_stmt|;
block|}
specifier|public
name|void
name|addToowners
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ExamOwner
name|examOwner
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|getOwners
argument_list|()
condition|)
name|setOwners
argument_list|(
operator|new
name|java
operator|.
name|util
operator|.
name|HashSet
argument_list|()
argument_list|)
expr_stmt|;
name|getOwners
argument_list|()
operator|.
name|add
argument_list|(
name|examOwner
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: assignedRooms 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getAssignedRooms
parameter_list|()
block|{
return|return
name|assignedRooms
return|;
block|}
comment|/** 	 * Set the value related to the column: assignedRooms 	 * @param assignedRooms the assignedRooms value 	 */
specifier|public
name|void
name|setAssignedRooms
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|assignedRooms
parameter_list|)
block|{
name|this
operator|.
name|assignedRooms
operator|=
name|assignedRooms
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: instructors 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getInstructors
parameter_list|()
block|{
return|return
name|instructors
return|;
block|}
comment|/** 	 * Set the value related to the column: instructors 	 * @param instructors the instructors value 	 */
specifier|public
name|void
name|setInstructors
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|instructors
parameter_list|)
block|{
name|this
operator|.
name|instructors
operator|=
name|instructors
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: conflicts 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getConflicts
parameter_list|()
block|{
return|return
name|conflicts
return|;
block|}
comment|/** 	 * Set the value related to the column: conflicts 	 * @param conflicts the conflicts value 	 */
specifier|public
name|void
name|setConflicts
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|conflicts
parameter_list|)
block|{
name|this
operator|.
name|conflicts
operator|=
name|conflicts
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|obj
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Exam
operator|)
condition|)
return|return
literal|false
return|;
else|else
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Exam
name|exam
init|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Exam
operator|)
name|obj
decl_stmt|;
if|if
condition|(
literal|null
operator|==
name|this
operator|.
name|getUniqueId
argument_list|()
operator|||
literal|null
operator|==
name|exam
operator|.
name|getUniqueId
argument_list|()
condition|)
return|return
literal|false
return|;
else|else
return|return
operator|(
name|this
operator|.
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
name|exam
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|)
return|;
block|}
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|Integer
operator|.
name|MIN_VALUE
operator|==
name|this
operator|.
name|hashCode
condition|)
block|{
if|if
condition|(
literal|null
operator|==
name|this
operator|.
name|getUniqueId
argument_list|()
condition|)
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
else|else
block|{
name|String
name|hashStr
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|":"
operator|+
name|this
operator|.
name|getUniqueId
argument_list|()
operator|.
name|hashCode
argument_list|()
decl_stmt|;
name|this
operator|.
name|hashCode
operator|=
name|hashStr
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|this
operator|.
name|hashCode
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|super
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

