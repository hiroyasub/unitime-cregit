begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitClassEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitClassMeeting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitClassMeetingUtilPeriod
import|;
end_import

begin_comment
comment|/**  * Do not change this class. It has been automatically generated using ant create-model.  * @see org.unitime.commons.ant.CreateBaseModelFromXml  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|BasePitClassMeeting
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|Long
name|iUniqueId
decl_stmt|;
specifier|private
name|Date
name|iMeetingDate
decl_stmt|;
specifier|private
name|Integer
name|iStartPeriod
decl_stmt|;
specifier|private
name|Integer
name|iStartOffset
decl_stmt|;
specifier|private
name|Integer
name|iStopPeriod
decl_stmt|;
specifier|private
name|Integer
name|iStopOffset
decl_stmt|;
specifier|private
name|Long
name|iLocationPermanentId
decl_stmt|;
specifier|private
name|Integer
name|iTimePatternMinPerMtg
decl_stmt|;
specifier|private
name|Integer
name|iCalculatedMinPerMtg
decl_stmt|;
specifier|private
name|PitClassEvent
name|iPitClassEvent
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|PitClassMeetingUtilPeriod
argument_list|>
name|iPitClassMeetingUtilPeriods
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_UNIQUEID
init|=
literal|"uniqueId"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_MEETING_DATE
init|=
literal|"meetingDate"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_START_PERIOD
init|=
literal|"startPeriod"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_START_OFFSET
init|=
literal|"startOffset"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_STOP_PERIOD
init|=
literal|"stopPeriod"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_STOP_OFFSET
init|=
literal|"stopOffset"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_LOCATION_PERM_ID
init|=
literal|"locationPermanentId"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_TIME_PATTERN_MIN_PER_MTG
init|=
literal|"timePatternMinPerMtg"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_CALCULATED_MIN_PER_MTG
init|=
literal|"calculatedMinPerMtg"
decl_stmt|;
specifier|public
name|BasePitClassMeeting
parameter_list|()
block|{
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|public
name|BasePitClassMeeting
parameter_list|(
name|Long
name|uniqueId
parameter_list|)
block|{
name|setUniqueId
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|initialize
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getUniqueId
parameter_list|()
block|{
return|return
name|iUniqueId
return|;
block|}
specifier|public
name|void
name|setUniqueId
parameter_list|(
name|Long
name|uniqueId
parameter_list|)
block|{
name|iUniqueId
operator|=
name|uniqueId
expr_stmt|;
block|}
specifier|public
name|Date
name|getMeetingDate
parameter_list|()
block|{
return|return
name|iMeetingDate
return|;
block|}
specifier|public
name|void
name|setMeetingDate
parameter_list|(
name|Date
name|meetingDate
parameter_list|)
block|{
name|iMeetingDate
operator|=
name|meetingDate
expr_stmt|;
block|}
specifier|public
name|Integer
name|getStartPeriod
parameter_list|()
block|{
return|return
name|iStartPeriod
return|;
block|}
specifier|public
name|void
name|setStartPeriod
parameter_list|(
name|Integer
name|startPeriod
parameter_list|)
block|{
name|iStartPeriod
operator|=
name|startPeriod
expr_stmt|;
block|}
specifier|public
name|Integer
name|getStartOffset
parameter_list|()
block|{
return|return
name|iStartOffset
return|;
block|}
specifier|public
name|void
name|setStartOffset
parameter_list|(
name|Integer
name|startOffset
parameter_list|)
block|{
name|iStartOffset
operator|=
name|startOffset
expr_stmt|;
block|}
specifier|public
name|Integer
name|getStopPeriod
parameter_list|()
block|{
return|return
name|iStopPeriod
return|;
block|}
specifier|public
name|void
name|setStopPeriod
parameter_list|(
name|Integer
name|stopPeriod
parameter_list|)
block|{
name|iStopPeriod
operator|=
name|stopPeriod
expr_stmt|;
block|}
specifier|public
name|Integer
name|getStopOffset
parameter_list|()
block|{
return|return
name|iStopOffset
return|;
block|}
specifier|public
name|void
name|setStopOffset
parameter_list|(
name|Integer
name|stopOffset
parameter_list|)
block|{
name|iStopOffset
operator|=
name|stopOffset
expr_stmt|;
block|}
specifier|public
name|Long
name|getLocationPermanentId
parameter_list|()
block|{
return|return
name|iLocationPermanentId
return|;
block|}
specifier|public
name|void
name|setLocationPermanentId
parameter_list|(
name|Long
name|locationPermanentId
parameter_list|)
block|{
name|iLocationPermanentId
operator|=
name|locationPermanentId
expr_stmt|;
block|}
specifier|public
name|Integer
name|getTimePatternMinPerMtg
parameter_list|()
block|{
return|return
name|iTimePatternMinPerMtg
return|;
block|}
specifier|public
name|void
name|setTimePatternMinPerMtg
parameter_list|(
name|Integer
name|timePatternMinPerMtg
parameter_list|)
block|{
name|iTimePatternMinPerMtg
operator|=
name|timePatternMinPerMtg
expr_stmt|;
block|}
specifier|public
name|Integer
name|getCalculatedMinPerMtg
parameter_list|()
block|{
return|return
name|iCalculatedMinPerMtg
return|;
block|}
specifier|public
name|void
name|setCalculatedMinPerMtg
parameter_list|(
name|Integer
name|calculatedMinPerMtg
parameter_list|)
block|{
name|iCalculatedMinPerMtg
operator|=
name|calculatedMinPerMtg
expr_stmt|;
block|}
specifier|public
name|PitClassEvent
name|getPitClassEvent
parameter_list|()
block|{
return|return
name|iPitClassEvent
return|;
block|}
specifier|public
name|void
name|setPitClassEvent
parameter_list|(
name|PitClassEvent
name|pitClassEvent
parameter_list|)
block|{
name|iPitClassEvent
operator|=
name|pitClassEvent
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|PitClassMeetingUtilPeriod
argument_list|>
name|getPitClassMeetingUtilPeriods
parameter_list|()
block|{
return|return
name|iPitClassMeetingUtilPeriods
return|;
block|}
specifier|public
name|void
name|setPitClassMeetingUtilPeriods
parameter_list|(
name|Set
argument_list|<
name|PitClassMeetingUtilPeriod
argument_list|>
name|pitClassMeetingUtilPeriods
parameter_list|)
block|{
name|iPitClassMeetingUtilPeriods
operator|=
name|pitClassMeetingUtilPeriods
expr_stmt|;
block|}
specifier|public
name|void
name|addTopitClassMeetingUtilPeriods
parameter_list|(
name|PitClassMeetingUtilPeriod
name|pitClassMeetingUtilPeriod
parameter_list|)
block|{
if|if
condition|(
name|iPitClassMeetingUtilPeriods
operator|==
literal|null
condition|)
name|iPitClassMeetingUtilPeriods
operator|=
operator|new
name|HashSet
argument_list|<
name|PitClassMeetingUtilPeriod
argument_list|>
argument_list|()
expr_stmt|;
name|iPitClassMeetingUtilPeriods
operator|.
name|add
argument_list|(
name|pitClassMeetingUtilPeriod
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|PitClassMeeting
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|||
operator|(
operator|(
name|PitClassMeeting
operator|)
name|o
operator|)
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
return|return
literal|false
return|;
return|return
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|PitClassMeeting
operator|)
name|o
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
return|return
name|getUniqueId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"PitClassMeeting["
operator|+
name|getUniqueId
argument_list|()
operator|+
literal|"]"
return|;
block|}
specifier|public
name|String
name|toDebugString
parameter_list|()
block|{
return|return
literal|"PitClassMeeting["
operator|+
literal|"\n	CalculatedMinPerMtg: "
operator|+
name|getCalculatedMinPerMtg
argument_list|()
operator|+
literal|"\n	LocationPermanentId: "
operator|+
name|getLocationPermanentId
argument_list|()
operator|+
literal|"\n	MeetingDate: "
operator|+
name|getMeetingDate
argument_list|()
operator|+
literal|"\n	PitClassEvent: "
operator|+
name|getPitClassEvent
argument_list|()
operator|+
literal|"\n	StartOffset: "
operator|+
name|getStartOffset
argument_list|()
operator|+
literal|"\n	StartPeriod: "
operator|+
name|getStartPeriod
argument_list|()
operator|+
literal|"\n	StopOffset: "
operator|+
name|getStopOffset
argument_list|()
operator|+
literal|"\n	StopPeriod: "
operator|+
name|getStopPeriod
argument_list|()
operator|+
literal|"\n	TimePatternMinPerMtg: "
operator|+
name|getTimePatternMinPerMtg
argument_list|()
operator|+
literal|"\n	UniqueId: "
operator|+
name|getUniqueId
argument_list|()
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

