begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 - 3.5 (University Timetabling Application)  * Copyright (C) 2010 - 2014, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Assignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|JointEnrollment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Solution
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolutionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverParameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|StudentEnrollment
import|;
end_import

begin_comment
comment|/**  * Do not change this class. It has been automatically generated using ant create-model.  * @see org.unitime.commons.ant.CreateBaseModelFromXml  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|BaseSolution
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|Long
name|iUniqueId
decl_stmt|;
specifier|private
name|Date
name|iCreated
decl_stmt|;
specifier|private
name|Boolean
name|iValid
decl_stmt|;
specifier|private
name|Boolean
name|iCommited
decl_stmt|;
specifier|private
name|Date
name|iCommitDate
decl_stmt|;
specifier|private
name|String
name|iNote
decl_stmt|;
specifier|private
name|String
name|iCreator
decl_stmt|;
specifier|private
name|SolverGroup
name|iOwner
decl_stmt|;
specifier|private
name|SolutionInfo
name|iGlobalInfo
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|SolverParameter
argument_list|>
name|iParameters
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|SolutionInfo
argument_list|>
name|iSolutionInfo
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|StudentEnrollment
argument_list|>
name|iStudentEnrollments
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|Assignment
argument_list|>
name|iAssignments
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|JointEnrollment
argument_list|>
name|iJointEnrollments
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_UNIQUEID
init|=
literal|"uniqueId"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_CREATED
init|=
literal|"created"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_VALID
init|=
literal|"valid"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_COMMITED
init|=
literal|"commited"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_COMMIT_DATE
init|=
literal|"commitDate"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_NOTE
init|=
literal|"note"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_CREATOR
init|=
literal|"creator"
decl_stmt|;
specifier|public
name|BaseSolution
parameter_list|()
block|{
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|public
name|BaseSolution
parameter_list|(
name|Long
name|uniqueId
parameter_list|)
block|{
name|setUniqueId
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|initialize
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getUniqueId
parameter_list|()
block|{
return|return
name|iUniqueId
return|;
block|}
specifier|public
name|void
name|setUniqueId
parameter_list|(
name|Long
name|uniqueId
parameter_list|)
block|{
name|iUniqueId
operator|=
name|uniqueId
expr_stmt|;
block|}
specifier|public
name|Date
name|getCreated
parameter_list|()
block|{
return|return
name|iCreated
return|;
block|}
specifier|public
name|void
name|setCreated
parameter_list|(
name|Date
name|created
parameter_list|)
block|{
name|iCreated
operator|=
name|created
expr_stmt|;
block|}
specifier|public
name|Boolean
name|isValid
parameter_list|()
block|{
return|return
name|iValid
return|;
block|}
specifier|public
name|Boolean
name|getValid
parameter_list|()
block|{
return|return
name|iValid
return|;
block|}
specifier|public
name|void
name|setValid
parameter_list|(
name|Boolean
name|valid
parameter_list|)
block|{
name|iValid
operator|=
name|valid
expr_stmt|;
block|}
specifier|public
name|Boolean
name|isCommited
parameter_list|()
block|{
return|return
name|iCommited
return|;
block|}
specifier|public
name|Boolean
name|getCommited
parameter_list|()
block|{
return|return
name|iCommited
return|;
block|}
specifier|public
name|void
name|setCommited
parameter_list|(
name|Boolean
name|commited
parameter_list|)
block|{
name|iCommited
operator|=
name|commited
expr_stmt|;
block|}
specifier|public
name|Date
name|getCommitDate
parameter_list|()
block|{
return|return
name|iCommitDate
return|;
block|}
specifier|public
name|void
name|setCommitDate
parameter_list|(
name|Date
name|commitDate
parameter_list|)
block|{
name|iCommitDate
operator|=
name|commitDate
expr_stmt|;
block|}
specifier|public
name|String
name|getNote
parameter_list|()
block|{
return|return
name|iNote
return|;
block|}
specifier|public
name|void
name|setNote
parameter_list|(
name|String
name|note
parameter_list|)
block|{
name|iNote
operator|=
name|note
expr_stmt|;
block|}
specifier|public
name|String
name|getCreator
parameter_list|()
block|{
return|return
name|iCreator
return|;
block|}
specifier|public
name|void
name|setCreator
parameter_list|(
name|String
name|creator
parameter_list|)
block|{
name|iCreator
operator|=
name|creator
expr_stmt|;
block|}
specifier|public
name|SolverGroup
name|getOwner
parameter_list|()
block|{
return|return
name|iOwner
return|;
block|}
specifier|public
name|void
name|setOwner
parameter_list|(
name|SolverGroup
name|owner
parameter_list|)
block|{
name|iOwner
operator|=
name|owner
expr_stmt|;
block|}
specifier|public
name|SolutionInfo
name|getGlobalInfo
parameter_list|()
block|{
return|return
name|iGlobalInfo
return|;
block|}
specifier|public
name|void
name|setGlobalInfo
parameter_list|(
name|SolutionInfo
name|globalInfo
parameter_list|)
block|{
name|iGlobalInfo
operator|=
name|globalInfo
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|SolverParameter
argument_list|>
name|getParameters
parameter_list|()
block|{
return|return
name|iParameters
return|;
block|}
specifier|public
name|void
name|setParameters
parameter_list|(
name|Set
argument_list|<
name|SolverParameter
argument_list|>
name|parameters
parameter_list|)
block|{
name|iParameters
operator|=
name|parameters
expr_stmt|;
block|}
specifier|public
name|void
name|addToparameters
parameter_list|(
name|SolverParameter
name|solverParameter
parameter_list|)
block|{
if|if
condition|(
name|iParameters
operator|==
literal|null
condition|)
name|iParameters
operator|=
operator|new
name|HashSet
argument_list|<
name|SolverParameter
argument_list|>
argument_list|()
expr_stmt|;
name|iParameters
operator|.
name|add
argument_list|(
name|solverParameter
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|SolutionInfo
argument_list|>
name|getSolutionInfo
parameter_list|()
block|{
return|return
name|iSolutionInfo
return|;
block|}
specifier|public
name|void
name|setSolutionInfo
parameter_list|(
name|Set
argument_list|<
name|SolutionInfo
argument_list|>
name|solutionInfo
parameter_list|)
block|{
name|iSolutionInfo
operator|=
name|solutionInfo
expr_stmt|;
block|}
specifier|public
name|void
name|addTosolutionInfo
parameter_list|(
name|SolutionInfo
name|solutionInfo
parameter_list|)
block|{
if|if
condition|(
name|iSolutionInfo
operator|==
literal|null
condition|)
name|iSolutionInfo
operator|=
operator|new
name|HashSet
argument_list|<
name|SolutionInfo
argument_list|>
argument_list|()
expr_stmt|;
name|iSolutionInfo
operator|.
name|add
argument_list|(
name|solutionInfo
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|StudentEnrollment
argument_list|>
name|getStudentEnrollments
parameter_list|()
block|{
return|return
name|iStudentEnrollments
return|;
block|}
specifier|public
name|void
name|setStudentEnrollments
parameter_list|(
name|Set
argument_list|<
name|StudentEnrollment
argument_list|>
name|studentEnrollments
parameter_list|)
block|{
name|iStudentEnrollments
operator|=
name|studentEnrollments
expr_stmt|;
block|}
specifier|public
name|void
name|addTostudentEnrollments
parameter_list|(
name|StudentEnrollment
name|studentEnrollment
parameter_list|)
block|{
if|if
condition|(
name|iStudentEnrollments
operator|==
literal|null
condition|)
name|iStudentEnrollments
operator|=
operator|new
name|HashSet
argument_list|<
name|StudentEnrollment
argument_list|>
argument_list|()
expr_stmt|;
name|iStudentEnrollments
operator|.
name|add
argument_list|(
name|studentEnrollment
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|Assignment
argument_list|>
name|getAssignments
parameter_list|()
block|{
return|return
name|iAssignments
return|;
block|}
specifier|public
name|void
name|setAssignments
parameter_list|(
name|Set
argument_list|<
name|Assignment
argument_list|>
name|assignments
parameter_list|)
block|{
name|iAssignments
operator|=
name|assignments
expr_stmt|;
block|}
specifier|public
name|void
name|addToassignments
parameter_list|(
name|Assignment
name|assignment
parameter_list|)
block|{
if|if
condition|(
name|iAssignments
operator|==
literal|null
condition|)
name|iAssignments
operator|=
operator|new
name|HashSet
argument_list|<
name|Assignment
argument_list|>
argument_list|()
expr_stmt|;
name|iAssignments
operator|.
name|add
argument_list|(
name|assignment
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|JointEnrollment
argument_list|>
name|getJointEnrollments
parameter_list|()
block|{
return|return
name|iJointEnrollments
return|;
block|}
specifier|public
name|void
name|setJointEnrollments
parameter_list|(
name|Set
argument_list|<
name|JointEnrollment
argument_list|>
name|jointEnrollments
parameter_list|)
block|{
name|iJointEnrollments
operator|=
name|jointEnrollments
expr_stmt|;
block|}
specifier|public
name|void
name|addTojointEnrollments
parameter_list|(
name|JointEnrollment
name|jointEnrollment
parameter_list|)
block|{
if|if
condition|(
name|iJointEnrollments
operator|==
literal|null
condition|)
name|iJointEnrollments
operator|=
operator|new
name|HashSet
argument_list|<
name|JointEnrollment
argument_list|>
argument_list|()
expr_stmt|;
name|iJointEnrollments
operator|.
name|add
argument_list|(
name|jointEnrollment
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|Solution
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|||
operator|(
operator|(
name|Solution
operator|)
name|o
operator|)
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
return|return
literal|false
return|;
return|return
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|Solution
operator|)
name|o
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
return|return
name|getUniqueId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"Solution["
operator|+
name|getUniqueId
argument_list|()
operator|+
literal|"]"
return|;
block|}
specifier|public
name|String
name|toDebugString
parameter_list|()
block|{
return|return
literal|"Solution["
operator|+
literal|"\n	CommitDate: "
operator|+
name|getCommitDate
argument_list|()
operator|+
literal|"\n	Commited: "
operator|+
name|getCommited
argument_list|()
operator|+
literal|"\n	Created: "
operator|+
name|getCreated
argument_list|()
operator|+
literal|"\n	Creator: "
operator|+
name|getCreator
argument_list|()
operator|+
literal|"\n	Note: "
operator|+
name|getNote
argument_list|()
operator|+
literal|"\n	Owner: "
operator|+
name|getOwner
argument_list|()
operator|+
literal|"\n	UniqueId: "
operator|+
name|getUniqueId
argument_list|()
operator|+
literal|"\n	Valid: "
operator|+
name|getValid
argument_list|()
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

