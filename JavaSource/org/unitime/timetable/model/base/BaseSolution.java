begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.1 (University Timetabling Application)  * Copyright (C) 2008, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program; if not, write to the Free Software Foundation, Inc.,  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_comment
comment|/**  * This is an object that contains data related to the SOLUTION table.  * Do not modify this class because it will be overwritten if the configuration file  * related to this class is modified.  *  * @hibernate.class  *  table="SOLUTION"  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|BaseSolution
implements|implements
name|Serializable
block|{
specifier|public
specifier|static
name|String
name|REF
init|=
literal|"Solution"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_CREATED
init|=
literal|"created"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_VALID
init|=
literal|"valid"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_COMMITED
init|=
literal|"commited"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_COMMIT_DATE
init|=
literal|"commitDate"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_NOTE
init|=
literal|"note"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_CREATOR
init|=
literal|"creator"
decl_stmt|;
comment|// constructors
specifier|public
name|BaseSolution
parameter_list|()
block|{
name|initialize
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * Constructor for primary key 	 */
specifier|public
name|BaseSolution
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueId
parameter_list|)
block|{
name|this
operator|.
name|setUniqueId
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * Constructor for required fields 	 */
specifier|public
name|BaseSolution
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueId
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverGroup
name|owner
parameter_list|,
name|java
operator|.
name|util
operator|.
name|Date
name|created
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Boolean
name|valid
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Boolean
name|commited
parameter_list|)
block|{
name|this
operator|.
name|setUniqueId
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
name|this
operator|.
name|setOwner
argument_list|(
name|owner
argument_list|)
expr_stmt|;
name|this
operator|.
name|setCreated
argument_list|(
name|created
argument_list|)
expr_stmt|;
name|this
operator|.
name|setValid
argument_list|(
name|valid
argument_list|)
expr_stmt|;
name|this
operator|.
name|setCommited
argument_list|(
name|commited
argument_list|)
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|initialize
parameter_list|()
block|{
block|}
specifier|private
name|int
name|hashCode
init|=
name|Integer
operator|.
name|MIN_VALUE
decl_stmt|;
comment|// primary key
specifier|private
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueId
decl_stmt|;
comment|// fields
specifier|private
name|java
operator|.
name|util
operator|.
name|Date
name|created
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Boolean
name|valid
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Boolean
name|commited
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|Date
name|commitDate
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|String
name|note
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|String
name|creator
decl_stmt|;
comment|// many to one
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverGroup
name|owner
decl_stmt|;
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolutionInfo
name|globalInfo
decl_stmt|;
comment|// collections
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|parameters
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|solutionInfo
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|studentEnrollments
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|assignments
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|jointEnrollments
decl_stmt|;
comment|/** 	 * Return the unique identifier of this class      * @hibernate.id      *  generator-class="sequence"      *  column="UNIQUEID"      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Long
name|getUniqueId
parameter_list|()
block|{
return|return
name|uniqueId
return|;
block|}
comment|/** 	 * Set the unique identifier of this class 	 * @param uniqueId the new ID 	 */
specifier|public
name|void
name|setUniqueId
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueId
parameter_list|)
block|{
name|this
operator|.
name|uniqueId
operator|=
name|uniqueId
expr_stmt|;
name|this
operator|.
name|hashCode
operator|=
name|Integer
operator|.
name|MIN_VALUE
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: CREATED 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Date
name|getCreated
parameter_list|()
block|{
return|return
name|created
return|;
block|}
comment|/** 	 * Set the value related to the column: CREATED 	 * @param created the CREATED value 	 */
specifier|public
name|void
name|setCreated
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Date
name|created
parameter_list|)
block|{
name|this
operator|.
name|created
operator|=
name|created
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: VALID 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Boolean
name|isValid
parameter_list|()
block|{
return|return
name|valid
return|;
block|}
comment|/** 	 * Set the value related to the column: VALID 	 * @param valid the VALID value 	 */
specifier|public
name|void
name|setValid
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Boolean
name|valid
parameter_list|)
block|{
name|this
operator|.
name|valid
operator|=
name|valid
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: COMMITED 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Boolean
name|isCommited
parameter_list|()
block|{
return|return
name|commited
return|;
block|}
comment|/** 	 * Set the value related to the column: COMMITED 	 * @param commited the COMMITED value 	 */
specifier|public
name|void
name|setCommited
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Boolean
name|commited
parameter_list|)
block|{
name|this
operator|.
name|commited
operator|=
name|commited
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: COMMIT_DATE 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Date
name|getCommitDate
parameter_list|()
block|{
return|return
name|commitDate
return|;
block|}
comment|/** 	 * Set the value related to the column: COMMIT_DATE 	 * @param commitDate the COMMIT_DATE value 	 */
specifier|public
name|void
name|setCommitDate
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Date
name|commitDate
parameter_list|)
block|{
name|this
operator|.
name|commitDate
operator|=
name|commitDate
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: NOTE 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getNote
parameter_list|()
block|{
return|return
name|note
return|;
block|}
comment|/** 	 * Set the value related to the column: NOTE 	 * @param note the NOTE value 	 */
specifier|public
name|void
name|setNote
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|note
parameter_list|)
block|{
name|this
operator|.
name|note
operator|=
name|note
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: CREATOR 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getCreator
parameter_list|()
block|{
return|return
name|creator
return|;
block|}
comment|/** 	 * Set the value related to the column: CREATOR 	 * @param creator the CREATOR value 	 */
specifier|public
name|void
name|setCreator
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|creator
parameter_list|)
block|{
name|this
operator|.
name|creator
operator|=
name|creator
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: OWNER_ID 	 */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverGroup
name|getOwner
parameter_list|()
block|{
return|return
name|owner
return|;
block|}
comment|/** 	 * Set the value related to the column: OWNER_ID 	 * @param owner the OWNER_ID value 	 */
specifier|public
name|void
name|setOwner
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverGroup
name|owner
parameter_list|)
block|{
name|this
operator|.
name|owner
operator|=
name|owner
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: globalInfo 	 */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolutionInfo
name|getGlobalInfo
parameter_list|()
block|{
return|return
name|globalInfo
return|;
block|}
comment|/** 	 * Set the value related to the column: globalInfo 	 * @param globalInfo the globalInfo value 	 */
specifier|public
name|void
name|setGlobalInfo
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolutionInfo
name|globalInfo
parameter_list|)
block|{
name|this
operator|.
name|globalInfo
operator|=
name|globalInfo
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: parameters 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getParameters
parameter_list|()
block|{
return|return
name|parameters
return|;
block|}
comment|/** 	 * Set the value related to the column: parameters 	 * @param parameters the parameters value 	 */
specifier|public
name|void
name|setParameters
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|parameters
parameter_list|)
block|{
name|this
operator|.
name|parameters
operator|=
name|parameters
expr_stmt|;
block|}
specifier|public
name|void
name|addToparameters
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverParameter
name|solverParameter
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|getParameters
argument_list|()
condition|)
name|setParameters
argument_list|(
operator|new
name|java
operator|.
name|util
operator|.
name|HashSet
argument_list|()
argument_list|)
expr_stmt|;
name|getParameters
argument_list|()
operator|.
name|add
argument_list|(
name|solverParameter
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: solutionInfo 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getSolutionInfo
parameter_list|()
block|{
return|return
name|solutionInfo
return|;
block|}
comment|/** 	 * Set the value related to the column: solutionInfo 	 * @param solutionInfo the solutionInfo value 	 */
specifier|public
name|void
name|setSolutionInfo
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|solutionInfo
parameter_list|)
block|{
name|this
operator|.
name|solutionInfo
operator|=
name|solutionInfo
expr_stmt|;
block|}
specifier|public
name|void
name|addTosolutionInfo
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverInfo
name|solverInfo
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|getSolutionInfo
argument_list|()
condition|)
name|setSolutionInfo
argument_list|(
operator|new
name|java
operator|.
name|util
operator|.
name|HashSet
argument_list|()
argument_list|)
expr_stmt|;
name|getSolutionInfo
argument_list|()
operator|.
name|add
argument_list|(
name|solverInfo
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: studentEnrollments 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getStudentEnrollments
parameter_list|()
block|{
return|return
name|studentEnrollments
return|;
block|}
comment|/** 	 * Set the value related to the column: studentEnrollments 	 * @param studentEnrollments the studentEnrollments value 	 */
specifier|public
name|void
name|setStudentEnrollments
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|studentEnrollments
parameter_list|)
block|{
name|this
operator|.
name|studentEnrollments
operator|=
name|studentEnrollments
expr_stmt|;
block|}
specifier|public
name|void
name|addTostudentEnrollments
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|StudentEnrollment
name|studentEnrollment
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|getStudentEnrollments
argument_list|()
condition|)
name|setStudentEnrollments
argument_list|(
operator|new
name|java
operator|.
name|util
operator|.
name|HashSet
argument_list|()
argument_list|)
expr_stmt|;
name|getStudentEnrollments
argument_list|()
operator|.
name|add
argument_list|(
name|studentEnrollment
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: assignments 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getAssignments
parameter_list|()
block|{
return|return
name|assignments
return|;
block|}
comment|/** 	 * Set the value related to the column: assignments 	 * @param assignments the assignments value 	 */
specifier|public
name|void
name|setAssignments
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|assignments
parameter_list|)
block|{
name|this
operator|.
name|assignments
operator|=
name|assignments
expr_stmt|;
block|}
specifier|public
name|void
name|addToassignments
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Assignment
name|assignment
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|getAssignments
argument_list|()
condition|)
name|setAssignments
argument_list|(
operator|new
name|java
operator|.
name|util
operator|.
name|HashSet
argument_list|()
argument_list|)
expr_stmt|;
name|getAssignments
argument_list|()
operator|.
name|add
argument_list|(
name|assignment
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: jointEnrollments 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getJointEnrollments
parameter_list|()
block|{
return|return
name|jointEnrollments
return|;
block|}
comment|/** 	 * Set the value related to the column: jointEnrollments 	 * @param jointEnrollments the jointEnrollments value 	 */
specifier|public
name|void
name|setJointEnrollments
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|jointEnrollments
parameter_list|)
block|{
name|this
operator|.
name|jointEnrollments
operator|=
name|jointEnrollments
expr_stmt|;
block|}
specifier|public
name|void
name|addTojointEnrollments
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|JointEnrollment
name|jointEnrollment
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|getJointEnrollments
argument_list|()
condition|)
name|setJointEnrollments
argument_list|(
operator|new
name|java
operator|.
name|util
operator|.
name|HashSet
argument_list|()
argument_list|)
expr_stmt|;
name|getJointEnrollments
argument_list|()
operator|.
name|add
argument_list|(
name|jointEnrollment
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|obj
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Solution
operator|)
condition|)
return|return
literal|false
return|;
else|else
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Solution
name|solution
init|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Solution
operator|)
name|obj
decl_stmt|;
if|if
condition|(
literal|null
operator|==
name|this
operator|.
name|getUniqueId
argument_list|()
operator|||
literal|null
operator|==
name|solution
operator|.
name|getUniqueId
argument_list|()
condition|)
return|return
literal|false
return|;
else|else
return|return
operator|(
name|this
operator|.
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
name|solution
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|)
return|;
block|}
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|Integer
operator|.
name|MIN_VALUE
operator|==
name|this
operator|.
name|hashCode
condition|)
block|{
if|if
condition|(
literal|null
operator|==
name|this
operator|.
name|getUniqueId
argument_list|()
condition|)
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
else|else
block|{
name|String
name|hashStr
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|":"
operator|+
name|this
operator|.
name|getUniqueId
argument_list|()
operator|.
name|hashCode
argument_list|()
decl_stmt|;
name|this
operator|.
name|hashCode
operator|=
name|hashStr
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|this
operator|.
name|hashCode
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|super
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

