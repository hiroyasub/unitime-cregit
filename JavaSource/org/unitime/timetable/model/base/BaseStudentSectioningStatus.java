begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RefTableEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|StudentSectioningStatus
import|;
end_import

begin_comment
comment|/**  * Do not change this class. It has been automatically generated using ant create-model.  * @see org.unitime.commons.ant.CreateBaseModelFromXml  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|BaseStudentSectioningStatus
extends|extends
name|RefTableEntry
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|Integer
name|iStatus
decl_stmt|;
specifier|private
name|String
name|iMessage
decl_stmt|;
specifier|private
name|Date
name|iEffectiveStartDate
decl_stmt|;
specifier|private
name|Date
name|iEffectiveStopDate
decl_stmt|;
specifier|private
name|Integer
name|iEffectiveStartPeriod
decl_stmt|;
specifier|private
name|Integer
name|iEffectiveStopPeriod
decl_stmt|;
specifier|private
name|StudentSectioningStatus
name|iFallBackStatus
decl_stmt|;
specifier|private
name|Session
name|iSession
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|CourseType
argument_list|>
name|iTypes
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_STATUS
init|=
literal|"status"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_MESSAGE
init|=
literal|"message"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_START_DATE
init|=
literal|"effectiveStartDate"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_STOP_DATE
init|=
literal|"effectiveStopDate"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_START_SLOT
init|=
literal|"effectiveStartPeriod"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_STOP_SLOT
init|=
literal|"effectiveStopPeriod"
decl_stmt|;
specifier|public
name|BaseStudentSectioningStatus
parameter_list|()
block|{
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|public
name|BaseStudentSectioningStatus
parameter_list|(
name|Long
name|uniqueId
parameter_list|)
block|{
name|setUniqueId
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|initialize
parameter_list|()
block|{
block|}
specifier|public
name|Integer
name|getStatus
parameter_list|()
block|{
return|return
name|iStatus
return|;
block|}
specifier|public
name|void
name|setStatus
parameter_list|(
name|Integer
name|status
parameter_list|)
block|{
name|iStatus
operator|=
name|status
expr_stmt|;
block|}
specifier|public
name|String
name|getMessage
parameter_list|()
block|{
return|return
name|iMessage
return|;
block|}
specifier|public
name|void
name|setMessage
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|iMessage
operator|=
name|message
expr_stmt|;
block|}
specifier|public
name|Date
name|getEffectiveStartDate
parameter_list|()
block|{
return|return
name|iEffectiveStartDate
return|;
block|}
specifier|public
name|void
name|setEffectiveStartDate
parameter_list|(
name|Date
name|effectiveStartDate
parameter_list|)
block|{
name|iEffectiveStartDate
operator|=
name|effectiveStartDate
expr_stmt|;
block|}
specifier|public
name|Date
name|getEffectiveStopDate
parameter_list|()
block|{
return|return
name|iEffectiveStopDate
return|;
block|}
specifier|public
name|void
name|setEffectiveStopDate
parameter_list|(
name|Date
name|effectiveStopDate
parameter_list|)
block|{
name|iEffectiveStopDate
operator|=
name|effectiveStopDate
expr_stmt|;
block|}
specifier|public
name|Integer
name|getEffectiveStartPeriod
parameter_list|()
block|{
return|return
name|iEffectiveStartPeriod
return|;
block|}
specifier|public
name|void
name|setEffectiveStartPeriod
parameter_list|(
name|Integer
name|effectiveStartPeriod
parameter_list|)
block|{
name|iEffectiveStartPeriod
operator|=
name|effectiveStartPeriod
expr_stmt|;
block|}
specifier|public
name|Integer
name|getEffectiveStopPeriod
parameter_list|()
block|{
return|return
name|iEffectiveStopPeriod
return|;
block|}
specifier|public
name|void
name|setEffectiveStopPeriod
parameter_list|(
name|Integer
name|effectiveStopPeriod
parameter_list|)
block|{
name|iEffectiveStopPeriod
operator|=
name|effectiveStopPeriod
expr_stmt|;
block|}
specifier|public
name|StudentSectioningStatus
name|getFallBackStatus
parameter_list|()
block|{
return|return
name|iFallBackStatus
return|;
block|}
specifier|public
name|void
name|setFallBackStatus
parameter_list|(
name|StudentSectioningStatus
name|fallBackStatus
parameter_list|)
block|{
name|iFallBackStatus
operator|=
name|fallBackStatus
expr_stmt|;
block|}
specifier|public
name|Session
name|getSession
parameter_list|()
block|{
return|return
name|iSession
return|;
block|}
specifier|public
name|void
name|setSession
parameter_list|(
name|Session
name|session
parameter_list|)
block|{
name|iSession
operator|=
name|session
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|CourseType
argument_list|>
name|getTypes
parameter_list|()
block|{
return|return
name|iTypes
return|;
block|}
specifier|public
name|void
name|setTypes
parameter_list|(
name|Set
argument_list|<
name|CourseType
argument_list|>
name|types
parameter_list|)
block|{
name|iTypes
operator|=
name|types
expr_stmt|;
block|}
specifier|public
name|void
name|addTotypes
parameter_list|(
name|CourseType
name|courseType
parameter_list|)
block|{
if|if
condition|(
name|iTypes
operator|==
literal|null
condition|)
name|iTypes
operator|=
operator|new
name|HashSet
argument_list|<
name|CourseType
argument_list|>
argument_list|()
expr_stmt|;
name|iTypes
operator|.
name|add
argument_list|(
name|courseType
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|StudentSectioningStatus
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|||
operator|(
operator|(
name|StudentSectioningStatus
operator|)
name|o
operator|)
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
return|return
literal|false
return|;
return|return
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|StudentSectioningStatus
operator|)
name|o
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
return|return
name|getUniqueId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"StudentSectioningStatus["
operator|+
name|getUniqueId
argument_list|()
operator|+
literal|" "
operator|+
name|getLabel
argument_list|()
operator|+
literal|"]"
return|;
block|}
specifier|public
name|String
name|toDebugString
parameter_list|()
block|{
return|return
literal|"StudentSectioningStatus["
operator|+
literal|"\n	EffectiveStartDate: "
operator|+
name|getEffectiveStartDate
argument_list|()
operator|+
literal|"\n	EffectiveStartPeriod: "
operator|+
name|getEffectiveStartPeriod
argument_list|()
operator|+
literal|"\n	EffectiveStopDate: "
operator|+
name|getEffectiveStopDate
argument_list|()
operator|+
literal|"\n	EffectiveStopPeriod: "
operator|+
name|getEffectiveStopPeriod
argument_list|()
operator|+
literal|"\n	FallBackStatus: "
operator|+
name|getFallBackStatus
argument_list|()
operator|+
literal|"\n	Label: "
operator|+
name|getLabel
argument_list|()
operator|+
literal|"\n	Message: "
operator|+
name|getMessage
argument_list|()
operator|+
literal|"\n	Reference: "
operator|+
name|getReference
argument_list|()
operator|+
literal|"\n	Session: "
operator|+
name|getSession
argument_list|()
operator|+
literal|"\n	Status: "
operator|+
name|getStatus
argument_list|()
operator|+
literal|"\n	UniqueId: "
operator|+
name|getUniqueId
argument_list|()
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

