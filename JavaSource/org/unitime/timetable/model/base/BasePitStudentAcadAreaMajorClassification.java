begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|AcademicArea
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|AcademicClassification
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitStudent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitStudentAcadAreaMajorClassification
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PosMajor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PosMajorConcentration
import|;
end_import

begin_comment
comment|/**  * Do not change this class. It has been automatically generated using ant create-model.  * @see org.unitime.commons.ant.CreateBaseModelFromXml  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|BasePitStudentAcadAreaMajorClassification
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|Long
name|iUniqueId
decl_stmt|;
specifier|private
name|Double
name|iWeight
decl_stmt|;
specifier|private
name|PitStudent
name|iPitStudent
decl_stmt|;
specifier|private
name|AcademicArea
name|iAcademicArea
decl_stmt|;
specifier|private
name|AcademicClassification
name|iAcademicClassification
decl_stmt|;
specifier|private
name|PosMajor
name|iMajor
decl_stmt|;
specifier|private
name|PosMajorConcentration
name|iConcentration
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_UNIQUEID
init|=
literal|"uniqueId"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_WEIGHT
init|=
literal|"weight"
decl_stmt|;
specifier|public
name|BasePitStudentAcadAreaMajorClassification
parameter_list|()
block|{
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|public
name|BasePitStudentAcadAreaMajorClassification
parameter_list|(
name|Long
name|uniqueId
parameter_list|)
block|{
name|setUniqueId
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|initialize
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getUniqueId
parameter_list|()
block|{
return|return
name|iUniqueId
return|;
block|}
specifier|public
name|void
name|setUniqueId
parameter_list|(
name|Long
name|uniqueId
parameter_list|)
block|{
name|iUniqueId
operator|=
name|uniqueId
expr_stmt|;
block|}
specifier|public
name|Double
name|getWeight
parameter_list|()
block|{
return|return
name|iWeight
return|;
block|}
specifier|public
name|void
name|setWeight
parameter_list|(
name|Double
name|weight
parameter_list|)
block|{
name|iWeight
operator|=
name|weight
expr_stmt|;
block|}
specifier|public
name|PitStudent
name|getPitStudent
parameter_list|()
block|{
return|return
name|iPitStudent
return|;
block|}
specifier|public
name|void
name|setPitStudent
parameter_list|(
name|PitStudent
name|pitStudent
parameter_list|)
block|{
name|iPitStudent
operator|=
name|pitStudent
expr_stmt|;
block|}
specifier|public
name|AcademicArea
name|getAcademicArea
parameter_list|()
block|{
return|return
name|iAcademicArea
return|;
block|}
specifier|public
name|void
name|setAcademicArea
parameter_list|(
name|AcademicArea
name|academicArea
parameter_list|)
block|{
name|iAcademicArea
operator|=
name|academicArea
expr_stmt|;
block|}
specifier|public
name|AcademicClassification
name|getAcademicClassification
parameter_list|()
block|{
return|return
name|iAcademicClassification
return|;
block|}
specifier|public
name|void
name|setAcademicClassification
parameter_list|(
name|AcademicClassification
name|academicClassification
parameter_list|)
block|{
name|iAcademicClassification
operator|=
name|academicClassification
expr_stmt|;
block|}
specifier|public
name|PosMajor
name|getMajor
parameter_list|()
block|{
return|return
name|iMajor
return|;
block|}
specifier|public
name|void
name|setMajor
parameter_list|(
name|PosMajor
name|major
parameter_list|)
block|{
name|iMajor
operator|=
name|major
expr_stmt|;
block|}
specifier|public
name|PosMajorConcentration
name|getConcentration
parameter_list|()
block|{
return|return
name|iConcentration
return|;
block|}
specifier|public
name|void
name|setConcentration
parameter_list|(
name|PosMajorConcentration
name|concentration
parameter_list|)
block|{
name|iConcentration
operator|=
name|concentration
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|PitStudentAcadAreaMajorClassification
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|||
operator|(
operator|(
name|PitStudentAcadAreaMajorClassification
operator|)
name|o
operator|)
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
return|return
literal|false
return|;
return|return
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|PitStudentAcadAreaMajorClassification
operator|)
name|o
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
return|return
name|getUniqueId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"PitStudentAcadAreaMajorClassification["
operator|+
name|getUniqueId
argument_list|()
operator|+
literal|"]"
return|;
block|}
specifier|public
name|String
name|toDebugString
parameter_list|()
block|{
return|return
literal|"PitStudentAcadAreaMajorClassification["
operator|+
literal|"\n	AcademicArea: "
operator|+
name|getAcademicArea
argument_list|()
operator|+
literal|"\n	AcademicClassification: "
operator|+
name|getAcademicClassification
argument_list|()
operator|+
literal|"\n	Concentration: "
operator|+
name|getConcentration
argument_list|()
operator|+
literal|"\n	Major: "
operator|+
name|getMajor
argument_list|()
operator|+
literal|"\n	PitStudent: "
operator|+
name|getPitStudent
argument_list|()
operator|+
literal|"\n	UniqueId: "
operator|+
name|getUniqueId
argument_list|()
operator|+
literal|"\n	Weight: "
operator|+
name|getWeight
argument_list|()
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

