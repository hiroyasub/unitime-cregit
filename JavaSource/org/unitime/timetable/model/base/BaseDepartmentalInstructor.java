begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.0 (University Course Timetabling& Student Sectioning Application)  * Copyright (C) 2007, UniTime.org, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program; if not, write to the Free Software Foundation, Inc.,  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_comment
comment|/**  * This is an object that contains data related to the DEPARTMENTAL_INSTRUCTOR table.  * Do not modify this class because it will be overwritten if the configuration file  * related to this class is modified.  *  * @hibernate.class  *  table="DEPARTMENTAL_INSTRUCTOR"  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|BaseDepartmentalInstructor
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PreferenceGroup
implements|implements
name|Serializable
block|{
specifier|public
specifier|static
name|String
name|REF
init|=
literal|"DepartmentalInstructor"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_EXTERNAL_UNIQUE_ID
init|=
literal|"externalUniqueId"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_CAREER_ACCT
init|=
literal|"careerAcct"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_FIRST_NAME
init|=
literal|"firstName"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_MIDDLE_NAME
init|=
literal|"middleName"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_LAST_NAME
init|=
literal|"lastName"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_NOTE
init|=
literal|"note"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_EMAIL
init|=
literal|"email"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_IGNORE_TO_FAR
init|=
literal|"ignoreToFar"
decl_stmt|;
comment|// constructors
specifier|public
name|BaseDepartmentalInstructor
parameter_list|()
block|{
name|initialize
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * Constructor for primary key 	 */
specifier|public
name|BaseDepartmentalInstructor
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueId
parameter_list|)
block|{
name|super
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|hashCode
init|=
name|Integer
operator|.
name|MIN_VALUE
decl_stmt|;
comment|// fields
specifier|private
name|java
operator|.
name|lang
operator|.
name|String
name|externalUniqueId
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|String
name|careerAcct
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|String
name|firstName
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|String
name|middleName
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|String
name|lastName
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|String
name|note
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|String
name|email
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Boolean
name|ignoreToFar
decl_stmt|;
comment|// many to one
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PositionType
name|positionType
decl_stmt|;
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
name|department
decl_stmt|;
comment|// collections
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|classes
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|designatorSubjectAreas
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|assignments
decl_stmt|;
comment|/** 	 * Return the value associated with the column: EXTERNAL_UID 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getExternalUniqueId
parameter_list|()
block|{
return|return
name|externalUniqueId
return|;
block|}
comment|/** 	 * Set the value related to the column: EXTERNAL_UID 	 * @param externalUniqueId the EXTERNAL_UID value 	 */
specifier|public
name|void
name|setExternalUniqueId
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|externalUniqueId
parameter_list|)
block|{
name|this
operator|.
name|externalUniqueId
operator|=
name|externalUniqueId
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: CAREER_ACCT 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getCareerAcct
parameter_list|()
block|{
return|return
name|careerAcct
return|;
block|}
comment|/** 	 * Set the value related to the column: CAREER_ACCT 	 * @param careerAcct the CAREER_ACCT value 	 */
specifier|public
name|void
name|setCareerAcct
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|careerAcct
parameter_list|)
block|{
name|this
operator|.
name|careerAcct
operator|=
name|careerAcct
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: FNAME 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getFirstName
parameter_list|()
block|{
return|return
name|firstName
return|;
block|}
comment|/** 	 * Set the value related to the column: FNAME 	 * @param firstName the FNAME value 	 */
specifier|public
name|void
name|setFirstName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|firstName
parameter_list|)
block|{
name|this
operator|.
name|firstName
operator|=
name|firstName
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: MNAME 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getMiddleName
parameter_list|()
block|{
return|return
name|middleName
return|;
block|}
comment|/** 	 * Set the value related to the column: MNAME 	 * @param middleName the MNAME value 	 */
specifier|public
name|void
name|setMiddleName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|middleName
parameter_list|)
block|{
name|this
operator|.
name|middleName
operator|=
name|middleName
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: LNAME 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getLastName
parameter_list|()
block|{
return|return
name|lastName
return|;
block|}
comment|/** 	 * Set the value related to the column: LNAME 	 * @param lastName the LNAME value 	 */
specifier|public
name|void
name|setLastName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|lastName
parameter_list|)
block|{
name|this
operator|.
name|lastName
operator|=
name|lastName
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: NOTE 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getNote
parameter_list|()
block|{
return|return
name|note
return|;
block|}
comment|/** 	 * Set the value related to the column: NOTE 	 * @param note the NOTE value 	 */
specifier|public
name|void
name|setNote
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|note
parameter_list|)
block|{
name|this
operator|.
name|note
operator|=
name|note
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: EMAIL 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getEmail
parameter_list|()
block|{
return|return
name|email
return|;
block|}
comment|/** 	 * Set the value related to the column: EMAIL 	 * @param email the EMAIL value 	 */
specifier|public
name|void
name|setEmail
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|email
parameter_list|)
block|{
name|this
operator|.
name|email
operator|=
name|email
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: IGNORE_TOO_FAR 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Boolean
name|isIgnoreToFar
parameter_list|()
block|{
return|return
name|ignoreToFar
return|;
block|}
comment|/** 	 * Set the value related to the column: IGNORE_TOO_FAR 	 * @param ignoreToFar the IGNORE_TOO_FAR value 	 */
specifier|public
name|void
name|setIgnoreToFar
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Boolean
name|ignoreToFar
parameter_list|)
block|{
name|this
operator|.
name|ignoreToFar
operator|=
name|ignoreToFar
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: POS_CODE_TYPE 	 */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PositionType
name|getPositionType
parameter_list|()
block|{
return|return
name|positionType
return|;
block|}
comment|/** 	 * Set the value related to the column: POS_CODE_TYPE 	 * @param positionType the POS_CODE_TYPE value 	 */
specifier|public
name|void
name|setPositionType
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PositionType
name|positionType
parameter_list|)
block|{
name|this
operator|.
name|positionType
operator|=
name|positionType
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: DEPARTMENT_UNIQUEID 	 */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
name|getDepartment
parameter_list|()
block|{
return|return
name|department
return|;
block|}
comment|/** 	 * Set the value related to the column: DEPARTMENT_UNIQUEID 	 * @param department the DEPARTMENT_UNIQUEID value 	 */
specifier|public
name|void
name|setDepartment
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
name|department
parameter_list|)
block|{
name|this
operator|.
name|department
operator|=
name|department
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: classes 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getClasses
parameter_list|()
block|{
return|return
name|classes
return|;
block|}
comment|/** 	 * Set the value related to the column: classes 	 * @param classes the classes value 	 */
specifier|public
name|void
name|setClasses
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|classes
parameter_list|)
block|{
name|this
operator|.
name|classes
operator|=
name|classes
expr_stmt|;
block|}
specifier|public
name|void
name|addToclasses
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ClassInstructor
name|classInstructor
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|getClasses
argument_list|()
condition|)
name|setClasses
argument_list|(
operator|new
name|java
operator|.
name|util
operator|.
name|HashSet
argument_list|()
argument_list|)
expr_stmt|;
name|getClasses
argument_list|()
operator|.
name|add
argument_list|(
name|classInstructor
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: designatorSubjectAreas 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getDesignatorSubjectAreas
parameter_list|()
block|{
return|return
name|designatorSubjectAreas
return|;
block|}
comment|/** 	 * Set the value related to the column: designatorSubjectAreas 	 * @param designatorSubjectAreas the designatorSubjectAreas value 	 */
specifier|public
name|void
name|setDesignatorSubjectAreas
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|designatorSubjectAreas
parameter_list|)
block|{
name|this
operator|.
name|designatorSubjectAreas
operator|=
name|designatorSubjectAreas
expr_stmt|;
block|}
specifier|public
name|void
name|addTodesignatorSubjectAreas
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Designator
name|designator
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|getDesignatorSubjectAreas
argument_list|()
condition|)
name|setDesignatorSubjectAreas
argument_list|(
operator|new
name|java
operator|.
name|util
operator|.
name|HashSet
argument_list|()
argument_list|)
expr_stmt|;
name|getDesignatorSubjectAreas
argument_list|()
operator|.
name|add
argument_list|(
name|designator
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: assignments 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getAssignments
parameter_list|()
block|{
return|return
name|assignments
return|;
block|}
comment|/** 	 * Set the value related to the column: assignments 	 * @param assignments the assignments value 	 */
specifier|public
name|void
name|setAssignments
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|assignments
parameter_list|)
block|{
name|this
operator|.
name|assignments
operator|=
name|assignments
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|obj
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DepartmentalInstructor
operator|)
condition|)
return|return
literal|false
return|;
else|else
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DepartmentalInstructor
name|departmentalInstructor
init|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DepartmentalInstructor
operator|)
name|obj
decl_stmt|;
if|if
condition|(
literal|null
operator|==
name|this
operator|.
name|getUniqueId
argument_list|()
operator|||
literal|null
operator|==
name|departmentalInstructor
operator|.
name|getUniqueId
argument_list|()
condition|)
return|return
literal|false
return|;
else|else
return|return
operator|(
name|this
operator|.
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
name|departmentalInstructor
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|)
return|;
block|}
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|Integer
operator|.
name|MIN_VALUE
operator|==
name|this
operator|.
name|hashCode
condition|)
block|{
if|if
condition|(
literal|null
operator|==
name|this
operator|.
name|getUniqueId
argument_list|()
condition|)
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
else|else
block|{
name|String
name|hashStr
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|":"
operator|+
name|this
operator|.
name|getUniqueId
argument_list|()
operator|.
name|hashCode
argument_list|()
decl_stmt|;
name|this
operator|.
name|hashCode
operator|=
name|hashStr
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|this
operator|.
name|hashCode
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|super
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

