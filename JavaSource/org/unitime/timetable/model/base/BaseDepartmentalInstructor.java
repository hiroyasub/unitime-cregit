begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Assignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ClassInstructor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DepartmentalInstructor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Designator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Exam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PositionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PreferenceGroup
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|BaseDepartmentalInstructor
extends|extends
name|PreferenceGroup
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|String
name|iExternalUniqueId
decl_stmt|;
specifier|private
name|String
name|iCareerAcct
decl_stmt|;
specifier|private
name|String
name|iFirstName
decl_stmt|;
specifier|private
name|String
name|iMiddleName
decl_stmt|;
specifier|private
name|String
name|iLastName
decl_stmt|;
specifier|private
name|String
name|iNote
decl_stmt|;
specifier|private
name|String
name|iEmail
decl_stmt|;
specifier|private
name|Boolean
name|iIgnoreToFar
decl_stmt|;
specifier|private
name|PositionType
name|iPositionType
decl_stmt|;
specifier|private
name|Department
name|iDepartment
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|ClassInstructor
argument_list|>
name|iClasses
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|Exam
argument_list|>
name|iExams
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|Designator
argument_list|>
name|iDesignatorSubjectAreas
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|Assignment
argument_list|>
name|iAssignments
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_EXTERNAL_UID
init|=
literal|"externalUniqueId"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_CAREER_ACCT
init|=
literal|"careerAcct"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_FNAME
init|=
literal|"firstName"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_MNAME
init|=
literal|"middleName"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_LNAME
init|=
literal|"lastName"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_NOTE
init|=
literal|"note"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_EMAIL
init|=
literal|"email"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_IGNORE_TOO_FAR
init|=
literal|"ignoreToFar"
decl_stmt|;
specifier|public
name|BaseDepartmentalInstructor
parameter_list|()
block|{
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|public
name|BaseDepartmentalInstructor
parameter_list|(
name|Long
name|uniqueId
parameter_list|)
block|{
name|setUniqueId
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|initialize
parameter_list|()
block|{
block|}
specifier|public
name|String
name|getExternalUniqueId
parameter_list|()
block|{
return|return
name|iExternalUniqueId
return|;
block|}
specifier|public
name|void
name|setExternalUniqueId
parameter_list|(
name|String
name|externalUniqueId
parameter_list|)
block|{
name|iExternalUniqueId
operator|=
name|externalUniqueId
expr_stmt|;
block|}
specifier|public
name|String
name|getCareerAcct
parameter_list|()
block|{
return|return
name|iCareerAcct
return|;
block|}
specifier|public
name|void
name|setCareerAcct
parameter_list|(
name|String
name|careerAcct
parameter_list|)
block|{
name|iCareerAcct
operator|=
name|careerAcct
expr_stmt|;
block|}
specifier|public
name|String
name|getFirstName
parameter_list|()
block|{
return|return
name|iFirstName
return|;
block|}
specifier|public
name|void
name|setFirstName
parameter_list|(
name|String
name|firstName
parameter_list|)
block|{
name|iFirstName
operator|=
name|firstName
expr_stmt|;
block|}
specifier|public
name|String
name|getMiddleName
parameter_list|()
block|{
return|return
name|iMiddleName
return|;
block|}
specifier|public
name|void
name|setMiddleName
parameter_list|(
name|String
name|middleName
parameter_list|)
block|{
name|iMiddleName
operator|=
name|middleName
expr_stmt|;
block|}
specifier|public
name|String
name|getLastName
parameter_list|()
block|{
return|return
name|iLastName
return|;
block|}
specifier|public
name|void
name|setLastName
parameter_list|(
name|String
name|lastName
parameter_list|)
block|{
name|iLastName
operator|=
name|lastName
expr_stmt|;
block|}
specifier|public
name|String
name|getNote
parameter_list|()
block|{
return|return
name|iNote
return|;
block|}
specifier|public
name|void
name|setNote
parameter_list|(
name|String
name|note
parameter_list|)
block|{
name|iNote
operator|=
name|note
expr_stmt|;
block|}
specifier|public
name|String
name|getEmail
parameter_list|()
block|{
return|return
name|iEmail
return|;
block|}
specifier|public
name|void
name|setEmail
parameter_list|(
name|String
name|email
parameter_list|)
block|{
name|iEmail
operator|=
name|email
expr_stmt|;
block|}
specifier|public
name|Boolean
name|isIgnoreToFar
parameter_list|()
block|{
return|return
name|iIgnoreToFar
return|;
block|}
specifier|public
name|Boolean
name|getIgnoreToFar
parameter_list|()
block|{
return|return
name|iIgnoreToFar
return|;
block|}
specifier|public
name|void
name|setIgnoreToFar
parameter_list|(
name|Boolean
name|ignoreToFar
parameter_list|)
block|{
name|iIgnoreToFar
operator|=
name|ignoreToFar
expr_stmt|;
block|}
specifier|public
name|PositionType
name|getPositionType
parameter_list|()
block|{
return|return
name|iPositionType
return|;
block|}
specifier|public
name|void
name|setPositionType
parameter_list|(
name|PositionType
name|positionType
parameter_list|)
block|{
name|iPositionType
operator|=
name|positionType
expr_stmt|;
block|}
specifier|public
name|Department
name|getDepartment
parameter_list|()
block|{
return|return
name|iDepartment
return|;
block|}
specifier|public
name|void
name|setDepartment
parameter_list|(
name|Department
name|department
parameter_list|)
block|{
name|iDepartment
operator|=
name|department
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|ClassInstructor
argument_list|>
name|getClasses
parameter_list|()
block|{
return|return
name|iClasses
return|;
block|}
specifier|public
name|void
name|setClasses
parameter_list|(
name|Set
argument_list|<
name|ClassInstructor
argument_list|>
name|classes
parameter_list|)
block|{
name|iClasses
operator|=
name|classes
expr_stmt|;
block|}
specifier|public
name|void
name|addToclasses
parameter_list|(
name|ClassInstructor
name|classInstructor
parameter_list|)
block|{
if|if
condition|(
name|iClasses
operator|==
literal|null
condition|)
name|iClasses
operator|=
operator|new
name|HashSet
argument_list|<
name|ClassInstructor
argument_list|>
argument_list|()
expr_stmt|;
name|iClasses
operator|.
name|add
argument_list|(
name|classInstructor
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|Exam
argument_list|>
name|getExams
parameter_list|()
block|{
return|return
name|iExams
return|;
block|}
specifier|public
name|void
name|setExams
parameter_list|(
name|Set
argument_list|<
name|Exam
argument_list|>
name|exams
parameter_list|)
block|{
name|iExams
operator|=
name|exams
expr_stmt|;
block|}
specifier|public
name|void
name|addToexams
parameter_list|(
name|Exam
name|exam
parameter_list|)
block|{
if|if
condition|(
name|iExams
operator|==
literal|null
condition|)
name|iExams
operator|=
operator|new
name|HashSet
argument_list|<
name|Exam
argument_list|>
argument_list|()
expr_stmt|;
name|iExams
operator|.
name|add
argument_list|(
name|exam
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|Designator
argument_list|>
name|getDesignatorSubjectAreas
parameter_list|()
block|{
return|return
name|iDesignatorSubjectAreas
return|;
block|}
specifier|public
name|void
name|setDesignatorSubjectAreas
parameter_list|(
name|Set
argument_list|<
name|Designator
argument_list|>
name|designatorSubjectAreas
parameter_list|)
block|{
name|iDesignatorSubjectAreas
operator|=
name|designatorSubjectAreas
expr_stmt|;
block|}
specifier|public
name|void
name|addTodesignatorSubjectAreas
parameter_list|(
name|Designator
name|designator
parameter_list|)
block|{
if|if
condition|(
name|iDesignatorSubjectAreas
operator|==
literal|null
condition|)
name|iDesignatorSubjectAreas
operator|=
operator|new
name|HashSet
argument_list|<
name|Designator
argument_list|>
argument_list|()
expr_stmt|;
name|iDesignatorSubjectAreas
operator|.
name|add
argument_list|(
name|designator
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|Assignment
argument_list|>
name|getAssignments
parameter_list|()
block|{
return|return
name|iAssignments
return|;
block|}
specifier|public
name|void
name|setAssignments
parameter_list|(
name|Set
argument_list|<
name|Assignment
argument_list|>
name|assignments
parameter_list|)
block|{
name|iAssignments
operator|=
name|assignments
expr_stmt|;
block|}
specifier|public
name|void
name|addToassignments
parameter_list|(
name|Assignment
name|assignment
parameter_list|)
block|{
if|if
condition|(
name|iAssignments
operator|==
literal|null
condition|)
name|iAssignments
operator|=
operator|new
name|HashSet
argument_list|<
name|Assignment
argument_list|>
argument_list|()
expr_stmt|;
name|iAssignments
operator|.
name|add
argument_list|(
name|assignment
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|DepartmentalInstructor
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|||
operator|(
operator|(
name|DepartmentalInstructor
operator|)
name|o
operator|)
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
return|return
literal|false
return|;
return|return
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|DepartmentalInstructor
operator|)
name|o
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
return|return
name|getUniqueId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"DepartmentalInstructor["
operator|+
name|getUniqueId
argument_list|()
operator|+
literal|"]"
return|;
block|}
specifier|public
name|String
name|toDebugString
parameter_list|()
block|{
return|return
literal|"DepartmentalInstructor["
operator|+
literal|"\n	CareerAcct: "
operator|+
name|getCareerAcct
argument_list|()
operator|+
literal|"\n	Department: "
operator|+
name|getDepartment
argument_list|()
operator|+
literal|"\n	Email: "
operator|+
name|getEmail
argument_list|()
operator|+
literal|"\n	ExternalUniqueId: "
operator|+
name|getExternalUniqueId
argument_list|()
operator|+
literal|"\n	FirstName: "
operator|+
name|getFirstName
argument_list|()
operator|+
literal|"\n	IgnoreToFar: "
operator|+
name|getIgnoreToFar
argument_list|()
operator|+
literal|"\n	LastName: "
operator|+
name|getLastName
argument_list|()
operator|+
literal|"\n	MiddleName: "
operator|+
name|getMiddleName
argument_list|()
operator|+
literal|"\n	Note: "
operator|+
name|getNote
argument_list|()
operator|+
literal|"\n	PositionType: "
operator|+
name|getPositionType
argument_list|()
operator|+
literal|"\n	UniqueId: "
operator|+
name|getUniqueId
argument_list|()
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

