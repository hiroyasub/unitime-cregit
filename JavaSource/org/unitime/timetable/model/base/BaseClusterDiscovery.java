begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 - 3.5 (University Timetabling Application)  * Copyright (C) 2010 - 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ClusterDiscovery
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|BaseClusterDiscovery
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|String
name|iOwnAddress
decl_stmt|;
specifier|private
name|String
name|iClusterName
decl_stmt|;
specifier|private
name|byte
index|[]
name|iPingData
decl_stmt|;
specifier|private
name|Date
name|iTimeStamp
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_PING_DATA
init|=
literal|"pingData"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_TIME_STAMP
init|=
literal|"timeStamp"
decl_stmt|;
specifier|public
name|BaseClusterDiscovery
parameter_list|()
block|{
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|initialize
parameter_list|()
block|{
block|}
specifier|public
name|String
name|getOwnAddress
parameter_list|()
block|{
return|return
name|iOwnAddress
return|;
block|}
specifier|public
name|void
name|setOwnAddress
parameter_list|(
name|String
name|ownAddress
parameter_list|)
block|{
name|iOwnAddress
operator|=
name|ownAddress
expr_stmt|;
block|}
specifier|public
name|String
name|getClusterName
parameter_list|()
block|{
return|return
name|iClusterName
return|;
block|}
specifier|public
name|void
name|setClusterName
parameter_list|(
name|String
name|clusterName
parameter_list|)
block|{
name|iClusterName
operator|=
name|clusterName
expr_stmt|;
block|}
specifier|public
name|byte
index|[]
name|getPingData
parameter_list|()
block|{
return|return
name|iPingData
return|;
block|}
specifier|public
name|void
name|setPingData
parameter_list|(
name|byte
index|[]
name|pingData
parameter_list|)
block|{
name|iPingData
operator|=
name|pingData
expr_stmt|;
block|}
specifier|public
name|Date
name|getTimeStamp
parameter_list|()
block|{
return|return
name|iTimeStamp
return|;
block|}
specifier|public
name|void
name|setTimeStamp
parameter_list|(
name|Date
name|timeStamp
parameter_list|)
block|{
name|iTimeStamp
operator|=
name|timeStamp
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|ClusterDiscovery
operator|)
condition|)
return|return
literal|false
return|;
name|ClusterDiscovery
name|clusterDiscovery
init|=
operator|(
name|ClusterDiscovery
operator|)
name|o
decl_stmt|;
if|if
condition|(
name|getOwnAddress
argument_list|()
operator|==
literal|null
operator|||
name|clusterDiscovery
operator|.
name|getOwnAddress
argument_list|()
operator|==
literal|null
operator|||
operator|!
name|getOwnAddress
argument_list|()
operator|.
name|equals
argument_list|(
name|clusterDiscovery
operator|.
name|getOwnAddress
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|getClusterName
argument_list|()
operator|==
literal|null
operator|||
name|clusterDiscovery
operator|.
name|getClusterName
argument_list|()
operator|==
literal|null
operator|||
operator|!
name|getClusterName
argument_list|()
operator|.
name|equals
argument_list|(
name|clusterDiscovery
operator|.
name|getClusterName
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|getOwnAddress
argument_list|()
operator|==
literal|null
operator|||
name|getClusterName
argument_list|()
operator|==
literal|null
condition|)
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
return|return
name|getOwnAddress
argument_list|()
operator|.
name|hashCode
argument_list|()
operator|^
name|getClusterName
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"ClusterDiscovery["
operator|+
name|getOwnAddress
argument_list|()
operator|+
literal|", "
operator|+
name|getClusterName
argument_list|()
operator|+
literal|"]"
return|;
block|}
specifier|public
name|String
name|toDebugString
parameter_list|()
block|{
return|return
literal|"ClusterDiscovery["
operator|+
literal|"\n	ClusterName: "
operator|+
name|getClusterName
argument_list|()
operator|+
literal|"\n	OwnAddress: "
operator|+
name|getOwnAddress
argument_list|()
operator|+
literal|"\n	PingData: "
operator|+
name|getPingData
argument_list|()
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

