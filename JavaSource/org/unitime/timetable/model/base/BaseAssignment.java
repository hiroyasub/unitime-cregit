begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Assignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|AssignmentInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Class_
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ConstraintInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DatePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DepartmentalInstructor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Location
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Solution
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimePattern
import|;
end_import

begin_comment
comment|/**  * Do not change this class. It has been automatically generated using ant create-model.  * @see org.unitime.commons.ant.CreateBaseModelFromXml  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|BaseAssignment
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|Long
name|iUniqueId
decl_stmt|;
specifier|private
name|Integer
name|iDays
decl_stmt|;
specifier|private
name|Integer
name|iStartSlot
decl_stmt|;
specifier|private
name|Long
name|iClassId
decl_stmt|;
specifier|private
name|String
name|iClassName
decl_stmt|;
specifier|private
name|TimePattern
name|iTimePattern
decl_stmt|;
specifier|private
name|DatePattern
name|iDatePattern
decl_stmt|;
specifier|private
name|Solution
name|iSolution
decl_stmt|;
specifier|private
name|Class_
name|iClazz
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|DepartmentalInstructor
argument_list|>
name|iInstructors
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|Location
argument_list|>
name|iRooms
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|AssignmentInfo
argument_list|>
name|iAssignmentInfo
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|ConstraintInfo
argument_list|>
name|iConstraintInfo
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_UNIQUEID
init|=
literal|"uniqueId"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_DAYS
init|=
literal|"days"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_SLOT
init|=
literal|"startSlot"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_CLASS_ID
init|=
literal|"classId"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_CLASS_NAME
init|=
literal|"className"
decl_stmt|;
specifier|public
name|BaseAssignment
parameter_list|()
block|{
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|public
name|BaseAssignment
parameter_list|(
name|Long
name|uniqueId
parameter_list|)
block|{
name|setUniqueId
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|initialize
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getUniqueId
parameter_list|()
block|{
return|return
name|iUniqueId
return|;
block|}
specifier|public
name|void
name|setUniqueId
parameter_list|(
name|Long
name|uniqueId
parameter_list|)
block|{
name|iUniqueId
operator|=
name|uniqueId
expr_stmt|;
block|}
specifier|public
name|Integer
name|getDays
parameter_list|()
block|{
return|return
name|iDays
return|;
block|}
specifier|public
name|void
name|setDays
parameter_list|(
name|Integer
name|days
parameter_list|)
block|{
name|iDays
operator|=
name|days
expr_stmt|;
block|}
specifier|public
name|Integer
name|getStartSlot
parameter_list|()
block|{
return|return
name|iStartSlot
return|;
block|}
specifier|public
name|void
name|setStartSlot
parameter_list|(
name|Integer
name|startSlot
parameter_list|)
block|{
name|iStartSlot
operator|=
name|startSlot
expr_stmt|;
block|}
specifier|public
name|Long
name|getClassId
parameter_list|()
block|{
return|return
name|iClassId
return|;
block|}
specifier|public
name|void
name|setClassId
parameter_list|(
name|Long
name|classId
parameter_list|)
block|{
name|iClassId
operator|=
name|classId
expr_stmt|;
block|}
specifier|public
name|String
name|getClassName
parameter_list|()
block|{
return|return
name|iClassName
return|;
block|}
specifier|public
name|void
name|setClassName
parameter_list|(
name|String
name|className
parameter_list|)
block|{
name|iClassName
operator|=
name|className
expr_stmt|;
block|}
specifier|public
name|TimePattern
name|getTimePattern
parameter_list|()
block|{
return|return
name|iTimePattern
return|;
block|}
specifier|public
name|void
name|setTimePattern
parameter_list|(
name|TimePattern
name|timePattern
parameter_list|)
block|{
name|iTimePattern
operator|=
name|timePattern
expr_stmt|;
block|}
specifier|public
name|DatePattern
name|getDatePattern
parameter_list|()
block|{
return|return
name|iDatePattern
return|;
block|}
specifier|public
name|void
name|setDatePattern
parameter_list|(
name|DatePattern
name|datePattern
parameter_list|)
block|{
name|iDatePattern
operator|=
name|datePattern
expr_stmt|;
block|}
specifier|public
name|Solution
name|getSolution
parameter_list|()
block|{
return|return
name|iSolution
return|;
block|}
specifier|public
name|void
name|setSolution
parameter_list|(
name|Solution
name|solution
parameter_list|)
block|{
name|iSolution
operator|=
name|solution
expr_stmt|;
block|}
specifier|public
name|Class_
name|getClazz
parameter_list|()
block|{
return|return
name|iClazz
return|;
block|}
specifier|public
name|void
name|setClazz
parameter_list|(
name|Class_
name|clazz
parameter_list|)
block|{
name|iClazz
operator|=
name|clazz
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|DepartmentalInstructor
argument_list|>
name|getInstructors
parameter_list|()
block|{
return|return
name|iInstructors
return|;
block|}
specifier|public
name|void
name|setInstructors
parameter_list|(
name|Set
argument_list|<
name|DepartmentalInstructor
argument_list|>
name|instructors
parameter_list|)
block|{
name|iInstructors
operator|=
name|instructors
expr_stmt|;
block|}
specifier|public
name|void
name|addToinstructors
parameter_list|(
name|DepartmentalInstructor
name|departmentalInstructor
parameter_list|)
block|{
if|if
condition|(
name|iInstructors
operator|==
literal|null
condition|)
name|iInstructors
operator|=
operator|new
name|HashSet
argument_list|<
name|DepartmentalInstructor
argument_list|>
argument_list|()
expr_stmt|;
name|iInstructors
operator|.
name|add
argument_list|(
name|departmentalInstructor
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|Location
argument_list|>
name|getRooms
parameter_list|()
block|{
return|return
name|iRooms
return|;
block|}
specifier|public
name|void
name|setRooms
parameter_list|(
name|Set
argument_list|<
name|Location
argument_list|>
name|rooms
parameter_list|)
block|{
name|iRooms
operator|=
name|rooms
expr_stmt|;
block|}
specifier|public
name|void
name|addTorooms
parameter_list|(
name|Location
name|location
parameter_list|)
block|{
if|if
condition|(
name|iRooms
operator|==
literal|null
condition|)
name|iRooms
operator|=
operator|new
name|HashSet
argument_list|<
name|Location
argument_list|>
argument_list|()
expr_stmt|;
name|iRooms
operator|.
name|add
argument_list|(
name|location
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|AssignmentInfo
argument_list|>
name|getAssignmentInfo
parameter_list|()
block|{
return|return
name|iAssignmentInfo
return|;
block|}
specifier|public
name|void
name|setAssignmentInfo
parameter_list|(
name|Set
argument_list|<
name|AssignmentInfo
argument_list|>
name|assignmentInfo
parameter_list|)
block|{
name|iAssignmentInfo
operator|=
name|assignmentInfo
expr_stmt|;
block|}
specifier|public
name|void
name|addToassignmentInfo
parameter_list|(
name|AssignmentInfo
name|assignmentInfo
parameter_list|)
block|{
if|if
condition|(
name|iAssignmentInfo
operator|==
literal|null
condition|)
name|iAssignmentInfo
operator|=
operator|new
name|HashSet
argument_list|<
name|AssignmentInfo
argument_list|>
argument_list|()
expr_stmt|;
name|iAssignmentInfo
operator|.
name|add
argument_list|(
name|assignmentInfo
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|ConstraintInfo
argument_list|>
name|getConstraintInfo
parameter_list|()
block|{
return|return
name|iConstraintInfo
return|;
block|}
specifier|public
name|void
name|setConstraintInfo
parameter_list|(
name|Set
argument_list|<
name|ConstraintInfo
argument_list|>
name|constraintInfo
parameter_list|)
block|{
name|iConstraintInfo
operator|=
name|constraintInfo
expr_stmt|;
block|}
specifier|public
name|void
name|addToconstraintInfo
parameter_list|(
name|ConstraintInfo
name|constraintInfo
parameter_list|)
block|{
if|if
condition|(
name|iConstraintInfo
operator|==
literal|null
condition|)
name|iConstraintInfo
operator|=
operator|new
name|HashSet
argument_list|<
name|ConstraintInfo
argument_list|>
argument_list|()
expr_stmt|;
name|iConstraintInfo
operator|.
name|add
argument_list|(
name|constraintInfo
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|Assignment
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|||
operator|(
operator|(
name|Assignment
operator|)
name|o
operator|)
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
return|return
literal|false
return|;
return|return
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|Assignment
operator|)
name|o
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
return|return
name|getUniqueId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"Assignment["
operator|+
name|getUniqueId
argument_list|()
operator|+
literal|"]"
return|;
block|}
specifier|public
name|String
name|toDebugString
parameter_list|()
block|{
return|return
literal|"Assignment["
operator|+
literal|"\n	ClassId: "
operator|+
name|getClassId
argument_list|()
operator|+
literal|"\n	ClassName: "
operator|+
name|getClassName
argument_list|()
operator|+
literal|"\n	Clazz: "
operator|+
name|getClazz
argument_list|()
operator|+
literal|"\n	DatePattern: "
operator|+
name|getDatePattern
argument_list|()
operator|+
literal|"\n	Days: "
operator|+
name|getDays
argument_list|()
operator|+
literal|"\n	Solution: "
operator|+
name|getSolution
argument_list|()
operator|+
literal|"\n	StartSlot: "
operator|+
name|getStartSlot
argument_list|()
operator|+
literal|"\n	TimePattern: "
operator|+
name|getTimePattern
argument_list|()
operator|+
literal|"\n	UniqueId: "
operator|+
name|getUniqueId
argument_list|()
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

