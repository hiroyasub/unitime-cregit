begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.1 (University Timetabling Application)  * Copyright (C) 2008, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program; if not, write to the Free Software Foundation, Inc.,  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_comment
comment|/**  * This is an object that contains data related to the ASSIGNMENT table.  * Do not modify this class because it will be overwritten if the configuration file  * related to this class is modified.  *  * @hibernate.class  *  table="ASSIGNMENT"  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|BaseAssignment
implements|implements
name|Serializable
block|{
specifier|public
specifier|static
name|String
name|REF
init|=
literal|"Assignment"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_DAYS
init|=
literal|"days"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_START_SLOT
init|=
literal|"startSlot"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_CLASS_ID
init|=
literal|"classId"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_CLASS_NAME
init|=
literal|"className"
decl_stmt|;
comment|// constructors
specifier|public
name|BaseAssignment
parameter_list|()
block|{
name|initialize
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * Constructor for primary key 	 */
specifier|public
name|BaseAssignment
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueId
parameter_list|)
block|{
name|this
operator|.
name|setUniqueId
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * Constructor for required fields 	 */
specifier|public
name|BaseAssignment
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueId
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimePattern
name|timePattern
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Solution
name|solution
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Class_
name|clazz
parameter_list|)
block|{
name|this
operator|.
name|setUniqueId
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
name|this
operator|.
name|setTimePattern
argument_list|(
name|timePattern
argument_list|)
expr_stmt|;
name|this
operator|.
name|setSolution
argument_list|(
name|solution
argument_list|)
expr_stmt|;
name|this
operator|.
name|setClazz
argument_list|(
name|clazz
argument_list|)
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|initialize
parameter_list|()
block|{
block|}
specifier|private
name|int
name|hashCode
init|=
name|Integer
operator|.
name|MIN_VALUE
decl_stmt|;
comment|// primary key
specifier|private
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueId
decl_stmt|;
comment|// fields
specifier|private
name|java
operator|.
name|lang
operator|.
name|Integer
name|days
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Integer
name|startSlot
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Long
name|classId
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|String
name|className
decl_stmt|;
comment|// many to one
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimePattern
name|timePattern
decl_stmt|;
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Solution
name|solution
decl_stmt|;
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Class_
name|clazz
decl_stmt|;
comment|// collections
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|instructors
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|rooms
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|assignmentInfo
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|constraintInfo
decl_stmt|;
comment|/** 	 * Return the unique identifier of this class      * @hibernate.id      *  generator-class="sequence"      *  column="UNIQUEID"      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Long
name|getUniqueId
parameter_list|()
block|{
return|return
name|uniqueId
return|;
block|}
comment|/** 	 * Set the unique identifier of this class 	 * @param uniqueId the new ID 	 */
specifier|public
name|void
name|setUniqueId
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueId
parameter_list|)
block|{
name|this
operator|.
name|uniqueId
operator|=
name|uniqueId
expr_stmt|;
name|this
operator|.
name|hashCode
operator|=
name|Integer
operator|.
name|MIN_VALUE
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: DAYS 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Integer
name|getDays
parameter_list|()
block|{
return|return
name|days
return|;
block|}
comment|/** 	 * Set the value related to the column: DAYS 	 * @param days the DAYS value 	 */
specifier|public
name|void
name|setDays
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Integer
name|days
parameter_list|)
block|{
name|this
operator|.
name|days
operator|=
name|days
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: SLOT 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Integer
name|getStartSlot
parameter_list|()
block|{
return|return
name|startSlot
return|;
block|}
comment|/** 	 * Set the value related to the column: SLOT 	 * @param startSlot the SLOT value 	 */
specifier|public
name|void
name|setStartSlot
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Integer
name|startSlot
parameter_list|)
block|{
name|this
operator|.
name|startSlot
operator|=
name|startSlot
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: CLASS_ID 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Long
name|getClassId
parameter_list|()
block|{
return|return
name|classId
return|;
block|}
comment|/** 	 * Set the value related to the column: CLASS_ID 	 * @param classId the CLASS_ID value 	 */
specifier|public
name|void
name|setClassId
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Long
name|classId
parameter_list|)
block|{
name|this
operator|.
name|classId
operator|=
name|classId
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: CLASS_NAME 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getClassName
parameter_list|()
block|{
return|return
name|className
return|;
block|}
comment|/** 	 * Set the value related to the column: CLASS_NAME 	 * @param className the CLASS_NAME value 	 */
specifier|public
name|void
name|setClassName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|className
parameter_list|)
block|{
name|this
operator|.
name|className
operator|=
name|className
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: TIME_PATTERN_ID 	 */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimePattern
name|getTimePattern
parameter_list|()
block|{
return|return
name|timePattern
return|;
block|}
comment|/** 	 * Set the value related to the column: TIME_PATTERN_ID 	 * @param timePattern the TIME_PATTERN_ID value 	 */
specifier|public
name|void
name|setTimePattern
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimePattern
name|timePattern
parameter_list|)
block|{
name|this
operator|.
name|timePattern
operator|=
name|timePattern
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: SOLUTION_ID 	 */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Solution
name|getSolution
parameter_list|()
block|{
return|return
name|solution
return|;
block|}
comment|/** 	 * Set the value related to the column: SOLUTION_ID 	 * @param solution the SOLUTION_ID value 	 */
specifier|public
name|void
name|setSolution
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Solution
name|solution
parameter_list|)
block|{
name|this
operator|.
name|solution
operator|=
name|solution
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: CLASS_ID 	 */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Class_
name|getClazz
parameter_list|()
block|{
return|return
name|clazz
return|;
block|}
comment|/** 	 * Set the value related to the column: CLASS_ID 	 * @param clazz the CLASS_ID value 	 */
specifier|public
name|void
name|setClazz
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Class_
name|clazz
parameter_list|)
block|{
name|this
operator|.
name|clazz
operator|=
name|clazz
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: instructors 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getInstructors
parameter_list|()
block|{
return|return
name|instructors
return|;
block|}
comment|/** 	 * Set the value related to the column: instructors 	 * @param instructors the instructors value 	 */
specifier|public
name|void
name|setInstructors
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|instructors
parameter_list|)
block|{
name|this
operator|.
name|instructors
operator|=
name|instructors
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: rooms 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getRooms
parameter_list|()
block|{
return|return
name|rooms
return|;
block|}
comment|/** 	 * Set the value related to the column: rooms 	 * @param rooms the rooms value 	 */
specifier|public
name|void
name|setRooms
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|rooms
parameter_list|)
block|{
name|this
operator|.
name|rooms
operator|=
name|rooms
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: assignmentInfo 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getAssignmentInfo
parameter_list|()
block|{
return|return
name|assignmentInfo
return|;
block|}
comment|/** 	 * Set the value related to the column: assignmentInfo 	 * @param assignmentInfo the assignmentInfo value 	 */
specifier|public
name|void
name|setAssignmentInfo
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|assignmentInfo
parameter_list|)
block|{
name|this
operator|.
name|assignmentInfo
operator|=
name|assignmentInfo
expr_stmt|;
block|}
specifier|public
name|void
name|addToassignmentInfo
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverInfo
name|solverInfo
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|getAssignmentInfo
argument_list|()
condition|)
name|setAssignmentInfo
argument_list|(
operator|new
name|java
operator|.
name|util
operator|.
name|HashSet
argument_list|()
argument_list|)
expr_stmt|;
name|getAssignmentInfo
argument_list|()
operator|.
name|add
argument_list|(
name|solverInfo
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: constraintInfo 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getConstraintInfo
parameter_list|()
block|{
return|return
name|constraintInfo
return|;
block|}
comment|/** 	 * Set the value related to the column: constraintInfo 	 * @param constraintInfo the constraintInfo value 	 */
specifier|public
name|void
name|setConstraintInfo
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|constraintInfo
parameter_list|)
block|{
name|this
operator|.
name|constraintInfo
operator|=
name|constraintInfo
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|obj
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Assignment
operator|)
condition|)
return|return
literal|false
return|;
else|else
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Assignment
name|assignment
init|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Assignment
operator|)
name|obj
decl_stmt|;
if|if
condition|(
literal|null
operator|==
name|this
operator|.
name|getUniqueId
argument_list|()
operator|||
literal|null
operator|==
name|assignment
operator|.
name|getUniqueId
argument_list|()
condition|)
return|return
literal|false
return|;
else|else
return|return
operator|(
name|this
operator|.
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
name|assignment
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|)
return|;
block|}
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|Integer
operator|.
name|MIN_VALUE
operator|==
name|this
operator|.
name|hashCode
condition|)
block|{
if|if
condition|(
literal|null
operator|==
name|this
operator|.
name|getUniqueId
argument_list|()
condition|)
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
else|else
block|{
name|String
name|hashStr
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|":"
operator|+
name|this
operator|.
name|getUniqueId
argument_list|()
operator|.
name|hashCode
argument_list|()
decl_stmt|;
name|this
operator|.
name|hashCode
operator|=
name|hashStr
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|this
operator|.
name|hashCode
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|super
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

