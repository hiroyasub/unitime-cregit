begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_comment
comment|/**  * This is an object that contains data related to the  table.  * Do not modify this class because it will be overwritten if the configuration file  * related to this class is modified.  *  * @hibernate.class  *  table=""  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|BaseRoomTypeOption
implements|implements
name|Serializable
block|{
specifier|public
specifier|static
name|String
name|REF
init|=
literal|"RoomTypeOption"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_STATUS
init|=
literal|"status"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_MESSAGE
init|=
literal|"message"
decl_stmt|;
comment|// constructors
specifier|public
name|BaseRoomTypeOption
parameter_list|()
block|{
name|initialize
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * Constructor for primary key 	 */
specifier|public
name|BaseRoomTypeOption
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomType
name|roomType
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
name|session
parameter_list|)
block|{
name|this
operator|.
name|setRoomType
argument_list|(
name|roomType
argument_list|)
expr_stmt|;
name|this
operator|.
name|setSession
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * Constructor for required fields 	 */
specifier|public
name|BaseRoomTypeOption
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomType
name|roomType
parameter_list|,
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
name|session
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Integer
name|status
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|String
name|message
parameter_list|)
block|{
name|this
operator|.
name|setRoomType
argument_list|(
name|roomType
argument_list|)
expr_stmt|;
name|this
operator|.
name|setSession
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|this
operator|.
name|setStatus
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|this
operator|.
name|setMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|initialize
parameter_list|()
block|{
block|}
specifier|private
name|int
name|hashCode
init|=
name|Integer
operator|.
name|MIN_VALUE
decl_stmt|;
comment|// primary key
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomType
name|roomType
decl_stmt|;
specifier|private
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
name|session
decl_stmt|;
comment|// fields
specifier|private
name|java
operator|.
name|lang
operator|.
name|Integer
name|status
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|String
name|message
decl_stmt|;
comment|/**      * @hibernate.property      *  column=ROOM_TYPE 	 * not-null=true 	 */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomType
name|getRoomType
parameter_list|()
block|{
return|return
name|this
operator|.
name|roomType
return|;
block|}
comment|/** 	 * Set the value related to the column: ROOM_TYPE 	 * @param roomType the ROOM_TYPE value 	 */
specifier|public
name|void
name|setRoomType
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomType
name|roomType
parameter_list|)
block|{
name|this
operator|.
name|roomType
operator|=
name|roomType
expr_stmt|;
name|this
operator|.
name|hashCode
operator|=
name|Integer
operator|.
name|MIN_VALUE
expr_stmt|;
block|}
comment|/**      * @hibernate.property      *  column=SESSION_ID 	 * not-null=true 	 */
specifier|public
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
name|getSession
parameter_list|()
block|{
return|return
name|this
operator|.
name|session
return|;
block|}
comment|/** 	 * Set the value related to the column: SESSION_ID 	 * @param session the SESSION_ID value 	 */
specifier|public
name|void
name|setSession
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
name|session
parameter_list|)
block|{
name|this
operator|.
name|session
operator|=
name|session
expr_stmt|;
name|this
operator|.
name|hashCode
operator|=
name|Integer
operator|.
name|MIN_VALUE
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: STATUS 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Integer
name|getStatus
parameter_list|()
block|{
return|return
name|status
return|;
block|}
comment|/** 	 * Set the value related to the column: STATUS 	 * @param status the STATUS value 	 */
specifier|public
name|void
name|setStatus
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Integer
name|status
parameter_list|)
block|{
name|this
operator|.
name|status
operator|=
name|status
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: MESSAGE 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getMessage
parameter_list|()
block|{
return|return
name|message
return|;
block|}
comment|/** 	 * Set the value related to the column: MESSAGE 	 * @param message the MESSAGE value 	 */
specifier|public
name|void
name|setMessage
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|message
parameter_list|)
block|{
name|this
operator|.
name|message
operator|=
name|message
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|obj
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomTypeOption
operator|)
condition|)
return|return
literal|false
return|;
else|else
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomTypeOption
name|roomTypeOption
init|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomTypeOption
operator|)
name|obj
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|this
operator|.
name|getRoomType
argument_list|()
operator|&&
literal|null
operator|!=
name|roomTypeOption
operator|.
name|getRoomType
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|this
operator|.
name|getRoomType
argument_list|()
operator|.
name|equals
argument_list|(
name|roomTypeOption
operator|.
name|getRoomType
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
literal|null
operator|!=
name|this
operator|.
name|getSession
argument_list|()
operator|&&
literal|null
operator|!=
name|roomTypeOption
operator|.
name|getSession
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|this
operator|.
name|getSession
argument_list|()
operator|.
name|equals
argument_list|(
name|roomTypeOption
operator|.
name|getSession
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|Integer
operator|.
name|MIN_VALUE
operator|==
name|this
operator|.
name|hashCode
condition|)
block|{
name|StringBuffer
name|sb
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|this
operator|.
name|getRoomType
argument_list|()
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|getRoomType
argument_list|()
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|":"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
block|}
if|if
condition|(
literal|null
operator|!=
name|this
operator|.
name|getSession
argument_list|()
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|getSession
argument_list|()
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|":"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
block|}
name|this
operator|.
name|hashCode
operator|=
name|sb
operator|.
name|toString
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|hashCode
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|super
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

