begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|AcademicClassification
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Curriculum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CurriculumClassification
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CurriculumCourse
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|BaseCurriculumClassification
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|Long
name|iUniqueId
decl_stmt|;
specifier|private
name|String
name|iName
decl_stmt|;
specifier|private
name|Integer
name|iNrStudents
decl_stmt|;
specifier|private
name|Integer
name|iOrd
decl_stmt|;
specifier|private
name|Document
name|iStudents
decl_stmt|;
specifier|private
name|Curriculum
name|iCurriculum
decl_stmt|;
specifier|private
name|AcademicClassification
name|iAcademicClassification
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|CurriculumCourse
argument_list|>
name|iCourses
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_UNIQUEID
init|=
literal|"uniqueId"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_NAME
init|=
literal|"name"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_NR_STUDENTS
init|=
literal|"nrStudents"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_ORD
init|=
literal|"ord"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_STUDENTS
init|=
literal|"students"
decl_stmt|;
specifier|public
name|BaseCurriculumClassification
parameter_list|()
block|{
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|public
name|BaseCurriculumClassification
parameter_list|(
name|Long
name|uniqueId
parameter_list|)
block|{
name|setUniqueId
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|initialize
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getUniqueId
parameter_list|()
block|{
return|return
name|iUniqueId
return|;
block|}
specifier|public
name|void
name|setUniqueId
parameter_list|(
name|Long
name|uniqueId
parameter_list|)
block|{
name|iUniqueId
operator|=
name|uniqueId
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|Integer
name|getNrStudents
parameter_list|()
block|{
return|return
name|iNrStudents
return|;
block|}
specifier|public
name|void
name|setNrStudents
parameter_list|(
name|Integer
name|nrStudents
parameter_list|)
block|{
name|iNrStudents
operator|=
name|nrStudents
expr_stmt|;
block|}
specifier|public
name|Integer
name|getOrd
parameter_list|()
block|{
return|return
name|iOrd
return|;
block|}
specifier|public
name|void
name|setOrd
parameter_list|(
name|Integer
name|ord
parameter_list|)
block|{
name|iOrd
operator|=
name|ord
expr_stmt|;
block|}
specifier|public
name|Document
name|getStudents
parameter_list|()
block|{
return|return
name|iStudents
return|;
block|}
specifier|public
name|void
name|setStudents
parameter_list|(
name|Document
name|students
parameter_list|)
block|{
name|iStudents
operator|=
name|students
expr_stmt|;
block|}
specifier|public
name|Curriculum
name|getCurriculum
parameter_list|()
block|{
return|return
name|iCurriculum
return|;
block|}
specifier|public
name|void
name|setCurriculum
parameter_list|(
name|Curriculum
name|curriculum
parameter_list|)
block|{
name|iCurriculum
operator|=
name|curriculum
expr_stmt|;
block|}
specifier|public
name|AcademicClassification
name|getAcademicClassification
parameter_list|()
block|{
return|return
name|iAcademicClassification
return|;
block|}
specifier|public
name|void
name|setAcademicClassification
parameter_list|(
name|AcademicClassification
name|academicClassification
parameter_list|)
block|{
name|iAcademicClassification
operator|=
name|academicClassification
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|CurriculumCourse
argument_list|>
name|getCourses
parameter_list|()
block|{
return|return
name|iCourses
return|;
block|}
specifier|public
name|void
name|setCourses
parameter_list|(
name|Set
argument_list|<
name|CurriculumCourse
argument_list|>
name|courses
parameter_list|)
block|{
name|iCourses
operator|=
name|courses
expr_stmt|;
block|}
specifier|public
name|void
name|addTocourses
parameter_list|(
name|CurriculumCourse
name|curriculumCourse
parameter_list|)
block|{
if|if
condition|(
name|iCourses
operator|==
literal|null
condition|)
name|iCourses
operator|=
operator|new
name|HashSet
argument_list|<
name|CurriculumCourse
argument_list|>
argument_list|()
expr_stmt|;
name|iCourses
operator|.
name|add
argument_list|(
name|curriculumCourse
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|CurriculumClassification
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|||
operator|(
operator|(
name|CurriculumClassification
operator|)
name|o
operator|)
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
return|return
literal|false
return|;
return|return
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|CurriculumClassification
operator|)
name|o
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
return|return
name|getUniqueId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"CurriculumClassification["
operator|+
name|getUniqueId
argument_list|()
operator|+
literal|" "
operator|+
name|getName
argument_list|()
operator|+
literal|"]"
return|;
block|}
specifier|public
name|String
name|toDebugString
parameter_list|()
block|{
return|return
literal|"CurriculumClassification["
operator|+
literal|"\n	AcademicClassification: "
operator|+
name|getAcademicClassification
argument_list|()
operator|+
literal|"\n	Curriculum: "
operator|+
name|getCurriculum
argument_list|()
operator|+
literal|"\n	Name: "
operator|+
name|getName
argument_list|()
operator|+
literal|"\n	NrStudents: "
operator|+
name|getNrStudents
argument_list|()
operator|+
literal|"\n	Ord: "
operator|+
name|getOrd
argument_list|()
operator|+
literal|"\n	Students: "
operator|+
name|getStudents
argument_list|()
operator|+
literal|"\n	UniqueId: "
operator|+
name|getUniqueId
argument_list|()
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

