begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_comment
comment|/**  * This is an object that contains data related to the EVENT table.  * Do not modify this class because it will be overwritten if the configuration file  * related to this class is modified.  *  * @hibernate.class  *  table="EVENT"  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|BaseCourseEvent
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Event
implements|implements
name|Serializable
block|{
specifier|public
specifier|static
name|String
name|REF
init|=
literal|"CourseEvent"
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_REQ_ATTENDANCE
init|=
literal|"reqAttendance"
decl_stmt|;
comment|// constructors
specifier|public
name|BaseCourseEvent
parameter_list|()
block|{
name|initialize
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * Constructor for primary key 	 */
specifier|public
name|BaseCourseEvent
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueId
parameter_list|)
block|{
name|super
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Constructor for required fields 	 */
specifier|public
name|BaseCourseEvent
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueId
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Integer
name|minCapacity
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Integer
name|maxCapacity
parameter_list|)
block|{
name|super
argument_list|(
name|uniqueId
argument_list|,
name|minCapacity
argument_list|,
name|maxCapacity
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|hashCode
init|=
name|Integer
operator|.
name|MIN_VALUE
decl_stmt|;
comment|// fields
specifier|private
name|java
operator|.
name|lang
operator|.
name|Boolean
name|reqAttendance
decl_stmt|;
comment|// collections
specifier|private
name|java
operator|.
name|util
operator|.
name|Set
name|relatedCourses
decl_stmt|;
comment|/** 	 * Return the value associated with the column: REQ_ATTD 	 */
specifier|public
name|java
operator|.
name|lang
operator|.
name|Boolean
name|isReqAttendance
parameter_list|()
block|{
return|return
name|reqAttendance
return|;
block|}
comment|/** 	 * Set the value related to the column: REQ_ATTD 	 * @param reqAttendance the REQ_ATTD value 	 */
specifier|public
name|void
name|setReqAttendance
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Boolean
name|reqAttendance
parameter_list|)
block|{
name|this
operator|.
name|reqAttendance
operator|=
name|reqAttendance
expr_stmt|;
block|}
comment|/** 	 * Return the value associated with the column: relatedCourses 	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|Set
name|getRelatedCourses
parameter_list|()
block|{
return|return
name|relatedCourses
return|;
block|}
comment|/** 	 * Set the value related to the column: relatedCourses 	 * @param relatedCourses the relatedCourses value 	 */
specifier|public
name|void
name|setRelatedCourses
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Set
name|relatedCourses
parameter_list|)
block|{
name|this
operator|.
name|relatedCourses
operator|=
name|relatedCourses
expr_stmt|;
block|}
specifier|public
name|void
name|addTorelatedCourses
parameter_list|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RelatedCourseInfo
name|relatedCourseInfo
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|getRelatedCourses
argument_list|()
condition|)
name|setRelatedCourses
argument_list|(
operator|new
name|java
operator|.
name|util
operator|.
name|HashSet
argument_list|()
argument_list|)
expr_stmt|;
name|getRelatedCourses
argument_list|()
operator|.
name|add
argument_list|(
name|relatedCourseInfo
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|obj
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseEvent
operator|)
condition|)
return|return
literal|false
return|;
else|else
block|{
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseEvent
name|courseEvent
init|=
operator|(
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseEvent
operator|)
name|obj
decl_stmt|;
if|if
condition|(
literal|null
operator|==
name|this
operator|.
name|getUniqueId
argument_list|()
operator|||
literal|null
operator|==
name|courseEvent
operator|.
name|getUniqueId
argument_list|()
condition|)
return|return
literal|false
return|;
else|else
return|return
operator|(
name|this
operator|.
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
name|courseEvent
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|)
return|;
block|}
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|Integer
operator|.
name|MIN_VALUE
operator|==
name|this
operator|.
name|hashCode
condition|)
block|{
if|if
condition|(
literal|null
operator|==
name|this
operator|.
name|getUniqueId
argument_list|()
condition|)
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
else|else
block|{
name|String
name|hashStr
init|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|":"
operator|+
name|this
operator|.
name|getUniqueId
argument_list|()
operator|.
name|hashCode
argument_list|()
decl_stmt|;
name|this
operator|.
name|hashCode
operator|=
name|hashStr
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|this
operator|.
name|hashCode
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|super
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

