begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PositionCodeType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PositionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Staff
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|BasePositionCodeType
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|String
name|iPositionCode
decl_stmt|;
specifier|private
name|PositionType
name|iPositionType
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|Staff
argument_list|>
name|iStaff
decl_stmt|;
specifier|public
specifier|static
name|String
name|PROP_POSITION_CODE
init|=
literal|"positionCode"
decl_stmt|;
specifier|public
name|BasePositionCodeType
parameter_list|()
block|{
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|public
name|BasePositionCodeType
parameter_list|(
name|String
name|positionCode
parameter_list|)
block|{
name|setPositionCode
argument_list|(
name|positionCode
argument_list|)
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|initialize
parameter_list|()
block|{
block|}
specifier|public
name|String
name|getPositionCode
parameter_list|()
block|{
return|return
name|iPositionCode
return|;
block|}
specifier|public
name|void
name|setPositionCode
parameter_list|(
name|String
name|positionCode
parameter_list|)
block|{
name|iPositionCode
operator|=
name|positionCode
expr_stmt|;
block|}
specifier|public
name|PositionType
name|getPositionType
parameter_list|()
block|{
return|return
name|iPositionType
return|;
block|}
specifier|public
name|void
name|setPositionType
parameter_list|(
name|PositionType
name|positionType
parameter_list|)
block|{
name|iPositionType
operator|=
name|positionType
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|Staff
argument_list|>
name|getStaff
parameter_list|()
block|{
return|return
name|iStaff
return|;
block|}
specifier|public
name|void
name|setStaff
parameter_list|(
name|Set
argument_list|<
name|Staff
argument_list|>
name|staff
parameter_list|)
block|{
name|iStaff
operator|=
name|staff
expr_stmt|;
block|}
specifier|public
name|void
name|addTostaff
parameter_list|(
name|Staff
name|staff
parameter_list|)
block|{
if|if
condition|(
name|iStaff
operator|==
literal|null
condition|)
name|iStaff
operator|=
operator|new
name|HashSet
argument_list|<
name|Staff
argument_list|>
argument_list|()
expr_stmt|;
name|iStaff
operator|.
name|add
argument_list|(
name|staff
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|PositionCodeType
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|getPositionCode
argument_list|()
operator|==
literal|null
operator|||
operator|(
operator|(
name|PositionCodeType
operator|)
name|o
operator|)
operator|.
name|getPositionCode
argument_list|()
operator|==
literal|null
condition|)
return|return
literal|false
return|;
return|return
name|getPositionCode
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|PositionCodeType
operator|)
name|o
operator|)
operator|.
name|getPositionCode
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|getPositionCode
argument_list|()
operator|==
literal|null
condition|)
return|return
name|super
operator|.
name|hashCode
argument_list|()
return|;
return|return
name|getPositionCode
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"PositionCodeType["
operator|+
name|getPositionCode
argument_list|()
operator|+
literal|"]"
return|;
block|}
specifier|public
name|String
name|toDebugString
parameter_list|()
block|{
return|return
literal|"PositionCodeType["
operator|+
literal|"\n	PositionCode: "
operator|+
name|getPositionCode
argument_list|()
operator|+
literal|"\n	PositionType: "
operator|+
name|getPositionType
argument_list|()
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

