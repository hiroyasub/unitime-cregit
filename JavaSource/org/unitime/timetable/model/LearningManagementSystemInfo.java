begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
operator|.
name|BaseLearningManagementSystemInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|LearningManagementSystemInfoDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|UserContext
import|;
end_import

begin_class
specifier|public
class|class
name|LearningManagementSystemInfo
extends|extends
name|BaseLearningManagementSystemInfo
block|{
comment|/** 	 *  	 */
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|45964274048126169L
decl_stmt|;
specifier|public
specifier|static
name|String
name|LEARNING_MANAGEMENT_SYSTEM_LIST_ATTR
init|=
literal|"lmsList"
decl_stmt|;
specifier|public
name|LearningManagementSystemInfo
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|boolean
name|isUsed
parameter_list|(
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|isDefaultLms
argument_list|()
condition|)
block|{
return|return
operator|(
literal|true
operator|)
return|;
block|}
return|return
operator|(
operator|(
name|Number
operator|)
operator|(
name|hibSession
operator|==
literal|null
condition|?
name|LearningManagementSystemInfoDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|getSession
argument_list|()
else|:
name|hibSession
operator|)
operator|.
name|createQuery
argument_list|(
literal|"select count(c) from Class_ c where c.lmsInfo.uniqueId = :lmsId"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"lmsId"
argument_list|,
name|getUniqueId
argument_list|()
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|uniqueResult
argument_list|()
operator|)
operator|.
name|intValue
argument_list|()
operator|>
literal|0
return|;
block|}
specifier|public
specifier|static
name|List
argument_list|<
name|LearningManagementSystemInfo
argument_list|>
name|findAll
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
return|return
operator|(
name|findAll
argument_list|(
name|user
operator|.
name|getCurrentAcademicSessionId
argument_list|()
argument_list|)
operator|)
return|;
block|}
specifier|public
specifier|static
name|List
argument_list|<
name|LearningManagementSystemInfo
argument_list|>
name|findAll
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|List
argument_list|<
name|LearningManagementSystemInfo
argument_list|>
name|list
init|=
operator|(
name|List
argument_list|<
name|LearningManagementSystemInfo
argument_list|>
operator|)
name|LearningManagementSystemInfoDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|getSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"select distinct lms from LearningManagementSystemInfo as lms where lms.session.uniqueId=:sessionId"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
decl_stmt|;
return|return
operator|(
name|list
operator|)
return|;
block|}
specifier|public
specifier|static
name|LearningManagementSystemInfo
name|findBySessionIdAndReference
parameter_list|(
name|Long
name|sessionId
parameter_list|,
name|String
name|reference
parameter_list|)
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|LearningManagementSystemInfo
name|lms
init|=
operator|(
name|LearningManagementSystemInfo
operator|)
name|LearningManagementSystemInfoDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|getSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"select distinct lms from LearningManagementSystemInfo as lms where lms.session.uniqueId=:sessionId and lms.reference = :ref"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
argument_list|)
operator|.
name|setString
argument_list|(
literal|"ref"
argument_list|,
name|reference
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|uniqueResult
argument_list|()
decl_stmt|;
return|return
operator|(
name|lms
operator|)
return|;
block|}
specifier|public
specifier|static
name|LearningManagementSystemInfo
name|getDefaultIfExists
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
return|return
operator|(
operator|(
name|LearningManagementSystemInfo
operator|)
name|LearningManagementSystemInfoDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|getSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"select distinct lms from LearningManagementSystemInfo as lms where lms.session.uniqueId=:sessionId and lms.defaultLms = true"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|uniqueResult
argument_list|()
operator|)
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isLmsInfoDefinedForSession
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
name|LearningManagementSystemInfoDAO
name|lmsdao
init|=
name|LearningManagementSystemInfoDAO
operator|.
name|getInstance
argument_list|()
decl_stmt|;
return|return
operator|(
name|lmsdao
operator|.
name|findBySession
argument_list|(
name|lmsdao
operator|.
name|getSession
argument_list|()
argument_list|,
name|sessionId
argument_list|)
operator|.
name|size
argument_list|()
operator|>
literal|0
operator|)
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isLmsInfoDefinedForSession
parameter_list|(
name|Session
name|hibSession
parameter_list|,
name|Long
name|sessionId
parameter_list|)
block|{
return|return
operator|(
name|isLmsInfoDefinedForSession
argument_list|(
name|hibSession
argument_list|,
name|sessionId
argument_list|)
operator|)
return|;
block|}
specifier|public
name|Object
name|clone
parameter_list|()
block|{
name|LearningManagementSystemInfo
name|newLms
init|=
operator|new
name|LearningManagementSystemInfo
argument_list|()
decl_stmt|;
name|newLms
operator|.
name|setReference
argument_list|(
name|getReference
argument_list|()
argument_list|)
expr_stmt|;
name|newLms
operator|.
name|setLabel
argument_list|(
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|newLms
operator|.
name|setExternalUniqueId
argument_list|(
name|getExternalUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|newLms
operator|.
name|setDefaultLms
argument_list|(
name|getDefaultLms
argument_list|()
argument_list|)
expr_stmt|;
name|newLms
operator|.
name|setSession
argument_list|(
name|getSession
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|(
name|newLms
operator|)
return|;
block|}
block|}
end_class

end_unit

