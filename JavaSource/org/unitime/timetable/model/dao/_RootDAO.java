begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.1 (University Timetabling Application)  * Copyright (C) 2008, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program; if not, write to the Free Software Foundation, Inc.,  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|Criteria
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|criterion
operator|.
name|Order
import|;
end_import

begin_class
specifier|public
class|class
name|_RootDAO
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
operator|.
name|_BaseRootDAO
block|{
comment|/* 	If you are using lazy loading, uncomment this 	Somewhere, you should call RootDAO.closeCurrentThreadSessions(); */
specifier|public
name|void
name|closeSession
parameter_list|(
name|Session
name|session
parameter_list|)
block|{
comment|// do nothing here because the session will be closed later
block|}
comment|/*	 	If you are pulling the SessionFactory from a JNDI tree, uncomment this 	protected SessionFactory getSessionFactory(String configFile) { 		// If you have a single session factory, ignore the configFile parameter 		// Otherwise, you can set a meta attribute under the class node called "config-file" which 		// will be passed in here so you can tell what session factory an individual mapping file 		// belongs to 		return (SessionFactory) new InitialContext().lookup("java:/{SessionFactoryName}"); 	} */
specifier|public
name|Class
name|getReferenceClass
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
comment|/** 	 * Return all objects related to the implementation of this DAO with no filter. 	 * The results are ordered by the order specified in orderList 	 * Use the session given. 	 * @param orderList Collection of Order objects  	 */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
name|findAll
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Collection
name|orderList
parameter_list|)
block|{
name|Session
name|s
init|=
literal|null
decl_stmt|;
try|try
block|{
name|s
operator|=
name|getSession
argument_list|()
expr_stmt|;
name|Criteria
name|crit
init|=
name|s
operator|.
name|createCriteria
argument_list|(
name|getReferenceClass
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|orderList
condition|)
block|{
name|Iterator
name|iter
init|=
name|orderList
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
name|crit
operator|.
name|addOrder
argument_list|(
operator|(
name|Order
operator|)
name|iter
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|crit
operator|.
name|list
argument_list|()
return|;
block|}
finally|finally
block|{
name|closeSession
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

