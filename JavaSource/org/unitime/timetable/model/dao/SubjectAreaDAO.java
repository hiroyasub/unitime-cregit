begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|criterion
operator|.
name|Order
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SubjectArea
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
operator|.
name|BaseSubjectAreaDAO
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|SubjectAreaDAO
extends|extends
name|BaseSubjectAreaDAO
block|{
comment|/** 	 * Default constructor.  Can be used in place of getInstance() 	 */
specifier|public
name|SubjectAreaDAO
parameter_list|()
block|{
block|}
specifier|public
name|Order
name|getDefaultOrder
parameter_list|()
block|{
return|return
name|Order
operator|.
name|asc
argument_list|(
name|SubjectArea
operator|.
name|PROP_SUBJECT_AREA_ABBREVIATION
argument_list|)
return|;
block|}
specifier|public
name|SubjectArea
name|getSubjectAreaForSession
parameter_list|(
name|String
name|subjectAreaAbbreviation
parameter_list|,
name|Session
name|session
parameter_list|)
block|{
name|StringBuffer
name|sb
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"select sa.* from SubjectArea as sa "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|" where sa.subjectAreaAbbreviation = '"
operator|+
name|subjectAreaAbbreviation
operator|+
literal|"' "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|" and sa.session.getUniqueId = "
operator|+
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|List
name|results
init|=
name|getQuery
argument_list|(
name|sb
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|list
argument_list|()
decl_stmt|;
if|if
condition|(
name|results
operator|.
name|size
argument_list|()
operator|!=
literal|1
condition|)
block|{
return|return
operator|(
literal|null
operator|)
return|;
block|}
else|else
block|{
return|return
operator|(
operator|(
name|SubjectArea
operator|)
name|results
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
return|;
block|}
block|}
block|}
end_class

end_unit

