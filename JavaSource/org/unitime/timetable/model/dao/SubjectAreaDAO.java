begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 - 3.5 (University Timetabling Application)  * Copyright (C) 2008 - 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|criterion
operator|.
name|Order
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SubjectArea
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
operator|.
name|BaseSubjectAreaDAO
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|SubjectAreaDAO
extends|extends
name|BaseSubjectAreaDAO
block|{
comment|/** 	 * Default constructor.  Can be used in place of getInstance() 	 */
specifier|public
name|SubjectAreaDAO
parameter_list|()
block|{
block|}
specifier|public
name|Order
name|getDefaultOrder
parameter_list|()
block|{
return|return
name|Order
operator|.
name|asc
argument_list|(
name|SubjectArea
operator|.
name|PROP_SUBJECT_AREA_ABBREVIATION
argument_list|)
return|;
block|}
specifier|public
name|SubjectArea
name|getSubjectAreaForSession
parameter_list|(
name|String
name|subjectAreaAbbreviation
parameter_list|,
name|Session
name|session
parameter_list|)
block|{
name|StringBuffer
name|sb
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"select sa.* from SubjectArea as sa "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|" where sa.subjectAreaAbbreviation = '"
operator|+
name|subjectAreaAbbreviation
operator|+
literal|"' "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|" and sa.session.getUniqueId = "
operator|+
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|List
name|results
init|=
name|getQuery
argument_list|(
name|sb
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|list
argument_list|()
decl_stmt|;
if|if
condition|(
name|results
operator|.
name|size
argument_list|()
operator|!=
literal|1
condition|)
block|{
return|return
operator|(
literal|null
operator|)
return|;
block|}
else|else
block|{
return|return
operator|(
operator|(
name|SubjectArea
operator|)
name|results
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
return|;
block|}
block|}
block|}
end_class

end_unit

