begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
operator|.
name|BasePointInTimeData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|PointInTimeDataDAO
import|;
end_import

begin_class
specifier|public
class|class
name|PointInTimeData
extends|extends
name|BasePointInTimeData
implements|implements
name|Comparable
argument_list|<
name|Object
argument_list|>
block|{
comment|/** 	 *  	 */
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|5725136274124746987L
decl_stmt|;
specifier|public
name|PointInTimeData
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|ArrayList
argument_list|<
name|PointInTimeData
argument_list|>
name|findAllForSession
parameter_list|(
name|Session
name|acadSession
parameter_list|,
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
parameter_list|)
block|{
return|return
operator|(
name|findAllForSession
argument_list|(
name|acadSession
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|hibSession
argument_list|)
operator|)
return|;
block|}
specifier|public
specifier|static
name|ArrayList
argument_list|<
name|PointInTimeData
argument_list|>
name|findAllForSession
parameter_list|(
name|Session
name|acadSession
parameter_list|)
block|{
return|return
operator|(
name|findAllForSession
argument_list|(
name|acadSession
operator|.
name|getUniqueId
argument_list|()
argument_list|,
literal|null
argument_list|)
operator|)
return|;
block|}
specifier|public
specifier|static
name|ArrayList
argument_list|<
name|PointInTimeData
argument_list|>
name|findAllForSession
parameter_list|(
name|Long
name|acadSessionUniqueId
parameter_list|)
block|{
return|return
operator|(
name|findAllForSession
argument_list|(
name|acadSessionUniqueId
argument_list|,
literal|null
argument_list|)
operator|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
specifier|static
name|ArrayList
argument_list|<
name|PointInTimeData
argument_list|>
name|findAllForSession
parameter_list|(
name|Long
name|acadSessionUniqueId
parameter_list|,
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
parameter_list|)
block|{
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSess
init|=
name|hibSession
decl_stmt|;
if|if
condition|(
name|hibSess
operator|==
literal|null
condition|)
block|{
name|hibSess
operator|=
name|PointInTimeDataDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|getSession
argument_list|()
expr_stmt|;
block|}
return|return
operator|(
operator|(
name|ArrayList
argument_list|<
name|PointInTimeData
argument_list|>
operator|)
name|hibSess
operator|.
name|createQuery
argument_list|(
literal|"from PointInTimeData pitd where pitd.session.uniqueId = :sessionId"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|acadSessionUniqueId
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|list
argument_list|()
operator|)
return|;
block|}
specifier|public
specifier|static
name|ArrayList
argument_list|<
name|PointInTimeData
argument_list|>
name|findAllSavedSuccessfullyForSession
parameter_list|(
name|Long
name|acadSessionUniqueId
parameter_list|)
block|{
return|return
operator|(
name|findAllSavedSuccessfullyForSession
argument_list|(
name|acadSessionUniqueId
argument_list|,
literal|null
argument_list|)
operator|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
specifier|static
name|ArrayList
argument_list|<
name|PointInTimeData
argument_list|>
name|findAllSavedSuccessfullyForSession
parameter_list|(
name|Long
name|acadSessionUniqueId
parameter_list|,
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
parameter_list|)
block|{
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSess
init|=
name|hibSession
decl_stmt|;
if|if
condition|(
name|hibSess
operator|==
literal|null
condition|)
block|{
name|hibSess
operator|=
name|PointInTimeDataDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|getSession
argument_list|()
expr_stmt|;
block|}
return|return
operator|(
operator|(
name|ArrayList
argument_list|<
name|PointInTimeData
argument_list|>
operator|)
name|hibSess
operator|.
name|createQuery
argument_list|(
literal|"from PointInTimeData pitd where pitd.session.uniqueId = :sessionId and savedSuccessfully = true"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|acadSessionUniqueId
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|list
argument_list|()
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|PointInTimeData
operator|)
condition|)
return|return
operator|-
literal|1
return|;
name|PointInTimeData
name|pitd
init|=
operator|(
name|PointInTimeData
operator|)
name|o
decl_stmt|;
name|int
name|cmp
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|getTimestamp
argument_list|()
operator|!=
literal|null
operator|&&
name|pitd
operator|.
name|getTimestamp
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|cmp
operator|=
name|getTimestamp
argument_list|()
operator|.
name|compareTo
argument_list|(
name|pitd
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
block|{
return|return
operator|(
name|cmp
operator|)
return|;
block|}
name|cmp
operator|=
operator|(
name|getName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|getName
argument_list|()
operator|)
operator|.
name|compareTo
argument_list|(
name|pitd
operator|.
name|getName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|pitd
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
block|{
return|return
operator|(
name|cmp
operator|)
return|;
block|}
return|return
operator|(
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|?
operator|new
name|Long
argument_list|(
operator|-
literal|1
argument_list|)
else|:
name|getUniqueId
argument_list|()
operator|)
operator|.
name|compareTo
argument_list|(
name|pitd
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|?
operator|-
literal|1
else|:
name|pitd
operator|.
name|getUniqueId
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

