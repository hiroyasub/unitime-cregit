begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
package|;
end_package

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
operator|.
name|BaseStudentSectioningStatus
import|;
end_import

begin_class
specifier|public
class|class
name|StudentSectioningStatus
extends|extends
name|BaseStudentSectioningStatus
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|33276457852954947L
decl_stmt|;
specifier|public
specifier|static
enum|enum
name|Option
block|{
name|enabled
argument_list|(
literal|"Access Enabled"
argument_list|)
block|,
name|advisor
argument_list|(
literal|"Advisor Can Enroll"
argument_list|)
block|,
name|email
argument_list|(
literal|"Email Notifications"
argument_list|)
block|;
specifier|private
name|String
name|iName
decl_stmt|;
name|Option
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|int
name|toggle
parameter_list|()
block|{
return|return
literal|1
operator|<<
name|ordinal
argument_list|()
return|;
block|}
block|}
specifier|public
name|boolean
name|hasOption
parameter_list|(
name|Option
name|option
parameter_list|)
block|{
return|return
name|getStatus
argument_list|()
operator|!=
literal|null
operator|&&
operator|(
name|getStatus
argument_list|()
operator|&
name|option
operator|.
name|toggle
argument_list|()
operator|)
operator|!=
literal|0
return|;
block|}
specifier|public
name|void
name|addOption
parameter_list|(
name|Option
name|option
parameter_list|)
block|{
if|if
condition|(
operator|!
name|hasOption
argument_list|(
name|option
argument_list|)
condition|)
name|setStatus
argument_list|(
operator|(
name|getStatus
argument_list|()
operator|==
literal|null
condition|?
literal|0
else|:
name|getStatus
argument_list|()
operator|)
operator|+
name|option
operator|.
name|toggle
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeOption
parameter_list|(
name|Option
name|option
parameter_list|)
block|{
if|if
condition|(
name|hasOption
argument_list|(
name|option
argument_list|)
condition|)
name|setStatus
argument_list|(
name|getStatus
argument_list|()
operator|-
name|option
operator|.
name|toggle
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|StudentSectioningStatus
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

