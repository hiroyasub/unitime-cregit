begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|criterion
operator|.
name|Restrictions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|base
operator|.
name|BaseGlobalRoomFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|GlobalRoomFeatureDAO
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|GlobalRoomFeature
extends|extends
name|BaseGlobalRoomFeature
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|public
specifier|static
name|TreeMap
name|sisFeatureMap
init|=
literal|null
decl_stmt|;
comment|/*[CONSTRUCTOR MARKER BEGIN]*/
specifier|public
name|GlobalRoomFeature
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * Constructor for primary key 	 */
specifier|public
name|GlobalRoomFeature
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Long
name|uniqueId
parameter_list|)
block|{
name|super
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
block|}
comment|/*[CONSTRUCTOR MARKER END]*/
specifier|public
specifier|static
name|String
name|featureTypeDisplayString
parameter_list|()
block|{
return|return
literal|"Global"
return|;
block|}
comment|/** 	 * @param sisReference 	 * @return 	 */
specifier|public
specifier|static
name|GlobalRoomFeature
name|featureWithSisReference
parameter_list|(
name|Session
name|session
parameter_list|,
name|String
name|sisReference
parameter_list|)
block|{
for|for
control|(
name|GlobalRoomFeature
name|grf
range|:
name|RoomFeature
operator|.
name|getAllGlobalRoomFeatures
argument_list|(
name|session
argument_list|)
control|)
if|if
condition|(
name|sisReference
operator|.
name|equals
argument_list|(
name|grf
operator|.
name|getSisReference
argument_list|()
argument_list|)
condition|)
return|return
name|grf
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getLabel
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|GlobalRoomFeature
name|findGlobalRoomFeatureForLabel
parameter_list|(
name|Session
name|session
parameter_list|,
name|String
name|label
parameter_list|)
block|{
name|GlobalRoomFeatureDAO
name|grfDao
init|=
operator|new
name|GlobalRoomFeatureDAO
argument_list|()
decl_stmt|;
name|List
name|features
init|=
name|grfDao
operator|.
name|getSession
argument_list|()
operator|.
name|createCriteria
argument_list|(
name|GlobalRoomFeature
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
literal|"label"
argument_list|,
name|label
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
literal|"session.uniqueId"
argument_list|,
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
decl_stmt|;
if|if
condition|(
name|features
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
block|{
return|return
operator|(
operator|(
name|GlobalRoomFeature
operator|)
name|features
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
return|;
block|}
return|return
operator|(
literal|null
operator|)
return|;
block|}
specifier|public
specifier|static
name|GlobalRoomFeature
name|findGlobalRoomFeatureForAbbv
parameter_list|(
name|Session
name|session
parameter_list|,
name|String
name|label
parameter_list|)
block|{
name|GlobalRoomFeatureDAO
name|grfDao
init|=
operator|new
name|GlobalRoomFeatureDAO
argument_list|()
decl_stmt|;
name|List
name|features
init|=
name|grfDao
operator|.
name|getSession
argument_list|()
operator|.
name|createCriteria
argument_list|(
name|GlobalRoomFeature
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
literal|"abbv"
argument_list|,
name|label
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|Restrictions
operator|.
name|eq
argument_list|(
literal|"session.uniqueId"
argument_list|,
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
decl_stmt|;
if|if
condition|(
name|features
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
block|{
return|return
operator|(
operator|(
name|GlobalRoomFeature
operator|)
name|features
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
return|;
block|}
return|return
operator|(
literal|null
operator|)
return|;
block|}
specifier|public
name|String
name|htmlLabel
parameter_list|()
block|{
return|return
literal|"<span "
operator|+
literal|"title='"
operator|+
name|getLabel
argument_list|()
operator|+
literal|" ("
operator|+
operator|(
name|getFeatureType
argument_list|()
operator|==
literal|null
condition|?
literal|"global"
else|:
name|getFeatureType
argument_list|()
operator|.
name|getReference
argument_list|()
operator|)
operator|+
literal|")'>"
operator|+
name|getLabel
argument_list|()
operator|+
operator|(
name|getFeatureType
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|" ("
operator|+
name|getFeatureType
argument_list|()
operator|.
name|getReference
argument_list|()
operator|+
literal|")"
operator|)
operator|+
literal|"</span>"
return|;
block|}
specifier|public
name|Object
name|clone
parameter_list|()
block|{
name|GlobalRoomFeature
name|newFeature
init|=
operator|new
name|GlobalRoomFeature
argument_list|()
decl_stmt|;
name|newFeature
operator|.
name|setLabel
argument_list|(
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|newFeature
operator|.
name|setAbbv
argument_list|(
name|getAbbv
argument_list|()
argument_list|)
expr_stmt|;
name|newFeature
operator|.
name|setSession
argument_list|(
name|getSession
argument_list|()
argument_list|)
expr_stmt|;
name|newFeature
operator|.
name|setSisReference
argument_list|(
name|getSisReference
argument_list|()
argument_list|)
expr_stmt|;
name|newFeature
operator|.
name|setSisValue
argument_list|(
name|getSisValue
argument_list|()
argument_list|)
expr_stmt|;
name|newFeature
operator|.
name|setFeatureType
argument_list|(
name|getFeatureType
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|(
name|newFeature
operator|)
return|;
block|}
block|}
end_class

end_unit

