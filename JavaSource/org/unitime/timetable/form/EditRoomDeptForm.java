begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|StringTokenizer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionErrors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_comment
comment|/**   * MyEclipse Struts  * Creation date: 05-12-2006  *   * XDoclet definition:  * @struts.form name="editRoomDeptForm"  */
end_comment

begin_class
specifier|public
class|class
name|EditRoomDeptForm
extends|extends
name|ActionForm
block|{
comment|/** 	 *  	 */
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|2305279204925700618L
decl_stmt|;
comment|// --------------------------------------------------------- Instance Variables
specifier|private
name|String
name|id
decl_stmt|;
specifier|private
name|String
name|doit
decl_stmt|;
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|String
name|sharingTable
decl_stmt|;
specifier|private
name|boolean
name|nonUniv
decl_stmt|;
specifier|private
name|String
name|dept
decl_stmt|;
specifier|private
name|String
name|departments
decl_stmt|;
comment|// --------------------------------------------------------- Methods
specifier|public
name|String
name|getDept
parameter_list|()
block|{
return|return
name|dept
return|;
block|}
specifier|public
name|void
name|setDept
parameter_list|(
name|String
name|dept
parameter_list|)
block|{
name|this
operator|.
name|dept
operator|=
name|dept
expr_stmt|;
block|}
specifier|public
name|boolean
name|isNonUniv
parameter_list|()
block|{
return|return
name|nonUniv
return|;
block|}
specifier|public
name|void
name|setNonUniv
parameter_list|(
name|boolean
name|nonUniv
parameter_list|)
block|{
name|this
operator|.
name|nonUniv
operator|=
name|nonUniv
expr_stmt|;
block|}
comment|/**  	 * Method validate 	 * @param mapping 	 * @param request 	 * @return ActionErrors 	 */
specifier|public
name|ActionErrors
name|validate
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|ActionErrors
name|errors
init|=
operator|new
name|ActionErrors
argument_list|()
decl_stmt|;
return|return
name|errors
return|;
block|}
comment|/**  	 * Method reset 	 * @param mapping 	 * @param request 	 */
specifier|public
name|void
name|reset
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|departments
operator|=
literal|""
expr_stmt|;
block|}
specifier|public
name|String
name|getDoit
parameter_list|()
block|{
return|return
name|doit
return|;
block|}
specifier|public
name|void
name|setDoit
parameter_list|(
name|String
name|doit
parameter_list|)
block|{
name|this
operator|.
name|doit
operator|=
name|doit
expr_stmt|;
block|}
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getSharingTable
parameter_list|()
block|{
return|return
name|sharingTable
return|;
block|}
specifier|public
name|void
name|setSharingTable
parameter_list|(
name|String
name|sharingTable
parameter_list|)
block|{
name|this
operator|.
name|sharingTable
operator|=
name|sharingTable
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getDepartments
parameter_list|()
block|{
return|return
name|departments
return|;
block|}
specifier|public
name|void
name|setDepartments
parameter_list|(
name|String
name|departments
parameter_list|)
block|{
name|this
operator|.
name|departments
operator|=
name|departments
expr_stmt|;
block|}
specifier|public
name|void
name|addDepartment
parameter_list|(
name|String
name|department
parameter_list|)
block|{
if|if
condition|(
name|departments
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|departments
operator|+=
literal|","
expr_stmt|;
name|departments
operator|+=
name|department
expr_stmt|;
block|}
specifier|public
name|void
name|removeDepartment
parameter_list|(
name|String
name|department
parameter_list|)
block|{
name|String
name|newDepartments
init|=
literal|""
decl_stmt|;
name|StringTokenizer
name|stk
init|=
operator|new
name|StringTokenizer
argument_list|(
name|departments
argument_list|,
literal|","
argument_list|)
decl_stmt|;
while|while
condition|(
name|stk
operator|.
name|hasMoreTokens
argument_list|()
condition|)
block|{
name|String
name|dept
init|=
name|stk
operator|.
name|nextToken
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|dept
operator|.
name|equals
argument_list|(
name|department
argument_list|)
condition|)
block|{
if|if
condition|(
name|newDepartments
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|newDepartments
operator|+=
literal|","
expr_stmt|;
name|newDepartments
operator|+=
name|dept
expr_stmt|;
block|}
block|}
name|departments
operator|=
name|newDepartments
expr_stmt|;
block|}
specifier|public
name|Vector
name|getDepartmentIds
parameter_list|()
block|{
name|Vector
name|ids
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
name|StringTokenizer
name|stk
init|=
operator|new
name|StringTokenizer
argument_list|(
name|departments
argument_list|,
literal|","
argument_list|)
decl_stmt|;
while|while
condition|(
name|stk
operator|.
name|hasMoreTokens
argument_list|()
condition|)
block|{
name|ids
operator|.
name|addElement
argument_list|(
operator|new
name|Long
argument_list|(
name|stk
operator|.
name|nextToken
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|ids
return|;
block|}
block|}
end_class

end_unit

