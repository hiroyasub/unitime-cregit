begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionErrors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|Debug
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|messages
operator|.
name|CourseMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DatePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Preference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PreferenceLevel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|DynamicList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|DynamicListObjectFactory
import|;
end_import

begin_comment
comment|/**  * Superclass for implementing Preferences  *   * @author Heston Fernandes, Tomas Muller, Zuzana Mullerova  */
end_comment

begin_class
specifier|public
class|class
name|PreferencesForm
extends|extends
name|ActionForm
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|3578647598790726006L
decl_stmt|;
specifier|protected
specifier|final
specifier|static
name|CourseMessages
name|MSG
init|=
name|Localization
operator|.
name|create
argument_list|(
name|CourseMessages
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// --------------------------------------------------------- Instance Variables
specifier|protected
name|String
name|op
decl_stmt|;
specifier|protected
name|List
name|timePatterns
decl_stmt|;
specifier|protected
name|List
name|roomGroups
decl_stmt|;
specifier|protected
name|List
name|roomGroupLevels
decl_stmt|;
specifier|protected
name|List
name|roomPrefs
decl_stmt|;
specifier|protected
name|List
name|roomPrefLevels
decl_stmt|;
specifier|protected
name|List
name|bldgPrefs
decl_stmt|;
specifier|protected
name|List
name|bldgPrefLevels
decl_stmt|;
specifier|protected
name|List
name|roomFeaturePrefs
decl_stmt|;
specifier|protected
name|List
name|roomFeaturePrefLevels
decl_stmt|;
specifier|protected
name|String
name|timePattern
decl_stmt|;
specifier|protected
name|List
name|availableTimePatterns
decl_stmt|;
specifier|protected
name|List
name|distPrefs
decl_stmt|;
specifier|protected
name|List
name|distPrefLevels
decl_stmt|;
specifier|protected
name|List
name|datePatternPrefs
decl_stmt|;
specifier|protected
name|List
name|datePatternPrefLevels
decl_stmt|;
specifier|protected
name|List
name|coursePrefs
decl_stmt|;
specifier|protected
name|List
name|coursePrefLevels
decl_stmt|;
specifier|protected
name|List
name|instructorPrefs
decl_stmt|;
specifier|protected
name|List
name|instructorPrefLevels
decl_stmt|;
specifier|protected
name|List
name|attributePrefs
decl_stmt|;
specifier|protected
name|List
name|attributePrefLevels
decl_stmt|;
specifier|protected
name|String
name|availability
decl_stmt|;
specifier|private
name|String
name|nextId
decl_stmt|;
specifier|private
name|String
name|previousId
decl_stmt|;
specifier|protected
name|boolean
name|allowHardPrefs
decl_stmt|;
specifier|private
name|boolean
name|hasNotAvailable
decl_stmt|;
comment|// --------------------------------------------------------- Classes
comment|/** Factory to create dynamic list element for Preference */
specifier|protected
name|DynamicListObjectFactory
name|factoryPref
init|=
operator|new
name|DynamicListObjectFactory
argument_list|()
block|{
specifier|public
name|Object
name|create
parameter_list|()
block|{
return|return
operator|new
name|String
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
return|;
block|}
block|}
decl_stmt|;
comment|/** Factory to create dynamic list element for Preference Level */
specifier|protected
name|DynamicListObjectFactory
name|factoryPrefLevel
init|=
operator|new
name|DynamicListObjectFactory
argument_list|()
block|{
specifier|public
name|Object
name|create
parameter_list|()
block|{
return|return
operator|new
name|String
argument_list|(
name|PreferenceLevel
operator|.
name|PREF_LEVEL_NEUTRAL
argument_list|)
return|;
block|}
block|}
decl_stmt|;
comment|/** Factory to create dynamic list element for Time Pattern */
specifier|protected
name|DynamicListObjectFactory
name|factoryPattern
init|=
operator|new
name|DynamicListObjectFactory
argument_list|()
block|{
specifier|public
name|Object
name|create
parameter_list|()
block|{
return|return
operator|new
name|String
argument_list|(
literal|"-1"
argument_list|)
return|;
block|}
block|}
decl_stmt|;
comment|// --------------------------------------------------------- Methods
comment|/**       * Method validate      * @param mapping      * @param request      * @return ActionErrors      */
specifier|public
name|ActionErrors
name|validate
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|ActionErrors
name|errors
init|=
operator|new
name|ActionErrors
argument_list|()
decl_stmt|;
name|List
name|lst
init|=
name|getRoomGroups
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|checkPrefs
argument_list|(
name|lst
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"roomGroups"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorInvalidRoomGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|checkPrefLevels
argument_list|(
name|getRoomGroupLevels
argument_list|()
argument_list|,
name|lst
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"roomGroups"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorInvalidRoomGroupLevel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|lst
operator|=
name|getBldgPrefs
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|checkPrefs
argument_list|(
name|lst
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"bldgPrefs"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorInvalidBuildingPreference
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|checkPrefLevels
argument_list|(
name|getBldgPrefLevels
argument_list|()
argument_list|,
name|lst
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"bldgPrefs"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorInvalidBuildingPreferenceLevel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|lst
operator|=
name|getRoomPrefs
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|checkPrefs
argument_list|(
name|lst
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"roomPrefs"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorInvalidRoomPreference
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|checkPrefLevels
argument_list|(
name|getRoomPrefLevels
argument_list|()
argument_list|,
name|lst
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"roomPrefs"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorInvalidRoomPreferenceLevel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|lst
operator|=
name|getRoomFeaturePrefs
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|checkPrefs
argument_list|(
name|lst
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"roomFeaturePrefs"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorInvalidRoomFeaturePreference
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|checkPrefLevels
argument_list|(
name|getRoomFeaturePrefLevels
argument_list|()
argument_list|,
name|lst
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"roomFeaturePrefs"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorInvalidRoomFeaturePreferenceLevel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|lst
operator|=
name|getDistPrefs
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|checkPrefs
argument_list|(
name|lst
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"distPrefs"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorInvalidDistributionPreference
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|checkPrefLevels
argument_list|(
name|getDistPrefLevels
argument_list|()
argument_list|,
name|lst
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"distPrefs"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorInvalidDistributionPreferenceLevel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|lst
operator|=
name|getCoursePrefs
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|checkPrefs
argument_list|(
name|lst
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"coursePrefs"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorInvalidCoursePreference
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|checkPrefLevels
argument_list|(
name|getCoursePrefLevels
argument_list|()
argument_list|,
name|lst
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"coursePrefs"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorInvalidCoursePreferenceLevel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|lst
operator|=
name|getInstructorPrefs
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|checkPrefs
argument_list|(
name|lst
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"instructorPrefs"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorInvalidInstructorPreference
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|checkPrefLevels
argument_list|(
name|getInstructorPrefLevels
argument_list|()
argument_list|,
name|lst
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"instructorPrefs"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorInvalidInstructorPreferenceLevel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|lst
operator|=
name|getAttributePrefs
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|checkPrefs
argument_list|(
name|lst
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"attributePrefs"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorInvalidAttributePreference
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|checkPrefLevels
argument_list|(
name|getAttributePrefLevels
argument_list|()
argument_list|,
name|lst
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"attributePrefs"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorInvalidAttributePreferenceLevel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getTimePatterns
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"p"
operator|+
name|i
operator|+
literal|"_hour"
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|boolean
name|daySelected
init|=
literal|false
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|Constants
operator|.
name|DAY_CODES
operator|.
name|length
condition|;
name|j
operator|++
control|)
if|if
condition|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"p"
operator|+
name|i
operator|+
literal|"_d"
operator|+
name|j
argument_list|)
operator|!=
literal|null
condition|)
name|daySelected
operator|=
literal|true
expr_stmt|;
if|if
condition|(
operator|!
name|daySelected
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"timePrefs"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
literal|"No day is selected in time preferences."
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
literal|""
operator|.
name|equals
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"p"
operator|+
name|i
operator|+
literal|"_hour"
argument_list|)
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"timePrefs"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
literal|"No time is selected in time preferences."
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
literal|""
operator|.
name|equals
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"p"
operator|+
name|i
operator|+
literal|"_min"
argument_list|)
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"timePrefs"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
literal|"No time is selected in time preferences."
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
literal|""
operator|.
name|equals
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"p"
operator|+
name|i
operator|+
literal|"_morn"
argument_list|)
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"timePrefs"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
literal|"No time is selected in time preferences."
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
return|return
name|errors
return|;
block|}
comment|/**       * Method reset      * @param mapping      * @param request      */
specifier|public
name|void
name|reset
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|op
operator|=
literal|""
expr_stmt|;
name|timePattern
operator|=
literal|null
expr_stmt|;
name|timePatterns
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPattern
argument_list|)
expr_stmt|;
name|availableTimePatterns
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPattern
argument_list|)
expr_stmt|;
name|roomPrefs
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPref
argument_list|)
expr_stmt|;
name|roomPrefLevels
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPrefLevel
argument_list|)
expr_stmt|;
name|bldgPrefs
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPref
argument_list|)
expr_stmt|;
name|bldgPrefLevels
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPrefLevel
argument_list|)
expr_stmt|;
name|roomFeaturePrefs
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPref
argument_list|)
expr_stmt|;
name|roomFeaturePrefLevels
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPrefLevel
argument_list|)
expr_stmt|;
name|roomGroups
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPref
argument_list|)
expr_stmt|;
name|roomGroupLevels
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPrefLevel
argument_list|)
expr_stmt|;
name|distPrefs
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPref
argument_list|)
expr_stmt|;
name|distPrefLevels
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPrefLevel
argument_list|)
expr_stmt|;
name|datePatternPrefs
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPref
argument_list|)
expr_stmt|;
name|datePatternPrefLevels
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPrefLevel
argument_list|)
expr_stmt|;
name|coursePrefs
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPref
argument_list|)
expr_stmt|;
name|coursePrefLevels
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPrefLevel
argument_list|)
expr_stmt|;
name|attributePrefs
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPref
argument_list|)
expr_stmt|;
name|attributePrefLevels
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPrefLevel
argument_list|)
expr_stmt|;
name|instructorPrefs
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPref
argument_list|)
expr_stmt|;
name|instructorPrefLevels
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPrefLevel
argument_list|)
expr_stmt|;
name|nextId
operator|=
name|previousId
operator|=
literal|null
expr_stmt|;
name|allowHardPrefs
operator|=
literal|true
expr_stmt|;
name|hasNotAvailable
operator|=
literal|false
expr_stmt|;
name|addBlankPrefRows
argument_list|()
expr_stmt|;
name|availability
operator|=
literal|null
expr_stmt|;
block|}
comment|/**      * Checks that there are no duplicates and that all prior prefs have a value      * @param lst List of values      * @return true if checks ok, false otherwise      */
specifier|public
name|boolean
name|checkPrefs
parameter_list|(
name|List
name|lst
parameter_list|)
block|{
name|HashMap
name|map
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|lst
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|String
name|value
init|=
operator|(
operator|(
name|String
operator|)
name|lst
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|)
decl_stmt|;
comment|// No selection made - ignore
if|if
condition|(
name|value
operator|==
literal|null
operator|||
name|value
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
condition|)
block|{
continue|continue;
block|}
comment|// Duplicate selection made
if|if
condition|(
name|map
operator|.
name|get
argument_list|(
name|value
operator|.
name|trim
argument_list|()
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|lst
operator|.
name|set
argument_list|(
name|i
argument_list|,
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
name|map
operator|.
name|put
argument_list|(
name|value
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
comment|/**      * Checks that pref levels are selected      * @param lst List of pref levels      * @return true if checks ok, false otherwise      */
specifier|public
name|boolean
name|checkPrefLevels
parameter_list|(
name|List
name|lst
parameter_list|,
name|List
name|prefList
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|lst
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|String
name|id
init|=
operator|(
operator|(
name|String
operator|)
name|prefList
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|)
decl_stmt|;
name|String
name|value
init|=
operator|(
operator|(
name|String
operator|)
name|lst
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|)
decl_stmt|;
comment|// Ignore blank value of pref level if pref is blank
if|if
condition|(
name|id
operator|==
literal|null
operator|||
name|id
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
condition|)
block|{
continue|continue;
block|}
comment|// No selection made
if|if
condition|(
name|value
operator|==
literal|null
operator|||
name|value
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
comment|/**      * @return Returns the op.      */
specifier|public
name|String
name|getOp
parameter_list|()
block|{
return|return
name|op
return|;
block|}
comment|/**      * @param op The op to set.      */
specifier|public
name|void
name|setOp
parameter_list|(
name|String
name|op
parameter_list|)
block|{
name|this
operator|.
name|op
operator|=
name|op
expr_stmt|;
block|}
comment|/**      * @return Returns the timePattern.      */
specifier|public
name|List
name|getTimePatterns
parameter_list|()
block|{
return|return
operator|(
name|timePatterns
operator|==
literal|null
condition|?
operator|new
name|Vector
argument_list|()
else|:
name|timePatterns
operator|)
return|;
block|}
comment|/**      * @param timePattern The timePattern to set.      */
specifier|public
name|void
name|setTimePatterns
parameter_list|(
name|List
name|timePatterns
parameter_list|)
block|{
name|this
operator|.
name|timePatterns
operator|=
name|timePatterns
expr_stmt|;
block|}
specifier|public
name|List
name|getAvailableTimePatterns
parameter_list|()
block|{
return|return
name|availableTimePatterns
return|;
block|}
specifier|public
name|boolean
name|getCanChooseTimePattern
parameter_list|()
block|{
return|return
name|availableTimePatterns
operator|!=
literal|null
return|;
block|}
specifier|public
name|List
name|getAvailableNotSelectedTimePatterns
parameter_list|()
block|{
if|if
condition|(
name|timePatterns
operator|==
literal|null
operator|||
name|timePatterns
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
name|getAvailableTimePatterns
argument_list|()
return|;
name|Vector
name|ret
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|availableTimePatterns
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|TimePattern
name|pattern
init|=
operator|(
name|TimePattern
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|pattern
operator|.
name|getTimePatternModel
argument_list|()
operator|.
name|isExactTime
argument_list|()
operator|&&
name|timePatterns
operator|.
name|contains
argument_list|(
name|pattern
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
continue|continue;
name|ret
operator|.
name|add
argument_list|(
name|pattern
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
specifier|public
name|void
name|setAvailableTimePatterns
parameter_list|(
name|List
name|availableTimePatterns
parameter_list|)
block|{
name|this
operator|.
name|availableTimePatterns
operator|=
name|availableTimePatterns
expr_stmt|;
block|}
specifier|public
name|String
name|getTimePattern
parameter_list|()
block|{
return|return
name|timePattern
return|;
block|}
specifier|public
name|void
name|setTimePattern
parameter_list|(
name|String
name|timePattern
parameter_list|)
block|{
name|this
operator|.
name|timePattern
operator|=
name|timePattern
expr_stmt|;
block|}
specifier|public
name|List
name|getRoomGroups
parameter_list|()
block|{
return|return
name|roomGroups
return|;
block|}
specifier|public
name|void
name|setRoomGroups
parameter_list|(
name|List
name|roomGroups
parameter_list|)
block|{
name|this
operator|.
name|roomGroups
operator|=
name|roomGroups
expr_stmt|;
block|}
comment|/**      * @param roomGroups The roomGroups to set.      */
specifier|public
name|void
name|setRoomGroups
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|Debug
operator|.
name|debug
argument_list|(
literal|"setting room group: "
operator|+
name|key
argument_list|)
expr_stmt|;
name|this
operator|.
name|roomGroups
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
name|getRoomGroupLevels
parameter_list|()
block|{
return|return
name|roomGroupLevels
return|;
block|}
comment|/**      * @return Returns the roomGroupLevels.      */
specifier|public
name|String
name|getRoomGroupLevels
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|roomGroupLevels
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      * @param roomGroup levels The roomGroup Levels to set.      */
specifier|public
name|void
name|setRoomGroupLevels
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|roomGroupLevels
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/**      * @return Returns the roomGroupPrefs.      */
specifier|public
name|String
name|getRoomGroups
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|roomGroups
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|void
name|setRoomGroupLevels
parameter_list|(
name|List
name|roomGroupLevels
parameter_list|)
block|{
name|this
operator|.
name|roomGroupLevels
operator|=
name|roomGroupLevels
expr_stmt|;
block|}
comment|/**      * @return Returns the bldgPrefs.      */
specifier|public
name|List
name|getBldgPrefs
parameter_list|()
block|{
return|return
name|bldgPrefs
return|;
block|}
comment|/**      * @return Returns the bldgPrefs.      */
specifier|public
name|String
name|getBldgPrefs
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|bldgPrefs
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      * @param bldgPrefs The bldgPrefs to set.      */
specifier|public
name|void
name|setBldgPrefs
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|bldgPrefs
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param bldgPrefs The bldgPrefs to set.      */
specifier|public
name|void
name|setBldgPrefs
parameter_list|(
name|List
name|bldgPrefs
parameter_list|)
block|{
name|this
operator|.
name|bldgPrefs
operator|=
name|bldgPrefs
expr_stmt|;
block|}
comment|/**      * @return Returns the distPrefs.      */
specifier|public
name|List
name|getDistPrefs
parameter_list|()
block|{
return|return
name|distPrefs
return|;
block|}
comment|/**      * @return Returns the distPrefs.      */
specifier|public
name|String
name|getDistPrefs
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|distPrefs
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      * @param distPrefs The distPrefs to set.      */
specifier|public
name|void
name|setDistPrefs
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|distPrefs
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param distPrefs The distPrefs to set.      */
specifier|public
name|void
name|setDistPrefs
parameter_list|(
name|List
name|distPrefs
parameter_list|)
block|{
name|this
operator|.
name|distPrefs
operator|=
name|distPrefs
expr_stmt|;
block|}
comment|/**      * @return Returns the coursePrefs.      */
specifier|public
name|List
name|getCoursePrefs
parameter_list|()
block|{
return|return
name|coursePrefs
return|;
block|}
comment|/**      * @return Returns the coursePrefs.      */
specifier|public
name|String
name|getCoursePrefs
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|coursePrefs
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      * @param coursePrefs The coursePrefs to set.      */
specifier|public
name|void
name|setCoursePrefs
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|coursePrefs
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param coursePrefs The coursePrefs to set.      */
specifier|public
name|void
name|setCoursePrefs
parameter_list|(
name|List
name|coursePrefs
parameter_list|)
block|{
name|this
operator|.
name|coursePrefs
operator|=
name|coursePrefs
expr_stmt|;
block|}
comment|/**      * @return Returns the instructorPrefs.      */
specifier|public
name|List
name|getInstructorPrefs
parameter_list|()
block|{
return|return
name|instructorPrefs
return|;
block|}
comment|/**      * @return Returns the instructorPrefs.      */
specifier|public
name|String
name|getInstructorPrefs
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|instructorPrefs
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      * @param instructorPrefs The instructorPrefs to set.      */
specifier|public
name|void
name|setInstructorPrefs
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|instructorPrefs
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param instructorPrefs The instructorPrefs to set.      */
specifier|public
name|void
name|setInstructorPrefs
parameter_list|(
name|List
name|instructorPrefs
parameter_list|)
block|{
name|this
operator|.
name|instructorPrefs
operator|=
name|instructorPrefs
expr_stmt|;
block|}
comment|/**      * @return Returns the attributePrefs.      */
specifier|public
name|List
name|getAttributePrefs
parameter_list|()
block|{
return|return
name|attributePrefs
return|;
block|}
comment|/**      * @return Returns the attributePrefs.      */
specifier|public
name|String
name|getAttributePrefs
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|attributePrefs
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      * @param attributePrefs The attributePrefs to set.      */
specifier|public
name|void
name|setAttributePrefs
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|attributePrefs
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param attributePrefs The attributePrefs to set.      */
specifier|public
name|void
name|setAttributePrefs
parameter_list|(
name|List
name|attributePrefs
parameter_list|)
block|{
name|this
operator|.
name|attributePrefs
operator|=
name|attributePrefs
expr_stmt|;
block|}
comment|/**      * @return Returns the roomPrefs.      */
specifier|public
name|List
name|getRoomPrefs
parameter_list|()
block|{
return|return
name|roomPrefs
return|;
block|}
comment|/**      * @return Returns the roomPrefs.      */
specifier|public
name|String
name|getRoomPrefs
parameter_list|(
name|int
name|key
parameter_list|)
block|{
name|Debug
operator|.
name|debug
argument_list|(
literal|"getting room pref: "
operator|+
name|key
argument_list|)
expr_stmt|;
return|return
name|roomPrefs
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      * @param roomPrefs The roomPrefs to set.      */
specifier|public
name|void
name|setRoomPrefs
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|Debug
operator|.
name|debug
argument_list|(
literal|"setting room pref: "
operator|+
name|key
argument_list|)
expr_stmt|;
name|this
operator|.
name|roomPrefs
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param roomPrefs The roomPrefs to set.      */
specifier|public
name|void
name|setRoomPrefs
parameter_list|(
name|List
name|roomPrefs
parameter_list|)
block|{
name|this
operator|.
name|roomPrefs
operator|=
name|roomPrefs
expr_stmt|;
block|}
comment|/**      * @return Returns the roomFeaturePrefs.      */
specifier|public
name|List
name|getRoomFeaturePrefs
parameter_list|()
block|{
return|return
name|roomFeaturePrefs
return|;
block|}
comment|/**      * @return Returns the roomFeaturePrefs.      */
specifier|public
name|String
name|getRoomFeaturePrefs
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|roomFeaturePrefs
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      * @param roomFeaturePrefs The roomFeaturePrefs to set.      */
specifier|public
name|void
name|setRoomFeaturePrefs
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|roomFeaturePrefs
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param roomFeaturePrefs The roomFeaturePrefs to set.      */
specifier|public
name|void
name|setRoomFeaturePrefs
parameter_list|(
name|List
name|roomFeaturePrefs
parameter_list|)
block|{
name|this
operator|.
name|roomFeaturePrefs
operator|=
name|roomFeaturePrefs
expr_stmt|;
block|}
comment|/**      * @return Returns the roomPrefLevels.      */
specifier|public
name|List
name|getRoomPrefLevels
parameter_list|()
block|{
return|return
name|roomPrefLevels
return|;
block|}
comment|/**      * @return Returns the roomPrefLevels.      */
specifier|public
name|String
name|getRoomPrefLevels
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|roomPrefLevels
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      * @param roomPrefs The roomPrefLevels to set.      */
specifier|public
name|void
name|setRoomPrefLevels
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|roomPrefLevels
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param roomPrefs The roomPrefLevels to set.      */
specifier|public
name|void
name|setRoomPrefLevels
parameter_list|(
name|List
name|roomPrefLevels
parameter_list|)
block|{
name|this
operator|.
name|roomPrefLevels
operator|=
name|roomPrefLevels
expr_stmt|;
block|}
comment|/**      * @return Returns the bldgPrefLevels.      */
specifier|public
name|List
name|getBldgPrefLevels
parameter_list|()
block|{
return|return
name|bldgPrefLevels
return|;
block|}
comment|/**      * @return Returns the bldgPrefLevels.      */
specifier|public
name|String
name|getBldgPrefLevels
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|bldgPrefLevels
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      * @param bldgPrefs The bldgPrefLevels to set.      */
specifier|public
name|void
name|setBldgPrefLevels
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|bldgPrefLevels
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param bldgPrefs The bldgPrefLevels to set.      */
specifier|public
name|void
name|setBldgPrefLevels
parameter_list|(
name|List
name|bldgPrefLevels
parameter_list|)
block|{
name|this
operator|.
name|bldgPrefLevels
operator|=
name|bldgPrefLevels
expr_stmt|;
block|}
comment|/**      * @return Returns the distPrefLevels.      */
specifier|public
name|List
name|getDistPrefLevels
parameter_list|()
block|{
return|return
name|distPrefLevels
return|;
block|}
comment|/**      * @return Returns the distPrefLevels.      */
specifier|public
name|String
name|getDistPrefLevels
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|distPrefLevels
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      * @param distPrefs The distPrefLevels to set.      */
specifier|public
name|void
name|setDistPrefLevels
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|distPrefLevels
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param distPrefs The distPrefLevels to set.      */
specifier|public
name|void
name|setDistPrefLevels
parameter_list|(
name|List
name|distPrefLevels
parameter_list|)
block|{
name|this
operator|.
name|distPrefLevels
operator|=
name|distPrefLevels
expr_stmt|;
block|}
comment|/**      * @return Returns the coursePrefLevels.      */
specifier|public
name|List
name|getCoursePrefLevels
parameter_list|()
block|{
return|return
name|coursePrefLevels
return|;
block|}
comment|/**      * @return Returns the coursePrefLevels.      */
specifier|public
name|String
name|getCoursePrefLevels
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|coursePrefLevels
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      * @param coursePrefs The coursePrefLevels to set.      */
specifier|public
name|void
name|setCoursePrefLevels
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|coursePrefLevels
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param coursePrefs The coursePrefLevels to set.      */
specifier|public
name|void
name|setCoursePrefLevels
parameter_list|(
name|List
name|coursePrefLevels
parameter_list|)
block|{
name|this
operator|.
name|coursePrefLevels
operator|=
name|coursePrefLevels
expr_stmt|;
block|}
comment|/**      * @return Returns the instructorPrefLevels.      */
specifier|public
name|List
name|getInstructorPrefLevels
parameter_list|()
block|{
return|return
name|instructorPrefLevels
return|;
block|}
comment|/**      * @return Returns the instructorPrefLevels.      */
specifier|public
name|String
name|getInstructorPrefLevels
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|instructorPrefLevels
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      * @param instructorPrefs The instructorPrefLevels to set.      */
specifier|public
name|void
name|setInstructorPrefLevels
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|instructorPrefLevels
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param instructorPrefs The instructorPrefLevels to set.      */
specifier|public
name|void
name|setInstructorPrefLevels
parameter_list|(
name|List
name|instructorPrefLevels
parameter_list|)
block|{
name|this
operator|.
name|instructorPrefLevels
operator|=
name|instructorPrefLevels
expr_stmt|;
block|}
comment|/**      * @return Returns the attributePrefLevels.      */
specifier|public
name|List
name|getAttributePrefLevels
parameter_list|()
block|{
return|return
name|attributePrefLevels
return|;
block|}
comment|/**      * @return Returns the attributePrefLevels.      */
specifier|public
name|String
name|getAttributePrefLevels
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|attributePrefLevels
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      * @param attributePrefs The attributePrefLevels to set.      */
specifier|public
name|void
name|setAttributePrefLevels
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|attributePrefLevels
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param attributePrefs The attributePrefLevels to set.      */
specifier|public
name|void
name|setAttributePrefLevels
parameter_list|(
name|List
name|attributePrefLevels
parameter_list|)
block|{
name|this
operator|.
name|attributePrefLevels
operator|=
name|attributePrefLevels
expr_stmt|;
block|}
comment|/**      * @return Returns the roomFeaturePrefLevels.      */
specifier|public
name|List
name|getRoomFeaturePrefLevels
parameter_list|()
block|{
return|return
name|roomFeaturePrefLevels
return|;
block|}
comment|/**      * @return Returns the roomFeaturePrefLevels.      */
specifier|public
name|String
name|getRoomFeaturePrefLevels
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|roomFeaturePrefLevels
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      * @param roomFeaturePrefs The roomFeaturePrefLevels to set.      */
specifier|public
name|void
name|setRoomFeaturePrefLevels
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|roomFeaturePrefLevels
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param roomFeaturePrefs The roomFeaturePrefLevels to set.      */
specifier|public
name|void
name|setRoomFeaturePrefLevels
parameter_list|(
name|List
name|roomFeaturePrefLevels
parameter_list|)
block|{
name|this
operator|.
name|roomFeaturePrefLevels
operator|=
name|roomFeaturePrefLevels
expr_stmt|;
block|}
specifier|public
name|List
name|getDatePatternPrefs
parameter_list|()
block|{
return|return
name|datePatternPrefs
return|;
block|}
specifier|public
name|String
name|getDatePatternPrefs
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|datePatternPrefs
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|void
name|setDatePatternPrefs
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|datePatternPrefs
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDatePatternPrefs
parameter_list|(
name|List
name|datePatternPrefs
parameter_list|)
block|{
name|this
operator|.
name|datePatternPrefs
operator|=
name|datePatternPrefs
expr_stmt|;
block|}
specifier|public
name|List
name|getDatePatternPrefLevels
parameter_list|()
block|{
return|return
name|datePatternPrefLevels
return|;
block|}
specifier|public
name|String
name|getDatePatternPrefLevels
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|datePatternPrefLevels
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|void
name|setDatePatternPrefLevels
parameter_list|(
name|List
name|datePatternPrefLevels
parameter_list|)
block|{
name|this
operator|.
name|datePatternPrefLevels
operator|=
name|datePatternPrefLevels
expr_stmt|;
block|}
specifier|public
name|void
name|setDatePatternPrefLevels
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|datePatternPrefLevels
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/**      * Add a room preference to the existing list      * @param roomPref Room Id      * @param level Preference Level      */
specifier|public
name|void
name|addToRoomPrefs
parameter_list|(
name|String
name|roomPref
parameter_list|,
name|String
name|level
parameter_list|)
block|{
name|this
operator|.
name|roomPrefs
operator|.
name|add
argument_list|(
name|roomPref
argument_list|)
expr_stmt|;
name|this
operator|.
name|roomPrefLevels
operator|.
name|add
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
comment|/**      * Add a room feature preference to the existing list      * @param roomFeatPref Room Feature Id      * @param level Preference Level      */
specifier|public
name|void
name|addToRoomFeatPrefs
parameter_list|(
name|String
name|roomFeatPref
parameter_list|,
name|String
name|level
parameter_list|)
block|{
name|this
operator|.
name|roomFeaturePrefs
operator|.
name|add
argument_list|(
name|roomFeatPref
argument_list|)
expr_stmt|;
name|this
operator|.
name|roomFeaturePrefLevels
operator|.
name|add
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
comment|/**      * Add a room group preference to the existing list      * @param roomGroup Room Feature Id      * @param level Preference Level      */
specifier|public
name|void
name|addToRoomGroups
parameter_list|(
name|String
name|roomGroup
parameter_list|,
name|String
name|level
parameter_list|)
block|{
name|this
operator|.
name|roomGroups
operator|.
name|add
argument_list|(
name|roomGroup
argument_list|)
expr_stmt|;
name|this
operator|.
name|roomGroupLevels
operator|.
name|add
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
comment|/**      * Add a building preference to the existing list      * @param bldgPref Building Id      * @param level Preference Level      */
specifier|public
name|void
name|addToBldgPrefs
parameter_list|(
name|String
name|bldgPref
parameter_list|,
name|String
name|level
parameter_list|)
block|{
name|this
operator|.
name|bldgPrefs
operator|.
name|add
argument_list|(
name|bldgPref
argument_list|)
expr_stmt|;
name|this
operator|.
name|bldgPrefLevels
operator|.
name|add
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
comment|/**      * Add a distribution preference to the existing list      * @param distPref Dist. pref Id      * @param level Preference Level      */
specifier|public
name|void
name|addToDistPrefs
parameter_list|(
name|String
name|distPref
parameter_list|,
name|String
name|level
parameter_list|)
block|{
name|this
operator|.
name|distPrefs
operator|.
name|add
argument_list|(
name|distPref
argument_list|)
expr_stmt|;
name|this
operator|.
name|distPrefLevels
operator|.
name|add
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
comment|/**      * Add a course preference to the existing list      * @param coursePref Course pref Id      * @param level Preference Level      */
specifier|public
name|void
name|addToCoursePrefs
parameter_list|(
name|String
name|coursePref
parameter_list|,
name|String
name|level
parameter_list|)
block|{
name|this
operator|.
name|coursePrefs
operator|.
name|add
argument_list|(
name|coursePref
argument_list|)
expr_stmt|;
name|this
operator|.
name|coursePrefLevels
operator|.
name|add
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
comment|/**      * Add a instructor preference to the existing list      * @param instructorPref Course pref Id      * @param level Preference Level      */
specifier|public
name|void
name|addToInstructorPrefs
parameter_list|(
name|String
name|instructorPref
parameter_list|,
name|String
name|level
parameter_list|)
block|{
name|this
operator|.
name|instructorPrefs
operator|.
name|add
argument_list|(
name|instructorPref
argument_list|)
expr_stmt|;
name|this
operator|.
name|instructorPrefLevels
operator|.
name|add
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
comment|/**      * Add a attribute preference to the existing list      * @param attributePref Attribute pref Id      * @param level Preference Level      */
specifier|public
name|void
name|addToAttributePrefs
parameter_list|(
name|String
name|attributePref
parameter_list|,
name|String
name|level
parameter_list|)
block|{
name|this
operator|.
name|attributePrefs
operator|.
name|add
argument_list|(
name|attributePref
argument_list|)
expr_stmt|;
name|this
operator|.
name|attributePrefLevels
operator|.
name|add
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
comment|/**      * Add a date pattern preference to the existing list      * @param datePatternPref Date pattern pref Id      * @param level Preference Level      */
specifier|public
name|void
name|addToDatePatternPrefs
parameter_list|(
name|String
name|datePatternPref
parameter_list|,
name|String
name|level
parameter_list|)
block|{
name|this
operator|.
name|datePatternPrefs
operator|.
name|add
argument_list|(
name|datePatternPref
argument_list|)
expr_stmt|;
name|this
operator|.
name|datePatternPrefLevels
operator|.
name|add
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|sortDatePatternPrefs
parameter_list|(
name|List
name|prefs
parameter_list|,
name|List
name|prefLevels
parameter_list|,
name|List
argument_list|<
name|DatePattern
argument_list|>
name|patterns
parameter_list|)
block|{
if|if
condition|(
name|prefs
operator|.
name|size
argument_list|()
operator|==
name|patterns
operator|.
name|size
argument_list|()
condition|)
block|{
name|Collections
operator|.
name|sort
argument_list|(
name|patterns
argument_list|)
expr_stmt|;
comment|//, new DatePattenNameComparator()
name|List
name|newPrefs
init|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPref
argument_list|)
decl_stmt|;
name|List
name|newPrefLevels
init|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryPrefLevel
argument_list|)
decl_stmt|;
name|newPrefs
operator|.
name|addAll
argument_list|(
name|prefs
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|newPrefs
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|String
name|ith_pattern
init|=
name|patterns
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|int
name|indexOfPatternInPrefs
init|=
name|prefs
operator|.
name|indexOf
argument_list|(
name|ith_pattern
argument_list|)
decl_stmt|;
name|newPrefs
operator|.
name|set
argument_list|(
name|i
argument_list|,
name|ith_pattern
argument_list|)
expr_stmt|;
name|newPrefLevels
operator|.
name|set
argument_list|(
name|i
argument_list|,
name|prefLevels
operator|.
name|get
argument_list|(
name|indexOfPatternInPrefs
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|prefs
operator|.
name|clear
argument_list|()
expr_stmt|;
name|prefLevels
operator|.
name|clear
argument_list|()
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
name|newPrefs
argument_list|)
expr_stmt|;
name|prefLevels
operator|.
name|addAll
argument_list|(
name|newPrefLevels
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|addBlankPrefRows
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|Constants
operator|.
name|PREF_ROWS_ADDED
condition|;
name|i
operator|++
control|)
block|{
name|addToBldgPrefs
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|,
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
expr_stmt|;
name|addToRoomPrefs
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|,
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
expr_stmt|;
name|addToRoomFeatPrefs
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|,
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
expr_stmt|;
name|addToRoomGroups
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|,
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
expr_stmt|;
name|addToDistPrefs
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|,
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
expr_stmt|;
name|addToCoursePrefs
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|,
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
expr_stmt|;
name|addToAttributePrefs
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|,
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
expr_stmt|;
name|addToInstructorPrefs
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|,
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Clears all preference lists      */
specifier|public
name|void
name|clearPrefs
parameter_list|()
block|{
name|this
operator|.
name|timePatterns
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|roomGroups
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|bldgPrefs
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|bldgPrefLevels
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|distPrefs
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|distPrefLevels
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|roomPrefs
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|roomPrefLevels
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|roomFeaturePrefs
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|roomFeaturePrefLevels
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|datePatternPrefs
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|datePatternPrefLevels
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|coursePrefs
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|coursePrefLevels
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|instructorPrefs
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|instructorPrefLevels
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|attributePrefs
operator|.
name|clear
argument_list|()
expr_stmt|;
name|this
operator|.
name|attributePrefLevels
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|public
name|String
name|getNextId
parameter_list|()
block|{
return|return
name|nextId
return|;
block|}
specifier|public
name|void
name|setNextId
parameter_list|(
name|String
name|nextId
parameter_list|)
block|{
name|this
operator|.
name|nextId
operator|=
name|nextId
expr_stmt|;
block|}
specifier|public
name|String
name|getPreviousId
parameter_list|()
block|{
return|return
name|previousId
return|;
block|}
specifier|public
name|void
name|setPreviousId
parameter_list|(
name|String
name|previousId
parameter_list|)
block|{
name|this
operator|.
name|previousId
operator|=
name|previousId
expr_stmt|;
block|}
specifier|public
name|boolean
name|getAllowHardPrefs
parameter_list|()
block|{
return|return
name|allowHardPrefs
return|;
block|}
specifier|public
name|void
name|setAllowHardPrefs
parameter_list|(
name|boolean
name|allowHardPrefs
parameter_list|)
block|{
name|this
operator|.
name|allowHardPrefs
operator|=
name|allowHardPrefs
expr_stmt|;
block|}
specifier|public
name|boolean
name|getHasNotAvailable
parameter_list|()
block|{
return|return
name|hasNotAvailable
return|;
block|}
specifier|public
name|void
name|setHasNotAvailable
parameter_list|(
name|boolean
name|hasNotAvailable
parameter_list|)
block|{
name|this
operator|.
name|hasNotAvailable
operator|=
name|hasNotAvailable
expr_stmt|;
block|}
specifier|public
name|String
name|getAvailability
parameter_list|()
block|{
return|return
name|availability
return|;
block|}
specifier|public
name|void
name|setAvailability
parameter_list|(
name|String
name|availability
parameter_list|)
block|{
name|this
operator|.
name|availability
operator|=
name|availability
expr_stmt|;
block|}
block|}
end_class

end_unit

