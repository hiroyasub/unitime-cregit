begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.0 (University Course Timetabling& Student Sectioning Application)  * Copyright (C) 2007, UniTime.org, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program; if not, write to the Free Software Foundation, Inc.,  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionErrors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Location
import|;
end_import

begin_comment
comment|/**   * MyEclipse Struts  * Creation date: 05-05-2006  *   * XDoclet definition:  * @struts.form name="roomDeptEditForm"  */
end_comment

begin_class
specifier|public
class|class
name|RoomDeptEditForm
extends|extends
name|ActionForm
block|{
comment|// --------------------------------------------------------- Instance Variables
specifier|private
name|String
name|id
decl_stmt|;
specifier|private
name|String
name|deptAbbv
decl_stmt|;
specifier|private
name|String
name|deptCode
decl_stmt|;
specifier|private
name|Collection
name|assignedRooms
decl_stmt|;
specifier|private
name|Collection
name|notAssignedRooms
decl_stmt|;
specifier|private
name|String
index|[]
name|assigned
decl_stmt|;
specifier|private
name|String
index|[]
name|notAssigned
decl_stmt|;
specifier|private
name|String
index|[]
name|assignedSelected
init|=
block|{}
decl_stmt|;
specifier|private
name|String
index|[]
name|notAssignedSelected
init|=
block|{}
decl_stmt|;
comment|// --------------------------------------------------------- Methods
comment|/** 	 *  	 */
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|5225503750129395914L
decl_stmt|;
comment|/**  	 * Method validate 	 * @param mapping 	 * @param request 	 * @return ActionErrors 	 */
specifier|public
name|ActionErrors
name|validate
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|ActionErrors
name|errors
init|=
operator|new
name|ActionErrors
argument_list|()
decl_stmt|;
return|return
name|errors
return|;
block|}
comment|/**  	 * Method reset 	 * @param mapping 	 * @param request 	 */
specifier|public
name|void
name|reset
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|Collection
name|getAssignedRooms
parameter_list|()
block|{
return|return
name|assignedRooms
return|;
block|}
specifier|public
name|void
name|setAssignedRooms
parameter_list|(
name|Collection
name|assignedRooms
parameter_list|)
block|{
name|this
operator|.
name|assignedRooms
operator|=
name|assignedRooms
expr_stmt|;
block|}
specifier|public
name|Collection
name|getNotAssignedRooms
parameter_list|()
block|{
return|return
name|notAssignedRooms
return|;
block|}
specifier|public
name|void
name|setNotAssignedRooms
parameter_list|(
name|Collection
name|notAssignedRooms
parameter_list|)
block|{
name|this
operator|.
name|notAssignedRooms
operator|=
name|notAssignedRooms
expr_stmt|;
block|}
specifier|public
name|void
name|setRooms
parameter_list|()
block|{
name|int
name|i
init|=
literal|0
decl_stmt|;
name|Iterator
name|iter
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|assignedRooms
operator|!=
literal|null
condition|)
block|{
name|String
index|[]
name|assignedSelection
init|=
operator|new
name|String
index|[
name|assignedRooms
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|assigned
operator|=
operator|new
name|String
index|[
name|assignedRooms
operator|.
name|size
argument_list|()
index|]
expr_stmt|;
for|for
control|(
name|iter
operator|=
name|assignedRooms
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Location
name|r
init|=
operator|(
name|Location
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|assignedSelection
index|[
name|i
index|]
operator|=
name|r
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|assigned
index|[
name|i
index|]
operator|=
name|r
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|i
operator|++
expr_stmt|;
block|}
name|assignedSelected
operator|=
name|assignedSelection
expr_stmt|;
block|}
name|i
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|notAssignedRooms
operator|!=
literal|null
condition|)
block|{
name|notAssigned
operator|=
operator|new
name|String
index|[
name|notAssignedRooms
operator|.
name|size
argument_list|()
index|]
expr_stmt|;
for|for
control|(
name|iter
operator|=
name|notAssignedRooms
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Location
name|r
init|=
operator|(
name|Location
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|notAssigned
index|[
name|i
index|]
operator|=
name|r
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|i
operator|++
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|String
index|[]
name|getAssigned
parameter_list|()
block|{
return|return
name|assigned
return|;
block|}
specifier|public
name|void
name|setAssigned
parameter_list|(
name|String
index|[]
name|assigned
parameter_list|)
block|{
name|this
operator|.
name|assigned
operator|=
name|assigned
expr_stmt|;
block|}
specifier|public
name|String
index|[]
name|getNotAssigned
parameter_list|()
block|{
return|return
name|notAssigned
return|;
block|}
specifier|public
name|void
name|setNotAssigned
parameter_list|(
name|String
index|[]
name|notAssigned
parameter_list|)
block|{
name|this
operator|.
name|notAssigned
operator|=
name|notAssigned
expr_stmt|;
block|}
specifier|public
name|String
index|[]
name|getAssignedSelected
parameter_list|()
block|{
return|return
name|assignedSelected
return|;
block|}
specifier|public
name|void
name|setAssignedSelected
parameter_list|(
name|String
index|[]
name|assignedSelected
parameter_list|)
block|{
name|this
operator|.
name|assignedSelected
operator|=
name|assignedSelected
expr_stmt|;
block|}
specifier|public
name|String
index|[]
name|getNotAssignedSelected
parameter_list|()
block|{
return|return
name|notAssignedSelected
return|;
block|}
specifier|public
name|void
name|setNotAssignedSelected
parameter_list|(
name|String
index|[]
name|notAssignedSelected
parameter_list|)
block|{
name|this
operator|.
name|notAssignedSelected
operator|=
name|notAssignedSelected
expr_stmt|;
block|}
specifier|public
name|String
name|getDeptAbbv
parameter_list|()
block|{
return|return
name|deptAbbv
return|;
block|}
specifier|public
name|void
name|setDeptAbbv
parameter_list|(
name|String
name|deptAbbv
parameter_list|)
block|{
name|this
operator|.
name|deptAbbv
operator|=
name|deptAbbv
expr_stmt|;
block|}
specifier|public
name|String
name|getDeptCode
parameter_list|()
block|{
return|return
name|deptCode
return|;
block|}
specifier|public
name|void
name|setDeptCode
parameter_list|(
name|String
name|deptCode
parameter_list|)
block|{
name|this
operator|.
name|deptCode
operator|=
name|deptCode
expr_stmt|;
block|}
block|}
end_class

end_unit

