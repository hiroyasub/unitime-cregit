begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2008 - 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionErrors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|util
operator|.
name|MessageResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|messages
operator|.
name|CourseMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|ApplicationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Class_
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Preference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SchedulingSubpart
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|StudentClassEnrollment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|SchedulingSubpartDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|ClassAssignmentProxy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|DynamicList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|DynamicListObjectFactory
import|;
end_import

begin_class
specifier|public
class|class
name|InstructionalOfferingModifyForm
extends|extends
name|ActionForm
block|{
specifier|protected
specifier|final
specifier|static
name|CourseMessages
name|MSG
init|=
name|Localization
operator|.
name|create
argument_list|(
name|CourseMessages
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/** 	 *  	 */
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|5412595518174343486L
decl_stmt|;
comment|// --------------------------------------------------------- Instance Variables
specifier|private
name|String
name|op
decl_stmt|;
specifier|private
name|Integer
name|subjectAreaId
decl_stmt|;
specifier|private
name|Long
name|instrOfferingId
decl_stmt|;
specifier|private
name|String
name|instrOfferingName
decl_stmt|;
specifier|private
name|Integer
name|instrOffrConfigLimit
decl_stmt|;
specifier|private
name|Long
name|instrOffrConfigId
decl_stmt|;
specifier|private
name|String
name|origSubparts
decl_stmt|;
specifier|private
name|Boolean
name|displayMaxLimit
decl_stmt|;
specifier|private
name|Boolean
name|displayOptionForMaxLimit
decl_stmt|;
specifier|private
name|Boolean
name|displayEnrollment
decl_stmt|;
specifier|private
name|String
name|enableAllClassesForStudentScheduling
decl_stmt|;
specifier|private
name|String
name|displayAllClassesInstructors
decl_stmt|;
specifier|private
name|Boolean
name|displayExternalId
decl_stmt|;
specifier|private
name|Boolean
name|displayDisplayInstructors
decl_stmt|;
specifier|private
name|Boolean
name|displayEnabledForStudentScheduling
decl_stmt|;
specifier|private
name|List
name|classIds
decl_stmt|;
specifier|private
name|List
name|subpartIds
decl_stmt|;
specifier|private
name|List
name|itypes
decl_stmt|;
specifier|private
name|List
name|mustHaveChildClasses
decl_stmt|;
specifier|private
name|List
name|parentClassIds
decl_stmt|;
specifier|private
name|List
name|readOnlyClasses
decl_stmt|;
specifier|private
name|List
name|classLabels
decl_stmt|;
specifier|private
name|List
name|classLabelIndents
decl_stmt|;
specifier|private
name|List
name|enrollments
decl_stmt|;
specifier|private
name|List
name|minClassLimits
decl_stmt|;
specifier|private
name|List
name|maxClassLimits
decl_stmt|;
specifier|private
name|List
name|roomRatios
decl_stmt|;
specifier|private
name|List
name|numberOfRooms
decl_stmt|;
specifier|private
name|List
name|departments
decl_stmt|;
specifier|private
name|List
name|datePatterns
decl_stmt|;
specifier|private
name|List
name|displayInstructors
decl_stmt|;
specifier|private
name|List
name|enabledForStudentScheduling
decl_stmt|;
specifier|private
name|List
name|classCanMoveUp
decl_stmt|;
specifier|private
name|List
name|classCanMoveDown
decl_stmt|;
specifier|private
name|List
name|subtotalIndexes
decl_stmt|;
specifier|private
name|List
name|subtotalLabels
decl_stmt|;
specifier|private
name|List
name|subtotalValues
decl_stmt|;
specifier|private
name|List
name|enableAllClassesForStudentSchedulingForSubpart
decl_stmt|;
specifier|private
name|List
name|displayAllClassesInstructorsForSubpart
decl_stmt|;
specifier|private
name|List
name|readOnlySubparts
decl_stmt|;
specifier|private
name|List
name|times
decl_stmt|;
specifier|private
name|List
name|rooms
decl_stmt|;
specifier|private
name|List
name|instructors
decl_stmt|;
specifier|private
name|List
name|externalIds
decl_stmt|;
specifier|private
name|List
name|classHasErrors
decl_stmt|;
specifier|private
name|Long
name|addTemplateClassId
decl_stmt|;
specifier|private
name|Long
name|moveUpClassId
decl_stmt|;
specifier|private
name|Long
name|moveDownClassId
decl_stmt|;
specifier|private
name|Long
name|deletedClassId
decl_stmt|;
specifier|private
specifier|static
name|String
name|CLASS_IDS_TOKEN
init|=
literal|"classIds"
decl_stmt|;
specifier|private
specifier|static
name|String
name|SUBPART_IDS_TOKEN
init|=
literal|"subpartIds"
decl_stmt|;
specifier|private
specifier|static
name|String
name|PARENT_CLASS_IDS_TOKEN
init|=
literal|"parentClassIds"
decl_stmt|;
specifier|private
specifier|static
name|String
name|ITYPES_TOKEN
init|=
literal|"itypes"
decl_stmt|;
specifier|private
specifier|static
name|String
name|MUST_HAVE_CHILD_CLASSES_TOKEN
init|=
literal|"mustHaveChildClasses"
decl_stmt|;
specifier|private
specifier|static
name|String
name|READ_ONLY_CLASSES_TOKEN
init|=
literal|"readOnlyClasses"
decl_stmt|;
specifier|private
specifier|static
name|String
name|CLASS_LABELS_TOKEN
init|=
literal|"classLabels"
decl_stmt|;
specifier|private
specifier|static
name|String
name|CLASS_LABEL_INDENTS_TOKEN
init|=
literal|"classLabelIndents"
decl_stmt|;
specifier|private
specifier|static
name|String
name|ENROLLMENTS_TOKEN
init|=
literal|"enrollments"
decl_stmt|;
specifier|private
specifier|static
name|String
name|MIN_CLASS_LIMITS_TOKEN
init|=
literal|"minClassLimits"
decl_stmt|;
specifier|private
specifier|static
name|String
name|MAX_CLASS_LIMITS_TOKEN
init|=
literal|"maxClassLimits"
decl_stmt|;
specifier|private
specifier|static
name|String
name|ROOM_RATIOS_TOKEN
init|=
literal|"roomRatios"
decl_stmt|;
specifier|private
specifier|static
name|String
name|NUMBER_OF_ROOMS_TOKEN
init|=
literal|"numberOfRooms"
decl_stmt|;
specifier|private
specifier|static
name|String
name|DEPARTMENTS_TOKEN
init|=
literal|"departments"
decl_stmt|;
specifier|private
specifier|static
name|String
name|DATE_PATTERNS_TOKEN
init|=
literal|"datePatterns"
decl_stmt|;
specifier|private
specifier|static
name|String
name|DISPLAY_INSTRUCTORS_TOKEN
init|=
literal|"displayInstructors"
decl_stmt|;
specifier|private
specifier|static
name|String
name|ENABLED_FOR_STUDENT_SCHEDULING_TOKEN
init|=
literal|"enabledForStudentScheduling"
decl_stmt|;
specifier|private
specifier|static
name|String
name|DIRECTION_UP
init|=
literal|"up"
decl_stmt|;
specifier|private
specifier|static
name|String
name|DIRECTION_DOWN
init|=
literal|"down"
decl_stmt|;
specifier|private
specifier|static
name|String
name|SUBTOTAL_INDEXES_TOKEN
init|=
literal|"subtotalIndexes"
decl_stmt|;
specifier|private
specifier|static
name|String
name|TIMES_TOKEN
init|=
literal|"times"
decl_stmt|;
specifier|private
specifier|static
name|String
name|ROOMS_TOKEN
init|=
literal|"rooms"
decl_stmt|;
specifier|private
specifier|static
name|String
name|INSTRUCTORS_TOKEN
init|=
literal|"instructors"
decl_stmt|;
specifier|private
specifier|static
name|String
name|EXTERNAL_IDS_TOKEN
init|=
literal|"externalIds"
decl_stmt|;
comment|// --------------------------------------------------------- Classes
comment|/** Factory to create dynamic list element for Course Offerings */
specifier|protected
name|DynamicListObjectFactory
name|factoryClasses
init|=
operator|new
name|DynamicListObjectFactory
argument_list|()
block|{
specifier|public
name|Object
name|create
parameter_list|()
block|{
return|return
operator|new
name|String
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
return|;
block|}
block|}
decl_stmt|;
comment|// --------------------------------------------------------- Methods
comment|/**       * Method validate      * @param mapping      * @param request      * @return ActionErrors      */
specifier|public
name|ActionErrors
name|validate
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|ActionErrors
name|errors
init|=
operator|new
name|ActionErrors
argument_list|()
decl_stmt|;
comment|// Get Message Resources
name|MessageResources
name|rsc
init|=
operator|(
name|MessageResources
operator|)
name|super
operator|.
name|getServlet
argument_list|()
operator|.
name|getServletContext
argument_list|()
operator|.
name|getAttribute
argument_list|(
name|Globals
operator|.
name|MESSAGES_KEY
argument_list|)
decl_stmt|;
if|if
condition|(
name|op
operator|.
name|equals
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.add"
argument_list|)
argument_list|)
condition|)
block|{
comment|// Check Added Course
if|if
condition|(
name|this
operator|.
name|addTemplateClassId
operator|==
literal|null
operator|||
name|this
operator|.
name|addTemplateClassId
operator|.
name|longValue
argument_list|()
operator|<=
literal|0
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"getAddTemplateClassId"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorRequiredClass
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|op
operator|.
name|equals
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.moveUp"
argument_list|)
argument_list|)
condition|)
block|{
comment|// Check Course to move up
if|if
condition|(
name|this
operator|.
name|moveUpClassId
operator|==
literal|null
operator|||
name|this
operator|.
name|moveUpClassId
operator|.
name|longValue
argument_list|()
operator|<=
literal|0
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"getMoveUpClassId"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorRequiredClass
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|op
operator|.
name|equals
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.moveDown"
argument_list|)
argument_list|)
condition|)
block|{
comment|// Check Course to move down
if|if
condition|(
name|this
operator|.
name|moveDownClassId
operator|==
literal|null
operator|||
name|this
operator|.
name|moveDownClassId
operator|.
name|longValue
argument_list|()
operator|<=
literal|0
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"getMoveDownClassId"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorRequiredClass
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|op
operator|.
name|equals
argument_list|(
name|MSG
operator|.
name|actionUpdateMultipleClassSetup
argument_list|()
argument_list|)
condition|)
block|{
comment|// Check Instructional Offering Config
if|if
condition|(
name|this
operator|.
name|instrOffrConfigId
operator|==
literal|null
operator|||
name|this
operator|.
name|instrOffrConfigId
operator|.
name|intValue
argument_list|()
operator|<=
literal|0
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"instrOffrConfigId"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorRequiredIOConfiguration
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Validate class limits provide space that is>= limit for the instructional offering config
name|validateChildClassExistence
argument_list|(
name|errors
argument_list|)
expr_stmt|;
name|validateClassLimits
argument_list|(
name|errors
argument_list|)
expr_stmt|;
name|validateAllSubpartsHaveAtLeastOneClass
argument_list|(
name|errors
argument_list|)
expr_stmt|;
block|}
return|return
name|errors
return|;
block|}
specifier|private
name|void
name|validateChildClassExistence
parameter_list|(
name|ActionErrors
name|errors
parameter_list|)
block|{
for|for
control|(
name|int
name|index
init|=
literal|0
init|;
name|index
operator|<
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|index
operator|++
control|)
block|{
if|if
condition|(
name|Boolean
operator|.
name|valueOf
argument_list|(
operator|(
name|String
operator|)
name|this
operator|.
name|getMustHaveChildClasses
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
argument_list|)
operator|.
name|booleanValue
argument_list|()
condition|)
block|{
name|String
name|classId
init|=
operator|(
name|String
operator|)
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|index
operator|+
literal|1
operator|)
operator|==
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|size
argument_list|()
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"mustHaveChildClasses"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorClassMustHaveChildClasses
argument_list|(
operator|(
name|String
operator|)
name|this
operator|.
name|getClassLabels
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getClassHasErrors
argument_list|()
operator|.
name|set
argument_list|(
name|index
argument_list|,
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|String
name|parentOfNextClass
init|=
operator|(
name|String
operator|)
name|this
operator|.
name|getParentClassIds
argument_list|()
operator|.
name|get
argument_list|(
name|index
operator|+
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
name|parentOfNextClass
operator|==
literal|null
operator|||
operator|!
name|parentOfNextClass
operator|.
name|equals
argument_list|(
name|classId
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"mustHaveChildClasses"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorClassMustHaveChildClasses
argument_list|(
operator|(
name|String
operator|)
name|this
operator|.
name|getClassLabels
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getClassHasErrors
argument_list|()
operator|.
name|set
argument_list|(
name|index
argument_list|,
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
specifier|private
name|void
name|validateAllSubpartsHaveAtLeastOneClass
parameter_list|(
name|ActionErrors
name|errors
parameter_list|)
block|{
name|String
index|[]
name|subparts
init|=
name|this
operator|.
name|getOrigSubparts
argument_list|()
operator|.
name|split
argument_list|(
literal|","
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|subparts
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|this
operator|.
name|getSubpartIds
argument_list|()
operator|.
name|contains
argument_list|(
name|subparts
index|[
name|i
index|]
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"allSubpartsMustHaveAClass"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorEachSubpartMustHaveClass
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
specifier|private
name|void
name|validateMinLessThanMaxClassLimits
parameter_list|(
name|ActionErrors
name|errors
parameter_list|)
block|{
name|Iterator
name|it1
init|=
name|this
operator|.
name|getMinClassLimits
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Iterator
name|it2
init|=
name|this
operator|.
name|getMaxClassLimits
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|int
name|index
init|=
literal|0
decl_stmt|;
name|String
name|minLimitStr
init|=
literal|null
decl_stmt|;
name|String
name|maxLimitStr
init|=
literal|null
decl_stmt|;
name|int
name|minLimit
decl_stmt|;
name|int
name|maxLimit
decl_stmt|;
for|for
control|(
init|;
name|it1
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|minLimitStr
operator|=
operator|(
name|String
operator|)
name|it1
operator|.
name|next
argument_list|()
expr_stmt|;
name|maxLimitStr
operator|=
operator|(
name|String
operator|)
name|it2
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|minLimitStr
operator|!=
literal|null
operator|&&
name|minLimitStr
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|minLimit
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|minLimitStr
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|minLimit
operator|=
literal|0
expr_stmt|;
block|}
if|if
condition|(
name|maxLimitStr
operator|!=
literal|null
operator|&&
name|maxLimitStr
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|maxLimit
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|maxLimitStr
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|maxLimit
operator|=
literal|0
expr_stmt|;
block|}
if|if
condition|(
name|minLimit
operator|>
name|maxLimit
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"minLimitGreaterThanMaxLimit"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorMaxLessThanMinLimit
argument_list|(
operator|(
name|String
operator|)
name|this
operator|.
name|getClassLabels
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getClassHasErrors
argument_list|()
operator|.
name|set
argument_list|(
name|index
argument_list|,
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|index
operator|++
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|validateMinOrMaxParentClassLimits
parameter_list|(
name|ActionErrors
name|errors
parameter_list|,
name|List
name|limits
parameter_list|,
name|String
name|errorName
parameter_list|,
name|String
name|errorMessage
parameter_list|)
block|{
name|HashMap
name|childClassLimits
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|Iterator
name|it1
init|=
name|this
operator|.
name|getSubpartIds
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Iterator
name|it2
init|=
name|limits
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Iterator
name|it3
init|=
name|this
operator|.
name|getParentClassIds
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|String
name|subpartKey
init|=
literal|null
decl_stmt|;
name|String
name|parentKey
init|=
literal|null
decl_stmt|;
name|int
name|value2
decl_stmt|;
name|int
name|clsLimit
decl_stmt|;
name|String
name|tmp
init|=
literal|null
decl_stmt|;
name|HashMap
name|subpartLimits
init|=
literal|null
decl_stmt|;
for|for
control|(
init|;
name|it1
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|subpartKey
operator|=
operator|(
name|String
operator|)
name|it1
operator|.
name|next
argument_list|()
expr_stmt|;
name|tmp
operator|=
operator|(
name|String
operator|)
name|it2
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|tmp
operator|!=
literal|null
operator|&&
name|tmp
operator|.
name|length
argument_list|()
operator|!=
literal|0
condition|)
name|clsLimit
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|tmp
argument_list|)
expr_stmt|;
else|else
name|clsLimit
operator|=
literal|0
expr_stmt|;
name|parentKey
operator|=
operator|(
name|String
operator|)
name|it3
operator|.
name|next
argument_list|()
expr_stmt|;
comment|// calculate total limit for child classes
if|if
condition|(
name|parentKey
operator|!=
literal|null
operator|&&
name|parentKey
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|childClassLimits
operator|.
name|get
argument_list|(
name|parentKey
argument_list|)
operator|==
literal|null
condition|)
block|{
name|subpartLimits
operator|=
operator|new
name|HashMap
argument_list|()
expr_stmt|;
name|childClassLimits
operator|.
name|put
argument_list|(
name|parentKey
argument_list|,
name|subpartLimits
argument_list|)
expr_stmt|;
name|value2
operator|=
literal|0
expr_stmt|;
block|}
else|else
block|{
name|subpartLimits
operator|=
operator|(
name|HashMap
operator|)
name|childClassLimits
operator|.
name|get
argument_list|(
name|parentKey
argument_list|)
expr_stmt|;
if|if
condition|(
name|subpartLimits
operator|.
name|get
argument_list|(
name|subpartKey
argument_list|)
operator|==
literal|null
condition|)
block|{
name|value2
operator|=
literal|0
expr_stmt|;
block|}
else|else
block|{
name|value2
operator|=
operator|(
operator|(
name|Integer
operator|)
name|subpartLimits
operator|.
name|get
argument_list|(
name|subpartKey
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
expr_stmt|;
block|}
block|}
name|value2
operator|+=
name|clsLimit
expr_stmt|;
name|subpartLimits
operator|.
name|put
argument_list|(
name|subpartKey
argument_list|,
operator|new
name|Integer
argument_list|(
name|value2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|HashMap
name|childClassesUnderLimit
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|String
name|parentKey1
init|=
literal|null
decl_stmt|;
name|Integer
name|childLimit
init|=
literal|null
decl_stmt|;
name|Integer
name|parentLimit
init|=
literal|null
decl_stmt|;
name|Iterator
name|it4
init|=
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Iterator
name|it5
init|=
name|limits
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|String
name|subpartKey2
init|=
literal|null
decl_stmt|;
comment|// validate that child class limits are>= parent limit
for|for
control|(
init|;
name|it4
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|parentKey1
operator|=
operator|(
name|String
operator|)
name|it4
operator|.
name|next
argument_list|()
expr_stmt|;
name|parentLimit
operator|=
operator|new
name|Integer
argument_list|(
operator|(
name|String
operator|)
name|it5
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|childClassLimits
operator|.
name|get
argument_list|(
name|parentKey1
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|subpartLimits
operator|=
operator|(
name|HashMap
operator|)
name|childClassLimits
operator|.
name|get
argument_list|(
name|parentKey1
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|it
init|=
name|subpartLimits
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|subpartKey2
operator|=
operator|(
name|String
operator|)
name|it
operator|.
name|next
argument_list|()
expr_stmt|;
name|childLimit
operator|=
operator|(
name|Integer
operator|)
name|subpartLimits
operator|.
name|get
argument_list|(
name|subpartKey2
argument_list|)
expr_stmt|;
if|if
condition|(
name|parentLimit
operator|!=
literal|null
operator|&&
name|childLimit
operator|.
name|intValue
argument_list|()
operator|<
name|parentLimit
operator|.
name|intValue
argument_list|()
condition|)
block|{
name|childClassesUnderLimit
operator|.
name|put
argument_list|(
name|parentKey1
argument_list|,
name|subpartKey2
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
comment|// mark classes that are in error and build error messages
if|if
condition|(
name|childClassesUnderLimit
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
name|errorName
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|errorMessage
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|childClassesUnderLimit
operator|.
name|size
argument_list|()
operator|>
literal|0
operator|)
condition|)
block|{
name|Iterator
name|it6
init|=
name|this
operator|.
name|getParentClassIds
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Iterator
name|it7
init|=
name|this
operator|.
name|getSubpartIds
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|String
name|subpartId
init|=
literal|null
decl_stmt|;
name|String
name|parentId
init|=
literal|null
decl_stmt|;
name|int
name|index
init|=
literal|0
decl_stmt|;
for|for
control|(
init|;
name|it6
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|parentId
operator|=
operator|(
name|String
operator|)
name|it6
operator|.
name|next
argument_list|()
expr_stmt|;
name|subpartId
operator|=
operator|(
name|String
operator|)
name|it7
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
operator|(
operator|(
name|Boolean
operator|)
name|this
operator|.
name|getClassHasErrors
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
operator|)
operator|.
name|booleanValue
argument_list|()
condition|)
block|{
if|if
condition|(
name|childClassesUnderLimit
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
name|parentId
argument_list|)
operator|&&
name|subpartId
operator|.
name|equals
argument_list|(
operator|(
name|String
operator|)
name|childClassesUnderLimit
operator|.
name|get
argument_list|(
name|parentId
argument_list|)
argument_list|)
condition|)
block|{
name|this
operator|.
name|getClassHasErrors
argument_list|()
operator|.
name|set
argument_list|(
name|index
argument_list|,
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|index
operator|++
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|validateSubpartClassLimits
parameter_list|(
name|ActionErrors
name|errors
parameter_list|)
block|{
name|int
name|limit
init|=
name|getInstrOffrConfigLimit
argument_list|()
operator|.
name|intValue
argument_list|()
decl_stmt|;
name|HashMap
name|subpartClassLimits
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|Iterator
name|it1
init|=
name|this
operator|.
name|getSubpartIds
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Iterator
name|it2
init|=
name|this
operator|.
name|getMaxClassLimits
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Iterator
name|it3
init|=
name|this
operator|.
name|getParentClassIds
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|String
name|subpartKey
init|=
literal|null
decl_stmt|;
name|String
name|parentKey
init|=
literal|null
decl_stmt|;
name|int
name|value1
decl_stmt|;
name|int
name|clsLimit
decl_stmt|;
name|String
name|tmp
init|=
literal|null
decl_stmt|;
for|for
control|(
init|;
name|it1
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|subpartKey
operator|=
operator|(
name|String
operator|)
name|it1
operator|.
name|next
argument_list|()
expr_stmt|;
name|tmp
operator|=
operator|(
name|String
operator|)
name|it2
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|tmp
operator|!=
literal|null
operator|&&
name|tmp
operator|.
name|length
argument_list|()
operator|!=
literal|0
condition|)
name|clsLimit
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|tmp
argument_list|)
expr_stmt|;
else|else
name|clsLimit
operator|=
literal|0
expr_stmt|;
name|parentKey
operator|=
operator|(
name|String
operator|)
name|it3
operator|.
name|next
argument_list|()
expr_stmt|;
comment|// calculate total limit for subparts
if|if
condition|(
name|parentKey
operator|==
literal|null
operator|||
name|parentKey
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
if|if
condition|(
name|subpartClassLimits
operator|.
name|get
argument_list|(
name|subpartKey
argument_list|)
operator|==
literal|null
condition|)
name|value1
operator|=
literal|0
expr_stmt|;
else|else
name|value1
operator|=
operator|(
operator|(
name|Integer
operator|)
name|subpartClassLimits
operator|.
name|get
argument_list|(
name|subpartKey
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
expr_stmt|;
name|value1
operator|+=
name|clsLimit
expr_stmt|;
name|subpartClassLimits
operator|.
name|put
argument_list|(
name|subpartKey
argument_list|,
operator|new
name|Integer
argument_list|(
name|value1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|HashSet
name|subpartsUnderLimit
init|=
operator|new
name|HashSet
argument_list|()
decl_stmt|;
name|String
name|subpartKey1
init|=
literal|null
decl_stmt|;
name|Integer
name|subpartLimit
init|=
literal|null
decl_stmt|;
comment|// validate that subpart limits are>= config limit
for|for
control|(
name|Iterator
name|it4
init|=
name|subpartClassLimits
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|it4
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|subpartKey1
operator|=
name|it4
operator|.
name|next
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|subpartLimit
operator|=
operator|(
name|Integer
operator|)
name|subpartClassLimits
operator|.
name|get
argument_list|(
name|subpartKey1
argument_list|)
expr_stmt|;
if|if
condition|(
name|subpartLimit
operator|!=
literal|null
operator|&&
name|subpartLimit
operator|.
name|intValue
argument_list|()
operator|<
name|limit
condition|)
block|{
name|subpartsUnderLimit
operator|.
name|add
argument_list|(
name|subpartKey1
argument_list|)
expr_stmt|;
block|}
block|}
comment|// mark classes that are in error and build error messages
if|if
condition|(
name|subpartsUnderLimit
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|getDisplayMaxLimit
argument_list|()
operator|.
name|booleanValue
argument_list|()
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"maxLimit"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorMaxLimitsTotalTooLow
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"maxLimit"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorLimitsForTopLevelClassesTooLow
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|(
name|subpartsUnderLimit
operator|.
name|size
argument_list|()
operator|>
literal|0
operator|)
condition|)
block|{
name|Iterator
name|it7
init|=
name|this
operator|.
name|getSubpartIds
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|String
name|subpartId
init|=
literal|null
decl_stmt|;
name|int
name|index
init|=
literal|0
decl_stmt|;
for|for
control|(
init|;
name|it7
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|subpartId
operator|=
operator|(
name|String
operator|)
name|it7
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
operator|(
operator|(
name|Boolean
operator|)
name|this
operator|.
name|getClassHasErrors
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
operator|)
operator|.
name|booleanValue
argument_list|()
condition|)
block|{
if|if
condition|(
name|subpartsUnderLimit
operator|.
name|contains
argument_list|(
name|subpartId
argument_list|)
condition|)
block|{
name|this
operator|.
name|getClassHasErrors
argument_list|()
operator|.
name|set
argument_list|(
name|index
argument_list|,
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|index
operator|++
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|initClassHasErrorsToFalse
parameter_list|()
block|{
name|this
operator|.
name|setClassHasErrors
argument_list|(
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|it
init|=
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|this
operator|.
name|getClassHasErrors
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|it
operator|.
name|next
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|initClassMoveDirections
parameter_list|()
block|{
name|this
operator|.
name|setClassCanMoveDown
argument_list|(
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|setClassCanMoveUp
argument_list|(
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|it
init|=
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|this
operator|.
name|getClassCanMoveDown
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getClassCanMoveUp
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|it
operator|.
name|next
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|validateClassLimits
parameter_list|(
name|ActionErrors
name|errors
parameter_list|)
block|{
name|int
name|limit
init|=
name|getInstrOffrConfigLimit
argument_list|()
operator|.
name|intValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|limit
operator|>
literal|0
condition|)
block|{
name|initClassHasErrorsToFalse
argument_list|()
expr_stmt|;
name|validateMinLessThanMaxClassLimits
argument_list|(
name|errors
argument_list|)
expr_stmt|;
name|validateMinOrMaxParentClassLimits
argument_list|(
name|errors
argument_list|,
name|this
operator|.
name|getMaxClassLimits
argument_list|()
argument_list|,
literal|"maxLimit"
argument_list|,
operator|(
operator|(
name|getDisplayMaxLimit
argument_list|()
operator|.
name|booleanValue
argument_list|()
operator|)
condition|?
name|MSG
operator|.
name|errorTotalMaxChildrenAtLeastMaxParent
argument_list|()
else|:
name|MSG
operator|.
name|errorLimitsChildClasses
argument_list|()
operator|)
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"true"
operator|.
name|equals
argument_list|(
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"unitime.instrOfferingConfig.checkConfigLimit"
argument_list|,
literal|"true"
argument_list|)
argument_list|)
condition|)
name|validateSubpartClassLimits
argument_list|(
name|errors
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**       * Method reset      * @param mapping      * @param request      */
specifier|public
name|void
name|reset
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|instrOfferingId
operator|=
literal|null
expr_stmt|;
name|instrOffrConfigLimit
operator|=
literal|null
expr_stmt|;
name|instrOffrConfigId
operator|=
literal|null
expr_stmt|;
name|instrOfferingName
operator|=
literal|""
expr_stmt|;
name|origSubparts
operator|=
literal|""
expr_stmt|;
name|displayMaxLimit
operator|=
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|displayOptionForMaxLimit
operator|=
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|displayEnrollment
operator|=
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|displayDisplayInstructors
operator|=
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|displayEnabledForStudentScheduling
operator|=
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|displayExternalId
operator|=
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|enableAllClassesForStudentScheduling
operator|=
literal|""
expr_stmt|;
name|displayAllClassesInstructors
operator|=
literal|""
expr_stmt|;
name|resetLists
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|resetLists
parameter_list|()
block|{
name|classIds
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|subpartIds
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|itypes
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|mustHaveChildClasses
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|parentClassIds
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|readOnlyClasses
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|classHasErrors
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|classLabels
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|classLabelIndents
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|enrollments
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|minClassLimits
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|maxClassLimits
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|roomRatios
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|numberOfRooms
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|departments
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|datePatterns
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|displayInstructors
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|enabledForStudentScheduling
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|subtotalIndexes
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|subtotalLabels
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|subtotalValues
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|enableAllClassesForStudentSchedulingForSubpart
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|displayAllClassesInstructorsForSubpart
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|classCanMoveUp
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|classCanMoveDown
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|readOnlySubparts
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|times
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|rooms
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|instructors
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|externalIds
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
block|}
comment|//    private int numberOfClassesOfSubpartWithParentClassId(String parentClassId, String classSubpartId){
comment|//    	if (parentClassId == null || parentClassId.length() == 0 ||
comment|//    		classSubpartId == null || classSubpartId.length() == 0) {
comment|//    		return(0);
comment|//    	}
comment|//    	int count = 0;
comment|//    	Iterator it1 = this.getParentClassIds().iterator();
comment|//    	Iterator it2 = this.getSubpartIds().iterator();
comment|//    	String parentId = null;
comment|//    	String subpartId = null;
comment|//
comment|//    	while(it1.hasNext()){
comment|//    		parentId = (String) it1.next();
comment|//    		subpartId = (String) it2.next();
comment|//    		if (parentId == null || parentId.length() == 0){
comment|//    			continue;
comment|//    		}
comment|//    		if (subpartId == null || subpartId.length() == 0){
comment|//    			continue;
comment|//    		}
comment|//    		if (parentClassId.equals(parentId)&& classSubpartId.equals(subpartId)){
comment|//    			count++;
comment|//    		}
comment|//    	}
comment|//    	return(count);
comment|//    }
specifier|private
name|void
name|setClassCannotMove
parameter_list|(
name|int
name|classIndex
parameter_list|)
block|{
name|this
operator|.
name|getClassCanMoveDown
argument_list|()
operator|.
name|set
argument_list|(
name|classIndex
argument_list|,
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getClassCanMoveUp
argument_list|()
operator|.
name|set
argument_list|(
name|classIndex
argument_list|,
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDirectionsClassesCanMove
parameter_list|()
block|{
name|String
name|parentClassId
init|=
literal|null
decl_stmt|;
name|String
name|classItype
init|=
literal|null
decl_stmt|;
name|int
name|parentClassIndex
decl_stmt|;
name|String
name|parentSubpartId
init|=
literal|null
decl_stmt|;
name|String
name|parentClassItype
init|=
literal|null
decl_stmt|;
name|int
name|lowestParentSubpartIdIndex
decl_stmt|;
name|int
name|highestParentSubpartIdIndex
decl_stmt|;
name|initClassMoveDirections
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|classIndex
init|=
literal|0
init|;
name|classIndex
operator|<
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|classIndex
operator|++
control|)
block|{
name|parentClassId
operator|=
operator|(
name|String
operator|)
name|this
operator|.
name|getParentClassIds
argument_list|()
operator|.
name|get
argument_list|(
name|classIndex
argument_list|)
expr_stmt|;
if|if
condition|(
name|parentClassId
operator|==
literal|null
operator|||
name|parentClassId
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|setClassCannotMove
argument_list|(
name|classIndex
argument_list|)
expr_stmt|;
continue|continue;
block|}
name|parentClassIndex
operator|=
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|indexOf
argument_list|(
name|parentClassId
argument_list|)
expr_stmt|;
if|if
condition|(
name|parentClassIndex
operator|<
literal|0
condition|)
block|{
name|setClassCannotMove
argument_list|(
name|classIndex
argument_list|)
expr_stmt|;
continue|continue;
block|}
name|classItype
operator|=
operator|(
name|String
operator|)
name|this
operator|.
name|getItypes
argument_list|()
operator|.
name|get
argument_list|(
name|classIndex
argument_list|)
expr_stmt|;
name|parentClassItype
operator|=
operator|(
name|String
operator|)
name|this
operator|.
name|getItypes
argument_list|()
operator|.
name|get
argument_list|(
name|parentClassIndex
argument_list|)
expr_stmt|;
if|if
condition|(
name|classItype
operator|!=
literal|null
operator|&&
name|parentClassItype
operator|!=
literal|null
operator|&&
name|classItype
operator|.
name|equals
argument_list|(
name|parentClassItype
argument_list|)
condition|)
block|{
name|setClassCannotMove
argument_list|(
name|classIndex
argument_list|)
expr_stmt|;
continue|continue;
block|}
name|parentSubpartId
operator|=
operator|(
name|String
operator|)
name|this
operator|.
name|getSubpartIds
argument_list|()
operator|.
name|get
argument_list|(
name|parentClassIndex
argument_list|)
expr_stmt|;
if|if
condition|(
name|parentSubpartId
operator|==
literal|null
operator|||
name|parentSubpartId
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|setClassCannotMove
argument_list|(
name|classIndex
argument_list|)
expr_stmt|;
continue|continue;
block|}
name|lowestParentSubpartIdIndex
operator|=
name|this
operator|.
name|getSubpartIds
argument_list|()
operator|.
name|indexOf
argument_list|(
name|parentSubpartId
argument_list|)
expr_stmt|;
if|if
condition|(
name|lowestParentSubpartIdIndex
operator|<
name|parentClassIndex
condition|)
block|{
name|this
operator|.
name|getClassCanMoveUp
argument_list|()
operator|.
name|set
argument_list|(
name|classIndex
argument_list|,
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|highestParentSubpartIdIndex
operator|=
name|this
operator|.
name|getSubpartIds
argument_list|()
operator|.
name|lastIndexOf
argument_list|(
name|parentSubpartId
argument_list|)
expr_stmt|;
if|if
condition|(
name|highestParentSubpartIdIndex
operator|>
name|parentClassIndex
condition|)
block|{
name|this
operator|.
name|getClassCanMoveDown
argument_list|()
operator|.
name|set
argument_list|(
name|classIndex
argument_list|,
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|initializeOrigSubparts
parameter_list|()
block|{
name|TreeSet
name|ts
init|=
operator|new
name|TreeSet
argument_list|()
decl_stmt|;
for|for
control|(
name|Iterator
name|it
init|=
name|this
operator|.
name|getSubpartIds
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|ts
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|it
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|StringBuffer
name|sb
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|boolean
name|first
init|=
literal|true
decl_stmt|;
for|for
control|(
name|Iterator
name|it
init|=
name|ts
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
if|if
condition|(
operator|!
name|first
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|","
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|first
operator|=
literal|false
expr_stmt|;
block|}
name|sb
operator|.
name|append
argument_list|(
operator|(
name|String
operator|)
name|it
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|setOrigSubparts
argument_list|(
name|sb
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|initializeEnableAllClassesForStudentScheduling
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|getClassLabels
argument_list|()
operator|.
name|size
argument_list|()
operator|>
name|this
operator|.
name|getEnabledForStudentScheduling
argument_list|()
operator|.
name|size
argument_list|()
condition|)
block|{
name|setEnableAllClassesForStudentScheduling
argument_list|(
literal|"false"
argument_list|)
expr_stmt|;
return|return;
block|}
name|String
name|display
init|=
literal|"true"
decl_stmt|;
for|for
control|(
name|Iterator
name|it
init|=
name|this
operator|.
name|getEnabledForStudentScheduling
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|value
init|=
operator|(
name|String
operator|)
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
operator|||
operator|(
operator|!
name|value
operator|.
name|equals
argument_list|(
literal|"on"
argument_list|)
operator|&&
operator|!
operator|(
name|Boolean
operator|.
name|parseBoolean
argument_list|(
name|value
argument_list|)
operator|)
operator|)
condition|)
block|{
name|display
operator|=
literal|"false"
expr_stmt|;
break|break;
block|}
block|}
name|setEnableAllClassesForStudentScheduling
argument_list|(
name|display
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|initializeDisplayAllClassInstructors
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|getClassLabels
argument_list|()
operator|.
name|size
argument_list|()
operator|>
name|this
operator|.
name|getDisplayInstructors
argument_list|()
operator|.
name|size
argument_list|()
condition|)
block|{
name|setDisplayAllClassesInstructors
argument_list|(
literal|"false"
argument_list|)
expr_stmt|;
return|return;
block|}
name|String
name|display
init|=
literal|"true"
decl_stmt|;
for|for
control|(
name|Iterator
name|it
init|=
name|this
operator|.
name|getDisplayInstructors
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|value
init|=
operator|(
name|String
operator|)
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
operator|||
operator|(
operator|!
name|value
operator|.
name|equals
argument_list|(
literal|"on"
argument_list|)
operator|&&
operator|!
operator|(
name|Boolean
operator|.
name|parseBoolean
argument_list|(
name|value
argument_list|)
operator|)
operator|)
condition|)
block|{
name|display
operator|=
literal|"false"
expr_stmt|;
break|break;
block|}
block|}
name|setDisplayAllClassesInstructors
argument_list|(
name|display
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|initalizeSubpartSubtotalsAndDisplayFlags
parameter_list|()
block|{
name|HashMap
name|subpartToIndex
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|this
operator|.
name|setSubtotalIndexes
argument_list|(
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|setSubtotalLabels
argument_list|(
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|setSubtotalValues
argument_list|(
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|setEnableAllClassesForStudentSchedulingForSubpart
argument_list|(
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|setDisplayAllClassesInstructorsForSubpart
argument_list|(
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|setReadOnlySubparts
argument_list|(
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
argument_list|)
expr_stmt|;
name|SchedulingSubpartDAO
name|ssDao
init|=
operator|new
name|SchedulingSubpartDAO
argument_list|()
decl_stmt|;
name|SchedulingSubpart
name|ss
init|=
literal|null
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
name|int
name|cnt
init|=
literal|0
decl_stmt|;
name|Iterator
name|ssIt
init|=
name|this
operator|.
name|getSubpartIds
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Iterator
name|limitIt
init|=
name|this
operator|.
name|getMinClassLimits
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Boolean
name|enableForScheduling
init|=
literal|null
decl_stmt|;
name|Boolean
name|displayInstructor
init|=
literal|null
decl_stmt|;
name|Boolean
name|readOnlySubpart
init|=
literal|null
decl_stmt|;
while|while
condition|(
name|ssIt
operator|.
name|hasNext
argument_list|()
operator|&&
name|limitIt
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Long
name|subpartId
init|=
name|Long
operator|.
name|valueOf
argument_list|(
operator|(
name|String
operator|)
name|ssIt
operator|.
name|next
argument_list|()
argument_list|)
decl_stmt|;
name|Integer
name|limit
init|=
operator|new
name|Integer
argument_list|(
operator|(
name|String
operator|)
name|limitIt
operator|.
name|next
argument_list|()
argument_list|)
decl_stmt|;
name|enableForScheduling
operator|=
operator|new
name|Boolean
argument_list|(
name|determineBooleanValueAtIndex
argument_list|(
name|this
operator|.
name|getEnabledForStudentScheduling
argument_list|()
argument_list|,
name|cnt
argument_list|)
argument_list|)
expr_stmt|;
name|displayInstructor
operator|=
operator|new
name|Boolean
argument_list|(
name|determineBooleanValueAtIndex
argument_list|(
name|this
operator|.
name|getDisplayInstructors
argument_list|()
argument_list|,
name|cnt
argument_list|)
argument_list|)
expr_stmt|;
name|readOnlySubpart
operator|=
operator|new
name|Boolean
argument_list|(
name|determineBooleanValueAtIndex
argument_list|(
name|this
operator|.
name|getReadOnlyClasses
argument_list|()
argument_list|,
name|cnt
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|addLimit
init|=
operator|(
name|limit
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|limit
operator|.
name|intValue
argument_list|()
decl_stmt|;
name|Integer
name|subtotalIndex
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|!
name|subpartToIndex
operator|.
name|containsKey
argument_list|(
name|subpartId
argument_list|)
condition|)
block|{
name|ss
operator|=
name|ssDao
operator|.
name|get
argument_list|(
name|subpartId
argument_list|)
expr_stmt|;
name|getSubtotalValues
argument_list|()
operator|.
name|add
argument_list|(
name|addLimit
argument_list|)
expr_stmt|;
name|getEnableAllClassesForStudentSchedulingForSubpart
argument_list|()
operator|.
name|add
argument_list|(
name|enableForScheduling
argument_list|)
expr_stmt|;
name|getDisplayAllClassesInstructorsForSubpart
argument_list|()
operator|.
name|add
argument_list|(
name|displayInstructor
argument_list|)
expr_stmt|;
name|getReadOnlySubparts
argument_list|()
operator|.
name|add
argument_list|(
name|readOnlySubpart
argument_list|)
expr_stmt|;
name|String
name|label
init|=
name|ss
operator|.
name|getItypeDesc
argument_list|()
operator|+
name|ss
operator|.
name|getSchedulingSubpartSuffix
argument_list|()
decl_stmt|;
name|getSubtotalLabels
argument_list|()
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|subpartToIndex
operator|.
name|put
argument_list|(
name|subpartId
argument_list|,
operator|new
name|Integer
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|subtotalIndex
operator|=
operator|new
name|Integer
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|i
operator|++
expr_stmt|;
block|}
else|else
block|{
name|subtotalIndex
operator|=
operator|(
name|Integer
operator|)
name|subpartToIndex
operator|.
name|get
argument_list|(
name|subpartId
argument_list|)
expr_stmt|;
name|int
name|oldSubtotal
init|=
operator|(
operator|(
name|Integer
operator|)
name|this
operator|.
name|getSubtotalValues
argument_list|()
operator|.
name|get
argument_list|(
name|subtotalIndex
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
decl_stmt|;
name|int
name|newSubtotal
init|=
name|oldSubtotal
operator|+
name|addLimit
decl_stmt|;
name|this
operator|.
name|getSubtotalValues
argument_list|()
operator|.
name|set
argument_list|(
name|subtotalIndex
operator|.
name|intValue
argument_list|()
argument_list|,
name|newSubtotal
argument_list|)
expr_stmt|;
name|boolean
name|oldEnableForScheduling
init|=
operator|(
operator|(
name|Boolean
operator|)
name|this
operator|.
name|getEnableAllClassesForStudentSchedulingForSubpart
argument_list|()
operator|.
name|get
argument_list|(
name|subtotalIndex
argument_list|)
operator|)
operator|.
name|booleanValue
argument_list|()
decl_stmt|;
name|boolean
name|newEnableForScheduling
init|=
name|oldEnableForScheduling
operator|&&
name|enableForScheduling
operator|.
name|booleanValue
argument_list|()
decl_stmt|;
name|this
operator|.
name|getEnableAllClassesForStudentSchedulingForSubpart
argument_list|()
operator|.
name|set
argument_list|(
name|subtotalIndex
argument_list|,
operator|new
name|Boolean
argument_list|(
name|newEnableForScheduling
argument_list|)
argument_list|)
expr_stmt|;
name|boolean
name|oldDisplayInstructor
init|=
operator|(
operator|(
name|Boolean
operator|)
name|this
operator|.
name|getDisplayAllClassesInstructorsForSubpart
argument_list|()
operator|.
name|get
argument_list|(
name|subtotalIndex
argument_list|)
operator|)
operator|.
name|booleanValue
argument_list|()
decl_stmt|;
name|boolean
name|newDisplayInstructor
init|=
name|oldDisplayInstructor
operator|&&
name|displayInstructor
operator|.
name|booleanValue
argument_list|()
decl_stmt|;
name|this
operator|.
name|getDisplayAllClassesInstructorsForSubpart
argument_list|()
operator|.
name|set
argument_list|(
name|subtotalIndex
argument_list|,
name|newDisplayInstructor
argument_list|)
expr_stmt|;
name|boolean
name|oldReadOnlySubpart
init|=
operator|(
operator|(
name|Boolean
operator|)
name|this
operator|.
name|getReadOnlySubparts
argument_list|()
operator|.
name|get
argument_list|(
name|subtotalIndex
argument_list|)
operator|)
operator|.
name|booleanValue
argument_list|()
decl_stmt|;
name|boolean
name|newReadOnlySubpart
init|=
name|oldReadOnlySubpart
operator|&&
name|readOnlySubpart
operator|.
name|booleanValue
argument_list|()
decl_stmt|;
name|this
operator|.
name|getReadOnlySubparts
argument_list|()
operator|.
name|set
argument_list|(
name|subtotalIndex
argument_list|,
name|newReadOnlySubpart
argument_list|)
expr_stmt|;
block|}
name|getSubtotalIndexes
argument_list|()
operator|.
name|add
argument_list|(
name|subtotalIndex
argument_list|)
expr_stmt|;
name|cnt
operator|++
expr_stmt|;
block|}
block|}
specifier|private
name|boolean
name|determineBooleanValueAtIndex
parameter_list|(
name|List
name|l
parameter_list|,
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|l
operator|==
literal|null
condition|)
block|{
return|return
operator|(
literal|false
operator|)
return|;
block|}
if|if
condition|(
name|l
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return
operator|(
literal|false
operator|)
return|;
block|}
if|if
condition|(
name|l
operator|.
name|size
argument_list|()
operator|<
operator|(
name|index
operator|+
literal|1
operator|)
condition|)
block|{
return|return
operator|(
literal|false
operator|)
return|;
block|}
if|if
condition|(
name|l
operator|.
name|get
argument_list|(
name|index
argument_list|)
operator|==
literal|null
condition|)
block|{
return|return
operator|(
literal|false
operator|)
return|;
block|}
if|if
condition|(
name|l
operator|.
name|get
argument_list|(
name|index
argument_list|)
operator|instanceof
name|Boolean
condition|)
block|{
name|Boolean
name|value
init|=
operator|(
name|Boolean
operator|)
name|l
operator|.
name|get
argument_list|(
name|index
argument_list|)
decl_stmt|;
return|return
operator|(
name|value
operator|.
name|booleanValue
argument_list|()
operator|)
return|;
block|}
if|if
condition|(
name|l
operator|.
name|get
argument_list|(
name|index
argument_list|)
operator|instanceof
name|String
condition|)
block|{
name|String
name|str_value
init|=
operator|(
name|String
operator|)
name|l
operator|.
name|get
argument_list|(
name|index
argument_list|)
decl_stmt|;
if|if
condition|(
name|str_value
operator|.
name|equals
argument_list|(
literal|"on"
argument_list|)
condition|)
block|{
return|return
operator|(
literal|true
operator|)
return|;
block|}
if|else if
condition|(
name|str_value
operator|.
name|equals
argument_list|(
literal|"yes"
argument_list|)
condition|)
block|{
return|return
operator|(
literal|true
operator|)
return|;
block|}
else|else
block|{
return|return
operator|(
name|Boolean
operator|.
name|parseBoolean
argument_list|(
name|str_value
argument_list|)
operator|)
return|;
block|}
block|}
return|return
operator|(
literal|false
operator|)
return|;
block|}
specifier|public
name|List
name|getClassIds
parameter_list|()
block|{
return|return
name|classIds
return|;
block|}
specifier|public
name|void
name|setClassIds
parameter_list|(
name|List
name|classIds
parameter_list|)
block|{
name|this
operator|.
name|classIds
operator|=
name|classIds
expr_stmt|;
block|}
specifier|public
name|List
name|getClassHasErrors
parameter_list|()
block|{
return|return
name|classHasErrors
return|;
block|}
specifier|public
name|void
name|setClassHasErrors
parameter_list|(
name|List
name|classHasErrors
parameter_list|)
block|{
name|this
operator|.
name|classHasErrors
operator|=
name|classHasErrors
expr_stmt|;
block|}
specifier|public
name|List
name|getClassLabels
parameter_list|()
block|{
return|return
name|classLabels
return|;
block|}
specifier|public
name|void
name|setClassLabels
parameter_list|(
name|List
name|classLabels
parameter_list|)
block|{
name|this
operator|.
name|classLabels
operator|=
name|classLabels
expr_stmt|;
block|}
specifier|public
name|List
name|getMinClassLimits
parameter_list|()
block|{
return|return
name|minClassLimits
return|;
block|}
specifier|public
name|void
name|setMinClassLimits
parameter_list|(
name|List
name|classLimits
parameter_list|)
block|{
name|this
operator|.
name|minClassLimits
operator|=
name|classLimits
expr_stmt|;
block|}
specifier|public
name|List
name|getDatePatterns
parameter_list|()
block|{
return|return
name|datePatterns
return|;
block|}
specifier|public
name|void
name|setDatePatterns
parameter_list|(
name|List
name|datePatterns
parameter_list|)
block|{
name|this
operator|.
name|datePatterns
operator|=
name|datePatterns
expr_stmt|;
block|}
specifier|public
name|Long
name|getInstrOffrConfigId
parameter_list|()
block|{
return|return
name|instrOffrConfigId
return|;
block|}
specifier|public
name|void
name|setInstrOffrConfigId
parameter_list|(
name|Long
name|instrOffrConfigId
parameter_list|)
block|{
name|this
operator|.
name|instrOffrConfigId
operator|=
name|instrOffrConfigId
expr_stmt|;
block|}
specifier|public
name|Integer
name|getInstrOffrConfigLimit
parameter_list|()
block|{
return|return
name|instrOffrConfigLimit
return|;
block|}
specifier|public
name|void
name|setInstrOffrConfigLimit
parameter_list|(
name|Integer
name|instrOffrConfigLimit
parameter_list|)
block|{
name|this
operator|.
name|instrOffrConfigLimit
operator|=
name|instrOffrConfigLimit
expr_stmt|;
block|}
specifier|public
name|List
name|getDepartments
parameter_list|()
block|{
return|return
name|departments
return|;
block|}
specifier|public
name|void
name|setDepartments
parameter_list|(
name|List
name|managers
parameter_list|)
block|{
name|this
operator|.
name|departments
operator|=
name|managers
expr_stmt|;
block|}
specifier|public
name|List
name|getNumberOfRooms
parameter_list|()
block|{
return|return
name|numberOfRooms
return|;
block|}
specifier|public
name|void
name|setNumberOfRooms
parameter_list|(
name|List
name|numberOfRooms
parameter_list|)
block|{
name|this
operator|.
name|numberOfRooms
operator|=
name|numberOfRooms
expr_stmt|;
block|}
specifier|public
name|String
name|getOp
parameter_list|()
block|{
return|return
name|op
return|;
block|}
specifier|public
name|void
name|setOp
parameter_list|(
name|String
name|op
parameter_list|)
block|{
name|this
operator|.
name|op
operator|=
name|op
expr_stmt|;
block|}
specifier|public
name|List
name|getParentClassIds
parameter_list|()
block|{
return|return
name|parentClassIds
return|;
block|}
specifier|public
name|void
name|setParentClassIds
parameter_list|(
name|List
name|parentClassIds
parameter_list|)
block|{
name|this
operator|.
name|parentClassIds
operator|=
name|parentClassIds
expr_stmt|;
block|}
specifier|public
name|List
name|getMaxClassLimits
parameter_list|()
block|{
return|return
name|maxClassLimits
return|;
block|}
specifier|public
name|void
name|setMaxClassLimits
parameter_list|(
name|List
name|roomLimits
parameter_list|)
block|{
name|this
operator|.
name|maxClassLimits
operator|=
name|roomLimits
expr_stmt|;
block|}
specifier|public
name|List
name|getSubpartIds
parameter_list|()
block|{
return|return
name|subpartIds
return|;
block|}
specifier|public
name|void
name|setSubpartIds
parameter_list|(
name|List
name|subpartIds
parameter_list|)
block|{
name|this
operator|.
name|subpartIds
operator|=
name|subpartIds
expr_stmt|;
block|}
specifier|public
name|List
name|getReadOnlyClasses
parameter_list|()
block|{
return|return
name|readOnlyClasses
return|;
block|}
specifier|public
name|void
name|setReadOnlyClasses
parameter_list|(
name|List
name|readOnlyClasses
parameter_list|)
block|{
name|this
operator|.
name|readOnlyClasses
operator|=
name|readOnlyClasses
expr_stmt|;
block|}
specifier|public
name|Long
name|getInstrOfferingId
parameter_list|()
block|{
return|return
name|instrOfferingId
return|;
block|}
specifier|public
name|void
name|setInstrOfferingId
parameter_list|(
name|Long
name|instrOfferingId
parameter_list|)
block|{
name|this
operator|.
name|instrOfferingId
operator|=
name|instrOfferingId
expr_stmt|;
block|}
specifier|public
name|Long
name|getAddTemplateClassId
parameter_list|()
block|{
return|return
name|addTemplateClassId
return|;
block|}
specifier|public
name|void
name|setAddTemplateClassId
parameter_list|(
name|Long
name|addTemplateClassId
parameter_list|)
block|{
name|this
operator|.
name|addTemplateClassId
operator|=
name|addTemplateClassId
expr_stmt|;
block|}
specifier|public
name|void
name|removeFromClasses
parameter_list|(
name|String
name|classId
parameter_list|)
block|{
name|removeClass
argument_list|(
name|classId
argument_list|)
expr_stmt|;
name|initClassHasErrorsToFalse
argument_list|()
expr_stmt|;
name|setDirectionsClassesCanMove
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|removeClass
parameter_list|(
name|String
name|classId
parameter_list|)
block|{
name|ArrayList
name|classesToDel
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|Iterator
name|it1
init|=
name|this
operator|.
name|classIds
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it2
init|=
name|this
operator|.
name|subpartIds
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it3
init|=
name|this
operator|.
name|parentClassIds
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it4
init|=
name|this
operator|.
name|readOnlyClasses
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it5
init|=
name|this
operator|.
name|minClassLimits
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it6
init|=
name|this
operator|.
name|departments
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it7
init|=
name|this
operator|.
name|datePatterns
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it8
init|=
name|this
operator|.
name|numberOfRooms
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it9
init|=
name|this
operator|.
name|maxClassLimits
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it10
init|=
name|this
operator|.
name|roomRatios
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it11
init|=
name|this
operator|.
name|classLabels
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it12
init|=
name|this
operator|.
name|classLabelIndents
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it13
init|=
name|this
operator|.
name|displayInstructors
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it14
init|=
name|this
operator|.
name|enabledForStudentScheduling
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it15
init|=
name|this
operator|.
name|itypes
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it16
init|=
name|this
operator|.
name|mustHaveChildClasses
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it17
init|=
name|this
operator|.
name|enrollments
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it18
init|=
name|this
operator|.
name|times
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it19
init|=
name|this
operator|.
name|rooms
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it20
init|=
name|this
operator|.
name|instructors
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|Iterator
name|it21
init|=
name|this
operator|.
name|externalIds
operator|.
name|listIterator
argument_list|()
decl_stmt|;
name|boolean
name|canRemoveFromDisplayInstructors
decl_stmt|;
name|boolean
name|canRemoveFromEnableForStudentScheduling
decl_stmt|;
name|boolean
name|canRemoveFromEnrollment
decl_stmt|;
for|for
control|(
init|;
name|it1
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|cls1
init|=
name|it1
operator|.
name|next
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|it2
operator|.
name|next
argument_list|()
expr_stmt|;
name|String
name|pCls1
init|=
name|it3
operator|.
name|next
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|it4
operator|.
name|next
argument_list|()
expr_stmt|;
name|it5
operator|.
name|next
argument_list|()
expr_stmt|;
name|it6
operator|.
name|next
argument_list|()
expr_stmt|;
name|it7
operator|.
name|next
argument_list|()
expr_stmt|;
name|it8
operator|.
name|next
argument_list|()
expr_stmt|;
name|it9
operator|.
name|next
argument_list|()
expr_stmt|;
name|it10
operator|.
name|next
argument_list|()
expr_stmt|;
name|it11
operator|.
name|next
argument_list|()
expr_stmt|;
name|it12
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|it13
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|it13
operator|.
name|next
argument_list|()
expr_stmt|;
name|canRemoveFromDisplayInstructors
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|canRemoveFromDisplayInstructors
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|it14
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|it14
operator|.
name|next
argument_list|()
expr_stmt|;
name|canRemoveFromEnableForStudentScheduling
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|canRemoveFromEnableForStudentScheduling
operator|=
literal|false
expr_stmt|;
block|}
name|it15
operator|.
name|next
argument_list|()
expr_stmt|;
name|it16
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|it17
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|it17
operator|.
name|next
argument_list|()
expr_stmt|;
name|canRemoveFromEnrollment
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|canRemoveFromEnrollment
operator|=
literal|false
expr_stmt|;
block|}
name|it18
operator|.
name|next
argument_list|()
expr_stmt|;
name|it19
operator|.
name|next
argument_list|()
expr_stmt|;
name|it20
operator|.
name|next
argument_list|()
expr_stmt|;
name|it21
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|cls1
operator|.
name|equals
argument_list|(
name|classId
argument_list|)
condition|)
block|{
name|it1
operator|.
name|remove
argument_list|()
expr_stmt|;
name|it2
operator|.
name|remove
argument_list|()
expr_stmt|;
name|it3
operator|.
name|remove
argument_list|()
expr_stmt|;
name|it4
operator|.
name|remove
argument_list|()
expr_stmt|;
name|it5
operator|.
name|remove
argument_list|()
expr_stmt|;
name|it6
operator|.
name|remove
argument_list|()
expr_stmt|;
name|it7
operator|.
name|remove
argument_list|()
expr_stmt|;
name|it8
operator|.
name|remove
argument_list|()
expr_stmt|;
name|it9
operator|.
name|remove
argument_list|()
expr_stmt|;
name|it10
operator|.
name|remove
argument_list|()
expr_stmt|;
name|it11
operator|.
name|remove
argument_list|()
expr_stmt|;
name|it12
operator|.
name|remove
argument_list|()
expr_stmt|;
if|if
condition|(
name|canRemoveFromDisplayInstructors
condition|)
name|it13
operator|.
name|remove
argument_list|()
expr_stmt|;
if|if
condition|(
name|canRemoveFromEnableForStudentScheduling
condition|)
name|it14
operator|.
name|remove
argument_list|()
expr_stmt|;
name|it15
operator|.
name|remove
argument_list|()
expr_stmt|;
name|it16
operator|.
name|remove
argument_list|()
expr_stmt|;
if|if
condition|(
name|canRemoveFromEnrollment
condition|)
block|{
name|it17
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
name|it18
operator|.
name|remove
argument_list|()
expr_stmt|;
name|it19
operator|.
name|remove
argument_list|()
expr_stmt|;
name|it20
operator|.
name|remove
argument_list|()
expr_stmt|;
name|it21
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|pCls1
operator|.
name|equals
argument_list|(
name|classId
argument_list|)
condition|)
block|{
name|classesToDel
operator|.
name|add
argument_list|(
name|cls1
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|classesToDel
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|Iterator
name|delIt
init|=
name|classesToDel
operator|.
name|iterator
argument_list|()
init|;
name|delIt
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|removeFromClasses
argument_list|(
name|delIt
operator|.
name|next
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|addToClasses
parameter_list|(
name|Class_
name|cls
parameter_list|,
name|Boolean
name|isReadOnly
parameter_list|,
name|String
name|indent
parameter_list|,
name|ClassAssignmentProxy
name|proxy
parameter_list|,
name|String
name|nameFormat
parameter_list|)
block|{
name|this
operator|.
name|classLabels
operator|.
name|add
argument_list|(
name|cls
operator|.
name|htmlLabel
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|classLabelIndents
operator|.
name|add
argument_list|(
name|indent
argument_list|)
expr_stmt|;
name|this
operator|.
name|classIds
operator|.
name|add
argument_list|(
name|cls
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|subpartIds
operator|.
name|add
argument_list|(
name|cls
operator|.
name|getSchedulingSubpart
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|itypes
operator|.
name|add
argument_list|(
name|cls
operator|.
name|getSchedulingSubpart
argument_list|()
operator|.
name|getItype
argument_list|()
operator|.
name|getItype
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|cls
operator|.
name|getSchedulingSubpart
argument_list|()
operator|.
name|getChildSubparts
argument_list|()
operator|!=
literal|null
operator|&&
name|cls
operator|.
name|getSchedulingSubpart
argument_list|()
operator|.
name|getChildSubparts
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|this
operator|.
name|mustHaveChildClasses
operator|.
name|add
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|mustHaveChildClasses
operator|.
name|add
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|readOnlyClasses
operator|.
name|add
argument_list|(
name|isReadOnly
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|classHasErrors
operator|.
name|add
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|enrollments
operator|.
name|add
argument_list|(
name|StudentClassEnrollment
operator|.
name|sessionHasEnrollments
argument_list|(
name|cls
operator|.
name|getSessionId
argument_list|()
argument_list|)
condition|?
operator|(
name|cls
operator|.
name|getEnrollment
argument_list|()
operator|==
literal|null
condition|?
literal|"0"
else|:
name|cls
operator|.
name|getEnrollment
argument_list|()
operator|.
name|toString
argument_list|()
operator|)
else|:
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|minClassLimits
operator|.
name|add
argument_list|(
name|cls
operator|.
name|getExpectedCapacity
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|numberOfRooms
operator|.
name|add
argument_list|(
name|cls
operator|.
name|getNbrRooms
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|displayInstructors
operator|.
name|add
argument_list|(
name|cls
operator|.
name|isDisplayInstructor
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|enabledForStudentScheduling
operator|.
name|add
argument_list|(
name|cls
operator|.
name|isEnabledForStudentScheduling
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|cls
operator|.
name|getMaxExpectedCapacity
argument_list|()
operator|!=
literal|null
condition|)
name|this
operator|.
name|maxClassLimits
operator|.
name|add
argument_list|(
name|cls
operator|.
name|getMaxExpectedCapacity
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|this
operator|.
name|maxClassLimits
operator|.
name|add
argument_list|(
literal|""
argument_list|)
expr_stmt|;
if|if
condition|(
name|cls
operator|.
name|getRoomRatio
argument_list|()
operator|!=
literal|null
condition|)
name|this
operator|.
name|roomRatios
operator|.
name|add
argument_list|(
name|cls
operator|.
name|getRoomRatio
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|this
operator|.
name|roomRatios
operator|.
name|add
argument_list|(
literal|""
argument_list|)
expr_stmt|;
if|if
condition|(
name|cls
operator|.
name|getParentClass
argument_list|()
operator|!=
literal|null
condition|)
name|this
operator|.
name|parentClassIds
operator|.
name|add
argument_list|(
name|cls
operator|.
name|getParentClass
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|this
operator|.
name|parentClassIds
operator|.
name|add
argument_list|(
literal|""
argument_list|)
expr_stmt|;
if|if
condition|(
name|cls
operator|.
name|getManagingDept
argument_list|()
operator|!=
literal|null
condition|)
if|if
condition|(
name|cls
operator|.
name|getManagingDept
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
name|cls
operator|.
name|getControllingDept
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
condition|)
block|{
name|this
operator|.
name|departments
operator|.
name|add
argument_list|(
literal|"-1"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|departments
operator|.
name|add
argument_list|(
name|cls
operator|.
name|getManagingDept
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
name|this
operator|.
name|departments
operator|.
name|add
argument_list|(
literal|"-1"
argument_list|)
expr_stmt|;
if|if
condition|(
name|cls
operator|.
name|getDatePattern
argument_list|()
operator|!=
literal|null
condition|)
name|this
operator|.
name|datePatterns
operator|.
name|add
argument_list|(
name|cls
operator|.
name|getDatePattern
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|this
operator|.
name|datePatterns
operator|.
name|add
argument_list|(
literal|""
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|cls
operator|.
name|getExpectedCapacity
argument_list|()
operator|!=
literal|null
operator|&&
name|cls
operator|.
name|getMaxExpectedCapacity
argument_list|()
operator|!=
literal|null
operator|&&
name|cls
operator|.
name|getExpectedCapacity
argument_list|()
operator|.
name|equals
argument_list|(
name|cls
operator|.
name|getMaxExpectedCapacity
argument_list|()
argument_list|)
operator|)
operator|||
operator|(
name|cls
operator|.
name|getExpectedCapacity
argument_list|()
operator|==
literal|null
operator|&&
name|cls
operator|.
name|getMaxExpectedCapacity
argument_list|()
operator|==
literal|null
operator|)
condition|)
block|{
comment|// leave display max limit alone.
block|}
else|else
block|{
name|setDisplayMaxLimit
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getDisplayMaxLimit
argument_list|()
operator|.
name|booleanValue
argument_list|()
condition|)
block|{
name|setDisplayOptionForMaxLimit
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|times
operator|.
name|add
argument_list|(
name|cls
operator|.
name|buildAssignedTimeHtml
argument_list|(
name|proxy
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|rooms
operator|.
name|add
argument_list|(
name|cls
operator|.
name|buildAssignedRoomHtml
argument_list|(
name|proxy
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|instructors
operator|.
name|add
argument_list|(
name|cls
operator|.
name|buildInstructorHtml
argument_list|(
name|nameFormat
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|externalIds
operator|.
name|add
argument_list|(
name|cls
operator|.
name|getClassSuffix
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|cls
operator|.
name|getClassSuffix
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|indexOfLastChildClass
parameter_list|(
name|String
name|classId
parameter_list|)
block|{
name|int
name|clsIndex
init|=
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|indexOf
argument_list|(
name|classId
argument_list|)
decl_stmt|;
name|int
name|index
init|=
name|clsIndex
operator|+
literal|1
decl_stmt|;
while|while
condition|(
name|index
operator|<
operator|(
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|size
argument_list|()
operator|)
condition|)
block|{
if|if
condition|(
name|this
operator|.
name|getClassLabelIndents
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|this
operator|.
name|getClassLabelIndents
argument_list|()
operator|.
name|get
argument_list|(
name|clsIndex
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
break|break;
block|}
else|else
block|{
if|if
condition|(
name|this
operator|.
name|getClassLabelIndents
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|length
argument_list|()
operator|<
name|this
operator|.
name|getClassLabelIndents
argument_list|()
operator|.
name|get
argument_list|(
name|clsIndex
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|length
argument_list|()
condition|)
block|{
break|break;
block|}
block|}
name|index
operator|++
expr_stmt|;
block|}
name|index
operator|--
expr_stmt|;
return|return
name|index
return|;
block|}
specifier|public
name|void
name|shiftClass
parameter_list|(
name|String
name|clsId
parameter_list|)
block|{
block|}
specifier|private
name|HashMap
name|buildOriginalListValuesMap
parameter_list|()
block|{
name|HashMap
name|hm
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|CLASS_IDS_TOKEN
argument_list|,
name|this
operator|.
name|getClassIds
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|SUBPART_IDS_TOKEN
argument_list|,
name|this
operator|.
name|getSubpartIds
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|ITYPES_TOKEN
argument_list|,
name|this
operator|.
name|getItypes
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|MUST_HAVE_CHILD_CLASSES_TOKEN
argument_list|,
name|this
operator|.
name|getMustHaveChildClasses
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|CLASS_LABELS_TOKEN
argument_list|,
name|this
operator|.
name|getClassLabels
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|CLASS_LABEL_INDENTS_TOKEN
argument_list|,
name|this
operator|.
name|getClassLabelIndents
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|PARENT_CLASS_IDS_TOKEN
argument_list|,
name|this
operator|.
name|getParentClassIds
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|READ_ONLY_CLASSES_TOKEN
argument_list|,
name|this
operator|.
name|getReadOnlyClasses
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|ENROLLMENTS_TOKEN
argument_list|,
name|this
operator|.
name|getEnrollments
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|MIN_CLASS_LIMITS_TOKEN
argument_list|,
name|this
operator|.
name|getMinClassLimits
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|MAX_CLASS_LIMITS_TOKEN
argument_list|,
name|this
operator|.
name|getMaxClassLimits
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|ROOM_RATIOS_TOKEN
argument_list|,
name|this
operator|.
name|getRoomRatios
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|NUMBER_OF_ROOMS_TOKEN
argument_list|,
name|this
operator|.
name|getNumberOfRooms
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|DEPARTMENTS_TOKEN
argument_list|,
name|this
operator|.
name|getDepartments
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|DATE_PATTERNS_TOKEN
argument_list|,
name|this
operator|.
name|getDatePatterns
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|DISPLAY_INSTRUCTORS_TOKEN
argument_list|,
name|this
operator|.
name|getDisplayInstructors
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|ENABLED_FOR_STUDENT_SCHEDULING_TOKEN
argument_list|,
name|this
operator|.
name|getEnabledForStudentScheduling
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|SUBTOTAL_INDEXES_TOKEN
argument_list|,
name|this
operator|.
name|getSubtotalIndexes
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|TIMES_TOKEN
argument_list|,
name|this
operator|.
name|getTimes
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|ROOMS_TOKEN
argument_list|,
name|this
operator|.
name|getRooms
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|INSTRUCTORS_TOKEN
argument_list|,
name|this
operator|.
name|getInstructors
argument_list|()
argument_list|)
expr_stmt|;
name|hm
operator|.
name|put
argument_list|(
name|EXTERNAL_IDS_TOKEN
argument_list|,
name|this
operator|.
name|getExternalIds
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|(
name|hm
operator|)
return|;
block|}
specifier|private
name|Object
name|getObjectFromListMapAtIndex
parameter_list|(
name|HashMap
name|hm
parameter_list|,
name|String
name|key
parameter_list|,
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|hm
operator|==
literal|null
operator|||
name|key
operator|==
literal|null
operator|||
name|key
operator|.
name|length
argument_list|()
operator|==
literal|0
operator|||
name|index
operator|<
literal|0
condition|)
block|{
return|return
operator|(
literal|null
operator|)
return|;
block|}
name|List
name|list
init|=
operator|(
name|List
operator|)
name|hm
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|list
operator|==
literal|null
operator|||
name|list
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return
operator|(
literal|null
operator|)
return|;
block|}
if|if
condition|(
name|index
operator|>=
name|list
operator|.
name|size
argument_list|()
condition|)
return|return
operator|(
literal|null
operator|)
return|;
else|else
return|return
operator|(
name|list
operator|.
name|get
argument_list|(
name|index
argument_list|)
operator|)
return|;
block|}
specifier|private
name|void
name|addToClassesFromOrigClassesIndex
parameter_list|(
name|HashMap
name|originalClassesMap
parameter_list|,
name|int
name|classIndex
parameter_list|)
block|{
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|CLASS_IDS_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getSubpartIds
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|SUBPART_IDS_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getItypes
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|ITYPES_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getMustHaveChildClasses
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|MUST_HAVE_CHILD_CLASSES_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getClassLabels
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|CLASS_LABELS_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getClassLabelIndents
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|CLASS_LABEL_INDENTS_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getParentClassIds
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|PARENT_CLASS_IDS_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getReadOnlyClasses
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|READ_ONLY_CLASSES_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getEnrollments
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|ENROLLMENTS_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getMinClassLimits
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|MIN_CLASS_LIMITS_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getMaxClassLimits
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|MAX_CLASS_LIMITS_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getRoomRatios
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|ROOM_RATIOS_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getNumberOfRooms
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|NUMBER_OF_ROOMS_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getDepartments
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|DEPARTMENTS_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getDatePatterns
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|DATE_PATTERNS_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getDisplayInstructors
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|DISPLAY_INSTRUCTORS_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getEnabledForStudentScheduling
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|ENABLED_FOR_STUDENT_SCHEDULING_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getSubtotalIndexes
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|SUBTOTAL_INDEXES_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getTimes
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|TIMES_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getRooms
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|ROOMS_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getInstructors
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|INSTRUCTORS_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getExternalIds
argument_list|()
operator|.
name|add
argument_list|(
operator|(
name|String
operator|)
name|getObjectFromListMapAtIndex
argument_list|(
name|originalClassesMap
argument_list|,
name|EXTERNAL_IDS_TOKEN
argument_list|,
name|classIndex
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addNewClassesBasedOnTemplate
parameter_list|(
name|String
name|clsId
parameter_list|)
block|{
name|int
name|addNewAfterIndex
init|=
name|indexOfLastChildClass
argument_list|(
name|clsId
argument_list|)
decl_stmt|;
name|int
name|originalListSize
init|=
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|HashMap
name|origListsMap
init|=
name|buildOriginalListValuesMap
argument_list|()
decl_stmt|;
name|this
operator|.
name|resetLists
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<=
name|addNewAfterIndex
condition|;
name|i
operator|++
control|)
block|{
name|this
operator|.
name|addToClassesFromOrigClassesIndex
argument_list|(
name|origListsMap
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
name|String
name|parentClassId
init|=
name|this
operator|.
name|getParentClassIds
argument_list|()
operator|.
name|get
argument_list|(
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|indexOf
argument_list|(
name|clsId
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|addNewClassesBasedOnTemplate
argument_list|(
name|clsId
argument_list|,
name|nextTmpClassId
argument_list|(
operator|(
name|List
operator|)
name|origListsMap
operator|.
name|get
argument_list|(
name|CLASS_IDS_TOKEN
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
operator|(
name|parentClassId
operator|.
name|length
argument_list|()
operator|==
literal|0
operator|)
condition|?
literal|null
else|:
name|parentClassId
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
operator|(
name|addNewAfterIndex
operator|+
literal|1
operator|)
init|;
name|i
operator|<
name|originalListSize
condition|;
name|i
operator|++
control|)
block|{
name|this
operator|.
name|addToClassesFromOrigClassesIndex
argument_list|(
name|origListsMap
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
name|initClassHasErrorsToFalse
argument_list|()
expr_stmt|;
name|setDirectionsClassesCanMove
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|moveClassUp
parameter_list|(
name|String
name|clsId
parameter_list|)
block|{
name|int
name|indexOfFirstClassToMove
init|=
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|indexOf
argument_list|(
name|clsId
argument_list|)
decl_stmt|;
name|int
name|indexOfLastClassToMove
init|=
name|this
operator|.
name|indexOfLastChildClass
argument_list|(
name|clsId
argument_list|)
decl_stmt|;
name|String
name|newParentClassId
init|=
name|this
operator|.
name|findNewParentClassId
argument_list|(
name|clsId
argument_list|,
name|DIRECTION_UP
argument_list|)
decl_stmt|;
if|if
condition|(
name|newParentClassId
operator|!=
literal|null
condition|)
block|{
name|int
name|indexOfClassToMoveAfter
init|=
name|this
operator|.
name|indexOfLastChildClass
argument_list|(
name|newParentClassId
argument_list|)
decl_stmt|;
name|int
name|origListSize
init|=
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|this
operator|.
name|getParentClassIds
argument_list|()
operator|.
name|set
argument_list|(
name|indexOfFirstClassToMove
argument_list|,
name|newParentClassId
argument_list|)
expr_stmt|;
name|HashMap
name|origLists
init|=
name|buildOriginalListValuesMap
argument_list|()
decl_stmt|;
name|resetLists
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<=
name|indexOfClassToMoveAfter
condition|;
name|i
operator|++
control|)
block|{
name|this
operator|.
name|addToClassesFromOrigClassesIndex
argument_list|(
name|origLists
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
name|indexOfFirstClassToMove
init|;
name|i
operator|<=
name|indexOfLastClassToMove
condition|;
name|i
operator|++
control|)
block|{
name|this
operator|.
name|addToClassesFromOrigClassesIndex
argument_list|(
name|origLists
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
operator|(
name|indexOfClassToMoveAfter
operator|+
literal|1
operator|)
init|;
name|i
operator|<
name|indexOfFirstClassToMove
condition|;
name|i
operator|++
control|)
block|{
name|this
operator|.
name|addToClassesFromOrigClassesIndex
argument_list|(
name|origLists
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
operator|(
name|indexOfLastClassToMove
operator|+
literal|1
operator|)
init|;
name|i
operator|<
name|origListSize
condition|;
name|i
operator|++
control|)
block|{
name|this
operator|.
name|addToClassesFromOrigClassesIndex
argument_list|(
name|origLists
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
name|initClassHasErrorsToFalse
argument_list|()
expr_stmt|;
name|setDirectionsClassesCanMove
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|moveClassDown
parameter_list|(
name|String
name|clsId
parameter_list|)
block|{
name|int
name|indexOfFirstClassToMove
init|=
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|indexOf
argument_list|(
name|clsId
argument_list|)
decl_stmt|;
name|int
name|indexOfLastClassToMove
init|=
name|this
operator|.
name|indexOfLastChildClass
argument_list|(
name|clsId
argument_list|)
decl_stmt|;
name|String
name|newParentClassId
init|=
name|this
operator|.
name|findNewParentClassId
argument_list|(
name|clsId
argument_list|,
name|DIRECTION_DOWN
argument_list|)
decl_stmt|;
if|if
condition|(
name|newParentClassId
operator|!=
literal|null
condition|)
block|{
name|int
name|indexOfClassToMoveAfter
init|=
name|this
operator|.
name|indexOfLastChildClass
argument_list|(
name|newParentClassId
argument_list|)
decl_stmt|;
name|int
name|origListSize
init|=
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|this
operator|.
name|getParentClassIds
argument_list|()
operator|.
name|set
argument_list|(
name|indexOfFirstClassToMove
argument_list|,
name|newParentClassId
argument_list|)
expr_stmt|;
name|HashMap
name|origLists
init|=
name|buildOriginalListValuesMap
argument_list|()
decl_stmt|;
name|resetLists
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|indexOfFirstClassToMove
condition|;
name|i
operator|++
control|)
block|{
name|this
operator|.
name|addToClassesFromOrigClassesIndex
argument_list|(
name|origLists
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
operator|(
name|indexOfLastClassToMove
operator|+
literal|1
operator|)
init|;
name|i
operator|<=
name|indexOfClassToMoveAfter
condition|;
name|i
operator|++
control|)
block|{
name|this
operator|.
name|addToClassesFromOrigClassesIndex
argument_list|(
name|origLists
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
name|indexOfFirstClassToMove
init|;
name|i
operator|<=
name|indexOfLastClassToMove
condition|;
name|i
operator|++
control|)
block|{
name|this
operator|.
name|addToClassesFromOrigClassesIndex
argument_list|(
name|origLists
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
operator|(
name|indexOfClassToMoveAfter
operator|+
literal|1
operator|)
init|;
name|i
operator|<
name|origListSize
condition|;
name|i
operator|++
control|)
block|{
name|this
operator|.
name|addToClassesFromOrigClassesIndex
argument_list|(
name|origLists
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
name|initClassHasErrorsToFalse
argument_list|()
expr_stmt|;
name|setDirectionsClassesCanMove
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|findNewParentClassId
parameter_list|(
name|String
name|clsId
parameter_list|,
name|String
name|direction
parameter_list|)
block|{
name|int
name|clsIndex
init|=
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|indexOf
argument_list|(
name|clsId
argument_list|)
decl_stmt|;
name|String
name|clsParentId
init|=
operator|(
name|String
operator|)
name|this
operator|.
name|getParentClassIds
argument_list|()
operator|.
name|get
argument_list|(
name|clsIndex
argument_list|)
decl_stmt|;
if|if
condition|(
name|clsParentId
operator|==
literal|null
operator|||
name|clsParentId
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return
operator|(
literal|null
operator|)
return|;
block|}
name|int
name|parentClassIndex
init|=
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|indexOf
argument_list|(
name|clsParentId
argument_list|)
decl_stmt|;
name|String
name|parentClassSubpartId
init|=
operator|(
name|String
operator|)
name|this
operator|.
name|getSubpartIds
argument_list|()
operator|.
name|get
argument_list|(
name|parentClassIndex
argument_list|)
decl_stmt|;
if|if
condition|(
name|parentClassSubpartId
operator|==
literal|null
operator|||
name|parentClassSubpartId
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return
operator|(
literal|null
operator|)
return|;
block|}
name|String
name|subpartId
init|=
literal|null
decl_stmt|;
name|String
name|parentId
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|direction
operator|.
name|equals
argument_list|(
name|DIRECTION_UP
argument_list|)
condition|)
block|{
name|int
name|i
init|=
name|parentClassIndex
operator|-
literal|1
decl_stmt|;
while|while
condition|(
name|i
operator|>=
literal|0
condition|)
block|{
name|subpartId
operator|=
operator|(
name|String
operator|)
name|this
operator|.
name|getSubpartIds
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
expr_stmt|;
if|if
condition|(
name|subpartId
operator|!=
literal|null
operator|&&
name|subpartId
operator|.
name|length
argument_list|()
operator|>
literal|0
operator|&&
name|subpartId
operator|.
name|equals
argument_list|(
name|parentClassSubpartId
argument_list|)
condition|)
block|{
name|parentId
operator|=
operator|(
name|String
operator|)
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
expr_stmt|;
if|if
condition|(
name|parentId
operator|!=
literal|null
operator|&&
name|parentId
operator|.
name|length
argument_list|()
operator|>
literal|0
operator|&&
operator|!
name|parentId
operator|.
name|equals
argument_list|(
name|clsParentId
argument_list|)
condition|)
block|{
break|break;
block|}
block|}
name|i
operator|--
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|>=
literal|0
condition|)
block|{
return|return
operator|(
name|parentId
operator|)
return|;
block|}
block|}
if|else if
condition|(
name|direction
operator|.
name|equals
argument_list|(
name|DIRECTION_DOWN
argument_list|)
condition|)
block|{
name|int
name|i
init|=
name|clsIndex
operator|+
literal|1
decl_stmt|;
while|while
condition|(
name|i
operator|<
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|size
argument_list|()
condition|)
block|{
name|subpartId
operator|=
operator|(
name|String
operator|)
name|this
operator|.
name|getSubpartIds
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
expr_stmt|;
if|if
condition|(
name|subpartId
operator|!=
literal|null
operator|&&
name|subpartId
operator|.
name|length
argument_list|()
operator|>
literal|0
operator|&&
name|subpartId
operator|.
name|equals
argument_list|(
name|parentClassSubpartId
argument_list|)
condition|)
block|{
name|parentId
operator|=
operator|(
name|String
operator|)
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
expr_stmt|;
if|if
condition|(
name|parentId
operator|!=
literal|null
operator|&&
name|parentId
operator|.
name|length
argument_list|()
operator|>
literal|0
operator|&&
operator|!
name|parentId
operator|.
name|equals
argument_list|(
name|clsParentId
argument_list|)
condition|)
block|{
break|break;
block|}
block|}
name|i
operator|++
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|<
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|size
argument_list|()
condition|)
block|{
return|return
operator|(
name|parentId
operator|)
return|;
block|}
block|}
return|return
operator|(
literal|null
operator|)
return|;
block|}
specifier|private
name|void
name|addNewClassesBasedOnTemplate
parameter_list|(
name|String
name|clsId
parameter_list|,
name|String
name|tmpClassId
parameter_list|,
name|String
name|parentClassId
parameter_list|)
block|{
name|int
name|index
init|=
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|indexOf
argument_list|(
name|clsId
argument_list|)
decl_stmt|;
name|String
name|label
init|=
name|this
operator|.
name|getClassLabels
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|this
operator|.
name|classLabels
operator|.
name|add
argument_list|(
operator|(
name|label
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|label
operator|.
name|indexOf
argument_list|(
literal|" "
argument_list|)
argument_list|)
operator|)
operator|+
literal|" New"
operator|+
name|tmpClassId
argument_list|)
expr_stmt|;
name|this
operator|.
name|classLabelIndents
operator|.
name|add
argument_list|(
name|this
operator|.
name|getClassLabelIndents
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|classIds
operator|.
name|add
argument_list|(
name|tmpClassId
argument_list|)
expr_stmt|;
name|this
operator|.
name|subpartIds
operator|.
name|add
argument_list|(
name|this
operator|.
name|getSubpartIds
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|itypes
operator|.
name|add
argument_list|(
name|this
operator|.
name|getItypes
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|mustHaveChildClasses
operator|.
name|add
argument_list|(
name|this
operator|.
name|getMustHaveChildClasses
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|parentClassIds
operator|.
name|add
argument_list|(
operator|(
name|parentClassId
operator|!=
literal|null
operator|)
condition|?
name|parentClassId
operator|.
name|toString
argument_list|()
else|:
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|readOnlyClasses
operator|.
name|add
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|enrollments
operator|.
name|add
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|minClassLimits
operator|.
name|add
argument_list|(
name|this
operator|.
name|getMinClassLimits
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|departments
operator|.
name|add
argument_list|(
name|this
operator|.
name|getDepartments
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|datePatterns
operator|.
name|add
argument_list|(
name|this
operator|.
name|getDatePatterns
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|numberOfRooms
operator|.
name|add
argument_list|(
name|this
operator|.
name|getNumberOfRooms
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|maxClassLimits
operator|.
name|add
argument_list|(
name|this
operator|.
name|getMaxClassLimits
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|roomRatios
operator|.
name|add
argument_list|(
name|this
operator|.
name|getRoomRatios
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|displayInstructors
operator|.
name|add
argument_list|(
name|this
operator|.
name|getDisplayInstructors
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|enabledForStudentScheduling
operator|.
name|add
argument_list|(
name|this
operator|.
name|getEnabledForStudentScheduling
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|subtotalIndexes
operator|.
name|add
argument_list|(
name|this
operator|.
name|getSubtotalIndexes
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|times
operator|.
name|add
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|rooms
operator|.
name|add
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|instructors
operator|.
name|add
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|externalIds
operator|.
name|add
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|ArrayList
name|childClasses
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
operator|(
name|index
operator|+
literal|1
operator|)
init|;
name|i
operator|<
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|this
operator|.
name|getParentClassIds
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|clsId
argument_list|)
condition|)
name|childClasses
operator|.
name|add
argument_list|(
name|this
operator|.
name|getClassIds
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Iterator
name|it
init|=
name|childClasses
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|addNewClassesBasedOnTemplate
argument_list|(
name|it
operator|.
name|next
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|nextTmpClassId
argument_list|(
literal|null
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
name|tmpClassId
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|Long
name|nextTmpClassId
parameter_list|(
name|List
name|origClassIds
parameter_list|)
block|{
name|long
name|nextId
init|=
operator|-
literal|1
decl_stmt|;
name|long
name|id
decl_stmt|;
if|if
condition|(
name|origClassIds
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Iterator
name|it
init|=
name|origClassIds
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|id
operator|=
name|Long
operator|.
name|parseLong
argument_list|(
name|it
operator|.
name|next
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|nextId
operator|>=
name|id
condition|)
block|{
name|nextId
operator|=
name|id
operator|-
literal|1
expr_stmt|;
block|}
block|}
block|}
for|for
control|(
name|Iterator
name|it
init|=
name|this
operator|.
name|classIds
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|id
operator|=
name|Long
operator|.
name|parseLong
argument_list|(
name|it
operator|.
name|next
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|nextId
operator|>=
name|id
condition|)
block|{
name|nextId
operator|=
name|id
operator|-
literal|1
expr_stmt|;
block|}
block|}
return|return
operator|(
operator|new
name|Long
argument_list|(
name|nextId
argument_list|)
operator|)
return|;
block|}
specifier|public
name|Long
name|getDeletedClassId
parameter_list|()
block|{
return|return
name|deletedClassId
return|;
block|}
specifier|public
name|void
name|setDeletedClassId
parameter_list|(
name|Long
name|deletedClassId
parameter_list|)
block|{
name|this
operator|.
name|deletedClassId
operator|=
name|deletedClassId
expr_stmt|;
block|}
specifier|public
name|Integer
name|getSubjectAreaId
parameter_list|()
block|{
return|return
name|subjectAreaId
return|;
block|}
specifier|public
name|void
name|setSubjectAreaId
parameter_list|(
name|Integer
name|subjectAreaId
parameter_list|)
block|{
name|this
operator|.
name|subjectAreaId
operator|=
name|subjectAreaId
expr_stmt|;
block|}
specifier|public
name|String
name|getInstrOfferingName
parameter_list|()
block|{
return|return
name|instrOfferingName
return|;
block|}
specifier|public
name|void
name|setInstrOfferingName
parameter_list|(
name|String
name|instrOfferingName
parameter_list|)
block|{
name|this
operator|.
name|instrOfferingName
operator|=
name|instrOfferingName
expr_stmt|;
block|}
specifier|public
name|List
name|getClassLabelIndents
parameter_list|()
block|{
return|return
name|classLabelIndents
return|;
block|}
specifier|public
name|void
name|setClassLabelIndents
parameter_list|(
name|List
name|classLabelIndents
parameter_list|)
block|{
name|this
operator|.
name|classLabelIndents
operator|=
name|classLabelIndents
expr_stmt|;
block|}
specifier|public
name|List
name|getRoomRatios
parameter_list|()
block|{
return|return
name|roomRatios
return|;
block|}
specifier|public
name|void
name|setRoomRatios
parameter_list|(
name|List
name|roomRatios
parameter_list|)
block|{
name|this
operator|.
name|roomRatios
operator|=
name|roomRatios
expr_stmt|;
block|}
specifier|public
name|List
name|getEnabledForStudentScheduling
parameter_list|()
block|{
return|return
name|enabledForStudentScheduling
return|;
block|}
specifier|public
name|void
name|setEnabledForStudentScheduling
parameter_list|(
name|List
name|enabledForStudentScheduling
parameter_list|)
block|{
name|this
operator|.
name|enabledForStudentScheduling
operator|=
name|enabledForStudentScheduling
expr_stmt|;
block|}
specifier|public
name|List
name|getDisplayInstructors
parameter_list|()
block|{
return|return
name|displayInstructors
return|;
block|}
specifier|public
name|void
name|setDisplayInstructors
parameter_list|(
name|List
name|displayInstructors
parameter_list|)
block|{
name|this
operator|.
name|displayInstructors
operator|=
name|displayInstructors
expr_stmt|;
block|}
specifier|public
name|List
name|getClassCanMoveDown
parameter_list|()
block|{
return|return
name|classCanMoveDown
return|;
block|}
specifier|public
name|void
name|setClassCanMoveDown
parameter_list|(
name|List
name|classCanMoveDown
parameter_list|)
block|{
name|this
operator|.
name|classCanMoveDown
operator|=
name|classCanMoveDown
expr_stmt|;
block|}
specifier|public
name|List
name|getClassCanMoveUp
parameter_list|()
block|{
return|return
name|classCanMoveUp
return|;
block|}
specifier|public
name|void
name|setClassCanMoveUp
parameter_list|(
name|List
name|classCanMoveUp
parameter_list|)
block|{
name|this
operator|.
name|classCanMoveUp
operator|=
name|classCanMoveUp
expr_stmt|;
block|}
specifier|public
name|List
name|getItypes
parameter_list|()
block|{
return|return
name|itypes
return|;
block|}
specifier|public
name|void
name|setItypes
parameter_list|(
name|List
name|itypes
parameter_list|)
block|{
name|this
operator|.
name|itypes
operator|=
name|itypes
expr_stmt|;
block|}
specifier|public
name|Long
name|getMoveUpClassId
parameter_list|()
block|{
return|return
name|moveUpClassId
return|;
block|}
specifier|public
name|void
name|setMoveUpClassId
parameter_list|(
name|Long
name|moveUpClassId
parameter_list|)
block|{
name|this
operator|.
name|moveUpClassId
operator|=
name|moveUpClassId
expr_stmt|;
block|}
specifier|public
name|Long
name|getMoveDownClassId
parameter_list|()
block|{
return|return
name|moveDownClassId
return|;
block|}
specifier|public
name|void
name|setMoveDownClassId
parameter_list|(
name|Long
name|moveDownClassId
parameter_list|)
block|{
name|this
operator|.
name|moveDownClassId
operator|=
name|moveDownClassId
expr_stmt|;
block|}
specifier|public
name|List
name|getMustHaveChildClasses
parameter_list|()
block|{
return|return
name|mustHaveChildClasses
return|;
block|}
specifier|public
name|void
name|setMustHaveChildClasses
parameter_list|(
name|List
name|mustHaveChildClasses
parameter_list|)
block|{
name|this
operator|.
name|mustHaveChildClasses
operator|=
name|mustHaveChildClasses
expr_stmt|;
block|}
specifier|public
name|String
name|getOrigSubparts
parameter_list|()
block|{
return|return
name|origSubparts
return|;
block|}
specifier|public
name|void
name|setOrigSubparts
parameter_list|(
name|String
name|origSubparts
parameter_list|)
block|{
name|this
operator|.
name|origSubparts
operator|=
name|origSubparts
expr_stmt|;
block|}
specifier|public
name|Boolean
name|getDisplayMaxLimit
parameter_list|()
block|{
return|return
name|displayMaxLimit
return|;
block|}
specifier|public
name|void
name|setDisplayMaxLimit
parameter_list|(
name|Boolean
name|displayMaxLimit
parameter_list|)
block|{
name|this
operator|.
name|displayMaxLimit
operator|=
name|displayMaxLimit
expr_stmt|;
block|}
specifier|public
name|Boolean
name|getDisplayOptionForMaxLimit
parameter_list|()
block|{
return|return
name|displayOptionForMaxLimit
return|;
block|}
specifier|public
name|void
name|setDisplayOptionForMaxLimit
parameter_list|(
name|Boolean
name|displayOptionForMaxLimit
parameter_list|)
block|{
name|this
operator|.
name|displayOptionForMaxLimit
operator|=
name|displayOptionForMaxLimit
expr_stmt|;
block|}
specifier|public
name|boolean
name|maxLimitCanBeHidden
parameter_list|()
block|{
name|Iterator
name|it1
init|=
name|getMinClassLimits
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Iterator
name|it2
init|=
name|getMaxClassLimits
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|String
name|min
decl_stmt|;
name|String
name|max
decl_stmt|;
while|while
condition|(
name|it1
operator|.
name|hasNext
argument_list|()
operator|&&
name|it2
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|min
operator|=
operator|(
name|String
operator|)
name|it1
operator|.
name|next
argument_list|()
expr_stmt|;
name|max
operator|=
operator|(
name|String
operator|)
name|it2
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|min
operator|==
literal|null
operator|&&
name|max
operator|==
literal|null
condition|)
block|{
comment|// max limits can be hidden
block|}
if|else if
condition|(
name|min
operator|!=
literal|null
operator|&&
name|max
operator|!=
literal|null
operator|&&
name|min
operator|.
name|equals
argument_list|(
name|max
argument_list|)
condition|)
block|{
comment|// max limits can be hidden
block|}
else|else
block|{
return|return
operator|(
literal|false
operator|)
return|;
block|}
block|}
return|return
operator|(
literal|true
operator|)
return|;
block|}
specifier|public
name|List
name|getSubtotalIndexes
parameter_list|()
block|{
return|return
name|subtotalIndexes
return|;
block|}
specifier|public
name|void
name|setSubtotalIndexes
parameter_list|(
name|List
name|subtotalIndexes
parameter_list|)
block|{
name|this
operator|.
name|subtotalIndexes
operator|=
name|subtotalIndexes
expr_stmt|;
block|}
specifier|public
name|List
name|getSubtotalLabels
parameter_list|()
block|{
return|return
name|subtotalLabels
return|;
block|}
specifier|public
name|void
name|setSubtotalLabels
parameter_list|(
name|List
name|subtotalLabels
parameter_list|)
block|{
name|this
operator|.
name|subtotalLabels
operator|=
name|subtotalLabels
expr_stmt|;
block|}
specifier|public
name|List
name|getSubtotalValues
parameter_list|()
block|{
return|return
name|subtotalValues
return|;
block|}
specifier|public
name|void
name|setSubtotalValues
parameter_list|(
name|List
name|subtotalValues
parameter_list|)
block|{
name|this
operator|.
name|subtotalValues
operator|=
name|subtotalValues
expr_stmt|;
block|}
specifier|public
name|String
name|getEnableAllClassesForStudentScheduling
parameter_list|()
block|{
return|return
name|enableAllClassesForStudentScheduling
return|;
block|}
specifier|public
name|void
name|setEnableAllClassesForStudentScheduling
parameter_list|(
name|String
name|enableAllClassesForStudentScheduling
parameter_list|)
block|{
name|this
operator|.
name|enableAllClassesForStudentScheduling
operator|=
name|enableAllClassesForStudentScheduling
expr_stmt|;
block|}
specifier|public
name|String
name|getDisplayAllClassesInstructors
parameter_list|()
block|{
return|return
name|displayAllClassesInstructors
return|;
block|}
specifier|public
name|void
name|setDisplayAllClassesInstructors
parameter_list|(
name|String
name|displayAllClassesInstructors
parameter_list|)
block|{
name|this
operator|.
name|displayAllClassesInstructors
operator|=
name|displayAllClassesInstructors
expr_stmt|;
block|}
specifier|public
name|List
name|getEnableAllClassesForStudentSchedulingForSubpart
parameter_list|()
block|{
return|return
name|enableAllClassesForStudentSchedulingForSubpart
return|;
block|}
specifier|public
name|void
name|setEnableAllClassesForStudentSchedulingForSubpart
parameter_list|(
name|List
name|enableAllClassesForStudentSchedulingForSubpart
parameter_list|)
block|{
name|this
operator|.
name|enableAllClassesForStudentSchedulingForSubpart
operator|=
name|enableAllClassesForStudentSchedulingForSubpart
expr_stmt|;
block|}
specifier|public
name|List
name|getDisplayAllClassesInstructorsForSubpart
parameter_list|()
block|{
return|return
name|displayAllClassesInstructorsForSubpart
return|;
block|}
specifier|public
name|void
name|setDisplayAllClassesInstructorsForSubpart
parameter_list|(
name|List
name|displayAllClassesInstructorsForSubpart
parameter_list|)
block|{
name|this
operator|.
name|displayAllClassesInstructorsForSubpart
operator|=
name|displayAllClassesInstructorsForSubpart
expr_stmt|;
block|}
specifier|public
name|List
name|getReadOnlySubparts
parameter_list|()
block|{
return|return
name|readOnlySubparts
return|;
block|}
specifier|public
name|void
name|setReadOnlySubparts
parameter_list|(
name|List
name|readOnlySubparts
parameter_list|)
block|{
name|this
operator|.
name|readOnlySubparts
operator|=
name|readOnlySubparts
expr_stmt|;
block|}
specifier|public
name|List
name|getEnrollments
parameter_list|()
block|{
return|return
name|enrollments
return|;
block|}
specifier|public
name|void
name|setEnrollments
parameter_list|(
name|List
name|enrollments
parameter_list|)
block|{
name|this
operator|.
name|enrollments
operator|=
name|enrollments
expr_stmt|;
block|}
specifier|public
name|Boolean
name|getDisplayEnrollment
parameter_list|()
block|{
return|return
name|displayEnrollment
return|;
block|}
specifier|public
name|void
name|setDisplayEnrollment
parameter_list|(
name|Boolean
name|displayEnrollment
parameter_list|)
block|{
name|this
operator|.
name|displayEnrollment
operator|=
name|displayEnrollment
expr_stmt|;
block|}
specifier|public
name|List
name|getTimes
parameter_list|()
block|{
return|return
name|times
return|;
block|}
specifier|public
name|void
name|setTimes
parameter_list|(
name|List
name|times
parameter_list|)
block|{
name|this
operator|.
name|times
operator|=
name|times
expr_stmt|;
block|}
specifier|public
name|List
name|getRooms
parameter_list|()
block|{
return|return
name|rooms
return|;
block|}
specifier|public
name|void
name|setRooms
parameter_list|(
name|List
name|rooms
parameter_list|)
block|{
name|this
operator|.
name|rooms
operator|=
name|rooms
expr_stmt|;
block|}
specifier|public
name|List
name|getInstructors
parameter_list|()
block|{
return|return
name|instructors
return|;
block|}
specifier|public
name|void
name|setInstructors
parameter_list|(
name|List
name|instructors
parameter_list|)
block|{
name|this
operator|.
name|instructors
operator|=
name|instructors
expr_stmt|;
block|}
specifier|public
name|Boolean
name|getDisplayExternalId
parameter_list|()
block|{
return|return
name|displayExternalId
return|;
block|}
specifier|public
name|void
name|setDisplayExternalId
parameter_list|(
name|Boolean
name|displayExternalId
parameter_list|)
block|{
name|this
operator|.
name|displayExternalId
operator|=
name|displayExternalId
expr_stmt|;
block|}
specifier|public
name|Boolean
name|getDisplayDisplayInstructors
parameter_list|()
block|{
return|return
name|displayDisplayInstructors
return|;
block|}
specifier|public
name|void
name|setDisplayDisplayInstructors
parameter_list|(
name|Boolean
name|displayDisplayInstructors
parameter_list|)
block|{
name|this
operator|.
name|displayDisplayInstructors
operator|=
name|displayDisplayInstructors
expr_stmt|;
block|}
specifier|public
name|Boolean
name|getDisplayEnabledForStudentScheduling
parameter_list|()
block|{
return|return
name|displayEnabledForStudentScheduling
return|;
block|}
specifier|public
name|void
name|setDisplayEnabledForStudentScheduling
parameter_list|(
name|Boolean
name|displayEnabledForStudentScheduling
parameter_list|)
block|{
name|this
operator|.
name|displayEnabledForStudentScheduling
operator|=
name|displayEnabledForStudentScheduling
expr_stmt|;
block|}
specifier|public
name|List
name|getExternalIds
parameter_list|()
block|{
return|return
name|externalIds
return|;
block|}
specifier|public
name|void
name|setExternalIds
parameter_list|(
name|List
name|externalIds
parameter_list|)
block|{
name|this
operator|.
name|externalIds
operator|=
name|externalIds
expr_stmt|;
block|}
block|}
end_class

end_unit

