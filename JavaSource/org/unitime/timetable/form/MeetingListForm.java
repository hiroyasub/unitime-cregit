begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2008 - 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionErrors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|webutil
operator|.
name|WebTextValidation
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|MeetingListForm
extends|extends
name|EventListForm
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|3703482482732848853L
decl_stmt|;
specifier|private
name|String
name|iOrderBy
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iLocation
init|=
literal|null
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|sOrderByName
init|=
literal|"Event Name"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|sOrderByLocation
init|=
literal|"Location"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|sOrderByTime
init|=
literal|"Time"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|sOrderBys
init|=
operator|new
name|String
index|[]
block|{
name|sOrderByName
block|,
name|sOrderByLocation
block|,
name|sOrderByTime
block|}
decl_stmt|;
specifier|public
name|ActionErrors
name|validate
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|ActionErrors
name|errors
init|=
name|super
operator|.
name|validate
argument_list|(
name|mapping
argument_list|,
name|request
argument_list|)
decl_stmt|;
if|if
condition|(
name|iLocation
operator|!=
literal|null
operator|&&
name|iLocation
operator|.
name|length
argument_list|()
operator|>
literal|50
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"location"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
literal|"The event location cannot exceed 50 characters."
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|WebTextValidation
operator|.
name|isTextValid
argument_list|(
name|iLocation
argument_list|,
literal|true
argument_list|)
condition|)
block|{
name|iLocation
operator|=
literal|""
expr_stmt|;
name|errors
operator|.
name|add
argument_list|(
literal|"location"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.invalidCharacters"
argument_list|,
literal|"Event Location"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
operator|(
name|iOrderBy
operator|.
name|equals
argument_list|(
name|sOrderByName
argument_list|)
operator|||
name|iOrderBy
operator|.
name|equals
argument_list|(
name|sOrderByLocation
argument_list|)
operator|||
name|iOrderBy
operator|.
name|equals
argument_list|(
name|sOrderByTime
argument_list|)
operator|)
condition|)
block|{
name|iOrderBy
operator|=
name|sOrderByName
expr_stmt|;
block|}
return|return
name|errors
return|;
block|}
specifier|public
name|void
name|reset
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|super
operator|.
name|reset
argument_list|(
name|mapping
argument_list|,
name|request
argument_list|)
expr_stmt|;
name|iOrderBy
operator|=
name|sOrderByName
expr_stmt|;
name|iLocation
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|void
name|load
parameter_list|(
name|SessionContext
name|context
parameter_list|)
block|{
name|super
operator|.
name|load
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|iOrderBy
operator|=
operator|(
name|String
operator|)
name|context
operator|.
name|getAttribute
argument_list|(
literal|"MeetingList.OrderBy"
argument_list|)
expr_stmt|;
name|iLocation
operator|=
operator|(
name|String
operator|)
name|context
operator|.
name|getAttribute
argument_list|(
literal|"MeetingList.Location"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iOrderBy
operator|==
literal|null
condition|)
name|iOrderBy
operator|=
name|sOrderByName
expr_stmt|;
block|}
specifier|public
name|void
name|save
parameter_list|(
name|SessionContext
name|context
parameter_list|)
block|{
name|super
operator|.
name|save
argument_list|(
name|context
argument_list|)
expr_stmt|;
if|if
condition|(
name|iOrderBy
operator|==
literal|null
condition|)
name|context
operator|.
name|removeAttribute
argument_list|(
literal|"MeetingList.OrderBy"
argument_list|)
expr_stmt|;
else|else
name|context
operator|.
name|setAttribute
argument_list|(
literal|"MeetingList.OrderBy"
argument_list|,
name|iOrderBy
argument_list|)
expr_stmt|;
if|if
condition|(
name|iLocation
operator|==
literal|null
condition|)
name|context
operator|.
name|removeAttribute
argument_list|(
literal|"MeetingList.Location"
argument_list|)
expr_stmt|;
else|else
name|context
operator|.
name|setAttribute
argument_list|(
literal|"MeetingList.Location"
argument_list|,
name|iLocation
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getOrderBy
parameter_list|()
block|{
return|return
name|iOrderBy
return|;
block|}
specifier|public
name|void
name|setOrderBy
parameter_list|(
name|String
name|orderBy
parameter_list|)
block|{
name|iOrderBy
operator|=
name|orderBy
expr_stmt|;
block|}
specifier|public
name|String
index|[]
name|getOrderBys
parameter_list|()
block|{
return|return
name|sOrderBys
return|;
block|}
specifier|public
name|String
name|getLocation
parameter_list|()
block|{
return|return
name|iLocation
return|;
block|}
specifier|public
name|void
name|setLocation
parameter_list|(
name|String
name|loc
parameter_list|)
block|{
name|iLocation
operator|=
name|loc
expr_stmt|;
block|}
block|}
end_class

end_unit

