begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionErrors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|Web
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Exam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|ComboBoxLookup
import|;
end_import

begin_class
specifier|public
class|class
name|ExamListForm
extends|extends
name|ActionForm
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
specifier|private
name|String
name|iSubjectAreaId
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iCourseNbr
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iOp
init|=
literal|null
decl_stmt|;
specifier|private
name|Collection
name|iSubjectAreas
init|=
literal|null
decl_stmt|;
specifier|private
name|int
name|iExamType
init|=
literal|0
decl_stmt|;
specifier|private
name|boolean
name|iHasMidtermExams
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|iCanAddExam
init|=
literal|false
decl_stmt|;
specifier|public
name|String
name|getSubjectAreaId
parameter_list|()
block|{
return|return
name|iSubjectAreaId
return|;
block|}
specifier|public
name|void
name|setSubjectAreaId
parameter_list|(
name|String
name|subjectAreaId
parameter_list|)
block|{
name|iSubjectAreaId
operator|=
name|subjectAreaId
expr_stmt|;
block|}
specifier|public
name|String
name|getCourseNbr
parameter_list|()
block|{
return|return
name|iCourseNbr
return|;
block|}
specifier|public
name|void
name|setCourseNbr
parameter_list|(
name|String
name|courseNbr
parameter_list|)
block|{
name|iCourseNbr
operator|=
name|courseNbr
expr_stmt|;
if|if
condition|(
literal|"null"
operator|.
name|equals
argument_list|(
name|iCourseNbr
argument_list|)
condition|)
name|iCourseNbr
operator|=
literal|""
expr_stmt|;
block|}
specifier|public
name|String
name|getOp
parameter_list|()
block|{
return|return
name|iOp
return|;
block|}
specifier|public
name|void
name|setOp
parameter_list|(
name|String
name|op
parameter_list|)
block|{
name|iOp
operator|=
name|op
expr_stmt|;
block|}
specifier|public
name|Collection
name|getSubjectAreas
parameter_list|()
block|{
return|return
name|iSubjectAreas
return|;
block|}
specifier|public
name|void
name|setSubjectAreas
parameter_list|(
name|Collection
name|subjectAreas
parameter_list|)
block|{
name|iSubjectAreas
operator|=
name|subjectAreas
expr_stmt|;
block|}
specifier|public
name|void
name|reset
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|iSubjectAreaId
operator|=
literal|null
expr_stmt|;
name|iCourseNbr
operator|=
literal|null
expr_stmt|;
name|iOp
operator|=
literal|null
expr_stmt|;
name|iExamType
operator|=
name|Exam
operator|.
name|sExamTypeFinal
expr_stmt|;
name|iCanAddExam
operator|=
literal|false
expr_stmt|;
try|try
block|{
name|iHasMidtermExams
operator|=
name|Exam
operator|.
name|hasMidtermExams
argument_list|(
name|Session
operator|.
name|getCurrentAcadSession
argument_list|(
name|Web
operator|.
name|getUser
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
argument_list|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
block|}
specifier|public
name|ActionErrors
name|validate
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|ActionErrors
name|errors
init|=
operator|new
name|ActionErrors
argument_list|()
decl_stmt|;
return|return
name|errors
return|;
block|}
specifier|public
name|int
name|getExamType
parameter_list|()
block|{
return|return
name|iExamType
return|;
block|}
specifier|public
name|void
name|setExamType
parameter_list|(
name|int
name|type
parameter_list|)
block|{
name|iExamType
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|Collection
name|getExamTypes
parameter_list|()
block|{
name|Vector
name|ret
init|=
operator|new
name|Vector
argument_list|(
name|Exam
operator|.
name|sExamTypes
operator|.
name|length
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|Exam
operator|.
name|sExamTypes
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|i
operator|==
name|Exam
operator|.
name|sExamTypeMidterm
operator|&&
operator|!
name|iHasMidtermExams
condition|)
continue|continue;
name|ret
operator|.
name|add
argument_list|(
operator|new
name|ComboBoxLookup
argument_list|(
name|Exam
operator|.
name|sExamTypes
index|[
name|i
index|]
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
specifier|public
name|boolean
name|getCanAddExam
parameter_list|()
block|{
return|return
name|iCanAddExam
return|;
block|}
specifier|public
name|void
name|setCanAddExam
parameter_list|(
name|boolean
name|exam
parameter_list|)
block|{
name|iCanAddExam
operator|=
name|exam
expr_stmt|;
block|}
block|}
end_class

end_unit

