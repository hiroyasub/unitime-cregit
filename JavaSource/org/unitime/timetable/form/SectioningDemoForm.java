begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.1 (University Timetabling Application)  * Copyright (C) 2008, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program; if not, write to the Free Software Foundation, Inc.,  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|DecimalFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|jsp
operator|.
name|JspWriter
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|cpsolver
operator|.
name|coursett
operator|.
name|model
operator|.
name|TimeLocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionErrors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|Debug
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|Web
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|ApplicationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PreferenceLevel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SubjectArea
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimePatternModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|CourseOfferingDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|InstructionalOfferingDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|TimePatternDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|IdValue
import|;
end_import

begin_comment
comment|/**   * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|SectioningDemoForm
extends|extends
name|ActionForm
block|{
specifier|public
specifier|static
specifier|final
name|Long
name|sTypeNone
init|=
operator|new
name|Long
argument_list|(
literal|0
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Long
name|sTypeCourse
init|=
operator|new
name|Long
argument_list|(
literal|1
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Long
name|sTypeFreeTime
init|=
operator|new
name|Long
argument_list|(
literal|2
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|DecimalFormat
name|sTwoNumbersDF
init|=
operator|new
name|DecimalFormat
argument_list|(
literal|"00"
argument_list|)
decl_stmt|;
specifier|private
name|String
name|iOp
decl_stmt|;
specifier|private
name|String
name|iRequestFile
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iResponseFile
init|=
literal|null
decl_stmt|;
specifier|private
name|int
name|iNrRequests
init|=
literal|5
decl_stmt|;
specifier|private
name|int
name|iNrAltRequests
init|=
literal|3
decl_stmt|;
specifier|private
name|String
name|iStudentId
decl_stmt|;
specifier|private
name|boolean
name|iStudentLoaded
init|=
literal|false
decl_stmt|;
specifier|private
name|Vector
name|iRequests
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
specifier|private
name|Vector
name|iMessages
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
specifier|private
name|Vector
name|iCourseAssignments
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
specifier|private
name|Vector
name|iTimePatterns
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
specifier|private
name|Vector
name|iSubjectAreas
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
specifier|public
name|ActionErrors
name|validate
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|ActionErrors
name|errors
init|=
operator|new
name|ActionErrors
argument_list|()
decl_stmt|;
return|return
name|errors
return|;
block|}
specifier|public
name|void
name|reset
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|iRequests
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iCourseAssignments
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iMessages
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iNrRequests
operator|=
operator|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"nrRequests"
argument_list|)
operator|==
literal|null
condition|?
literal|3
else|:
name|Integer
operator|.
name|parseInt
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"nrRequests"
argument_list|)
argument_list|)
operator|)
expr_stmt|;
name|iNrAltRequests
operator|=
operator|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"nrAltRequests"
argument_list|)
operator|==
literal|null
condition|?
literal|0
else|:
name|Integer
operator|.
name|parseInt
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"nrAltRequests"
argument_list|)
argument_list|)
operator|)
expr_stmt|;
name|iStudentId
operator|=
literal|null
expr_stmt|;
name|iStudentLoaded
operator|=
literal|false
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iNrRequests
condition|;
name|i
operator|++
control|)
name|iRequests
operator|.
name|add
argument_list|(
operator|new
name|RequestBean
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iNrAltRequests
condition|;
name|i
operator|++
control|)
name|iRequests
operator|.
name|add
argument_list|(
operator|new
name|RequestBean
argument_list|()
argument_list|)
expr_stmt|;
name|iOp
operator|=
literal|null
expr_stmt|;
name|iRequestFile
operator|=
name|iResponseFile
operator|=
literal|null
expr_stmt|;
name|iTimePatterns
operator|.
name|clear
argument_list|()
expr_stmt|;
try|try
block|{
for|for
control|(
name|Iterator
name|i
init|=
name|TimePattern
operator|.
name|findAll
argument_list|(
name|request
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|TimePattern
name|t
init|=
operator|(
name|TimePattern
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|t
operator|.
name|getType
argument_list|()
operator|.
name|intValue
argument_list|()
operator|==
name|TimePattern
operator|.
name|sTypeStandard
condition|)
name|iTimePatterns
operator|.
name|add
argument_list|(
operator|new
name|IdValue
argument_list|(
name|t
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|t
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
name|iSubjectAreas
operator|.
name|clear
argument_list|()
expr_stmt|;
try|try
block|{
name|Session
name|session
init|=
name|Session
operator|.
name|getCurrentAcadSession
argument_list|(
name|Web
operator|.
name|getUser
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Vector
name|v
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|session
operator|.
name|getSubjectAreas
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|SubjectArea
name|sa
init|=
operator|(
name|SubjectArea
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|iSubjectAreas
operator|.
name|add
argument_list|(
operator|new
name|IdValue
argument_list|(
name|sa
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|sa
operator|.
name|getSubjectAreaAbbreviation
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
block|}
specifier|public
name|String
name|getOp
parameter_list|()
block|{
return|return
name|iOp
return|;
block|}
specifier|public
name|void
name|setOp
parameter_list|(
name|String
name|op
parameter_list|)
block|{
name|iOp
operator|=
name|op
expr_stmt|;
block|}
specifier|public
name|Collection
name|getTimePatterns
parameter_list|()
block|{
return|return
name|iTimePatterns
return|;
block|}
specifier|public
name|Collection
name|getSubjectAreas
parameter_list|()
block|{
return|return
name|iSubjectAreas
return|;
block|}
specifier|public
specifier|static
name|Collection
name|getCourseNumbers
parameter_list|(
name|String
name|subjectAreaId
parameter_list|)
block|{
if|if
condition|(
name|subjectAreaId
operator|==
literal|null
operator|||
name|subjectAreaId
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
return|return
operator|new
name|Vector
argument_list|()
return|;
return|return
operator|new
name|InstructionalOfferingDAO
argument_list|()
operator|.
name|getSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"select co from InstructionalOffering as io , CourseOffering co "
operator|+
literal|"where co.subjectArea.uniqueId = :subjectAreaId "
operator|+
literal|"and io.uniqueId = co.instructionalOffering.uniqueId "
operator|+
literal|"and co.instructionalOffering.notOffered = false "
operator|+
literal|"and io.notOffered = false order by co.courseNbr "
argument_list|)
operator|.
name|setFetchSize
argument_list|(
literal|200
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"subjectAreaId"
argument_list|,
name|Long
operator|.
name|parseLong
argument_list|(
name|subjectAreaId
argument_list|)
argument_list|)
operator|.
name|list
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Collection
name|getFreeTimeTimes
parameter_list|(
name|String
name|timePatternId
parameter_list|)
block|{
if|if
condition|(
name|timePatternId
operator|==
literal|null
operator|||
name|timePatternId
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
return|return
operator|new
name|Vector
argument_list|()
return|;
name|TimePattern
name|tp
init|=
operator|new
name|TimePatternDAO
argument_list|()
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|timePatternId
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|tp
operator|==
literal|null
condition|)
return|return
operator|new
name|Vector
argument_list|()
return|;
name|TimePatternModel
name|m
init|=
name|tp
operator|.
name|getTimePatternModel
argument_list|()
decl_stmt|;
name|Vector
name|ret
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|m
operator|.
name|getNrTimes
argument_list|()
condition|;
name|i
operator|++
control|)
name|ret
operator|.
name|add
argument_list|(
operator|new
name|IdValue
argument_list|(
operator|new
name|Long
argument_list|(
name|i
argument_list|)
argument_list|,
name|m
operator|.
name|getStartTime
argument_list|(
name|i
argument_list|)
operator|+
literal|" - "
operator|+
name|m
operator|.
name|getEndTime
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
specifier|public
specifier|static
name|Collection
name|getFreeTimeDays
parameter_list|(
name|String
name|timePatternId
parameter_list|)
block|{
if|if
condition|(
name|timePatternId
operator|==
literal|null
operator|||
name|timePatternId
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
return|return
operator|new
name|Vector
argument_list|()
return|;
name|TimePattern
name|tp
init|=
operator|new
name|TimePatternDAO
argument_list|()
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|timePatternId
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|tp
operator|==
literal|null
condition|)
return|return
operator|new
name|Vector
argument_list|()
return|;
name|TimePatternModel
name|m
init|=
name|tp
operator|.
name|getTimePatternModel
argument_list|()
decl_stmt|;
name|Vector
name|ret
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|m
operator|.
name|getNrDays
argument_list|()
condition|;
name|i
operator|++
control|)
name|ret
operator|.
name|add
argument_list|(
operator|new
name|IdValue
argument_list|(
operator|new
name|Long
argument_list|(
name|i
argument_list|)
argument_list|,
name|m
operator|.
name|getDayHeader
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
specifier|public
name|int
name|getNrRequests
parameter_list|()
block|{
return|return
name|iNrRequests
return|;
block|}
specifier|public
name|void
name|setNrRequests
parameter_list|(
name|int
name|nrRequests
parameter_list|)
block|{
name|iNrRequests
operator|=
name|nrRequests
expr_stmt|;
while|while
condition|(
name|iRequests
operator|.
name|size
argument_list|()
operator|>
name|iNrRequests
operator|+
name|iNrAltRequests
condition|)
name|iRequests
operator|.
name|removeElementAt
argument_list|(
name|iNrRequests
operator|-
literal|1
argument_list|)
expr_stmt|;
while|while
condition|(
name|iRequests
operator|.
name|size
argument_list|()
operator|<
name|iNrRequests
operator|+
name|iNrAltRequests
condition|)
name|iRequests
operator|.
name|insertElementAt
argument_list|(
operator|new
name|RequestBean
argument_list|()
argument_list|,
name|iNrRequests
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getNrAltRequests
parameter_list|()
block|{
return|return
name|iNrAltRequests
return|;
block|}
specifier|public
name|void
name|setNrAltRequests
parameter_list|(
name|int
name|nrAltRequests
parameter_list|)
block|{
name|iNrAltRequests
operator|=
name|nrAltRequests
expr_stmt|;
while|while
condition|(
name|iRequests
operator|.
name|size
argument_list|()
operator|>
name|iNrRequests
operator|+
name|iNrAltRequests
condition|)
name|iRequests
operator|.
name|removeElementAt
argument_list|(
name|iRequests
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
while|while
condition|(
name|iRequests
operator|.
name|size
argument_list|()
operator|<
name|iNrRequests
operator|+
name|iNrAltRequests
condition|)
name|iRequests
operator|.
name|addElement
argument_list|(
operator|new
name|RequestBean
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getNrAllRequests
parameter_list|()
block|{
return|return
name|iNrRequests
operator|+
name|iNrAltRequests
return|;
block|}
specifier|public
name|void
name|removeRequest
parameter_list|(
name|int
name|idx
parameter_list|)
block|{
name|iRequests
operator|.
name|removeElementAt
argument_list|(
name|idx
argument_list|)
expr_stmt|;
if|if
condition|(
name|idx
operator|<
name|iNrRequests
condition|)
name|iNrRequests
operator|--
expr_stmt|;
else|else
name|iNrAltRequests
operator|--
expr_stmt|;
block|}
specifier|public
name|void
name|moveRequest
parameter_list|(
name|int
name|idx
parameter_list|,
name|int
name|inc
parameter_list|)
block|{
if|if
condition|(
name|idx
operator|>=
literal|0
operator|&&
name|idx
operator|<
name|iRequests
operator|.
name|size
argument_list|()
operator|&&
name|idx
operator|+
name|inc
operator|>=
literal|0
operator|&&
name|idx
operator|+
name|inc
operator|<
name|iRequests
operator|.
name|size
argument_list|()
condition|)
block|{
name|Object
name|a
init|=
name|iRequests
operator|.
name|elementAt
argument_list|(
name|idx
operator|+
name|inc
argument_list|)
decl_stmt|;
name|Object
name|b
init|=
name|iRequests
operator|.
name|elementAt
argument_list|(
name|idx
argument_list|)
decl_stmt|;
name|iRequests
operator|.
name|setElementAt
argument_list|(
name|b
argument_list|,
name|idx
operator|+
name|inc
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setElementAt
argument_list|(
name|a
argument_list|,
name|idx
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|Collection
name|getRequests
parameter_list|()
block|{
return|return
name|iRequests
return|;
block|}
specifier|public
name|RequestBean
name|getRequest
parameter_list|(
name|int
name|idx
parameter_list|)
block|{
return|return
operator|(
name|RequestBean
operator|)
name|iRequests
operator|.
name|elementAt
argument_list|(
name|idx
argument_list|)
return|;
block|}
specifier|public
name|Collection
name|getMessages
parameter_list|()
block|{
return|return
name|iMessages
return|;
block|}
specifier|public
name|Collection
name|getCourseAssignments
parameter_list|()
block|{
return|return
name|iCourseAssignments
return|;
block|}
specifier|public
class|class
name|RequestBean
block|{
name|Long
name|iType
init|=
name|sTypeNone
decl_stmt|;
name|String
name|iFreeTimePattern
init|=
literal|null
decl_stmt|;
name|String
name|iFreeTimeDay
init|=
literal|null
decl_stmt|;
name|String
name|iFreeTimeTime
init|=
literal|null
decl_stmt|;
name|String
name|iSubjectArea
init|=
literal|null
decl_stmt|;
name|String
name|iCourseNbr
init|=
literal|null
decl_stmt|;
name|String
name|iAlt1SubjectArea
init|=
literal|null
decl_stmt|;
name|String
name|iAlt1CourseNbr
init|=
literal|null
decl_stmt|;
name|String
name|iAlt2SubjectArea
init|=
literal|null
decl_stmt|;
name|String
name|iAlt2CourseNbr
init|=
literal|null
decl_stmt|;
name|Boolean
name|iWait
init|=
literal|null
decl_stmt|;
specifier|public
name|Long
name|getType
parameter_list|()
block|{
return|return
name|iType
return|;
block|}
specifier|public
name|void
name|setType
parameter_list|(
name|Long
name|type
parameter_list|)
block|{
name|iType
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|String
name|getFreeTimePattern
parameter_list|()
block|{
return|return
name|iFreeTimePattern
return|;
block|}
specifier|public
name|void
name|setFreeTimePattern
parameter_list|(
name|String
name|freeTimePattern
parameter_list|)
block|{
name|iFreeTimePattern
operator|=
name|freeTimePattern
expr_stmt|;
block|}
specifier|public
name|String
name|getFreeTimeDay
parameter_list|()
block|{
return|return
name|iFreeTimeDay
return|;
block|}
specifier|public
name|void
name|setFreeTimeDay
parameter_list|(
name|String
name|freeTimeDay
parameter_list|)
block|{
name|iFreeTimeDay
operator|=
name|freeTimeDay
expr_stmt|;
block|}
specifier|public
name|String
name|getFreeTimeTime
parameter_list|()
block|{
return|return
name|iFreeTimeTime
return|;
block|}
specifier|public
name|void
name|setFreeTimeTime
parameter_list|(
name|String
name|freeTimeTime
parameter_list|)
block|{
name|iFreeTimeTime
operator|=
name|freeTimeTime
expr_stmt|;
block|}
specifier|public
name|String
name|getSubjectArea
parameter_list|()
block|{
return|return
name|iSubjectArea
return|;
block|}
specifier|public
name|void
name|setSubjectArea
parameter_list|(
name|String
name|subjectArea
parameter_list|)
block|{
name|iSubjectArea
operator|=
name|subjectArea
expr_stmt|;
block|}
specifier|public
name|String
name|getCourseNbr
parameter_list|()
block|{
return|return
name|iCourseNbr
return|;
block|}
specifier|public
name|void
name|setCourseNbr
parameter_list|(
name|String
name|courseNbr
parameter_list|)
block|{
name|iCourseNbr
operator|=
name|courseNbr
expr_stmt|;
block|}
specifier|public
name|String
name|getAlt1SubjectArea
parameter_list|()
block|{
return|return
name|iAlt1SubjectArea
return|;
block|}
specifier|public
name|void
name|setAlt1SubjectArea
parameter_list|(
name|String
name|alt1subjectArea
parameter_list|)
block|{
name|iAlt1SubjectArea
operator|=
name|alt1subjectArea
expr_stmt|;
block|}
specifier|public
name|String
name|getAlt1CourseNbr
parameter_list|()
block|{
return|return
name|iAlt1CourseNbr
return|;
block|}
specifier|public
name|void
name|setAlt1CourseNbr
parameter_list|(
name|String
name|alt1courseNbr
parameter_list|)
block|{
name|iAlt1CourseNbr
operator|=
name|alt1courseNbr
expr_stmt|;
block|}
specifier|public
name|String
name|getAlt2SubjectArea
parameter_list|()
block|{
return|return
name|iAlt2SubjectArea
return|;
block|}
specifier|public
name|void
name|setAlt2SubjectArea
parameter_list|(
name|String
name|alt2subjectArea
parameter_list|)
block|{
name|iAlt2SubjectArea
operator|=
name|alt2subjectArea
expr_stmt|;
block|}
specifier|public
name|String
name|getAlt2CourseNbr
parameter_list|()
block|{
return|return
name|iAlt2CourseNbr
return|;
block|}
specifier|public
name|void
name|setAlt2CourseNbr
parameter_list|(
name|String
name|alt2courseNbr
parameter_list|)
block|{
name|iAlt2CourseNbr
operator|=
name|alt2courseNbr
expr_stmt|;
block|}
specifier|public
name|Boolean
name|getWait
parameter_list|()
block|{
return|return
name|iWait
return|;
block|}
specifier|public
name|void
name|setWait
parameter_list|(
name|Boolean
name|wait
parameter_list|)
block|{
name|iWait
operator|=
name|wait
expr_stmt|;
block|}
specifier|public
name|Collection
name|getFreeTimeTimes
parameter_list|()
block|{
return|return
name|SectioningDemoForm
operator|.
name|getFreeTimeTimes
argument_list|(
name|iFreeTimePattern
argument_list|)
return|;
block|}
specifier|public
name|Collection
name|getFreeTimeDays
parameter_list|()
block|{
return|return
name|SectioningDemoForm
operator|.
name|getFreeTimeDays
argument_list|(
name|iFreeTimePattern
argument_list|)
return|;
block|}
specifier|public
name|Collection
name|getCourseNumbers
parameter_list|()
block|{
return|return
name|SectioningDemoForm
operator|.
name|getCourseNumbers
argument_list|(
name|iSubjectArea
argument_list|)
return|;
block|}
specifier|public
name|Collection
name|getAlt1CourseNumbers
parameter_list|()
block|{
return|return
name|SectioningDemoForm
operator|.
name|getCourseNumbers
argument_list|(
name|iAlt1SubjectArea
argument_list|)
return|;
block|}
specifier|public
name|Collection
name|getAlt2CourseNumbers
parameter_list|()
block|{
return|return
name|SectioningDemoForm
operator|.
name|getCourseNumbers
argument_list|(
name|iAlt2SubjectArea
argument_list|)
return|;
block|}
specifier|public
name|CourseOffering
name|getCourseOffering
parameter_list|()
block|{
if|if
condition|(
name|getCourseNbr
argument_list|()
operator|==
literal|null
operator|||
name|getCourseNbr
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
return|return
literal|null
return|;
return|return
operator|new
name|CourseOfferingDAO
argument_list|()
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|CourseOffering
name|getAlt1CourseOffering
parameter_list|()
block|{
if|if
condition|(
name|getAlt1CourseNbr
argument_list|()
operator|==
literal|null
operator|||
name|getAlt1CourseNbr
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
return|return
literal|null
return|;
return|return
operator|new
name|CourseOfferingDAO
argument_list|()
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|getAlt1CourseNbr
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|CourseOffering
name|getAlt2CourseOffering
parameter_list|()
block|{
if|if
condition|(
name|getAlt2CourseNbr
argument_list|()
operator|==
literal|null
operator|||
name|getAlt2CourseNbr
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
return|return
literal|null
return|;
return|return
operator|new
name|CourseOfferingDAO
argument_list|()
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|getAlt2CourseNbr
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isAlternative
parameter_list|()
block|{
return|return
name|iRequests
operator|.
name|indexOf
argument_list|(
name|this
argument_list|)
operator|>=
name|iNrRequests
return|;
block|}
specifier|public
name|Collection
name|getTypes
parameter_list|()
block|{
name|Vector
name|ret
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
name|ret
operator|.
name|add
argument_list|(
operator|new
name|IdValue
argument_list|(
name|sTypeNone
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|ret
operator|.
name|add
argument_list|(
operator|new
name|IdValue
argument_list|(
name|sTypeCourse
argument_list|,
literal|"Course"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|isAlternative
argument_list|()
condition|)
name|ret
operator|.
name|add
argument_list|(
operator|new
name|IdValue
argument_list|(
name|sTypeFreeTime
argument_list|,
literal|"Free Time"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
specifier|public
name|TimeLocation
name|getFreeTime
parameter_list|(
name|Session
name|session
parameter_list|)
block|{
if|if
condition|(
name|iFreeTimePattern
operator|==
literal|null
operator|||
name|iFreeTimePattern
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
return|return
literal|null
return|;
if|if
condition|(
name|iFreeTimeDay
operator|==
literal|null
operator|||
name|iFreeTimeDay
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
return|return
literal|null
return|;
if|if
condition|(
name|iFreeTimeTime
operator|==
literal|null
operator|||
name|iFreeTimeTime
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
return|return
literal|null
return|;
name|TimePattern
name|tp
init|=
operator|new
name|TimePatternDAO
argument_list|()
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iFreeTimePattern
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|tp
operator|==
literal|null
condition|)
return|return
literal|null
return|;
name|TimePatternModel
name|model
init|=
name|tp
operator|.
name|getTimePatternModel
argument_list|()
decl_stmt|;
name|int
name|day
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|iFreeTimeDay
argument_list|)
decl_stmt|;
name|int
name|time
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|iFreeTimeTime
argument_list|)
decl_stmt|;
name|TimeLocation
name|loc
init|=
operator|new
name|TimeLocation
argument_list|(
name|model
operator|.
name|getDayCode
argument_list|(
name|day
argument_list|)
argument_list|,
name|model
operator|.
name|getStartSlot
argument_list|(
name|time
argument_list|)
argument_list|,
name|model
operator|.
name|getSlotsPerMtg
argument_list|()
argument_list|,
name|PreferenceLevel
operator|.
name|prolog2int
argument_list|(
name|model
operator|.
name|getPreference
argument_list|(
name|day
argument_list|,
name|time
argument_list|)
argument_list|)
argument_list|,
name|model
operator|.
name|getNormalizedPreference
argument_list|(
name|day
argument_list|,
name|time
argument_list|,
literal|1.0
argument_list|)
argument_list|,
name|session
operator|.
name|getDefaultDatePattern
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|session
operator|.
name|getDefaultDatePattern
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|session
operator|.
name|getDefaultDatePattern
argument_list|()
operator|.
name|getPatternBitSet
argument_list|()
argument_list|,
name|model
operator|.
name|getBreakTime
argument_list|()
argument_list|)
decl_stmt|;
name|loc
operator|.
name|setTimePatternId
argument_list|(
name|model
operator|.
name|getTimePattern
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|loc
return|;
block|}
block|}
specifier|public
name|RequestBean
name|getFreeTimeBean
parameter_list|(
name|Session
name|session
parameter_list|,
name|String
name|daysStr
parameter_list|,
name|String
name|startTimeStr
parameter_list|,
name|String
name|endTimeStr
parameter_list|)
block|{
try|try
block|{
for|for
control|(
name|Iterator
name|i
init|=
name|TimePattern
operator|.
name|findAll
argument_list|(
name|session
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|TimePattern
name|t
init|=
operator|(
name|TimePattern
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|TimePatternModel
name|m
init|=
name|t
operator|.
name|getTimePatternModel
argument_list|()
decl_stmt|;
name|int
name|day
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|m
operator|.
name|getNrDays
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
name|int
name|dayCode
init|=
name|m
operator|.
name|getDayCode
argument_list|(
name|j
argument_list|)
decl_stmt|;
name|String
name|days
init|=
literal|""
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|Constants
operator|.
name|NR_DAYS
condition|;
name|k
operator|++
control|)
if|if
condition|(
operator|(
name|dayCode
operator|&
name|Constants
operator|.
name|DAY_CODES
index|[
name|k
index|]
operator|)
operator|!=
literal|0
condition|)
name|days
operator|+=
name|Constants
operator|.
name|DAY_NAMES_SHORT
index|[
name|k
index|]
expr_stmt|;
if|if
condition|(
name|days
operator|.
name|equals
argument_list|(
name|daysStr
argument_list|)
condition|)
block|{
name|day
operator|=
name|j
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|day
operator|<
literal|0
condition|)
continue|continue;
name|int
name|time
init|=
operator|-
literal|1
decl_stmt|;
name|int
name|sHour
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|startTimeStr
argument_list|)
operator|/
literal|100
decl_stmt|;
name|int
name|sMin
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|startTimeStr
argument_list|)
operator|%
literal|100
decl_stmt|;
name|int
name|eHour
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|endTimeStr
argument_list|)
operator|/
literal|100
decl_stmt|;
name|int
name|eMin
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|endTimeStr
argument_list|)
operator|%
literal|100
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|m
operator|.
name|getNrTimes
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
name|int
name|startHour
init|=
name|m
operator|.
name|getHour
argument_list|(
name|j
argument_list|)
decl_stmt|;
name|int
name|startMinute
init|=
name|m
operator|.
name|getMinute
argument_list|(
name|j
argument_list|)
decl_stmt|;
if|if
condition|(
name|startHour
operator|!=
name|sHour
operator|||
name|startMinute
operator|!=
name|sMin
condition|)
continue|continue;
name|int
name|endTime
init|=
operator|(
literal|60
operator|*
name|startHour
operator|+
name|startMinute
operator|)
operator|+
name|m
operator|.
name|getSlotsPerMtg
argument_list|()
operator|*
name|Constants
operator|.
name|SLOT_LENGTH_MIN
operator|-
name|m
operator|.
name|getBreakTime
argument_list|()
decl_stmt|;
name|int
name|endHour
init|=
name|endTime
operator|/
literal|60
decl_stmt|;
name|int
name|endMinute
init|=
name|endTime
operator|%
literal|60
decl_stmt|;
if|if
condition|(
name|endHour
operator|!=
name|eHour
operator|||
name|endMinute
operator|!=
name|eMin
condition|)
continue|continue;
name|time
operator|=
name|j
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|time
operator|<
literal|0
condition|)
continue|continue;
name|RequestBean
name|request
init|=
operator|new
name|RequestBean
argument_list|()
decl_stmt|;
name|request
operator|.
name|setType
argument_list|(
name|sTypeFreeTime
argument_list|)
expr_stmt|;
name|request
operator|.
name|setFreeTimePattern
argument_list|(
name|t
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setFreeTimeDay
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|day
argument_list|)
argument_list|)
expr_stmt|;
name|request
operator|.
name|setFreeTimeTime
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|time
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
return|return
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Debug
operator|.
name|error
argument_list|(
name|e
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|MessageBean
block|{
name|String
name|iType
decl_stmt|;
name|String
name|iMessage
decl_stmt|;
specifier|public
name|MessageBean
parameter_list|()
block|{
block|}
specifier|public
name|String
name|getMessage
parameter_list|()
block|{
return|return
name|iMessage
return|;
block|}
specifier|public
name|void
name|setMessage
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|iMessage
operator|=
name|message
expr_stmt|;
block|}
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|iType
return|;
block|}
specifier|public
name|void
name|setType
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|iType
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|String
name|getHtml
parameter_list|()
block|{
if|if
condition|(
literal|"WARN"
operator|.
name|equals
argument_list|(
name|getType
argument_list|()
argument_list|)
condition|)
return|return
literal|"<font color='orange'>"
operator|+
name|getMessage
argument_list|()
operator|+
literal|"</font>"
return|;
if|if
condition|(
literal|"ERROR"
operator|.
name|equals
argument_list|(
name|getType
argument_list|()
argument_list|)
condition|)
return|return
literal|"<font color='red'>"
operator|+
name|getMessage
argument_list|()
operator|+
literal|"</font>"
return|;
return|return
name|getMessage
argument_list|()
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|CourseAssignmentBean
block|{
name|Vector
name|iClassAssignments
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
name|String
name|iSubjectArea
init|=
literal|null
decl_stmt|;
name|String
name|iCourseNumber
init|=
literal|null
decl_stmt|;
name|String
name|iTitle
init|=
literal|null
decl_stmt|;
specifier|public
name|CourseAssignmentBean
parameter_list|()
block|{
block|}
specifier|public
name|Vector
name|getClassAssignments
parameter_list|()
block|{
return|return
name|iClassAssignments
return|;
block|}
specifier|public
name|String
name|getSubjectArea
parameter_list|()
block|{
return|return
name|iSubjectArea
return|;
block|}
specifier|public
name|void
name|setSubjectArea
parameter_list|(
name|String
name|subjectArea
parameter_list|)
block|{
name|iSubjectArea
operator|=
name|subjectArea
expr_stmt|;
block|}
specifier|public
name|String
name|getCourseNumber
parameter_list|()
block|{
return|return
name|iCourseNumber
return|;
block|}
specifier|public
name|void
name|setCourseNumber
parameter_list|(
name|String
name|courseNumber
parameter_list|)
block|{
name|iCourseNumber
operator|=
name|courseNumber
expr_stmt|;
block|}
specifier|public
name|String
name|getTitleNormal
parameter_list|()
block|{
return|return
operator|(
name|iTitle
operator|)
return|;
block|}
specifier|public
name|String
name|getTitle
parameter_list|()
block|{
return|return
name|iTitle
operator|.
name|replaceAll
argument_list|(
literal|">"
argument_list|,
literal|"&gt;"
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"<"
argument_list|,
literal|"&lt;"
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"'"
argument_list|,
literal|"&quot;"
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"&"
argument_list|,
literal|"&amp;"
argument_list|)
return|;
block|}
specifier|public
name|void
name|setTitle
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|String
name|updatedTitle
init|=
name|title
decl_stmt|;
name|iTitle
operator|=
name|title
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|ClassAssignmentBean
block|{
name|String
name|iId
decl_stmt|;
name|String
name|iParentId
decl_stmt|;
name|String
name|iAssignmentId
decl_stmt|;
name|String
name|iName
decl_stmt|;
name|String
name|iTime
decl_stmt|;
name|String
name|iDate
decl_stmt|;
name|String
name|iLocation
decl_stmt|;
name|String
name|iInstructor
decl_stmt|;
name|Vector
name|iChoices
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
name|String
name|iDays
decl_stmt|;
name|String
name|iStartTime
decl_stmt|;
name|String
name|iEndTime
decl_stmt|;
name|String
name|iLength
decl_stmt|;
name|CourseAssignmentBean
name|iCourse
decl_stmt|;
specifier|public
name|ClassAssignmentBean
parameter_list|(
name|CourseAssignmentBean
name|course
parameter_list|)
block|{
name|iCourse
operator|=
name|course
expr_stmt|;
block|}
specifier|public
name|CourseAssignmentBean
name|getCourse
parameter_list|()
block|{
return|return
name|iCourse
return|;
block|}
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getParentId
parameter_list|()
block|{
return|return
name|iParentId
return|;
block|}
specifier|public
name|void
name|setParentId
parameter_list|(
name|String
name|parentId
parameter_list|)
block|{
name|iParentId
operator|=
name|parentId
expr_stmt|;
block|}
specifier|public
name|String
name|getAssignmentId
parameter_list|()
block|{
return|return
name|iAssignmentId
return|;
block|}
specifier|public
name|void
name|setAssignmentId
parameter_list|(
name|String
name|assignmentId
parameter_list|)
block|{
name|iAssignmentId
operator|=
name|assignmentId
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getTime
parameter_list|()
block|{
return|return
name|iTime
return|;
block|}
specifier|public
name|void
name|setTime
parameter_list|(
name|String
name|time
parameter_list|)
block|{
name|iTime
operator|=
name|time
expr_stmt|;
block|}
specifier|public
name|String
name|getDate
parameter_list|()
block|{
return|return
name|iDate
return|;
block|}
specifier|public
name|void
name|setDate
parameter_list|(
name|String
name|date
parameter_list|)
block|{
name|iDate
operator|=
name|date
expr_stmt|;
block|}
specifier|public
name|String
name|getLocation
parameter_list|()
block|{
return|return
name|iLocation
return|;
block|}
specifier|public
name|void
name|setLocation
parameter_list|(
name|String
name|location
parameter_list|)
block|{
name|iLocation
operator|=
name|location
expr_stmt|;
block|}
specifier|public
name|String
name|getInstructor
parameter_list|()
block|{
return|return
name|iInstructor
return|;
block|}
specifier|public
name|void
name|setInstructor
parameter_list|(
name|String
name|instructor
parameter_list|)
block|{
name|iInstructor
operator|=
name|instructor
expr_stmt|;
block|}
specifier|public
name|String
name|getDays
parameter_list|()
block|{
return|return
name|iDays
return|;
block|}
specifier|public
name|void
name|setDays
parameter_list|(
name|String
name|days
parameter_list|)
block|{
name|iDays
operator|=
name|days
expr_stmt|;
block|}
specifier|public
name|String
name|getStartTime
parameter_list|()
block|{
return|return
name|iStartTime
return|;
block|}
specifier|public
name|void
name|setStartTime
parameter_list|(
name|String
name|startTime
parameter_list|)
block|{
name|iStartTime
operator|=
name|startTime
expr_stmt|;
block|}
specifier|public
name|String
name|getEndTime
parameter_list|()
block|{
return|return
name|iEndTime
return|;
block|}
specifier|public
name|void
name|setEndTime
parameter_list|(
name|String
name|endTime
parameter_list|)
block|{
name|iEndTime
operator|=
name|endTime
expr_stmt|;
block|}
specifier|public
name|String
name|getLength
parameter_list|()
block|{
return|return
name|iLength
return|;
block|}
specifier|public
name|void
name|setLength
parameter_list|(
name|String
name|length
parameter_list|)
block|{
name|iLength
operator|=
name|length
expr_stmt|;
block|}
specifier|public
name|Vector
name|getChoices
parameter_list|()
block|{
return|return
name|iChoices
return|;
block|}
specifier|public
name|ClassAssignmentBean
name|getParentBean
parameter_list|()
block|{
if|if
condition|(
name|getParentId
argument_list|()
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|Enumeration
name|e
init|=
name|getCourse
argument_list|()
operator|.
name|getClassAssignments
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|ClassAssignmentBean
name|clazz
init|=
operator|(
name|ClassAssignmentBean
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
name|clazz
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|getParentId
argument_list|()
argument_list|)
condition|)
return|return
name|clazz
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|int
name|getIndent
parameter_list|()
block|{
name|int
name|indent
init|=
literal|0
decl_stmt|;
name|ClassAssignmentBean
name|clazz
init|=
name|getParentBean
argument_list|()
decl_stmt|;
while|while
condition|(
name|clazz
operator|!=
literal|null
condition|)
block|{
name|indent
operator|++
expr_stmt|;
name|clazz
operator|=
name|clazz
operator|.
name|getParentBean
argument_list|()
expr_stmt|;
block|}
return|return
name|indent
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|ChoiceBean
block|{
name|String
name|iId
decl_stmt|;
name|boolean
name|iAvailable
decl_stmt|;
name|String
name|iTime
decl_stmt|;
name|String
name|iDate
decl_stmt|;
name|String
name|iInstructor
decl_stmt|;
name|boolean
name|iSelected
init|=
literal|false
decl_stmt|;
name|boolean
name|iWaitlisted
init|=
literal|false
decl_stmt|;
name|ClassAssignmentBean
name|iClazz
decl_stmt|;
name|Vector
name|iDepends
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
specifier|public
name|ChoiceBean
parameter_list|(
name|ClassAssignmentBean
name|clazz
parameter_list|)
block|{
name|iClazz
operator|=
name|clazz
expr_stmt|;
block|}
specifier|public
name|ClassAssignmentBean
name|getClazz
parameter_list|()
block|{
return|return
name|iClazz
return|;
block|}
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|boolean
name|isAvailable
parameter_list|()
block|{
return|return
name|iAvailable
return|;
block|}
specifier|public
name|void
name|setAvailable
parameter_list|(
name|boolean
name|available
parameter_list|)
block|{
name|iAvailable
operator|=
name|available
expr_stmt|;
block|}
specifier|public
name|String
name|getTime
parameter_list|()
block|{
return|return
name|iTime
return|;
block|}
specifier|public
name|void
name|setTime
parameter_list|(
name|String
name|time
parameter_list|)
block|{
name|iTime
operator|=
name|time
expr_stmt|;
block|}
specifier|public
name|String
name|getDate
parameter_list|()
block|{
return|return
name|iDate
return|;
block|}
specifier|public
name|void
name|setDate
parameter_list|(
name|String
name|date
parameter_list|)
block|{
name|iDate
operator|=
name|date
expr_stmt|;
block|}
specifier|public
name|String
name|getInstructor
parameter_list|()
block|{
return|return
name|iInstructor
return|;
block|}
specifier|public
name|void
name|setInstructor
parameter_list|(
name|String
name|instructor
parameter_list|)
block|{
name|iInstructor
operator|=
name|instructor
expr_stmt|;
block|}
specifier|public
name|boolean
name|isSelected
parameter_list|()
block|{
return|return
name|iSelected
return|;
block|}
specifier|public
name|void
name|setSelected
parameter_list|(
name|boolean
name|selected
parameter_list|)
block|{
name|iSelected
operator|=
name|selected
expr_stmt|;
block|}
specifier|public
name|boolean
name|isDefault
parameter_list|()
block|{
return|return
operator|(
name|getClazz
argument_list|()
operator|.
name|getTime
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|getClazz
argument_list|()
operator|.
name|getTime
argument_list|()
operator|)
operator|.
name|equals
argument_list|(
name|getTime
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|getTime
argument_list|()
argument_list|)
operator|&&
operator|(
name|getClazz
argument_list|()
operator|.
name|getInstructor
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|getClazz
argument_list|()
operator|.
name|getInstructor
argument_list|()
operator|)
operator|.
name|equals
argument_list|(
name|getInstructor
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|getInstructor
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isWaitlisted
parameter_list|()
block|{
return|return
name|iWaitlisted
return|;
block|}
specifier|public
name|void
name|setWaitlisted
parameter_list|(
name|boolean
name|waitlisted
parameter_list|)
block|{
name|iWaitlisted
operator|=
name|waitlisted
expr_stmt|;
block|}
specifier|public
name|Vector
name|getDepends
parameter_list|()
block|{
return|return
name|iDepends
return|;
block|}
specifier|public
name|String
name|getParent
parameter_list|()
block|{
name|StringBuffer
name|sb
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
for|for
control|(
name|Enumeration
name|e
init|=
name|getDepends
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|DependsBean
name|dep
init|=
operator|(
name|DependsBean
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|ChoiceBean
name|choice
init|=
name|dep
operator|.
name|getDepChoice
argument_list|()
decl_stmt|;
if|if
condition|(
name|sb
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
operator|!
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|)
name|sb
operator|.
name|append
argument_list|(
literal|" or "
argument_list|)
expr_stmt|;
else|else
name|sb
operator|.
name|append
argument_list|(
literal|", "
argument_list|)
expr_stmt|;
block|}
name|sb
operator|.
name|append
argument_list|(
name|choice
operator|.
name|getTime
argument_list|()
operator|+
operator|(
name|choice
operator|.
name|getInstructor
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|" "
operator|+
name|choice
operator|.
name|getInstructor
argument_list|()
operator|)
argument_list|)
expr_stmt|;
block|}
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|dependsOn
parameter_list|(
name|ChoiceBean
name|ch
parameter_list|)
block|{
for|for
control|(
name|Enumeration
name|e
init|=
name|getDepends
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|DependsBean
name|dep
init|=
operator|(
name|DependsBean
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
name|dep
operator|.
name|dependsOn
argument_list|(
name|ch
argument_list|)
condition|)
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|String
name|getSelectCondition
parameter_list|()
block|{
name|String
name|con
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Enumeration
name|g
init|=
name|getDepends
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|g
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|DependsBean
name|dep
init|=
operator|(
name|DependsBean
operator|)
name|g
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
name|con
operator|==
literal|null
condition|)
name|con
operator|=
literal|""
expr_stmt|;
else|else
name|con
operator|+=
literal|" || "
expr_stmt|;
name|con
operator|+=
name|dep
operator|.
name|getSelectCondition
argument_list|()
expr_stmt|;
block|}
return|return
name|con
return|;
block|}
specifier|public
name|String
name|getWaitlistCondition
parameter_list|()
block|{
name|String
name|con
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Enumeration
name|g
init|=
name|getDepends
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|g
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|DependsBean
name|dep
init|=
operator|(
name|DependsBean
operator|)
name|g
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
name|con
operator|==
literal|null
condition|)
name|con
operator|=
literal|""
expr_stmt|;
else|else
name|con
operator|+=
literal|" || "
expr_stmt|;
name|con
operator|+=
name|dep
operator|.
name|getWaitlistCondition
argument_list|()
expr_stmt|;
block|}
return|return
name|con
return|;
block|}
specifier|public
name|void
name|printOnChangeScript
parameter_list|(
name|JspWriter
name|out
parameter_list|,
name|String
name|indent
parameter_list|)
throws|throws
name|IOException
block|{
comment|//this choice was changed
for|for
control|(
name|Enumeration
name|e
init|=
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getClassAssignments
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|ClassAssignmentBean
name|clazz
init|=
operator|(
name|ClassAssignmentBean
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
for|for
control|(
name|Enumeration
name|f
init|=
name|clazz
operator|.
name|getChoices
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|f
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|ChoiceBean
name|ch
init|=
operator|(
name|ChoiceBean
operator|)
name|f
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
name|ch
operator|.
name|dependsOn
argument_list|(
name|this
argument_list|)
condition|)
block|{
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"// "
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" "
operator|+
name|ch
operator|.
name|getTime
argument_list|()
operator|+
literal|" depends on this choice"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"changed = false;"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"select = getSelect('"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getSubjectArea
argument_list|()
operator|+
literal|"','"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getCourseNumber
argument_list|()
operator|+
literal|"','"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getTitle
argument_list|()
operator|+
literal|"','"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getId
argument_list|()
operator|+
literal|"','"
operator|+
name|ch
operator|.
name|getId
argument_list|()
operator|+
literal|"');"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"canSelect = "
operator|+
name|ch
operator|.
name|getSelectCondition
argument_list|()
operator|+
literal|";"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"waitlist = getWaitlist('"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getSubjectArea
argument_list|()
operator|+
literal|"','"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getCourseNumber
argument_list|()
operator|+
literal|"','"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getTitle
argument_list|()
operator|+
literal|"','"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getId
argument_list|()
operator|+
literal|"','"
operator|+
name|ch
operator|.
name|getId
argument_list|()
operator|+
literal|"');"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"canWaitlist = (select==null || !canSelect)&& ("
operator|+
name|ch
operator|.
name|getWaitlistCondition
argument_list|()
operator|+
literal|");"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"if (select!=null&& (select.checked!=canSelect || select.disabled==canSelect)) {"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"\tselect.disabled=!canSelect; changed=true;"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"\twaitlist.checked=false; waitlist.disabled=false;"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"\tcurrentSelection = getSelectedChoice('"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getSubjectArea
argument_list|()
operator|+
literal|"','"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getCourseNumber
argument_list|()
operator|+
literal|"','"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getTitle
argument_list|()
operator|+
literal|"','"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getId
argument_list|()
operator|+
literal|"');"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"\tif (canSelect&& currentSelection.value=='') select.checked=true;"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"\tif (!canSelect) select.checked=false;"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"}"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"if (waitlist.checked!=canWaitlist || waitlist.disabled==canWaitlist) {"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"\twaitlist.checked=canWaitlist; waitlist.disabled=!canWaitlist; changed=true;"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"}"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"if (changed) {"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"\tgetChoiceTR('"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getSubjectArea
argument_list|()
operator|+
literal|"','"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getCourseNumber
argument_list|()
operator|+
literal|"','"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getTitle
argument_list|()
operator|+
literal|"','"
operator|+
name|ch
operator|.
name|getId
argument_list|()
operator|+
literal|"').style.display = ((select==null?true:select.disabled)&& waitlist.disabled ? 'none' : 'table-row');"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"\tchoiceChanged('"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getSubjectArea
argument_list|()
operator|+
literal|"','"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getCourseNumber
argument_list|()
operator|+
literal|"','"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getTitle
argument_list|()
operator|+
literal|"','"
operator|+
name|ch
operator|.
name|getClazz
argument_list|()
operator|.
name|getId
argument_list|()
operator|+
literal|"','"
operator|+
name|ch
operator|.
name|getId
argument_list|()
operator|+
literal|"', type);"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|indent
operator|+
literal|"}"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|public
name|boolean
name|isSelectDisabled
parameter_list|()
block|{
if|if
condition|(
operator|!
name|isAvailable
argument_list|()
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|getDepends
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|false
return|;
for|for
control|(
name|Enumeration
name|e
init|=
name|getDepends
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|DependsBean
name|d
init|=
operator|(
name|DependsBean
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
name|d
operator|.
name|isSelected
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|isWaitDisabled
parameter_list|()
block|{
if|if
condition|(
operator|!
name|isSelectDisabled
argument_list|()
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|getDepends
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|false
return|;
for|for
control|(
name|Enumeration
name|e
init|=
name|getDepends
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|DependsBean
name|d
init|=
operator|(
name|DependsBean
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
name|d
operator|.
name|canBeWaitlisted
argument_list|()
condition|)
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|String
name|getDisplay
parameter_list|()
block|{
if|if
condition|(
name|isWaitDisabled
argument_list|()
operator|&&
name|isSelectDisabled
argument_list|()
condition|)
return|return
literal|"none"
return|;
else|else
return|return
literal|"table-row"
return|;
block|}
block|}
specifier|public
class|class
name|DependsBean
block|{
name|String
name|iClassId
decl_stmt|;
name|String
name|iChoiceId
decl_stmt|;
name|ChoiceBean
name|iChoice
decl_stmt|;
name|Vector
name|iDepends
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
specifier|public
name|DependsBean
parameter_list|(
name|ChoiceBean
name|choice
parameter_list|)
block|{
name|iChoice
operator|=
name|choice
expr_stmt|;
block|}
specifier|public
name|ChoiceBean
name|getChoice
parameter_list|()
block|{
return|return
name|iChoice
return|;
block|}
specifier|public
name|String
name|getChoiceId
parameter_list|()
block|{
return|return
name|iChoiceId
return|;
block|}
specifier|public
name|void
name|setChoiceId
parameter_list|(
name|String
name|choiceId
parameter_list|)
block|{
name|iChoiceId
operator|=
name|choiceId
expr_stmt|;
block|}
specifier|public
name|String
name|getClassId
parameter_list|()
block|{
return|return
name|iClassId
return|;
block|}
specifier|public
name|void
name|setClassId
parameter_list|(
name|String
name|classId
parameter_list|)
block|{
name|iClassId
operator|=
name|classId
expr_stmt|;
block|}
specifier|public
name|Vector
name|getDepends
parameter_list|()
block|{
return|return
name|iDepends
return|;
block|}
specifier|public
name|ChoiceBean
name|getDepChoice
parameter_list|()
block|{
for|for
control|(
name|Enumeration
name|e
init|=
name|getChoice
argument_list|()
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getClassAssignments
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|ClassAssignmentBean
name|clazz
init|=
operator|(
name|ClassAssignmentBean
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|clazz
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|getClassId
argument_list|()
argument_list|)
condition|)
continue|continue;
for|for
control|(
name|Enumeration
name|f
init|=
name|clazz
operator|.
name|getChoices
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|f
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|ChoiceBean
name|choice
init|=
operator|(
name|ChoiceBean
operator|)
name|f
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
name|choice
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|getChoiceId
argument_list|()
argument_list|)
condition|)
return|return
name|choice
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|boolean
name|dependsOn
parameter_list|(
name|ChoiceBean
name|ch
parameter_list|)
block|{
if|if
condition|(
name|getChoiceId
argument_list|()
operator|.
name|equals
argument_list|(
name|ch
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
return|return
literal|true
return|;
for|for
control|(
name|Enumeration
name|e
init|=
name|getDepends
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|DependsBean
name|dep
init|=
operator|(
name|DependsBean
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
name|dep
operator|.
name|dependsOn
argument_list|(
name|ch
argument_list|)
condition|)
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|String
name|getSelectCondition
parameter_list|()
block|{
name|String
name|con
init|=
literal|"(isSelected('"
operator|+
name|getChoice
argument_list|()
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getSubjectArea
argument_list|()
operator|+
literal|"','"
operator|+
name|getChoice
argument_list|()
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getCourseNumber
argument_list|()
operator|+
literal|"','"
operator|+
name|getChoice
argument_list|()
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getTitle
argument_list|()
operator|+
literal|"','"
operator|+
name|getClassId
argument_list|()
operator|+
literal|"','"
operator|+
name|getChoiceId
argument_list|()
operator|+
literal|"')"
decl_stmt|;
if|if
condition|(
operator|!
name|getDepends
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|con
operator|+=
literal|"&& ("
expr_stmt|;
for|for
control|(
name|Enumeration
name|e
init|=
name|getDepends
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|DependsBean
name|dep
init|=
operator|(
name|DependsBean
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|con
operator|+=
name|dep
operator|.
name|getSelectCondition
argument_list|()
expr_stmt|;
block|}
name|con
operator|+=
literal|" )"
expr_stmt|;
block|}
return|return
name|con
operator|+
literal|")"
return|;
block|}
specifier|public
name|String
name|getWaitlistCondition
parameter_list|()
block|{
name|String
name|con
init|=
literal|"((isWaitlisted('"
operator|+
name|getChoice
argument_list|()
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getSubjectArea
argument_list|()
operator|+
literal|"','"
operator|+
name|getChoice
argument_list|()
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getCourseNumber
argument_list|()
operator|+
literal|"','"
operator|+
name|getChoice
argument_list|()
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getTitle
argument_list|()
operator|+
literal|"','"
operator|+
name|getClassId
argument_list|()
operator|+
literal|"','"
operator|+
name|getChoiceId
argument_list|()
operator|+
literal|"') || isSelected('"
operator|+
name|getChoice
argument_list|()
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getSubjectArea
argument_list|()
operator|+
literal|"','"
operator|+
name|getChoice
argument_list|()
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getCourseNumber
argument_list|()
operator|+
literal|"','"
operator|+
name|getChoice
argument_list|()
operator|.
name|getClazz
argument_list|()
operator|.
name|getCourse
argument_list|()
operator|.
name|getTitle
argument_list|()
operator|+
literal|"','"
operator|+
name|getClassId
argument_list|()
operator|+
literal|"','"
operator|+
name|getChoiceId
argument_list|()
operator|+
literal|"'))"
decl_stmt|;
if|if
condition|(
operator|!
name|getDepends
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|con
operator|+=
literal|"&& ("
expr_stmt|;
for|for
control|(
name|Enumeration
name|e
init|=
name|getDepends
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|DependsBean
name|dep
init|=
operator|(
name|DependsBean
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|con
operator|+=
name|dep
operator|.
name|getWaitlistCondition
argument_list|()
expr_stmt|;
block|}
name|con
operator|+=
literal|")"
expr_stmt|;
block|}
return|return
name|con
operator|+
literal|")"
return|;
block|}
specifier|public
name|boolean
name|isSelected
parameter_list|()
block|{
if|if
condition|(
operator|!
name|getDepChoice
argument_list|()
operator|.
name|isSelected
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|getDepends
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|true
return|;
for|for
control|(
name|Enumeration
name|e
init|=
name|getDepends
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|DependsBean
name|d
init|=
operator|(
name|DependsBean
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
name|d
operator|.
name|isSelected
argument_list|()
condition|)
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isWaitlisted
parameter_list|()
block|{
if|if
condition|(
operator|!
name|getDepChoice
argument_list|()
operator|.
name|isWaitlisted
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|getDepends
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|true
return|;
for|for
control|(
name|Enumeration
name|e
init|=
name|getDepends
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|DependsBean
name|d
init|=
operator|(
name|DependsBean
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
name|d
operator|.
name|isWaitlisted
argument_list|()
condition|)
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|canBeWaitlisted
parameter_list|()
block|{
if|if
condition|(
operator|!
name|getDepChoice
argument_list|()
operator|.
name|isWaitlisted
argument_list|()
operator|&&
operator|!
name|getDepChoice
argument_list|()
operator|.
name|isSelected
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|getDepends
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|true
return|;
for|for
control|(
name|Enumeration
name|e
init|=
name|getDepends
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|DependsBean
name|d
init|=
operator|(
name|DependsBean
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
name|d
operator|.
name|canBeWaitlisted
argument_list|()
condition|)
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
block|}
specifier|public
name|void
name|importDepends
parameter_list|(
name|DependsBean
name|dep
parameter_list|,
name|Element
name|depEl
parameter_list|)
block|{
for|for
control|(
name|Iterator
name|i
init|=
name|depEl
operator|.
name|elementIterator
argument_list|(
literal|"depends"
argument_list|)
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Element
name|innerDepEl
init|=
operator|(
name|Element
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|DependsBean
name|innerDep
init|=
operator|new
name|DependsBean
argument_list|(
name|dep
operator|.
name|getChoice
argument_list|()
argument_list|)
decl_stmt|;
name|innerDep
operator|.
name|setChoiceId
argument_list|(
name|innerDepEl
operator|.
name|attributeValue
argument_list|(
literal|"choice"
argument_list|)
argument_list|)
expr_stmt|;
name|innerDep
operator|.
name|setClassId
argument_list|(
name|innerDepEl
operator|.
name|attributeValue
argument_list|(
literal|"class"
argument_list|)
argument_list|)
expr_stmt|;
name|dep
operator|.
name|getDepends
argument_list|()
operator|.
name|add
argument_list|(
name|innerDep
argument_list|)
expr_stmt|;
name|importDepends
argument_list|(
name|innerDep
argument_list|,
name|innerDepEl
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|load
parameter_list|(
name|Session
name|session
parameter_list|,
name|Element
name|studentElement
parameter_list|,
name|boolean
name|includeCourseRequests
parameter_list|,
name|HttpServletRequest
name|httpRequest
parameter_list|)
block|{
if|if
condition|(
name|includeCourseRequests
condition|)
block|{
name|iRequests
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iNrRequests
operator|=
literal|0
expr_stmt|;
name|iNrAltRequests
operator|=
literal|0
expr_stmt|;
name|Element
name|courseRequestsElement
init|=
name|studentElement
operator|.
name|element
argument_list|(
literal|"courseRequests"
argument_list|)
decl_stmt|;
if|if
condition|(
name|courseRequestsElement
operator|==
literal|null
condition|)
return|return;
for|for
control|(
name|Iterator
name|i
init|=
name|courseRequestsElement
operator|.
name|elementIterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Element
name|requestElement
init|=
operator|(
name|Element
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|boolean
name|alternative
init|=
literal|"true"
operator|.
name|equals
argument_list|(
name|requestElement
operator|.
name|attributeValue
argument_list|(
literal|"alternative"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
literal|"freeTime"
operator|.
name|equals
argument_list|(
name|requestElement
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|RequestBean
name|request
init|=
name|getFreeTimeBean
argument_list|(
name|session
argument_list|,
name|requestElement
operator|.
name|attributeValue
argument_list|(
literal|"days"
argument_list|)
argument_list|,
name|requestElement
operator|.
name|attributeValue
argument_list|(
literal|"startTime"
argument_list|)
argument_list|,
name|requestElement
operator|.
name|attributeValue
argument_list|(
literal|"endTime"
argument_list|)
argument_list|)
decl_stmt|;
name|iRequests
operator|.
name|add
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
literal|"courseOffering"
operator|.
name|equals
argument_list|(
name|requestElement
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|String
name|subjectArea
init|=
name|requestElement
operator|.
name|attributeValue
argument_list|(
literal|"subjectArea"
argument_list|)
decl_stmt|;
name|String
name|courseNumber
init|=
name|requestElement
operator|.
name|attributeValue
argument_list|(
literal|"courseNumber"
argument_list|)
decl_stmt|;
name|boolean
name|waitlist
init|=
literal|"true"
operator|.
name|equals
argument_list|(
name|requestElement
operator|.
name|attributeValue
argument_list|(
literal|"waitlist"
argument_list|)
argument_list|)
decl_stmt|;
name|CourseOffering
name|co
init|=
name|CourseOffering
operator|.
name|findBySessionSubjAreaAbbvCourseNbr
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|subjectArea
argument_list|,
name|courseNumber
argument_list|)
decl_stmt|;
if|if
condition|(
name|co
operator|==
literal|null
condition|)
continue|continue;
name|Vector
name|courses
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
name|RequestBean
name|request
init|=
operator|new
name|RequestBean
argument_list|()
decl_stmt|;
name|request
operator|.
name|setType
argument_list|(
name|sTypeCourse
argument_list|)
expr_stmt|;
name|request
operator|.
name|setSubjectArea
argument_list|(
name|co
operator|.
name|getSubjectArea
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setCourseNbr
argument_list|(
name|co
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setWait
argument_list|(
operator|new
name|Boolean
argument_list|(
name|waitlist
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
name|String
name|courseNumbersMustBeUnique
init|=
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.courseNumber.unique"
argument_list|,
literal|"true"
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|j
init|=
name|requestElement
operator|.
name|elementIterator
argument_list|(
literal|"alternative"
argument_list|)
init|;
name|j
operator|.
name|hasNext
argument_list|()
condition|;
name|idx
operator|++
control|)
block|{
name|Element
name|altElement
init|=
operator|(
name|Element
operator|)
name|j
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|altSubjectArea
init|=
name|altElement
operator|.
name|attributeValue
argument_list|(
literal|"subjectArea"
argument_list|)
decl_stmt|;
name|String
name|altCourseNumber
init|=
name|altElement
operator|.
name|attributeValue
argument_list|(
literal|"courseNumber"
argument_list|)
decl_stmt|;
name|CourseOffering
name|aco
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|courseNumbersMustBeUnique
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"true"
argument_list|)
condition|)
block|{
name|aco
operator|=
name|CourseOffering
operator|.
name|findBySessionSubjAreaAbbvCourseNbr
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|altSubjectArea
argument_list|,
name|altCourseNumber
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|String
name|altTitle
init|=
name|altElement
operator|.
name|attributeValue
argument_list|(
literal|"title"
argument_list|)
decl_stmt|;
name|aco
operator|=
name|CourseOffering
operator|.
name|findBySessionSubjAreaAbbvCourseNbrTitle
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|altSubjectArea
argument_list|,
name|altCourseNumber
argument_list|,
name|altTitle
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|aco
operator|==
literal|null
condition|)
continue|continue;
if|if
condition|(
name|idx
operator|==
literal|0
condition|)
block|{
name|request
operator|.
name|setAlt1SubjectArea
argument_list|(
name|aco
operator|.
name|getSubjectArea
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAlt1CourseNbr
argument_list|(
name|aco
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|idx
operator|==
literal|1
condition|)
block|{
name|request
operator|.
name|setAlt2SubjectArea
argument_list|(
name|aco
operator|.
name|getSubjectArea
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setAlt2CourseNbr
argument_list|(
name|aco
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|iRequests
operator|.
name|add
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|alternative
condition|)
name|iNrAltRequests
operator|++
expr_stmt|;
else|else
name|iNrRequests
operator|++
expr_stmt|;
block|}
block|}
name|iCourseAssignments
operator|.
name|clear
argument_list|()
expr_stmt|;
name|Element
name|scheduleElement
init|=
name|studentElement
operator|.
name|element
argument_list|(
literal|"schedule"
argument_list|)
decl_stmt|;
if|if
condition|(
name|scheduleElement
operator|!=
literal|null
condition|)
for|for
control|(
name|Iterator
name|i
init|=
name|scheduleElement
operator|.
name|elementIterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Element
name|element
init|=
operator|(
name|Element
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
literal|"courseOffering"
operator|.
name|equals
argument_list|(
name|element
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|CourseAssignmentBean
name|course
init|=
operator|new
name|CourseAssignmentBean
argument_list|()
decl_stmt|;
name|course
operator|.
name|setSubjectArea
argument_list|(
name|element
operator|.
name|attributeValue
argument_list|(
literal|"subjectArea"
argument_list|)
argument_list|)
expr_stmt|;
name|course
operator|.
name|setCourseNumber
argument_list|(
name|element
operator|.
name|attributeValue
argument_list|(
literal|"courseNumber"
argument_list|)
argument_list|)
expr_stmt|;
name|course
operator|.
name|setTitle
argument_list|(
name|element
operator|.
name|attributeValue
argument_list|(
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|j
init|=
name|element
operator|.
name|elementIterator
argument_list|(
literal|"class"
argument_list|)
init|;
name|j
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Element
name|classElement
init|=
operator|(
name|Element
operator|)
name|j
operator|.
name|next
argument_list|()
decl_stmt|;
name|ClassAssignmentBean
name|clazz
init|=
operator|new
name|ClassAssignmentBean
argument_list|(
name|course
argument_list|)
decl_stmt|;
name|clazz
operator|.
name|setId
argument_list|(
name|classElement
operator|.
name|attributeValue
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|setParentId
argument_list|(
name|classElement
operator|.
name|attributeValue
argument_list|(
literal|"parent"
argument_list|)
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|setAssignmentId
argument_list|(
name|classElement
operator|.
name|attributeValue
argument_list|(
literal|"assignmentId"
argument_list|)
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|setName
argument_list|(
name|classElement
operator|.
name|attributeValue
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|setTime
argument_list|(
name|classElement
operator|.
name|attributeValue
argument_list|(
literal|"time"
argument_list|)
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|setStartTime
argument_list|(
name|classElement
operator|.
name|attributeValue
argument_list|(
literal|"startTime"
argument_list|)
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|setEndTime
argument_list|(
name|classElement
operator|.
name|attributeValue
argument_list|(
literal|"endTime"
argument_list|)
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|setDays
argument_list|(
name|classElement
operator|.
name|attributeValue
argument_list|(
literal|"days"
argument_list|)
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|setDate
argument_list|(
name|classElement
operator|.
name|attributeValue
argument_list|(
literal|"date"
argument_list|)
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|setLocation
argument_list|(
name|classElement
operator|.
name|attributeValue
argument_list|(
literal|"location"
argument_list|)
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|setInstructor
argument_list|(
name|classElement
operator|.
name|attributeValue
argument_list|(
literal|"instructor"
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|k
init|=
name|classElement
operator|.
name|elementIterator
argument_list|(
literal|"choice"
argument_list|)
init|;
name|k
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Element
name|choiceElement
init|=
operator|(
name|Element
operator|)
name|k
operator|.
name|next
argument_list|()
decl_stmt|;
name|ChoiceBean
name|choice
init|=
operator|new
name|ChoiceBean
argument_list|(
name|clazz
argument_list|)
decl_stmt|;
name|choice
operator|.
name|setId
argument_list|(
name|choiceElement
operator|.
name|attributeValue
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|choice
operator|.
name|setAvailable
argument_list|(
name|choiceElement
operator|.
name|attributeValue
argument_list|(
literal|"available"
argument_list|)
operator|==
literal|null
operator|||
literal|"true"
operator|.
name|equals
argument_list|(
name|choiceElement
operator|.
name|attributeValue
argument_list|(
literal|"available"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|choice
operator|.
name|setTime
argument_list|(
name|choiceElement
operator|.
name|attributeValue
argument_list|(
literal|"time"
argument_list|)
argument_list|)
expr_stmt|;
name|choice
operator|.
name|setDate
argument_list|(
name|choiceElement
operator|.
name|attributeValue
argument_list|(
literal|"date"
argument_list|)
argument_list|)
expr_stmt|;
name|choice
operator|.
name|setInstructor
argument_list|(
name|choiceElement
operator|.
name|attributeValue
argument_list|(
literal|"instructor"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"select"
operator|.
name|equals
argument_list|(
name|choiceElement
operator|.
name|attributeValue
argument_list|(
literal|"selection"
argument_list|)
argument_list|)
condition|)
block|{
name|choice
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
literal|"wait"
operator|.
name|equals
argument_list|(
name|choiceElement
operator|.
name|attributeValue
argument_list|(
literal|"selection"
argument_list|)
argument_list|)
condition|)
block|{
name|choice
operator|.
name|setWaitlisted
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|clazz
operator|.
name|getChoices
argument_list|()
operator|.
name|add
argument_list|(
name|choice
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|l
init|=
name|choiceElement
operator|.
name|elementIterator
argument_list|(
literal|"depends"
argument_list|)
init|;
name|l
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Element
name|depEl
init|=
operator|(
name|Element
operator|)
name|l
operator|.
name|next
argument_list|()
decl_stmt|;
name|DependsBean
name|dep
init|=
operator|new
name|DependsBean
argument_list|(
name|choice
argument_list|)
decl_stmt|;
name|dep
operator|.
name|setClassId
argument_list|(
name|depEl
operator|.
name|attributeValue
argument_list|(
literal|"class"
argument_list|)
argument_list|)
expr_stmt|;
name|dep
operator|.
name|setChoiceId
argument_list|(
name|depEl
operator|.
name|attributeValue
argument_list|(
literal|"choice"
argument_list|)
argument_list|)
expr_stmt|;
name|importDepends
argument_list|(
name|dep
argument_list|,
name|depEl
argument_list|)
expr_stmt|;
name|choice
operator|.
name|getDepends
argument_list|()
operator|.
name|add
argument_list|(
name|dep
argument_list|)
expr_stmt|;
block|}
block|}
name|course
operator|.
name|getClassAssignments
argument_list|()
operator|.
name|add
argument_list|(
name|clazz
argument_list|)
expr_stmt|;
block|}
name|iCourseAssignments
operator|.
name|add
argument_list|(
name|course
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
literal|"freeTime"
operator|.
name|equals
argument_list|(
name|element
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|CourseAssignmentBean
name|course
init|=
operator|new
name|CourseAssignmentBean
argument_list|()
decl_stmt|;
name|course
operator|.
name|setSubjectArea
argument_list|(
literal|"Free"
argument_list|)
expr_stmt|;
name|course
operator|.
name|setCourseNumber
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|course
operator|.
name|setTitle
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|ClassAssignmentBean
name|clazz
init|=
operator|new
name|ClassAssignmentBean
argument_list|(
name|course
argument_list|)
decl_stmt|;
name|clazz
operator|.
name|setName
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|setTime
argument_list|(
name|element
operator|.
name|attributeValue
argument_list|(
literal|"time"
argument_list|)
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|setStartTime
argument_list|(
name|element
operator|.
name|attributeValue
argument_list|(
literal|"startTime"
argument_list|)
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|setEndTime
argument_list|(
name|element
operator|.
name|attributeValue
argument_list|(
literal|"endTime"
argument_list|)
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|setDays
argument_list|(
name|element
operator|.
name|attributeValue
argument_list|(
literal|"days"
argument_list|)
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|setStartTime
argument_list|(
name|element
operator|.
name|attributeValue
argument_list|(
literal|"length"
argument_list|)
argument_list|)
expr_stmt|;
name|course
operator|.
name|getClassAssignments
argument_list|()
operator|.
name|add
argument_list|(
name|clazz
argument_list|)
expr_stmt|;
name|iCourseAssignments
operator|.
name|add
argument_list|(
name|course
argument_list|)
expr_stmt|;
block|}
block|}
name|iMessages
operator|.
name|clear
argument_list|()
expr_stmt|;
name|Element
name|ackElement
init|=
name|studentElement
operator|.
name|element
argument_list|(
literal|"acknowledgement"
argument_list|)
decl_stmt|;
if|if
condition|(
name|ackElement
operator|!=
literal|null
condition|)
for|for
control|(
name|Iterator
name|i
init|=
name|ackElement
operator|.
name|elementIterator
argument_list|(
literal|"message"
argument_list|)
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Element
name|msgElement
init|=
operator|(
name|Element
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|MessageBean
name|message
init|=
operator|new
name|MessageBean
argument_list|()
decl_stmt|;
name|message
operator|.
name|setType
argument_list|(
name|msgElement
operator|.
name|attributeValue
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|message
operator|.
name|setMessage
argument_list|(
name|msgElement
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|iMessages
operator|.
name|add
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|httpRequest
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Enumeration
name|e
init|=
name|iCourseAssignments
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|CourseAssignmentBean
name|course
init|=
operator|(
name|CourseAssignmentBean
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
for|for
control|(
name|Enumeration
name|f
init|=
name|course
operator|.
name|getClassAssignments
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|f
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|ClassAssignmentBean
name|clazz
init|=
operator|(
name|ClassAssignmentBean
operator|)
name|f
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|String
index|[]
name|selectedChoices
init|=
name|httpRequest
operator|.
name|getParameterValues
argument_list|(
literal|"chs_"
operator|+
name|course
operator|.
name|getSubjectArea
argument_list|()
operator|+
literal|":"
operator|+
name|course
operator|.
name|getCourseNumber
argument_list|()
operator|+
literal|":"
operator|+
name|course
operator|.
name|getTitle
argument_list|()
operator|+
literal|":"
operator|+
name|clazz
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|waitlistedChoices
init|=
name|httpRequest
operator|.
name|getParameterValues
argument_list|(
literal|"chwl_"
operator|+
name|course
operator|.
name|getSubjectArea
argument_list|()
operator|+
literal|":"
operator|+
name|course
operator|.
name|getCourseNumber
argument_list|()
operator|+
literal|":"
operator|+
name|course
operator|.
name|getTitle
argument_list|()
operator|+
literal|":"
operator|+
name|clazz
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Enumeration
name|g
init|=
name|clazz
operator|.
name|getChoices
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|g
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|ChoiceBean
name|choice
init|=
operator|(
name|ChoiceBean
operator|)
name|g
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|boolean
name|selected
init|=
literal|false
decl_stmt|,
name|waitlisted
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|selectedChoices
operator|!=
literal|null
condition|)
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|selectedChoices
operator|.
name|length
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|choice
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|selectedChoices
index|[
name|i
index|]
argument_list|)
condition|)
block|{
name|selected
operator|=
literal|true
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|waitlistedChoices
operator|!=
literal|null
condition|)
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|waitlistedChoices
operator|.
name|length
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|choice
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|waitlistedChoices
index|[
name|i
index|]
argument_list|)
condition|)
block|{
name|waitlisted
operator|=
literal|true
expr_stmt|;
break|break;
block|}
name|choice
operator|.
name|setSelected
argument_list|(
name|selected
argument_list|)
expr_stmt|;
name|choice
operator|.
name|setWaitlisted
argument_list|(
name|waitlisted
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
specifier|public
specifier|static
name|String
name|startSlot2startTime
parameter_list|(
name|int
name|startSlot
parameter_list|)
block|{
name|int
name|minHrs
init|=
name|startSlot
operator|*
name|Constants
operator|.
name|SLOT_LENGTH_MIN
operator|+
name|Constants
operator|.
name|FIRST_SLOT_TIME_MIN
decl_stmt|;
return|return
name|sTwoNumbersDF
operator|.
name|format
argument_list|(
name|minHrs
operator|/
literal|60
argument_list|)
operator|+
name|sTwoNumbersDF
operator|.
name|format
argument_list|(
name|minHrs
operator|%
literal|60
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|String
name|timeLocation2endTime
parameter_list|(
name|TimeLocation
name|time
parameter_list|)
block|{
name|int
name|minHrs
init|=
operator|(
name|time
operator|.
name|getStartSlot
argument_list|()
operator|+
name|time
operator|.
name|getLength
argument_list|()
operator|)
operator|*
name|Constants
operator|.
name|SLOT_LENGTH_MIN
operator|+
name|Constants
operator|.
name|FIRST_SLOT_TIME_MIN
operator|-
name|time
operator|.
name|getBreakTime
argument_list|()
decl_stmt|;
return|return
name|sTwoNumbersDF
operator|.
name|format
argument_list|(
name|minHrs
operator|/
literal|60
argument_list|)
operator|+
name|sTwoNumbersDF
operator|.
name|format
argument_list|(
name|minHrs
operator|%
literal|60
argument_list|)
return|;
block|}
specifier|public
name|void
name|save
parameter_list|(
name|Session
name|session
parameter_list|,
name|Element
name|studentElement
parameter_list|,
name|boolean
name|commit
parameter_list|)
block|{
name|Element
name|courseRequestsElement
init|=
name|studentElement
operator|.
name|addElement
argument_list|(
literal|"updateCourseRequests"
argument_list|)
decl_stmt|;
name|courseRequestsElement
operator|.
name|addAttribute
argument_list|(
literal|"commit"
argument_list|,
operator|(
name|commit
condition|?
literal|"true"
else|:
literal|"false"
operator|)
argument_list|)
expr_stmt|;
name|courseRequestsElement
operator|.
name|addAttribute
argument_list|(
literal|"distribution"
argument_list|,
literal|"spread"
argument_list|)
expr_stmt|;
for|for
control|(
name|Enumeration
name|e
init|=
name|iRequests
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|RequestBean
name|request
init|=
operator|(
name|RequestBean
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
operator|new
name|Long
argument_list|(
name|sTypeFreeTime
argument_list|)
operator|.
name|equals
argument_list|(
name|request
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
block|{
name|Element
name|reqElement
init|=
name|courseRequestsElement
operator|.
name|addElement
argument_list|(
literal|"freeTime"
argument_list|)
decl_stmt|;
name|TimeLocation
name|time
init|=
name|request
operator|.
name|getFreeTime
argument_list|(
name|session
argument_list|)
decl_stmt|;
name|reqElement
operator|.
name|addAttribute
argument_list|(
literal|"days"
argument_list|,
name|time
operator|.
name|getDayHeader
argument_list|()
argument_list|)
expr_stmt|;
name|reqElement
operator|.
name|addAttribute
argument_list|(
literal|"startTime"
argument_list|,
name|startSlot2startTime
argument_list|(
name|time
operator|.
name|getStartSlot
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reqElement
operator|.
name|addAttribute
argument_list|(
literal|"endTime"
argument_list|,
name|timeLocation2endTime
argument_list|(
name|time
argument_list|)
argument_list|)
expr_stmt|;
name|reqElement
operator|.
name|addAttribute
argument_list|(
literal|"length"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|time
operator|.
name|getNrSlotsPerMeeting
argument_list|()
operator|*
name|Constants
operator|.
name|SLOT_LENGTH_MIN
operator|-
name|time
operator|.
name|getBreakTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|CourseOffering
name|course
init|=
name|request
operator|.
name|getCourseOffering
argument_list|()
decl_stmt|;
if|if
condition|(
name|course
operator|==
literal|null
condition|)
continue|continue;
name|Element
name|reqElement
init|=
name|courseRequestsElement
operator|.
name|addElement
argument_list|(
literal|"courseOffering"
argument_list|)
decl_stmt|;
name|reqElement
operator|.
name|addAttribute
argument_list|(
literal|"subjectArea"
argument_list|,
name|course
operator|.
name|getSubjectAreaAbbv
argument_list|()
argument_list|)
expr_stmt|;
name|reqElement
operator|.
name|addAttribute
argument_list|(
literal|"courseNumber"
argument_list|,
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
expr_stmt|;
name|reqElement
operator|.
name|addAttribute
argument_list|(
literal|"title"
argument_list|,
name|course
operator|.
name|getTitle
argument_list|()
argument_list|)
expr_stmt|;
name|reqElement
operator|.
name|addAttribute
argument_list|(
literal|"waitlist"
argument_list|,
operator|(
name|request
operator|.
name|getWait
argument_list|()
operator|==
literal|null
condition|?
literal|"false"
else|:
name|request
operator|.
name|getWait
argument_list|()
operator|.
name|booleanValue
argument_list|()
condition|?
literal|"true"
else|:
literal|"false"
operator|)
argument_list|)
expr_stmt|;
name|CourseOffering
name|alt1Course
init|=
name|request
operator|.
name|getAlt1CourseOffering
argument_list|()
decl_stmt|;
if|if
condition|(
name|alt1Course
operator|!=
literal|null
condition|)
block|{
name|Element
name|element
init|=
name|reqElement
operator|.
name|addElement
argument_list|(
literal|"alternative"
argument_list|)
decl_stmt|;
name|element
operator|.
name|addAttribute
argument_list|(
literal|"subjectArea"
argument_list|,
name|alt1Course
operator|.
name|getSubjectAreaAbbv
argument_list|()
argument_list|)
expr_stmt|;
name|element
operator|.
name|addAttribute
argument_list|(
literal|"courseNumber"
argument_list|,
name|alt1Course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
expr_stmt|;
name|element
operator|.
name|addAttribute
argument_list|(
literal|"title"
argument_list|,
name|alt1Course
operator|.
name|getTitle
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|CourseOffering
name|alt2Course
init|=
name|request
operator|.
name|getAlt2CourseOffering
argument_list|()
decl_stmt|;
if|if
condition|(
name|alt2Course
operator|!=
literal|null
condition|)
block|{
name|Element
name|element
init|=
name|reqElement
operator|.
name|addElement
argument_list|(
literal|"alternative"
argument_list|)
decl_stmt|;
name|element
operator|.
name|addAttribute
argument_list|(
literal|"subjectArea"
argument_list|,
name|alt2Course
operator|.
name|getSubjectAreaAbbv
argument_list|()
argument_list|)
expr_stmt|;
name|element
operator|.
name|addAttribute
argument_list|(
literal|"courseNumber"
argument_list|,
name|alt2Course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
expr_stmt|;
name|element
operator|.
name|addAttribute
argument_list|(
literal|"title"
argument_list|,
name|alt2Course
operator|.
name|getTitle
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|request
operator|.
name|isAlternative
argument_list|()
condition|)
name|reqElement
operator|.
name|addAttribute
argument_list|(
literal|"alternative"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
block|}
block|}
name|Element
name|scheduleElement
init|=
name|studentElement
operator|.
name|addElement
argument_list|(
literal|"requestSchedule"
argument_list|)
decl_stmt|;
name|scheduleElement
operator|.
name|addAttribute
argument_list|(
literal|"type"
argument_list|,
literal|"request"
argument_list|)
expr_stmt|;
for|for
control|(
name|Enumeration
name|e
init|=
name|iCourseAssignments
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|CourseAssignmentBean
name|course
init|=
operator|(
name|CourseAssignmentBean
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
literal|"Free"
operator|.
name|equals
argument_list|(
name|course
operator|.
name|getSubjectArea
argument_list|()
argument_list|)
operator|&&
literal|""
operator|.
name|equals
argument_list|(
name|course
operator|.
name|getCourseNumber
argument_list|()
argument_list|)
condition|)
block|{
name|Element
name|freeTimeElement
init|=
name|scheduleElement
operator|.
name|addElement
argument_list|(
literal|"freeTime"
argument_list|)
decl_stmt|;
name|ClassAssignmentBean
name|clazz
init|=
operator|(
name|ClassAssignmentBean
operator|)
name|course
operator|.
name|getClassAssignments
argument_list|()
operator|.
name|firstElement
argument_list|()
decl_stmt|;
name|freeTimeElement
operator|.
name|addAttribute
argument_list|(
literal|"days"
argument_list|,
name|clazz
operator|.
name|getDays
argument_list|()
argument_list|)
expr_stmt|;
name|freeTimeElement
operator|.
name|addAttribute
argument_list|(
literal|"startTime"
argument_list|,
name|clazz
operator|.
name|getStartTime
argument_list|()
argument_list|)
expr_stmt|;
name|freeTimeElement
operator|.
name|addAttribute
argument_list|(
literal|"endTime"
argument_list|,
name|clazz
operator|.
name|getEndTime
argument_list|()
argument_list|)
expr_stmt|;
name|freeTimeElement
operator|.
name|addAttribute
argument_list|(
literal|"length"
argument_list|,
name|clazz
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Element
name|courseElement
init|=
name|scheduleElement
operator|.
name|addElement
argument_list|(
literal|"courseOffering"
argument_list|)
decl_stmt|;
name|courseElement
operator|.
name|addAttribute
argument_list|(
literal|"subjectArea"
argument_list|,
name|course
operator|.
name|getSubjectArea
argument_list|()
argument_list|)
expr_stmt|;
name|courseElement
operator|.
name|addAttribute
argument_list|(
literal|"courseNumber"
argument_list|,
name|course
operator|.
name|getCourseNumber
argument_list|()
argument_list|)
expr_stmt|;
name|courseElement
operator|.
name|addAttribute
argument_list|(
literal|"title"
argument_list|,
name|course
operator|.
name|getTitleNormal
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|course
operator|.
name|getClassAssignments
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|courseElement
operator|.
name|addAttribute
argument_list|(
literal|"waitlist"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
for|for
control|(
name|Enumeration
name|f
init|=
name|course
operator|.
name|getClassAssignments
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|f
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|ClassAssignmentBean
name|clazz
init|=
operator|(
name|ClassAssignmentBean
operator|)
name|f
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|Element
name|classElement
init|=
name|courseElement
operator|.
name|addElement
argument_list|(
literal|"class"
argument_list|)
decl_stmt|;
name|classElement
operator|.
name|addAttribute
argument_list|(
literal|"id"
argument_list|,
name|clazz
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|classElement
operator|.
name|addAttribute
argument_list|(
literal|"assignmentId"
argument_list|,
name|clazz
operator|.
name|getAssignmentId
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Enumeration
name|g
init|=
name|clazz
operator|.
name|getChoices
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|g
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|ChoiceBean
name|choice
init|=
operator|(
name|ChoiceBean
operator|)
name|g
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
name|choice
operator|.
name|isSelected
argument_list|()
operator|||
name|choice
operator|.
name|isWaitlisted
argument_list|()
condition|)
block|{
name|Element
name|choiceElement
init|=
name|classElement
operator|.
name|addElement
argument_list|(
literal|"choice"
argument_list|)
decl_stmt|;
name|choiceElement
operator|.
name|addAttribute
argument_list|(
literal|"id"
argument_list|,
name|choice
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|choice
operator|.
name|isSelected
argument_list|()
condition|)
name|choiceElement
operator|.
name|addAttribute
argument_list|(
literal|"selection"
argument_list|,
literal|"select"
argument_list|)
expr_stmt|;
else|else
name|choiceElement
operator|.
name|addAttribute
argument_list|(
literal|"selection"
argument_list|,
literal|"wait"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
block|}
specifier|public
name|String
name|getRequestFile
parameter_list|()
block|{
return|return
name|iRequestFile
return|;
block|}
specifier|public
name|void
name|setRequestFile
parameter_list|(
name|String
name|requestFile
parameter_list|)
block|{
name|iRequestFile
operator|=
name|requestFile
expr_stmt|;
block|}
specifier|public
name|String
name|getResponseFile
parameter_list|()
block|{
return|return
name|iResponseFile
return|;
block|}
specifier|public
name|void
name|setResponseFile
parameter_list|(
name|String
name|responseFile
parameter_list|)
block|{
name|iResponseFile
operator|=
name|responseFile
expr_stmt|;
block|}
specifier|public
name|void
name|printOnChangeScript
parameter_list|(
name|JspWriter
name|out
parameter_list|)
throws|throws
name|IOException
block|{
for|for
control|(
name|Enumeration
name|e
init|=
name|iCourseAssignments
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|CourseAssignmentBean
name|course
init|=
operator|(
name|CourseAssignmentBean
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"\tvar canSelect=false;"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"\tvar canWaitlist=false;"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"\tvar changed=false;"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"\tvar select=null;"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"\tvar waitlist=null;"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"\tvar currentSelection=null;"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"\tif (subjectArea=='"
operator|+
name|course
operator|.
name|getSubjectArea
argument_list|()
operator|+
literal|"'&& courseNumber=='"
operator|+
name|course
operator|.
name|getCourseNumber
argument_list|()
operator|+
literal|"'&& title=='"
operator|+
name|course
operator|.
name|getTitle
argument_list|()
operator|+
literal|"') { // "
operator|+
name|course
operator|.
name|getSubjectArea
argument_list|()
operator|+
literal|" "
operator|+
name|course
operator|.
name|getCourseNumber
argument_list|()
operator|+
literal|" - "
operator|+
name|course
operator|.
name|getTitle
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Enumeration
name|f
init|=
name|course
operator|.
name|getClassAssignments
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|f
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|ClassAssignmentBean
name|clazz
init|=
operator|(
name|ClassAssignmentBean
operator|)
name|f
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"\t\tif (classId=='"
operator|+
name|clazz
operator|.
name|getId
argument_list|()
operator|+
literal|"') { // "
operator|+
name|course
operator|.
name|getSubjectArea
argument_list|()
operator|+
literal|" "
operator|+
name|course
operator|.
name|getCourseNumber
argument_list|()
operator|+
literal|" "
operator|+
name|course
operator|.
name|getTitle
argument_list|()
operator|+
literal|" "
operator|+
name|clazz
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Enumeration
name|g
init|=
name|clazz
operator|.
name|getChoices
argument_list|()
operator|.
name|elements
argument_list|()
init|;
name|g
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|ChoiceBean
name|choice
init|=
operator|(
name|ChoiceBean
operator|)
name|g
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"\t\t\tif (chId=='"
operator|+
name|choice
operator|.
name|getId
argument_list|()
operator|+
literal|"') { // "
operator|+
name|choice
operator|.
name|getTime
argument_list|()
operator|+
literal|" "
operator|+
operator|(
name|choice
operator|.
name|getInstructor
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|choice
operator|.
name|getInstructor
argument_list|()
operator|)
argument_list|)
expr_stmt|;
name|choice
operator|.
name|printOnChangeScript
argument_list|(
name|out
argument_list|,
literal|"\t\t\t\t"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"\t\t\t}\n"
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|println
argument_list|(
literal|"\t\t}\n"
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|println
argument_list|(
literal|"\t}\n"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|getStudentId
parameter_list|()
block|{
return|return
name|iStudentId
return|;
block|}
specifier|public
name|void
name|setStudentId
parameter_list|(
name|String
name|studentId
parameter_list|)
block|{
name|iStudentId
operator|=
name|studentId
expr_stmt|;
block|}
specifier|public
name|boolean
name|isStudentLoaded
parameter_list|()
block|{
return|return
name|iStudentLoaded
return|;
block|}
specifier|public
name|void
name|setStudentLoaded
parameter_list|(
name|boolean
name|studentLoaded
parameter_list|)
block|{
name|iStudentLoaded
operator|=
name|studentLoaded
expr_stmt|;
block|}
block|}
end_class

end_unit

