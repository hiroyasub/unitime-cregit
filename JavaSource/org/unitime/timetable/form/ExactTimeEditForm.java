begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2008 - 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionErrors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|Transaction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ExactTimeMins
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|ExactTimeMinsDAO
import|;
end_import

begin_comment
comment|/**   * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|ExactTimeEditForm
extends|extends
name|ActionForm
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|7288169370839578510L
decl_stmt|;
specifier|private
name|String
name|iOp
decl_stmt|;
specifier|private
name|Vector
name|iExactTimeMins
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
specifier|public
name|ActionErrors
name|validate
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|ActionErrors
name|errors
init|=
operator|new
name|ActionErrors
argument_list|()
decl_stmt|;
return|return
name|errors
return|;
block|}
specifier|public
name|void
name|reset
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|iOp
operator|=
literal|null
expr_stmt|;
name|iExactTimeMins
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iExactTimeMins
operator|.
name|addAll
argument_list|(
operator|(
operator|new
name|ExactTimeMinsDAO
argument_list|()
operator|)
operator|.
name|findAll
argument_list|()
argument_list|)
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|iExactTimeMins
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|save
parameter_list|()
throws|throws
name|Exception
block|{
name|Transaction
name|tx
init|=
literal|null
decl_stmt|;
try|try
block|{
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
init|=
operator|(
operator|new
name|ExactTimeMinsDAO
argument_list|()
operator|)
operator|.
name|getSession
argument_list|()
decl_stmt|;
if|if
condition|(
name|hibSession
operator|.
name|getTransaction
argument_list|()
operator|==
literal|null
operator|||
operator|!
name|hibSession
operator|.
name|getTransaction
argument_list|()
operator|.
name|isActive
argument_list|()
condition|)
name|tx
operator|=
name|hibSession
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
for|for
control|(
name|Enumeration
name|e
init|=
name|iExactTimeMins
operator|.
name|elements
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|ExactTimeMins
name|ex
init|=
operator|(
name|ExactTimeMins
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|hibSession
operator|.
name|saveOrUpdate
argument_list|(
name|ex
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|tx
operator|!=
literal|null
condition|)
name|tx
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
if|if
condition|(
name|tx
operator|!=
literal|null
condition|)
name|tx
operator|.
name|rollback
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
specifier|public
name|String
name|getOp
parameter_list|()
block|{
return|return
name|iOp
return|;
block|}
specifier|public
name|void
name|setOp
parameter_list|(
name|String
name|op
parameter_list|)
block|{
name|iOp
operator|=
name|op
expr_stmt|;
block|}
specifier|public
name|int
name|getSize
parameter_list|()
block|{
return|return
name|iExactTimeMins
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|Vector
name|getExactTimeMins
parameter_list|()
block|{
return|return
name|iExactTimeMins
return|;
block|}
specifier|public
name|int
name|getMinsPerMtgMin
parameter_list|(
name|int
name|idx
parameter_list|)
block|{
return|return
operator|(
operator|(
name|ExactTimeMins
operator|)
name|iExactTimeMins
operator|.
name|elementAt
argument_list|(
name|idx
argument_list|)
operator|)
operator|.
name|getMinsPerMtgMin
argument_list|()
operator|.
name|intValue
argument_list|()
return|;
block|}
specifier|public
name|int
name|getMinsPerMtgMax
parameter_list|(
name|int
name|idx
parameter_list|)
block|{
return|return
operator|(
operator|(
name|ExactTimeMins
operator|)
name|iExactTimeMins
operator|.
name|elementAt
argument_list|(
name|idx
argument_list|)
operator|)
operator|.
name|getMinsPerMtgMax
argument_list|()
operator|.
name|intValue
argument_list|()
return|;
block|}
specifier|public
name|int
name|getNrTimeSlots
parameter_list|(
name|int
name|idx
parameter_list|)
block|{
return|return
operator|(
operator|(
name|ExactTimeMins
operator|)
name|iExactTimeMins
operator|.
name|elementAt
argument_list|(
name|idx
argument_list|)
operator|)
operator|.
name|getNrSlots
argument_list|()
operator|.
name|intValue
argument_list|()
return|;
block|}
specifier|public
name|int
name|getBreakTime
parameter_list|(
name|int
name|idx
parameter_list|)
block|{
return|return
operator|(
operator|(
name|ExactTimeMins
operator|)
name|iExactTimeMins
operator|.
name|elementAt
argument_list|(
name|idx
argument_list|)
operator|)
operator|.
name|getBreakTime
argument_list|()
operator|.
name|intValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setMinsPerMtgMin
parameter_list|(
name|int
name|idx
parameter_list|,
name|int
name|minsPerMtgMin
parameter_list|)
block|{
operator|(
operator|(
name|ExactTimeMins
operator|)
name|iExactTimeMins
operator|.
name|elementAt
argument_list|(
name|idx
argument_list|)
operator|)
operator|.
name|setMinsPerMtgMin
argument_list|(
operator|new
name|Integer
argument_list|(
name|minsPerMtgMin
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setMinsPerMtgMax
parameter_list|(
name|int
name|idx
parameter_list|,
name|int
name|minsPerMtgMax
parameter_list|)
block|{
operator|(
operator|(
name|ExactTimeMins
operator|)
name|iExactTimeMins
operator|.
name|elementAt
argument_list|(
name|idx
argument_list|)
operator|)
operator|.
name|setMinsPerMtgMax
argument_list|(
operator|new
name|Integer
argument_list|(
name|minsPerMtgMax
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setNrTimeSlots
parameter_list|(
name|int
name|idx
parameter_list|,
name|int
name|nrTimeSlots
parameter_list|)
block|{
operator|(
operator|(
name|ExactTimeMins
operator|)
name|iExactTimeMins
operator|.
name|elementAt
argument_list|(
name|idx
argument_list|)
operator|)
operator|.
name|setNrSlots
argument_list|(
operator|new
name|Integer
argument_list|(
name|nrTimeSlots
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setBreakTime
parameter_list|(
name|int
name|idx
parameter_list|,
name|int
name|breakTime
parameter_list|)
block|{
operator|(
operator|(
name|ExactTimeMins
operator|)
name|iExactTimeMins
operator|.
name|elementAt
argument_list|(
name|idx
argument_list|)
operator|)
operator|.
name|setBreakTime
argument_list|(
operator|new
name|Integer
argument_list|(
name|breakTime
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

