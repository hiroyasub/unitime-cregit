begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|action
operator|.
name|UniTimeAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DepartmentalInstructor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Staff
import|;
end_import

begin_class
specifier|public
class|class
name|InstructorListUpdateForm
implements|implements
name|UniTimeForm
block|{
comment|// --------------------------------------------------------- Instance Variables
specifier|private
name|String
name|deptCode
decl_stmt|;
specifier|private
name|String
name|deptName
decl_stmt|;
specifier|private
name|String
name|op
decl_stmt|;
specifier|private
name|Collection
name|assignedInstr
decl_stmt|;
specifier|private
name|Collection
name|availableInstr
decl_stmt|;
specifier|private
name|String
index|[]
name|assigned
decl_stmt|;
specifier|private
name|String
index|[]
name|available
decl_stmt|;
specifier|private
name|String
index|[]
name|assignedSelected
init|=
block|{}
decl_stmt|;
specifier|private
name|String
index|[]
name|availableSelected
init|=
block|{}
decl_stmt|;
specifier|private
name|String
name|nameFormat
decl_stmt|;
comment|// Filter settings
specifier|private
name|String
name|displayListType
decl_stmt|;
specifier|private
name|String
index|[]
name|displayPosType
decl_stmt|;
comment|// --------------------------------------------------------- Methods
comment|/** 	 *  	 */
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|6131705766470532900L
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|validate
parameter_list|(
name|UniTimeAction
name|action
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|reset
parameter_list|()
block|{
block|}
specifier|public
name|String
name|getDeptCode
parameter_list|()
block|{
return|return
name|deptCode
return|;
block|}
specifier|public
name|void
name|setDeptCode
parameter_list|(
name|String
name|deptCode
parameter_list|)
block|{
name|this
operator|.
name|deptCode
operator|=
name|deptCode
expr_stmt|;
block|}
specifier|public
name|String
name|getDeptName
parameter_list|()
block|{
return|return
name|deptName
return|;
block|}
specifier|public
name|void
name|setDeptName
parameter_list|(
name|String
name|deptName
parameter_list|)
block|{
name|this
operator|.
name|deptName
operator|=
name|deptName
expr_stmt|;
block|}
specifier|public
name|String
name|getOp
parameter_list|()
block|{
return|return
name|op
return|;
block|}
specifier|public
name|void
name|setOp
parameter_list|(
name|String
name|op
parameter_list|)
block|{
name|this
operator|.
name|op
operator|=
name|op
expr_stmt|;
block|}
specifier|public
name|String
index|[]
name|getAssigned
parameter_list|()
block|{
return|return
name|assigned
return|;
block|}
specifier|public
name|void
name|setAssigned
parameter_list|(
name|String
index|[]
name|assigned
parameter_list|)
block|{
name|this
operator|.
name|assigned
operator|=
name|assigned
expr_stmt|;
block|}
specifier|public
name|Collection
name|getAssignedInstr
parameter_list|()
block|{
return|return
name|assignedInstr
return|;
block|}
specifier|public
name|void
name|setAssignedInstr
parameter_list|(
name|Collection
name|assignedInstr
parameter_list|)
block|{
name|this
operator|.
name|assignedInstr
operator|=
name|assignedInstr
expr_stmt|;
block|}
specifier|public
name|String
index|[]
name|getAssignedSelected
parameter_list|()
block|{
return|return
name|assignedSelected
return|;
block|}
specifier|public
name|void
name|setAssignedSelected
parameter_list|(
name|String
index|[]
name|assignedSelected
parameter_list|)
block|{
name|this
operator|.
name|assignedSelected
operator|=
name|assignedSelected
expr_stmt|;
block|}
specifier|public
name|String
index|[]
name|getAvailable
parameter_list|()
block|{
return|return
name|available
return|;
block|}
specifier|public
name|void
name|setAvailable
parameter_list|(
name|String
index|[]
name|available
parameter_list|)
block|{
name|this
operator|.
name|available
operator|=
name|available
expr_stmt|;
block|}
specifier|public
name|Collection
name|getAvailableInstr
parameter_list|()
block|{
return|return
name|availableInstr
return|;
block|}
specifier|public
name|void
name|setAvailableInstr
parameter_list|(
name|Collection
name|availableInstr
parameter_list|)
block|{
name|this
operator|.
name|availableInstr
operator|=
name|availableInstr
expr_stmt|;
block|}
specifier|public
name|String
index|[]
name|getAvailableSelected
parameter_list|()
block|{
return|return
name|availableSelected
return|;
block|}
specifier|public
name|void
name|setAvailableSelected
parameter_list|(
name|String
index|[]
name|availableSelected
parameter_list|)
block|{
name|this
operator|.
name|availableSelected
operator|=
name|availableSelected
expr_stmt|;
block|}
specifier|public
name|String
name|getDisplayListType
parameter_list|()
block|{
return|return
name|displayListType
return|;
block|}
specifier|public
name|void
name|setDisplayListType
parameter_list|(
name|String
name|displayListType
parameter_list|)
block|{
name|this
operator|.
name|displayListType
operator|=
name|displayListType
expr_stmt|;
block|}
specifier|public
name|String
index|[]
name|getDisplayPosType
parameter_list|()
block|{
return|return
name|displayPosType
return|;
block|}
specifier|public
name|void
name|setDisplayPosType
parameter_list|(
name|String
index|[]
name|displayPosType
parameter_list|)
block|{
name|this
operator|.
name|displayPosType
operator|=
name|displayPosType
expr_stmt|;
block|}
specifier|public
name|void
name|setInstructors
parameter_list|()
block|{
name|int
name|i
init|=
literal|0
decl_stmt|;
name|Iterator
name|iter
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|assignedInstr
operator|!=
literal|null
condition|)
block|{
name|String
index|[]
name|assignedSelection
init|=
operator|new
name|String
index|[
name|assignedInstr
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|assigned
operator|=
operator|new
name|String
index|[
name|assignedInstr
operator|.
name|size
argument_list|()
index|]
expr_stmt|;
for|for
control|(
name|iter
operator|=
name|assignedInstr
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|DepartmentalInstructor
name|inst
init|=
operator|(
name|DepartmentalInstructor
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|assignedSelection
index|[
name|i
index|]
operator|=
name|inst
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|assigned
index|[
name|i
index|]
operator|=
name|inst
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|i
operator|++
expr_stmt|;
block|}
name|assignedSelected
operator|=
name|assignedSelection
expr_stmt|;
block|}
name|i
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|availableInstr
operator|!=
literal|null
condition|)
block|{
name|available
operator|=
operator|new
name|String
index|[
name|availableInstr
operator|.
name|size
argument_list|()
index|]
expr_stmt|;
for|for
control|(
name|iter
operator|=
name|availableInstr
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Staff
name|s
init|=
operator|(
name|Staff
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|available
index|[
name|i
index|]
operator|=
name|s
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|i
operator|++
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|String
name|getNameFormat
parameter_list|()
block|{
return|return
name|nameFormat
return|;
block|}
specifier|public
name|void
name|setNameFormat
parameter_list|(
name|String
name|nameFormat
parameter_list|)
block|{
name|this
operator|.
name|nameFormat
operator|=
name|nameFormat
expr_stmt|;
block|}
block|}
end_class

end_unit

