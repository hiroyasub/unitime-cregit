begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionErrors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|Transaction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|messages
operator|.
name|CourseMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ClassInstructor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Class_
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DepartmentalInstructor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|InstrOfferingConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Preference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TeachingClassRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TeachingResponsibility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|comparators
operator|.
name|InstructorComparator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|Class_DAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|DepartmentalInstructorDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|InstrOfferingConfigDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|TeachingResponsibilityDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|ClassAssignmentProxy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|DynamicList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|DynamicListObjectFactory
import|;
end_import

begin_comment
comment|/**  * @author Stephanie Schluttenhofer, Zuzana Mullerova, Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|ClassInstructorAssignmentForm
extends|extends
name|ActionForm
block|{
specifier|protected
specifier|final
specifier|static
name|CourseMessages
name|MSG
init|=
name|Localization
operator|.
name|create
argument_list|(
name|CourseMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|String
name|op
decl_stmt|;
specifier|private
name|Integer
name|subjectAreaId
decl_stmt|;
specifier|private
name|Long
name|instrOfferingId
decl_stmt|;
specifier|private
name|String
name|instrOfferingName
decl_stmt|;
specifier|private
name|Integer
name|instrOffrConfigLimit
decl_stmt|;
specifier|private
name|Long
name|instrOffrConfigId
decl_stmt|;
specifier|private
name|String
name|deletedInstrRowNum
decl_stmt|;
specifier|private
name|String
name|nextId
decl_stmt|;
specifier|private
name|String
name|previousId
decl_stmt|;
specifier|private
name|ClassAssignmentProxy
name|proxy
decl_stmt|;
specifier|private
name|String
name|addInstructorId
decl_stmt|;
specifier|private
name|Boolean
name|displayExternalId
decl_stmt|;
specifier|private
name|String
name|defaultTeachingResponsibilityId
decl_stmt|;
specifier|private
name|List
name|classIds
decl_stmt|;
specifier|private
name|List
name|classLabels
decl_stmt|;
specifier|private
name|List
name|classLabelIndents
decl_stmt|;
specifier|private
name|List
name|instructorUids
decl_stmt|;
specifier|private
name|List
name|percentShares
decl_stmt|;
specifier|private
name|List
name|leadFlags
decl_stmt|;
specifier|private
name|List
name|displayFlags
decl_stmt|;
specifier|private
name|List
name|times
decl_stmt|;
specifier|private
name|List
name|rooms
decl_stmt|;
specifier|private
name|List
name|allowDeletes
decl_stmt|;
specifier|private
name|List
name|readOnlyClasses
decl_stmt|;
specifier|private
name|List
name|classHasErrors
decl_stmt|;
specifier|private
name|List
name|showDisplay
decl_stmt|;
specifier|private
name|List
name|externalIds
decl_stmt|;
specifier|private
name|List
name|responsibilities
decl_stmt|;
comment|/** 	 *  	 */
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|203441190483028649L
decl_stmt|;
comment|/** 	 *  	 */
comment|// --------------------------------------------------------- Classes
comment|/** Factory to create dynamic list element for Course Offerings */
specifier|protected
name|DynamicListObjectFactory
name|factoryClasses
init|=
operator|new
name|DynamicListObjectFactory
argument_list|()
block|{
specifier|public
name|Object
name|create
parameter_list|()
block|{
return|return
operator|new
name|String
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
name|void
name|reset
parameter_list|(
name|ActionMapping
name|arg0
parameter_list|,
name|HttpServletRequest
name|arg1
parameter_list|)
block|{
name|op
operator|=
literal|""
expr_stmt|;
name|nextId
operator|=
name|previousId
operator|=
literal|null
expr_stmt|;
name|subjectAreaId
operator|=
operator|new
name|Integer
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|instrOfferingId
operator|=
operator|new
name|Long
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|instrOfferingName
operator|=
literal|null
expr_stmt|;
name|instrOffrConfigLimit
operator|=
operator|new
name|Integer
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|instrOffrConfigId
operator|=
operator|new
name|Long
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|deletedInstrRowNum
operator|=
literal|null
expr_stmt|;
name|displayExternalId
operator|=
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|TeachingResponsibility
name|tr
init|=
name|TeachingResponsibility
operator|.
name|getDefaultInstructorTeachingResponsibility
argument_list|()
decl_stmt|;
name|defaultTeachingResponsibilityId
operator|=
operator|(
name|tr
operator|==
literal|null
condition|?
literal|""
else|:
name|tr
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
operator|)
expr_stmt|;
name|proxy
operator|=
literal|null
expr_stmt|;
name|resetLists
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|resetLists
parameter_list|()
block|{
name|classIds
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|classLabels
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|classLabelIndents
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|instructorUids
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|percentShares
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|leadFlags
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|displayFlags
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|times
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|rooms
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|allowDeletes
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|readOnlyClasses
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|classHasErrors
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|showDisplay
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|externalIds
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
name|responsibilities
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryClasses
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ActionErrors
name|validate
parameter_list|(
name|ActionMapping
name|arg0
parameter_list|,
name|HttpServletRequest
name|arg1
parameter_list|)
block|{
name|ActionErrors
name|errors
init|=
operator|new
name|ActionErrors
argument_list|()
decl_stmt|;
if|if
condition|(
name|op
operator|.
name|equals
argument_list|(
name|MSG
operator|.
name|actionUpdateClassInstructorsAssignment
argument_list|()
argument_list|)
operator|||
name|op
operator|.
name|equals
argument_list|(
name|MSG
operator|.
name|actionNextIO
argument_list|()
argument_list|)
operator|||
name|op
operator|.
name|equals
argument_list|(
name|MSG
operator|.
name|actionPreviousIO
argument_list|()
argument_list|)
condition|)
block|{
comment|// Check Added Instructors
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|classIds
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|String
name|classId
init|=
operator|(
name|String
operator|)
name|classIds
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|String
name|instrUid
init|=
operator|(
name|String
operator|)
name|instructorUids
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|String
name|resp
init|=
operator|(
name|String
operator|)
name|responsibilities
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
name|i
operator|+
literal|1
init|;
name|j
operator|<
name|classIds
operator|.
name|size
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
if|if
condition|(
operator|(
operator|(
name|String
operator|)
name|instructorUids
operator|.
name|get
argument_list|(
name|j
argument_list|)
operator|)
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|classIds
operator|.
name|get
argument_list|(
name|j
argument_list|)
operator|.
name|equals
argument_list|(
name|classId
argument_list|)
operator|&&
name|instructorUids
operator|.
name|get
argument_list|(
name|j
argument_list|)
operator|.
name|equals
argument_list|(
name|instrUid
argument_list|)
operator|&&
name|responsibilities
operator|.
name|get
argument_list|(
name|j
argument_list|)
operator|.
name|equals
argument_list|(
name|resp
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"duplicateInstructor"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
name|MSG
operator|.
name|errorDuplicateInstructorForClass
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
return|return
name|errors
return|;
block|}
specifier|public
name|void
name|addToClasses
parameter_list|(
name|Class_
name|cls
parameter_list|,
name|Boolean
name|isReadOnly
parameter_list|,
name|String
name|indent
parameter_list|)
block|{
name|ArrayList
name|instructors
init|=
operator|new
name|ArrayList
argument_list|(
name|cls
operator|.
name|getClassInstructors
argument_list|()
argument_list|)
decl_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|instructors
argument_list|,
operator|new
name|InstructorComparator
argument_list|()
argument_list|)
expr_stmt|;
name|ClassInstructor
name|instructor
init|=
literal|null
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
do|do
block|{
if|if
condition|(
name|instructors
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|instructor
operator|=
operator|(
name|ClassInstructor
operator|)
name|instructors
operator|.
name|get
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
comment|// Only display the class name and display flag for the first instructor
if|if
condition|(
name|i
operator|==
literal|0
condition|)
block|{
name|this
operator|.
name|classLabels
operator|.
name|add
argument_list|(
name|cls
operator|.
name|htmlLabel
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|showDisplay
operator|.
name|add
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|times
operator|.
name|add
argument_list|(
name|cls
operator|.
name|buildAssignedTimeHtml
argument_list|(
name|getProxy
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|rooms
operator|.
name|add
argument_list|(
name|cls
operator|.
name|buildAssignedRoomHtml
argument_list|(
name|getProxy
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|externalIds
operator|.
name|add
argument_list|(
name|cls
operator|.
name|getClassSuffix
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|cls
operator|.
name|getClassSuffix
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|classLabels
operator|.
name|add
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|showDisplay
operator|.
name|add
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|times
operator|.
name|add
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|rooms
operator|.
name|add
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|externalIds
operator|.
name|add
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|classLabelIndents
operator|.
name|add
argument_list|(
name|indent
argument_list|)
expr_stmt|;
name|this
operator|.
name|classIds
operator|.
name|add
argument_list|(
name|cls
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|readOnlyClasses
operator|.
name|add
argument_list|(
name|isReadOnly
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|classHasErrors
operator|.
name|add
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|displayFlags
operator|.
name|add
argument_list|(
name|cls
operator|.
name|isDisplayInstructor
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|instructors
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|this
operator|.
name|instructorUids
operator|.
name|add
argument_list|(
name|instructor
operator|.
name|getInstructor
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|percentShares
operator|.
name|add
argument_list|(
name|instructor
operator|.
name|getPercentShare
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|leadFlags
operator|.
name|add
argument_list|(
name|instructor
operator|.
name|isLead
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|responsibilities
operator|.
name|add
argument_list|(
name|instructor
operator|.
name|getResponsibility
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|instructor
operator|.
name|getResponsibility
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|instructorUids
operator|.
name|add
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|percentShares
operator|.
name|add
argument_list|(
literal|"100"
argument_list|)
expr_stmt|;
name|this
operator|.
name|leadFlags
operator|.
name|add
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|responsibilities
operator|.
name|add
argument_list|(
name|getDefaultTeachingResponsibilityId
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|allowDeletes
operator|.
name|add
argument_list|(
operator|new
name|Boolean
argument_list|(
name|instructors
operator|.
name|size
argument_list|()
operator|>
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
do|while
condition|(
operator|++
name|i
operator|<
name|instructors
operator|.
name|size
argument_list|()
condition|)
do|;
block|}
specifier|public
name|void
name|deleteInstructor
parameter_list|()
block|{
name|int
name|index
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|deletedInstrRowNum
argument_list|)
decl_stmt|;
name|int
name|firstIndex
init|=
name|index
decl_stmt|;
while|while
condition|(
name|firstIndex
operator|>
literal|0
operator|&&
name|classIds
operator|.
name|get
argument_list|(
name|firstIndex
operator|-
literal|1
argument_list|)
operator|.
name|equals
argument_list|(
name|classIds
operator|.
name|get
argument_list|(
name|index
argument_list|)
argument_list|)
condition|)
name|firstIndex
operator|--
expr_stmt|;
name|int
name|lastIndex
init|=
name|index
decl_stmt|;
while|while
condition|(
name|lastIndex
operator|+
literal|1
operator|<
name|classIds
operator|.
name|size
argument_list|()
operator|&&
name|classIds
operator|.
name|get
argument_list|(
name|lastIndex
operator|+
literal|1
argument_list|)
operator|.
name|equals
argument_list|(
name|classIds
operator|.
name|get
argument_list|(
name|index
argument_list|)
argument_list|)
condition|)
name|lastIndex
operator|++
expr_stmt|;
name|classIds
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|classLabels
operator|.
name|remove
argument_list|(
name|index
operator|==
name|firstIndex
condition|?
name|index
operator|+
literal|1
else|:
name|index
argument_list|)
expr_stmt|;
name|classLabelIndents
operator|.
name|remove
argument_list|(
name|index
operator|==
name|firstIndex
condition|?
name|index
operator|+
literal|1
else|:
name|index
argument_list|)
expr_stmt|;
name|classHasErrors
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|instructorUids
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|percentShares
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
if|if
condition|(
name|index
operator|<
name|leadFlags
operator|.
name|size
argument_list|()
condition|)
name|leadFlags
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|responsibilities
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|times
operator|.
name|remove
argument_list|(
name|index
operator|==
name|firstIndex
condition|?
name|index
operator|+
literal|1
else|:
name|index
argument_list|)
expr_stmt|;
name|rooms
operator|.
name|remove
argument_list|(
name|index
operator|==
name|firstIndex
condition|?
name|index
operator|+
literal|1
else|:
name|index
argument_list|)
expr_stmt|;
name|allowDeletes
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
if|if
condition|(
name|firstIndex
operator|+
literal|1
operator|==
name|lastIndex
condition|)
block|{
name|allowDeletes
operator|.
name|set
argument_list|(
name|firstIndex
argument_list|,
name|Boolean
operator|.
name|FALSE
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|index
operator|==
name|firstIndex
condition|?
name|index
operator|+
literal|1
else|:
name|index
operator|)
operator|<
name|displayFlags
operator|.
name|size
argument_list|()
condition|)
name|displayFlags
operator|.
name|remove
argument_list|(
name|index
operator|==
name|firstIndex
condition|?
name|index
operator|+
literal|1
else|:
name|index
argument_list|)
expr_stmt|;
name|showDisplay
operator|.
name|remove
argument_list|(
name|index
operator|==
name|firstIndex
condition|?
name|index
operator|+
literal|1
else|:
name|index
argument_list|)
expr_stmt|;
name|readOnlyClasses
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|externalIds
operator|.
name|remove
argument_list|(
name|index
operator|==
name|firstIndex
condition|?
name|index
operator|+
literal|1
else|:
name|index
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addInstructor
parameter_list|()
block|{
name|int
name|pos
init|=
operator|new
name|Integer
argument_list|(
name|this
operator|.
name|getAddInstructorId
argument_list|()
argument_list|)
operator|.
name|intValue
argument_list|()
decl_stmt|;
name|this
operator|.
name|classLabels
operator|.
name|add
argument_list|(
name|pos
operator|+
literal|1
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|showDisplay
operator|.
name|add
argument_list|(
name|pos
operator|+
literal|1
argument_list|,
name|Boolean
operator|.
name|FALSE
argument_list|)
expr_stmt|;
name|this
operator|.
name|times
operator|.
name|add
argument_list|(
name|pos
operator|+
literal|1
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|rooms
operator|.
name|add
argument_list|(
name|pos
operator|+
literal|1
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|classLabelIndents
operator|.
name|add
argument_list|(
name|pos
operator|+
literal|1
argument_list|,
name|this
operator|.
name|classLabelIndents
operator|.
name|get
argument_list|(
name|pos
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|classIds
operator|.
name|add
argument_list|(
name|pos
operator|+
literal|1
argument_list|,
name|this
operator|.
name|classIds
operator|.
name|get
argument_list|(
name|pos
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|readOnlyClasses
operator|.
name|add
argument_list|(
name|pos
operator|+
literal|1
argument_list|,
name|this
operator|.
name|readOnlyClasses
operator|.
name|get
argument_list|(
name|pos
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|classHasErrors
operator|.
name|add
argument_list|(
name|pos
operator|+
literal|1
argument_list|,
name|Boolean
operator|.
name|FALSE
argument_list|)
expr_stmt|;
name|this
operator|.
name|displayFlags
operator|.
name|add
argument_list|(
name|pos
operator|+
literal|1
argument_list|,
name|this
operator|.
name|displayFlags
operator|.
name|get
argument_list|(
name|pos
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|instructorUids
operator|.
name|add
argument_list|(
name|pos
operator|+
literal|1
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|percentShares
operator|.
name|add
argument_list|(
name|pos
operator|+
literal|1
argument_list|,
literal|"0"
argument_list|)
expr_stmt|;
name|this
operator|.
name|allowDeletes
operator|.
name|set
argument_list|(
name|pos
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|this
operator|.
name|allowDeletes
operator|.
name|add
argument_list|(
name|pos
operator|+
literal|1
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|this
operator|.
name|externalIds
operator|.
name|add
argument_list|(
name|pos
operator|+
literal|1
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|leadFlags
operator|.
name|add
argument_list|(
name|pos
operator|+
literal|1
argument_list|,
name|this
operator|.
name|leadFlags
operator|.
name|get
argument_list|(
name|pos
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|responsibilities
operator|.
name|add
argument_list|(
name|pos
operator|+
literal|1
argument_list|,
name|defaultTeachingResponsibilityId
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|updateClasses
parameter_list|()
throws|throws
name|Exception
block|{
name|InstrOfferingConfig
name|config
init|=
name|InstrOfferingConfigDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|instrOffrConfigId
argument_list|)
decl_stmt|;
name|boolean
name|assignTeachingRequest
init|=
name|Department
operator|.
name|isInstructorSchedulingCommitted
argument_list|(
name|config
operator|.
name|getInstructionalOffering
argument_list|()
operator|.
name|getControllingCourseOffering
argument_list|()
operator|.
name|getDepartment
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
decl_stmt|;
name|Class_DAO
name|cdao
init|=
operator|new
name|Class_DAO
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|classIds
operator|.
name|size
argument_list|()
condition|;
control|)
block|{
if|if
condition|(
literal|"true"
operator|.
name|equals
argument_list|(
name|getReadOnlyClasses
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
block|{
name|i
operator|++
expr_stmt|;
continue|continue;
block|}
name|String
name|classId
init|=
operator|(
name|String
operator|)
name|classIds
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|Class_
name|c
init|=
name|cdao
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|classId
argument_list|)
argument_list|)
decl_stmt|;
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
init|=
name|cdao
operator|.
name|getSession
argument_list|()
decl_stmt|;
name|Transaction
name|tx
init|=
name|hibSession
operator|.
name|beginTransaction
argument_list|()
decl_stmt|;
comment|// Class all instructors
name|Set
argument_list|<
name|ClassInstructor
argument_list|>
name|classInstrs
init|=
operator|new
name|HashSet
argument_list|<
name|ClassInstructor
argument_list|>
argument_list|(
name|c
operator|.
name|getClassInstructors
argument_list|()
argument_list|)
decl_stmt|;
name|c
operator|.
name|setDisplayInstructor
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|"on"
operator|.
name|equals
argument_list|(
name|getDisplayFlags
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Save instructor data to class
for|for
control|(
init|;
name|i
operator|<
name|classIds
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|boolean
name|sameClass
init|=
operator|(
operator|(
name|String
operator|)
name|classIds
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|)
operator|.
name|equals
argument_list|(
name|classId
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|sameClass
condition|)
block|{
break|break;
block|}
name|String
name|instrId
init|=
operator|(
name|String
operator|)
name|getInstructorUids
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|instrId
operator|.
name|length
argument_list|()
operator|>
literal|0
operator|&&
operator|!
operator|(
literal|"-"
operator|.
name|equals
argument_list|(
name|instrId
argument_list|)
operator|)
condition|)
block|{
name|String
name|pctShare
init|=
operator|(
name|String
operator|)
name|getPercentShares
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|Boolean
name|lead
init|=
operator|new
name|Boolean
argument_list|(
literal|"on"
operator|.
name|equals
argument_list|(
name|getLeadFlags
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|responsibility
init|=
operator|(
name|String
operator|)
name|getResponsibilities
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|DepartmentalInstructor
name|deptInstr
init|=
operator|new
name|DepartmentalInstructorDAO
argument_list|()
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|instrId
argument_list|)
argument_list|)
decl_stmt|;
name|ClassInstructor
name|classInstr
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|ClassInstructor
argument_list|>
name|j
init|=
name|classInstrs
operator|.
name|iterator
argument_list|()
init|;
name|j
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|ClassInstructor
name|adept
init|=
name|j
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|adept
operator|.
name|getInstructor
argument_list|()
operator|.
name|equals
argument_list|(
name|deptInstr
argument_list|)
condition|)
block|{
name|classInstr
operator|=
name|adept
expr_stmt|;
name|j
operator|.
name|remove
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|classInstr
operator|==
literal|null
condition|)
block|{
name|classInstr
operator|=
operator|new
name|ClassInstructor
argument_list|()
expr_stmt|;
name|deptInstr
operator|.
name|getClasses
argument_list|()
operator|.
name|add
argument_list|(
name|classInstr
argument_list|)
expr_stmt|;
name|c
operator|.
name|getClassInstructors
argument_list|()
operator|.
name|add
argument_list|(
name|classInstr
argument_list|)
expr_stmt|;
name|classInstr
operator|.
name|setClassInstructing
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|classInstr
operator|.
name|setInstructor
argument_list|(
name|deptInstr
argument_list|)
expr_stmt|;
if|if
condition|(
name|assignTeachingRequest
condition|)
block|{
for|for
control|(
name|TeachingClassRequest
name|tcr
range|:
name|c
operator|.
name|getTeachingRequests
argument_list|()
control|)
block|{
if|if
condition|(
name|tcr
operator|.
name|getAssignInstructor
argument_list|()
operator|&&
name|tcr
operator|.
name|getTeachingRequest
argument_list|()
operator|.
name|getAssignedInstructors
argument_list|()
operator|.
name|contains
argument_list|(
name|deptInstr
argument_list|)
condition|)
block|{
name|classInstr
operator|.
name|setTeachingRequest
argument_list|(
name|tcr
operator|.
name|getTeachingRequest
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
name|classInstr
operator|.
name|setLead
argument_list|(
name|lead
argument_list|)
expr_stmt|;
name|classInstr
operator|.
name|setPercentShare
argument_list|(
operator|new
name|Integer
argument_list|(
name|pctShare
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|classInstr
operator|.
name|setResponsibility
argument_list|(
name|TeachingResponsibilityDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|responsibility
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
name|classInstr
operator|.
name|setResponsibility
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
name|hibSession
operator|.
name|saveOrUpdate
argument_list|(
name|deptInstr
argument_list|)
expr_stmt|;
block|}
empty_stmt|;
block|}
empty_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|ClassInstructor
argument_list|>
name|iter
init|=
name|classInstrs
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|ClassInstructor
name|ci
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|DepartmentalInstructor
name|instr
init|=
name|ci
operator|.
name|getInstructor
argument_list|()
decl_stmt|;
name|instr
operator|.
name|getClasses
argument_list|()
operator|.
name|remove
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|c
operator|.
name|getClassInstructors
argument_list|()
operator|.
name|remove
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|hibSession
operator|.
name|saveOrUpdate
argument_list|(
name|instr
argument_list|)
expr_stmt|;
name|hibSession
operator|.
name|delete
argument_list|(
name|ci
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|hibSession
operator|.
name|saveOrUpdate
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|tx
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|tx
operator|.
name|rollback
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
block|}
specifier|public
name|void
name|unassignAllInstructors
parameter_list|()
throws|throws
name|Exception
block|{
name|Class_DAO
name|cdao
init|=
operator|new
name|Class_DAO
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|classIds
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
literal|"true"
operator|.
name|equals
argument_list|(
name|getReadOnlyClasses
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
block|{
name|i
operator|++
expr_stmt|;
continue|continue;
block|}
name|String
name|classId
init|=
operator|(
name|String
operator|)
name|classIds
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|Class_
name|c
init|=
name|cdao
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|classId
argument_list|)
argument_list|)
decl_stmt|;
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
init|=
name|cdao
operator|.
name|getSession
argument_list|()
decl_stmt|;
name|Transaction
name|tx
init|=
name|hibSession
operator|.
name|beginTransaction
argument_list|()
decl_stmt|;
try|try
block|{
name|c
operator|.
name|deleteClassInstructors
argument_list|(
name|hibSession
argument_list|)
expr_stmt|;
name|hibSession
operator|.
name|saveOrUpdate
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|tx
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|tx
operator|.
name|rollback
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
name|this
operator|.
name|getInstructorUids
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|public
name|String
name|getOp
parameter_list|()
block|{
return|return
name|op
return|;
block|}
specifier|public
name|void
name|setOp
parameter_list|(
name|String
name|op
parameter_list|)
block|{
name|this
operator|.
name|op
operator|=
name|op
expr_stmt|;
block|}
specifier|public
name|List
name|getAllowDeletes
parameter_list|()
block|{
return|return
name|allowDeletes
return|;
block|}
specifier|public
name|void
name|setAllowDeletes
parameter_list|(
name|List
name|allowDeletes
parameter_list|)
block|{
name|this
operator|.
name|allowDeletes
operator|=
name|allowDeletes
expr_stmt|;
block|}
specifier|public
name|List
name|getClassIds
parameter_list|()
block|{
return|return
name|classIds
return|;
block|}
specifier|public
name|void
name|setClassIds
parameter_list|(
name|List
name|classIds
parameter_list|)
block|{
name|this
operator|.
name|classIds
operator|=
name|classIds
expr_stmt|;
block|}
specifier|public
name|List
name|getClassLabelIndents
parameter_list|()
block|{
return|return
name|classLabelIndents
return|;
block|}
specifier|public
name|void
name|setClassLabelIndents
parameter_list|(
name|List
name|classLabelIndents
parameter_list|)
block|{
name|this
operator|.
name|classLabelIndents
operator|=
name|classLabelIndents
expr_stmt|;
block|}
specifier|public
name|List
name|getClassLabels
parameter_list|()
block|{
return|return
name|classLabels
return|;
block|}
specifier|public
name|void
name|setClassLabels
parameter_list|(
name|List
name|classLabels
parameter_list|)
block|{
name|this
operator|.
name|classLabels
operator|=
name|classLabels
expr_stmt|;
block|}
specifier|public
name|List
name|getDisplayFlags
parameter_list|()
block|{
return|return
name|displayFlags
return|;
block|}
specifier|public
name|void
name|setDisplayFlags
parameter_list|(
name|List
name|displayFlags
parameter_list|)
block|{
name|this
operator|.
name|displayFlags
operator|=
name|displayFlags
expr_stmt|;
block|}
specifier|public
name|List
name|getInstructorUids
parameter_list|()
block|{
return|return
name|instructorUids
return|;
block|}
specifier|public
name|void
name|setInstructorUids
parameter_list|(
name|List
name|instructorUids
parameter_list|)
block|{
name|this
operator|.
name|instructorUids
operator|=
name|instructorUids
expr_stmt|;
block|}
specifier|public
name|List
name|getLeadFlags
parameter_list|()
block|{
return|return
name|leadFlags
return|;
block|}
specifier|public
name|void
name|setLeadFlags
parameter_list|(
name|List
name|leadFlags
parameter_list|)
block|{
name|this
operator|.
name|leadFlags
operator|=
name|leadFlags
expr_stmt|;
block|}
specifier|public
name|List
name|getPercentShares
parameter_list|()
block|{
return|return
name|percentShares
return|;
block|}
specifier|public
name|void
name|setPercentShares
parameter_list|(
name|List
name|percentShares
parameter_list|)
block|{
name|this
operator|.
name|percentShares
operator|=
name|percentShares
expr_stmt|;
block|}
specifier|public
name|List
name|getRooms
parameter_list|()
block|{
return|return
name|rooms
return|;
block|}
specifier|public
name|void
name|setRooms
parameter_list|(
name|List
name|rooms
parameter_list|)
block|{
name|this
operator|.
name|rooms
operator|=
name|rooms
expr_stmt|;
block|}
specifier|public
name|List
name|getTimes
parameter_list|()
block|{
return|return
name|times
return|;
block|}
specifier|public
name|void
name|setTimes
parameter_list|(
name|List
name|times
parameter_list|)
block|{
name|this
operator|.
name|times
operator|=
name|times
expr_stmt|;
block|}
specifier|public
name|Long
name|getInstrOfferingId
parameter_list|()
block|{
return|return
name|instrOfferingId
return|;
block|}
specifier|public
name|void
name|setInstrOfferingId
parameter_list|(
name|Long
name|instrOfferingId
parameter_list|)
block|{
name|this
operator|.
name|instrOfferingId
operator|=
name|instrOfferingId
expr_stmt|;
block|}
specifier|public
name|String
name|getInstrOfferingName
parameter_list|()
block|{
return|return
name|instrOfferingName
return|;
block|}
specifier|public
name|void
name|setInstrOfferingName
parameter_list|(
name|String
name|instrOfferingName
parameter_list|)
block|{
name|this
operator|.
name|instrOfferingName
operator|=
name|instrOfferingName
expr_stmt|;
block|}
specifier|public
name|Long
name|getInstrOffrConfigId
parameter_list|()
block|{
return|return
name|instrOffrConfigId
return|;
block|}
specifier|public
name|void
name|setInstrOffrConfigId
parameter_list|(
name|Long
name|instrOffrConfigId
parameter_list|)
block|{
name|this
operator|.
name|instrOffrConfigId
operator|=
name|instrOffrConfigId
expr_stmt|;
block|}
specifier|public
name|Integer
name|getInstrOffrConfigLimit
parameter_list|()
block|{
return|return
name|instrOffrConfigLimit
return|;
block|}
specifier|public
name|void
name|setInstrOffrConfigLimit
parameter_list|(
name|Integer
name|instrOffrConfigLimit
parameter_list|)
block|{
name|this
operator|.
name|instrOffrConfigLimit
operator|=
name|instrOffrConfigLimit
expr_stmt|;
block|}
specifier|public
name|List
name|getReadOnlyClasses
parameter_list|()
block|{
return|return
name|readOnlyClasses
return|;
block|}
specifier|public
name|void
name|setReadOnlyClasses
parameter_list|(
name|List
name|readOnlyClasses
parameter_list|)
block|{
name|this
operator|.
name|readOnlyClasses
operator|=
name|readOnlyClasses
expr_stmt|;
block|}
specifier|public
name|List
name|getClassHasErrors
parameter_list|()
block|{
return|return
name|classHasErrors
return|;
block|}
specifier|public
name|void
name|setClassHasErrors
parameter_list|(
name|List
name|classHasErrors
parameter_list|)
block|{
name|this
operator|.
name|classHasErrors
operator|=
name|classHasErrors
expr_stmt|;
block|}
specifier|public
name|Integer
name|getSubjectAreaId
parameter_list|()
block|{
return|return
name|subjectAreaId
return|;
block|}
specifier|public
name|void
name|setSubjectAreaId
parameter_list|(
name|Integer
name|subjectAreaId
parameter_list|)
block|{
name|this
operator|.
name|subjectAreaId
operator|=
name|subjectAreaId
expr_stmt|;
block|}
specifier|public
name|ClassAssignmentProxy
name|getProxy
parameter_list|()
block|{
return|return
name|proxy
return|;
block|}
specifier|public
name|void
name|setProxy
parameter_list|(
name|ClassAssignmentProxy
name|proxy
parameter_list|)
block|{
name|this
operator|.
name|proxy
operator|=
name|proxy
expr_stmt|;
block|}
specifier|public
name|String
name|getNextId
parameter_list|()
block|{
return|return
name|nextId
return|;
block|}
specifier|public
name|void
name|setNextId
parameter_list|(
name|String
name|nextId
parameter_list|)
block|{
name|this
operator|.
name|nextId
operator|=
name|nextId
expr_stmt|;
block|}
specifier|public
name|String
name|getPreviousId
parameter_list|()
block|{
return|return
name|previousId
return|;
block|}
specifier|public
name|void
name|setPreviousId
parameter_list|(
name|String
name|previousId
parameter_list|)
block|{
name|this
operator|.
name|previousId
operator|=
name|previousId
expr_stmt|;
block|}
specifier|public
name|String
name|getDeletedInstrRowNum
parameter_list|()
block|{
return|return
name|deletedInstrRowNum
return|;
block|}
specifier|public
name|void
name|setDeletedInstrRowNum
parameter_list|(
name|String
name|deletedInstrRowNum
parameter_list|)
block|{
name|this
operator|.
name|deletedInstrRowNum
operator|=
name|deletedInstrRowNum
expr_stmt|;
block|}
specifier|public
name|List
name|getShowDisplay
parameter_list|()
block|{
return|return
name|showDisplay
return|;
block|}
specifier|public
name|void
name|setShowDisplay
parameter_list|(
name|List
name|showDisplay
parameter_list|)
block|{
name|this
operator|.
name|showDisplay
operator|=
name|showDisplay
expr_stmt|;
block|}
specifier|public
name|String
name|getAddInstructorId
parameter_list|()
block|{
return|return
name|addInstructorId
return|;
block|}
specifier|public
name|void
name|setAddInstructorId
parameter_list|(
name|String
name|addInstructorId
parameter_list|)
block|{
name|this
operator|.
name|addInstructorId
operator|=
name|addInstructorId
expr_stmt|;
block|}
specifier|public
name|List
name|getExternalIds
parameter_list|()
block|{
return|return
name|externalIds
return|;
block|}
specifier|public
name|void
name|setExternalIds
parameter_list|(
name|List
name|externalIds
parameter_list|)
block|{
name|this
operator|.
name|externalIds
operator|=
name|externalIds
expr_stmt|;
block|}
specifier|public
name|Boolean
name|getDisplayExternalId
parameter_list|()
block|{
return|return
name|displayExternalId
return|;
block|}
specifier|public
name|void
name|setDisplayExternalId
parameter_list|(
name|Boolean
name|displayExternalId
parameter_list|)
block|{
name|this
operator|.
name|displayExternalId
operator|=
name|displayExternalId
expr_stmt|;
block|}
specifier|public
name|List
name|getResponsibilities
parameter_list|()
block|{
return|return
name|responsibilities
return|;
block|}
specifier|public
name|void
name|setResponsibilities
parameter_list|(
name|List
name|responsibilities
parameter_list|)
block|{
name|this
operator|.
name|responsibilities
operator|=
name|responsibilities
expr_stmt|;
block|}
specifier|public
name|String
name|getDefaultTeachingResponsibilityId
parameter_list|()
block|{
return|return
name|defaultTeachingResponsibilityId
return|;
block|}
specifier|public
name|void
name|setDefaultTeachingResponsibilityId
parameter_list|(
name|String
name|defaultTeachingResponsibilityId
parameter_list|)
block|{
name|this
operator|.
name|defaultTeachingResponsibilityId
operator|=
name|defaultTeachingResponsibilityId
expr_stmt|;
block|}
block|}
end_class

end_unit

