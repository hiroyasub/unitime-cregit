begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2008 - 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_class
specifier|public
class|class
name|ExamChangesForm
extends|extends
name|ExamReportForm
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|4093360180461644275L
decl_stmt|;
specifier|private
name|String
name|iChage
init|=
name|sChangeInitial
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|sChangeInitial
init|=
literal|"Initial"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|sChangeBest
init|=
literal|"Best"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|sChangeSaved
init|=
literal|"Saved"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|sChanges
init|=
operator|new
name|String
index|[]
block|{
name|sChangeInitial
block|,
name|sChangeBest
block|,
name|sChangeSaved
block|}
decl_stmt|;
specifier|private
name|boolean
name|iReverse
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|iNoSolver
init|=
literal|false
decl_stmt|;
specifier|public
name|boolean
name|getReverse
parameter_list|()
block|{
return|return
name|iReverse
return|;
block|}
specifier|public
name|void
name|setReverse
parameter_list|(
name|boolean
name|reverse
parameter_list|)
block|{
name|iReverse
operator|=
name|reverse
expr_stmt|;
block|}
specifier|public
name|String
name|getChangeType
parameter_list|()
block|{
return|return
name|iChage
return|;
block|}
specifier|public
name|void
name|setChangeType
parameter_list|(
name|String
name|changeType
parameter_list|)
block|{
name|iChage
operator|=
name|changeType
expr_stmt|;
block|}
specifier|public
name|String
index|[]
name|getChangeTypes
parameter_list|()
block|{
return|return
name|sChanges
return|;
block|}
specifier|public
name|void
name|reset
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|super
operator|.
name|reset
argument_list|(
name|mapping
argument_list|,
name|request
argument_list|)
expr_stmt|;
name|iChage
operator|=
name|sChangeInitial
expr_stmt|;
name|iReverse
operator|=
literal|false
expr_stmt|;
block|}
specifier|public
name|void
name|load
parameter_list|(
name|SessionContext
name|session
parameter_list|)
block|{
name|super
operator|.
name|load
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|setReverse
argument_list|(
literal|"1"
operator|.
name|equals
argument_list|(
name|session
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"ExamChanges.reverse"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|setChangeType
argument_list|(
name|session
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"ExamChanges.changeType"
argument_list|,
name|sChangeInitial
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|save
parameter_list|(
name|SessionContext
name|session
parameter_list|)
block|{
name|super
operator|.
name|save
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|session
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"ExamChanges.reverse"
argument_list|,
name|getReverse
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|session
operator|.
name|getUser
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"ExamChanges.changeType"
argument_list|,
name|getChangeType
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|getNoSolver
parameter_list|()
block|{
return|return
name|iNoSolver
return|;
block|}
specifier|public
name|void
name|setNoSolver
parameter_list|(
name|boolean
name|noSolver
parameter_list|)
block|{
name|iNoSolver
operator|=
name|noSolver
expr_stmt|;
block|}
block|}
end_class

end_unit

