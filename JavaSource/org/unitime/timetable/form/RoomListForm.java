begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 - 3.5 (University Timetabling Application)  * Copyright (C) 2008 - 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionErrors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|GlobalRoomFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomFeatureType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|context
operator|.
name|HttpSessionContext
import|;
end_import

begin_comment
comment|/**  * MyEclipse Struts * Creation date: 02-18-2005 *  * XDoclet definition: * @struts:form name="roomListForm" */
end_comment

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|RoomListForm
extends|extends
name|ActionForm
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|3256728385592768053L
decl_stmt|;
comment|/** 	 *  	 */
comment|// --------------------------------------------------------- Instance Variables
specifier|private
name|Collection
name|rooms
decl_stmt|;
specifier|private
name|String
name|deptCode
decl_stmt|;
specifier|private
name|String
name|iMinRoomSize
init|=
literal|null
decl_stmt|,
name|iMaxRoomSize
init|=
literal|null
decl_stmt|;
specifier|private
name|Long
index|[]
name|iRoomFeatures
init|=
literal|null
decl_stmt|;
specifier|private
name|Long
index|[]
name|iRoomTypes
init|=
literal|null
decl_stmt|;
specifier|private
name|Long
index|[]
name|iRoomGroups
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iFilter
init|=
literal|null
decl_stmt|;
specifier|private
name|Long
name|iSessionId
init|=
literal|null
decl_stmt|;
comment|// --------------------------------------------------------- Methods
comment|/**  	 * Method reset 	 * @param mapping 	 * @param request 	 */
specifier|public
name|void
name|reset
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|rooms
operator|=
operator|new
name|ArrayList
argument_list|()
expr_stmt|;
name|iSessionId
operator|=
name|HttpSessionContext
operator|.
name|getSessionContext
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
operator|.
name|getServletContext
argument_list|()
argument_list|)
operator|.
name|getUser
argument_list|()
operator|.
name|getCurrentAcademicSessionId
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|load
parameter_list|(
name|HttpSession
name|session
parameter_list|)
block|{
name|iMinRoomSize
operator|=
operator|(
name|String
operator|)
name|session
operator|.
name|getAttribute
argument_list|(
literal|"RoomList.MinRoomSize"
argument_list|)
expr_stmt|;
name|iMaxRoomSize
operator|=
operator|(
name|String
operator|)
name|session
operator|.
name|getAttribute
argument_list|(
literal|"RoomList.MaxRoomSize"
argument_list|)
expr_stmt|;
name|iFilter
operator|=
operator|(
name|String
operator|)
name|session
operator|.
name|getAttribute
argument_list|(
literal|"RoomList.Filter"
argument_list|)
expr_stmt|;
name|iRoomTypes
operator|=
operator|(
name|Long
index|[]
operator|)
name|session
operator|.
name|getAttribute
argument_list|(
literal|"RoomList.RoomTypes"
argument_list|)
expr_stmt|;
name|iRoomGroups
operator|=
operator|(
name|Long
index|[]
operator|)
name|session
operator|.
name|getAttribute
argument_list|(
literal|"RoomList.RoomGroups"
argument_list|)
expr_stmt|;
name|iRoomFeatures
operator|=
operator|(
name|Long
index|[]
operator|)
name|session
operator|.
name|getAttribute
argument_list|(
literal|"RoomList.RoomFeatures"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|save
parameter_list|(
name|HttpSession
name|session
parameter_list|)
block|{
if|if
condition|(
name|iMinRoomSize
operator|==
literal|null
condition|)
name|session
operator|.
name|removeAttribute
argument_list|(
literal|"RoomList.MinRoomSize"
argument_list|)
expr_stmt|;
else|else
name|session
operator|.
name|setAttribute
argument_list|(
literal|"RoomList.MinRoomSize"
argument_list|,
name|iMinRoomSize
argument_list|)
expr_stmt|;
if|if
condition|(
name|iMaxRoomSize
operator|==
literal|null
condition|)
name|session
operator|.
name|removeAttribute
argument_list|(
literal|"RoomList.MaxRoomSize"
argument_list|)
expr_stmt|;
else|else
name|session
operator|.
name|setAttribute
argument_list|(
literal|"RoomList.MaxRoomSize"
argument_list|,
name|iMaxRoomSize
argument_list|)
expr_stmt|;
if|if
condition|(
name|iFilter
operator|==
literal|null
condition|)
name|session
operator|.
name|removeAttribute
argument_list|(
literal|"RoomList.Filter"
argument_list|)
expr_stmt|;
else|else
name|session
operator|.
name|setAttribute
argument_list|(
literal|"RoomList.Filter"
argument_list|,
name|iFilter
argument_list|)
expr_stmt|;
if|if
condition|(
name|iRoomTypes
operator|==
literal|null
condition|)
name|session
operator|.
name|removeAttribute
argument_list|(
literal|"RoomList.RoomTypes"
argument_list|)
expr_stmt|;
else|else
name|session
operator|.
name|setAttribute
argument_list|(
literal|"RoomList.RoomTypes"
argument_list|,
name|iRoomTypes
argument_list|)
expr_stmt|;
if|if
condition|(
name|iRoomGroups
operator|==
literal|null
condition|)
name|session
operator|.
name|removeAttribute
argument_list|(
literal|"RoomList.RoomGroups"
argument_list|)
expr_stmt|;
else|else
name|session
operator|.
name|setAttribute
argument_list|(
literal|"RoomList.RoomGroups"
argument_list|,
name|iRoomGroups
argument_list|)
expr_stmt|;
if|if
condition|(
name|iRoomFeatures
operator|==
literal|null
condition|)
name|session
operator|.
name|removeAttribute
argument_list|(
literal|"RoomList.RoomFeatures"
argument_list|)
expr_stmt|;
else|else
name|session
operator|.
name|setAttribute
argument_list|(
literal|"RoomList.RoomFeatures"
argument_list|,
name|iRoomFeatures
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @return Returns the rooms. 	 */
specifier|public
name|Collection
name|getRooms
parameter_list|()
block|{
return|return
name|rooms
return|;
block|}
comment|/** 	 * @param rooms The rooms to set. 	 */
specifier|public
name|void
name|setRooms
parameter_list|(
name|Collection
name|rooms
parameter_list|)
block|{
name|this
operator|.
name|rooms
operator|=
name|rooms
expr_stmt|;
block|}
specifier|public
name|String
name|getDeptCodeX
parameter_list|()
block|{
return|return
name|deptCode
return|;
block|}
specifier|public
name|void
name|setDeptCodeX
parameter_list|(
name|String
name|deptCode
parameter_list|)
block|{
name|this
operator|.
name|deptCode
operator|=
name|deptCode
expr_stmt|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.struts.action.ActionForm#validate(org.apache.struts.action.ActionMapping, javax.servlet.http.HttpServletRequest)      */
specifier|public
name|ActionErrors
name|validate
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|ActionErrors
name|errors
init|=
operator|new
name|ActionErrors
argument_list|()
decl_stmt|;
if|if
condition|(
name|deptCode
operator|==
literal|null
operator|||
name|deptCode
operator|.
name|equalsIgnoreCase
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"deptCode"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.required"
argument_list|,
literal|"Department"
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|errors
return|;
block|}
specifier|public
name|String
name|getMinRoomSize
parameter_list|()
block|{
return|return
name|iMinRoomSize
return|;
block|}
specifier|public
name|void
name|setMinRoomSize
parameter_list|(
name|String
name|minRoomSize
parameter_list|)
block|{
name|iMinRoomSize
operator|=
name|minRoomSize
expr_stmt|;
block|}
specifier|public
name|String
name|getMaxRoomSize
parameter_list|()
block|{
return|return
name|iMaxRoomSize
return|;
block|}
specifier|public
name|void
name|setMaxRoomSize
parameter_list|(
name|String
name|maxRoomSize
parameter_list|)
block|{
name|iMaxRoomSize
operator|=
name|maxRoomSize
expr_stmt|;
block|}
specifier|public
name|String
name|getFilter
parameter_list|()
block|{
return|return
name|iFilter
return|;
block|}
specifier|public
name|void
name|setFilter
parameter_list|(
name|String
name|filter
parameter_list|)
block|{
name|iFilter
operator|=
name|filter
expr_stmt|;
block|}
specifier|public
name|Long
index|[]
name|getRoomTypes
parameter_list|()
block|{
return|return
name|iRoomTypes
return|;
block|}
specifier|public
name|void
name|setRoomTypes
parameter_list|(
name|Long
index|[]
name|rts
parameter_list|)
block|{
name|iRoomTypes
operator|=
name|rts
expr_stmt|;
block|}
specifier|public
name|Long
index|[]
name|getRoomGroups
parameter_list|()
block|{
return|return
name|iRoomGroups
return|;
block|}
specifier|public
name|void
name|setRoomGroups
parameter_list|(
name|Long
index|[]
name|rgs
parameter_list|)
block|{
name|iRoomGroups
operator|=
name|rgs
expr_stmt|;
block|}
specifier|public
name|Long
index|[]
name|getRoomFeatures
parameter_list|()
block|{
return|return
name|iRoomFeatures
return|;
block|}
specifier|public
name|void
name|setRoomFeatures
parameter_list|(
name|Long
index|[]
name|rfs
parameter_list|)
block|{
name|iRoomFeatures
operator|=
name|rfs
expr_stmt|;
block|}
specifier|public
name|Collection
argument_list|<
name|RoomFeatureType
argument_list|>
name|getRoomFeatureTypes
parameter_list|()
block|{
name|Set
argument_list|<
name|RoomFeatureType
argument_list|>
name|types
init|=
name|RoomFeatureType
operator|.
name|getRoomFeatureTypes
argument_list|(
name|iSessionId
argument_list|,
literal|false
argument_list|)
decl_stmt|;
if|if
condition|(
name|RoomFeatureType
operator|.
name|hasRoomFeatureWithNoType
argument_list|(
name|iSessionId
argument_list|,
literal|false
argument_list|)
condition|)
block|{
name|RoomFeatureType
name|f
init|=
operator|new
name|RoomFeatureType
argument_list|()
decl_stmt|;
name|f
operator|.
name|setUniqueId
argument_list|(
operator|-
literal|1l
argument_list|)
expr_stmt|;
name|f
operator|.
name|setReference
argument_list|(
literal|"Features"
argument_list|)
expr_stmt|;
name|f
operator|.
name|setLabel
argument_list|(
literal|"Room Features"
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|f
argument_list|)
expr_stmt|;
block|}
return|return
name|types
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|GlobalRoomFeature
argument_list|>
name|getAllRoomFeatures
parameter_list|(
name|String
name|featureType
parameter_list|)
block|{
return|return
name|RoomFeature
operator|.
name|getAllGlobalRoomFeatures
argument_list|(
name|iSessionId
argument_list|,
name|featureType
operator|==
literal|null
operator|||
name|featureType
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
name|Long
operator|.
name|valueOf
argument_list|(
name|featureType
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|RoomGroup
argument_list|>
name|getAllRoomGroups
parameter_list|()
block|{
return|return
name|RoomGroup
operator|.
name|getAllGlobalRoomGroups
argument_list|(
name|iSessionId
argument_list|)
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|RoomType
argument_list|>
name|getAllRoomTypes
parameter_list|()
block|{
return|return
name|RoomType
operator|.
name|findAll
argument_list|(
name|iSessionId
argument_list|)
return|;
block|}
block|}
end_class

end_unit

