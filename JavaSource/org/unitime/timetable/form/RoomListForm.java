begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.0 (University Course Timetabling& Student Sectioning Application)  * Copyright (C) 2007, UniTime.org, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program; if not, write to the Free Software Foundation, Inc.,  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionErrors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|Web
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Roles
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimetableManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_comment
comment|/**  * MyEclipse Struts * Creation date: 02-18-2005 *  * XDoclet definition: * @struts:form name="roomListForm" */
end_comment

begin_class
specifier|public
class|class
name|RoomListForm
extends|extends
name|ActionForm
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|3256728385592768053L
decl_stmt|;
comment|/** 	 *  	 */
comment|// --------------------------------------------------------- Instance Variables
specifier|private
name|Collection
name|rooms
decl_stmt|;
specifier|private
name|String
name|deptCode
decl_stmt|;
specifier|private
name|boolean
name|editRoomSharing
decl_stmt|;
specifier|private
name|boolean
name|deptSize
decl_stmt|;
specifier|private
name|boolean
name|canAdd
decl_stmt|;
specifier|private
name|boolean
name|canAddNonUniv
decl_stmt|;
specifier|private
name|boolean
name|canAddSpecial
decl_stmt|;
comment|// --------------------------------------------------------- Methods
specifier|public
name|String
name|getDeptCodeX
parameter_list|()
block|{
return|return
name|deptCode
return|;
block|}
specifier|public
name|void
name|setDeptCodeX
parameter_list|(
name|String
name|deptCode
parameter_list|)
block|{
name|this
operator|.
name|deptCode
operator|=
name|deptCode
expr_stmt|;
block|}
specifier|public
name|boolean
name|getEditRoomSharing
parameter_list|()
block|{
return|return
name|editRoomSharing
return|;
block|}
specifier|public
name|void
name|setEditRoomSharing
parameter_list|(
name|boolean
name|editRoomSharing
parameter_list|)
block|{
name|this
operator|.
name|editRoomSharing
operator|=
name|editRoomSharing
expr_stmt|;
block|}
comment|/**  	 * Method reset 	 * @param mapping 	 * @param request 	 */
specifier|public
name|void
name|reset
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|rooms
operator|=
operator|new
name|ArrayList
argument_list|()
expr_stmt|;
name|editRoomSharing
operator|=
literal|false
expr_stmt|;
name|deptSize
operator|=
name|displayDeptList
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|canAdd
operator|=
literal|false
expr_stmt|;
name|canAddNonUniv
operator|=
literal|false
expr_stmt|;
name|canAddSpecial
operator|=
literal|false
expr_stmt|;
block|}
comment|/** 	 *  	 * @param request 	 * @return 	 */
specifier|private
name|boolean
name|displayDeptList
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|deptSize
operator|=
literal|true
expr_stmt|;
name|User
name|user
init|=
name|Web
operator|.
name|getUser
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
decl_stmt|;
name|Long
name|sessionId
init|=
operator|(
name|Long
operator|)
name|user
operator|.
name|getAttribute
argument_list|(
name|Constants
operator|.
name|SESSION_ID_ATTR_NAME
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|user
operator|.
name|getRole
argument_list|()
operator|.
name|equals
argument_list|(
name|Roles
operator|.
name|ADMIN_ROLE
argument_list|)
operator|&&
operator|!
name|user
operator|.
name|getRole
argument_list|()
operator|.
name|equals
argument_list|(
name|Roles
operator|.
name|EXAM_MGR_ROLE
argument_list|)
condition|)
block|{
name|TimetableManager
name|mgr
init|=
name|TimetableManager
operator|.
name|getManager
argument_list|(
name|user
argument_list|)
decl_stmt|;
name|Set
name|mgrDepts
init|=
name|Department
operator|.
name|findAllOwned
argument_list|(
name|sessionId
argument_list|,
name|mgr
argument_list|,
literal|true
argument_list|)
decl_stmt|;
if|if
condition|(
name|mgrDepts
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
block|{
name|deptSize
operator|=
literal|false
expr_stmt|;
block|}
block|}
return|return
name|deptSize
return|;
block|}
comment|/** 	 * @return Returns the rooms. 	 */
specifier|public
name|Collection
name|getRooms
parameter_list|()
block|{
return|return
name|rooms
return|;
block|}
comment|/** 	 * @param rooms The rooms to set. 	 */
specifier|public
name|void
name|setRooms
parameter_list|(
name|Collection
name|rooms
parameter_list|)
block|{
name|this
operator|.
name|rooms
operator|=
name|rooms
expr_stmt|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.struts.action.ActionForm#validate(org.apache.struts.action.ActionMapping, javax.servlet.http.HttpServletRequest)      */
specifier|public
name|ActionErrors
name|validate
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|ActionErrors
name|errors
init|=
operator|new
name|ActionErrors
argument_list|()
decl_stmt|;
if|if
condition|(
name|deptCode
operator|==
literal|null
operator|||
name|deptCode
operator|.
name|equalsIgnoreCase
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|errors
operator|.
name|add
argument_list|(
literal|"deptCode"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.required"
argument_list|,
literal|"Department"
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|errors
return|;
block|}
specifier|public
name|boolean
name|isDeptSize
parameter_list|()
block|{
return|return
name|deptSize
return|;
block|}
specifier|public
name|void
name|setCanAdd
parameter_list|(
name|boolean
name|canAdd
parameter_list|)
block|{
name|this
operator|.
name|canAdd
operator|=
name|canAdd
expr_stmt|;
block|}
specifier|public
name|boolean
name|getCanAdd
parameter_list|()
block|{
return|return
name|canAdd
return|;
block|}
specifier|public
name|void
name|setCanAddNonUniv
parameter_list|(
name|boolean
name|canAddNonUniv
parameter_list|)
block|{
name|this
operator|.
name|canAddNonUniv
operator|=
name|canAddNonUniv
expr_stmt|;
block|}
specifier|public
name|boolean
name|getCanAddNonUniv
parameter_list|()
block|{
return|return
name|canAddNonUniv
return|;
block|}
specifier|public
name|void
name|setCanAddSpecial
parameter_list|(
name|boolean
name|canAddSpecial
parameter_list|)
block|{
name|this
operator|.
name|canAddSpecial
operator|=
name|canAddSpecial
expr_stmt|;
block|}
specifier|public
name|boolean
name|getCanAddSpecial
parameter_list|()
block|{
return|return
name|canAddSpecial
return|;
block|}
block|}
end_class

end_unit

