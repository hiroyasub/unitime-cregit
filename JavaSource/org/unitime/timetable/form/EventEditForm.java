begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.1 (University Timetabling Application)  * Copyright (C) 2008, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program; if not, write to the Free Software Foundation, Inc.,  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|Transaction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|Web
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ChangeLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|EventContact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|EventNote
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Roles
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SponsoringOrganization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimetableManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Event
operator|.
name|MultiMeeting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|EventDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|SponsoringOrganizationDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|_RootDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|webutil
operator|.
name|EventEmail
import|;
end_import

begin_comment
comment|/**  * @author Zuzana Mullerova  */
end_comment

begin_class
specifier|public
class|class
name|EventEditForm
extends|extends
name|EventAddInfoForm
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|void
name|load
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|iId
operator|=
name|Long
operator|.
name|valueOf
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|HttpSession
name|session
init|=
name|request
operator|.
name|getSession
argument_list|()
decl_stmt|;
name|User
name|user
init|=
name|Web
operator|.
name|getUser
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
decl_stmt|;
name|setEvent
argument_list|(
name|EventDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|iId
argument_list|)
argument_list|)
expr_stmt|;
name|setEventName
argument_list|(
name|getEvent
argument_list|()
operator|.
name|getEventName
argument_list|()
argument_list|)
expr_stmt|;
name|setEventType
argument_list|(
name|getEvent
argument_list|()
operator|.
name|getEventTypeLabel
argument_list|()
argument_list|)
expr_stmt|;
name|setMainContactFirstName
argument_list|(
name|getEvent
argument_list|()
operator|.
name|getMainContact
argument_list|()
operator|.
name|getFirstName
argument_list|()
argument_list|)
expr_stmt|;
name|setMainContactMiddleName
argument_list|(
name|getEvent
argument_list|()
operator|.
name|getMainContact
argument_list|()
operator|.
name|getMiddleName
argument_list|()
argument_list|)
expr_stmt|;
name|setMainContactLastName
argument_list|(
name|getEvent
argument_list|()
operator|.
name|getMainContact
argument_list|()
operator|.
name|getLastName
argument_list|()
argument_list|)
expr_stmt|;
name|setMainContactExternalId
argument_list|(
name|getEvent
argument_list|()
operator|.
name|getMainContact
argument_list|()
operator|.
name|getExternalUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|setMainContactEmail
argument_list|(
name|getEvent
argument_list|()
operator|.
name|getMainContact
argument_list|()
operator|.
name|getEmailAddress
argument_list|()
argument_list|)
expr_stmt|;
name|setMainContactPhone
argument_list|(
name|getEvent
argument_list|()
operator|.
name|getMainContact
argument_list|()
operator|.
name|getPhone
argument_list|()
argument_list|)
expr_stmt|;
name|setAdditionalEmails
argument_list|(
name|getEvent
argument_list|()
operator|.
name|getEmail
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"Special Event"
operator|.
name|equals
argument_list|(
name|getEventType
argument_list|()
argument_list|)
condition|)
block|{
name|setSponsoringOrgName
argument_list|(
operator|(
name|getEvent
argument_list|()
operator|.
name|getSponsoringOrganization
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|getEvent
argument_list|()
operator|.
name|getSponsoringOrganization
argument_list|()
operator|.
name|getName
argument_list|()
operator|)
argument_list|)
expr_stmt|;
name|setSponsoringOrgId
argument_list|(
operator|(
name|getEvent
argument_list|()
operator|.
name|getSponsoringOrganization
argument_list|()
operator|==
literal|null
condition|?
operator|-
literal|1
else|:
name|getEvent
argument_list|()
operator|.
name|getSponsoringOrganization
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
literal|"Course Event"
operator|.
name|equals
argument_list|(
name|getEventType
argument_list|()
argument_list|)
condition|)
name|setAttendanceRequired
argument_list|(
operator|(
operator|(
name|CourseEvent
operator|)
name|getEvent
argument_list|()
operator|)
operator|.
name|isReqAttendance
argument_list|()
argument_list|)
expr_stmt|;
name|loadExistingMeetings
argument_list|()
expr_stmt|;
name|TimetableManager
name|tm
init|=
name|TimetableManager
operator|.
name|getManager
argument_list|(
name|user
argument_list|)
decl_stmt|;
block|}
specifier|public
name|void
name|update
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|HttpSession
name|session
init|=
name|request
operator|.
name|getSession
argument_list|()
decl_stmt|;
name|Transaction
name|tx
init|=
literal|null
decl_stmt|;
try|try
block|{
name|Session
name|hibSession
init|=
operator|new
name|_RootDAO
argument_list|()
operator|.
name|getSession
argument_list|()
decl_stmt|;
name|tx
operator|=
name|hibSession
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
comment|// create event
name|Event
name|event
init|=
name|getEvent
argument_list|()
decl_stmt|;
comment|//getEvent();
name|EventContact
name|mainContact
init|=
name|event
operator|.
name|getMainContact
argument_list|()
decl_stmt|;
if|if
condition|(
name|getMainContactExternalId
argument_list|()
operator|!=
literal|null
condition|)
name|mainContact
operator|=
name|EventContact
operator|.
name|findByExternalUniqueId
argument_list|(
name|getMainContactExternalId
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|mainContact
operator|==
literal|null
condition|)
name|mainContact
operator|=
name|EventContact
operator|.
name|findByEmail
argument_list|(
name|getMainContactEmail
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|mainContact
operator|==
literal|null
condition|)
name|mainContact
operator|=
operator|new
name|EventContact
argument_list|()
expr_stmt|;
if|if
condition|(
name|getMainContactFirstName
argument_list|()
operator|!=
literal|null
operator|&&
name|getMainContactFirstName
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|mainContact
operator|.
name|setFirstName
argument_list|(
name|getMainContactFirstName
argument_list|()
argument_list|)
expr_stmt|;
name|mainContact
operator|.
name|setMiddleName
argument_list|(
name|getMainContactMiddleName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|getMainContactLastName
argument_list|()
operator|!=
literal|null
operator|&&
name|getMainContactLastName
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|mainContact
operator|.
name|setLastName
argument_list|(
name|getMainContactLastName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|getMainContactEmail
argument_list|()
operator|!=
literal|null
operator|&&
name|getMainContactEmail
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|mainContact
operator|.
name|setEmailAddress
argument_list|(
name|getMainContactEmail
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|getMainContactPhone
argument_list|()
operator|!=
literal|null
operator|&&
name|getMainContactPhone
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|mainContact
operator|.
name|setPhone
argument_list|(
name|getMainContactPhone
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|getMainContactExternalId
argument_list|()
operator|!=
literal|null
operator|&&
name|getMainContactExternalId
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|mainContact
operator|.
name|setExternalUniqueId
argument_list|(
name|getMainContactExternalId
argument_list|()
argument_list|)
expr_stmt|;
name|hibSession
operator|.
name|saveOrUpdate
argument_list|(
name|mainContact
argument_list|)
expr_stmt|;
name|event
operator|.
name|setEventName
argument_list|(
name|getEventName
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|setMainContact
argument_list|(
name|mainContact
argument_list|)
expr_stmt|;
comment|// add additional emails
if|if
condition|(
name|getAdditionalEmails
argument_list|()
operator|!=
literal|null
operator|&&
name|getAdditionalEmails
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|event
operator|.
name|setEmail
argument_list|(
name|getAdditionalEmails
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|hibSession
operator|.
name|saveOrUpdate
argument_list|(
name|event
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"Special Event"
operator|.
name|equals
argument_list|(
name|getEventType
argument_list|()
argument_list|)
condition|)
block|{
if|if
condition|(
name|getSponsoringOrgId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|SponsoringOrganization
name|spor
init|=
name|SponsoringOrganizationDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|getSponsoringOrgId
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|setSponsoringOrganization
argument_list|(
name|spor
argument_list|)
expr_stmt|;
block|}
block|}
name|User
name|user
init|=
name|Web
operator|.
name|getUser
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|uname
init|=
name|event
operator|.
name|getMainContact
argument_list|()
operator|.
name|getShortName
argument_list|()
decl_stmt|;
if|if
condition|(
name|user
operator|!=
literal|null
operator|&&
operator|(
name|user
operator|.
name|isAdmin
argument_list|()
operator|||
name|Roles
operator|.
name|EVENT_MGR_ROLE
operator|.
name|equals
argument_list|(
name|user
operator|.
name|getRole
argument_list|()
argument_list|)
operator|)
condition|)
block|{
name|TimetableManager
name|mgr
init|=
name|TimetableManager
operator|.
name|getManager
argument_list|(
name|user
argument_list|)
decl_stmt|;
if|if
condition|(
name|mgr
operator|!=
literal|null
condition|)
name|uname
operator|=
name|mgr
operator|.
name|getShortName
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|uname
operator|==
literal|null
condition|)
name|uname
operator|=
name|user
operator|.
name|getName
argument_list|()
expr_stmt|;
comment|// add event note (additional info)
name|EventNote
name|en
init|=
operator|new
name|EventNote
argument_list|()
decl_stmt|;
name|en
operator|.
name|setNoteType
argument_list|(
name|EventNote
operator|.
name|sEventNoteTypeEditEvent
argument_list|)
expr_stmt|;
name|en
operator|.
name|setTimeStamp
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
expr_stmt|;
name|en
operator|.
name|setTextNote
argument_list|(
name|getAdditionalInfo
argument_list|()
argument_list|)
expr_stmt|;
name|en
operator|.
name|setUser
argument_list|(
name|uname
argument_list|)
expr_stmt|;
name|en
operator|.
name|setEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
name|hibSession
operator|.
name|saveOrUpdate
argument_list|(
name|en
argument_list|)
expr_stmt|;
comment|// attach the note to event
if|if
condition|(
name|event
operator|.
name|getNotes
argument_list|()
operator|==
literal|null
condition|)
name|event
operator|.
name|setNotes
argument_list|(
operator|new
name|HashSet
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|getNotes
argument_list|()
operator|.
name|add
argument_list|(
name|en
argument_list|)
expr_stmt|;
name|hibSession
operator|.
name|saveOrUpdate
argument_list|(
name|event
argument_list|)
expr_stmt|;
operator|new
name|EventEmail
argument_list|(
name|event
argument_list|,
name|EventEmail
operator|.
name|sActionUpdate
argument_list|,
operator|new
name|TreeSet
argument_list|<
name|MultiMeeting
argument_list|>
argument_list|()
argument_list|,
name|getAdditionalInfo
argument_list|()
argument_list|)
operator|.
name|send
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|ChangeLog
operator|.
name|addChange
argument_list|(
name|hibSession
argument_list|,
name|request
argument_list|,
name|event
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|EVENT_EDIT
argument_list|,
name|ChangeLog
operator|.
name|Operation
operator|.
name|UPDATE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|tx
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
if|if
condition|(
name|tx
operator|!=
literal|null
condition|)
name|tx
operator|.
name|rollback
argument_list|()
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

