begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.1 (University Timetabling Application)  * Copyright (C) 2008, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program; if not, write to the Free Software Foundation, Inc.,  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|form
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionErrors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|util
operator|.
name|MessageResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Preference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Roles
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SolverGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimetableManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|DynamicList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|DynamicListObjectFactory
import|;
end_import

begin_comment
comment|/**  * Represents the Timetable Manager  *   * @author Heston Fernandes  */
end_comment

begin_class
specifier|public
class|class
name|TimetableManagerForm
extends|extends
name|ActionForm
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|3763101881496582452L
decl_stmt|;
comment|// --------------------------------------------------------- Instance Variables
specifier|private
name|String
name|op
decl_stmt|;
specifier|private
name|String
name|op1
decl_stmt|;
specifier|private
name|String
name|uniqueId
decl_stmt|;
specifier|private
name|String
name|externalId
decl_stmt|;
specifier|private
name|String
name|lookupResult
decl_stmt|;
specifier|private
name|String
name|firstName
decl_stmt|;
specifier|private
name|String
name|middleName
decl_stmt|;
specifier|private
name|String
name|lastName
decl_stmt|;
specifier|private
name|String
name|primaryRole
decl_stmt|;
specifier|private
name|String
name|email
decl_stmt|;
specifier|private
name|String
name|role
decl_stmt|;
specifier|private
name|String
name|dept
decl_stmt|;
specifier|private
name|String
name|solverGr
decl_stmt|;
specifier|private
name|List
name|depts
decl_stmt|;
specifier|private
name|List
name|deptLabels
decl_stmt|;
specifier|private
name|List
name|roles
decl_stmt|;
specifier|private
name|List
name|roleRefs
decl_stmt|;
specifier|private
name|List
name|roleReceiveEmailFlags
decl_stmt|;
specifier|private
name|List
name|solverGrs
decl_stmt|;
specifier|private
name|List
name|solverGrLabels
decl_stmt|;
specifier|private
name|Boolean
name|isExternalManager
decl_stmt|;
specifier|private
name|Boolean
name|lookupEnabled
decl_stmt|;
comment|// --------------------------------------------------------- Classes
comment|/** Factory to create dynamic list element for departments */
specifier|protected
name|DynamicListObjectFactory
name|factoryDepts
init|=
operator|new
name|DynamicListObjectFactory
argument_list|()
block|{
specifier|public
name|Object
name|create
parameter_list|()
block|{
return|return
operator|new
name|String
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
return|;
block|}
block|}
decl_stmt|;
comment|/** Factory to create dynamic list element for department labels */
specifier|protected
name|DynamicListObjectFactory
name|factoryDeptLabels
init|=
operator|new
name|DynamicListObjectFactory
argument_list|()
block|{
specifier|public
name|Object
name|create
parameter_list|()
block|{
return|return
operator|new
name|String
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
return|;
block|}
block|}
decl_stmt|;
comment|/** Factory to create dynamic list element for roles */
specifier|protected
name|DynamicListObjectFactory
name|factoryRoles
init|=
operator|new
name|DynamicListObjectFactory
argument_list|()
block|{
specifier|public
name|Object
name|create
parameter_list|()
block|{
return|return
operator|new
name|String
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
return|;
block|}
block|}
decl_stmt|;
comment|/** Factory to create dynamic list element for role refs */
specifier|protected
name|DynamicListObjectFactory
name|factoryRoleRefs
init|=
operator|new
name|DynamicListObjectFactory
argument_list|()
block|{
specifier|public
name|Object
name|create
parameter_list|()
block|{
return|return
operator|new
name|String
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
return|;
block|}
block|}
decl_stmt|;
comment|/** Factory to create dynamic list element for role receive email flags */
specifier|protected
name|DynamicListObjectFactory
name|factoryRoleReceiveEmailFlags
init|=
operator|new
name|DynamicListObjectFactory
argument_list|()
block|{
specifier|public
name|Object
name|create
parameter_list|()
block|{
return|return
operator|new
name|String
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
return|;
block|}
block|}
decl_stmt|;
comment|/** Factory to create dynamic list element for solver groups */
specifier|protected
name|DynamicListObjectFactory
name|factorySolverGrs
init|=
operator|new
name|DynamicListObjectFactory
argument_list|()
block|{
specifier|public
name|Object
name|create
parameter_list|()
block|{
return|return
operator|new
name|String
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
return|;
block|}
block|}
decl_stmt|;
comment|/** Factory to create dynamic list element for solver group labels */
specifier|protected
name|DynamicListObjectFactory
name|factorySolverGrLabels
init|=
operator|new
name|DynamicListObjectFactory
argument_list|()
block|{
specifier|public
name|Object
name|create
parameter_list|()
block|{
return|return
operator|new
name|String
argument_list|(
name|Preference
operator|.
name|BLANK_PREF_VALUE
argument_list|)
return|;
block|}
block|}
decl_stmt|;
comment|// --------------------------------------------------------- Methods
specifier|public
name|void
name|reset
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|op1
operator|=
literal|"1"
expr_stmt|;
name|op
operator|=
literal|""
expr_stmt|;
name|uniqueId
operator|=
literal|""
expr_stmt|;
name|externalId
operator|=
literal|""
expr_stmt|;
name|firstName
operator|=
literal|""
expr_stmt|;
name|middleName
operator|=
literal|""
expr_stmt|;
name|lastName
operator|=
literal|""
expr_stmt|;
name|primaryRole
operator|=
literal|""
expr_stmt|;
name|role
operator|=
literal|""
expr_stmt|;
name|dept
operator|=
literal|""
expr_stmt|;
name|solverGr
operator|=
literal|""
expr_stmt|;
name|isExternalManager
operator|=
literal|null
expr_stmt|;
name|lookupEnabled
operator|=
literal|null
expr_stmt|;
name|depts
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryDepts
argument_list|)
expr_stmt|;
name|deptLabels
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryDeptLabels
argument_list|)
expr_stmt|;
name|roles
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryRoles
argument_list|)
expr_stmt|;
name|roleRefs
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryRoleRefs
argument_list|)
expr_stmt|;
name|roleReceiveEmailFlags
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factoryRoleReceiveEmailFlags
argument_list|)
expr_stmt|;
name|solverGrs
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factorySolverGrs
argument_list|)
expr_stmt|;
name|solverGrLabels
operator|=
name|DynamicList
operator|.
name|getInstance
argument_list|(
operator|new
name|ArrayList
argument_list|()
argument_list|,
name|factorySolverGrLabels
argument_list|)
expr_stmt|;
name|super
operator|.
name|reset
argument_list|(
name|mapping
argument_list|,
name|request
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ActionErrors
name|validate
parameter_list|(
name|ActionMapping
name|mapping
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|ActionErrors
name|errors
init|=
operator|new
name|ActionErrors
argument_list|()
decl_stmt|;
comment|// Get Message Resources
name|MessageResources
name|rsc
init|=
operator|(
name|MessageResources
operator|)
name|super
operator|.
name|getServlet
argument_list|()
operator|.
name|getServletContext
argument_list|()
operator|.
name|getAttribute
argument_list|(
name|Globals
operator|.
name|MESSAGES_KEY
argument_list|)
decl_stmt|;
if|if
condition|(
name|op
operator|.
name|equalsIgnoreCase
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.addRole"
argument_list|)
argument_list|)
condition|)
block|{
if|if
condition|(
name|role
operator|.
name|equals
argument_list|(
name|Constants
operator|.
name|BLANK_OPTION_VALUE
argument_list|)
condition|)
name|errors
operator|.
name|add
argument_list|(
literal|"role"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.invalid"
argument_list|,
literal|"Role"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|op
operator|.
name|equalsIgnoreCase
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.addDepartment"
argument_list|)
argument_list|)
condition|)
block|{
if|if
condition|(
name|dept
operator|.
name|equals
argument_list|(
name|Constants
operator|.
name|BLANK_OPTION_VALUE
argument_list|)
condition|)
name|errors
operator|.
name|add
argument_list|(
literal|"dept"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.invalid"
argument_list|,
literal|"Department"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|op
operator|.
name|equalsIgnoreCase
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.addSolverGroup"
argument_list|)
argument_list|)
condition|)
block|{
if|if
condition|(
name|solverGr
operator|.
name|equals
argument_list|(
name|Constants
operator|.
name|BLANK_OPTION_VALUE
argument_list|)
condition|)
name|errors
operator|.
name|add
argument_list|(
literal|"solverGr"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.invalid"
argument_list|,
literal|"Solver Group"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|op
operator|.
name|equalsIgnoreCase
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.insertTimetableManager"
argument_list|)
argument_list|)
operator|||
name|op
operator|.
name|equalsIgnoreCase
argument_list|(
name|rsc
operator|.
name|getMessage
argument_list|(
literal|"button.updateTimetableManager"
argument_list|)
argument_list|)
condition|)
block|{
if|if
condition|(
name|externalId
operator|==
literal|null
operator|||
name|externalId
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|errors
operator|.
name|add
argument_list|(
literal|"externalId"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.required"
argument_list|,
literal|"PuID / Account Name"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|User
operator|.
name|canIdentify
argument_list|()
condition|)
block|{
name|User
name|user
init|=
name|User
operator|.
name|identify
argument_list|(
name|externalId
argument_list|)
decl_stmt|;
if|if
condition|(
name|user
operator|==
literal|null
condition|)
name|errors
operator|.
name|add
argument_list|(
literal|"externalId"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
literal|"Manager '"
operator|+
name|externalId
operator|+
literal|"' cannot be identified"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|email
operator|==
literal|null
operator|||
name|email
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|errors
operator|.
name|add
argument_list|(
literal|"email"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.required"
argument_list|,
literal|"Email Address"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|primaryRole
operator|==
literal|null
operator|||
name|primaryRole
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|errors
operator|.
name|add
argument_list|(
literal|"primaryRole"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.required"
argument_list|,
literal|"Primary Role"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|depts
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
name|Roles
name|deptRole
init|=
name|Roles
operator|.
name|getRole
argument_list|(
name|Roles
operator|.
name|DEPT_SCHED_MGR_ROLE
argument_list|)
decl_stmt|;
if|if
condition|(
name|deptRole
operator|!=
literal|null
operator|&&
name|roles
operator|.
name|contains
argument_list|(
name|deptRole
operator|.
name|getRoleId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
name|errors
operator|.
name|add
argument_list|(
literal|"depts"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
literal|"At least one department must be assigned for role "
operator|+
name|deptRole
operator|.
name|getAbbv
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|roles
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
name|errors
operator|.
name|add
argument_list|(
literal|"roles"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
literal|"At least one role must be assigned"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|externalId
operator|!=
literal|null
operator|&&
name|externalId
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|TimetableManager
name|mgr
init|=
name|TimetableManager
operator|.
name|findByExternalId
argument_list|(
name|externalId
argument_list|)
decl_stmt|;
if|if
condition|(
name|mgr
operator|!=
literal|null
operator|&&
operator|!
name|mgr
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|getUniqueId
argument_list|()
argument_list|)
condition|)
name|errors
operator|.
name|add
argument_list|(
literal|"roles"
argument_list|,
operator|new
name|ActionMessage
argument_list|(
literal|"errors.generic"
argument_list|,
literal|"Duplicate Record - This manager already exists"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|errors
return|;
block|}
specifier|public
name|void
name|addToRoles
parameter_list|(
name|Roles
name|role
parameter_list|)
block|{
name|roles
operator|.
name|add
argument_list|(
name|role
operator|.
name|getRoleId
argument_list|()
argument_list|)
expr_stmt|;
name|roleRefs
operator|.
name|add
argument_list|(
name|role
operator|.
name|getAbbv
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeFromRoles
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|roles
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|roleRefs
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
if|if
condition|(
name|index
operator|<
name|roleReceiveEmailFlags
operator|.
name|size
argument_list|()
condition|)
block|{
name|roleReceiveEmailFlags
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|addToDepts
parameter_list|(
name|Department
name|dept
parameter_list|)
block|{
name|depts
operator|.
name|add
argument_list|(
name|dept
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|deptLabels
operator|.
name|add
argument_list|(
name|dept
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeFromDepts
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|depts
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|deptLabels
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addToSolverGrs
parameter_list|(
name|SolverGroup
name|sg
parameter_list|)
block|{
name|solverGrs
operator|.
name|add
argument_list|(
name|sg
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|solverGrLabels
operator|.
name|add
argument_list|(
name|sg
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeFromSolverGrs
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|solverGrs
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|solverGrLabels
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getLookupResult
parameter_list|()
block|{
return|return
name|lookupResult
return|;
block|}
specifier|public
name|void
name|setLookupResult
parameter_list|(
name|String
name|lookupResult
parameter_list|)
block|{
name|this
operator|.
name|lookupResult
operator|=
name|lookupResult
expr_stmt|;
block|}
specifier|public
name|String
name|getDept
parameter_list|()
block|{
return|return
name|dept
return|;
block|}
specifier|public
name|void
name|setDept
parameter_list|(
name|String
name|dept
parameter_list|)
block|{
name|this
operator|.
name|dept
operator|=
name|dept
expr_stmt|;
block|}
specifier|public
name|String
name|getSolverGr
parameter_list|()
block|{
return|return
name|solverGr
return|;
block|}
specifier|public
name|void
name|setSolverGr
parameter_list|(
name|String
name|solverGr
parameter_list|)
block|{
name|this
operator|.
name|solverGr
operator|=
name|solverGr
expr_stmt|;
block|}
specifier|public
name|List
name|getDepts
parameter_list|()
block|{
return|return
name|depts
return|;
block|}
specifier|public
name|String
name|getDepts
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|depts
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|void
name|setDepts
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|depts
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDepts
parameter_list|(
name|List
name|depts
parameter_list|)
block|{
name|this
operator|.
name|depts
operator|=
name|depts
expr_stmt|;
block|}
specifier|public
name|List
name|getDeptLabels
parameter_list|()
block|{
return|return
name|deptLabels
return|;
block|}
specifier|public
name|String
name|getDeptLabels
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|deptLabels
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|void
name|setDeptLabels
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|deptLabels
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDeptLabels
parameter_list|(
name|List
name|deptLabels
parameter_list|)
block|{
name|this
operator|.
name|deptLabels
operator|=
name|deptLabels
expr_stmt|;
block|}
specifier|public
name|List
name|getSolverGrs
parameter_list|()
block|{
return|return
name|solverGrs
return|;
block|}
specifier|public
name|String
name|getSolverGrs
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|solverGrs
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|void
name|setSolverGrs
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|solverGrs
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setSolverGrs
parameter_list|(
name|List
name|solverGrs
parameter_list|)
block|{
name|this
operator|.
name|solverGrs
operator|=
name|solverGrs
expr_stmt|;
block|}
specifier|public
name|List
name|getSolverGrLabels
parameter_list|()
block|{
return|return
name|solverGrLabels
return|;
block|}
specifier|public
name|String
name|getSolverGrLabels
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|solverGrLabels
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|void
name|setSolverGrLabels
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|solverGrLabels
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setSolverGrLabels
parameter_list|(
name|List
name|solverGrLabels
parameter_list|)
block|{
name|this
operator|.
name|solverGrLabels
operator|=
name|solverGrLabels
expr_stmt|;
block|}
specifier|public
name|String
name|getEmail
parameter_list|()
block|{
return|return
name|email
return|;
block|}
specifier|public
name|void
name|setEmail
parameter_list|(
name|String
name|email
parameter_list|)
block|{
name|this
operator|.
name|email
operator|=
name|email
expr_stmt|;
block|}
specifier|public
name|String
name|getFirstName
parameter_list|()
block|{
return|return
name|firstName
return|;
block|}
specifier|public
name|void
name|setFirstName
parameter_list|(
name|String
name|firstName
parameter_list|)
block|{
name|this
operator|.
name|firstName
operator|=
name|firstName
expr_stmt|;
block|}
specifier|public
name|Boolean
name|getIsExternalManager
parameter_list|()
block|{
return|return
name|isExternalManager
return|;
block|}
specifier|public
name|void
name|setIsExternalManager
parameter_list|(
name|Boolean
name|isExternalManager
parameter_list|)
block|{
name|this
operator|.
name|isExternalManager
operator|=
name|isExternalManager
expr_stmt|;
block|}
specifier|public
name|String
name|getLastName
parameter_list|()
block|{
return|return
name|lastName
return|;
block|}
specifier|public
name|void
name|setLastName
parameter_list|(
name|String
name|lastName
parameter_list|)
block|{
name|this
operator|.
name|lastName
operator|=
name|lastName
expr_stmt|;
block|}
specifier|public
name|String
name|getMiddleName
parameter_list|()
block|{
return|return
name|middleName
return|;
block|}
specifier|public
name|void
name|setMiddleName
parameter_list|(
name|String
name|middleName
parameter_list|)
block|{
name|this
operator|.
name|middleName
operator|=
name|middleName
expr_stmt|;
block|}
specifier|public
name|String
name|getOp
parameter_list|()
block|{
return|return
name|op
return|;
block|}
specifier|public
name|void
name|setOp
parameter_list|(
name|String
name|op
parameter_list|)
block|{
name|this
operator|.
name|op
operator|=
name|op
expr_stmt|;
block|}
specifier|public
name|String
name|getOp1
parameter_list|()
block|{
return|return
name|op1
return|;
block|}
specifier|public
name|void
name|setOp1
parameter_list|(
name|String
name|op1
parameter_list|)
block|{
name|this
operator|.
name|op1
operator|=
name|op1
expr_stmt|;
block|}
specifier|public
name|String
name|getPrimaryRole
parameter_list|()
block|{
return|return
name|primaryRole
return|;
block|}
specifier|public
name|void
name|setPrimaryRole
parameter_list|(
name|String
name|primaryRole
parameter_list|)
block|{
name|this
operator|.
name|primaryRole
operator|=
name|primaryRole
expr_stmt|;
block|}
specifier|public
name|String
name|getExternalId
parameter_list|()
block|{
return|return
name|externalId
return|;
block|}
specifier|public
name|void
name|setExternalId
parameter_list|(
name|String
name|externalId
parameter_list|)
block|{
name|this
operator|.
name|externalId
operator|=
name|externalId
expr_stmt|;
block|}
specifier|public
name|List
name|getRoles
parameter_list|()
block|{
return|return
name|roles
return|;
block|}
specifier|public
name|String
name|getRoles
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|roles
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|void
name|setRoles
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|roles
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setRoles
parameter_list|(
name|List
name|roles
parameter_list|)
block|{
name|this
operator|.
name|roles
operator|=
name|roles
expr_stmt|;
block|}
specifier|public
name|List
name|getRoleRefs
parameter_list|()
block|{
return|return
name|roleRefs
return|;
block|}
specifier|public
name|String
name|getRoleRefs
parameter_list|(
name|int
name|key
parameter_list|)
block|{
return|return
name|roleRefs
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|void
name|setRoleRefs
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|roleRefs
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setRoleRefs
parameter_list|(
name|List
name|roleRefs
parameter_list|)
block|{
name|this
operator|.
name|roleRefs
operator|=
name|roleRefs
expr_stmt|;
block|}
specifier|public
name|String
name|getRole
parameter_list|()
block|{
return|return
name|role
return|;
block|}
specifier|public
name|void
name|setRole
parameter_list|(
name|String
name|role
parameter_list|)
block|{
name|this
operator|.
name|role
operator|=
name|role
expr_stmt|;
block|}
specifier|public
name|String
name|getUniqueId
parameter_list|()
block|{
return|return
name|uniqueId
return|;
block|}
specifier|public
name|void
name|setUniqueId
parameter_list|(
name|String
name|uniqueId
parameter_list|)
block|{
name|this
operator|.
name|uniqueId
operator|=
name|uniqueId
expr_stmt|;
block|}
specifier|public
name|Boolean
name|getLookupEnabled
parameter_list|()
block|{
return|return
name|lookupEnabled
return|;
block|}
specifier|public
name|void
name|setLookupEnabled
parameter_list|(
name|Boolean
name|lookupEnabled
parameter_list|)
block|{
name|this
operator|.
name|lookupEnabled
operator|=
name|lookupEnabled
expr_stmt|;
block|}
specifier|public
name|List
name|getRoleReceiveEmailFlags
parameter_list|()
block|{
return|return
name|roleReceiveEmailFlags
return|;
block|}
specifier|public
name|void
name|setRoleReceiveEmailFlags
parameter_list|(
name|int
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|this
operator|.
name|roleReceiveEmailFlags
operator|.
name|set
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setRoleReceiveEmailFlags
parameter_list|(
name|List
name|roleReceiveEmailFlags
parameter_list|)
block|{
name|this
operator|.
name|roleReceiveEmailFlags
operator|=
name|roleReceiveEmailFlags
expr_stmt|;
block|}
block|}
end_class

end_unit

