begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|curricula
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|curricula
operator|.
name|CurriculaClassifications
operator|.
name|ExpectedChangedEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|curricula
operator|.
name|CurriculaClassifications
operator|.
name|NameChangedEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimePageLabel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTextBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|services
operator|.
name|CurriculaService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|services
operator|.
name|CurriculaServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CurriculumInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CurriculumInterface
operator|.
name|AcademicAreaInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CurriculumInterface
operator|.
name|AcademicClassificationInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CurriculumInterface
operator|.
name|CourseInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CurriculumInterface
operator|.
name|CurriculumClassificationInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CurriculumInterface
operator|.
name|CurriculumStudentsInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CurriculumInterface
operator|.
name|DepartmentInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CurriculumInterface
operator|.
name|MajorInterface
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ValueBoxBase
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|CurriculumEdit
extends|extends
name|Composite
block|{
specifier|private
specifier|final
name|CurriculaServiceAsync
name|iService
init|=
name|GWT
operator|.
name|create
argument_list|(
name|CurriculaService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|SimpleForm
name|iCurriculaTable
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iTitleAndButtons
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
name|iCurriculumAbbv
decl_stmt|,
name|iCurriculumName
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|iCurriculumMajors
decl_stmt|,
name|iCurriculumArea
decl_stmt|,
name|iCurriculumDept
decl_stmt|;
specifier|private
name|CurriculaClassificationsPanel
name|iCurriculumClasfTable
init|=
literal|null
decl_stmt|;
specifier|private
name|boolean
name|iDefaultAbbv
init|=
literal|false
decl_stmt|,
name|iDefaultName
init|=
literal|false
decl_stmt|;
specifier|private
name|List
argument_list|<
name|AcademicAreaInterface
argument_list|>
name|iAreas
init|=
operator|new
name|ArrayList
argument_list|<
name|AcademicAreaInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|DepartmentInterface
argument_list|>
name|iDepts
init|=
operator|new
name|ArrayList
argument_list|<
name|DepartmentInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|MajorInterface
argument_list|>
name|iMajors
init|=
operator|new
name|ArrayList
argument_list|<
name|MajorInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|AcademicClassificationInterface
argument_list|>
name|iClassifications
init|=
operator|new
name|ArrayList
argument_list|<
name|AcademicClassificationInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|CurriculumInterface
name|iCurriculum
init|=
literal|null
decl_stmt|;
specifier|private
name|CurriculaCourses
name|iCurriculumCourses
decl_stmt|;
specifier|private
name|List
argument_list|<
name|EditFinishedHandler
argument_list|>
name|iEditFinishedHandlers
init|=
operator|new
name|ArrayList
argument_list|<
name|EditFinishedHandler
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|boolean
name|iAreaHasNoMajors
init|=
literal|false
decl_stmt|;
specifier|private
name|Mode
name|iMode
decl_stmt|;
specifier|private
name|boolean
name|iSaved
init|=
literal|false
decl_stmt|;
specifier|private
name|NavigationProvider
name|iNavigation
init|=
literal|null
decl_stmt|;
specifier|public
specifier|static
enum|enum
name|Mode
block|{
name|ADD
argument_list|(
literal|"Add Curriculum"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
block|,
name|EDIT
argument_list|(
literal|"Edit Curriculum"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
block|,
name|DETAILS
argument_list|(
literal|"Curriculum Detail"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
block|,
name|DIALOG
argument_list|(
literal|null
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
block|;
specifier|private
name|String
name|iTitle
decl_stmt|;
specifier|private
name|boolean
name|iEditable
decl_stmt|,
name|iEditableDetails
decl_stmt|;
name|Mode
parameter_list|(
name|String
name|title
parameter_list|,
name|boolean
name|editable
parameter_list|,
name|boolean
name|details
parameter_list|)
block|{
name|iTitle
operator|=
name|title
expr_stmt|;
name|iEditable
operator|=
name|editable
expr_stmt|;
name|iEditableDetails
operator|=
name|details
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasTitle
parameter_list|()
block|{
return|return
name|iTitle
operator|!=
literal|null
return|;
block|}
specifier|public
name|String
name|getTitle
parameter_list|()
block|{
return|return
name|iTitle
return|;
block|}
specifier|public
name|boolean
name|isEditable
parameter_list|()
block|{
return|return
name|iEditable
return|;
block|}
specifier|public
name|boolean
name|areDetailsEditable
parameter_list|()
block|{
return|return
name|iEditableDetails
return|;
block|}
block|}
specifier|public
name|CurriculumEdit
parameter_list|(
name|NavigationProvider
name|navigation
parameter_list|)
block|{
name|iNavigation
operator|=
name|navigation
expr_stmt|;
name|ClickHandler
name|backHandler
init|=
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iMode
operator|==
name|Mode
operator|.
name|EDIT
condition|)
block|{
comment|// back to detail screen
name|loadCurriculum
argument_list|(
name|Mode
operator|.
name|DETAILS
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|EditFinishedEvent
name|e
init|=
operator|new
name|EditFinishedEvent
argument_list|()
decl_stmt|;
for|for
control|(
name|EditFinishedHandler
name|h
range|:
name|iEditFinishedHandlers
control|)
block|{
if|if
condition|(
name|iSaved
condition|)
name|h
operator|.
name|onSave
argument_list|(
name|e
argument_list|)
expr_stmt|;
else|else
name|h
operator|.
name|onBack
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
decl_stmt|;
name|ClickHandler
name|saveHandler
init|=
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|saveCurriculum
argument_list|()
condition|)
block|{
name|showLoading
argument_list|(
literal|"Saving curriculum "
operator|+
name|iCurriculum
operator|.
name|getName
argument_list|()
operator|+
literal|" ..."
argument_list|)
expr_stmt|;
name|iService
operator|.
name|saveCurriculum
argument_list|(
name|iCurriculum
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Long
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|hideLoading
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
literal|"Validation failed ("
operator|+
name|caught
operator|.
name|getMessage
argument_list|()
operator|+
literal|")."
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Long
name|result
parameter_list|)
block|{
if|if
condition|(
name|iMode
operator|==
name|Mode
operator|.
name|EDIT
condition|)
block|{
comment|// back to details page
name|iCurriculum
operator|.
name|setId
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|reload
argument_list|(
name|Mode
operator|.
name|DETAILS
argument_list|)
expr_stmt|;
name|iSaved
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|EditFinishedEvent
name|e
init|=
operator|new
name|EditFinishedEvent
argument_list|()
decl_stmt|;
for|for
control|(
name|EditFinishedHandler
name|h
range|:
name|iEditFinishedHandlers
control|)
block|{
name|h
operator|.
name|onSave
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
name|hideLoading
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
literal|"Validation failed, see errors below."
argument_list|)
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
name|ClickHandler
name|deleteHandler
init|=
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|Window
operator|.
name|confirm
argument_list|(
literal|"Do you realy want to delete this curriculum?"
argument_list|)
condition|)
return|return;
name|showLoading
argument_list|(
literal|"Deleting curriculum "
operator|+
name|iCurriculum
operator|.
name|getName
argument_list|()
operator|+
literal|" ..."
argument_list|)
expr_stmt|;
name|iService
operator|.
name|deleteCurriculum
argument_list|(
name|iCurriculum
operator|.
name|getId
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
literal|"Delete failed ("
operator|+
name|caught
operator|.
name|getMessage
argument_list|()
operator|+
literal|")."
argument_list|)
expr_stmt|;
name|hideLoading
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
name|EditFinishedEvent
name|e
init|=
operator|new
name|EditFinishedEvent
argument_list|()
decl_stmt|;
for|for
control|(
name|EditFinishedHandler
name|h
range|:
name|iEditFinishedHandlers
control|)
block|{
name|h
operator|.
name|onDelete
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
name|hideLoading
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|ClickHandler
name|printHandler
init|=
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|Window
operator|.
name|print
argument_list|()
expr_stmt|;
block|}
block|}
decl_stmt|;
name|ClickHandler
name|editHandler
init|=
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|loadCurriculum
argument_list|(
name|Mode
operator|.
name|EDIT
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|ClickHandler
name|nextHandler
init|=
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
specifier|final
name|CurriculumInterface
name|next
init|=
operator|(
name|iNavigation
operator|==
literal|null
condition|?
literal|null
else|:
name|iNavigation
operator|.
name|next
argument_list|(
name|iCurriculum
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|next
operator|==
literal|null
condition|)
block|{
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
literal|"Next curriculum not provided."
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
name|getMode
argument_list|()
operator|.
name|isEditable
argument_list|()
condition|)
block|{
if|if
condition|(
name|saveCurriculum
argument_list|()
condition|)
block|{
name|showLoading
argument_list|(
literal|"Saving curriculum "
operator|+
name|iCurriculum
operator|.
name|getName
argument_list|()
operator|+
literal|" ..."
argument_list|)
expr_stmt|;
name|iService
operator|.
name|saveCurriculum
argument_list|(
name|iCurriculum
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Long
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|hideLoading
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
literal|"Validation failed ("
operator|+
name|caught
operator|.
name|getMessage
argument_list|()
operator|+
literal|")."
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Long
name|result
parameter_list|)
block|{
name|iSaved
operator|=
literal|false
expr_stmt|;
name|iCurriculum
operator|=
name|next
expr_stmt|;
name|reload
argument_list|(
name|iMode
argument_list|)
expr_stmt|;
name|iNavigation
operator|.
name|onChange
argument_list|(
name|iCurriculum
argument_list|)
expr_stmt|;
name|hideLoading
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
literal|"Validation failed, see errors below."
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|iSaved
operator|=
literal|false
expr_stmt|;
name|iCurriculum
operator|=
name|next
expr_stmt|;
name|reload
argument_list|(
name|iMode
argument_list|)
expr_stmt|;
name|iNavigation
operator|.
name|onChange
argument_list|(
name|iCurriculum
argument_list|)
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
name|ClickHandler
name|previousHandler
init|=
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
specifier|final
name|CurriculumInterface
name|previous
init|=
operator|(
name|iNavigation
operator|==
literal|null
condition|?
literal|null
else|:
name|iNavigation
operator|.
name|previous
argument_list|(
name|iCurriculum
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|previous
operator|==
literal|null
condition|)
block|{
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
literal|"Previous curriculum not provided."
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
name|getMode
argument_list|()
operator|.
name|isEditable
argument_list|()
condition|)
block|{
if|if
condition|(
name|saveCurriculum
argument_list|()
condition|)
block|{
name|showLoading
argument_list|(
literal|"Saving curriculum "
operator|+
name|iCurriculum
operator|.
name|getName
argument_list|()
operator|+
literal|" ..."
argument_list|)
expr_stmt|;
name|iService
operator|.
name|saveCurriculum
argument_list|(
name|iCurriculum
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Long
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|hideLoading
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
literal|"Validation failed ("
operator|+
name|caught
operator|.
name|getMessage
argument_list|()
operator|+
literal|")."
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Long
name|result
parameter_list|)
block|{
name|iSaved
operator|=
literal|false
expr_stmt|;
name|iCurriculum
operator|=
name|previous
expr_stmt|;
name|reload
argument_list|(
name|iMode
argument_list|)
expr_stmt|;
name|iNavigation
operator|.
name|onChange
argument_list|(
name|iCurriculum
argument_list|)
expr_stmt|;
name|hideLoading
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
literal|"Validation failed, see errors below."
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|iSaved
operator|=
literal|false
expr_stmt|;
name|iCurriculum
operator|=
name|previous
expr_stmt|;
name|reload
argument_list|(
name|iMode
argument_list|)
expr_stmt|;
name|iNavigation
operator|.
name|onChange
argument_list|(
name|iCurriculum
argument_list|)
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
name|iCurriculaTable
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
literal|"Curriculum Details"
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"edit"
argument_list|,
literal|"<u>E</u>dit"
argument_list|,
literal|75
argument_list|,
name|editHandler
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"save"
argument_list|,
literal|"<u>S</u>ave"
argument_list|,
literal|75
argument_list|,
name|saveHandler
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"previous"
argument_list|,
literal|"<u>P</u>revious"
argument_list|,
literal|75
argument_list|,
name|previousHandler
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"next"
argument_list|,
literal|"<u>N</u>ext"
argument_list|,
literal|75
argument_list|,
name|nextHandler
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"delete"
argument_list|,
literal|"<u>D</u>elete"
argument_list|,
literal|75
argument_list|,
name|deleteHandler
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"print"
argument_list|,
literal|"Prin<u>t</u>"
argument_list|,
literal|75
argument_list|,
name|printHandler
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"back"
argument_list|,
literal|"<u>B</u>ack"
argument_list|,
literal|75
argument_list|,
name|backHandler
argument_list|)
expr_stmt|;
name|iCurriculaTable
operator|.
name|addHeaderRow
argument_list|(
name|iTitleAndButtons
argument_list|)
expr_stmt|;
name|iCurriculumAbbv
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
argument_list|(
operator|new
name|UniTimeTextBox
argument_list|(
literal|20
argument_list|,
name|ValueBoxBase
operator|.
name|TextAlignment
operator|.
name|LEFT
argument_list|)
argument_list|)
expr_stmt|;
name|iCurriculaTable
operator|.
name|addRow
argument_list|(
literal|"Abbreviation:"
argument_list|,
name|iCurriculumAbbv
argument_list|)
expr_stmt|;
name|iCurriculumAbbv
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iDefaultAbbv
operator|=
literal|false
expr_stmt|;
name|iCurriculumAbbv
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iCurriculumName
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
argument_list|(
operator|new
name|UniTimeTextBox
argument_list|(
literal|60
argument_list|,
literal|500
argument_list|)
argument_list|)
expr_stmt|;
name|iCurriculaTable
operator|.
name|addRow
argument_list|(
literal|"Name:"
argument_list|,
name|iCurriculumName
argument_list|)
expr_stmt|;
name|iCurriculumName
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iDefaultName
operator|=
literal|false
expr_stmt|;
name|iCurriculumName
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iCurriculumArea
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"300px"
argument_list|)
expr_stmt|;
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setVisibleItemCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|iCurriculaTable
operator|.
name|addRow
argument_list|(
literal|"Academic Area:"
argument_list|,
name|iCurriculumArea
argument_list|)
expr_stmt|;
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iDefaultName
operator|||
name|iDefaultAbbv
condition|)
block|{
try|try
block|{
if|if
condition|(
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|==
literal|0
condition|)
block|{
if|if
condition|(
name|iDefaultAbbv
condition|)
name|iCurriculumAbbv
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
if|if
condition|(
name|iDefaultName
condition|)
name|iCurriculumName
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|AcademicAreaInterface
name|area
init|=
name|iAreas
operator|.
name|get
argument_list|(
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
name|iDefaultAbbv
condition|)
name|iCurriculumAbbv
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|area
operator|.
name|getAbbv
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iDefaultName
condition|)
name|iCurriculumName
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|area
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
block|}
name|iCurriculumArea
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|loadMajors
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iCurriculumMajors
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"300px"
argument_list|)
expr_stmt|;
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|setVisibleItemCount
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|setHeight
argument_list|(
literal|"100px"
argument_list|)
expr_stmt|;
name|iCurriculaTable
operator|.
name|addRow
argument_list|(
literal|"Major(s):"
argument_list|,
name|iCurriculumMajors
argument_list|)
expr_stmt|;
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
try|try
block|{
name|String
name|defaultAbbv
init|=
literal|""
decl_stmt|,
name|defaultName
init|=
literal|""
decl_stmt|;
name|AcademicAreaInterface
name|area
init|=
name|iAreas
operator|.
name|get
argument_list|(
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
name|defaultAbbv
operator|=
name|area
operator|.
name|getAbbv
argument_list|()
expr_stmt|;
name|defaultName
operator|=
name|area
operator|.
name|getName
argument_list|()
expr_stmt|;
name|String
name|majors
init|=
literal|""
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
block|{
name|MajorInterface
name|m
init|=
name|iMajors
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|defaultAbbv
operator|.
name|contains
argument_list|(
literal|"/"
argument_list|)
condition|)
block|{
name|defaultAbbv
operator|+=
literal|"/"
expr_stmt|;
name|defaultName
operator|+=
literal|" / "
expr_stmt|;
block|}
else|else
block|{
name|defaultAbbv
operator|+=
literal|","
expr_stmt|;
name|defaultName
operator|+=
literal|", "
expr_stmt|;
block|}
name|defaultAbbv
operator|+=
name|m
operator|.
name|getCode
argument_list|()
expr_stmt|;
name|defaultName
operator|+=
name|m
operator|.
name|getName
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|majors
operator|.
name|isEmpty
argument_list|()
condition|)
name|majors
operator|+=
literal|"<br>"
expr_stmt|;
name|majors
operator|+=
name|m
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|defaultName
operator|.
name|length
argument_list|()
operator|>
literal|60
condition|)
name|defaultName
operator|=
name|defaultName
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|60
argument_list|)
expr_stmt|;
if|if
condition|(
name|defaultAbbv
operator|.
name|length
argument_list|()
operator|>
literal|20
condition|)
name|defaultAbbv
operator|=
name|defaultAbbv
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|20
argument_list|)
expr_stmt|;
if|if
condition|(
name|iDefaultAbbv
condition|)
name|iCurriculumAbbv
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|defaultAbbv
argument_list|)
expr_stmt|;
if|if
condition|(
name|iDefaultName
condition|)
name|iCurriculumName
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|defaultName
argument_list|)
expr_stmt|;
name|iCurriculumMajors
operator|.
name|setPrintText
argument_list|(
name|majors
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
name|loadEnrollments
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iCurriculumDept
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|iCurriculumDept
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"300px"
argument_list|)
expr_stmt|;
name|iCurriculumDept
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iCurriculumDept
operator|.
name|getWidget
argument_list|()
operator|.
name|setVisibleItemCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|iCurriculaTable
operator|.
name|addRow
argument_list|(
literal|"Department:"
argument_list|,
name|iCurriculumDept
argument_list|)
expr_stmt|;
name|iCurriculaTable
operator|.
name|addRow
argument_list|(
literal|"Last Change:"
argument_list|,
operator|new
name|Label
argument_list|(
literal|""
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|iCurriculaTable
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
literal|6
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iCurriculumDept
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iCurriculumDept
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iCurriculaTable
operator|.
name|addHeaderRow
argument_list|(
literal|"Curriculum Classifications"
argument_list|)
expr_stmt|;
name|iCurriculumClasfTable
operator|=
operator|new
name|CurriculaClassificationsPanel
argument_list|(
operator|new
name|CurriculaClassifications
argument_list|()
argument_list|)
expr_stmt|;
name|iCurriculaTable
operator|.
name|addRow
argument_list|(
name|iCurriculumClasfTable
argument_list|)
expr_stmt|;
name|iCurriculumCourses
operator|=
operator|new
name|CurriculaCourses
argument_list|()
expr_stmt|;
name|iCurriculaTable
operator|.
name|addHeaderRow
argument_list|(
literal|"Course Projections"
argument_list|)
expr_stmt|;
name|iCurriculaTable
operator|.
name|addRow
argument_list|(
name|iCurriculumCourses
argument_list|)
expr_stmt|;
name|iCurriculaTable
operator|.
name|addNotPrintableBottomRow
argument_list|(
name|iTitleAndButtons
operator|.
name|clonePanel
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|initWidget
argument_list|(
name|iCurriculaTable
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Mode
name|getMode
parameter_list|()
block|{
return|return
name|iMode
return|;
block|}
specifier|private
name|void
name|loadCurriculum
parameter_list|(
name|Mode
name|mode
parameter_list|)
block|{
name|iMode
operator|=
name|mode
expr_stmt|;
if|if
condition|(
name|iMode
operator|.
name|hasTitle
argument_list|()
condition|)
name|UniTimePageLabel
operator|.
name|getInstance
argument_list|()
operator|.
name|setPageName
argument_list|(
name|iMode
operator|.
name|getTitle
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iCurriculum
operator|.
name|getId
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iDefaultAbbv
operator|=
literal|true
expr_stmt|;
name|iDefaultName
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|iDefaultAbbv
operator|=
literal|false
expr_stmt|;
name|iDefaultName
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|iDepts
operator|.
name|isEmpty
argument_list|()
operator|||
name|iAreas
operator|.
name|isEmpty
argument_list|()
condition|)
name|iCurriculum
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iCurriculumAbbv
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iCurriculumName
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iCurriculumArea
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iCurriculumDept
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iCurriculumClasfTable
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"delete"
argument_list|,
name|iMode
operator|==
name|Mode
operator|.
name|DETAILS
operator|&&
name|iCurriculum
operator|.
name|getId
argument_list|()
operator|!=
literal|null
operator|&&
name|iCurriculum
operator|.
name|isEditable
argument_list|()
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"save"
argument_list|,
name|iCurriculum
operator|.
name|isEditable
argument_list|()
operator|&&
name|iMode
operator|.
name|isEditable
argument_list|()
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"edit"
argument_list|,
name|iCurriculum
operator|.
name|isEditable
argument_list|()
operator|&&
operator|!
name|iMode
operator|.
name|isEditable
argument_list|()
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"print"
argument_list|,
name|iMode
operator|==
name|Mode
operator|.
name|DETAILS
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"previous"
argument_list|,
name|iNavigation
operator|!=
literal|null
operator|&&
name|iNavigation
operator|.
name|previous
argument_list|(
name|iCurriculum
argument_list|)
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"next"
argument_list|,
name|iNavigation
operator|!=
literal|null
operator|&&
name|iNavigation
operator|.
name|next
argument_list|(
name|iCurriculum
argument_list|)
operator|!=
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
name|iCurriculum
operator|.
name|hasLastChange
argument_list|()
operator|&&
name|iMode
operator|==
name|Mode
operator|.
name|DETAILS
condition|)
block|{
operator|(
operator|(
name|Label
operator|)
name|iCurriculaTable
operator|.
name|getWidget
argument_list|(
literal|6
argument_list|,
literal|1
argument_list|)
operator|)
operator|.
name|setText
argument_list|(
name|iCurriculum
operator|.
name|getLastChange
argument_list|()
argument_list|)
expr_stmt|;
name|iCurriculaTable
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
literal|6
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iCurriculaTable
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
literal|6
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|iCurriculumAbbv
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|iCurriculum
operator|.
name|getAbbv
argument_list|()
argument_list|)
expr_stmt|;
name|iCurriculumAbbv
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
operator|!
name|iCurriculum
operator|.
name|isEditable
argument_list|()
operator|||
operator|!
name|iMode
operator|.
name|areDetailsEditable
argument_list|()
operator|||
operator|!
name|iMode
operator|.
name|isEditable
argument_list|()
argument_list|)
expr_stmt|;
name|iCurriculumName
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|iCurriculum
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|iCurriculumName
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
operator|!
name|iCurriculum
operator|.
name|isEditable
argument_list|()
operator|||
operator|!
name|iMode
operator|.
name|areDetailsEditable
argument_list|()
operator|||
operator|!
name|iMode
operator|.
name|isEditable
argument_list|()
argument_list|)
expr_stmt|;
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|iCurriculum
operator|.
name|getAcademicArea
argument_list|()
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iAreas
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|iAreas
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|iCurriculum
operator|.
name|getAcademicArea
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|1
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|iCurriculumArea
operator|.
name|setText
argument_list|(
name|iCurriculum
operator|.
name|getAcademicArea
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|iCurriculum
operator|.
name|getAcademicArea
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|iCurriculumArea
operator|.
name|setReadOnly
argument_list|(
operator|!
name|iCurriculum
operator|.
name|isEditable
argument_list|()
operator|||
operator|!
name|iMode
operator|.
name|areDetailsEditable
argument_list|()
operator|||
operator|!
name|iMode
operator|.
name|isEditable
argument_list|()
argument_list|)
expr_stmt|;
name|iCurriculumDept
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|iCurriculum
operator|.
name|getDepartment
argument_list|()
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iDepts
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|iDepts
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|iCurriculum
operator|.
name|getDepartment
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
name|iCurriculumDept
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|1
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|iCurriculumDept
operator|.
name|setText
argument_list|(
name|iCurriculum
operator|.
name|getDepartment
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|iCurriculum
operator|.
name|getDepartment
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|iCurriculumDept
operator|.
name|setReadOnly
argument_list|(
operator|!
name|iCurriculum
operator|.
name|isEditable
argument_list|()
operator|||
operator|!
name|iMode
operator|.
name|areDetailsEditable
argument_list|()
operator|||
operator|!
name|iMode
operator|.
name|isEditable
argument_list|()
argument_list|)
expr_stmt|;
name|iCurriculumMajors
operator|.
name|setReadOnly
argument_list|(
operator|!
name|iCurriculum
operator|.
name|isEditable
argument_list|()
operator|||
operator|!
name|iMode
operator|.
name|areDetailsEditable
argument_list|()
operator|||
operator|!
name|iMode
operator|.
name|isEditable
argument_list|()
argument_list|)
expr_stmt|;
name|iCurriculumMajors
operator|.
name|setText
argument_list|(
name|iCurriculum
operator|.
name|getCodeMajorNames
argument_list|(
literal|"<br>"
argument_list|)
argument_list|)
expr_stmt|;
name|iCurriculumMajors
operator|.
name|setPrintText
argument_list|(
name|iCurriculum
operator|.
name|getCodeMajorNames
argument_list|(
literal|"<br>"
argument_list|)
argument_list|)
expr_stmt|;
name|loadMajors
argument_list|(
name|iMode
operator|.
name|areDetailsEditable
argument_list|()
argument_list|)
expr_stmt|;
name|iCurriculumClasfTable
operator|.
name|populate
argument_list|(
name|iCurriculum
operator|.
name|getClassifications
argument_list|()
argument_list|)
expr_stmt|;
name|iCurriculumClasfTable
operator|.
name|setReadOnly
argument_list|(
operator|!
name|iCurriculum
operator|.
name|isEditable
argument_list|()
operator|||
operator|!
name|iMode
operator|.
name|isEditable
argument_list|()
argument_list|)
expr_stmt|;
name|iCurriculumCourses
operator|.
name|populate
argument_list|(
name|iCurriculum
argument_list|,
name|iMode
operator|.
name|isEditable
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|col
init|=
literal|0
init|;
name|col
operator|<
name|iClassifications
operator|.
name|size
argument_list|()
condition|;
name|col
operator|++
control|)
block|{
if|if
condition|(
name|iCurriculumClasfTable
operator|.
name|getWidget
argument_list|()
operator|.
name|getExpected
argument_list|(
name|col
argument_list|)
operator|==
literal|null
condition|)
name|iCurriculumCourses
operator|.
name|setVisible
argument_list|(
name|col
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|boolean
name|saveCurriculum
parameter_list|()
block|{
name|boolean
name|ret
init|=
literal|true
decl_stmt|;
name|iCurriculum
operator|.
name|setAbbv
argument_list|(
name|iCurriculumAbbv
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iCurriculum
operator|.
name|getAbbv
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iCurriculumAbbv
operator|.
name|setErrorHint
argument_list|(
literal|"Curriculum abbreviation must be filled in."
argument_list|)
expr_stmt|;
name|ret
operator|=
literal|false
expr_stmt|;
block|}
name|iCurriculum
operator|.
name|setName
argument_list|(
name|iCurriculumName
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iCurriculum
operator|.
name|getName
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iCurriculumName
operator|.
name|setErrorHint
argument_list|(
literal|"Curriculum name must be filled in."
argument_list|)
expr_stmt|;
name|ret
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|<=
literal|0
condition|)
block|{
name|iCurriculumArea
operator|.
name|setErrorHint
argument_list|(
literal|"An academic area must be selected."
argument_list|)
expr_stmt|;
name|ret
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|AcademicAreaInterface
name|a
init|=
operator|new
name|AcademicAreaInterface
argument_list|()
decl_stmt|;
name|a
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|setAcademicArea
argument_list|(
name|a
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iCurriculum
operator|.
name|hasMajors
argument_list|()
condition|)
block|{
name|iCurriculum
operator|.
name|getMajors
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
block|{
name|MajorInterface
name|m
init|=
operator|new
name|MajorInterface
argument_list|()
decl_stmt|;
name|m
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|addMajor
argument_list|(
name|m
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|iCurriculum
operator|.
name|hasMajors
argument_list|()
condition|)
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|MajorInterface
name|m
init|=
operator|new
name|MajorInterface
argument_list|()
decl_stmt|;
name|m
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|addMajor
argument_list|(
name|m
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
operator|&&
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|>
literal|0
operator|&&
operator|!
name|iAreaHasNoMajors
condition|)
block|{
name|iCurriculumArea
operator|.
name|setErrorHint
argument_list|(
literal|"Selected academic area has no majors without a curriculum."
argument_list|)
expr_stmt|;
name|ret
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|iCurriculumDept
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|<=
literal|0
condition|)
block|{
name|iCurriculumDept
operator|.
name|setErrorHint
argument_list|(
literal|"A controlling department must be selected."
argument_list|)
expr_stmt|;
name|ret
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|DepartmentInterface
name|d
init|=
operator|new
name|DepartmentInterface
argument_list|()
decl_stmt|;
name|d
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iCurriculumDept
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iCurriculumDept
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|setDepartment
argument_list|(
name|d
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|iCurriculumClasfTable
operator|.
name|getWidget
argument_list|()
operator|.
name|saveCurriculum
argument_list|(
name|iCurriculum
argument_list|)
condition|)
block|{
name|ret
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|iCurriculum
operator|.
name|hasClassifications
argument_list|()
condition|)
block|{
name|iCurriculumClasfTable
operator|.
name|setErrorHint
argument_list|(
literal|"At least some students must be expected."
argument_list|)
expr_stmt|;
name|ret
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|iCurriculumCourses
operator|.
name|saveCurriculum
argument_list|(
name|iCurriculum
argument_list|)
condition|)
block|{
name|ret
operator|=
literal|false
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
specifier|private
name|void
name|loadMajors
parameter_list|(
specifier|final
name|boolean
name|showEmptyCourses
parameter_list|)
block|{
if|if
condition|(
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|>
literal|0
condition|)
block|{
name|showLoading
argument_list|(
literal|"Loading majors ..."
argument_list|)
expr_stmt|;
name|iService
operator|.
name|loadMajors
argument_list|(
name|iCurriculum
operator|.
name|getId
argument_list|()
argument_list|,
name|Long
operator|.
name|valueOf
argument_list|(
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|TreeSet
argument_list|<
name|MajorInterface
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|hideLoading
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|TreeSet
argument_list|<
name|MajorInterface
argument_list|>
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|==
literal|null
condition|)
block|{
name|iAreaHasNoMajors
operator|=
literal|true
expr_stmt|;
name|result
operator|=
operator|new
name|TreeSet
argument_list|<
name|MajorInterface
argument_list|>
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|iAreaHasNoMajors
operator|=
literal|false
expr_stmt|;
block|}
name|String
name|defaultAbbv
init|=
literal|""
decl_stmt|,
name|defaultName
init|=
literal|""
decl_stmt|;
name|AcademicAreaInterface
name|area
init|=
literal|null
decl_stmt|;
try|try
block|{
if|if
condition|(
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|>
literal|0
condition|)
block|{
name|area
operator|=
name|iAreas
operator|.
name|get
argument_list|(
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|defaultAbbv
operator|=
name|area
operator|.
name|getAbbv
argument_list|()
expr_stmt|;
name|defaultName
operator|=
name|area
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
name|iMajors
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iMajors
operator|.
name|addAll
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
name|boolean
name|allSelected
init|=
literal|true
decl_stmt|;
name|CurriculumCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|getCurriculaDisplayMode
argument_list|()
expr_stmt|;
for|for
control|(
name|MajorInterface
name|m
range|:
name|result
control|)
block|{
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|m
operator|.
name|getCode
argument_list|()
operator|+
literal|" - "
operator|+
name|m
operator|.
name|getName
argument_list|()
argument_list|,
name|m
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iCurriculum
operator|!=
literal|null
operator|&&
name|iCurriculum
operator|.
name|hasMajors
argument_list|()
condition|)
block|{
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|setItemSelected
argument_list|(
name|idx
argument_list|,
name|iCurriculum
operator|.
name|getMajors
argument_list|()
operator|.
name|contains
argument_list|(
name|m
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|iCurriculum
operator|.
name|getMajors
argument_list|()
operator|.
name|contains
argument_list|(
name|m
argument_list|)
condition|)
block|{
if|if
condition|(
operator|!
name|defaultAbbv
operator|.
name|contains
argument_list|(
literal|"/"
argument_list|)
condition|)
block|{
name|defaultAbbv
operator|+=
literal|"/"
expr_stmt|;
name|defaultName
operator|+=
literal|" / "
expr_stmt|;
block|}
else|else
block|{
name|defaultAbbv
operator|+=
literal|","
expr_stmt|;
name|defaultName
operator|+=
literal|", "
expr_stmt|;
block|}
name|defaultAbbv
operator|+=
name|m
operator|.
name|getCode
argument_list|()
expr_stmt|;
name|defaultName
operator|+=
name|m
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|allSelected
operator|=
literal|false
expr_stmt|;
block|}
block|}
name|idx
operator|++
expr_stmt|;
block|}
if|if
condition|(
name|defaultName
operator|.
name|length
argument_list|()
operator|>
literal|60
condition|)
name|defaultName
operator|=
name|defaultName
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|60
argument_list|)
expr_stmt|;
if|if
condition|(
name|defaultAbbv
operator|.
name|length
argument_list|()
operator|>
literal|20
condition|)
name|defaultAbbv
operator|=
name|defaultAbbv
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|iDefaultAbbv
operator|=
name|defaultAbbv
operator|.
name|equals
argument_list|(
name|iCurriculumAbbv
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|iDefaultName
operator|=
name|defaultName
operator|.
name|equalsIgnoreCase
argument_list|(
name|iCurriculumName
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|iDefaultAbbv
operator|&&
name|allSelected
operator|&&
name|area
operator|!=
literal|null
operator|&&
name|area
operator|.
name|getAbbv
argument_list|()
operator|.
name|equals
argument_list|(
name|iCurriculumAbbv
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
condition|)
name|iDefaultAbbv
operator|=
literal|true
expr_stmt|;
if|if
condition|(
operator|!
name|iDefaultName
operator|&&
name|allSelected
operator|&&
name|area
operator|!=
literal|null
operator|&&
name|area
operator|.
name|getName
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|iCurriculumName
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
condition|)
name|iDefaultName
operator|=
literal|true
expr_stmt|;
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|setVisibleItemCount
argument_list|(
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|<=
literal|3
condition|?
literal|3
else|:
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|>
literal|10
condition|?
literal|10
else|:
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
argument_list|)
expr_stmt|;
name|loadEnrollments
argument_list|(
name|showEmptyCourses
argument_list|)
expr_stmt|;
name|hideLoading
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|loadEnrollments
parameter_list|(
specifier|final
name|boolean
name|showEmptyCourses
parameter_list|)
block|{
if|if
condition|(
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|>=
literal|0
condition|)
block|{
specifier|final
name|Long
name|areaId
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|List
argument_list|<
name|Long
argument_list|>
name|majorIds
init|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
name|majorIds
operator|.
name|add
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|majorIds
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|majorIds
operator|.
name|add
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iCurriculumMajors
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|majorIds
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
name|iAreaHasNoMajors
condition|)
return|return;
name|showLoading
argument_list|(
literal|"Loading course enrollments ..."
argument_list|)
expr_stmt|;
name|iService
operator|.
name|computeEnrollmentsAndLastLikes
argument_list|(
name|areaId
argument_list|,
name|majorIds
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|HashMap
argument_list|<
name|String
argument_list|,
name|CurriculumStudentsInterface
index|[]
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|hideLoading
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|HashMap
argument_list|<
name|String
argument_list|,
name|CurriculumStudentsInterface
index|[]
argument_list|>
name|result
parameter_list|)
block|{
name|CurriculumStudentsInterface
index|[]
name|x
init|=
name|result
operator|.
name|get
argument_list|(
literal|""
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|col
init|=
literal|0
init|;
name|col
operator|<
name|iClassifications
operator|.
name|size
argument_list|()
condition|;
name|col
operator|++
control|)
block|{
name|iCurriculumClasfTable
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnrollment
argument_list|(
name|col
argument_list|,
name|x
operator|==
literal|null
operator|||
name|x
index|[
name|col
index|]
operator|==
literal|null
condition|?
literal|null
else|:
name|x
index|[
name|col
index|]
operator|.
name|getEnrollment
argument_list|()
argument_list|)
expr_stmt|;
name|iCurriculumClasfTable
operator|.
name|getWidget
argument_list|()
operator|.
name|setLastLike
argument_list|(
name|col
argument_list|,
name|x
operator|==
literal|null
operator|||
name|x
index|[
name|col
index|]
operator|==
literal|null
condition|?
literal|null
else|:
name|x
index|[
name|col
index|]
operator|.
name|getLastLike
argument_list|()
argument_list|)
expr_stmt|;
name|iCurriculumClasfTable
operator|.
name|getWidget
argument_list|()
operator|.
name|setProjection
argument_list|(
name|col
argument_list|,
name|x
operator|==
literal|null
operator|||
name|x
index|[
name|col
index|]
operator|==
literal|null
condition|?
literal|null
else|:
name|x
index|[
name|col
index|]
operator|.
name|getProjection
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iCurriculumCourses
operator|.
name|updateEnrollmentsAndLastLike
argument_list|(
name|result
argument_list|,
name|showEmptyCourses
argument_list|)
expr_stmt|;
if|if
condition|(
name|iCurriculumClasfTable
operator|.
name|isShowingAllColumns
argument_list|()
condition|)
name|iCurriculumClasfTable
operator|.
name|getWidget
argument_list|()
operator|.
name|showAllColumns
argument_list|()
expr_stmt|;
else|else
name|iCurriculumClasfTable
operator|.
name|getWidget
argument_list|()
operator|.
name|hideEmptyColumns
argument_list|()
expr_stmt|;
name|hideLoading
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|showLoading
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|hideLoading
parameter_list|()
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|EditFinishedEvent
block|{ 		 	}
specifier|public
specifier|static
interface|interface
name|EditFinishedHandler
block|{
specifier|public
name|void
name|onBack
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
function_decl|;
specifier|public
name|void
name|onDelete
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
function_decl|;
specifier|public
name|void
name|onSave
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
function_decl|;
block|}
specifier|public
name|void
name|addEditFinishedHandler
parameter_list|(
name|EditFinishedHandler
name|h
parameter_list|)
block|{
name|iEditFinishedHandlers
operator|.
name|add
argument_list|(
name|h
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addNew
parameter_list|()
block|{
name|iSaved
operator|=
literal|false
expr_stmt|;
name|iCurriculum
operator|=
operator|new
name|CurriculumInterface
argument_list|()
expr_stmt|;
name|iCurriculum
operator|.
name|setEditable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|iDepts
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
block|{
name|DepartmentInterface
name|d
init|=
name|iDepts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|iCurriculumDept
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|setDepartment
argument_list|(
name|d
argument_list|)
expr_stmt|;
block|}
name|loadCurriculum
argument_list|(
name|Mode
operator|.
name|ADD
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|edit
parameter_list|(
name|CurriculumInterface
name|curriculum
parameter_list|,
name|boolean
name|detailsEditable
parameter_list|)
block|{
name|iSaved
operator|=
literal|false
expr_stmt|;
name|iCurriculum
operator|=
name|curriculum
expr_stmt|;
name|loadCurriculum
argument_list|(
name|detailsEditable
condition|?
name|Mode
operator|.
name|DETAILS
else|:
name|Mode
operator|.
name|DIALOG
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setupAreas
parameter_list|(
name|TreeSet
argument_list|<
name|AcademicAreaInterface
argument_list|>
name|result
parameter_list|)
block|{
name|iAreas
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iAreas
operator|.
name|addAll
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"Select ..."
argument_list|,
literal|""
argument_list|)
expr_stmt|;
for|for
control|(
name|AcademicAreaInterface
name|area
range|:
name|result
control|)
block|{
name|iCurriculumArea
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|area
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" - "
operator|+
name|area
operator|.
name|getName
argument_list|()
argument_list|,
name|area
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setupDepartments
parameter_list|(
name|TreeSet
argument_list|<
name|DepartmentInterface
argument_list|>
name|result
parameter_list|)
block|{
name|iDepts
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iDepts
operator|.
name|addAll
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|iCurriculumDept
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iCurriculumDept
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"Select ..."
argument_list|,
literal|""
argument_list|)
expr_stmt|;
for|for
control|(
name|DepartmentInterface
name|dept
range|:
name|result
control|)
block|{
name|iCurriculumDept
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|dept
operator|.
name|getLabel
argument_list|()
argument_list|,
name|dept
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setupClassifications
parameter_list|(
name|TreeSet
argument_list|<
name|AcademicClassificationInterface
argument_list|>
name|result
parameter_list|)
block|{
name|iClassifications
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iClassifications
operator|.
name|addAll
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|iCurriculumClasfTable
operator|.
name|getWidget
argument_list|()
operator|.
name|setup
argument_list|(
name|iClassifications
argument_list|)
expr_stmt|;
name|iCurriculumCourses
operator|.
name|link
argument_list|(
name|iCurriculumClasfTable
operator|.
name|getWidget
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|showOnlyCourses
parameter_list|(
name|TreeSet
argument_list|<
name|CourseInterface
argument_list|>
name|courses
parameter_list|)
block|{
name|iCurriculumCourses
operator|.
name|showOnlyCourses
argument_list|(
name|courses
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
class|class
name|CurriculaClassificationsPanel
extends|extends
name|UniTimeWidget
argument_list|<
name|CurriculaClassifications
argument_list|>
block|{
specifier|private
name|Label
name|iHint
decl_stmt|;
specifier|public
name|CurriculaClassificationsPanel
parameter_list|(
name|CurriculaClassifications
name|classifications
parameter_list|)
block|{
name|super
argument_list|(
name|classifications
argument_list|)
expr_stmt|;
name|iHint
operator|=
operator|new
name|Label
argument_list|()
expr_stmt|;
name|iHint
operator|.
name|setStyleName
argument_list|(
literal|"unitime-Hint"
argument_list|)
expr_stmt|;
name|iHint
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iHint
operator|.
name|addStyleName
argument_list|(
literal|"unitime-NoPrint"
argument_list|)
expr_stmt|;
name|getPanel
argument_list|()
operator|.
name|insert
argument_list|(
name|iHint
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iHint
operator|.
name|setText
argument_list|(
literal|"Show all columns."
argument_list|)
expr_stmt|;
name|iHint
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|isShowingAllColumns
argument_list|()
condition|)
block|{
name|getWidget
argument_list|()
operator|.
name|hideEmptyColumns
argument_list|()
expr_stmt|;
name|iHint
operator|.
name|setText
argument_list|(
literal|"Show all columns."
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|getWidget
argument_list|()
operator|.
name|showAllColumns
argument_list|()
expr_stmt|;
name|iHint
operator|.
name|setText
argument_list|(
literal|"Hide empty columns."
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|getWidget
argument_list|()
operator|.
name|addExpectedChangedHandler
argument_list|(
operator|new
name|CurriculaClassifications
operator|.
name|ExpectedChangedHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|expectedChanged
parameter_list|(
name|ExpectedChangedEvent
name|e
parameter_list|)
block|{
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|getWidget
argument_list|()
operator|.
name|addNameChangedHandler
argument_list|(
operator|new
name|CurriculaClassifications
operator|.
name|NameChangedHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|nameChanged
parameter_list|(
name|NameChangedEvent
name|e
parameter_list|)
block|{
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isShowingAllColumns
parameter_list|()
block|{
return|return
name|iHint
operator|.
name|getText
argument_list|()
operator|.
name|equals
argument_list|(
literal|"Hide empty columns."
argument_list|)
return|;
block|}
specifier|public
name|void
name|populate
parameter_list|(
name|TreeSet
argument_list|<
name|CurriculumClassificationInterface
argument_list|>
name|classifications
parameter_list|)
block|{
name|getWidget
argument_list|()
operator|.
name|populate
argument_list|(
name|classifications
argument_list|)
expr_stmt|;
if|if
condition|(
name|isShowingAllColumns
argument_list|()
condition|)
name|getWidget
argument_list|()
operator|.
name|showAllColumns
argument_list|()
expr_stmt|;
else|else
name|getWidget
argument_list|()
operator|.
name|hideEmptyColumns
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setReadOnly
parameter_list|(
name|boolean
name|readOnly
parameter_list|)
block|{
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
operator|!
name|readOnly
argument_list|)
expr_stmt|;
name|iHint
operator|.
name|setVisible
argument_list|(
operator|!
name|readOnly
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|reload
parameter_list|(
specifier|final
name|Mode
name|mode
parameter_list|)
block|{
name|showLoading
argument_list|(
literal|"Loading curriculum "
operator|+
name|iCurriculum
operator|.
name|getName
argument_list|()
operator|+
literal|" ..."
argument_list|)
expr_stmt|;
name|iService
operator|.
name|loadCurriculum
argument_list|(
name|iCurriculum
operator|.
name|getId
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|CurriculumInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|hideLoading
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|CurriculumInterface
name|result
parameter_list|)
block|{
name|iCurriculum
operator|=
name|result
expr_stmt|;
name|loadCurriculum
argument_list|(
name|mode
argument_list|)
expr_stmt|;
name|hideLoading
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
interface|interface
name|NavigationProvider
block|{
specifier|public
name|CurriculumInterface
name|previous
parameter_list|(
name|CurriculumInterface
name|curriculum
parameter_list|)
function_decl|;
specifier|public
name|CurriculumInterface
name|next
parameter_list|(
name|CurriculumInterface
name|curriculum
parameter_list|)
function_decl|;
specifier|public
name|void
name|onChange
parameter_list|(
name|CurriculumInterface
name|curriculum
parameter_list|)
function_decl|;
block|}
specifier|public
name|CurriculumInterface
name|getCurriculum
parameter_list|()
block|{
return|return
name|iCurriculum
return|;
block|}
block|}
end_class

end_unit

