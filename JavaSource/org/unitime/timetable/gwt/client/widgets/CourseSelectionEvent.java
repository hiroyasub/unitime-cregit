begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|GwtEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HasHandlers
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|CourseSelectionEvent
extends|extends
name|GwtEvent
argument_list|<
name|CourseSelectionHandler
argument_list|>
block|{
specifier|static
name|Type
argument_list|<
name|CourseSelectionHandler
argument_list|>
name|TYPE
init|=
operator|new
name|Type
argument_list|<
name|CourseSelectionHandler
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|String
name|iCourse
decl_stmt|;
specifier|private
name|boolean
name|iValid
decl_stmt|;
specifier|public
name|CourseSelectionEvent
parameter_list|(
name|String
name|course
parameter_list|,
name|boolean
name|valid
parameter_list|)
block|{
name|iCourse
operator|=
name|course
expr_stmt|;
name|iValid
operator|=
name|valid
expr_stmt|;
block|}
specifier|public
name|boolean
name|isValid
parameter_list|()
block|{
return|return
name|iValid
return|;
block|}
specifier|public
name|String
name|getCourse
parameter_list|()
block|{
return|return
name|iCourse
return|;
block|}
annotation|@
name|Override
specifier|public
name|Type
argument_list|<
name|CourseSelectionHandler
argument_list|>
name|getAssociatedType
parameter_list|()
block|{
return|return
name|TYPE
return|;
block|}
specifier|public
specifier|static
name|Type
argument_list|<
name|CourseSelectionHandler
argument_list|>
name|getType
parameter_list|()
block|{
return|return
name|TYPE
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|dispatch
parameter_list|(
name|CourseSelectionHandler
name|handler
parameter_list|)
block|{
name|handler
operator|.
name|onCourseSelection
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|fire
parameter_list|(
name|HasHandlers
name|source
parameter_list|,
name|String
name|course
parameter_list|,
name|boolean
name|valid
parameter_list|)
block|{
name|source
operator|.
name|fireEvent
argument_list|(
operator|new
name|CourseSelectionEvent
argument_list|(
name|course
argument_list|,
name|valid
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

