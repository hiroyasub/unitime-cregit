begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaSuggestBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|ImageButton
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtAriaMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|FreeTime
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|aria
operator|.
name|client
operator|.
name|Roles
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|RunAsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
operator|.
name|ScheduledCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|BlurEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|BlurHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|FocusEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|FocusHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyCodes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyDownEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyDownHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|CloseEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|CloseHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|HasCloseHandlers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HorizontalPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|PopupPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestOracle
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|VerticalPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestOracle
operator|.
name|Callback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestOracle
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestOracle
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestOracle
operator|.
name|Suggestion
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|CourseSelectionSuggestBox
extends|extends
name|Composite
implements|implements
name|CourseSelection
block|{
specifier|protected
specifier|static
specifier|final
name|StudentSectioningResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|StudentSectioningMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|StudentSectioningConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|GwtAriaMessages
name|ARIA
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtAriaMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
name|AriaSuggestBox
name|iSuggest
decl_stmt|;
specifier|private
name|String
name|iLastSuggestion
decl_stmt|;
specifier|protected
name|ImageButton
name|iFinderButton
decl_stmt|;
specifier|private
name|HorizontalPanel
name|iHPanel
decl_stmt|;
specifier|private
name|VerticalPanel
name|iVPanel
decl_stmt|;
specifier|private
name|Label
name|iError
decl_stmt|;
specifier|private
name|String
name|iHint
init|=
literal|""
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|iValidCourseNames
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|DataProvider
argument_list|<
name|String
argument_list|,
name|Collection
argument_list|<
name|CourseAssignment
argument_list|>
argument_list|>
name|iDataProvider
decl_stmt|;
specifier|private
name|FreeTimeParser
name|iFreeTimeParser
init|=
literal|null
decl_stmt|;
specifier|private
name|CourseFinder
name|iCourseFinder
init|=
literal|null
decl_stmt|;
specifier|private
name|CourseFinderFactory
name|iCourseFinderFactory
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Validator
argument_list|<
name|CourseSelection
argument_list|>
argument_list|>
name|iValidators
init|=
operator|new
name|ArrayList
argument_list|<
name|Validator
argument_list|<
name|CourseSelection
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|boolean
name|iShowCourses
init|=
literal|false
decl_stmt|,
name|iShowDefaultSuggestions
init|=
literal|false
decl_stmt|;
specifier|public
name|CourseSelectionSuggestBox
parameter_list|()
block|{
name|this
argument_list|(
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|CourseSelectionSuggestBox
parameter_list|(
name|boolean
name|showCourses
parameter_list|,
name|boolean
name|showDefaultSuggestions
parameter_list|)
block|{
name|iShowCourses
operator|=
name|showCourses
expr_stmt|;
name|iShowDefaultSuggestions
operator|=
name|showDefaultSuggestions
expr_stmt|;
name|SuggestOracle
name|courseOfferingOracle
init|=
operator|new
name|SuggestOracle
argument_list|()
block|{
specifier|public
name|void
name|requestSuggestions
parameter_list|(
name|Request
name|request
parameter_list|,
name|Callback
name|callback
parameter_list|)
block|{
if|if
condition|(
name|request
operator|.
name|getQuery
argument_list|()
operator|.
name|equals
argument_list|(
name|iHint
argument_list|)
condition|)
return|return;
name|iDataProvider
operator|.
name|getData
argument_list|(
name|request
operator|.
name|getQuery
argument_list|()
argument_list|,
operator|new
name|SuggestCallback
argument_list|(
name|request
argument_list|,
name|callback
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|requestDefaultSuggestions
parameter_list|(
name|Request
name|request
parameter_list|,
name|Callback
name|callback
parameter_list|)
block|{
if|if
condition|(
name|iShowDefaultSuggestions
condition|)
name|iDataProvider
operator|.
name|getData
argument_list|(
literal|""
argument_list|,
operator|new
name|SuggestCallback
argument_list|(
name|request
argument_list|,
name|callback
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|super
operator|.
name|requestDefaultSuggestions
argument_list|(
name|request
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isDisplayStringHTML
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
block|}
decl_stmt|;
name|iSuggest
operator|=
operator|new
name|AriaSuggestBox
argument_list|(
name|courseOfferingOracle
argument_list|)
expr_stmt|;
name|iSuggest
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBoxHint"
argument_list|)
expr_stmt|;
name|iFinderButton
operator|=
operator|new
name|ImageButton
argument_list|(
name|RESOURCES
operator|.
name|search_picker
argument_list|()
argument_list|,
name|RESOURCES
operator|.
name|search_picker_Down
argument_list|()
argument_list|,
name|RESOURCES
operator|.
name|search_picker_Over
argument_list|()
argument_list|,
name|RESOURCES
operator|.
name|search_picker_Disabled
argument_list|()
argument_list|)
expr_stmt|;
name|iFinderButton
operator|.
name|setTabIndex
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|iVPanel
operator|=
operator|new
name|VerticalPanel
argument_list|()
expr_stmt|;
name|iHPanel
operator|=
operator|new
name|HorizontalPanel
argument_list|()
expr_stmt|;
name|iHPanel
operator|.
name|add
argument_list|(
name|iSuggest
argument_list|)
expr_stmt|;
name|iHPanel
operator|.
name|add
argument_list|(
name|iFinderButton
argument_list|)
expr_stmt|;
name|iVPanel
operator|.
name|add
argument_list|(
name|iHPanel
argument_list|)
expr_stmt|;
name|iError
operator|=
operator|new
name|Label
argument_list|()
expr_stmt|;
name|iError
operator|.
name|setStyleName
argument_list|(
literal|"unitime-ErrorHint"
argument_list|)
expr_stmt|;
name|iError
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Roles
operator|.
name|getPresentationRole
argument_list|()
operator|.
name|setAriaHiddenState
argument_list|(
name|iError
operator|.
name|getElement
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iVPanel
operator|.
name|add
argument_list|(
name|iError
argument_list|)
expr_stmt|;
name|iFinderButton
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iSuggest
operator|.
name|isEnabled
argument_list|()
condition|)
block|{
name|openDialogAsync
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iSuggest
operator|.
name|addSelectionHandler
argument_list|(
operator|new
name|SelectionHandler
argument_list|<
name|Suggestion
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSelection
parameter_list|(
name|SelectionEvent
argument_list|<
name|Suggestion
argument_list|>
name|event
parameter_list|)
block|{
name|String
name|text
init|=
name|event
operator|.
name|getSelectedItem
argument_list|()
operator|.
name|getReplacementString
argument_list|()
decl_stmt|;
name|iLastSuggestion
operator|=
name|text
expr_stmt|;
name|CourseSelectionEvent
operator|.
name|fire
argument_list|(
name|CourseSelectionSuggestBox
operator|.
name|this
argument_list|,
name|text
argument_list|,
operator|!
name|text
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iSuggest
operator|.
name|getValueBox
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|boolean
name|valid
init|=
literal|false
decl_stmt|;
name|String
name|text
init|=
name|iSuggest
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
name|text
operator|.
name|equalsIgnoreCase
argument_list|(
name|iLastSuggestion
argument_list|)
condition|)
name|valid
operator|=
literal|true
expr_stmt|;
else|else
for|for
control|(
name|String
name|course
range|:
name|iValidCourseNames
control|)
block|{
if|if
condition|(
name|course
operator|.
name|equalsIgnoreCase
argument_list|(
name|text
argument_list|)
condition|)
block|{
name|valid
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
name|CourseSelectionEvent
operator|.
name|fire
argument_list|(
name|CourseSelectionSuggestBox
operator|.
name|this
argument_list|,
name|text
argument_list|,
name|valid
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iSuggest
operator|.
name|getValueBox
argument_list|()
operator|.
name|addKeyDownHandler
argument_list|(
operator|new
name|KeyDownHandler
argument_list|()
block|{
specifier|public
name|void
name|onKeyDown
parameter_list|(
name|KeyDownEvent
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|iSuggest
operator|.
name|isEnabled
argument_list|()
condition|)
return|return;
if|if
condition|(
operator|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
literal|'F'
operator|||
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
literal|'f'
operator|)
operator|&&
operator|(
name|event
operator|.
name|isControlKeyDown
argument_list|()
operator|||
name|event
operator|.
name|isAltKeyDown
argument_list|()
operator|)
condition|)
block|{
name|iSuggest
operator|.
name|hideSuggestionList
argument_list|()
expr_stmt|;
name|openDialogAsync
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_ESCAPE
condition|)
block|{
name|iSuggest
operator|.
name|hideSuggestionList
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
literal|'L'
operator|||
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
literal|'l'
operator|)
operator|&&
operator|(
name|event
operator|.
name|isControlKeyDown
argument_list|()
operator|||
name|event
operator|.
name|isAltKeyDown
argument_list|()
operator|)
condition|)
block|{
name|iSuggest
operator|.
name|showSuggestionList
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iSuggest
operator|.
name|getValueBox
argument_list|()
operator|.
name|addBlurHandler
argument_list|(
operator|new
name|BlurHandler
argument_list|()
block|{
specifier|public
name|void
name|onBlur
parameter_list|(
name|BlurEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iSuggest
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|iError
operator|.
name|isVisible
argument_list|()
condition|)
name|iError
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|iHint
operator|!=
literal|null
condition|)
name|iSuggest
operator|.
name|setText
argument_list|(
name|iHint
argument_list|)
expr_stmt|;
name|iSuggest
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBoxHint"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iSuggest
operator|.
name|getValueBox
argument_list|()
operator|.
name|addFocusHandler
argument_list|(
operator|new
name|FocusHandler
argument_list|()
block|{
specifier|public
name|void
name|onFocus
parameter_list|(
name|FocusEvent
name|event
parameter_list|)
block|{
name|iSuggest
operator|.
name|setStyleName
argument_list|(
literal|"gwt-SuggestBox"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iSuggest
operator|.
name|getText
argument_list|()
operator|.
name|equals
argument_list|(
name|iHint
argument_list|)
condition|)
name|iSuggest
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|iError
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setText
argument_list|(
name|iError
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|initWidget
argument_list|(
name|iVPanel
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getValue
parameter_list|()
block|{
return|return
operator|(
name|iSuggest
operator|.
name|getText
argument_list|()
operator|.
name|equals
argument_list|(
name|iHint
argument_list|)
condition|?
literal|""
else|:
name|iSuggest
operator|.
name|getText
argument_list|()
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|setValue
argument_list|(
name|value
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|openDialogAsync
parameter_list|()
block|{
name|GWT
operator|.
name|runAsync
argument_list|(
operator|new
name|RunAsyncCallback
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|()
block|{
name|openDialog
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|reason
parameter_list|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedToLoadTheApp
argument_list|(
name|reason
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|openDialog
parameter_list|()
block|{
name|getCourseFinder
argument_list|()
operator|.
name|setValue
argument_list|(
name|iSuggest
operator|.
name|getText
argument_list|()
operator|.
name|equals
argument_list|(
name|iHint
argument_list|)
condition|?
literal|""
else|:
name|iSuggest
operator|.
name|getText
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|getCourseFinder
argument_list|()
operator|.
name|findCourse
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|String
name|value
parameter_list|,
name|boolean
name|fireEvents
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
operator|||
name|value
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iSuggest
operator|.
name|setText
argument_list|(
name|iHint
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|iHint
operator|.
name|isEmpty
argument_list|()
condition|)
name|iSuggest
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBoxHint"
argument_list|)
expr_stmt|;
name|setError
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iSuggest
operator|.
name|setText
argument_list|(
name|value
argument_list|)
expr_stmt|;
if|if
condition|(
name|iSuggest
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|iHint
operator|!=
literal|null
condition|)
name|iSuggest
operator|.
name|setText
argument_list|(
name|iHint
argument_list|)
expr_stmt|;
name|iSuggest
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBoxHint"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iSuggest
operator|.
name|setStyleName
argument_list|(
literal|"gwt-SuggestBox"
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|fireEvents
condition|)
name|CourseSelectionEvent
operator|.
name|fire
argument_list|(
name|CourseSelectionSuggestBox
operator|.
name|this
argument_list|,
name|value
argument_list|,
name|value
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addValueChangeHandler
parameter_list|(
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|ValueChangeEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setHint
parameter_list|(
name|String
name|hint
parameter_list|)
block|{
if|if
condition|(
name|iSuggest
operator|.
name|getText
argument_list|()
operator|.
name|equals
argument_list|(
name|iHint
argument_list|)
condition|)
block|{
name|iSuggest
operator|.
name|setText
argument_list|(
name|hint
argument_list|)
expr_stmt|;
name|iSuggest
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBoxHint"
argument_list|)
expr_stmt|;
block|}
name|iHint
operator|=
name|hint
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getHint
parameter_list|()
block|{
return|return
name|iHint
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isEnabled
parameter_list|()
block|{
return|return
name|iSuggest
operator|.
name|isEnabled
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setEnabled
parameter_list|(
name|boolean
name|enabled
parameter_list|)
block|{
if|if
condition|(
name|enabled
condition|)
block|{
name|iSuggest
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iFinderButton
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iFinderButton
operator|.
name|setTabIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iSuggest
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iFinderButton
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iFinderButton
operator|.
name|setTabIndex
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setSuggestions
parameter_list|(
name|DataProvider
argument_list|<
name|String
argument_list|,
name|Collection
argument_list|<
name|CourseAssignment
argument_list|>
argument_list|>
name|provider
parameter_list|)
block|{
name|iDataProvider
operator|=
name|provider
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setFreeTimes
parameter_list|(
name|FreeTimeParser
name|parser
parameter_list|)
block|{
name|iFreeTimeParser
operator|=
name|parser
expr_stmt|;
name|iFreeTimeParser
operator|.
name|setValidCourseNames
argument_list|(
name|iValidCourseNames
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|FreeTimeParser
name|getFreeTimes
parameter_list|()
block|{
return|return
name|iFreeTimeParser
return|;
block|}
specifier|public
name|boolean
name|isAllowFreeTime
parameter_list|()
block|{
return|return
name|iFreeTimeParser
operator|!=
literal|null
return|;
block|}
specifier|public
class|class
name|SuggestCallback
implements|implements
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
argument_list|>
argument_list|>
block|{
specifier|private
name|Request
name|iRequest
decl_stmt|;
specifier|private
name|Callback
name|iCallback
decl_stmt|;
specifier|public
name|SuggestCallback
parameter_list|(
name|Request
name|request
parameter_list|,
name|Callback
name|callback
parameter_list|)
block|{
name|iRequest
operator|=
name|request
expr_stmt|;
name|iCallback
operator|=
name|callback
expr_stmt|;
block|}
specifier|public
name|void
name|onFailure
parameter_list|(
specifier|final
name|Throwable
name|caught
parameter_list|)
block|{
name|iValidCourseNames
operator|.
name|clear
argument_list|()
expr_stmt|;
specifier|final
name|ArrayList
argument_list|<
name|Suggestion
argument_list|>
name|suggestions
init|=
operator|new
name|ArrayList
argument_list|<
name|Suggestion
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|iFreeTimeParser
operator|!=
literal|null
condition|)
block|{
name|iFreeTimeParser
operator|.
name|getData
argument_list|(
name|iRequest
operator|.
name|getQuery
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|FreeTime
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
if|if
condition|(
name|iRequest
operator|.
name|getQuery
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|CONSTANTS
operator|.
name|freePrefix
argument_list|()
operator|.
name|toLowerCase
argument_list|()
argument_list|)
condition|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|SimpleSuggestion
argument_list|(
literal|"<font color='red'>"
operator|+
name|e
operator|.
name|getMessage
argument_list|()
operator|+
literal|"</font>"
argument_list|,
literal|""
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// setStatus(e.getMessage());
block|}
else|else
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|SimpleSuggestion
argument_list|(
literal|"<font color='red'>"
operator|+
name|caught
operator|.
name|getMessage
argument_list|()
operator|+
literal|"</font>"
argument_list|,
literal|""
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// setStatus(caught.getMessage());
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|List
argument_list|<
name|FreeTime
argument_list|>
name|freeTimes
parameter_list|)
block|{
name|String
name|status
init|=
literal|""
decl_stmt|;
for|for
control|(
name|CourseRequestInterface
operator|.
name|FreeTime
name|ft
range|:
name|freeTimes
control|)
block|{
name|status
operator|+=
name|ft
operator|.
name|toAriaString
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
operator|+
literal|" "
expr_stmt|;
block|}
name|String
name|ft
init|=
name|iFreeTimeParser
operator|.
name|freeTimesToString
argument_list|(
name|freeTimes
argument_list|)
decl_stmt|;
name|Suggestion
name|suggestion
init|=
operator|new
name|SimpleSuggestion
argument_list|(
name|ft
argument_list|,
name|ft
argument_list|,
name|ARIA
operator|.
name|courseFinderSelectedFreeTime
argument_list|(
name|status
argument_list|)
argument_list|)
decl_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
name|suggestion
argument_list|)
expr_stmt|;
comment|// setStatus(status + " matches the entered text. Press enter to select it.");
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|SimpleSuggestion
argument_list|(
literal|"<font color='red'>"
operator|+
name|caught
operator|.
name|getMessage
argument_list|()
operator|+
literal|"</font>"
argument_list|,
literal|""
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// setStatus(caught.getMessage());
block|}
name|iCallback
operator|.
name|onSuggestionsReady
argument_list|(
name|iRequest
argument_list|,
operator|new
name|Response
argument_list|(
name|suggestions
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Collection
argument_list|<
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
argument_list|>
name|result
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|Suggestion
argument_list|>
name|suggestions
init|=
operator|new
name|ArrayList
argument_list|<
name|Suggestion
argument_list|>
argument_list|()
decl_stmt|;
name|iValidCourseNames
operator|.
name|clear
argument_list|()
expr_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|suggestion
range|:
name|result
control|)
block|{
name|String
name|courseName
init|=
name|MESSAGES
operator|.
name|courseName
argument_list|(
name|suggestion
operator|.
name|getSubject
argument_list|()
argument_list|,
name|suggestion
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|courseNameWithTitle
init|=
operator|(
name|suggestion
operator|.
name|getTitle
argument_list|()
operator|==
literal|null
condition|?
name|courseName
else|:
name|MESSAGES
operator|.
name|courseNameWithTitle
argument_list|(
name|suggestion
operator|.
name|getSubject
argument_list|()
argument_list|,
name|suggestion
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|suggestion
operator|.
name|getTitle
argument_list|()
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|suggestion
operator|.
name|hasUniqueName
argument_list|()
operator|&&
operator|!
name|iShowCourses
condition|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|SimpleSuggestion
argument_list|(
name|courseNameWithTitle
argument_list|,
name|courseName
argument_list|,
name|suggestion
operator|.
name|getTitle
argument_list|()
operator|==
literal|null
condition|?
name|courseName
else|:
name|courseName
operator|+
literal|" "
operator|+
name|suggestion
operator|.
name|getTitle
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iValidCourseNames
operator|.
name|add
argument_list|(
name|courseName
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|SimpleSuggestion
argument_list|(
name|courseNameWithTitle
argument_list|,
name|courseNameWithTitle
argument_list|,
name|suggestion
operator|.
name|getTitle
argument_list|()
operator|==
literal|null
condition|?
name|courseName
else|:
name|courseName
operator|+
literal|" "
operator|+
name|suggestion
operator|.
name|getTitle
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iValidCourseNames
operator|.
name|add
argument_list|(
name|courseNameWithTitle
argument_list|)
expr_stmt|;
block|}
block|}
name|iCallback
operator|.
name|onSuggestionsReady
argument_list|(
name|iRequest
argument_list|,
operator|new
name|Response
argument_list|(
name|suggestions
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|SimpleSuggestion
implements|implements
name|Suggestion
implements|,
name|AriaSuggestBox
operator|.
name|HasStatus
block|{
specifier|private
name|String
name|iDisplay
decl_stmt|,
name|iReplace
decl_stmt|,
name|iStatus
decl_stmt|;
specifier|public
name|SimpleSuggestion
parameter_list|(
name|String
name|display
parameter_list|,
name|String
name|replace
parameter_list|,
name|String
name|status
parameter_list|)
block|{
name|iDisplay
operator|=
name|display
expr_stmt|;
name|iReplace
operator|=
name|replace
expr_stmt|;
name|iStatus
operator|=
name|status
expr_stmt|;
block|}
specifier|public
name|SimpleSuggestion
parameter_list|(
name|String
name|display
parameter_list|,
name|String
name|replace
parameter_list|)
block|{
name|this
argument_list|(
name|display
argument_list|,
name|replace
argument_list|,
name|display
argument_list|)
expr_stmt|;
block|}
specifier|public
name|SimpleSuggestion
parameter_list|(
name|String
name|replace
parameter_list|)
block|{
name|this
argument_list|(
name|replace
argument_list|,
name|replace
argument_list|,
name|replace
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDisplayString
parameter_list|()
block|{
return|return
name|iDisplay
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getReplacementString
parameter_list|()
block|{
return|return
name|iReplace
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getStatusString
parameter_list|()
block|{
return|return
name|iStatus
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCourseFinderFactory
parameter_list|(
name|CourseFinderFactory
name|factory
parameter_list|)
block|{
name|iCourseFinderFactory
operator|=
name|factory
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|CourseFinder
name|getCourseFinder
parameter_list|()
block|{
if|if
condition|(
name|iCourseFinder
operator|==
literal|null
condition|)
block|{
name|iCourseFinder
operator|=
name|iCourseFinderFactory
operator|.
name|createCourseFinder
argument_list|()
expr_stmt|;
name|iCourseFinder
operator|.
name|addSelectionHandler
argument_list|(
operator|new
name|SelectionHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSelection
parameter_list|(
name|SelectionEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|setValue
argument_list|(
name|event
operator|.
name|getSelectedItem
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|iCourseFinder
operator|instanceof
name|HasCloseHandlers
condition|)
block|{
operator|(
operator|(
name|HasCloseHandlers
operator|)
name|iCourseFinder
operator|)
operator|.
name|addCloseHandler
argument_list|(
operator|new
name|CloseHandler
argument_list|<
name|PopupPanel
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onClose
parameter_list|(
name|CloseEvent
argument_list|<
name|PopupPanel
argument_list|>
name|event
parameter_list|)
block|{
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|iSuggest
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|iCourseFinder
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setLabel
parameter_list|(
name|String
name|title
parameter_list|,
name|String
name|finderTitle
parameter_list|)
block|{
name|iSuggest
operator|.
name|setAriaLabel
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|iFinderButton
operator|.
name|setAltText
argument_list|(
name|finderTitle
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|hideSuggestionList
parameter_list|()
block|{
name|iSuggest
operator|.
name|hideSuggestionList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|showSuggestionList
parameter_list|()
block|{
name|iSuggest
operator|.
name|showSuggestionList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setWidth
parameter_list|(
name|String
name|width
parameter_list|)
block|{
name|iSuggest
operator|.
name|setWidth
argument_list|(
name|width
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setError
parameter_list|(
name|String
name|error
parameter_list|)
block|{
if|if
condition|(
name|error
operator|==
literal|null
operator|||
name|error
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iError
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iError
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iError
operator|.
name|setText
argument_list|(
name|error
argument_list|)
expr_stmt|;
name|iError
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iSuggest
operator|.
name|setStatus
argument_list|(
name|error
argument_list|)
expr_stmt|;
comment|// AriaStatus.getInstance().setText(error);
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|getError
parameter_list|()
block|{
return|return
operator|(
name|iError
operator|.
name|isVisible
argument_list|()
condition|?
name|iError
operator|.
name|getText
argument_list|()
else|:
literal|null
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setAccessKey
parameter_list|(
name|char
name|a
parameter_list|)
block|{
name|iSuggest
operator|.
name|setAccessKey
argument_list|(
name|a
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getTabIndex
parameter_list|()
block|{
return|return
name|iSuggest
operator|.
name|getTabIndex
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setFocus
parameter_list|(
name|boolean
name|focused
parameter_list|)
block|{
name|iSuggest
operator|.
name|setFocus
argument_list|(
name|focused
argument_list|)
expr_stmt|;
if|if
condition|(
name|focused
condition|)
name|iSuggest
operator|.
name|getValueBox
argument_list|()
operator|.
name|selectAll
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setTabIndex
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|iSuggest
operator|.
name|setTabIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addCourseSelectionHandler
parameter_list|(
name|CourseSelectionHandler
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|CourseSelectionEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isFreeTime
parameter_list|()
block|{
if|if
condition|(
name|iFreeTimeParser
operator|==
literal|null
operator|||
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|false
return|;
try|try
block|{
name|iFreeTimeParser
operator|.
name|parseFreeTime
argument_list|(
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|addValidator
parameter_list|(
name|Validator
argument_list|<
name|CourseSelection
argument_list|>
name|validator
parameter_list|)
block|{
name|iValidators
operator|.
name|add
argument_list|(
name|validator
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|validate
parameter_list|()
block|{
if|if
condition|(
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|setError
argument_list|(
literal|null
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
if|if
condition|(
name|iFreeTimeParser
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|iFreeTimeParser
operator|.
name|parseFreeTime
argument_list|(
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|setError
argument_list|(
literal|null
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
if|if
condition|(
name|getValue
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|CONSTANTS
operator|.
name|freePrefix
argument_list|()
operator|.
name|toLowerCase
argument_list|()
argument_list|)
condition|)
block|{
name|setError
argument_list|(
name|MESSAGES
operator|.
name|invalidFreeTime
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|e
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
block|}
for|for
control|(
name|Validator
argument_list|<
name|CourseSelection
argument_list|>
name|validator
range|:
name|iValidators
control|)
block|{
name|String
name|message
init|=
name|validator
operator|.
name|validate
argument_list|(
name|this
argument_list|)
decl_stmt|;
if|if
condition|(
name|message
operator|!=
literal|null
condition|)
block|{
name|setError
argument_list|(
name|message
argument_list|)
expr_stmt|;
return|return
name|message
return|;
block|}
block|}
name|setError
argument_list|(
literal|null
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

