begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Unit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|HasAllMouseHandlers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|HasClickHandlers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseDownEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseDownHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseMoveEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseMoveHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseOutEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseOutHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseOverEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseOverHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseUpEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseUpHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseWheelEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseWheelHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|DOM
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|AbsolutePanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHTML
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|P
extends|extends
name|AbsolutePanel
implements|implements
name|HasAllMouseHandlers
implements|,
name|HasHTML
implements|,
name|HasClickHandlers
block|{
specifier|public
name|P
parameter_list|(
name|Element
name|element
parameter_list|,
name|String
modifier|...
name|styles
parameter_list|)
block|{
name|super
argument_list|(
name|element
argument_list|)
expr_stmt|;
name|addStyleNames
argument_list|(
name|styles
argument_list|)
expr_stmt|;
name|sinkAllMouseEvents
argument_list|()
expr_stmt|;
block|}
specifier|public
name|P
parameter_list|(
name|String
modifier|...
name|styles
parameter_list|)
block|{
name|this
argument_list|(
name|DOM
operator|.
name|createDiv
argument_list|()
argument_list|)
expr_stmt|;
name|addStyleNames
argument_list|(
name|styles
argument_list|)
expr_stmt|;
name|sinkAllMouseEvents
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|sinkAllMouseEvents
parameter_list|()
block|{
name|sinkEvents
argument_list|(
name|Event
operator|.
name|ONMOUSEDOWN
argument_list|)
expr_stmt|;
name|sinkEvents
argument_list|(
name|Event
operator|.
name|ONMOUSEUP
argument_list|)
expr_stmt|;
name|sinkEvents
argument_list|(
name|Event
operator|.
name|ONMOUSEMOVE
argument_list|)
expr_stmt|;
name|sinkEvents
argument_list|(
name|Event
operator|.
name|ONMOUSEOVER
argument_list|)
expr_stmt|;
name|sinkEvents
argument_list|(
name|Event
operator|.
name|ONMOUSEOUT
argument_list|)
expr_stmt|;
name|sinkEvents
argument_list|(
name|Event
operator|.
name|ONMOUSEWHEEL
argument_list|)
expr_stmt|;
name|sinkEvents
argument_list|(
name|Event
operator|.
name|ONCLICK
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addStyleNames
parameter_list|(
name|String
modifier|...
name|styles
parameter_list|)
block|{
for|for
control|(
name|String
name|style
range|:
name|styles
control|)
if|if
condition|(
name|style
operator|!=
literal|null
operator|&&
operator|!
name|style
operator|.
name|isEmpty
argument_list|()
condition|)
name|addStyleName
argument_list|(
name|style
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeStyleNames
parameter_list|(
name|String
modifier|...
name|styles
parameter_list|)
block|{
for|for
control|(
name|String
name|style
range|:
name|styles
control|)
if|if
condition|(
name|style
operator|!=
literal|null
operator|&&
operator|!
name|style
operator|.
name|isEmpty
argument_list|()
condition|)
name|removeStyleName
argument_list|(
name|style
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addMouseDownHandler
parameter_list|(
name|MouseDownHandler
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|MouseDownEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addMouseUpHandler
parameter_list|(
name|MouseUpHandler
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|MouseUpEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addMouseOutHandler
parameter_list|(
name|MouseOutHandler
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|MouseOutEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addMouseOverHandler
parameter_list|(
name|MouseOverHandler
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|MouseOverEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addMouseMoveHandler
parameter_list|(
name|MouseMoveHandler
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|MouseMoveEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addMouseWheelHandler
parameter_list|(
name|MouseWheelHandler
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|MouseWheelEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setText
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|getElement
argument_list|()
operator|.
name|setInnerText
argument_list|(
name|text
operator|==
literal|null
condition|?
literal|""
else|:
name|text
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getText
parameter_list|()
block|{
return|return
name|getElement
argument_list|()
operator|.
name|getInnerText
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getHTML
parameter_list|()
block|{
return|return
name|getElement
argument_list|()
operator|.
name|getInnerHTML
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setHTML
parameter_list|(
name|String
name|html
parameter_list|)
block|{
name|getElement
argument_list|()
operator|.
name|setInnerHTML
argument_list|(
name|html
operator|==
literal|null
condition|?
literal|""
else|:
name|html
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setWidth
parameter_list|(
name|double
name|width
parameter_list|)
block|{
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setWidth
argument_list|(
name|width
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setHeight
parameter_list|(
name|double
name|height
parameter_list|)
block|{
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setHeight
argument_list|(
name|height
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setSize
parameter_list|(
name|double
name|width
parameter_list|,
name|double
name|height
parameter_list|)
block|{
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setWidth
argument_list|(
name|width
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setHeight
argument_list|(
name|height
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addClickHandler
parameter_list|(
name|ClickHandler
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|ClickEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

