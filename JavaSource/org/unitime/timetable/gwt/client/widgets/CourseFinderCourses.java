begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaHiddenLabel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaTabBar
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|CourseFinder
operator|.
name|CourseFinderCourseDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|CourseFinder
operator|.
name|ResponseEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|CourseFinder
operator|.
name|ResponseHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtAriaMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
operator|.
name|IdValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|RequestedCourse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyCodes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyUpEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Cookies
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ScrollPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|CourseFinderCourses
extends|extends
name|P
implements|implements
name|CourseFinder
operator|.
name|CourseFinderTab
argument_list|<
name|Collection
argument_list|<
name|CourseAssignment
argument_list|>
argument_list|>
block|{
specifier|protected
specifier|static
specifier|final
name|StudentSectioningMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|StudentSectioningConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|GwtAriaMessages
name|ARIA
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtAriaMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|DataProvider
argument_list|<
name|String
argument_list|,
name|Collection
argument_list|<
name|CourseAssignment
argument_list|>
argument_list|>
name|iDataProvider
init|=
literal|null
decl_stmt|;
specifier|private
name|UniTimeTable
argument_list|<
name|CourseAssignment
argument_list|>
name|iCourses
decl_stmt|;
specifier|private
name|ScrollPanel
name|iCoursesPanel
decl_stmt|;
specifier|private
name|Label
name|iCoursesTip
decl_stmt|;
specifier|private
name|AriaTabBar
name|iCourseDetailsTabBar
decl_stmt|;
specifier|private
name|ScrollPanel
name|iCourseDetailsPanel
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Character
argument_list|,
name|Integer
argument_list|>
name|iTabAccessKeys
init|=
operator|new
name|HashMap
argument_list|<
name|Character
argument_list|,
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|CourseFinderCourseDetails
index|[]
name|iDetails
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iLastQuery
init|=
literal|null
decl_stmt|;
specifier|private
name|P
name|iInstructionalMethodsPanel
init|=
literal|null
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|CheckBox
argument_list|>
name|iInstructionalMethods
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|CheckBox
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|iSelectedMethods
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|boolean
name|iShowCourseTitles
init|=
literal|false
decl_stmt|,
name|iShowDefaultSuggestions
init|=
literal|false
decl_stmt|;
specifier|public
name|CourseFinderCourses
parameter_list|()
block|{
name|this
argument_list|(
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|CourseFinderCourses
parameter_list|(
name|boolean
name|showCourseTitles
parameter_list|,
name|boolean
name|showDefaultSuggestions
parameter_list|)
block|{
name|super
argument_list|(
literal|"courses"
argument_list|)
expr_stmt|;
name|iShowCourseTitles
operator|=
name|showCourseTitles
expr_stmt|;
name|iShowDefaultSuggestions
operator|=
name|showDefaultSuggestions
expr_stmt|;
name|iCourses
operator|=
operator|new
name|UniTimeTable
argument_list|<
name|CourseAssignment
argument_list|>
argument_list|()
expr_stmt|;
name|iCourses
operator|.
name|setAllowMultiSelect
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iCourses
operator|.
name|setAllowSelection
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|UniTimeTableHeader
argument_list|>
name|head
init|=
operator|new
name|ArrayList
argument_list|<
name|UniTimeTableHeader
argument_list|>
argument_list|()
decl_stmt|;
name|head
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colSubject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|head
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colCourse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|head
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colLimit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|head
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colTitle
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|head
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colCredit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|head
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colNote
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iCourses
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|head
argument_list|)
expr_stmt|;
name|iCourses
operator|.
name|addMouseDoubleClickListener
argument_list|(
operator|new
name|UniTimeTable
operator|.
name|MouseDoubleClickListener
argument_list|<
name|CourseAssignment
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseDoubleClick
parameter_list|(
name|UniTimeTable
operator|.
name|TableEvent
argument_list|<
name|CourseAssignment
argument_list|>
name|event
parameter_list|)
block|{
name|updateCourseDetails
argument_list|()
expr_stmt|;
name|SelectionEvent
operator|.
name|fire
argument_list|(
name|CourseFinderCourses
operator|.
name|this
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iCourses
operator|.
name|addMouseClickListener
argument_list|(
operator|new
name|UniTimeTable
operator|.
name|MouseClickListener
argument_list|<
name|CourseAssignment
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseClick
parameter_list|(
name|UniTimeTable
operator|.
name|TableEvent
argument_list|<
name|CourseAssignment
argument_list|>
name|event
parameter_list|)
block|{
name|updateCourseDetails
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iCoursesPanel
operator|=
operator|new
name|ScrollPanel
argument_list|(
name|iCourses
argument_list|)
expr_stmt|;
name|iCoursesPanel
operator|.
name|setStyleName
argument_list|(
literal|"unitime-ScrollPanel"
argument_list|)
expr_stmt|;
name|iCoursesPanel
operator|.
name|addStyleName
argument_list|(
literal|"course-table"
argument_list|)
expr_stmt|;
name|iCoursesTip
operator|=
operator|new
name|Label
argument_list|(
name|CONSTANTS
operator|.
name|courseTips
argument_list|()
index|[
operator|(
name|int
operator|)
operator|(
name|Math
operator|.
name|random
argument_list|()
operator|*
name|CONSTANTS
operator|.
name|courseTips
argument_list|()
operator|.
name|length
operator|)
index|]
argument_list|)
expr_stmt|;
name|iCoursesTip
operator|.
name|setStyleName
argument_list|(
literal|"unitime-Hint"
argument_list|)
expr_stmt|;
name|iCoursesTip
operator|.
name|addStyleName
argument_list|(
literal|"course-tip"
argument_list|)
expr_stmt|;
name|ToolBox
operator|.
name|disableTextSelectInternal
argument_list|(
name|iCoursesTip
operator|.
name|getElement
argument_list|()
argument_list|)
expr_stmt|;
name|iCoursesTip
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|String
name|oldText
init|=
name|iCoursesTip
operator|.
name|getText
argument_list|()
decl_stmt|;
do|do
block|{
name|iCoursesTip
operator|.
name|setText
argument_list|(
name|CONSTANTS
operator|.
name|courseTips
argument_list|()
index|[
operator|(
name|int
operator|)
operator|(
name|Math
operator|.
name|random
argument_list|()
operator|*
name|CONSTANTS
operator|.
name|courseTips
argument_list|()
operator|.
name|length
operator|)
index|]
argument_list|)
expr_stmt|;
block|}
do|while
condition|(
name|oldText
operator|.
name|equals
argument_list|(
name|iCoursesTip
operator|.
name|getText
argument_list|()
argument_list|)
condition|)
do|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iCourseDetailsTabBar
operator|=
operator|new
name|AriaTabBar
argument_list|()
expr_stmt|;
name|iCourseDetailsTabBar
operator|.
name|addStyleName
argument_list|(
literal|"course-details-tabs"
argument_list|)
expr_stmt|;
name|iCourseDetailsPanel
operator|=
operator|new
name|ScrollPanel
argument_list|()
expr_stmt|;
name|iCourseDetailsPanel
operator|.
name|addStyleName
argument_list|(
literal|"course-details"
argument_list|)
expr_stmt|;
name|iCourseDetailsTabBar
operator|.
name|addSelectionHandler
argument_list|(
operator|new
name|SelectionHandler
argument_list|<
name|Integer
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSelection
parameter_list|(
name|SelectionEvent
argument_list|<
name|Integer
argument_list|>
name|event
parameter_list|)
block|{
name|Cookies
operator|.
name|setCookie
argument_list|(
literal|"UniTime:CourseFinderCourses"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|event
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iCourseDetailsPanel
operator|.
name|setWidget
argument_list|(
name|iDetails
index|[
name|event
operator|.
name|getSelectedItem
argument_list|()
index|]
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iInstructionalMethodsPanel
operator|=
operator|new
name|P
argument_list|(
literal|"instructional-methods"
argument_list|)
expr_stmt|;
name|iCourseDetailsTabBar
operator|.
name|setRestWidget
argument_list|(
name|iInstructionalMethodsPanel
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|iCoursesPanel
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|iCourseDetailsTabBar
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|iCourseDetailsPanel
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|iCoursesTip
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setDataProvider
parameter_list|(
name|DataProvider
argument_list|<
name|String
argument_list|,
name|Collection
argument_list|<
name|CourseAssignment
argument_list|>
argument_list|>
name|provider
parameter_list|)
block|{
name|iDataProvider
operator|=
name|provider
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|MESSAGES
operator|.
name|courseSelectionCourses
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Widget
name|asWidget
parameter_list|()
block|{
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
specifier|final
name|RequestedCourse
name|value
parameter_list|)
block|{
name|setValue
argument_list|(
name|value
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|RequestedCourse
name|getValue
parameter_list|()
block|{
name|int
name|row
init|=
name|iCourses
operator|.
name|getSelectedRow
argument_list|()
decl_stmt|;
if|if
condition|(
name|iCourses
operator|.
name|getSelectedRow
argument_list|()
operator|<
literal|0
condition|)
return|return
literal|null
return|;
name|CourseAssignment
name|record
init|=
name|iCourses
operator|.
name|getData
argument_list|(
name|row
argument_list|)
decl_stmt|;
if|if
condition|(
name|record
operator|==
literal|null
condition|)
return|return
literal|null
return|;
name|RequestedCourse
name|rc
init|=
operator|new
name|RequestedCourse
argument_list|()
decl_stmt|;
name|rc
operator|.
name|setCourseId
argument_list|(
name|record
operator|.
name|getCourseId
argument_list|()
argument_list|)
expr_stmt|;
name|rc
operator|.
name|setCourseName
argument_list|(
name|MESSAGES
operator|.
name|courseName
argument_list|(
name|record
operator|.
name|getSubject
argument_list|()
argument_list|,
name|record
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|record
operator|.
name|hasTitle
argument_list|()
operator|&&
operator|(
operator|!
name|record
operator|.
name|hasUniqueName
argument_list|()
operator|||
name|iShowCourseTitles
operator|)
condition|)
name|rc
operator|.
name|setCourseName
argument_list|(
name|MESSAGES
operator|.
name|courseNameWithTitle
argument_list|(
name|record
operator|.
name|getSubject
argument_list|()
argument_list|,
name|record
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|record
operator|.
name|getTitle
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|CheckBox
argument_list|>
name|e
range|:
name|iInstructionalMethods
operator|.
name|entrySet
argument_list|()
control|)
if|if
condition|(
name|e
operator|.
name|getValue
argument_list|()
operator|.
name|isEnabled
argument_list|()
operator|&&
name|e
operator|.
name|getValue
argument_list|()
operator|.
name|getValue
argument_list|()
condition|)
name|rc
operator|.
name|setSelectedIntructionalMethod
argument_list|(
name|e
operator|.
name|getKey
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|iDetails
operator|!=
literal|null
condition|)
for|for
control|(
name|CourseFinderCourseDetails
name|d
range|:
name|iDetails
control|)
name|d
operator|.
name|onGetValue
argument_list|(
name|rc
argument_list|)
expr_stmt|;
return|return
name|rc
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|RequestedCourse
name|value
parameter_list|,
specifier|final
name|boolean
name|fireEvents
parameter_list|)
block|{
name|String
name|query
init|=
operator|(
name|value
operator|==
literal|null
operator|||
operator|!
name|value
operator|.
name|isCourse
argument_list|()
condition|?
literal|""
else|:
name|value
operator|.
name|getCourseName
argument_list|()
operator|)
decl_stmt|;
name|iSelectedMethods
operator|.
name|clear
argument_list|()
expr_stmt|;
for|for
control|(
name|CheckBox
name|ch
range|:
name|iInstructionalMethods
operator|.
name|values
argument_list|()
control|)
if|if
condition|(
name|ch
operator|.
name|isEnabled
argument_list|()
condition|)
name|ch
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|.
name|hasSelectedIntructionalMethods
argument_list|()
condition|)
for|for
control|(
name|String
name|id
range|:
name|value
operator|.
name|getSelectedIntructionalMethods
argument_list|()
control|)
block|{
name|iSelectedMethods
operator|.
name|add
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|CheckBox
name|ch
init|=
name|iInstructionalMethods
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|ch
operator|!=
literal|null
operator|&&
name|ch
operator|.
name|isEnabled
argument_list|()
condition|)
name|ch
operator|.
name|setValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iDetails
operator|!=
literal|null
condition|)
for|for
control|(
name|CourseFinderCourseDetails
name|d
range|:
name|iDetails
control|)
name|d
operator|.
name|onSetValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
if|if
condition|(
name|query
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
name|iShowDefaultSuggestions
condition|)
block|{
name|iLastQuery
operator|=
literal|null
expr_stmt|;
name|iCourses
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|iCourses
operator|.
name|setEmptyMessage
argument_list|(
name|MESSAGES
operator|.
name|courseSelectionNoCourseFilter
argument_list|()
argument_list|)
expr_stmt|;
name|updateCourseDetails
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
operator|!
name|query
operator|.
name|equals
argument_list|(
name|iLastQuery
argument_list|)
condition|)
block|{
name|iLastQuery
operator|=
name|query
expr_stmt|;
name|iDataProvider
operator|.
name|getData
argument_list|(
name|query
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|CourseAssignment
argument_list|>
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iCourses
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|iCourses
operator|.
name|setEmptyMessage
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|isVisible
argument_list|()
condition|)
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setText
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|updateCourseDetails
argument_list|()
expr_stmt|;
name|ResponseEvent
operator|.
name|fire
argument_list|(
name|CourseFinderCourses
operator|.
name|this
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Collection
argument_list|<
name|CourseAssignment
argument_list|>
name|result
parameter_list|)
block|{
name|iCourses
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|boolean
name|hasCredit
init|=
literal|false
decl_stmt|,
name|hasNote
init|=
literal|false
decl_stmt|;
for|for
control|(
name|CourseAssignment
name|record
range|:
name|result
control|)
block|{
name|List
argument_list|<
name|Widget
argument_list|>
name|line
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|record
operator|.
name|getSubject
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|record
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|HTML
argument_list|(
name|record
operator|.
name|getLimit
argument_list|()
operator|==
literal|null
operator|||
name|record
operator|.
name|getLimit
argument_list|()
operator|==
literal|0
operator|||
name|record
operator|.
name|getEnrollment
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|record
operator|.
name|getLimit
argument_list|()
operator|<
literal|0
condition|?
literal|"&infin;"
else|:
operator|(
name|record
operator|.
name|getLimit
argument_list|()
operator|-
name|record
operator|.
name|getEnrollment
argument_list|()
operator|)
operator|+
literal|" / "
operator|+
name|record
operator|.
name|getLimit
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|record
operator|.
name|getTitle
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|record
operator|.
name|getTitle
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|record
operator|.
name|hasCredit
argument_list|()
condition|)
block|{
name|Label
name|credit
init|=
operator|new
name|Label
argument_list|(
name|record
operator|.
name|getCreditAbbv
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
if|if
condition|(
name|record
operator|.
name|hasCredit
argument_list|()
condition|)
name|credit
operator|.
name|setTitle
argument_list|(
name|record
operator|.
name|getCreditText
argument_list|()
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
name|credit
argument_list|)
expr_stmt|;
name|hasCredit
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|record
operator|.
name|getNote
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|record
operator|.
name|getNote
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|record
operator|.
name|hasNote
argument_list|()
condition|)
name|hasNote
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|record
operator|.
name|hasTitle
argument_list|()
condition|)
block|{
if|if
condition|(
name|record
operator|.
name|hasNote
argument_list|()
condition|)
block|{
name|line
operator|.
name|add
argument_list|(
operator|new
name|AriaHiddenLabel
argument_list|(
name|ARIA
operator|.
name|courseFinderCourseWithTitleAndNote
argument_list|(
name|record
operator|.
name|getSubject
argument_list|()
argument_list|,
name|record
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|record
operator|.
name|getTitle
argument_list|()
argument_list|,
name|record
operator|.
name|getNote
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|line
operator|.
name|add
argument_list|(
operator|new
name|AriaHiddenLabel
argument_list|(
name|ARIA
operator|.
name|courseFinderCourseWithTitle
argument_list|(
name|record
operator|.
name|getSubject
argument_list|()
argument_list|,
name|record
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|record
operator|.
name|getTitle
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|record
operator|.
name|hasNote
argument_list|()
condition|)
block|{
name|line
operator|.
name|add
argument_list|(
operator|new
name|AriaHiddenLabel
argument_list|(
name|ARIA
operator|.
name|courseFinderCourseWithNote
argument_list|(
name|record
operator|.
name|getSubject
argument_list|()
argument_list|,
name|record
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|record
operator|.
name|getNote
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|line
operator|.
name|add
argument_list|(
operator|new
name|AriaHiddenLabel
argument_list|(
name|ARIA
operator|.
name|courseFinderCourse
argument_list|(
name|record
operator|.
name|getSubject
argument_list|()
argument_list|,
name|record
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|int
name|row
init|=
name|iCourses
operator|.
name|addRow
argument_list|(
name|record
argument_list|,
name|line
argument_list|)
decl_stmt|;
if|if
condition|(
name|iLastQuery
operator|.
name|equalsIgnoreCase
argument_list|(
name|MESSAGES
operator|.
name|courseName
argument_list|(
name|record
operator|.
name|getSubject
argument_list|()
argument_list|,
name|record
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|)
operator|||
operator|(
name|record
operator|.
name|getTitle
argument_list|()
operator|!=
literal|null
operator|&&
name|iLastQuery
operator|.
name|equalsIgnoreCase
argument_list|(
name|MESSAGES
operator|.
name|courseNameWithTitle
argument_list|(
name|record
operator|.
name|getSubject
argument_list|()
argument_list|,
name|record
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|record
operator|.
name|getTitle
argument_list|()
argument_list|)
argument_list|)
operator|)
condition|)
name|iCourses
operator|.
name|setSelected
argument_list|(
name|row
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|iCourses
operator|.
name|setColumnVisible
argument_list|(
literal|4
argument_list|,
name|hasCredit
argument_list|)
expr_stmt|;
name|iCourses
operator|.
name|setColumnVisible
argument_list|(
literal|5
argument_list|,
name|hasNote
argument_list|)
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
name|iCourses
operator|.
name|setSelected
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|iCourses
operator|.
name|getSelectedRow
argument_list|()
operator|>=
literal|0
condition|)
block|{
name|scrollToSelectedRow
argument_list|()
expr_stmt|;
if|if
condition|(
name|fireEvents
condition|)
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|CourseFinderCourses
operator|.
name|this
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|updateCourseDetails
argument_list|()
expr_stmt|;
name|ResponseEvent
operator|.
name|fire
argument_list|(
name|CourseFinderCourses
operator|.
name|this
argument_list|,
operator|!
name|result
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|scrollToSelectedRow
parameter_list|()
block|{
if|if
condition|(
name|iCourses
operator|.
name|getSelectedRow
argument_list|()
operator|<
literal|0
condition|)
return|return;
name|Element
name|scroll
init|=
name|iCoursesPanel
operator|.
name|getElement
argument_list|()
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Element
name|item
init|=
name|iCourses
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|getElement
argument_list|(
name|iCourses
operator|.
name|getSelectedRow
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|==
literal|null
condition|)
return|return;
name|int
name|realOffset
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|item
operator|!=
literal|null
operator|&&
operator|!
name|item
operator|.
name|equals
argument_list|(
name|scroll
argument_list|)
condition|)
block|{
name|realOffset
operator|+=
name|item
operator|.
name|getOffsetTop
argument_list|()
expr_stmt|;
name|item
operator|=
name|item
operator|.
name|getOffsetParent
argument_list|()
expr_stmt|;
block|}
name|scroll
operator|.
name|setScrollTop
argument_list|(
name|realOffset
operator|-
name|scroll
operator|.
name|getOffsetHeight
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|updateCourseDetails
parameter_list|()
block|{
name|int
name|row
init|=
name|iCourses
operator|.
name|getSelectedRow
argument_list|()
decl_stmt|;
name|CourseAssignment
name|record
init|=
name|iCourses
operator|.
name|getData
argument_list|(
name|row
argument_list|)
decl_stmt|;
if|if
condition|(
name|record
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|iDetails
operator|!=
literal|null
condition|)
for|for
control|(
name|CourseFinderCourseDetails
name|detail
range|:
name|iDetails
control|)
block|{
name|detail
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setHTML
argument_list|(
name|ARIA
operator|.
name|courseFinderNoCourse
argument_list|()
argument_list|)
expr_stmt|;
name|iInstructionalMethodsPanel
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iInstructionalMethods
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|CourseFinderCourseDetails
name|detail
range|:
name|iDetails
control|)
name|detail
operator|.
name|setValue
argument_list|(
name|record
argument_list|)
expr_stmt|;
if|if
condition|(
name|record
operator|.
name|hasTitle
argument_list|()
condition|)
block|{
if|if
condition|(
name|record
operator|.
name|hasNote
argument_list|()
condition|)
block|{
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setHTML
argument_list|(
name|ARIA
operator|.
name|courseFinderSelectedWithTitleAndNote
argument_list|(
name|iCourses
operator|.
name|getSelectedRow
argument_list|()
argument_list|,
name|iCourses
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
argument_list|,
name|record
operator|.
name|getSubject
argument_list|()
argument_list|,
name|record
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|record
operator|.
name|getTitle
argument_list|()
argument_list|,
name|record
operator|.
name|getNote
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setHTML
argument_list|(
name|ARIA
operator|.
name|courseFinderSelectedWithTitle
argument_list|(
name|iCourses
operator|.
name|getSelectedRow
argument_list|()
argument_list|,
name|iCourses
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
argument_list|,
name|record
operator|.
name|getSubject
argument_list|()
argument_list|,
name|record
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|record
operator|.
name|getTitle
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|record
operator|.
name|hasNote
argument_list|()
condition|)
block|{
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setHTML
argument_list|(
name|ARIA
operator|.
name|courseFinderSelectedWithNote
argument_list|(
name|iCourses
operator|.
name|getSelectedRow
argument_list|()
argument_list|,
name|iCourses
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
argument_list|,
name|record
operator|.
name|getSubject
argument_list|()
argument_list|,
name|record
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|record
operator|.
name|getNote
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setHTML
argument_list|(
name|ARIA
operator|.
name|courseFinderSelected
argument_list|(
name|iCourses
operator|.
name|getSelectedRow
argument_list|()
argument_list|,
name|iCourses
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
argument_list|,
name|record
operator|.
name|getSubject
argument_list|()
argument_list|,
name|record
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setHTML
argument_list|(
name|ARIA
operator|.
name|courseFinderNoCourse
argument_list|()
argument_list|)
expr_stmt|;
name|iInstructionalMethodsPanel
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iInstructionalMethods
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|record
operator|.
name|hasInstructionalMethodSelection
argument_list|()
condition|)
block|{
for|for
control|(
specifier|final
name|IdValue
name|m
range|:
name|record
operator|.
name|getInstructionalMethods
argument_list|()
control|)
block|{
name|CheckBox
name|ch
init|=
operator|new
name|CheckBox
argument_list|(
name|m
operator|.
name|getValue
argument_list|()
argument_list|)
decl_stmt|;
name|ch
operator|.
name|setValue
argument_list|(
name|iSelectedMethods
operator|.
name|contains
argument_list|(
name|m
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ch
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
condition|)
name|iSelectedMethods
operator|.
name|add
argument_list|(
name|m
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|iSelectedMethods
operator|.
name|remove
argument_list|(
name|m
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|ch
operator|.
name|addStyleName
argument_list|(
literal|"instructional-method"
argument_list|)
expr_stmt|;
name|iInstructionalMethods
operator|.
name|put
argument_list|(
name|m
operator|.
name|getValue
argument_list|()
argument_list|,
name|ch
argument_list|)
expr_stmt|;
name|iInstructionalMethodsPanel
operator|.
name|add
argument_list|(
name|ch
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|record
operator|.
name|hasInstructionalMethods
argument_list|()
condition|)
block|{
for|for
control|(
name|IdValue
name|m
range|:
name|record
operator|.
name|getInstructionalMethods
argument_list|()
control|)
block|{
name|CheckBox
name|ch
init|=
operator|new
name|CheckBox
argument_list|(
name|m
operator|.
name|getValue
argument_list|()
argument_list|)
decl_stmt|;
name|ch
operator|.
name|addStyleName
argument_list|(
literal|"instructional-method"
argument_list|)
expr_stmt|;
name|ch
operator|.
name|setValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|ch
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iInstructionalMethods
operator|.
name|put
argument_list|(
name|m
operator|.
name|getValue
argument_list|()
argument_list|,
name|ch
argument_list|)
expr_stmt|;
name|iInstructionalMethodsPanel
operator|.
name|add
argument_list|(
name|ch
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addSelectionHandler
parameter_list|(
name|SelectionHandler
argument_list|<
name|RequestedCourse
argument_list|>
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|SelectionEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addValueChangeHandler
parameter_list|(
name|ValueChangeHandler
argument_list|<
name|RequestedCourse
argument_list|>
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|ValueChangeEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isCourseSelection
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCourseDetails
parameter_list|(
name|CourseFinderCourseDetails
modifier|...
name|details
parameter_list|)
block|{
name|iDetails
operator|=
name|details
expr_stmt|;
name|int
name|tabIndex
init|=
literal|0
decl_stmt|;
for|for
control|(
name|CourseFinderCourseDetails
name|detail
range|:
name|iDetails
control|)
block|{
name|ScrollPanel
name|panel
init|=
operator|new
name|ScrollPanel
argument_list|(
name|detail
operator|.
name|asWidget
argument_list|()
argument_list|)
decl_stmt|;
name|panel
operator|.
name|setStyleName
argument_list|(
literal|"unitime-ScrollPanel-inner"
argument_list|)
expr_stmt|;
name|panel
operator|.
name|addStyleName
argument_list|(
literal|"course-info"
argument_list|)
expr_stmt|;
name|iCourseDetailsTabBar
operator|.
name|addTab
argument_list|(
name|detail
operator|.
name|getName
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Character
name|ch
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|detail
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|ch
operator|!=
literal|null
condition|)
name|iTabAccessKeys
operator|.
name|put
argument_list|(
name|ch
argument_list|,
name|tabIndex
argument_list|)
expr_stmt|;
name|tabIndex
operator|++
expr_stmt|;
block|}
name|selectLastTab
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onKeyUp
parameter_list|(
name|KeyUpEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iCourses
operator|.
name|getRowCount
argument_list|()
operator|<
literal|2
operator|||
name|iCourses
operator|.
name|getData
argument_list|(
literal|1
argument_list|)
operator|==
literal|null
condition|)
return|return;
name|int
name|row
init|=
name|iCourses
operator|.
name|getSelectedRow
argument_list|()
decl_stmt|;
if|if
condition|(
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_DOWN
condition|)
block|{
if|if
condition|(
name|row
operator|<
literal|0
operator|||
name|iCourses
operator|.
name|getSelectedRow
argument_list|()
operator|+
literal|1
operator|>=
name|iCourses
operator|.
name|getRowCount
argument_list|()
condition|)
name|iCourses
operator|.
name|setSelected
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
else|else
name|iCourses
operator|.
name|setSelected
argument_list|(
name|row
operator|+
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|scrollToSelectedRow
argument_list|()
expr_stmt|;
name|updateCourseDetails
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_UP
condition|)
block|{
if|if
condition|(
name|row
operator|-
literal|1
operator|<
literal|1
condition|)
name|iCourses
operator|.
name|setSelected
argument_list|(
name|iCourses
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
else|else
name|iCourses
operator|.
name|setSelected
argument_list|(
name|row
operator|-
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|scrollToSelectedRow
argument_list|()
expr_stmt|;
name|updateCourseDetails
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|event
operator|.
name|isControlKeyDown
argument_list|()
operator|||
name|event
operator|.
name|isAltKeyDown
argument_list|()
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Character
argument_list|,
name|Integer
argument_list|>
name|entry
range|:
name|iTabAccessKeys
operator|.
name|entrySet
argument_list|()
control|)
if|if
condition|(
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
name|Character
operator|.
name|toLowerCase
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
operator|||
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
name|Character
operator|.
name|toUpperCase
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
condition|)
block|{
name|iCourseDetailsTabBar
operator|.
name|selectTab
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|event
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
name|event
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addResponseHandler
parameter_list|(
name|ResponseHandler
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|ResponseEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|void
name|selectLastTab
parameter_list|()
block|{
try|try
block|{
name|int
name|tab
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|Cookies
operator|.
name|getCookie
argument_list|(
literal|"UniTime:CourseFinderCourses"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|tab
operator|>=
literal|0
operator|||
name|tab
operator|<
name|iCourseDetailsTabBar
operator|.
name|getTabCount
argument_list|()
operator|&&
name|tab
operator|!=
name|iCourseDetailsTabBar
operator|.
name|getSelectedTab
argument_list|()
condition|)
name|iCourseDetailsTabBar
operator|.
name|selectTab
argument_list|(
name|tab
argument_list|,
literal|true
argument_list|)
expr_stmt|;
else|else
name|iCourseDetailsTabBar
operator|.
name|selectTab
argument_list|(
literal|0
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|iCourseDetailsTabBar
operator|.
name|selectTab
argument_list|(
literal|0
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|changeTip
parameter_list|()
block|{
name|iCoursesTip
operator|.
name|setText
argument_list|(
name|CONSTANTS
operator|.
name|courseTips
argument_list|()
index|[
operator|(
name|int
operator|)
operator|(
name|Math
operator|.
name|random
argument_list|()
operator|*
name|CONSTANTS
operator|.
name|courseTips
argument_list|()
operator|.
name|length
operator|)
index|]
argument_list|)
expr_stmt|;
name|selectLastTab
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

