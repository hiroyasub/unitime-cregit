begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyCodes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|HasOpenHandlers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|OpenEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|OpenHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|DOM
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Event
operator|.
name|NativePreviewEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Anchor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|DialogBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FlowPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|UniTimeDialogBox
extends|extends
name|DialogBox
implements|implements
name|HasOpenHandlers
argument_list|<
name|UniTimeDialogBox
argument_list|>
block|{
specifier|private
name|FlowPanel
name|iContainer
decl_stmt|,
name|iControls
decl_stmt|;
specifier|private
name|Anchor
name|iClose
decl_stmt|;
specifier|private
name|boolean
name|iEscapeToHide
init|=
literal|false
decl_stmt|;
specifier|private
name|Command
name|iSubmitHandler
init|=
literal|null
decl_stmt|;
specifier|public
name|UniTimeDialogBox
parameter_list|(
name|boolean
name|autoHide
parameter_list|,
name|boolean
name|modal
parameter_list|)
block|{
name|super
argument_list|(
name|autoHide
argument_list|,
name|modal
argument_list|)
expr_stmt|;
name|setAnimationEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setGlassEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iContainer
operator|=
operator|new
name|FlowPanel
argument_list|()
expr_stmt|;
name|iContainer
operator|.
name|addStyleName
argument_list|(
literal|"dialogContainer"
argument_list|)
expr_stmt|;
name|iClose
operator|=
operator|new
name|Anchor
argument_list|()
expr_stmt|;
name|iClose
operator|.
name|setTitle
argument_list|(
literal|"Click here or outside of the dialog to close."
argument_list|)
expr_stmt|;
name|iClose
operator|.
name|setStyleName
argument_list|(
literal|"close"
argument_list|)
expr_stmt|;
name|iClose
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|onCloseClick
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iClose
operator|.
name|setVisible
argument_list|(
name|autoHide
argument_list|)
expr_stmt|;
name|iControls
operator|=
operator|new
name|FlowPanel
argument_list|()
expr_stmt|;
name|iControls
operator|.
name|setStyleName
argument_list|(
literal|"dialogControls"
argument_list|)
expr_stmt|;
name|iControls
operator|.
name|add
argument_list|(
name|iClose
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setAutoHideEnabled
parameter_list|(
name|boolean
name|autoHide
parameter_list|)
block|{
name|super
operator|.
name|setAutoHideEnabled
argument_list|(
name|autoHide
argument_list|)
expr_stmt|;
name|iClose
operator|.
name|setVisible
argument_list|(
name|autoHide
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setEscapeToHide
parameter_list|(
name|boolean
name|escapeToHide
parameter_list|)
block|{
name|iEscapeToHide
operator|=
name|escapeToHide
expr_stmt|;
block|}
specifier|public
name|boolean
name|isEscapeToHide
parameter_list|()
block|{
return|return
name|iEscapeToHide
return|;
block|}
specifier|public
name|void
name|setEnterToSubmit
parameter_list|(
name|Command
name|submitCommand
parameter_list|)
block|{
name|iSubmitHandler
operator|=
name|submitCommand
expr_stmt|;
block|}
specifier|public
name|boolean
name|isEnterToSubmit
parameter_list|()
block|{
return|return
name|iSubmitHandler
operator|!=
literal|null
return|;
block|}
specifier|public
name|void
name|setWidget
parameter_list|(
name|Widget
name|widget
parameter_list|)
block|{
if|if
condition|(
name|iContainer
operator|.
name|getWidgetCount
argument_list|()
operator|==
literal|0
condition|)
block|{
name|iContainer
operator|.
name|add
argument_list|(
name|iControls
argument_list|)
expr_stmt|;
name|super
operator|.
name|setWidget
argument_list|(
name|iContainer
argument_list|)
expr_stmt|;
block|}
else|else
block|{
while|while
condition|(
name|iContainer
operator|.
name|getWidgetCount
argument_list|()
operator|>
literal|1
condition|)
block|{
name|iContainer
operator|.
name|remove
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
name|iContainer
operator|.
name|add
argument_list|(
name|widget
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|onCloseClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|hide
argument_list|()
expr_stmt|;
block|}
specifier|public
name|HandlerRegistration
name|addOpenHandler
parameter_list|(
name|OpenHandler
argument_list|<
name|UniTimeDialogBox
argument_list|>
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|OpenEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|show
parameter_list|()
block|{
name|boolean
name|fireOpen
init|=
operator|!
name|isShowing
argument_list|()
decl_stmt|;
name|super
operator|.
name|show
argument_list|()
expr_stmt|;
if|if
condition|(
name|fireOpen
condition|)
block|{
name|OpenEvent
operator|.
name|fire
argument_list|(
name|this
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|onPreviewNativeEvent
parameter_list|(
name|NativePreviewEvent
name|event
parameter_list|)
block|{
name|super
operator|.
name|onPreviewNativeEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
if|if
condition|(
name|isEscapeToHide
argument_list|()
operator|&&
name|DOM
operator|.
name|eventGetKeyCode
argument_list|(
operator|(
name|Event
operator|)
name|event
operator|.
name|getNativeEvent
argument_list|()
argument_list|)
operator|==
name|KeyCodes
operator|.
name|KEY_ESCAPE
condition|)
name|hide
argument_list|()
expr_stmt|;
if|if
condition|(
name|isEnterToSubmit
argument_list|()
operator|&&
name|DOM
operator|.
name|eventGetKeyCode
argument_list|(
operator|(
name|Event
operator|)
name|event
operator|.
name|getNativeEvent
argument_list|()
argument_list|)
operator|==
name|KeyCodes
operator|.
name|KEY_ENTER
condition|)
name|iSubmitHandler
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

