begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|CourseFinder
operator|.
name|CourseFinderCourseDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|CourseFinder
operator|.
name|ResponseEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|CourseFinder
operator|.
name|ResponseHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtAriaMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|FreeTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|RequestedCourse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyUpEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ScrollPanel
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|CourseFinderFreeTime
extends|extends
name|P
implements|implements
name|CourseFinder
operator|.
name|CourseFinderTab
argument_list|<
name|List
argument_list|<
name|CourseRequestInterface
operator|.
name|FreeTime
argument_list|>
argument_list|>
block|{
specifier|protected
specifier|static
specifier|final
name|StudentSectioningConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|StudentSectioningMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|GwtAriaMessages
name|ARIA
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtAriaMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|FreeTimePicker
name|iFreeTimePicker
decl_stmt|;
specifier|private
name|Label
name|iFreeTimeError
decl_stmt|,
name|iFreeTimeTip
decl_stmt|;
specifier|private
name|FreeTimeParser
name|iDataProvider
decl_stmt|;
specifier|public
name|CourseFinderFreeTime
parameter_list|()
block|{
name|super
argument_list|(
literal|"free-times"
argument_list|)
expr_stmt|;
name|iFreeTimePicker
operator|=
operator|new
name|FreeTimePicker
argument_list|()
expr_stmt|;
name|iFreeTimePicker
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|List
argument_list|<
name|FreeTime
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|List
argument_list|<
name|FreeTime
argument_list|>
argument_list|>
name|event
parameter_list|)
block|{
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|CourseFinderFreeTime
operator|.
name|this
argument_list|,
operator|new
name|RequestedCourse
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iFreeTimeError
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|ScrollPanel
name|panel
init|=
operator|new
name|ScrollPanel
argument_list|(
name|iFreeTimePicker
argument_list|)
decl_stmt|;
name|panel
operator|.
name|setStyleName
argument_list|(
literal|"unitime-ScrollPanel-inner"
argument_list|)
expr_stmt|;
name|panel
operator|.
name|addStyleName
argument_list|(
literal|"free-time-picker"
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|panel
argument_list|)
expr_stmt|;
name|iFreeTimeTip
operator|=
operator|new
name|Label
argument_list|(
name|CONSTANTS
operator|.
name|freeTimeTips
argument_list|()
index|[
operator|(
name|int
operator|)
operator|(
name|Math
operator|.
name|random
argument_list|()
operator|*
name|CONSTANTS
operator|.
name|freeTimeTips
argument_list|()
operator|.
name|length
operator|)
index|]
argument_list|)
expr_stmt|;
name|iFreeTimeTip
operator|.
name|setStyleName
argument_list|(
literal|"unitime-Hint"
argument_list|)
expr_stmt|;
name|ToolBox
operator|.
name|disableTextSelectInternal
argument_list|(
name|iFreeTimeTip
operator|.
name|getElement
argument_list|()
argument_list|)
expr_stmt|;
name|iFreeTimeTip
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|String
name|oldText
init|=
name|iFreeTimeTip
operator|.
name|getText
argument_list|()
decl_stmt|;
do|do
block|{
name|iFreeTimeTip
operator|.
name|setText
argument_list|(
name|CONSTANTS
operator|.
name|freeTimeTips
argument_list|()
index|[
operator|(
name|int
operator|)
operator|(
name|Math
operator|.
name|random
argument_list|()
operator|*
name|CONSTANTS
operator|.
name|freeTimeTips
argument_list|()
operator|.
name|length
operator|)
index|]
argument_list|)
expr_stmt|;
block|}
do|while
condition|(
name|oldText
operator|.
name|equals
argument_list|(
name|iFreeTimeTip
operator|.
name|getText
argument_list|()
argument_list|)
condition|)
do|;
block|}
block|}
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|iFreeTimeTip
argument_list|)
expr_stmt|;
name|iFreeTimeError
operator|=
operator|new
name|Label
argument_list|()
expr_stmt|;
name|iFreeTimeError
operator|.
name|setStyleName
argument_list|(
literal|"unitime-ErrorMessage"
argument_list|)
expr_stmt|;
name|iFreeTimeError
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|iFreeTimeError
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|RequestedCourse
name|getValue
parameter_list|()
block|{
name|List
argument_list|<
name|CourseRequestInterface
operator|.
name|FreeTime
argument_list|>
name|ret
init|=
name|iFreeTimePicker
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|ret
operator|==
literal|null
operator|||
name|ret
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|null
return|;
return|return
operator|new
name|RequestedCourse
argument_list|(
name|ret
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|RequestedCourse
name|value
parameter_list|)
block|{
name|setValue
argument_list|(
name|value
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|RequestedCourse
name|value
parameter_list|,
specifier|final
name|boolean
name|fireEvents
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|iFreeTimePicker
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|iFreeTimeError
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|courseSelectionNoFreeTime
argument_list|()
argument_list|)
expr_stmt|;
name|iFreeTimeError
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|value
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
name|iFreeTimePicker
operator|.
name|setValue
argument_list|(
name|value
operator|.
name|getFreeTime
argument_list|()
argument_list|,
name|fireEvents
argument_list|)
expr_stmt|;
name|iFreeTimeError
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|String
name|status
init|=
literal|""
decl_stmt|;
for|for
control|(
name|CourseRequestInterface
operator|.
name|FreeTime
name|ft
range|:
name|value
operator|.
name|getFreeTime
argument_list|()
control|)
block|{
name|status
operator|+=
name|ft
operator|.
name|toAriaString
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
operator|+
literal|" "
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|status
operator|.
name|isEmpty
argument_list|()
condition|)
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setText
argument_list|(
name|ARIA
operator|.
name|courseFinderSelectedFreeTime
argument_list|(
name|status
argument_list|)
argument_list|)
expr_stmt|;
name|ResponseEvent
operator|.
name|fire
argument_list|(
name|CourseFinderFreeTime
operator|.
name|this
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|value
operator|.
name|isCourse
argument_list|()
condition|)
block|{
name|iDataProvider
operator|.
name|getData
argument_list|(
name|value
operator|.
name|getCourseName
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|FreeTime
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|List
argument_list|<
name|FreeTime
argument_list|>
name|freeTimes
parameter_list|)
block|{
name|iFreeTimePicker
operator|.
name|setValue
argument_list|(
name|freeTimes
argument_list|,
name|fireEvents
argument_list|)
expr_stmt|;
name|iFreeTimeError
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|String
name|status
init|=
literal|""
decl_stmt|;
for|for
control|(
name|CourseRequestInterface
operator|.
name|FreeTime
name|ft
range|:
name|freeTimes
control|)
block|{
name|status
operator|+=
name|ft
operator|.
name|toAriaString
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
operator|+
literal|" "
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|status
operator|.
name|isEmpty
argument_list|()
condition|)
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setText
argument_list|(
name|ARIA
operator|.
name|courseFinderSelectedFreeTime
argument_list|(
name|status
argument_list|)
argument_list|)
expr_stmt|;
name|ResponseEvent
operator|.
name|fire
argument_list|(
name|CourseFinderFreeTime
operator|.
name|this
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iFreeTimePicker
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|iFreeTimeError
operator|.
name|setText
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|iFreeTimeError
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|ResponseEvent
operator|.
name|fire
argument_list|(
name|CourseFinderFreeTime
operator|.
name|this
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addValueChangeHandler
parameter_list|(
name|ValueChangeHandler
argument_list|<
name|RequestedCourse
argument_list|>
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|ValueChangeEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addSelectionHandler
parameter_list|(
name|SelectionHandler
argument_list|<
name|RequestedCourse
argument_list|>
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|SelectionEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|MESSAGES
operator|.
name|courseSelectionFreeTime
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setDataProvider
parameter_list|(
name|DataProvider
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|FreeTime
argument_list|>
argument_list|>
name|provider
parameter_list|)
block|{
name|iDataProvider
operator|=
operator|(
name|FreeTimeParser
operator|)
name|provider
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isCourseSelection
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCourseDetails
parameter_list|(
name|CourseFinderCourseDetails
modifier|...
name|details
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onKeyUp
parameter_list|(
name|KeyUpEvent
name|event
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addResponseHandler
parameter_list|(
name|ResponseHandler
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|ResponseEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|changeTip
parameter_list|()
block|{
name|iFreeTimeTip
operator|.
name|setText
argument_list|(
name|CONSTANTS
operator|.
name|freeTimeTips
argument_list|()
index|[
operator|(
name|int
operator|)
operator|(
name|Math
operator|.
name|random
argument_list|()
operator|*
name|CONSTANTS
operator|.
name|freeTimeTips
argument_list|()
operator|.
name|length
operator|)
index|]
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isEnabled
parameter_list|()
block|{
return|return
name|iFreeTimePicker
operator|.
name|isEnabled
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setEnabled
parameter_list|(
name|boolean
name|enabled
parameter_list|)
block|{
name|iFreeTimePicker
operator|.
name|setEnabled
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|CheckBox
name|getRequiredCheckbox
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

