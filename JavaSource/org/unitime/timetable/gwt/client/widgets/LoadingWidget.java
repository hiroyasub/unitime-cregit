begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
package|;
end_package

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtResources
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|DOM
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|AbsolutePanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|RootPanel
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|LoadingWidget
extends|extends
name|Composite
block|{
specifier|public
specifier|static
specifier|final
name|GwtResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|LoadingWidget
name|sInstance
init|=
literal|null
decl_stmt|;
specifier|private
name|AbsolutePanel
name|iPanel
init|=
literal|null
decl_stmt|;
specifier|private
name|Image
name|iImage
init|=
literal|null
decl_stmt|;
specifier|private
name|int
name|iCount
init|=
literal|0
decl_stmt|;
specifier|private
name|Timer
name|iWarningTimer
init|=
literal|null
decl_stmt|;
specifier|private
name|HTML
name|iWarning
decl_stmt|;
specifier|private
name|HTML
name|iMessage
init|=
literal|null
decl_stmt|;
specifier|private
name|HTML
name|iCancel
decl_stmt|;
specifier|private
name|Timer
name|iCancelTimer
init|=
literal|null
decl_stmt|;
specifier|private
name|Long
name|iExecutionId
init|=
literal|null
decl_stmt|;
specifier|public
name|LoadingWidget
parameter_list|()
block|{
name|iPanel
operator|=
operator|new
name|AbsolutePanel
argument_list|()
expr_stmt|;
name|iPanel
operator|.
name|setStyleName
argument_list|(
literal|"unitime-LoadingPanel"
argument_list|)
expr_stmt|;
name|iImage
operator|=
operator|new
name|Image
argument_list|(
name|RESOURCES
operator|.
name|loading
argument_list|()
argument_list|)
expr_stmt|;
name|iImage
operator|.
name|setStyleName
argument_list|(
literal|"unitime-LoadingIcon"
argument_list|)
expr_stmt|;
name|initWidget
argument_list|(
name|iPanel
argument_list|)
expr_stmt|;
name|Window
operator|.
name|addWindowScrollHandler
argument_list|(
operator|new
name|Window
operator|.
name|ScrollHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onWindowScroll
parameter_list|(
name|Window
operator|.
name|ScrollEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iCount
operator|>
literal|0
condition|)
block|{
name|DOM
operator|.
name|setStyleAttribute
argument_list|(
name|iPanel
operator|.
name|getElement
argument_list|()
argument_list|,
literal|"left"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|event
operator|.
name|getScrollLeft
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|DOM
operator|.
name|setStyleAttribute
argument_list|(
name|iPanel
operator|.
name|getElement
argument_list|()
argument_list|,
literal|"top"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|event
operator|.
name|getScrollTop
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|DOM
operator|.
name|setStyleAttribute
argument_list|(
name|iImage
operator|.
name|getElement
argument_list|()
argument_list|,
literal|"left"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|event
operator|.
name|getScrollLeft
argument_list|()
operator|+
name|Window
operator|.
name|getClientWidth
argument_list|()
operator|/
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|DOM
operator|.
name|setStyleAttribute
argument_list|(
name|iImage
operator|.
name|getElement
argument_list|()
argument_list|,
literal|"top"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|event
operator|.
name|getScrollTop
argument_list|()
operator|+
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|/
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|DOM
operator|.
name|setStyleAttribute
argument_list|(
name|iWarning
operator|.
name|getElement
argument_list|()
argument_list|,
literal|"left"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|event
operator|.
name|getScrollLeft
argument_list|()
operator|+
name|Window
operator|.
name|getClientWidth
argument_list|()
operator|/
literal|2
operator|-
literal|225
argument_list|)
argument_list|)
expr_stmt|;
name|DOM
operator|.
name|setStyleAttribute
argument_list|(
name|iWarning
operator|.
name|getElement
argument_list|()
argument_list|,
literal|"top"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|event
operator|.
name|getScrollTop
argument_list|()
operator|+
literal|5
operator|*
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|/
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|DOM
operator|.
name|setStyleAttribute
argument_list|(
name|iMessage
operator|.
name|getElement
argument_list|()
argument_list|,
literal|"left"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|event
operator|.
name|getScrollLeft
argument_list|()
operator|+
name|Window
operator|.
name|getClientWidth
argument_list|()
operator|/
literal|2
operator|-
literal|225
argument_list|)
argument_list|)
expr_stmt|;
name|DOM
operator|.
name|setStyleAttribute
argument_list|(
name|iMessage
operator|.
name|getElement
argument_list|()
argument_list|,
literal|"top"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|event
operator|.
name|getScrollTop
argument_list|()
operator|+
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|/
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|DOM
operator|.
name|setStyleAttribute
argument_list|(
name|iCancel
operator|.
name|getElement
argument_list|()
argument_list|,
literal|"left"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|event
operator|.
name|getScrollLeft
argument_list|()
operator|+
name|Window
operator|.
name|getClientWidth
argument_list|()
operator|/
literal|2
operator|-
literal|225
argument_list|)
argument_list|)
expr_stmt|;
name|DOM
operator|.
name|setStyleAttribute
argument_list|(
name|iCancel
operator|.
name|getElement
argument_list|()
argument_list|,
literal|"top"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|event
operator|.
name|getScrollTop
argument_list|()
operator|+
literal|5
operator|*
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|/
literal|12
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iWarning
operator|=
operator|new
name|HTML
argument_list|(
name|MESSAGES
operator|.
name|warnLoadingTooLong
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iWarning
operator|.
name|setStyleName
argument_list|(
literal|"unitime-Notification"
argument_list|)
expr_stmt|;
name|iWarning
operator|.
name|addStyleName
argument_list|(
literal|"unitime-NotificationError"
argument_list|)
expr_stmt|;
name|iCancel
operator|=
operator|new
name|HTML
argument_list|(
name|MESSAGES
operator|.
name|warnLoadingTooLongCanCancel
argument_list|()
argument_list|)
expr_stmt|;
name|iCancel
operator|.
name|setStyleName
argument_list|(
literal|"unitime-Notification"
argument_list|)
expr_stmt|;
name|iCancel
operator|.
name|addStyleName
argument_list|(
literal|"unitime-NotificationWarning"
argument_list|)
expr_stmt|;
name|iCancel
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iExecutionId
operator|!=
literal|null
condition|)
name|GwtRpc
operator|.
name|cancel
argument_list|(
name|iExecutionId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iMessage
operator|=
operator|new
name|HTML
argument_list|(
literal|""
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iMessage
operator|.
name|setStyleName
argument_list|(
literal|"unitime-Notification"
argument_list|)
expr_stmt|;
name|iMessage
operator|.
name|addStyleName
argument_list|(
literal|"unitime-NotificationInfo"
argument_list|)
expr_stmt|;
name|iWarningTimer
operator|=
operator|new
name|Timer
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|RootPanel
operator|.
name|get
argument_list|()
operator|.
name|add
argument_list|(
name|iWarning
argument_list|,
name|Window
operator|.
name|getScrollLeft
argument_list|()
operator|+
name|Window
operator|.
name|getClientWidth
argument_list|()
operator|/
literal|2
operator|-
literal|225
argument_list|,
name|Window
operator|.
name|getScrollTop
argument_list|()
operator|+
literal|5
operator|*
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|/
literal|12
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
name|iCancelTimer
operator|=
operator|new
name|Timer
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|RootPanel
operator|.
name|get
argument_list|()
operator|.
name|add
argument_list|(
name|iCancel
argument_list|,
name|Window
operator|.
name|getScrollLeft
argument_list|()
operator|+
name|Window
operator|.
name|getClientWidth
argument_list|()
operator|/
literal|2
operator|-
literal|225
argument_list|,
name|Window
operator|.
name|getScrollTop
argument_list|()
operator|+
literal|5
operator|*
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|/
literal|12
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
block|}
specifier|public
name|void
name|show
parameter_list|()
block|{
name|show
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|show
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|show
argument_list|(
name|message
argument_list|,
literal|120000
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|showCancel
parameter_list|(
name|Long
name|executionId
parameter_list|)
block|{
name|iExecutionId
operator|=
name|executionId
expr_stmt|;
name|iWarningTimer
operator|.
name|cancel
argument_list|()
expr_stmt|;
name|iCancelTimer
operator|.
name|schedule
argument_list|(
literal|2500
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|hideCancel
parameter_list|()
block|{
name|iCancelTimer
operator|.
name|cancel
argument_list|()
expr_stmt|;
name|RootPanel
operator|.
name|get
argument_list|()
operator|.
name|remove
argument_list|(
name|iCancel
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|show
parameter_list|(
name|String
name|message
parameter_list|,
name|int
name|warningDelayInMillis
parameter_list|)
block|{
if|if
condition|(
name|iCount
operator|==
literal|0
condition|)
block|{
name|RootPanel
operator|.
name|get
argument_list|()
operator|.
name|add
argument_list|(
name|this
argument_list|,
name|Window
operator|.
name|getScrollLeft
argument_list|()
argument_list|,
name|Window
operator|.
name|getScrollTop
argument_list|()
argument_list|)
expr_stmt|;
name|RootPanel
operator|.
name|get
argument_list|()
operator|.
name|add
argument_list|(
name|iImage
argument_list|,
name|Window
operator|.
name|getScrollLeft
argument_list|()
operator|+
name|Window
operator|.
name|getClientWidth
argument_list|()
operator|/
literal|2
argument_list|,
name|Window
operator|.
name|getScrollTop
argument_list|()
operator|+
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|iWarningTimer
operator|.
name|schedule
argument_list|(
name|warningDelayInMillis
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|message
operator|!=
literal|null
condition|)
block|{
name|boolean
name|showing
init|=
operator|(
name|iCount
operator|>
literal|0
operator|&&
operator|!
name|iMessage
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|)
decl_stmt|;
name|iMessage
operator|.
name|setHTML
argument_list|(
name|message
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|showing
operator|&&
operator|!
name|iMessage
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|RootPanel
operator|.
name|get
argument_list|()
operator|.
name|add
argument_list|(
name|iMessage
argument_list|,
name|Window
operator|.
name|getScrollLeft
argument_list|()
operator|+
name|Window
operator|.
name|getClientWidth
argument_list|()
operator|/
literal|2
operator|-
literal|225
argument_list|,
name|Window
operator|.
name|getScrollTop
argument_list|()
operator|+
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|/
literal|3
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|showing
operator|&&
name|iMessage
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|RootPanel
operator|.
name|get
argument_list|()
operator|.
name|remove
argument_list|(
name|iMessage
argument_list|)
expr_stmt|;
block|}
block|}
name|iCount
operator|++
expr_stmt|;
block|}
specifier|public
name|void
name|setMessage
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|iMessage
operator|.
name|setHTML
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Call {@link LoadingWidget#hide()} and {@link UniTimeNotifications#error(String)} instead. 	 */
annotation|@
name|Deprecated
specifier|public
name|void
name|fail
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|hide
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|hide
parameter_list|()
block|{
if|if
condition|(
name|iCount
operator|>
literal|0
condition|)
name|iCount
operator|--
expr_stmt|;
if|if
condition|(
name|iCount
operator|==
literal|0
condition|)
block|{
name|RootPanel
operator|.
name|get
argument_list|()
operator|.
name|remove
argument_list|(
name|iImage
argument_list|)
expr_stmt|;
name|RootPanel
operator|.
name|get
argument_list|()
operator|.
name|remove
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|iWarningTimer
operator|.
name|cancel
argument_list|()
expr_stmt|;
name|iCancelTimer
operator|.
name|cancel
argument_list|()
expr_stmt|;
name|RootPanel
operator|.
name|get
argument_list|()
operator|.
name|remove
argument_list|(
name|iWarning
argument_list|)
expr_stmt|;
name|RootPanel
operator|.
name|get
argument_list|()
operator|.
name|remove
argument_list|(
name|iMessage
argument_list|)
expr_stmt|;
name|RootPanel
operator|.
name|get
argument_list|()
operator|.
name|remove
argument_list|(
name|iCancel
argument_list|)
expr_stmt|;
name|iMessage
operator|.
name|setHTML
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|boolean
name|isShowing
parameter_list|()
block|{
return|return
name|iCount
operator|>
literal|0
return|;
block|}
specifier|public
specifier|static
name|LoadingWidget
name|getInstance
parameter_list|()
block|{
if|if
condition|(
name|sInstance
operator|==
literal|null
condition|)
name|sInstance
operator|=
operator|new
name|LoadingWidget
argument_list|()
expr_stmt|;
return|return
name|sInstance
return|;
block|}
specifier|public
specifier|static
specifier|native
name|void
name|createTriggers
parameter_list|()
comment|/*-{ 		$wnd.showGwtLoading = function(message) { 			@org.unitime.timetable.gwt.client.widgets.LoadingWidget::showLoading(Ljava/lang/String;)(message); 		}; 		$wnd.hideGwtLoading = function() { 			@org.unitime.timetable.gwt.client.widgets.LoadingWidget::hideLoading()(); 		}; 	}-*/
function_decl|;
specifier|public
specifier|static
name|void
name|showLoading
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|message
operator|==
literal|null
operator|||
name|message
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
name|message
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|hideLoading
parameter_list|()
block|{
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
parameter_list|<
name|T
extends|extends
name|GwtRpcResponse
parameter_list|>
name|void
name|execute
parameter_list|(
name|GwtRpcRequest
argument_list|<
name|T
argument_list|>
name|request
parameter_list|,
specifier|final
name|AsyncCallback
argument_list|<
name|T
argument_list|>
name|callback
parameter_list|,
specifier|final
name|String
name|loadingMessage
parameter_list|)
block|{
name|showLoading
argument_list|(
name|loadingMessage
argument_list|)
expr_stmt|;
name|GwtRpc
operator|.
name|execute
argument_list|(
name|request
argument_list|,
operator|new
name|GwtRpc
operator|.
name|CancellableCallback
argument_list|<
name|T
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|hideLoading
argument_list|()
expr_stmt|;
name|callback
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|T
name|result
parameter_list|)
block|{
name|hideLoading
argument_list|()
expr_stmt|;
name|callback
operator|.
name|onSuccess
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onExecution
parameter_list|(
name|Long
name|executionId
parameter_list|)
block|{
name|getInstance
argument_list|()
operator|.
name|showCancel
argument_list|(
name|executionId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

