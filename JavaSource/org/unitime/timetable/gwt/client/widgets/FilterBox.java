begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaSuggestBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaTextBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|HasAriaLabel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtAriaMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtResources
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|aria
operator|.
name|client
operator|.
name|AutocompleteValue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|aria
operator|.
name|client
operator|.
name|Id
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|aria
operator|.
name|client
operator|.
name|Roles
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
operator|.
name|ScheduledCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|shared
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Unit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|BlurEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|BlurHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|FocusEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|FocusHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|HasAllFocusHandlers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|HasAllKeyHandlers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|HasBlurHandlers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|HasClickHandlers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|HasFocusHandlers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|HasKeyDownHandlers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyCodes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyDownEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyDownHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyUpEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyUpHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseDownEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseDownHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|HasValueChangeHandlers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|regexp
operator|.
name|shared
operator|.
name|MatchResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|regexp
operator|.
name|shared
operator|.
name|RegExp
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|safehtml
operator|.
name|shared
operator|.
name|SafeHtmlUtils
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|DOM
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|TakesValue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|IsSerializable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|AbsolutePanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Focusable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasText
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasValue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|MenuBar
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|MenuItem
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|PopupPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestOracle
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|UIObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|FilterBox
extends|extends
name|AbsolutePanel
implements|implements
name|HasValue
argument_list|<
name|String
argument_list|>
implements|,
name|HasValueChangeHandlers
argument_list|<
name|String
argument_list|>
implements|,
name|HasText
implements|,
name|Focusable
implements|,
name|HasAllKeyHandlers
implements|,
name|HasAllFocusHandlers
implements|,
name|HasAriaLabel
block|{
specifier|private
specifier|static
name|GwtAriaMessages
name|ARIA
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtAriaMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|GwtResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|String
index|[]
name|sColors
init|=
operator|new
name|String
index|[]
block|{
literal|"blue"
block|,
literal|"green"
block|,
literal|"orange"
block|,
literal|"yellow"
block|,
literal|"pink"
block|,
literal|"purple"
block|,
literal|"teal"
block|,
literal|"darkpurple"
block|,
literal|"steelblue"
block|,
literal|"lightblue"
block|,
literal|"lightgreen"
block|,
literal|"yellowgreen"
block|,
literal|"redorange"
block|,
literal|"lightbrown"
block|,
literal|"lightpurple"
block|,
literal|"grey"
block|,
literal|"bluegrey"
block|,
literal|"lightteal"
block|,
literal|"yellowgrey"
block|,
literal|"brown"
block|}
decl_stmt|;
specifier|private
name|AriaTextBox
name|iFilter
decl_stmt|;
specifier|private
name|PopupPanelKeepFocus
name|iFilterPopup
decl_stmt|,
name|iSuggestionsPopup
decl_stmt|;
specifier|private
name|boolean
name|iFocus
init|=
literal|false
decl_stmt|;
specifier|private
name|BlurHandler
name|iBlurHandler
decl_stmt|;
specifier|private
name|FocusHandler
name|iFocusHandler
decl_stmt|;
specifier|private
name|SuggestionsProvider
name|iSuggestionsProvider
init|=
operator|new
name|DefaultSuggestionsProvider
argument_list|(
literal|null
argument_list|)
decl_stmt|;
specifier|private
name|SuggestionMenu
name|iSuggestionMenu
decl_stmt|;
specifier|private
name|Parser
name|iParser
init|=
operator|new
name|DefaultParser
argument_list|()
decl_stmt|;
specifier|private
name|Chip2Color
name|iChip2Color
init|=
operator|new
name|DefaultChip2Color
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Filter
argument_list|>
name|iFilters
init|=
operator|new
name|ArrayList
argument_list|<
name|Filter
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Focusable
name|iLastFocusedWidget
init|=
literal|null
decl_stmt|;
specifier|private
name|Image
name|iFilterOpen
decl_stmt|,
name|iFilterClose
decl_stmt|,
name|iFilterClear
decl_stmt|;
specifier|private
name|TakesValue
argument_list|<
name|String
argument_list|>
name|iDefaultValueProvider
init|=
literal|null
decl_stmt|;
specifier|private
name|boolean
name|iShowSuggestionsOnFocus
init|=
literal|false
decl_stmt|;
specifier|public
name|FilterBox
parameter_list|()
block|{
name|setStyleName
argument_list|(
literal|"unitime-FilterBox"
argument_list|)
expr_stmt|;
specifier|final
name|Timer
name|blur
init|=
operator|new
name|Timer
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
if|if
condition|(
operator|!
name|iFocus
condition|)
block|{
name|removeStyleName
argument_list|(
literal|"unitime-FilterBoxFocus"
argument_list|)
expr_stmt|;
if|if
condition|(
name|isFilterPopupShowing
argument_list|()
condition|)
name|hideFilterPopup
argument_list|()
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
name|iFocusHandler
operator|=
operator|new
name|FocusHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFocus
parameter_list|(
name|FocusEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getSource
argument_list|()
operator|!=
literal|null
operator|&&
name|event
operator|.
name|getSource
argument_list|()
operator|instanceof
name|Focusable
condition|)
name|iLastFocusedWidget
operator|=
operator|(
name|Focusable
operator|)
name|event
operator|.
name|getSource
argument_list|()
expr_stmt|;
name|iFocus
operator|=
literal|true
expr_stmt|;
name|addStyleName
argument_list|(
literal|"unitime-FilterBoxFocus"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iShowSuggestionsOnFocus
condition|)
name|refreshSuggestions
argument_list|()
expr_stmt|;
block|}
block|}
expr_stmt|;
name|iBlurHandler
operator|=
operator|new
name|BlurHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onBlur
parameter_list|(
name|BlurEvent
name|event
parameter_list|)
block|{
name|iFocus
operator|=
literal|false
expr_stmt|;
name|iLastFocusedWidget
operator|=
literal|null
expr_stmt|;
name|blur
operator|.
name|schedule
argument_list|(
literal|100
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
name|iFilter
operator|=
operator|new
name|AriaTextBox
argument_list|()
expr_stmt|;
name|iFilter
operator|.
name|setStyleName
argument_list|(
literal|"filter"
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|addKeyDownHandler
argument_list|(
operator|new
name|KeyDownHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyDown
parameter_list|(
name|KeyDownEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|isFilterPopupShowing
argument_list|()
condition|)
block|{
name|hideFilterPopup
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_BACKSPACE
operator|&&
name|iFilter
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|getWidgetCount
argument_list|()
operator|>
literal|4
condition|)
block|{
name|remove
argument_list|(
name|getWidgetCount
argument_list|()
operator|-
literal|5
argument_list|)
expr_stmt|;
name|resizeFilterIfNeeded
argument_list|()
expr_stmt|;
name|setAriaLabel
argument_list|(
name|toAriaString
argument_list|()
argument_list|)
expr_stmt|;
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|FilterBox
operator|.
name|this
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|setStatus
argument_list|(
name|getAriaLabel
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|isSuggestionsShowing
argument_list|()
condition|)
block|{
switch|switch
condition|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
condition|)
block|{
case|case
name|KeyCodes
operator|.
name|KEY_DOWN
case|:
name|iSuggestionMenu
operator|.
name|selectItem
argument_list|(
name|iSuggestionMenu
operator|.
name|getSelectedItemIndex
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|setStatus
argument_list|(
name|ARIA
operator|.
name|onSuggestion
argument_list|(
name|iSuggestionMenu
operator|.
name|getSelectedItemIndex
argument_list|()
operator|+
literal|1
argument_list|,
name|iSuggestionMenu
operator|.
name|getNumItems
argument_list|()
argument_list|,
name|iSuggestionMenu
operator|.
name|getSelectedSuggestion
argument_list|()
operator|.
name|toAriaString
argument_list|(
name|FilterBox
operator|.
name|this
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|KeyCodes
operator|.
name|KEY_UP
case|:
if|if
condition|(
name|iSuggestionMenu
operator|.
name|getSelectedItemIndex
argument_list|()
operator|==
operator|-
literal|1
condition|)
block|{
name|iSuggestionMenu
operator|.
name|selectItem
argument_list|(
name|iSuggestionMenu
operator|.
name|getNumItems
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iSuggestionMenu
operator|.
name|selectItem
argument_list|(
name|iSuggestionMenu
operator|.
name|getSelectedItemIndex
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|setStatus
argument_list|(
name|ARIA
operator|.
name|onSuggestion
argument_list|(
name|iSuggestionMenu
operator|.
name|getSelectedItemIndex
argument_list|()
operator|+
literal|1
argument_list|,
name|iSuggestionMenu
operator|.
name|getNumItems
argument_list|()
argument_list|,
name|iSuggestionMenu
operator|.
name|getSelectedSuggestion
argument_list|()
operator|.
name|toAriaString
argument_list|(
name|FilterBox
operator|.
name|this
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|KeyCodes
operator|.
name|KEY_ENTER
case|:
name|iSuggestionMenu
operator|.
name|executeSelected
argument_list|()
expr_stmt|;
name|hideSuggestions
argument_list|()
expr_stmt|;
break|break;
case|case
name|KeyCodes
operator|.
name|KEY_TAB
case|:
name|hideSuggestions
argument_list|()
expr_stmt|;
break|break;
case|case
name|KeyCodes
operator|.
name|KEY_ESCAPE
case|:
name|hideSuggestions
argument_list|()
expr_stmt|;
break|break;
block|}
switch|switch
condition|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
condition|)
block|{
case|case
name|KeyCodes
operator|.
name|KEY_DOWN
case|:
case|case
name|KeyCodes
operator|.
name|KEY_UP
case|:
case|case
name|KeyCodes
operator|.
name|KEY_ENTER
case|:
case|case
name|KeyCodes
operator|.
name|KEY_ESCAPE
case|:
name|event
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
name|event
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_DOWN
operator|&&
operator|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getAltKey
argument_list|()
operator|||
name|iFilter
operator|.
name|getCursorPos
argument_list|()
operator|==
name|iFilter
operator|.
name|getText
argument_list|()
operator|.
name|length
argument_list|()
operator|)
condition|)
block|{
name|showSuggestions
argument_list|()
expr_stmt|;
name|event
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
name|event
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|addKeyUpHandler
argument_list|(
operator|new
name|KeyUpHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyUp
parameter_list|(
name|KeyUpEvent
name|event
parameter_list|)
block|{
name|refreshSuggestions
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|addFocusHandler
argument_list|(
name|iFocusHandler
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|addBlurHandler
argument_list|(
name|iBlurHandler
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|iFilter
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|setAriaLabel
argument_list|(
name|toAriaString
argument_list|()
argument_list|)
expr_stmt|;
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|FilterBox
operator|.
name|this
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iFilterClear
operator|=
operator|new
name|Image
argument_list|(
name|RESOURCES
operator|.
name|filter_clear
argument_list|()
argument_list|)
expr_stmt|;
name|iFilterClear
operator|.
name|setAltText
argument_list|(
name|MESSAGES
operator|.
name|altClearFilter
argument_list|()
argument_list|)
expr_stmt|;
name|iFilterClear
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|altClearFilter
argument_list|()
argument_list|)
expr_stmt|;
name|iFilterClear
operator|.
name|setStyleName
argument_list|(
literal|"button-image"
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|iFilterClear
argument_list|)
expr_stmt|;
name|iFilterClear
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Roles
operator|.
name|getDocumentRole
argument_list|()
operator|.
name|setAriaHiddenState
argument_list|(
name|iFilterClear
operator|.
name|getElement
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iFilterClear
operator|.
name|isVisible
argument_list|()
operator|&&
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|resizeFilterIfNeeded
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
operator|!
name|iFilterClear
operator|.
name|isVisible
argument_list|()
operator|&&
operator|!
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|resizeFilterIfNeeded
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iFilterOpen
operator|=
operator|new
name|Image
argument_list|(
name|RESOURCES
operator|.
name|filter_open
argument_list|()
argument_list|)
expr_stmt|;
name|iFilterOpen
operator|.
name|setAltText
argument_list|(
name|MESSAGES
operator|.
name|altOpenFilter
argument_list|()
argument_list|)
expr_stmt|;
name|iFilterOpen
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|altOpenFilter
argument_list|()
argument_list|)
expr_stmt|;
name|iFilterOpen
operator|.
name|addStyleName
argument_list|(
literal|"button-image"
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|iFilterOpen
argument_list|)
expr_stmt|;
name|Roles
operator|.
name|getDocumentRole
argument_list|()
operator|.
name|setAriaHiddenState
argument_list|(
name|iFilterOpen
operator|.
name|getElement
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iFilterClose
operator|=
operator|new
name|Image
argument_list|(
name|RESOURCES
operator|.
name|filter_close
argument_list|()
argument_list|)
expr_stmt|;
name|iFilterClose
operator|.
name|setAltText
argument_list|(
name|MESSAGES
operator|.
name|altCloseFilter
argument_list|()
argument_list|)
expr_stmt|;
name|iFilterClose
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|altCloseFilter
argument_list|()
argument_list|)
expr_stmt|;
name|iFilterClose
operator|.
name|addStyleName
argument_list|(
literal|"button-image"
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|iFilterClose
argument_list|)
expr_stmt|;
name|iFilterClose
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Roles
operator|.
name|getDocumentRole
argument_list|()
operator|.
name|setAriaHiddenState
argument_list|(
name|iFilterClose
operator|.
name|getElement
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iFilterPopup
operator|=
operator|new
name|PopupPanelKeepFocus
argument_list|()
expr_stmt|;
name|iFilterPopup
operator|.
name|setStyleName
argument_list|(
literal|"unitime-FilterBoxPopup"
argument_list|)
expr_stmt|;
name|iFilterPopup
operator|.
name|setAutoHideEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iSuggestionMenu
operator|=
operator|new
name|SuggestionMenu
argument_list|()
expr_stmt|;
name|iSuggestionsPopup
operator|=
operator|new
name|PopupPanelKeepFocus
argument_list|()
expr_stmt|;
name|iSuggestionsPopup
operator|.
name|setWidget
argument_list|(
name|iSuggestionMenu
argument_list|)
expr_stmt|;
name|iSuggestionsPopup
operator|.
name|setStyleName
argument_list|(
literal|"unitime-FilterBoxPopup"
argument_list|)
expr_stmt|;
name|sinkEvents
argument_list|(
name|Event
operator|.
name|ONMOUSEDOWN
argument_list|)
expr_stmt|;
name|iSuggestionsPopup
operator|.
name|getElement
argument_list|()
operator|.
name|setAttribute
argument_list|(
literal|"id"
argument_list|,
name|DOM
operator|.
name|createUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|Roles
operator|.
name|getTextboxRole
argument_list|()
operator|.
name|setAriaOwnsProperty
argument_list|(
name|iFilter
operator|.
name|getElement
argument_list|()
argument_list|,
name|Id
operator|.
name|of
argument_list|(
name|iSuggestionsPopup
operator|.
name|getElement
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Roles
operator|.
name|getTextboxRole
argument_list|()
operator|.
name|setAriaAutocompleteProperty
argument_list|(
name|iFilter
operator|.
name|getElement
argument_list|()
argument_list|,
name|AutocompleteValue
operator|.
name|NONE
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setSuggestionsProvider
parameter_list|(
name|SuggestionsProvider
name|suggestionsProvider
parameter_list|)
block|{
name|iSuggestionsProvider
operator|=
operator|new
name|DefaultSuggestionsProvider
argument_list|(
name|suggestionsProvider
argument_list|)
expr_stmt|;
block|}
specifier|public
name|SuggestionsProvider
name|getSuggestionsProvider
parameter_list|()
block|{
return|return
name|iSuggestionsProvider
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setWidth
parameter_list|(
name|String
name|width
parameter_list|)
block|{
name|super
operator|.
name|setWidth
argument_list|(
name|width
argument_list|)
expr_stmt|;
name|iSuggestionsPopup
operator|.
name|setWidth
argument_list|(
name|width
argument_list|)
expr_stmt|;
name|iFilterPopup
operator|.
name|setWidth
argument_list|(
name|width
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setParser
parameter_list|(
name|Parser
name|parser
parameter_list|)
block|{
name|iParser
operator|=
name|parser
expr_stmt|;
block|}
specifier|public
name|boolean
name|isSuggestionsShowing
parameter_list|()
block|{
return|return
name|iSuggestionsPopup
operator|.
name|isShowing
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isFilterPopupShowing
parameter_list|()
block|{
return|return
name|iFilterPopup
operator|.
name|isShowing
argument_list|()
return|;
block|}
specifier|public
name|void
name|hideSuggestions
parameter_list|()
block|{
name|iSuggestionsPopup
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|hideFilterPopup
parameter_list|()
block|{
name|iFilterPopup
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iFilterOpen
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iFilterClose
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|iLastFocusedWidget
operator|!=
literal|null
operator|&&
operator|!
name|iLastFocusedWidget
operator|.
name|equals
argument_list|(
name|iFilter
argument_list|)
condition|)
name|iFilter
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addFilter
parameter_list|(
name|Filter
name|filter
parameter_list|)
block|{
name|iFilters
operator|.
name|add
argument_list|(
name|filter
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Filter
argument_list|>
name|getFilters
parameter_list|()
block|{
return|return
name|iFilters
return|;
block|}
specifier|public
name|Filter
name|getFilter
parameter_list|(
name|String
name|command
parameter_list|)
block|{
for|for
control|(
name|Filter
name|filter
range|:
name|getFilters
argument_list|()
control|)
if|if
condition|(
name|filter
operator|.
name|getCommand
argument_list|()
operator|.
name|equals
argument_list|(
name|command
argument_list|)
condition|)
return|return
name|filter
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|showFilterPopup
parameter_list|()
block|{
name|iFilterPopup
operator|.
name|setWidget
argument_list|(
name|createFilterPopup
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iFilterPopup
operator|.
name|isShowing
argument_list|()
condition|)
block|{
name|iFilterPopup
operator|.
name|moveRelativeTo
argument_list|(
name|this
argument_list|)
expr_stmt|;
if|if
condition|(
name|iLastFocusedWidget
operator|!=
literal|null
condition|)
name|iLastFocusedWidget
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iFilterPopup
operator|.
name|showRelativeTo
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|iFilterOpen
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iFilterClose
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|Widget
name|createFilterPopup
parameter_list|()
block|{
specifier|final
name|AbsolutePanel
name|popupPanel
init|=
operator|new
name|AbsolutePanel
argument_list|()
decl_stmt|;
name|popupPanel
operator|.
name|addStyleName
argument_list|(
literal|"panel"
argument_list|)
expr_stmt|;
for|for
control|(
specifier|final
name|Filter
name|filter
range|:
name|iFilters
control|)
block|{
specifier|final
name|AbsolutePanel
name|filterPanel
init|=
operator|new
name|AbsolutePanel
argument_list|()
decl_stmt|;
name|filterPanel
operator|.
name|addStyleName
argument_list|(
literal|"filter"
argument_list|)
expr_stmt|;
name|filterPanel
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|popupPanel
operator|.
name|add
argument_list|(
name|filterPanel
argument_list|)
expr_stmt|;
name|filter
operator|.
name|getPopupWidget
argument_list|(
name|this
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Widget
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
if|if
condition|(
name|filter
operator|.
name|getLabel
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|filter
operator|.
name|getLabel
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Label
name|label
init|=
operator|new
name|Label
argument_list|(
name|filter
operator|.
name|getLabel
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|label
operator|.
name|addStyleName
argument_list|(
literal|"command"
argument_list|)
expr_stmt|;
name|filterPanel
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|filter
operator|.
name|getCommand
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|Label
name|label
init|=
operator|new
name|Label
argument_list|(
name|filter
operator|.
name|getCommand
argument_list|()
operator|.
name|replace
argument_list|(
literal|'_'
argument_list|,
literal|' '
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|label
operator|.
name|addStyleName
argument_list|(
literal|"command"
argument_list|)
expr_stmt|;
name|filterPanel
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
block|}
name|Label
name|error
init|=
operator|new
name|Label
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|error
operator|.
name|addStyleName
argument_list|(
literal|"error"
argument_list|)
expr_stmt|;
name|filterPanel
operator|.
name|add
argument_list|(
name|error
argument_list|)
expr_stmt|;
name|filterPanel
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Widget
name|widget
parameter_list|)
block|{
if|if
condition|(
name|widget
operator|==
literal|null
condition|)
return|return;
name|filterPanel
operator|.
name|add
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|filterPanel
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iDefaultValueProvider
operator|!=
literal|null
condition|)
block|{
name|boolean
name|selected
init|=
name|iDefaultValueProvider
operator|.
name|getValue
argument_list|()
operator|.
name|equals
argument_list|(
name|getValue
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|Image
name|star
init|=
operator|new
name|Image
argument_list|(
name|selected
condition|?
name|RESOURCES
operator|.
name|starSelected
argument_list|()
else|:
name|RESOURCES
operator|.
name|star
argument_list|()
argument_list|)
decl_stmt|;
name|star
operator|.
name|setAltText
argument_list|(
name|selected
condition|?
name|MESSAGES
operator|.
name|altStarFilterSelected
argument_list|()
else|:
name|MESSAGES
operator|.
name|altStarFilter
argument_list|()
argument_list|)
expr_stmt|;
name|star
operator|.
name|setTitle
argument_list|(
name|selected
condition|?
name|MESSAGES
operator|.
name|altStarFilterSelected
argument_list|()
else|:
name|MESSAGES
operator|.
name|altStarFilter
argument_list|()
argument_list|)
expr_stmt|;
name|star
operator|.
name|addStyleName
argument_list|(
literal|"button-star"
argument_list|)
expr_stmt|;
name|star
operator|.
name|addMouseDownHandler
argument_list|(
operator|new
name|MouseDownHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseDown
parameter_list|(
name|MouseDownEvent
name|event
parameter_list|)
block|{
name|iDefaultValueProvider
operator|.
name|setValue
argument_list|(
name|getValue
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|star
operator|.
name|setResource
argument_list|(
name|RESOURCES
operator|.
name|starSelected
argument_list|()
argument_list|)
expr_stmt|;
name|star
operator|.
name|setAltText
argument_list|(
name|MESSAGES
operator|.
name|altStarFilterSelected
argument_list|()
argument_list|)
expr_stmt|;
name|star
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|altStarFilterSelected
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|popupPanel
operator|.
name|add
argument_list|(
name|star
argument_list|)
expr_stmt|;
block|}
return|return
name|popupPanel
return|;
block|}
specifier|private
name|String
name|iLastValue
init|=
literal|null
decl_stmt|;
specifier|public
name|void
name|showSuggestions
parameter_list|()
block|{
name|iLastValue
operator|=
literal|null
expr_stmt|;
name|refreshSuggestions
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|refreshSuggestions
parameter_list|()
block|{
if|if
condition|(
name|getSuggestionsProvider
argument_list|()
operator|==
literal|null
condition|)
return|return;
if|if
condition|(
name|isFilterPopupShowing
argument_list|()
condition|)
return|return;
name|String
name|value
init|=
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|value
operator|.
name|equals
argument_list|(
name|iLastValue
argument_list|)
condition|)
return|return;
name|iLastValue
operator|=
name|value
expr_stmt|;
specifier|final
name|String
name|query
init|=
name|iFilter
operator|.
name|getText
argument_list|()
decl_stmt|;
name|getSuggestionsProvider
argument_list|()
operator|.
name|getSuggestions
argument_list|(
name|getChips
argument_list|(
literal|null
argument_list|)
argument_list|,
name|query
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|Suggestion
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
if|if
condition|(
name|iSuggestionsPopup
operator|.
name|isShowing
argument_list|()
condition|)
name|iSuggestionsPopup
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Collection
argument_list|<
name|Suggestion
argument_list|>
name|result
parameter_list|)
block|{
if|if
condition|(
operator|!
name|query
operator|.
name|equals
argument_list|(
name|iFilter
operator|.
name|getText
argument_list|()
argument_list|)
condition|)
return|return;
comment|// old request
if|if
condition|(
name|result
operator|!=
literal|null
operator|&&
operator|!
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|updateSuggestions
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|iSuggestionsPopup
operator|.
name|showRelativeTo
argument_list|(
name|FilterBox
operator|.
name|this
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|iSuggestionsPopup
operator|.
name|isShowing
argument_list|()
condition|)
name|iSuggestionsPopup
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|updateSuggestions
parameter_list|(
name|Collection
argument_list|<
name|Suggestion
argument_list|>
name|suggestions
parameter_list|)
block|{
name|iSuggestionMenu
operator|.
name|clearItems
argument_list|()
expr_stmt|;
name|int
name|selected
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
specifier|final
name|Suggestion
name|suggestion
range|:
name|suggestions
control|)
block|{
name|SuggestionMenuItem
name|item
init|=
operator|new
name|SuggestionMenuItem
argument_list|(
name|suggestion
argument_list|)
decl_stmt|;
if|if
condition|(
name|selected
operator|<
literal|0
operator|&&
name|suggestion
operator|.
name|isSelected
argument_list|()
condition|)
name|selected
operator|=
name|iSuggestionMenu
operator|.
name|getNumItems
argument_list|()
expr_stmt|;
name|iSuggestionMenu
operator|.
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
if|if
condition|(
name|iSuggestionMenu
operator|.
name|getNumItems
argument_list|()
operator|==
literal|20
condition|)
break|break;
block|}
if|if
condition|(
name|selected
operator|>=
literal|0
condition|)
name|iSuggestionMenu
operator|.
name|selectItem
argument_list|(
name|selected
argument_list|)
expr_stmt|;
else|else
name|iSuggestionMenu
operator|.
name|selectItem
argument_list|(
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|iSuggestionMenu
operator|.
name|getNumItems
argument_list|()
operator|==
literal|1
condition|)
block|{
name|setStatus
argument_list|(
name|ARIA
operator|.
name|showingOneSuggestion
argument_list|(
name|iSuggestionMenu
operator|.
name|getSelectedSuggestion
argument_list|()
operator|.
name|toAriaString
argument_list|(
name|this
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iSuggestionMenu
operator|.
name|getSelectedItemIndex
argument_list|()
operator|==
literal|0
condition|)
block|{
name|setStatus
argument_list|(
name|ARIA
operator|.
name|showingMultipleSuggestions
argument_list|(
name|iSuggestionMenu
operator|.
name|getNumItems
argument_list|()
argument_list|,
name|toAriaString
argument_list|()
argument_list|,
name|iSuggestionMenu
operator|.
name|getSelectedSuggestion
argument_list|()
operator|.
name|toAriaString
argument_list|(
name|this
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setStatus
argument_list|(
name|ARIA
operator|.
name|onSuggestion
argument_list|(
name|iSuggestionMenu
operator|.
name|getSelectedItemIndex
argument_list|()
operator|+
literal|1
argument_list|,
name|iSuggestionMenu
operator|.
name|getNumItems
argument_list|()
argument_list|,
name|iSuggestionMenu
operator|.
name|getSelectedSuggestion
argument_list|()
operator|.
name|toAriaString
argument_list|(
name|this
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onBrowserEvent
parameter_list|(
name|Event
name|event
parameter_list|)
block|{
name|Element
name|target
init|=
name|DOM
operator|.
name|eventGetTarget
argument_list|(
name|event
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|DOM
operator|.
name|eventGetType
argument_list|(
name|event
argument_list|)
condition|)
block|{
case|case
name|Event
operator|.
name|ONMOUSEDOWN
case|:
name|boolean
name|open
init|=
name|iFilterOpen
operator|.
name|getElement
argument_list|()
operator|.
name|equals
argument_list|(
name|target
argument_list|)
decl_stmt|;
name|boolean
name|close
init|=
name|iFilterClose
operator|.
name|getElement
argument_list|()
operator|.
name|equals
argument_list|(
name|target
argument_list|)
decl_stmt|;
name|boolean
name|clear
init|=
name|iFilterClear
operator|.
name|getElement
argument_list|()
operator|.
name|equals
argument_list|(
name|target
argument_list|)
decl_stmt|;
name|boolean
name|filter
init|=
name|iFilter
operator|.
name|getElement
argument_list|()
operator|.
name|equals
argument_list|(
name|target
argument_list|)
decl_stmt|;
if|if
condition|(
name|isFilterPopupShowing
argument_list|()
operator|||
name|close
condition|)
block|{
name|hideFilterPopup
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|open
condition|)
block|{
name|hideSuggestions
argument_list|()
expr_stmt|;
name|showFilterPopup
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|clear
condition|)
block|{
name|iFilter
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|removeAllChips
argument_list|()
expr_stmt|;
name|setAriaLabel
argument_list|(
name|toAriaString
argument_list|()
argument_list|)
expr_stmt|;
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|FilterBox
operator|.
name|this
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|filter
condition|)
block|{
name|event
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
name|event
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|iFilter
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|onAttach
parameter_list|()
block|{
name|super
operator|.
name|onAttach
argument_list|()
expr_stmt|;
name|resizeFilterIfNeeded
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|resizeFilterIfNeeded
parameter_list|()
block|{
if|if
condition|(
operator|!
name|isAttached
argument_list|()
condition|)
return|return;
name|iFilterClear
operator|.
name|setVisible
argument_list|(
operator|!
name|iFilter
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|||
name|getWidgetCount
argument_list|()
operator|>
literal|4
argument_list|)
expr_stmt|;
name|int
name|buttonWidth
init|=
operator|(
name|isFilterPopupShowing
argument_list|()
condition|?
name|iFilterClose
else|:
name|iFilterOpen
operator|)
operator|.
name|getElement
argument_list|()
operator|.
name|getOffsetWidth
argument_list|()
operator|+
name|iFilterClear
operator|.
name|getElement
argument_list|()
operator|.
name|getOffsetWidth
argument_list|()
operator|+
literal|8
decl_stmt|;
if|if
condition|(
name|getWidgetCount
argument_list|()
operator|>
literal|4
condition|)
block|{
name|ChipPanel
name|last
init|=
operator|(
name|ChipPanel
operator|)
name|getWidget
argument_list|(
name|getWidgetCount
argument_list|()
operator|-
literal|5
argument_list|)
decl_stmt|;
name|int
name|width
init|=
name|getAbsoluteLeft
argument_list|()
operator|+
name|getOffsetWidth
argument_list|()
operator|-
name|last
operator|.
name|getAbsoluteLeft
argument_list|()
operator|-
name|last
operator|.
name|getOffsetWidth
argument_list|()
operator|-
name|buttonWidth
decl_stmt|;
if|if
condition|(
name|width
operator|<
literal|100
condition|)
name|width
operator|=
name|getElement
argument_list|()
operator|.
name|getClientWidth
argument_list|()
operator|-
name|buttonWidth
expr_stmt|;
name|iFilter
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setWidth
argument_list|(
name|width
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iFilter
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setWidth
argument_list|(
name|getElement
argument_list|()
operator|.
name|getClientWidth
argument_list|()
operator|-
name|buttonWidth
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isSuggestionsShowing
argument_list|()
condition|)
name|iSuggestionsPopup
operator|.
name|moveRelativeTo
argument_list|(
name|this
argument_list|)
expr_stmt|;
if|if
condition|(
name|isFilterPopupShowing
argument_list|()
condition|)
name|iFilterPopup
operator|.
name|moveRelativeTo
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addChip
parameter_list|(
name|Chip
name|chip
parameter_list|,
name|boolean
name|fireEvents
parameter_list|)
block|{
specifier|final
name|ChipPanel
name|panel
init|=
operator|new
name|ChipPanel
argument_list|(
name|chip
argument_list|,
name|iChip2Color
operator|.
name|getColor
argument_list|(
name|chip
operator|.
name|getCommand
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|panel
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|remove
argument_list|(
name|panel
argument_list|)
expr_stmt|;
name|resizeFilterIfNeeded
argument_list|()
expr_stmt|;
name|setAriaLabel
argument_list|(
name|toAriaString
argument_list|()
argument_list|)
expr_stmt|;
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|FilterBox
operator|.
name|this
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|insert
argument_list|(
name|panel
argument_list|,
name|getWidgetCount
argument_list|()
operator|-
literal|4
argument_list|)
expr_stmt|;
name|resizeFilterIfNeeded
argument_list|()
expr_stmt|;
name|setAriaLabel
argument_list|(
name|toAriaString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|fireEvents
condition|)
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|this
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|removeChip
parameter_list|(
name|Chip
name|chip
parameter_list|,
name|boolean
name|fireEvents
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getWidgetCount
argument_list|()
operator|-
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|ChipPanel
name|panel
init|=
operator|(
name|ChipPanel
operator|)
name|getWidget
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|panel
operator|.
name|getChip
argument_list|()
operator|.
name|equals
argument_list|(
name|chip
argument_list|)
condition|)
block|{
name|remove
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|resizeFilterIfNeeded
argument_list|()
expr_stmt|;
name|setAriaLabel
argument_list|(
name|toAriaString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|fireEvents
condition|)
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|FilterBox
operator|.
name|this
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|hasChip
parameter_list|(
name|Chip
name|chip
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getWidgetCount
argument_list|()
operator|-
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|ChipPanel
name|panel
init|=
operator|(
name|ChipPanel
operator|)
name|getWidget
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|panel
operator|.
name|getChip
argument_list|()
operator|.
name|equals
argument_list|(
name|chip
argument_list|)
condition|)
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|Chip
name|getChip
parameter_list|(
name|String
name|command
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getWidgetCount
argument_list|()
operator|-
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|ChipPanel
name|panel
init|=
operator|(
name|ChipPanel
operator|)
name|getWidget
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|panel
operator|.
name|getChip
argument_list|()
operator|.
name|getCommand
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|command
argument_list|)
condition|)
return|return
name|panel
operator|.
name|getChip
argument_list|()
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|List
argument_list|<
name|Chip
argument_list|>
name|getChips
parameter_list|(
name|String
name|command
parameter_list|)
block|{
name|List
argument_list|<
name|Chip
argument_list|>
name|chips
init|=
operator|new
name|ArrayList
argument_list|<
name|Chip
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getWidgetCount
argument_list|()
operator|-
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|ChipPanel
name|panel
init|=
operator|(
name|ChipPanel
operator|)
name|getWidget
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|command
operator|==
literal|null
operator|||
name|panel
operator|.
name|getChip
argument_list|()
operator|.
name|getCommand
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|command
argument_list|)
condition|)
block|{
name|chips
operator|.
name|add
argument_list|(
name|panel
operator|.
name|getChip
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|chips
return|;
block|}
specifier|public
name|void
name|fixLabel
parameter_list|(
name|Chip
name|chip
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getWidgetCount
argument_list|()
operator|-
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|ChipPanel
name|panel
init|=
operator|(
name|ChipPanel
operator|)
name|getWidget
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|panel
operator|.
name|getChip
argument_list|()
operator|.
name|equals
argument_list|(
name|chip
argument_list|)
condition|)
block|{
name|panel
operator|.
name|setText
argument_list|(
name|chip
operator|.
name|getTranslatedValue
argument_list|()
argument_list|)
expr_stmt|;
name|resizeFilterIfNeeded
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|removeAllChips
parameter_list|()
block|{
while|while
condition|(
name|getWidgetCount
argument_list|()
operator|>
literal|4
condition|)
name|remove
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|resizeFilterIfNeeded
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|ChipPanel
extends|extends
name|AbsolutePanel
implements|implements
name|HasClickHandlers
implements|,
name|HasText
block|{
specifier|private
name|Chip
name|iChip
decl_stmt|;
specifier|private
name|Label
name|iLabel
decl_stmt|;
specifier|private
name|HTML
name|iButton
decl_stmt|;
specifier|public
name|ChipPanel
parameter_list|(
name|Chip
name|chip
parameter_list|,
name|String
name|color
parameter_list|)
block|{
name|iChip
operator|=
name|chip
expr_stmt|;
name|setStyleName
argument_list|(
literal|"chip"
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
name|color
argument_list|)
expr_stmt|;
name|iLabel
operator|=
operator|new
name|Label
argument_list|(
name|chip
operator|.
name|getTranslatedValue
argument_list|()
argument_list|)
expr_stmt|;
name|iLabel
operator|.
name|setStyleName
argument_list|(
literal|"text"
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|iLabel
argument_list|)
expr_stmt|;
name|iButton
operator|=
operator|new
name|HTML
argument_list|(
literal|"&times;"
argument_list|)
expr_stmt|;
name|iButton
operator|.
name|setStyleName
argument_list|(
literal|"button"
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|iButton
argument_list|)
expr_stmt|;
name|setTitle
argument_list|(
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Roles
operator|.
name|getDocumentRole
argument_list|()
operator|.
name|setAriaHiddenState
argument_list|(
name|getElement
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addClickHandler
parameter_list|(
name|ClickHandler
name|handler
parameter_list|)
block|{
return|return
name|iButton
operator|.
name|addClickHandler
argument_list|(
name|handler
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getText
parameter_list|()
block|{
return|return
name|iLabel
operator|.
name|getText
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setText
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|iLabel
operator|.
name|setText
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Chip
name|getChip
parameter_list|()
block|{
return|return
name|iChip
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getChip
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|String
name|toAriaString
parameter_list|()
block|{
return|return
name|getChip
argument_list|()
operator|.
name|toAriaString
argument_list|()
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|getValue
parameter_list|()
block|{
name|String
name|ret
init|=
literal|""
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getWidgetCount
argument_list|()
operator|-
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|ChipPanel
name|chip
init|=
operator|(
name|ChipPanel
operator|)
name|getWidget
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|ret
operator|+=
name|chip
operator|.
name|toString
argument_list|()
operator|+
literal|" "
expr_stmt|;
block|}
return|return
name|ret
operator|+
name|iFilter
operator|.
name|getText
argument_list|()
return|;
block|}
specifier|public
name|String
name|toAriaString
parameter_list|()
block|{
name|String
name|ret
init|=
literal|""
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getWidgetCount
argument_list|()
operator|-
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|ChipPanel
name|chip
init|=
operator|(
name|ChipPanel
operator|)
name|getWidget
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|ret
operator|.
name|isEmpty
argument_list|()
condition|)
name|ret
operator|+=
literal|", "
expr_stmt|;
name|ret
operator|+=
name|chip
operator|.
name|toAriaString
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|iFilter
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|ret
operator|.
name|isEmpty
argument_list|()
condition|)
name|ret
operator|+=
literal|", "
expr_stmt|;
name|ret
operator|+=
name|iFilter
operator|.
name|getText
argument_list|()
expr_stmt|;
block|}
return|return
name|ret
operator|.
name|isEmpty
argument_list|()
condition|?
name|ARIA
operator|.
name|emptyFilter
argument_list|()
else|:
name|ret
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|setValue
argument_list|(
name|text
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|String
name|text
parameter_list|,
specifier|final
name|boolean
name|fireEvents
parameter_list|)
block|{
name|removeAllChips
argument_list|()
expr_stmt|;
name|iParser
operator|.
name|parse
argument_list|(
name|text
argument_list|,
name|getFilters
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Parser
operator|.
name|Results
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Parser
operator|.
name|Results
name|result
parameter_list|)
block|{
for|for
control|(
name|Chip
name|chip
range|:
name|result
operator|.
name|getChips
argument_list|()
control|)
name|addChip
argument_list|(
name|chip
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|setText
argument_list|(
name|result
operator|.
name|getFilter
argument_list|()
argument_list|)
expr_stmt|;
name|resizeFilterIfNeeded
argument_list|()
expr_stmt|;
name|setAriaLabel
argument_list|(
name|toAriaString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|fireEvents
condition|)
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|FilterBox
operator|.
name|this
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getText
parameter_list|()
block|{
return|return
name|iFilter
operator|.
name|getText
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setText
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|iFilter
operator|.
name|setText
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addValueChangeHandler
parameter_list|(
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|ValueChangeEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
class|class
name|Chip
implements|implements
name|IsSerializable
block|{
specifier|private
name|String
name|iCommand
decl_stmt|,
name|iValue
decl_stmt|,
name|iLabel
decl_stmt|,
name|iHint
decl_stmt|;
specifier|private
name|String
name|iTranslatedCommand
decl_stmt|,
name|iTranslatedValue
decl_stmt|;
specifier|private
name|Integer
name|iCount
decl_stmt|;
specifier|public
name|Chip
parameter_list|()
block|{
block|}
specifier|public
name|Chip
parameter_list|(
name|String
name|command
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|iCommand
operator|=
name|command
expr_stmt|;
name|iValue
operator|=
name|value
expr_stmt|;
block|}
specifier|public
name|Chip
name|withCount
parameter_list|(
name|Integer
name|count
parameter_list|)
block|{
name|iCount
operator|=
name|count
expr_stmt|;
if|if
condition|(
name|iCount
operator|!=
literal|null
operator|&&
name|iCount
operator|<=
literal|0
condition|)
name|iCount
operator|=
literal|null
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Chip
name|withTranslatedCommand
parameter_list|(
name|String
name|translation
parameter_list|)
block|{
name|iTranslatedCommand
operator|=
name|translation
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Chip
name|withTranslatedValue
parameter_list|(
name|String
name|translation
parameter_list|)
block|{
name|iTranslatedValue
operator|=
name|translation
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Chip
name|withToolTip
parameter_list|(
name|String
name|hint
parameter_list|)
block|{
name|iHint
operator|=
name|hint
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Chip
name|withLabel
parameter_list|(
name|String
name|label
parameter_list|)
block|{
name|iLabel
operator|=
name|label
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|String
name|getCommand
parameter_list|()
block|{
return|return
name|iCommand
return|;
block|}
specifier|public
name|String
name|getTranslatedCommand
parameter_list|()
block|{
return|return
name|iTranslatedCommand
operator|==
literal|null
operator|||
name|iTranslatedCommand
operator|.
name|isEmpty
argument_list|()
condition|?
name|iCommand
operator|.
name|replace
argument_list|(
literal|'_'
argument_list|,
literal|' '
argument_list|)
else|:
name|iTranslatedCommand
return|;
block|}
specifier|public
name|String
name|getValue
parameter_list|()
block|{
return|return
name|iValue
return|;
block|}
specifier|public
name|String
name|getTranslatedValue
parameter_list|()
block|{
return|return
name|iTranslatedValue
operator|==
literal|null
operator|||
name|iTranslatedValue
operator|.
name|isEmpty
argument_list|()
condition|?
name|iValue
else|:
name|iTranslatedValue
return|;
block|}
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
name|iLabel
operator|==
literal|null
operator|||
name|iLabel
operator|.
name|isEmpty
argument_list|()
condition|?
name|iTranslatedValue
operator|==
literal|null
operator|||
name|iTranslatedValue
operator|.
name|isEmpty
argument_list|()
condition|?
name|iValue
else|:
name|iTranslatedValue
else|:
name|iLabel
return|;
block|}
specifier|public
name|boolean
name|hasToolTip
parameter_list|()
block|{
return|return
name|iHint
operator|!=
literal|null
operator|&&
operator|!
name|iHint
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getToolTip
parameter_list|()
block|{
return|return
name|iHint
return|;
block|}
specifier|public
name|boolean
name|hasCount
parameter_list|()
block|{
return|return
name|iCount
operator|!=
literal|null
operator|&&
name|iCount
operator|>
literal|0
return|;
block|}
specifier|public
name|Integer
name|getCount
parameter_list|()
block|{
return|return
name|iCount
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
literal|null
operator|||
operator|!
operator|(
name|other
operator|instanceof
name|Chip
operator|)
condition|)
return|return
literal|false
return|;
name|Chip
name|chip
init|=
operator|(
name|Chip
operator|)
name|other
decl_stmt|;
return|return
operator|(
name|chip
operator|.
name|getCommand
argument_list|()
operator|==
literal|null
operator|||
name|chip
operator|.
name|getCommand
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|getCommand
argument_list|()
argument_list|)
operator|)
operator|&&
operator|(
name|chip
operator|.
name|getValue
argument_list|()
operator|==
literal|null
operator|||
name|chip
operator|.
name|getValue
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|getValue
argument_list|()
argument_list|)
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getCommand
argument_list|()
operator|+
literal|":"
operator|+
operator|(
name|getValue
argument_list|()
operator|.
name|contains
argument_list|(
literal|" "
argument_list|)
condition|?
literal|"\""
operator|+
name|getValue
argument_list|()
operator|+
literal|"\""
else|:
name|getValue
argument_list|()
operator|)
return|;
block|}
specifier|public
name|String
name|toAriaString
parameter_list|()
block|{
return|return
name|getTranslatedCommand
argument_list|()
operator|+
literal|" "
operator|+
name|getTranslatedValue
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|startsWith
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|String
name|t
init|=
name|text
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
if|if
condition|(
name|iValue
operator|!=
literal|null
operator|&&
name|iValue
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|t
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|iLabel
operator|!=
literal|null
operator|&&
name|iLabel
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|t
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|iTranslatedValue
operator|!=
literal|null
operator|&&
name|iTranslatedValue
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|t
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|iCommand
operator|!=
literal|null
operator|&&
name|t
operator|.
name|startsWith
argument_list|(
name|iCommand
operator|.
name|toLowerCase
argument_list|()
operator|+
literal|" "
argument_list|)
condition|)
block|{
if|if
condition|(
name|iValue
operator|!=
literal|null
operator|&&
operator|(
name|iCommand
operator|+
literal|" "
operator|+
name|iValue
operator|)
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|t
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|iLabel
operator|!=
literal|null
operator|&&
operator|(
name|iCommand
operator|+
literal|" "
operator|+
name|iLabel
operator|)
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|t
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|iTranslatedValue
operator|!=
literal|null
operator|&&
operator|(
name|iCommand
operator|+
literal|" "
operator|+
name|iTranslatedValue
operator|)
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|t
argument_list|)
condition|)
return|return
literal|true
return|;
block|}
if|if
condition|(
name|iCommand
operator|!=
literal|null
operator|&&
name|t
operator|.
name|startsWith
argument_list|(
name|iCommand
operator|.
name|toLowerCase
argument_list|()
operator|+
literal|":"
argument_list|)
condition|)
block|{
if|if
condition|(
name|iValue
operator|!=
literal|null
operator|&&
operator|(
name|iCommand
operator|+
literal|":"
operator|+
name|iValue
operator|)
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|t
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|iLabel
operator|!=
literal|null
operator|&&
operator|(
name|iCommand
operator|+
literal|":"
operator|+
name|iLabel
operator|)
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|t
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|iTranslatedValue
operator|!=
literal|null
operator|&&
operator|(
name|iCommand
operator|+
literal|":"
operator|+
name|iTranslatedValue
operator|)
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|t
argument_list|)
condition|)
return|return
literal|true
return|;
block|}
if|if
condition|(
name|iTranslatedCommand
operator|!=
literal|null
operator|&&
name|t
operator|.
name|startsWith
argument_list|(
name|iTranslatedCommand
operator|.
name|toLowerCase
argument_list|()
operator|+
literal|" "
argument_list|)
condition|)
block|{
if|if
condition|(
name|iValue
operator|!=
literal|null
operator|&&
operator|(
name|iTranslatedCommand
operator|+
literal|" "
operator|+
name|iValue
operator|)
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|t
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|iLabel
operator|!=
literal|null
operator|&&
operator|(
name|iTranslatedCommand
operator|+
literal|" "
operator|+
name|iLabel
operator|)
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|t
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|iTranslatedValue
operator|!=
literal|null
operator|&&
operator|(
name|iTranslatedCommand
operator|+
literal|" "
operator|+
name|iTranslatedValue
operator|)
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|t
argument_list|)
condition|)
return|return
literal|true
return|;
block|}
if|if
condition|(
name|iTranslatedCommand
operator|!=
literal|null
operator|&&
name|t
operator|.
name|startsWith
argument_list|(
name|iTranslatedCommand
operator|.
name|toLowerCase
argument_list|()
operator|+
literal|":"
argument_list|)
condition|)
block|{
if|if
condition|(
name|iValue
operator|!=
literal|null
operator|&&
operator|(
name|iTranslatedCommand
operator|+
literal|":"
operator|+
name|iValue
operator|)
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|t
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|iLabel
operator|!=
literal|null
operator|&&
operator|(
name|iTranslatedCommand
operator|+
literal|":"
operator|+
name|iLabel
operator|)
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|t
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|iTranslatedValue
operator|!=
literal|null
operator|&&
operator|(
name|iTranslatedCommand
operator|+
literal|":"
operator|+
name|iTranslatedValue
operator|)
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|t
argument_list|)
condition|)
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
block|}
specifier|public
interface|interface
name|Filter
block|{
specifier|public
name|String
name|getCommand
parameter_list|()
function_decl|;
specifier|public
name|String
name|getLabel
parameter_list|()
function_decl|;
specifier|public
name|void
name|validate
parameter_list|(
name|String
name|text
parameter_list|,
name|AsyncCallback
argument_list|<
name|Chip
argument_list|>
name|callback
parameter_list|)
function_decl|;
specifier|public
name|void
name|getSuggestions
parameter_list|(
name|List
argument_list|<
name|Chip
argument_list|>
name|chips
parameter_list|,
name|String
name|text
parameter_list|,
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|Suggestion
argument_list|>
argument_list|>
name|callback
parameter_list|)
function_decl|;
specifier|public
name|void
name|getPopupWidget
parameter_list|(
name|FilterBox
name|box
parameter_list|,
name|AsyncCallback
argument_list|<
name|Widget
argument_list|>
name|callback
parameter_list|)
function_decl|;
block|}
specifier|public
specifier|static
interface|interface
name|Parser
block|{
specifier|public
name|void
name|parse
parameter_list|(
name|String
name|text
parameter_list|,
name|Collection
argument_list|<
name|Filter
argument_list|>
name|filters
parameter_list|,
name|AsyncCallback
argument_list|<
name|Parser
operator|.
name|Results
argument_list|>
name|callback
parameter_list|)
function_decl|;
specifier|public
specifier|static
class|class
name|Results
implements|implements
name|IsSerializable
block|{
specifier|private
name|Collection
argument_list|<
name|Chip
argument_list|>
name|iChips
init|=
operator|new
name|ArrayList
argument_list|<
name|Chip
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|String
name|iFilter
init|=
literal|null
decl_stmt|;
specifier|public
name|Results
parameter_list|(
name|String
name|filter
parameter_list|,
name|Collection
argument_list|<
name|Chip
argument_list|>
name|chips
parameter_list|)
block|{
name|iChips
operator|=
name|chips
expr_stmt|;
name|iFilter
operator|=
name|filter
expr_stmt|;
block|}
specifier|public
name|Collection
argument_list|<
name|Chip
argument_list|>
name|getChips
parameter_list|()
block|{
return|return
name|iChips
return|;
block|}
specifier|public
name|String
name|getFilter
parameter_list|()
block|{
return|return
name|iFilter
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"ParserResults{chips="
operator|+
name|getChips
argument_list|()
operator|+
literal|", filter="
operator|+
name|getFilter
argument_list|()
operator|+
literal|"}"
return|;
block|}
block|}
block|}
specifier|public
specifier|static
class|class
name|DefaultParser
implements|implements
name|Parser
block|{
specifier|private
specifier|static
name|RegExp
index|[]
name|sRegExps
init|=
operator|new
name|RegExp
index|[]
block|{
name|RegExp
operator|.
name|compile
argument_list|(
literal|"^(\\w+):\"([^\"]*)\"(.*)$"
argument_list|,
literal|"i"
argument_list|)
block|,
name|RegExp
operator|.
name|compile
argument_list|(
literal|"^(\\w+):([^ ]*) (.*)$"
argument_list|,
literal|"i"
argument_list|)
block|,
name|RegExp
operator|.
name|compile
argument_list|(
literal|"^(\\w+):([^ ]*)$"
argument_list|,
literal|"i"
argument_list|)
block|}
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|parse
parameter_list|(
name|String
name|text
parameter_list|,
name|Collection
argument_list|<
name|Filter
argument_list|>
name|filters
parameter_list|,
name|AsyncCallback
argument_list|<
name|Parser
operator|.
name|Results
argument_list|>
name|callback
parameter_list|)
block|{
name|parse
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|Chip
argument_list|>
argument_list|()
argument_list|,
name|text
argument_list|,
name|filters
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|parse
parameter_list|(
specifier|final
name|List
argument_list|<
name|Chip
argument_list|>
name|chips
parameter_list|,
specifier|final
name|String
name|text
parameter_list|,
specifier|final
name|Collection
argument_list|<
name|Filter
argument_list|>
name|filters
parameter_list|,
specifier|final
name|AsyncCallback
argument_list|<
name|Parser
operator|.
name|Results
argument_list|>
name|callback
parameter_list|)
block|{
if|if
condition|(
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
operator|new
name|Parser
operator|.
name|Results
argument_list|(
name|text
argument_list|,
name|chips
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|RegExp
name|regExp
range|:
name|sRegExps
control|)
block|{
specifier|final
name|MatchResult
name|r
init|=
name|regExp
operator|.
name|exec
argument_list|(
name|text
argument_list|)
decl_stmt|;
if|if
condition|(
name|r
operator|==
literal|null
condition|)
continue|continue;
for|for
control|(
name|Filter
name|filter
range|:
name|filters
control|)
block|{
if|if
condition|(
name|filter
operator|.
name|getCommand
argument_list|()
operator|.
name|equals
argument_list|(
name|r
operator|.
name|getGroup
argument_list|(
literal|1
argument_list|)
argument_list|)
condition|)
block|{
name|filter
operator|.
name|validate
argument_list|(
name|r
operator|.
name|getGroup
argument_list|(
literal|2
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Chip
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
operator|new
name|Parser
operator|.
name|Results
argument_list|(
name|text
argument_list|,
name|chips
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Chip
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|==
literal|null
condition|)
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
operator|new
name|Parser
operator|.
name|Results
argument_list|(
name|text
argument_list|,
name|chips
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|chips
operator|.
name|add
argument_list|(
name|result
argument_list|)
expr_stmt|;
if|if
condition|(
name|r
operator|.
name|getGroupCount
argument_list|()
operator|>
literal|3
condition|)
block|{
name|parse
argument_list|(
name|chips
argument_list|,
name|r
operator|.
name|getGroup
argument_list|(
literal|3
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|,
name|filters
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
operator|new
name|Parser
operator|.
name|Results
argument_list|(
literal|""
argument_list|,
name|chips
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
operator|new
name|Parser
operator|.
name|Results
argument_list|(
name|text
argument_list|,
name|chips
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
specifier|abstract
class|class
name|SimpleFilter
implements|implements
name|Filter
block|{
specifier|private
name|String
name|iCommand
decl_stmt|;
specifier|private
name|String
name|iLabel
decl_stmt|;
specifier|private
name|boolean
name|iMultiple
init|=
literal|true
decl_stmt|;
specifier|public
name|SimpleFilter
parameter_list|(
name|String
name|command
parameter_list|,
name|String
name|label
parameter_list|)
block|{
name|iCommand
operator|=
name|command
expr_stmt|;
name|iLabel
operator|=
name|label
expr_stmt|;
block|}
specifier|public
name|boolean
name|isMultipleSelection
parameter_list|()
block|{
return|return
name|iMultiple
return|;
block|}
specifier|public
name|Filter
name|setMultipleSelection
parameter_list|(
name|boolean
name|multiple
parameter_list|)
block|{
name|iMultiple
operator|=
name|multiple
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getCommand
parameter_list|()
block|{
return|return
name|iCommand
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
name|iLabel
operator|==
literal|null
operator|||
name|iLabel
operator|.
name|isEmpty
argument_list|()
condition|?
name|iCommand
operator|.
name|replace
argument_list|(
literal|'_'
argument_list|,
literal|' '
argument_list|)
else|:
name|iLabel
return|;
block|}
specifier|public
specifier|abstract
name|void
name|getValues
parameter_list|(
name|List
argument_list|<
name|Chip
argument_list|>
name|chips
parameter_list|,
name|String
name|text
parameter_list|,
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|Chip
argument_list|>
argument_list|>
name|callback
parameter_list|)
function_decl|;
annotation|@
name|Override
specifier|public
name|void
name|getSuggestions
parameter_list|(
specifier|final
name|List
argument_list|<
name|Chip
argument_list|>
name|chips
parameter_list|,
specifier|final
name|String
name|text
parameter_list|,
specifier|final
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|Suggestion
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
if|if
condition|(
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|getValues
argument_list|(
name|chips
argument_list|,
name|text
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|Chip
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|callback
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Collection
argument_list|<
name|Chip
argument_list|>
name|result
parameter_list|)
block|{
name|List
argument_list|<
name|Suggestion
argument_list|>
name|ret
init|=
operator|new
name|ArrayList
argument_list|<
name|FilterBox
operator|.
name|Suggestion
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|getCommand
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|text
argument_list|)
operator|||
name|getLabel
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|text
argument_list|)
condition|)
block|{
for|for
control|(
name|Chip
name|chip
range|:
name|result
control|)
if|if
condition|(
name|chips
operator|.
name|contains
argument_list|(
name|chip
argument_list|)
condition|)
block|{
comment|// already in there -- remove
name|ret
operator|.
name|add
argument_list|(
operator|new
name|Suggestion
argument_list|(
name|chip
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Chip
name|old
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Chip
name|c
range|:
name|chips
control|)
block|{
if|if
condition|(
name|c
operator|.
name|getCommand
argument_list|()
operator|.
name|equals
argument_list|(
name|getCommand
argument_list|()
argument_list|)
condition|)
block|{
name|old
operator|=
name|c
expr_stmt|;
break|break;
block|}
block|}
name|ret
operator|.
name|add
argument_list|(
operator|new
name|Suggestion
argument_list|(
name|chip
argument_list|,
name|isMultipleSelection
argument_list|()
condition|?
literal|null
else|:
name|old
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
for|for
control|(
name|Chip
name|chip
range|:
name|result
control|)
if|if
condition|(
name|chip
operator|.
name|startsWith
argument_list|(
name|text
argument_list|)
condition|)
block|{
if|if
condition|(
name|chips
operator|.
name|contains
argument_list|(
name|chip
argument_list|)
condition|)
block|{
comment|// already in there -- remove
name|ret
operator|.
name|add
argument_list|(
operator|new
name|Suggestion
argument_list|(
name|chip
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Chip
name|old
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Chip
name|c
range|:
name|chips
control|)
block|{
if|if
condition|(
name|c
operator|.
name|getCommand
argument_list|()
operator|.
name|equals
argument_list|(
name|getCommand
argument_list|()
argument_list|)
condition|)
block|{
name|old
operator|=
name|c
expr_stmt|;
break|break;
block|}
block|}
name|ret
operator|.
name|add
argument_list|(
operator|new
name|Suggestion
argument_list|(
name|chip
argument_list|,
name|isMultipleSelection
argument_list|()
condition|?
literal|null
else|:
name|old
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
name|ret
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|getPopupWidget
parameter_list|(
specifier|final
name|FilterBox
name|box
parameter_list|,
specifier|final
name|AsyncCallback
argument_list|<
name|Widget
argument_list|>
name|callback
parameter_list|)
block|{
name|getValues
argument_list|(
name|box
operator|.
name|getChips
argument_list|(
literal|null
argument_list|)
argument_list|,
name|box
operator|.
name|getText
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|Chip
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|callback
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Collection
argument_list|<
name|Chip
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|values
operator|==
literal|null
operator|||
name|values
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
literal|null
argument_list|)
expr_stmt|;
return|return;
block|}
name|AbsolutePanel
name|popup
init|=
operator|new
name|AbsolutePanel
argument_list|()
decl_stmt|;
if|if
condition|(
name|getLabel
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|getLabel
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Label
name|label
init|=
operator|new
name|Label
argument_list|(
name|getLabel
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|label
operator|.
name|addStyleName
argument_list|(
literal|"command"
argument_list|)
expr_stmt|;
name|popup
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Label
name|label
init|=
operator|new
name|Label
argument_list|(
name|getCommand
argument_list|()
operator|.
name|replace
argument_list|(
literal|'_'
argument_list|,
literal|' '
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|label
operator|.
name|addStyleName
argument_list|(
literal|"command"
argument_list|)
expr_stmt|;
name|popup
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
block|}
for|for
control|(
specifier|final
name|Chip
name|value
range|:
name|values
control|)
block|{
name|String
name|html
init|=
name|SafeHtmlUtils
operator|.
name|htmlEscape
argument_list|(
name|value
operator|.
name|getLabel
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|.
name|hasToolTip
argument_list|()
condition|)
name|html
operator|+=
literal|"<span class='item-hint'>"
operator|+
name|value
operator|.
name|getToolTip
argument_list|()
operator|+
literal|"</span>"
expr_stmt|;
if|else if
condition|(
name|value
operator|.
name|hasCount
argument_list|()
condition|)
name|html
operator|+=
literal|"<span class='item-hint'>("
operator|+
name|value
operator|.
name|getCount
argument_list|()
operator|+
literal|")</span>"
expr_stmt|;
name|HTML
name|item
init|=
operator|new
name|HTML
argument_list|(
name|html
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|item
operator|.
name|addStyleName
argument_list|(
literal|"value"
argument_list|)
expr_stmt|;
name|item
operator|.
name|addMouseDownHandler
argument_list|(
operator|new
name|MouseDownHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseDown
parameter_list|(
name|MouseDownEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|isMultipleSelection
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|box
operator|.
name|removeChip
argument_list|(
name|value
argument_list|,
literal|true
argument_list|)
condition|)
name|box
operator|.
name|addChip
argument_list|(
name|value
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Chip
name|old
init|=
name|box
operator|.
name|getChip
argument_list|(
name|value
operator|.
name|getCommand
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|old
operator|==
literal|null
condition|)
block|{
name|box
operator|.
name|addChip
argument_list|(
name|value
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
operator|!
name|old
operator|.
name|equals
argument_list|(
name|value
argument_list|)
condition|)
block|{
name|box
operator|.
name|removeChip
argument_list|(
name|old
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|box
operator|.
name|addChip
argument_list|(
name|value
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|popup
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
name|popup
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|StaticSimpleFilter
extends|extends
name|SimpleFilter
block|{
specifier|private
name|List
argument_list|<
name|Chip
argument_list|>
name|iValues
init|=
operator|new
name|ArrayList
argument_list|<
name|Chip
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|boolean
name|iValidate
decl_stmt|;
specifier|public
name|StaticSimpleFilter
parameter_list|(
name|String
name|command
parameter_list|,
name|String
name|label
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|String
modifier|...
name|values
parameter_list|)
block|{
name|super
argument_list|(
name|command
argument_list|,
name|label
argument_list|)
expr_stmt|;
name|iValidate
operator|=
name|validate
expr_stmt|;
for|for
control|(
name|String
name|value
range|:
name|values
control|)
name|iValues
operator|.
name|add
argument_list|(
operator|new
name|Chip
argument_list|(
name|command
argument_list|,
name|value
argument_list|)
operator|.
name|withLabel
argument_list|(
name|label
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|StaticSimpleFilter
parameter_list|(
name|String
name|command
parameter_list|,
name|String
name|label
parameter_list|,
name|String
modifier|...
name|values
parameter_list|)
block|{
name|this
argument_list|(
name|command
argument_list|,
name|label
argument_list|,
name|values
operator|.
name|length
operator|>
literal|0
argument_list|,
name|values
argument_list|)
expr_stmt|;
block|}
specifier|public
name|StaticSimpleFilter
parameter_list|(
name|String
name|command
parameter_list|,
name|String
name|label
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|Collection
argument_list|<
name|Chip
argument_list|>
name|chips
parameter_list|)
block|{
name|super
argument_list|(
name|command
argument_list|,
name|label
argument_list|)
expr_stmt|;
name|iValidate
operator|=
name|validate
expr_stmt|;
if|if
condition|(
name|chips
operator|!=
literal|null
condition|)
name|iValues
operator|.
name|addAll
argument_list|(
name|chips
argument_list|)
expr_stmt|;
block|}
specifier|public
name|StaticSimpleFilter
parameter_list|(
name|String
name|command
parameter_list|,
name|String
name|label
parameter_list|,
name|Collection
argument_list|<
name|Chip
argument_list|>
name|chips
parameter_list|)
block|{
name|this
argument_list|(
name|command
argument_list|,
name|label
argument_list|,
name|chips
operator|!=
literal|null
operator|&&
operator|!
name|chips
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|chips
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|getValues
parameter_list|(
name|List
argument_list|<
name|Chip
argument_list|>
name|chips
parameter_list|,
name|String
name|text
parameter_list|,
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|Chip
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
name|iValues
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setValues
parameter_list|(
name|List
argument_list|<
name|Chip
argument_list|>
name|values
parameter_list|)
block|{
name|iValues
operator|=
name|values
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|validate
parameter_list|(
name|String
name|text
parameter_list|,
name|AsyncCallback
argument_list|<
name|Chip
argument_list|>
name|callback
parameter_list|)
block|{
if|if
condition|(
name|iValidate
condition|)
block|{
for|for
control|(
name|Chip
name|chip
range|:
name|iValues
control|)
if|if
condition|(
name|chip
operator|.
name|getValue
argument_list|()
operator|.
name|equals
argument_list|(
name|text
argument_list|)
condition|)
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
name|chip
argument_list|)
expr_stmt|;
return|return;
block|}
name|callback
operator|.
name|onFailure
argument_list|(
operator|new
name|Exception
argument_list|(
literal|"Unknown value "
operator|+
name|text
operator|+
literal|"."
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
operator|new
name|Chip
argument_list|(
name|getCommand
argument_list|()
argument_list|,
name|text
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|getLabel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
class|class
name|CustomFilter
implements|implements
name|Filter
block|{
specifier|private
name|String
name|iCommand
decl_stmt|;
specifier|private
name|String
name|iLabel
decl_stmt|;
specifier|private
name|AbsolutePanel
name|iPanel
init|=
literal|null
decl_stmt|;
specifier|private
name|Widget
index|[]
name|iWidgets
decl_stmt|;
specifier|private
name|boolean
name|iVisible
init|=
literal|true
decl_stmt|;
specifier|public
name|CustomFilter
parameter_list|(
name|String
name|command
parameter_list|,
name|String
name|label
parameter_list|,
name|Widget
modifier|...
name|popupWidgets
parameter_list|)
block|{
name|iCommand
operator|=
name|command
expr_stmt|;
name|iLabel
operator|=
name|label
expr_stmt|;
name|iWidgets
operator|=
name|popupWidgets
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getCommand
parameter_list|()
block|{
return|return
name|iCommand
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
name|iLabel
operator|==
literal|null
operator|||
name|iLabel
operator|.
name|isEmpty
argument_list|()
condition|?
name|iCommand
operator|.
name|replace
argument_list|(
literal|'_'
argument_list|,
literal|' '
argument_list|)
else|:
name|iLabel
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|validate
parameter_list|(
name|String
name|value
parameter_list|,
name|AsyncCallback
argument_list|<
name|Chip
argument_list|>
name|callback
parameter_list|)
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
operator|new
name|Chip
argument_list|(
name|getCommand
argument_list|()
argument_list|,
name|value
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|getLabel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isVisible
parameter_list|()
block|{
return|return
name|iVisible
return|;
block|}
specifier|public
name|void
name|setVisible
parameter_list|(
name|boolean
name|visible
parameter_list|)
block|{
name|iVisible
operator|=
name|visible
expr_stmt|;
block|}
specifier|private
name|void
name|fixHandlers
parameter_list|(
specifier|final
name|FilterBox
name|box
parameter_list|,
name|Widget
name|w
parameter_list|)
block|{
if|if
condition|(
name|w
operator|instanceof
name|HasBlurHandlers
condition|)
operator|(
operator|(
name|HasBlurHandlers
operator|)
name|w
operator|)
operator|.
name|addBlurHandler
argument_list|(
name|box
operator|.
name|iBlurHandler
argument_list|)
expr_stmt|;
if|if
condition|(
name|w
operator|instanceof
name|HasFocusHandlers
condition|)
operator|(
operator|(
name|HasFocusHandlers
operator|)
name|w
operator|)
operator|.
name|addFocusHandler
argument_list|(
name|box
operator|.
name|iFocusHandler
argument_list|)
expr_stmt|;
if|if
condition|(
name|w
operator|instanceof
name|HasKeyDownHandlers
condition|)
operator|(
operator|(
name|HasKeyDownHandlers
operator|)
name|w
operator|)
operator|.
name|addKeyDownHandler
argument_list|(
operator|new
name|KeyDownHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyDown
parameter_list|(
name|KeyDownEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_ESCAPE
condition|)
if|if
condition|(
name|box
operator|.
name|isFilterPopupShowing
argument_list|()
condition|)
name|box
operator|.
name|hideFilterPopup
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|getPopupWidget
parameter_list|(
specifier|final
name|FilterBox
name|box
parameter_list|,
name|AsyncCallback
argument_list|<
name|Widget
argument_list|>
name|callback
parameter_list|)
block|{
if|if
condition|(
operator|!
name|isVisible
argument_list|()
condition|)
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
literal|null
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
name|iPanel
operator|==
literal|null
condition|)
block|{
name|iPanel
operator|=
operator|new
name|AbsolutePanel
argument_list|()
expr_stmt|;
name|iPanel
operator|.
name|addStyleName
argument_list|(
literal|"filter"
argument_list|)
expr_stmt|;
if|if
condition|(
name|getLabel
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|getLabel
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Label
name|label
init|=
operator|new
name|Label
argument_list|(
name|getLabel
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|label
operator|.
name|addStyleName
argument_list|(
literal|"command"
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|getCommand
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|getCommand
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Label
name|label
init|=
operator|new
name|Label
argument_list|(
name|getCommand
argument_list|()
operator|.
name|replace
argument_list|(
literal|'_'
argument_list|,
literal|' '
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|label
operator|.
name|addStyleName
argument_list|(
literal|"command"
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
block|}
name|AbsolutePanel
name|other
init|=
operator|new
name|AbsolutePanel
argument_list|()
decl_stmt|;
name|other
operator|.
name|addStyleName
argument_list|(
literal|"other"
argument_list|)
expr_stmt|;
for|for
control|(
specifier|final
name|Widget
name|w
range|:
name|iWidgets
control|)
block|{
name|w
operator|.
name|addStyleName
argument_list|(
literal|"inline"
argument_list|)
expr_stmt|;
if|if
condition|(
name|w
operator|instanceof
name|AriaSuggestBox
condition|)
block|{
name|fixHandlers
argument_list|(
name|box
argument_list|,
operator|(
operator|(
name|AriaSuggestBox
operator|)
name|w
operator|)
operator|.
name|getValueBox
argument_list|()
argument_list|)
expr_stmt|;
name|fixHandlers
argument_list|(
name|box
argument_list|,
operator|(
operator|(
name|AriaSuggestBox
operator|)
name|w
operator|)
operator|.
name|getSuggestionMenu
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|AriaSuggestBox
operator|)
name|w
operator|)
operator|.
name|addSelectionHandler
argument_list|(
operator|new
name|SelectionHandler
argument_list|<
name|SuggestOracle
operator|.
name|Suggestion
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSelection
parameter_list|(
name|SelectionEvent
argument_list|<
name|SuggestOracle
operator|.
name|Suggestion
argument_list|>
name|event
parameter_list|)
block|{
operator|(
operator|(
name|AriaSuggestBox
operator|)
name|w
operator|)
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
name|fixHandlers
argument_list|(
name|box
argument_list|,
name|w
argument_list|)
expr_stmt|;
if|if
condition|(
name|w
operator|instanceof
name|TimeSelector
condition|)
block|{
name|fixHandlers
argument_list|(
name|box
argument_list|,
operator|(
operator|(
name|TimeSelector
operator|)
name|w
operator|)
operator|.
name|getTimeMenu
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|TimeSelector
operator|)
name|w
operator|)
operator|.
name|addSelectionHandler
argument_list|(
operator|new
name|SelectionHandler
argument_list|<
name|Integer
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSelection
parameter_list|(
name|SelectionEvent
argument_list|<
name|Integer
argument_list|>
name|event
parameter_list|)
block|{
name|box
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|other
operator|.
name|add
argument_list|(
name|w
argument_list|)
expr_stmt|;
block|}
name|iPanel
operator|.
name|add
argument_list|(
name|other
argument_list|)
expr_stmt|;
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
name|iPanel
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|getSuggestions
parameter_list|(
name|List
argument_list|<
name|Chip
argument_list|>
name|chips
parameter_list|,
name|String
name|text
parameter_list|,
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|Suggestion
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
interface|interface
name|Chip2Color
block|{
specifier|public
name|String
name|getColor
parameter_list|(
name|String
name|command
parameter_list|)
function_decl|;
block|}
specifier|public
class|class
name|DefaultChip2Color
implements|implements
name|Chip2Color
block|{
annotation|@
name|Override
specifier|public
name|String
name|getColor
parameter_list|(
name|String
name|command
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iFilters
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|iFilters
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getCommand
argument_list|()
operator|.
name|equals
argument_list|(
name|command
argument_list|)
condition|)
return|return
name|sColors
index|[
name|i
index|]
return|;
return|return
literal|"red"
return|;
block|}
block|}
specifier|public
specifier|static
interface|interface
name|SuggestionsProvider
block|{
specifier|public
name|void
name|getSuggestions
parameter_list|(
name|List
argument_list|<
name|Chip
argument_list|>
name|chips
parameter_list|,
name|String
name|text
parameter_list|,
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|Suggestion
argument_list|>
argument_list|>
name|callback
parameter_list|)
function_decl|;
block|}
specifier|public
class|class
name|DefaultSuggestionsProvider
implements|implements
name|SuggestionsProvider
block|{
name|SuggestionsProvider
name|iNext
decl_stmt|;
specifier|public
name|DefaultSuggestionsProvider
parameter_list|(
name|SuggestionsProvider
name|next
parameter_list|)
block|{
name|iNext
operator|=
name|next
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|getSuggestions
parameter_list|(
name|List
argument_list|<
name|Chip
argument_list|>
name|chips
parameter_list|,
name|String
name|text
parameter_list|,
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|Suggestion
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
name|List
argument_list|<
name|Suggestion
argument_list|>
name|suggestions
init|=
operator|new
name|ArrayList
argument_list|<
name|Suggestion
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
name|iterateFilters
argument_list|(
name|chips
argument_list|,
name|text
argument_list|,
name|suggestions
argument_list|,
name|getFilters
argument_list|()
operator|.
name|iterator
argument_list|()
argument_list|,
name|callback
argument_list|)
expr_stmt|;
else|else
name|returnSuggestions
argument_list|(
name|chips
argument_list|,
name|text
argument_list|,
name|suggestions
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|iterateFilters
parameter_list|(
specifier|final
name|List
argument_list|<
name|Chip
argument_list|>
name|chips
parameter_list|,
specifier|final
name|String
name|text
parameter_list|,
specifier|final
name|List
argument_list|<
name|Suggestion
argument_list|>
name|suggestions
parameter_list|,
specifier|final
name|Iterator
argument_list|<
name|Filter
argument_list|>
name|filters
parameter_list|,
specifier|final
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|Suggestion
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
if|if
condition|(
name|filters
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Filter
name|filter
init|=
name|filters
operator|.
name|next
argument_list|()
decl_stmt|;
name|filter
operator|.
name|getSuggestions
argument_list|(
name|chips
argument_list|,
name|text
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|Suggestion
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iterateFilters
argument_list|(
name|chips
argument_list|,
name|text
argument_list|,
name|suggestions
argument_list|,
name|filters
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Collection
argument_list|<
name|Suggestion
argument_list|>
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
name|suggestions
operator|.
name|addAll
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|iterateFilters
argument_list|(
name|chips
argument_list|,
name|text
argument_list|,
name|suggestions
argument_list|,
name|filters
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|returnSuggestions
argument_list|(
name|chips
argument_list|,
name|text
argument_list|,
name|suggestions
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|returnSuggestions
parameter_list|(
specifier|final
name|List
argument_list|<
name|Chip
argument_list|>
name|chips
parameter_list|,
specifier|final
name|String
name|text
parameter_list|,
specifier|final
name|List
argument_list|<
name|Suggestion
argument_list|>
name|suggestions
parameter_list|,
specifier|final
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|Suggestion
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
if|if
condition|(
name|iNext
operator|==
literal|null
condition|)
name|callback
operator|.
name|onSuccess
argument_list|(
name|suggestions
argument_list|)
expr_stmt|;
else|else
name|iNext
operator|.
name|getSuggestions
argument_list|(
name|chips
argument_list|,
name|text
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|Suggestion
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
name|suggestions
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Collection
argument_list|<
name|Suggestion
argument_list|>
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
name|suggestions
operator|.
name|addAll
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|callback
operator|.
name|onSuccess
argument_list|(
name|suggestions
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|Suggestion
implements|implements
name|IsSerializable
block|{
specifier|private
name|String
name|iDisplay
decl_stmt|,
name|iReplacement
decl_stmt|,
name|iHint
decl_stmt|;
specifier|private
name|Chip
name|iAdd
decl_stmt|,
name|iRemove
decl_stmt|;
specifier|private
name|boolean
name|iSelected
decl_stmt|;
specifier|public
name|Suggestion
parameter_list|()
block|{
block|}
specifier|public
name|Suggestion
parameter_list|(
name|String
name|displayString
parameter_list|,
name|String
name|replacementString
parameter_list|)
block|{
name|iDisplay
operator|=
name|displayString
expr_stmt|;
name|iReplacement
operator|=
name|replacementString
expr_stmt|;
block|}
specifier|public
name|Suggestion
parameter_list|(
name|String
name|displayString
parameter_list|,
name|String
name|replacementString
parameter_list|,
name|String
name|hint
parameter_list|)
block|{
name|iDisplay
operator|=
name|displayString
expr_stmt|;
name|iReplacement
operator|=
name|replacementString
expr_stmt|;
name|iHint
operator|=
literal|"<span class='item-hint'>"
operator|+
name|hint
operator|+
literal|"</span>"
expr_stmt|;
block|}
specifier|public
name|Suggestion
parameter_list|(
name|Chip
name|chip
parameter_list|)
block|{
name|iAdd
operator|=
name|chip
expr_stmt|;
name|iReplacement
operator|=
literal|""
expr_stmt|;
if|if
condition|(
name|chip
operator|.
name|hasToolTip
argument_list|()
condition|)
block|{
name|iDisplay
operator|=
name|chip
operator|.
name|getLabel
argument_list|()
expr_stmt|;
name|iHint
operator|=
literal|"<span class='item-hint'>"
operator|+
name|chip
operator|.
name|getToolTip
argument_list|()
operator|+
literal|"</span>"
expr_stmt|;
block|}
block|}
specifier|public
name|Suggestion
parameter_list|(
name|Chip
name|add
parameter_list|,
name|Chip
name|remove
parameter_list|)
block|{
name|iAdd
operator|=
name|add
expr_stmt|;
name|iRemove
operator|=
name|remove
expr_stmt|;
name|iReplacement
operator|=
literal|""
expr_stmt|;
if|if
condition|(
operator|(
name|add
operator|!=
literal|null
condition|?
name|add
else|:
name|remove
operator|)
operator|.
name|hasToolTip
argument_list|()
condition|)
block|{
name|iDisplay
operator|=
operator|(
name|add
operator|!=
literal|null
condition|?
name|add
else|:
name|remove
operator|)
operator|.
name|getLabel
argument_list|()
expr_stmt|;
name|iHint
operator|=
literal|"<span class='item-hint'>"
operator|+
operator|(
name|add
operator|!=
literal|null
condition|?
name|add
else|:
name|remove
operator|)
operator|.
name|getToolTip
argument_list|()
operator|+
literal|"</span>"
expr_stmt|;
block|}
block|}
specifier|public
name|Suggestion
parameter_list|(
name|String
name|displayString
parameter_list|,
name|Chip
name|add
parameter_list|)
block|{
name|iDisplay
operator|=
name|displayString
expr_stmt|;
name|iReplacement
operator|=
literal|""
expr_stmt|;
name|iAdd
operator|=
name|add
expr_stmt|;
if|if
condition|(
name|add
operator|.
name|hasToolTip
argument_list|()
condition|)
block|{
name|iHint
operator|=
literal|"<span class='item-hint'>"
operator|+
name|add
operator|.
name|getToolTip
argument_list|()
operator|+
literal|"</span>"
expr_stmt|;
block|}
else|else
block|{
name|iHint
operator|=
literal|"<span class='item-command'>"
operator|+
name|add
operator|.
name|getTranslatedCommand
argument_list|()
operator|+
literal|"</span>"
expr_stmt|;
block|}
block|}
specifier|public
name|Suggestion
parameter_list|(
name|String
name|displayString
parameter_list|,
name|Chip
name|add
parameter_list|,
name|Chip
name|remove
parameter_list|)
block|{
name|iDisplay
operator|=
name|displayString
expr_stmt|;
name|iReplacement
operator|=
literal|""
expr_stmt|;
name|iAdd
operator|=
name|add
expr_stmt|;
name|iRemove
operator|=
name|remove
expr_stmt|;
if|if
condition|(
operator|(
name|add
operator|!=
literal|null
condition|?
name|add
else|:
name|remove
operator|)
operator|.
name|hasToolTip
argument_list|()
condition|)
block|{
name|iHint
operator|=
literal|"<span class='item-hint'>"
operator|+
operator|(
name|add
operator|!=
literal|null
condition|?
name|add
else|:
name|remove
operator|)
operator|.
name|getToolTip
argument_list|()
operator|+
literal|"</span>"
expr_stmt|;
block|}
else|else
block|{
name|iHint
operator|=
literal|"<span class='item-command'>"
operator|+
operator|(
name|add
operator|!=
literal|null
condition|?
name|add
else|:
name|remove
operator|)
operator|.
name|getTranslatedCommand
argument_list|()
operator|+
literal|"</span>"
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setDisplayString
parameter_list|(
name|String
name|display
parameter_list|)
block|{
name|iDisplay
operator|=
name|display
expr_stmt|;
block|}
specifier|public
name|String
name|getDisplayString
parameter_list|()
block|{
return|return
name|iDisplay
return|;
block|}
specifier|public
name|void
name|setReplacementString
parameter_list|(
name|String
name|replacement
parameter_list|)
block|{
name|iReplacement
operator|=
name|replacement
expr_stmt|;
block|}
specifier|public
name|String
name|getReplacementString
parameter_list|()
block|{
return|return
name|iReplacement
return|;
block|}
specifier|public
name|void
name|setHint
parameter_list|(
name|String
name|hint
parameter_list|)
block|{
name|iHint
operator|=
name|hint
expr_stmt|;
block|}
specifier|public
name|String
name|getHint
parameter_list|()
block|{
return|return
name|iHint
return|;
block|}
specifier|public
name|void
name|setChipToAdd
parameter_list|(
name|Chip
name|chip
parameter_list|)
block|{
name|iAdd
operator|=
name|chip
expr_stmt|;
block|}
specifier|public
name|Chip
name|getChipToAdd
parameter_list|()
block|{
return|return
name|iAdd
return|;
block|}
specifier|public
name|void
name|setChipToRemove
parameter_list|(
name|Chip
name|chip
parameter_list|)
block|{
name|iRemove
operator|=
name|chip
expr_stmt|;
block|}
specifier|public
name|Chip
name|getChipToRemove
parameter_list|()
block|{
return|return
name|iRemove
return|;
block|}
specifier|public
name|Chip
name|getChip
parameter_list|()
block|{
return|return
name|getChipToAdd
argument_list|()
operator|==
literal|null
condition|?
name|getChipToRemove
argument_list|()
else|:
name|getChipToAdd
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isSelected
parameter_list|()
block|{
return|return
name|iSelected
return|;
block|}
specifier|public
name|void
name|setSelected
parameter_list|(
name|boolean
name|selected
parameter_list|)
block|{
name|iSelected
operator|=
name|selected
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
operator|(
operator|(
name|getDisplayString
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|getDisplayString
argument_list|()
operator|)
operator|+
operator|(
name|getChipToAdd
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|" +"
operator|+
name|getChipToAdd
argument_list|()
operator|)
operator|+
operator|(
name|getChipToRemove
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|" -"
operator|+
name|getChipToRemove
argument_list|()
operator|)
operator|)
operator|.
name|trim
argument_list|()
return|;
block|}
specifier|public
name|String
name|toAriaString
parameter_list|(
name|FilterBox
name|box
parameter_list|)
block|{
if|if
condition|(
name|getChipToAdd
argument_list|()
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|getChipToRemove
argument_list|()
operator|!=
literal|null
condition|)
return|return
name|ARIA
operator|.
name|chipReplace
argument_list|(
name|getChipToAdd
argument_list|()
operator|.
name|getTranslatedCommand
argument_list|()
argument_list|,
name|getChipToAdd
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|)
return|;
else|else
block|{
if|if
condition|(
name|box
operator|.
name|hasChip
argument_list|(
name|getChipToAdd
argument_list|()
argument_list|)
condition|)
return|return
name|ARIA
operator|.
name|chipDelete
argument_list|(
name|getChipToAdd
argument_list|()
operator|.
name|getTranslatedCommand
argument_list|()
argument_list|,
name|getChipToAdd
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|)
return|;
else|else
return|return
name|ARIA
operator|.
name|chipAdd
argument_list|(
name|getChipToAdd
argument_list|()
operator|.
name|getTranslatedCommand
argument_list|()
argument_list|,
name|getChipToAdd
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|)
return|;
block|}
block|}
if|else if
condition|(
name|getChipToRemove
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|ARIA
operator|.
name|chipDelete
argument_list|(
name|getChipToRemove
argument_list|()
operator|.
name|getTranslatedCommand
argument_list|()
argument_list|,
name|getChipToRemove
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|)
return|;
block|}
return|return
name|SafeHtmlUtils
operator|.
name|htmlEscape
argument_list|(
name|getDisplayString
argument_list|()
argument_list|)
operator|+
operator|(
name|getHint
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|" "
operator|+
name|getHint
argument_list|()
operator|)
return|;
block|}
block|}
specifier|public
class|class
name|PopupPanelKeepFocus
extends|extends
name|PopupPanel
block|{
specifier|public
name|PopupPanelKeepFocus
parameter_list|()
block|{
name|super
argument_list|(
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|setPreviewingAllNativeEvents
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|sinkEvents
argument_list|(
name|Event
operator|.
name|ONMOUSEDOWN
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onBrowserEvent
parameter_list|(
name|Event
name|event
parameter_list|)
block|{
switch|switch
condition|(
name|DOM
operator|.
name|eventGetType
argument_list|(
name|event
argument_list|)
condition|)
block|{
case|case
name|Event
operator|.
name|ONMOUSEDOWN
case|:
name|iFocus
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
specifier|public
specifier|final
name|void
name|moveRelativeTo
parameter_list|(
specifier|final
name|UIObject
name|target
parameter_list|)
block|{
name|position
argument_list|(
name|target
argument_list|,
name|getOffsetWidth
argument_list|()
argument_list|,
name|getOffsetHeight
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|position
parameter_list|(
specifier|final
name|UIObject
name|relativeObject
parameter_list|,
name|int
name|offsetWidth
parameter_list|,
name|int
name|offsetHeight
parameter_list|)
block|{
name|int
name|textBoxOffsetWidth
init|=
name|relativeObject
operator|.
name|getOffsetWidth
argument_list|()
decl_stmt|;
name|int
name|offsetWidthDiff
init|=
name|offsetWidth
operator|-
name|textBoxOffsetWidth
decl_stmt|;
name|int
name|left
init|=
name|relativeObject
operator|.
name|getAbsoluteLeft
argument_list|()
decl_stmt|;
if|if
condition|(
name|offsetWidthDiff
operator|>
literal|0
condition|)
block|{
name|int
name|windowRight
init|=
name|Window
operator|.
name|getClientWidth
argument_list|()
operator|+
name|Window
operator|.
name|getScrollLeft
argument_list|()
decl_stmt|;
name|int
name|windowLeft
init|=
name|Window
operator|.
name|getScrollLeft
argument_list|()
decl_stmt|;
name|int
name|distanceToWindowRight
init|=
name|windowRight
operator|-
name|left
decl_stmt|;
name|int
name|distanceFromWindowLeft
init|=
name|left
operator|-
name|windowLeft
decl_stmt|;
if|if
condition|(
name|distanceToWindowRight
operator|<
name|offsetWidth
operator|&&
name|distanceFromWindowLeft
operator|>=
name|offsetWidthDiff
condition|)
block|{
name|left
operator|-=
name|offsetWidthDiff
expr_stmt|;
block|}
block|}
name|int
name|top
init|=
name|relativeObject
operator|.
name|getAbsoluteTop
argument_list|()
decl_stmt|;
name|int
name|windowTop
init|=
name|Window
operator|.
name|getScrollTop
argument_list|()
decl_stmt|;
name|int
name|windowBottom
init|=
name|Window
operator|.
name|getScrollTop
argument_list|()
operator|+
name|Window
operator|.
name|getClientHeight
argument_list|()
decl_stmt|;
name|int
name|distanceFromWindowTop
init|=
name|top
operator|-
name|windowTop
decl_stmt|;
name|int
name|distanceToWindowBottom
init|=
name|windowBottom
operator|-
operator|(
name|top
operator|+
name|relativeObject
operator|.
name|getOffsetHeight
argument_list|()
operator|)
decl_stmt|;
if|if
condition|(
name|distanceToWindowBottom
operator|<
name|offsetHeight
operator|&&
name|distanceFromWindowTop
operator|>=
name|offsetHeight
condition|)
block|{
name|top
operator|-=
name|offsetHeight
expr_stmt|;
block|}
else|else
block|{
name|top
operator|+=
name|relativeObject
operator|.
name|getOffsetHeight
argument_list|()
expr_stmt|;
block|}
name|setPopupPosition
argument_list|(
name|left
argument_list|,
name|top
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
class|class
name|SuggestionMenu
extends|extends
name|MenuBar
block|{
name|SuggestionMenu
parameter_list|()
block|{
name|super
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setStyleName
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|setFocusOnHoverEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getNumItems
parameter_list|()
block|{
return|return
name|getItems
argument_list|()
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|int
name|getSelectedItemIndex
parameter_list|()
block|{
name|MenuItem
name|selectedItem
init|=
name|getSelectedItem
argument_list|()
decl_stmt|;
if|if
condition|(
name|selectedItem
operator|!=
literal|null
condition|)
return|return
name|getItems
argument_list|()
operator|.
name|indexOf
argument_list|(
name|selectedItem
argument_list|)
return|;
return|return
operator|-
literal|1
return|;
block|}
specifier|public
name|void
name|selectItem
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|List
argument_list|<
name|MenuItem
argument_list|>
name|items
init|=
name|getItems
argument_list|()
decl_stmt|;
if|if
condition|(
name|index
operator|>
operator|-
literal|1
operator|&&
name|index
operator|<
name|items
operator|.
name|size
argument_list|()
condition|)
block|{
name|selectItem
argument_list|(
name|items
operator|.
name|get
argument_list|(
name|index
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|executeSelected
parameter_list|()
block|{
name|MenuItem
name|selected
init|=
name|getSelectedItem
argument_list|()
decl_stmt|;
if|if
condition|(
name|selected
operator|!=
literal|null
condition|)
name|selected
operator|.
name|getScheduledCommand
argument_list|()
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
specifier|public
name|Suggestion
name|getSelectedSuggestion
parameter_list|()
block|{
name|MenuItem
name|selectedItem
init|=
name|getSelectedItem
argument_list|()
decl_stmt|;
return|return
name|selectedItem
operator|==
literal|null
condition|?
literal|null
else|:
operator|(
operator|(
name|SuggestionMenuItem
operator|)
name|selectedItem
operator|)
operator|.
name|getSuggestion
argument_list|()
return|;
block|}
block|}
specifier|private
class|class
name|SuggestionMenuItem
extends|extends
name|MenuItem
block|{
specifier|private
name|Suggestion
name|iSuggestion
init|=
literal|null
decl_stmt|;
specifier|private
name|SuggestionMenuItem
parameter_list|(
specifier|final
name|Suggestion
name|suggestion
parameter_list|)
block|{
name|super
argument_list|(
name|suggestion
operator|.
name|getDisplayString
argument_list|()
operator|==
literal|null
condition|?
name|suggestion
operator|.
name|getChip
argument_list|()
operator|.
name|getLabel
argument_list|()
operator|+
literal|"<span class='item-command'>"
operator|+
name|suggestion
operator|.
name|getChip
argument_list|()
operator|.
name|getTranslatedCommand
argument_list|()
operator|+
literal|"</span>"
else|:
name|SafeHtmlUtils
operator|.
name|htmlEscape
argument_list|(
name|suggestion
operator|.
name|getDisplayString
argument_list|()
argument_list|)
operator|+
operator|(
name|suggestion
operator|.
name|getHint
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|" "
operator|+
name|suggestion
operator|.
name|getHint
argument_list|()
operator|)
argument_list|,
literal|true
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|hideSuggestions
argument_list|()
expr_stmt|;
name|setStatus
argument_list|(
name|ARIA
operator|.
name|suggestionSelected
argument_list|(
name|suggestion
operator|.
name|toAriaString
argument_list|(
name|FilterBox
operator|.
name|this
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|setText
argument_list|(
name|suggestion
operator|.
name|getReplacementString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|suggestion
operator|.
name|getChipToAdd
argument_list|()
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|hasChip
argument_list|(
name|suggestion
operator|.
name|getChipToAdd
argument_list|()
argument_list|)
condition|)
name|removeChip
argument_list|(
name|suggestion
operator|.
name|getChipToAdd
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
else|else
name|addChip
argument_list|(
name|suggestion
operator|.
name|getChipToAdd
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|suggestion
operator|.
name|getChipToRemove
argument_list|()
operator|!=
literal|null
condition|)
name|removeChip
argument_list|(
name|suggestion
operator|.
name|getChipToRemove
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iLastValue
operator|=
name|getValue
argument_list|()
expr_stmt|;
name|setAriaLabel
argument_list|(
name|toAriaString
argument_list|()
argument_list|)
expr_stmt|;
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|FilterBox
operator|.
name|this
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|setStyleName
argument_list|(
literal|"item"
argument_list|)
expr_stmt|;
name|getElement
argument_list|()
operator|.
name|setAttribute
argument_list|(
literal|"whiteSpace"
argument_list|,
literal|"nowrap"
argument_list|)
expr_stmt|;
name|iSuggestion
operator|=
name|suggestion
expr_stmt|;
block|}
specifier|public
name|Suggestion
name|getSuggestion
parameter_list|()
block|{
return|return
name|iSuggestion
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|int
name|getTabIndex
parameter_list|()
block|{
return|return
name|iFilter
operator|.
name|getTabIndex
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setTabIndex
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|iFilter
operator|.
name|setTabIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setAccessKey
parameter_list|(
name|char
name|key
parameter_list|)
block|{
name|iFilter
operator|.
name|setAccessKey
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setFocus
parameter_list|(
name|boolean
name|focused
parameter_list|)
block|{
name|iFilter
operator|.
name|setFocus
argument_list|(
name|focused
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addKeyUpHandler
parameter_list|(
name|KeyUpHandler
name|handler
parameter_list|)
block|{
return|return
name|iFilter
operator|.
name|addKeyUpHandler
argument_list|(
name|handler
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addKeyDownHandler
parameter_list|(
name|KeyDownHandler
name|handler
parameter_list|)
block|{
return|return
name|iFilter
operator|.
name|addKeyDownHandler
argument_list|(
name|handler
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addKeyPressHandler
parameter_list|(
name|KeyPressHandler
name|handler
parameter_list|)
block|{
return|return
name|iFilter
operator|.
name|addKeyPressHandler
argument_list|(
name|handler
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addFocusHandler
parameter_list|(
name|FocusHandler
name|handler
parameter_list|)
block|{
return|return
name|iFilter
operator|.
name|addFocusHandler
argument_list|(
name|handler
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addBlurHandler
parameter_list|(
name|BlurHandler
name|handler
parameter_list|)
block|{
return|return
name|iFilter
operator|.
name|addBlurHandler
argument_list|(
name|handler
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isShowSuggestionsOnFocus
parameter_list|()
block|{
return|return
name|iShowSuggestionsOnFocus
return|;
block|}
specifier|public
name|void
name|setShowSuggestionsOnFocus
parameter_list|(
name|boolean
name|showSuggestionsOnFocus
parameter_list|)
block|{
name|iShowSuggestionsOnFocus
operator|=
name|showSuggestionsOnFocus
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getAriaLabel
parameter_list|()
block|{
return|return
name|iFilter
operator|.
name|getAriaLabel
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setAriaLabel
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|iFilter
operator|.
name|setAriaLabel
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setStatus
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setHTML
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDefaultValueProvider
parameter_list|(
name|TakesValue
argument_list|<
name|String
argument_list|>
name|defaultValue
parameter_list|)
block|{
name|iDefaultValueProvider
operator|=
name|defaultValue
expr_stmt|;
block|}
specifier|public
name|TakesValue
argument_list|<
name|String
argument_list|>
name|getDefaultValueProvider
parameter_list|()
block|{
return|return
name|iDefaultValueProvider
return|;
block|}
block|}
end_class

end_unit

