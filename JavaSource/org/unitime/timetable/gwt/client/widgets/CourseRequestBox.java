begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|HasAriaLabel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|FilterBox
operator|.
name|Chip
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|FilterBox
operator|.
name|Suggestion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|FilterBox
operator|.
name|SuggestionsProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
operator|.
name|IdValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|FreeTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|Preference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|RequestedCourse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|RequestedCourseStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SpecialRegistrationInterface
operator|.
name|SpecialRegistrationContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|aria
operator|.
name|client
operator|.
name|Roles
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|RunAsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
operator|.
name|ScheduledCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Unit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|BlurEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|BlurHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|FocusEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|FocusHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyDownEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyDownHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|CloseEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|CloseHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|HasCloseHandlers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|resources
operator|.
name|client
operator|.
name|ImageResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|PopupPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|CourseRequestBox
extends|extends
name|P
implements|implements
name|CourseSelection
block|{
specifier|protected
specifier|static
specifier|final
name|StudentSectioningResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|StudentSectioningMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|StudentSectioningConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|CourseRequestFilterBox
name|iFilter
decl_stmt|;
specifier|protected
name|HTML
name|iError
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|CourseAssignment
argument_list|>
name|iValidCourseNames
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|CourseAssignment
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|DataProvider
argument_list|<
name|String
argument_list|,
name|Collection
argument_list|<
name|CourseAssignment
argument_list|>
argument_list|>
name|iDataProvider
decl_stmt|;
specifier|private
name|DataProvider
argument_list|<
name|CourseAssignment
argument_list|,
name|Collection
argument_list|<
name|ClassAssignment
argument_list|>
argument_list|>
name|iSectionProvider
decl_stmt|;
specifier|private
name|FreeTimeParser
name|iFreeTimeParser
init|=
literal|null
decl_stmt|;
specifier|private
name|CourseFinder
name|iCourseFinder
init|=
literal|null
decl_stmt|;
specifier|private
name|CourseFinderFactory
name|iCourseFinderFactory
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Validator
argument_list|<
name|CourseSelection
argument_list|>
argument_list|>
name|iValidators
init|=
operator|new
name|ArrayList
argument_list|<
name|Validator
argument_list|<
name|CourseSelection
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|boolean
name|iShowCourses
init|=
literal|false
decl_stmt|;
specifier|private
name|RequestedCourse
name|iLastCourse
init|=
literal|null
decl_stmt|;
specifier|private
name|SpecialRegistrationContext
name|iSpecReg
decl_stmt|;
specifier|private
name|boolean
name|iCanDelete
init|=
literal|true
decl_stmt|;
specifier|private
name|boolean
name|iCanChangePriority
init|=
literal|true
decl_stmt|;
specifier|private
name|boolean
name|iCanChangeAlternatives
init|=
literal|true
decl_stmt|;
specifier|private
name|boolean
name|iInactive
init|=
literal|false
decl_stmt|;
specifier|public
name|CourseRequestBox
parameter_list|()
block|{
name|this
argument_list|(
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|CourseRequestBox
parameter_list|(
name|boolean
name|showCourses
parameter_list|)
block|{
name|this
argument_list|(
name|showCourses
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|CourseRequestBox
parameter_list|(
name|boolean
name|showCourses
parameter_list|,
name|SpecialRegistrationContext
name|specreg
parameter_list|)
block|{
name|super
argument_list|(
literal|"unitime-CourseRequestBox"
argument_list|)
expr_stmt|;
name|iShowCourses
operator|=
name|showCourses
expr_stmt|;
name|iSpecReg
operator|=
name|specreg
expr_stmt|;
name|iFilter
operator|=
operator|new
name|CourseRequestFilterBox
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
comment|// if (isEnabled())
name|openDialogAsync
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|void
name|applySuggestion
parameter_list|(
name|Suggestion
name|suggestion
parameter_list|)
block|{
if|if
condition|(
name|suggestion
operator|instanceof
name|CourseSuggestion
condition|)
block|{
name|CourseRequestBox
operator|.
name|this
operator|.
name|setValue
argument_list|(
operator|(
operator|(
name|CourseSuggestion
operator|)
name|suggestion
operator|)
operator|.
name|getRequestedCourse
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|super
operator|.
name|applySuggestion
argument_list|(
name|suggestion
argument_list|)
expr_stmt|;
block|}
block|}
block|}
expr_stmt|;
name|add
argument_list|(
name|iFilter
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|StaticSimpleFilter
argument_list|(
literal|"method"
argument_list|,
name|MESSAGES
operator|.
name|tagInstructionalMethod
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|StaticSimpleFilter
argument_list|(
literal|"section"
argument_list|,
name|MESSAGES
operator|.
name|tagSection
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|setSuggestionsProvider
argument_list|(
operator|new
name|SuggestionsProvider
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|getSuggestions
parameter_list|(
name|List
argument_list|<
name|Chip
argument_list|>
name|chips
parameter_list|,
specifier|final
name|String
name|text
parameter_list|,
specifier|final
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|Suggestion
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
if|if
condition|(
name|text
operator|.
name|equals
argument_list|(
name|getHint
argument_list|()
argument_list|)
condition|)
return|return;
if|if
condition|(
name|iLastCourse
operator|!=
literal|null
operator|&&
name|iLastCourse
operator|.
name|isCourse
argument_list|()
operator|&&
name|text
operator|.
name|startsWith
argument_list|(
name|iLastCourse
operator|.
name|getCourseName
argument_list|()
operator|+
literal|" "
argument_list|)
operator|&&
name|iValidCourseNames
operator|.
name|containsKey
argument_list|(
name|iLastCourse
operator|.
name|getCourseName
argument_list|()
operator|.
name|toLowerCase
argument_list|()
argument_list|)
condition|)
block|{
specifier|final
name|CourseAssignment
name|course
init|=
name|iValidCourseNames
operator|.
name|get
argument_list|(
name|iLastCourse
operator|.
name|getCourseName
argument_list|()
operator|.
name|toLowerCase
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|String
name|query
init|=
name|text
operator|.
name|substring
argument_list|(
name|iLastCourse
operator|.
name|getCourseName
argument_list|()
operator|.
name|length
argument_list|()
operator|+
literal|1
argument_list|)
operator|.
name|trim
argument_list|()
decl_stmt|;
name|iSectionProvider
operator|.
name|getData
argument_list|(
name|course
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|ClassAssignment
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|callback
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Collection
argument_list|<
name|ClassAssignment
argument_list|>
name|result
parameter_list|)
block|{
name|List
argument_list|<
name|Suggestion
argument_list|>
name|suggestions
init|=
operator|new
name|ArrayList
argument_list|<
name|Suggestion
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|course
operator|.
name|hasInstructionalMethods
argument_list|()
condition|)
block|{
for|for
control|(
name|IdValue
name|im
range|:
name|course
operator|.
name|getInstructionalMethods
argument_list|()
control|)
block|{
if|if
condition|(
name|im
operator|.
name|getValue
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|query
operator|.
name|toLowerCase
argument_list|()
argument_list|)
condition|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|CourseSuggestion
argument_list|(
name|course
argument_list|,
name|im
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|iSpecReg
operator|==
literal|null
operator|||
name|iSpecReg
operator|.
name|isCanRequire
argument_list|()
condition|)
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|CourseSuggestion
argument_list|(
name|course
argument_list|,
name|im
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
operator|(
name|im
operator|.
name|getValue
argument_list|()
operator|+
literal|"!"
operator|)
operator|.
name|equalsIgnoreCase
argument_list|(
name|query
argument_list|)
operator|&&
operator|(
name|iSpecReg
operator|==
literal|null
operator|||
name|iSpecReg
operator|.
name|isCanRequire
argument_list|()
operator|)
condition|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|CourseSuggestion
argument_list|(
name|course
argument_list|,
name|im
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
for|for
control|(
name|ClassAssignment
name|clazz
range|:
name|result
control|)
block|{
if|if
condition|(
name|clazz
operator|.
name|isCancelled
argument_list|()
operator|||
operator|(
operator|!
name|clazz
operator|.
name|isSaved
argument_list|()
operator|&&
operator|!
name|clazz
operator|.
name|isAvailable
argument_list|()
operator|&&
operator|!
name|isSpecialRegistration
argument_list|()
operator|&&
operator|!
name|course
operator|.
name|isCanWaitList
argument_list|()
operator|)
condition|)
continue|continue;
if|if
condition|(
name|clazz
operator|.
name|getSection
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|query
argument_list|)
operator|||
name|clazz
operator|.
name|getSelection
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|query
argument_list|)
condition|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|CourseSuggestion
argument_list|(
name|course
argument_list|,
name|clazz
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|iSpecReg
operator|==
literal|null
operator|||
name|iSpecReg
operator|.
name|isCanRequire
argument_list|()
condition|)
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|CourseSuggestion
argument_list|(
name|course
argument_list|,
name|clazz
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
operator|(
operator|(
name|clazz
operator|.
name|getSection
argument_list|()
operator|+
literal|"!"
operator|)
operator|.
name|equalsIgnoreCase
argument_list|(
name|query
argument_list|)
operator|||
operator|(
name|clazz
operator|.
name|getSelection
argument_list|()
operator|.
name|getText
argument_list|()
operator|+
literal|"!"
operator|)
operator|.
name|equalsIgnoreCase
argument_list|(
name|query
argument_list|)
operator|)
operator|&&
operator|(
name|iSpecReg
operator|==
literal|null
operator|||
name|iSpecReg
operator|.
name|isCanRequire
argument_list|()
operator|)
condition|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|CourseSuggestion
argument_list|(
name|course
argument_list|,
name|clazz
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|clazz
operator|.
name|getSection
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|query
operator|.
name|toLowerCase
argument_list|()
argument_list|)
operator|||
name|clazz
operator|.
name|getSelection
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|query
operator|.
name|toLowerCase
argument_list|()
argument_list|)
condition|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|CourseSuggestion
argument_list|(
name|course
argument_list|,
name|clazz
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|clazz
operator|.
name|getTimeString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|arrangeHours
argument_list|()
argument_list|)
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|query
operator|.
name|toLowerCase
argument_list|()
argument_list|)
condition|)
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|CourseSuggestion
argument_list|(
name|course
argument_list|,
name|clazz
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
if|else if
condition|(
name|clazz
operator|.
name|hasInstructors
argument_list|()
condition|)
for|for
control|(
name|String
name|instructor
range|:
name|clazz
operator|.
name|getInstructors
argument_list|()
control|)
if|if
condition|(
name|instructor
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|query
operator|.
name|toLowerCase
argument_list|()
argument_list|)
condition|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|CourseSuggestion
argument_list|(
name|course
argument_list|,
name|clazz
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
name|suggestions
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
return|return;
block|}
name|iDataProvider
operator|.
name|getData
argument_list|(
name|text
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|CourseAssignment
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iValidCourseNames
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|iFreeTimeParser
operator|!=
literal|null
condition|)
block|{
name|iFreeTimeParser
operator|.
name|getData
argument_list|(
name|text
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|FreeTime
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|callback
operator|.
name|onFailure
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|List
argument_list|<
name|FreeTime
argument_list|>
name|freeTimes
parameter_list|)
block|{
name|String
name|ft
init|=
name|iFreeTimeParser
operator|.
name|freeTimesToString
argument_list|(
name|freeTimes
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Suggestion
argument_list|>
name|suggestions
init|=
operator|new
name|ArrayList
argument_list|<
name|Suggestion
argument_list|>
argument_list|()
decl_stmt|;
name|Suggestion
name|suggestion
init|=
operator|new
name|Suggestion
argument_list|(
name|ft
argument_list|,
name|ft
argument_list|,
name|MESSAGES
operator|.
name|hintFreeTimeRequest
argument_list|()
argument_list|)
decl_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
name|suggestion
argument_list|)
expr_stmt|;
name|callback
operator|.
name|onSuccess
argument_list|(
name|suggestions
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|callback
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Collection
argument_list|<
name|CourseAssignment
argument_list|>
name|result
parameter_list|)
block|{
name|iValidCourseNames
operator|.
name|clear
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Suggestion
argument_list|>
name|suggestions
init|=
operator|new
name|ArrayList
argument_list|<
name|Suggestion
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
for|for
control|(
name|CourseAssignment
name|course
range|:
name|result
control|)
block|{
name|Suggestion
name|suggestion
init|=
operator|new
name|CourseSuggestion
argument_list|(
name|course
argument_list|)
decl_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
name|suggestion
argument_list|)
expr_stmt|;
name|iValidCourseNames
operator|.
name|put
argument_list|(
name|suggestion
operator|.
name|getReplacementString
argument_list|()
operator|.
name|toLowerCase
argument_list|()
argument_list|,
name|course
argument_list|)
expr_stmt|;
if|if
condition|(
name|course
operator|.
name|getClassAssignments
argument_list|()
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|ClassAssignment
name|clazz
range|:
name|course
operator|.
name|getClassAssignments
argument_list|()
control|)
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|CourseSuggestion
argument_list|(
name|course
argument_list|,
name|clazz
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|result
operator|.
name|size
argument_list|()
operator|<=
literal|5
operator|&&
name|course
operator|.
name|hasInstructionalMethodSelection
argument_list|()
condition|)
block|{
for|for
control|(
name|IdValue
name|im
range|:
name|course
operator|.
name|getInstructionalMethods
argument_list|()
control|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|CourseSuggestion
argument_list|(
name|course
argument_list|,
name|im
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
name|suggestions
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iError
operator|=
operator|new
name|HTML
argument_list|()
expr_stmt|;
name|iError
operator|.
name|setStyleName
argument_list|(
literal|"unitime-ErrorHint"
argument_list|)
expr_stmt|;
name|iError
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Roles
operator|.
name|getPresentationRole
argument_list|()
operator|.
name|setAriaHiddenState
argument_list|(
name|iError
operator|.
name|getElement
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|iError
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|getValueBox
argument_list|()
operator|.
name|addBlurHandler
argument_list|(
operator|new
name|BlurHandler
argument_list|()
block|{
specifier|public
name|void
name|onBlur
parameter_list|(
name|BlurEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iError
operator|.
name|isVisible
argument_list|()
condition|)
name|iError
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|getValueBox
argument_list|()
operator|.
name|addFocusHandler
argument_list|(
operator|new
name|FocusHandler
argument_list|()
block|{
specifier|public
name|void
name|onFocus
parameter_list|(
name|FocusEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iError
operator|.
name|isVisible
argument_list|()
operator|&&
operator|!
name|iError
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setText
argument_list|(
name|iError
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|String
name|value
init|=
name|iFilter
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
name|iLastCourse
operator|==
literal|null
operator|||
operator|!
name|iLastCourse
operator|.
name|isCourse
argument_list|()
operator|||
operator|!
name|value
operator|.
name|startsWith
argument_list|(
name|iLastCourse
operator|.
name|getCourseName
argument_list|()
argument_list|)
condition|)
block|{
name|iFilter
operator|.
name|removeAllChips
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
operator|!
name|value
operator|.
name|equals
argument_list|(
name|iLastCourse
operator|.
name|getCourseName
argument_list|()
argument_list|)
condition|)
block|{
name|iFilter
operator|.
name|setText
argument_list|(
name|iLastCourse
operator|.
name|getCourseName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iFilter
operator|.
name|resizeFilterIfNeeded
argument_list|()
expr_stmt|;
if|if
condition|(
name|iInactive
condition|)
name|iFilter
operator|.
name|removeStyleName
argument_list|(
literal|"inactive"
argument_list|)
expr_stmt|;
name|iInactive
operator|=
literal|false
expr_stmt|;
name|CourseSelectionEvent
operator|.
name|fire
argument_list|(
name|CourseRequestBox
operator|.
name|this
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|addSelectionHandler
argument_list|(
operator|new
name|SelectionHandler
argument_list|<
name|FilterBox
operator|.
name|Suggestion
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSelection
parameter_list|(
name|SelectionEvent
argument_list|<
name|Suggestion
argument_list|>
name|event
parameter_list|)
block|{
name|iLastCourse
operator|=
name|getValue
argument_list|()
expr_stmt|;
if|if
condition|(
name|iInactive
condition|)
name|iFilter
operator|.
name|removeStyleName
argument_list|(
literal|"inactive"
argument_list|)
expr_stmt|;
name|iInactive
operator|=
literal|false
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|boolean
name|isSpecialRegistration
parameter_list|()
block|{
return|return
name|iSpecReg
operator|!=
literal|null
operator|&&
name|iSpecReg
operator|.
name|isEnabled
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addValueChangeHandler
parameter_list|(
name|ValueChangeHandler
argument_list|<
name|RequestedCourse
argument_list|>
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|ValueChangeEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isActive
parameter_list|(
name|RequestedCourse
name|course
parameter_list|)
block|{
return|return
operator|!
name|iInactive
operator|&&
name|course
operator|.
name|equals
argument_list|(
name|getValue
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|void
name|activate
parameter_list|(
name|RequestedCourse
name|course
parameter_list|)
block|{
if|if
condition|(
name|iInactive
operator|&&
name|course
operator|.
name|equals
argument_list|(
name|getValue
argument_list|()
argument_list|)
condition|)
block|{
name|iInactive
operator|=
literal|false
expr_stmt|;
name|iFilter
operator|.
name|removeStyleName
argument_list|(
literal|"inactive"
argument_list|)
expr_stmt|;
name|CourseSelectionEvent
operator|.
name|fire
argument_list|(
name|CourseRequestBox
operator|.
name|this
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|deactivate
parameter_list|(
name|RequestedCourse
name|course
parameter_list|)
block|{
if|if
condition|(
operator|!
name|iInactive
operator|&&
name|course
operator|.
name|equals
argument_list|(
name|getValue
argument_list|()
argument_list|)
condition|)
block|{
name|iInactive
operator|=
literal|true
expr_stmt|;
name|iFilter
operator|.
name|addStyleName
argument_list|(
literal|"inactive"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|boolean
name|isInactive
parameter_list|(
name|RequestedCourse
name|course
parameter_list|)
block|{
return|return
name|iInactive
operator|&&
name|course
operator|.
name|equals
argument_list|(
name|getValue
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|RequestedCourse
name|getValue
parameter_list|()
block|{
name|String
name|courseName
init|=
name|iFilter
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
if|if
condition|(
name|courseName
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
operator|new
name|RequestedCourse
argument_list|()
return|;
if|if
condition|(
name|iLastCourse
operator|!=
literal|null
operator|&&
name|iLastCourse
operator|.
name|isCourse
argument_list|()
operator|&&
name|courseName
operator|.
name|startsWith
argument_list|(
name|iLastCourse
operator|.
name|getCourseName
argument_list|()
operator|+
literal|" "
argument_list|)
condition|)
name|courseName
operator|=
name|iLastCourse
operator|.
name|getCourseName
argument_list|()
expr_stmt|;
name|CourseAssignment
name|course
init|=
name|iValidCourseNames
operator|.
name|get
argument_list|(
name|courseName
operator|.
name|toLowerCase
argument_list|()
argument_list|)
decl_stmt|;
name|RequestedCourse
name|ret
init|=
operator|new
name|RequestedCourse
argument_list|()
decl_stmt|;
if|if
condition|(
name|course
operator|!=
literal|null
condition|)
block|{
name|ret
operator|.
name|setCourseId
argument_list|(
name|course
operator|.
name|getCourseId
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setCourseName
argument_list|(
name|course
operator|.
name|getCourseName
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setCourseTitle
argument_list|(
name|course
operator|.
name|getTitle
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setCredit
argument_list|(
name|course
operator|.
name|guessCreditRange
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setCanWaitList
argument_list|(
name|course
operator|.
name|isCanWaitList
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iLastCourse
operator|!=
literal|null
operator|&&
name|iLastCourse
operator|.
name|isCourse
argument_list|()
operator|&&
name|iLastCourse
operator|.
name|hasCourseId
argument_list|()
operator|&&
name|courseName
operator|.
name|equalsIgnoreCase
argument_list|(
name|iLastCourse
operator|.
name|getCourseName
argument_list|()
argument_list|)
condition|)
block|{
name|ret
operator|.
name|setStatus
argument_list|(
name|iLastCourse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setStatusNote
argument_list|(
name|iLastCourse
operator|.
name|getStatusNote
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setOverrideExternalId
argument_list|(
name|iLastCourse
operator|.
name|getOverrideExternalId
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setOverrideTimeStamp
argument_list|(
name|iLastCourse
operator|.
name|getOverrideTimeStamp
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setRequestId
argument_list|(
name|iLastCourse
operator|.
name|getRequestId
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setRequestorNote
argument_list|(
name|iLastCourse
operator|.
name|getRequestorNote
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setCanWaitList
argument_list|(
name|iLastCourse
operator|.
name|isCanWaitList
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
name|ret
operator|.
name|setStatus
argument_list|(
name|RequestedCourseStatus
operator|.
name|NEW_REQUEST
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iLastCourse
operator|!=
literal|null
operator|&&
name|iLastCourse
operator|.
name|isCourse
argument_list|()
operator|&&
name|iLastCourse
operator|.
name|hasCourseId
argument_list|()
operator|&&
name|courseName
operator|.
name|equalsIgnoreCase
argument_list|(
name|iLastCourse
operator|.
name|getCourseName
argument_list|()
argument_list|)
condition|)
block|{
name|ret
operator|.
name|setCourseId
argument_list|(
name|iLastCourse
operator|.
name|getCourseId
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setCourseName
argument_list|(
name|courseName
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setCourseTitle
argument_list|(
name|iLastCourse
operator|.
name|getCourseTitle
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setCredit
argument_list|(
name|iLastCourse
operator|.
name|getCredit
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setStatus
argument_list|(
name|iLastCourse
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setOverrideExternalId
argument_list|(
name|iLastCourse
operator|.
name|getOverrideExternalId
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setOverrideTimeStamp
argument_list|(
name|iLastCourse
operator|.
name|getOverrideTimeStamp
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setStatusNote
argument_list|(
name|iLastCourse
operator|.
name|getStatusNote
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setRequestId
argument_list|(
name|iLastCourse
operator|.
name|getRequestId
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setRequestorNote
argument_list|(
name|iLastCourse
operator|.
name|getRequestorNote
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setCanWaitList
argument_list|(
name|iLastCourse
operator|.
name|isCanWaitList
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iFreeTimeParser
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|ret
operator|.
name|setFreeTime
argument_list|(
name|iFreeTimeParser
operator|.
name|parseFreeTime
argument_list|(
name|courseName
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|ret
operator|.
name|setCourseName
argument_list|(
name|courseName
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|ret
operator|.
name|setCourseName
argument_list|(
name|courseName
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Chip
name|chip
range|:
name|iFilter
operator|.
name|getChips
argument_list|(
literal|"section"
argument_list|)
control|)
block|{
if|if
condition|(
name|chip
operator|instanceof
name|PreferenceChip
condition|)
name|ret
operator|.
name|setSelectedClass
argument_list|(
operator|(
operator|(
name|PreferenceChip
operator|)
name|chip
operator|)
operator|.
name|getPreference
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Chip
name|chip
range|:
name|iFilter
operator|.
name|getChips
argument_list|(
literal|"method"
argument_list|)
control|)
block|{
if|if
condition|(
name|chip
operator|instanceof
name|PreferenceChip
condition|)
name|ret
operator|.
name|setSelectedIntructionalMethod
argument_list|(
operator|(
operator|(
name|PreferenceChip
operator|)
name|chip
operator|)
operator|.
name|getPreference
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|iFilter
operator|.
name|isEnabled
argument_list|()
operator|&&
name|ret
operator|.
name|isCourse
argument_list|()
condition|)
name|ret
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setCanDelete
argument_list|(
name|iCanDelete
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setCanChangePriority
argument_list|(
name|iCanChangePriority
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setCanChangeAlternatives
argument_list|(
name|iCanChangeAlternatives
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setInactive
argument_list|(
name|iInactive
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|RequestedCourse
name|value
parameter_list|)
block|{
name|iLastCourse
operator|=
name|value
expr_stmt|;
name|iFilter
operator|.
name|removeAllChips
argument_list|()
expr_stmt|;
if|if
condition|(
name|iInactive
condition|)
name|iFilter
operator|.
name|removeStyleName
argument_list|(
literal|"inactive"
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
operator|||
name|value
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iFilter
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|setError
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iCanDelete
operator|=
literal|true
expr_stmt|;
name|iCanChangePriority
operator|=
literal|true
expr_stmt|;
name|iCanChangeAlternatives
operator|=
literal|true
expr_stmt|;
name|iInactive
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|value
operator|.
name|isCourse
argument_list|()
condition|)
block|{
name|iFilter
operator|.
name|setText
argument_list|(
name|value
operator|.
name|getCourseName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|.
name|hasSelectedIntructionalMethods
argument_list|()
condition|)
for|for
control|(
name|Preference
name|im
range|:
name|value
operator|.
name|getSelectedIntructionalMethods
argument_list|()
control|)
name|iFilter
operator|.
name|addChip
argument_list|(
operator|new
name|PreferenceChip
argument_list|(
literal|"method"
argument_list|,
name|im
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagInstructionalMethod
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
for|for
control|(
name|Preference
name|clazz
range|:
name|value
operator|.
name|getSelectedClasses
argument_list|()
control|)
name|iFilter
operator|.
name|addChip
argument_list|(
operator|new
name|PreferenceChip
argument_list|(
literal|"section"
argument_list|,
name|clazz
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagSection
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|value
operator|.
name|isFreeTime
argument_list|()
operator|&&
name|iFreeTimeParser
operator|!=
literal|null
condition|)
block|{
name|iFilter
operator|.
name|setText
argument_list|(
name|iFreeTimeParser
operator|.
name|freeTimesToString
argument_list|(
name|value
operator|.
name|getFreeTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iFilter
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
name|setEnabled
argument_list|(
operator|!
name|value
operator|.
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
name|iCanDelete
operator|=
name|value
operator|.
name|isCanDelete
argument_list|()
expr_stmt|;
name|iCanChangePriority
operator|=
name|value
operator|.
name|isCanChangePriority
argument_list|()
expr_stmt|;
name|iCanChangeAlternatives
operator|=
name|value
operator|.
name|isCanChangeAlternatives
argument_list|()
expr_stmt|;
name|iInactive
operator|=
name|value
operator|.
name|isInactive
argument_list|()
expr_stmt|;
if|if
condition|(
name|iInactive
condition|)
name|iFilter
operator|.
name|addStyleName
argument_list|(
literal|"inactive"
argument_list|)
expr_stmt|;
block|}
name|iFilter
operator|.
name|resizeFilterIfNeeded
argument_list|()
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasValue
parameter_list|()
block|{
name|RequestedCourse
name|value
init|=
name|getValue
argument_list|()
decl_stmt|;
return|return
name|value
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isCanDelete
parameter_list|()
block|{
return|return
name|iCanDelete
return|;
block|}
specifier|public
name|boolean
name|isCanChangePriority
parameter_list|()
block|{
return|return
name|iCanChangePriority
return|;
block|}
specifier|public
name|boolean
name|isCanChangeAlternatives
parameter_list|()
block|{
return|return
name|iCanChangeAlternatives
return|;
block|}
specifier|public
name|boolean
name|isInactive
parameter_list|()
block|{
return|return
name|iInactive
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|RequestedCourse
name|value
parameter_list|,
name|boolean
name|fireEvents
parameter_list|)
block|{
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
if|if
condition|(
name|fireEvents
condition|)
name|CourseSelectionEvent
operator|.
name|fire
argument_list|(
name|CourseRequestBox
operator|.
name|this
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setHint
parameter_list|(
name|String
name|hint
parameter_list|)
block|{
name|iFilter
operator|.
name|setHint
argument_list|(
name|hint
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getHint
parameter_list|()
block|{
return|return
name|iFilter
operator|.
name|getHint
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isEnabled
parameter_list|()
block|{
return|return
name|iFilter
operator|.
name|isEnabled
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setEnabled
parameter_list|(
name|boolean
name|enabled
parameter_list|)
block|{
if|if
condition|(
name|enabled
condition|)
block|{
name|iFilter
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|setFilterFinderFace
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|getFilterFinderButton
argument_list|()
operator|.
name|setTitle
argument_list|(
name|iFilter
operator|.
name|getFilterFinderButton
argument_list|()
operator|.
name|getAltText
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iFilter
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iFilter
operator|.
name|setFilterFinderFace
argument_list|(
name|RESOURCES
operator|.
name|finderAssigned
argument_list|()
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|getFilterFinderButton
argument_list|()
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|saved
argument_list|(
name|getText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iFilter
operator|.
name|setFilterFinderFace
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|getFilterFinderButton
argument_list|()
operator|.
name|setTitle
argument_list|(
name|iFilter
operator|.
name|getFilterFinderButton
argument_list|()
operator|.
name|getAltText
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setSuggestions
parameter_list|(
name|DataProvider
argument_list|<
name|String
argument_list|,
name|Collection
argument_list|<
name|CourseAssignment
argument_list|>
argument_list|>
name|provider
parameter_list|)
block|{
name|iDataProvider
operator|=
name|provider
expr_stmt|;
block|}
specifier|public
name|void
name|setSectionsProvider
parameter_list|(
name|DataProvider
argument_list|<
name|CourseAssignment
argument_list|,
name|Collection
argument_list|<
name|ClassAssignment
argument_list|>
argument_list|>
name|provider
parameter_list|)
block|{
name|iSectionProvider
operator|=
name|provider
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setFreeTimes
parameter_list|(
name|FreeTimeParser
name|parser
parameter_list|)
block|{
name|iFreeTimeParser
operator|=
name|parser
expr_stmt|;
name|iFreeTimeParser
operator|.
name|setValidCourseNames
argument_list|(
name|iValidCourseNames
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|FreeTimeParser
name|getFreeTimes
parameter_list|()
block|{
return|return
name|iFreeTimeParser
return|;
block|}
specifier|public
name|boolean
name|isAllowFreeTime
parameter_list|()
block|{
return|return
name|iFreeTimeParser
operator|!=
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCourseFinderFactory
parameter_list|(
name|CourseFinderFactory
name|factory
parameter_list|)
block|{
name|iCourseFinderFactory
operator|=
name|factory
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|CourseFinder
name|getCourseFinder
parameter_list|()
block|{
if|if
condition|(
name|iCourseFinder
operator|==
literal|null
condition|)
block|{
name|iCourseFinder
operator|=
name|iCourseFinderFactory
operator|.
name|createCourseFinder
argument_list|()
expr_stmt|;
name|iCourseFinder
operator|.
name|addSelectionHandler
argument_list|(
operator|new
name|SelectionHandler
argument_list|<
name|RequestedCourse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSelection
parameter_list|(
name|SelectionEvent
argument_list|<
name|RequestedCourse
argument_list|>
name|event
parameter_list|)
block|{
name|select
argument_list|(
name|event
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|iCourseFinder
operator|instanceof
name|HasCloseHandlers
condition|)
block|{
operator|(
operator|(
name|HasCloseHandlers
operator|)
name|iCourseFinder
operator|)
operator|.
name|addCloseHandler
argument_list|(
operator|new
name|CloseHandler
argument_list|<
name|PopupPanel
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onClose
parameter_list|(
name|CloseEvent
argument_list|<
name|PopupPanel
argument_list|>
name|event
parameter_list|)
block|{
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|iFilter
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|iCourseFinder
return|;
block|}
specifier|public
name|void
name|select
parameter_list|(
name|RequestedCourse
name|rc
parameter_list|)
block|{
if|if
condition|(
name|isEnabled
argument_list|()
condition|)
name|setValue
argument_list|(
name|rc
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setLabel
parameter_list|(
name|String
name|title
parameter_list|,
name|String
name|finderTitle
parameter_list|)
block|{
name|iFilter
operator|.
name|setAriaLabel
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|getFilterFinderButton
argument_list|()
operator|.
name|setAltText
argument_list|(
name|finderTitle
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|hideSuggestionList
parameter_list|()
block|{
name|iFilter
operator|.
name|hideSuggestions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|showSuggestionList
parameter_list|()
block|{
name|iFilter
operator|.
name|showSuggestions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setWidth
parameter_list|(
name|String
name|width
parameter_list|)
block|{
name|iFilter
operator|.
name|setWidth
argument_list|(
name|width
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setError
parameter_list|(
name|String
name|error
parameter_list|)
block|{
name|iError
operator|.
name|setStyleName
argument_list|(
literal|"unitime-ErrorHint"
argument_list|)
expr_stmt|;
if|if
condition|(
name|error
operator|==
literal|null
operator|||
name|error
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iError
operator|.
name|setHTML
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iError
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iError
operator|.
name|setHTML
argument_list|(
name|error
argument_list|)
expr_stmt|;
name|iError
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|setStatus
argument_list|(
name|error
argument_list|)
expr_stmt|;
comment|// AriaStatus.getInstance().setText(error);
block|}
block|}
specifier|public
name|void
name|setWarning
parameter_list|(
name|String
name|error
parameter_list|)
block|{
name|iError
operator|.
name|setStyleName
argument_list|(
literal|"unitime-WarningHint"
argument_list|)
expr_stmt|;
if|if
condition|(
name|error
operator|==
literal|null
operator|||
name|error
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iError
operator|.
name|setHTML
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iError
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iError
operator|.
name|setHTML
argument_list|(
name|error
argument_list|)
expr_stmt|;
name|iError
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|setStatus
argument_list|(
name|error
argument_list|)
expr_stmt|;
comment|// AriaStatus.getInstance().setText(error);
block|}
block|}
specifier|public
name|void
name|setInfo
parameter_list|(
name|String
name|error
parameter_list|)
block|{
name|iError
operator|.
name|setStyleName
argument_list|(
literal|"unitime-InfoHint"
argument_list|)
expr_stmt|;
if|if
condition|(
name|error
operator|==
literal|null
operator|||
name|error
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iError
operator|.
name|setHTML
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iError
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iError
operator|.
name|setHTML
argument_list|(
name|error
argument_list|)
expr_stmt|;
name|iError
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|setStatus
argument_list|(
name|error
argument_list|)
expr_stmt|;
comment|// AriaStatus.getInstance().setText(error);
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|getError
parameter_list|()
block|{
return|return
operator|(
name|iError
operator|.
name|isVisible
argument_list|()
operator|&&
operator|!
literal|"unitime-Hint"
operator|.
name|equals
argument_list|(
name|iError
operator|.
name|getStyleName
argument_list|()
argument_list|)
condition|?
name|iError
operator|.
name|getText
argument_list|()
else|:
literal|null
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setAccessKey
parameter_list|(
name|char
name|a
parameter_list|)
block|{
name|iFilter
operator|.
name|setAccessKey
argument_list|(
name|a
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getTabIndex
parameter_list|()
block|{
return|return
name|iFilter
operator|.
name|getTabIndex
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setFocus
parameter_list|(
name|boolean
name|focused
parameter_list|)
block|{
name|iFilter
operator|.
name|setFocus
argument_list|(
name|focused
argument_list|)
expr_stmt|;
if|if
condition|(
name|focused
condition|)
name|iFilter
operator|.
name|getValueBox
argument_list|()
operator|.
name|selectAll
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setTabIndex
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|iFilter
operator|.
name|setTabIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|openDialogAsync
parameter_list|()
block|{
name|GWT
operator|.
name|runAsync
argument_list|(
operator|new
name|RunAsyncCallback
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|()
block|{
name|openDialog
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|reason
parameter_list|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedToLoadTheApp
argument_list|(
name|reason
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|openDialog
parameter_list|()
block|{
name|getCourseFinder
argument_list|()
operator|.
name|setValue
argument_list|(
name|getValue
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|getCourseFinder
argument_list|()
operator|.
name|setEnabled
argument_list|(
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|getCourseFinder
argument_list|()
operator|.
name|findCourse
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addValidator
parameter_list|(
name|Validator
argument_list|<
name|CourseSelection
argument_list|>
name|validator
parameter_list|)
block|{
name|iValidators
operator|.
name|add
argument_list|(
name|validator
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|validate
parameter_list|()
block|{
if|if
condition|(
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|setError
argument_list|(
literal|null
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
if|if
condition|(
name|iFreeTimeParser
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|iFreeTimeParser
operator|.
name|parseFreeTime
argument_list|(
name|iFilter
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|setError
argument_list|(
literal|null
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
if|if
condition|(
name|iFilter
operator|.
name|getText
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|CONSTANTS
operator|.
name|freePrefix
argument_list|()
operator|.
name|toLowerCase
argument_list|()
argument_list|)
condition|)
block|{
name|setError
argument_list|(
name|MESSAGES
operator|.
name|invalidFreeTime
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|e
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
block|}
for|for
control|(
name|Validator
argument_list|<
name|CourseSelection
argument_list|>
name|validator
range|:
name|iValidators
control|)
block|{
name|String
name|message
init|=
name|validator
operator|.
name|validate
argument_list|(
name|this
argument_list|)
decl_stmt|;
if|if
condition|(
name|message
operator|!=
literal|null
condition|)
block|{
name|setError
argument_list|(
name|message
argument_list|)
expr_stmt|;
return|return
name|message
return|;
block|}
block|}
name|setError
argument_list|(
literal|null
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addCourseSelectionHandler
parameter_list|(
name|CourseSelectionHandler
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|CourseSelectionEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getText
parameter_list|()
block|{
return|return
name|iFilter
operator|.
name|getText
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setText
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|iFilter
operator|.
name|setValue
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
class|class
name|CourseSuggestion
extends|extends
name|FilterBox
operator|.
name|Suggestion
block|{
name|RequestedCourse
name|iCourse
init|=
literal|null
decl_stmt|;
specifier|public
name|CourseSuggestion
parameter_list|(
name|CourseAssignment
name|course
parameter_list|)
block|{
name|super
argument_list|(
name|course
operator|.
name|getCourseName
argument_list|()
argument_list|,
operator|!
name|course
operator|.
name|hasUniqueName
argument_list|()
operator|||
name|iShowCourses
condition|?
name|course
operator|.
name|getCourseNameWithTitle
argument_list|()
else|:
name|course
operator|.
name|getCourseName
argument_list|()
argument_list|,
name|course
operator|.
name|hasTitle
argument_list|()
condition|?
name|course
operator|.
name|getTitle
argument_list|()
else|:
name|MESSAGES
operator|.
name|hintCourseWithNoTitle
argument_list|()
argument_list|)
expr_stmt|;
name|iCourse
operator|=
operator|new
name|RequestedCourse
argument_list|()
expr_stmt|;
name|iCourse
operator|.
name|setCourseId
argument_list|(
name|course
operator|.
name|getCourseId
argument_list|()
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|setCourseName
argument_list|(
operator|!
name|course
operator|.
name|hasUniqueName
argument_list|()
operator|||
name|iShowCourses
condition|?
name|course
operator|.
name|getCourseNameWithTitle
argument_list|()
else|:
name|course
operator|.
name|getCourseName
argument_list|()
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|setCourseTitle
argument_list|(
name|course
operator|.
name|getTitle
argument_list|()
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|setCredit
argument_list|(
name|course
operator|.
name|guessCreditRange
argument_list|()
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|setCanWaitList
argument_list|(
name|course
operator|.
name|isCanWaitList
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|getText
argument_list|()
operator|.
name|equals
argument_list|(
name|course
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|||
name|getText
argument_list|()
operator|.
name|startsWith
argument_list|(
name|course
operator|.
name|getCourseName
argument_list|()
operator|+
literal|" "
argument_list|)
operator|||
name|getText
argument_list|()
operator|.
name|equals
argument_list|(
name|course
operator|.
name|getCourseNameWithTitle
argument_list|()
argument_list|)
operator|||
name|getText
argument_list|()
operator|.
name|startsWith
argument_list|(
name|course
operator|.
name|getCourseNameWithTitle
argument_list|()
operator|+
literal|" "
argument_list|)
condition|)
block|{
for|for
control|(
name|Chip
name|chip
range|:
name|iFilter
operator|.
name|getChips
argument_list|(
literal|"section"
argument_list|)
control|)
if|if
condition|(
name|chip
operator|instanceof
name|PreferenceChip
condition|)
name|iCourse
operator|.
name|setSelectedClass
argument_list|(
operator|(
operator|(
name|PreferenceChip
operator|)
name|chip
operator|)
operator|.
name|getPreference
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
for|for
control|(
name|Chip
name|chip
range|:
name|iFilter
operator|.
name|getChips
argument_list|(
literal|"method"
argument_list|)
control|)
if|if
condition|(
name|chip
operator|instanceof
name|PreferenceChip
condition|)
name|iCourse
operator|.
name|setSelectedIntructionalMethod
argument_list|(
operator|(
operator|(
name|PreferenceChip
operator|)
name|chip
operator|)
operator|.
name|getPreference
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|CourseSuggestion
parameter_list|(
name|CourseAssignment
name|course
parameter_list|,
name|IdValue
name|im
parameter_list|,
name|boolean
name|required
parameter_list|)
block|{
name|this
argument_list|(
name|course
argument_list|)
expr_stmt|;
name|setDisplayString
argument_list|(
name|course
operator|.
name|getCourseName
argument_list|()
operator|+
literal|" "
operator|+
name|im
operator|.
name|getValue
argument_list|()
operator|+
operator|(
name|required
condition|?
literal|"!"
else|:
literal|""
operator|)
argument_list|)
expr_stmt|;
name|setHint
argument_list|(
literal|"<span class='item-hint'>"
operator|+
operator|(
name|required
condition|?
name|MESSAGES
operator|.
name|hintRequiredInstructionalMethod
argument_list|()
else|:
name|MESSAGES
operator|.
name|hintInstructionalMethod
argument_list|()
operator|)
operator|+
literal|"</span>"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iCourse
operator|.
name|hasSelectedIntructionalMethods
argument_list|()
condition|)
name|iCourse
operator|.
name|getSelectedIntructionalMethods
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iCourse
operator|.
name|setSelectedIntructionalMethod
argument_list|(
operator|new
name|Preference
argument_list|(
name|im
operator|.
name|getId
argument_list|()
argument_list|,
name|im
operator|.
name|getValue
argument_list|()
argument_list|,
name|required
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|CourseSuggestion
parameter_list|(
name|CourseAssignment
name|course
parameter_list|,
name|ClassAssignment
name|clazz
parameter_list|,
name|boolean
name|required
parameter_list|)
block|{
name|this
argument_list|(
name|course
argument_list|)
expr_stmt|;
name|setDisplayString
argument_list|(
name|course
operator|.
name|getCourseName
argument_list|()
operator|+
literal|" "
operator|+
name|clazz
operator|.
name|getSelection
argument_list|(
name|required
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|section
init|=
operator|(
name|clazz
operator|.
name|getSelection
argument_list|(
name|required
argument_list|)
operator|.
name|getText
argument_list|()
operator|.
name|startsWith
argument_list|(
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|)
condition|?
literal|""
else|:
name|clazz
operator|.
name|getSubpart
argument_list|()
operator|+
literal|" "
operator|)
operator|+
name|clazz
operator|.
name|getTimeString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|emailArrangeHours
argument_list|()
argument_list|)
operator|+
operator|(
name|clazz
operator|.
name|hasNote
argument_list|()
condition|?
literal|" "
operator|+
name|clazz
operator|.
name|getNote
argument_list|()
else|:
literal|""
operator|)
decl_stmt|;
name|setHint
argument_list|(
literal|"<span class='item-hint'>"
operator|+
operator|(
name|required
condition|?
name|MESSAGES
operator|.
name|hintRequiredSection
argument_list|(
name|section
argument_list|)
else|:
name|section
operator|)
operator|+
literal|"</span>"
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|setSelectedClass
argument_list|(
name|clazz
operator|.
name|getSelection
argument_list|(
name|required
argument_list|)
argument_list|,
operator|!
name|iCourse
operator|.
name|isSelectedClass
argument_list|(
name|clazz
operator|.
name|getSelection
argument_list|(
name|required
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|RequestedCourse
name|getRequestedCourse
parameter_list|()
block|{
return|return
name|iCourse
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|CourseRequestFilterBox
extends|extends
name|FilterBox
block|{
specifier|private
name|Image
name|iFilterFinder
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iHint
init|=
literal|""
decl_stmt|;
specifier|public
name|CourseRequestFilterBox
parameter_list|(
name|ClickHandler
name|finderClickHandler
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|iFilterFinder
operator|=
operator|new
name|Image
argument_list|(
name|RESOURCES
operator|.
name|finder
argument_list|()
argument_list|)
expr_stmt|;
name|iFilterFinder
operator|.
name|setAltText
argument_list|(
name|MESSAGES
operator|.
name|altOpenFilter
argument_list|()
argument_list|)
expr_stmt|;
name|iFilterFinder
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|altOpenFilter
argument_list|()
argument_list|)
expr_stmt|;
name|iFilterFinder
operator|.
name|addStyleName
argument_list|(
literal|"button-image"
argument_list|)
expr_stmt|;
name|insert
argument_list|(
name|iFilterFinder
argument_list|,
name|getWidgetIndex
argument_list|(
name|iFilterOpen
argument_list|)
argument_list|)
expr_stmt|;
name|Roles
operator|.
name|getDocumentRole
argument_list|()
operator|.
name|setAriaHiddenState
argument_list|(
name|iFilterFinder
operator|.
name|getElement
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iFilterFinder
operator|.
name|addClickHandler
argument_list|(
name|finderClickHandler
argument_list|)
expr_stmt|;
name|iFilterClear
operator|.
name|setAltText
argument_list|(
name|MESSAGES
operator|.
name|altClearCourseRequest
argument_list|()
argument_list|)
expr_stmt|;
name|iFilterClear
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|altClearCourseRequest
argument_list|()
argument_list|)
expr_stmt|;
name|remove
argument_list|(
name|iFilterOpen
argument_list|)
expr_stmt|;
name|remove
argument_list|(
name|iFilterClose
argument_list|)
expr_stmt|;
name|getValueBox
argument_list|()
operator|.
name|addKeyDownHandler
argument_list|(
operator|new
name|KeyDownHandler
argument_list|()
block|{
specifier|public
name|void
name|onKeyDown
parameter_list|(
name|KeyDownEvent
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|isEnabled
argument_list|()
condition|)
return|return;
if|if
condition|(
operator|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
literal|'F'
operator|||
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
literal|'f'
operator|)
operator|&&
operator|(
name|event
operator|.
name|isControlKeyDown
argument_list|()
operator|||
name|event
operator|.
name|isAltKeyDown
argument_list|()
operator|)
condition|)
block|{
name|hideSuggestions
argument_list|()
expr_stmt|;
name|iFilterFinder
operator|.
name|getElement
argument_list|()
operator|.
name|dispatchEvent
argument_list|(
name|Document
operator|.
name|get
argument_list|()
operator|.
name|createClickEvent
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|event
operator|.
name|isControlKeyDown
argument_list|()
operator|||
name|event
operator|.
name|isAltKeyDown
argument_list|()
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getWidgetCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Widget
name|w
init|=
name|getWidget
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|w
operator|instanceof
name|FilterOperation
operator|&&
name|w
operator|.
name|isVisible
argument_list|()
operator|&&
operator|(
operator|(
name|FilterOperation
operator|)
name|w
operator|)
operator|.
name|getAccessKey
argument_list|()
operator|!=
literal|null
operator|&&
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
operator|(
operator|(
name|FilterOperation
operator|)
name|w
operator|)
operator|.
name|getAccessKey
argument_list|()
condition|)
block|{
name|w
operator|.
name|getElement
argument_list|()
operator|.
name|dispatchEvent
argument_list|(
name|Document
operator|.
name|get
argument_list|()
operator|.
name|createClickEvent
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|getValueBox
argument_list|()
operator|.
name|addBlurHandler
argument_list|(
operator|new
name|BlurHandler
argument_list|()
block|{
specifier|public
name|void
name|onBlur
parameter_list|(
name|BlurEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|iHint
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iFilter
operator|.
name|setText
argument_list|(
name|iHint
argument_list|)
expr_stmt|;
name|getValueBox
argument_list|()
operator|.
name|addStyleName
argument_list|(
literal|"hint"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|getValueBox
argument_list|()
operator|.
name|addFocusHandler
argument_list|(
operator|new
name|FocusHandler
argument_list|()
block|{
specifier|public
name|void
name|onFocus
parameter_list|(
name|FocusEvent
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|iHint
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iFilter
operator|.
name|getText
argument_list|()
operator|.
name|equals
argument_list|(
name|iHint
argument_list|)
condition|)
block|{
name|getValueBox
argument_list|()
operator|.
name|removeStyleName
argument_list|(
literal|"hint"
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|addSelectionHandler
argument_list|(
operator|new
name|SelectionHandler
argument_list|<
name|FilterBox
operator|.
name|Suggestion
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSelection
parameter_list|(
name|SelectionEvent
argument_list|<
name|Suggestion
argument_list|>
name|event
parameter_list|)
block|{
name|getValueBox
argument_list|()
operator|.
name|removeStyleName
argument_list|(
literal|"hint"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|setFilterFinderFace
parameter_list|(
name|ImageResource
name|face
parameter_list|)
block|{
if|if
condition|(
name|face
operator|==
literal|null
condition|)
name|iFilterFinder
operator|.
name|setResource
argument_list|(
name|RESOURCES
operator|.
name|finder
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|iFilterFinder
operator|.
name|setResource
argument_list|(
name|face
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|Image
name|getFilterFinderButton
parameter_list|()
block|{
return|return
name|iFilterFinder
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|resizeFilterIfNeeded
parameter_list|()
block|{
if|if
condition|(
operator|!
name|isAttached
argument_list|()
condition|)
return|return;
name|ChipPanel
name|last
init|=
name|getLastChipPanel
argument_list|()
decl_stmt|;
if|if
condition|(
name|iFilterClear
operator|.
name|isAttached
argument_list|()
condition|)
name|iFilterClear
operator|.
name|setVisible
argument_list|(
name|isEnabled
argument_list|()
operator|&&
operator|(
operator|!
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|||
name|last
operator|!=
literal|null
operator|)
argument_list|)
expr_stmt|;
name|iFilterFinder
operator|.
name|setVisible
argument_list|(
name|isEnabled
argument_list|()
operator|||
operator|!
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|buttonWidth
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getWidgetCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Widget
name|w
init|=
name|getWidget
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|w
operator|instanceof
name|FilterOperation
condition|)
operator|(
operator|(
name|FilterOperation
operator|)
name|w
operator|)
operator|.
name|onBeforeResize
argument_list|(
name|this
argument_list|)
expr_stmt|;
if|if
condition|(
name|w
operator|instanceof
name|Image
operator|&&
name|w
operator|.
name|isAttached
argument_list|()
operator|&&
name|w
operator|.
name|isVisible
argument_list|()
condition|)
name|buttonWidth
operator|+=
name|w
operator|.
name|getElement
argument_list|()
operator|.
name|getOffsetWidth
argument_list|()
operator|+
literal|2
expr_stmt|;
block|}
name|int
name|w
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getWidgetCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|getWidget
argument_list|(
name|i
argument_list|)
operator|instanceof
name|TextBox
condition|)
continue|continue;
name|w
operator|+=
literal|2
operator|+
name|getWidget
argument_list|(
name|i
argument_list|)
operator|.
name|getOffsetWidth
argument_list|()
expr_stmt|;
block|}
name|int
name|width
init|=
name|getElement
argument_list|()
operator|.
name|getClientWidth
argument_list|()
operator|-
name|w
decl_stmt|;
if|if
condition|(
name|width
operator|<
literal|100
condition|)
block|{
name|width
operator|=
name|getElement
argument_list|()
operator|.
name|getClientWidth
argument_list|()
operator|-
name|buttonWidth
expr_stmt|;
block|}
name|iFilter
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setWidth
argument_list|(
name|width
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
if|if
condition|(
name|isSuggestionsShowing
argument_list|()
condition|)
name|iSuggestionsPopup
operator|.
name|moveRelativeTo
argument_list|(
name|this
argument_list|)
expr_stmt|;
if|if
condition|(
name|isFilterPopupShowing
argument_list|()
condition|)
name|iFilterPopup
operator|.
name|moveRelativeTo
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addChip
parameter_list|(
name|Chip
name|chip
parameter_list|,
name|boolean
name|fireEvents
parameter_list|)
block|{
specifier|final
name|ChipPanel
name|panel
init|=
operator|new
name|ChipPanel
argument_list|(
name|chip
argument_list|,
name|getChipColor
argument_list|(
name|chip
argument_list|)
argument_list|)
decl_stmt|;
name|panel
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|remove
argument_list|(
name|panel
argument_list|)
expr_stmt|;
name|resizeFilterIfNeeded
argument_list|()
expr_stmt|;
name|setAriaLabel
argument_list|(
name|toAriaString
argument_list|()
argument_list|)
expr_stmt|;
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|CourseRequestFilterBox
operator|.
name|this
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|insert
argument_list|(
name|panel
argument_list|,
name|getWidgetIndex
argument_list|(
name|iFilterFinder
argument_list|)
argument_list|)
expr_stmt|;
name|resizeFilterIfNeeded
argument_list|()
expr_stmt|;
name|setAriaLabel
argument_list|(
name|toAriaString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|fireEvents
condition|)
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|this
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getText
parameter_list|()
block|{
return|return
name|iFilter
operator|.
name|getText
argument_list|()
operator|.
name|equals
argument_list|(
name|iHint
argument_list|)
condition|?
literal|""
else|:
name|iFilter
operator|.
name|getText
argument_list|()
return|;
block|}
specifier|public
name|void
name|setText
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|iFilter
operator|.
name|setText
argument_list|(
name|text
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|iFocus
operator|&&
name|text
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
name|iHint
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iFilter
operator|.
name|setText
argument_list|(
name|iHint
argument_list|)
expr_stmt|;
name|getValueBox
argument_list|()
operator|.
name|addStyleName
argument_list|(
literal|"hint"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|getValueBox
argument_list|()
operator|.
name|removeStyleName
argument_list|(
literal|"hint"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setHint
parameter_list|(
name|String
name|hint
parameter_list|)
block|{
if|if
condition|(
name|iFilter
operator|.
name|getText
argument_list|()
operator|.
name|equals
argument_list|(
name|iHint
argument_list|)
condition|)
block|{
if|if
condition|(
operator|!
name|iFocus
condition|)
block|{
name|iFilter
operator|.
name|setText
argument_list|(
name|hint
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|hint
operator|.
name|isEmpty
argument_list|()
condition|)
name|getValueBox
argument_list|()
operator|.
name|addStyleName
argument_list|(
literal|"hint"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iFilter
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|getValueBox
argument_list|()
operator|.
name|removeStyleName
argument_list|(
literal|"hint"
argument_list|)
expr_stmt|;
block|}
block|}
name|iHint
operator|=
name|hint
expr_stmt|;
block|}
specifier|public
name|String
name|getHint
parameter_list|()
block|{
return|return
name|iHint
return|;
block|}
block|}
specifier|public
name|void
name|addOperation
parameter_list|(
name|FilterOperation
name|operation
parameter_list|,
name|boolean
name|beforeFinder
parameter_list|)
block|{
name|operation
operator|.
name|addStyleName
argument_list|(
literal|"button-image"
argument_list|)
expr_stmt|;
if|if
condition|(
name|beforeFinder
condition|)
name|iFilter
operator|.
name|add
argument_list|(
name|operation
argument_list|)
expr_stmt|;
else|else
name|iFilter
operator|.
name|insert
argument_list|(
name|operation
argument_list|,
name|iFilter
operator|.
name|getWidgetIndex
argument_list|(
name|iFilter
operator|.
name|iFilterFinder
argument_list|)
argument_list|)
expr_stmt|;
name|Roles
operator|.
name|getDocumentRole
argument_list|()
operator|.
name|setAriaHiddenState
argument_list|(
name|operation
operator|.
name|getElement
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addStatus
parameter_list|(
name|FilterOperation
name|operation
parameter_list|)
block|{
name|operation
operator|.
name|addStyleName
argument_list|(
literal|"status-image"
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|insert
argument_list|(
name|operation
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeOperation
parameter_list|(
name|FilterOperation
name|operation
parameter_list|)
block|{
name|iFilter
operator|.
name|remove
argument_list|(
name|operation
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeClearOperation
parameter_list|()
block|{
name|iFilter
operator|.
name|remove
argument_list|(
name|iFilter
operator|.
name|iFilterClear
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|resizeFilterIfNeeded
parameter_list|()
block|{
name|iFilter
operator|.
name|resizeFilterIfNeeded
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|FilterOperation
extends|extends
name|Image
block|{
specifier|private
name|Character
name|iAccessKey
decl_stmt|;
specifier|public
name|FilterOperation
parameter_list|(
name|ImageResource
name|resource
parameter_list|,
name|Character
name|accessKey
parameter_list|)
block|{
name|super
argument_list|(
name|resource
argument_list|)
expr_stmt|;
name|iAccessKey
operator|=
name|accessKey
expr_stmt|;
name|Roles
operator|.
name|getDocumentRole
argument_list|()
operator|.
name|setAriaHiddenState
argument_list|(
name|getElement
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|FilterOperation
parameter_list|(
name|ImageResource
name|resource
parameter_list|)
block|{
name|this
argument_list|(
name|resource
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onBeforeResize
parameter_list|(
name|CourseRequestFilterBox
name|filter
parameter_list|)
block|{
block|}
specifier|public
name|Character
name|getAccessKey
parameter_list|()
block|{
return|return
name|iAccessKey
return|;
block|}
block|}
specifier|public
class|class
name|FilterStatus
extends|extends
name|FilterOperation
implements|implements
name|HasAriaLabel
block|{
specifier|public
name|FilterStatus
parameter_list|(
name|ImageResource
name|resource
parameter_list|,
name|Character
name|accessKey
parameter_list|)
block|{
name|super
argument_list|(
name|resource
argument_list|,
name|accessKey
argument_list|)
expr_stmt|;
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|click
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|click
parameter_list|()
block|{
if|if
condition|(
name|isVisible
argument_list|()
condition|)
block|{
if|if
condition|(
name|iSpecReg
operator|==
literal|null
operator|||
operator|!
name|iSpecReg
operator|.
name|isAllowChangeRequestNote
argument_list|()
operator|||
operator|!
name|iSpecReg
operator|.
name|getChangeRequestorNoteInterface
argument_list|()
operator|.
name|changeRequestorNote
argument_list|(
name|getValue
argument_list|()
argument_list|)
condition|)
name|UniTimeConfirmationDialog
operator|.
name|info
argument_list|(
name|getAltText
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|FilterStatus
parameter_list|(
name|ImageResource
name|resource
parameter_list|)
block|{
name|this
argument_list|(
name|resource
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setStatus
parameter_list|(
name|ImageResource
name|icon
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setResource
argument_list|(
name|icon
argument_list|)
expr_stmt|;
name|setTitle
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|setAriaLabel
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|clearStatus
parameter_list|()
block|{
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getAriaLabel
parameter_list|()
block|{
return|return
name|getAltText
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setAriaLabel
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|setAltText
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|PreferenceChip
extends|extends
name|Chip
block|{
name|Preference
name|iPreference
decl_stmt|;
specifier|public
name|PreferenceChip
parameter_list|(
name|String
name|command
parameter_list|,
name|Preference
name|preference
parameter_list|)
block|{
name|super
argument_list|(
name|command
argument_list|,
name|preference
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|iPreference
operator|=
name|preference
expr_stmt|;
block|}
specifier|public
name|Preference
name|getPreference
parameter_list|()
block|{
return|return
name|iPreference
return|;
block|}
block|}
block|}
end_class

end_unit

