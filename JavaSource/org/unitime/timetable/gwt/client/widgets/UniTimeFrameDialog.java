begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 - 3.5 (University Timetabling Application)  * Copyright (C) 2010 - 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|shared
operator|.
name|GWT
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|UniTimeFrameDialog
block|{
specifier|private
specifier|static
name|UniTimeFrameDialogDisplay
name|sDialog
init|=
literal|null
decl_stmt|;
specifier|public
specifier|static
specifier|native
name|void
name|createTriggers
parameter_list|()
comment|/*-{ 		$wnd.showGwtDialog = function(title, source, width, height) { 			@org.unitime.timetable.gwt.client.widgets.UniTimeFrameDialog::openDialog(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)(title, source, width, height); 		}; 		$wnd.hideGwtDialog = function() { 			@org.unitime.timetable.gwt.client.widgets.UniTimeFrameDialog::hideDialog()(); 		}; 		$wnd.hasGwtDialog = function() { 			return @org.unitime.timetable.gwt.client.widgets.UniTimeFrameDialog::hasDialog()(); 		}; 	}-*/
function_decl|;
specifier|public
specifier|static
name|void
name|openDialog
parameter_list|(
name|String
name|title
parameter_list|,
name|String
name|source
parameter_list|)
block|{
name|openDialog
argument_list|(
name|title
argument_list|,
name|source
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|openDialog
parameter_list|(
name|String
name|title
parameter_list|,
name|String
name|source
parameter_list|,
name|String
name|width
parameter_list|,
name|String
name|height
parameter_list|)
block|{
if|if
condition|(
name|sDialog
operator|==
literal|null
condition|)
name|sDialog
operator|=
name|GWT
operator|.
name|create
argument_list|(
name|UniTimeFrameDialogDisplay
operator|.
name|class
argument_list|)
expr_stmt|;
name|sDialog
operator|.
name|openDialog
argument_list|(
name|title
argument_list|,
name|source
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|hideDialog
parameter_list|()
block|{
if|if
condition|(
name|sDialog
operator|!=
literal|null
operator|&&
name|sDialog
operator|.
name|isShowing
argument_list|()
condition|)
name|sDialog
operator|.
name|hideDialog
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|boolean
name|hasDialog
parameter_list|()
block|{
return|return
name|sDialog
operator|!=
literal|null
operator|&&
name|sDialog
operator|.
name|isShowing
argument_list|()
return|;
block|}
block|}
end_class

end_unit

