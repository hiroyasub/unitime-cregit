begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|HasAdditionalStyleNames
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|HasCellAlignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|HasColSpan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|HasColumn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|HasStyleName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Cursor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHorizontalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|MenuBar
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|MenuItem
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|PopupPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|UniTimeTableHeader
extends|extends
name|HTML
implements|implements
name|HasStyleName
implements|,
name|HasCellAlignment
implements|,
name|HasColSpan
implements|,
name|HasAdditionalStyleNames
implements|,
name|HasColumn
block|{
specifier|private
name|int
name|iColSpan
init|=
literal|1
decl_stmt|,
name|iColumn
init|=
operator|-
literal|1
decl_stmt|;
specifier|private
name|HorizontalAlignmentConstant
name|iAlign
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Operation
argument_list|>
name|iOperations
init|=
operator|new
name|ArrayList
argument_list|<
name|Operation
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|iStyleNames
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|String
name|iTitle
init|=
literal|null
decl_stmt|;
specifier|private
name|Boolean
name|iOrder
init|=
literal|null
decl_stmt|;
specifier|private
name|ClickHandler
name|iClickHandler
init|=
literal|null
decl_stmt|;
specifier|public
name|UniTimeTableHeader
parameter_list|(
name|String
name|title
parameter_list|,
name|int
name|colSpan
parameter_list|,
name|HorizontalAlignmentConstant
name|align
parameter_list|)
block|{
name|super
argument_list|(
name|title
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iColSpan
operator|=
name|colSpan
expr_stmt|;
name|iAlign
operator|=
name|align
expr_stmt|;
name|iTitle
operator|=
name|title
expr_stmt|;
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
specifier|final
name|PopupPanel
name|popup
init|=
operator|new
name|PopupPanel
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|popup
operator|.
name|addStyleName
argument_list|(
literal|"unitime-Menu"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|setMenu
argument_list|(
name|popup
argument_list|)
condition|)
return|return;
name|popup
operator|.
name|showRelativeTo
argument_list|(
operator|(
name|Widget
operator|)
name|event
operator|.
name|getSource
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|UniTimeTableHeader
parameter_list|(
name|String
name|title
parameter_list|,
name|int
name|colSpan
parameter_list|,
name|HorizontalAlignmentConstant
name|align
parameter_list|,
name|ClickHandler
name|clickHandler
parameter_list|)
block|{
name|super
argument_list|(
name|title
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iColSpan
operator|=
name|colSpan
expr_stmt|;
name|iAlign
operator|=
name|align
expr_stmt|;
name|iTitle
operator|=
name|title
expr_stmt|;
name|iClickHandler
operator|=
name|clickHandler
expr_stmt|;
name|addClickHandler
argument_list|(
name|clickHandler
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|setMenu
parameter_list|(
specifier|final
name|PopupPanel
name|popup
parameter_list|)
block|{
name|List
argument_list|<
name|Operation
argument_list|>
name|operations
init|=
name|getOperations
argument_list|()
decl_stmt|;
if|if
condition|(
name|operations
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|false
return|;
name|boolean
name|first
init|=
literal|true
decl_stmt|;
name|MenuBar
name|menu
init|=
operator|new
name|MenuBar
argument_list|(
literal|true
argument_list|)
decl_stmt|;
for|for
control|(
specifier|final
name|Operation
name|op
range|:
name|operations
control|)
block|{
if|if
condition|(
operator|!
name|op
operator|.
name|isApplicable
argument_list|()
condition|)
continue|continue;
if|if
condition|(
name|op
operator|.
name|hasSeparator
argument_list|()
operator|&&
operator|!
name|first
condition|)
name|menu
operator|.
name|addSeparator
argument_list|()
expr_stmt|;
name|first
operator|=
literal|false
expr_stmt|;
name|MenuItem
name|item
init|=
operator|new
name|MenuItem
argument_list|(
name|op
operator|.
name|getName
argument_list|()
argument_list|,
literal|true
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|popup
operator|.
name|hide
argument_list|()
expr_stmt|;
name|op
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|item
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setCursor
argument_list|(
name|Cursor
operator|.
name|POINTER
argument_list|)
expr_stmt|;
name|menu
operator|.
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|first
condition|)
return|return
literal|false
return|;
name|menu
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|menu
operator|.
name|setFocusOnHoverEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|popup
operator|.
name|add
argument_list|(
name|menu
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|UniTimeTableHeader
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|this
argument_list|(
name|title
argument_list|,
literal|1
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_LEFT
argument_list|)
expr_stmt|;
block|}
specifier|public
name|UniTimeTableHeader
parameter_list|(
name|String
name|title
parameter_list|,
name|int
name|colSpan
parameter_list|)
block|{
name|this
argument_list|(
name|title
argument_list|,
name|colSpan
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_LEFT
argument_list|)
expr_stmt|;
block|}
specifier|public
name|UniTimeTableHeader
parameter_list|()
block|{
name|this
argument_list|(
literal|" "
argument_list|,
literal|1
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_LEFT
argument_list|)
expr_stmt|;
block|}
specifier|public
name|UniTimeTableHeader
parameter_list|(
name|String
name|title
parameter_list|,
name|ClickHandler
name|clickHandler
parameter_list|)
block|{
name|this
argument_list|(
name|title
argument_list|,
literal|1
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_LEFT
argument_list|,
name|clickHandler
argument_list|)
expr_stmt|;
block|}
specifier|public
name|UniTimeTableHeader
parameter_list|(
name|String
name|title
parameter_list|,
name|int
name|colSpan
parameter_list|,
name|ClickHandler
name|clickHandler
parameter_list|)
block|{
name|this
argument_list|(
name|title
argument_list|,
name|colSpan
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_LEFT
argument_list|,
name|clickHandler
argument_list|)
expr_stmt|;
block|}
specifier|public
name|UniTimeTableHeader
parameter_list|(
name|ClickHandler
name|clickHandler
parameter_list|)
block|{
name|this
argument_list|(
literal|" "
argument_list|,
literal|1
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_LEFT
argument_list|,
name|clickHandler
argument_list|)
expr_stmt|;
block|}
specifier|public
name|UniTimeTableHeader
parameter_list|(
name|String
name|title
parameter_list|,
name|HorizontalAlignmentConstant
name|align
parameter_list|)
block|{
name|this
argument_list|(
name|title
argument_list|,
literal|1
argument_list|,
name|align
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getColSpan
parameter_list|()
block|{
return|return
name|iColSpan
return|;
block|}
specifier|public
name|HorizontalAlignmentConstant
name|getCellAlignment
parameter_list|()
block|{
return|return
name|iAlign
return|;
block|}
specifier|public
name|String
name|getStyleName
parameter_list|()
block|{
return|return
operator|(
name|iOperations
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iClickHandler
operator|==
literal|null
condition|?
literal|"unitime-TableHeader"
else|:
literal|"unitime-ClickableTableHeader"
operator|)
return|;
block|}
specifier|public
name|void
name|addOperation
parameter_list|(
name|Operation
name|operation
parameter_list|)
block|{
name|iOperations
operator|.
name|add
argument_list|(
name|operation
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Operation
argument_list|>
name|getOperations
parameter_list|()
block|{
return|return
name|iOperations
return|;
block|}
specifier|public
specifier|static
interface|interface
name|Operation
extends|extends
name|Command
block|{
specifier|public
name|String
name|getName
parameter_list|()
function_decl|;
specifier|public
name|boolean
name|isApplicable
parameter_list|()
function_decl|;
specifier|public
name|boolean
name|hasSeparator
parameter_list|()
function_decl|;
block|}
specifier|public
name|String
name|getHint
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getAdditionalStyleNames
parameter_list|()
block|{
return|return
name|iStyleNames
return|;
block|}
specifier|public
name|void
name|addAdditionalStyleName
parameter_list|(
name|String
name|styleName
parameter_list|)
block|{
name|iStyleNames
operator|.
name|add
argument_list|(
name|styleName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getColumn
parameter_list|()
block|{
return|return
name|iColumn
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setColumn
parameter_list|(
name|int
name|column
parameter_list|)
block|{
name|iColumn
operator|=
name|column
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setHTML
parameter_list|(
name|String
name|html
parameter_list|)
block|{
name|iTitle
operator|=
name|html
expr_stmt|;
name|super
operator|.
name|setHTML
argument_list|(
name|html
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getHTML
parameter_list|()
block|{
return|return
name|iTitle
return|;
block|}
specifier|public
name|void
name|setOrder
parameter_list|(
name|Boolean
name|order
parameter_list|)
block|{
name|iOrder
operator|=
name|order
expr_stmt|;
name|super
operator|.
name|setHTML
argument_list|(
name|order
operator|==
literal|null
condition|?
name|iTitle
else|:
name|order
condition|?
literal|"&uarr; "
operator|+
name|iTitle
else|:
literal|"&darr; "
operator|+
name|iTitle
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Boolean
name|getOrder
parameter_list|()
block|{
return|return
name|iOrder
return|;
block|}
block|}
end_class

end_unit

