begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaSuggestBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaTextBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|regexp
operator|.
name|shared
operator|.
name|MatchResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|regexp
operator|.
name|shared
operator|.
name|RegExp
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|DOM
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|IsSerializable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Hidden
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|RootPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestOracle
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextBox
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|CourseNumbersSuggestBox
extends|extends
name|SuggestOracle
block|{
specifier|private
specifier|static
specifier|final
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|String
name|iConfiguration
init|=
literal|null
decl_stmt|;
specifier|private
name|RegExp
name|iRegExp
init|=
name|RegExp
operator|.
name|compile
argument_list|(
literal|"\\$\\{([a-zA-Z_0-9]+)\\}"
argument_list|)
decl_stmt|;
specifier|public
name|CourseNumbersSuggestBox
parameter_list|(
name|String
name|configuration
parameter_list|)
block|{
name|iConfiguration
operator|=
name|configuration
expr_stmt|;
block|}
specifier|public
specifier|static
name|AriaSuggestBox
name|insert
parameter_list|(
name|RootPanel
name|panel
parameter_list|)
block|{
name|String
name|config
init|=
name|panel
operator|.
name|getElement
argument_list|()
operator|.
name|getAttribute
argument_list|(
literal|"configuration"
argument_list|)
decl_stmt|;
specifier|final
name|String
name|onchange
init|=
name|panel
operator|.
name|getElement
argument_list|()
operator|.
name|getAttribute
argument_list|(
literal|"onchange"
argument_list|)
decl_stmt|;
name|AriaTextBox
name|text
init|=
operator|new
name|AriaTextBox
argument_list|(
name|panel
operator|.
name|getElement
argument_list|()
operator|.
name|getFirstChildElement
argument_list|()
argument_list|)
decl_stmt|;
name|text
operator|.
name|getElement
argument_list|()
operator|.
name|setAttribute
argument_list|(
literal|"autocomplete"
argument_list|,
literal|"off"
argument_list|)
expr_stmt|;
name|AriaSuggestBox
name|box
init|=
operator|new
name|AriaSuggestBox
argument_list|(
name|text
argument_list|,
operator|new
name|CourseNumbersSuggestBox
argument_list|(
name|config
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|onchange
operator|!=
literal|null
condition|)
name|box
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|ToolBox
operator|.
name|eval
argument_list|(
name|onchange
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|panel
operator|.
name|add
argument_list|(
name|box
argument_list|)
expr_stmt|;
return|return
name|box
return|;
block|}
specifier|private
name|String
name|getConfiguration
parameter_list|()
block|{
name|String
name|conf
init|=
name|iConfiguration
decl_stmt|;
for|for
control|(
name|MatchResult
name|matcher
init|=
name|iRegExp
operator|.
name|exec
argument_list|(
name|conf
argument_list|)
init|;
name|matcher
operator|!=
literal|null
condition|;
name|matcher
operator|=
name|iRegExp
operator|.
name|exec
argument_list|(
name|conf
argument_list|)
control|)
block|{
name|Element
name|element
init|=
name|DOM
operator|.
name|getElementById
argument_list|(
name|matcher
operator|.
name|getGroup
argument_list|(
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|value
init|=
literal|""
decl_stmt|;
if|if
condition|(
literal|"select"
operator|.
name|equalsIgnoreCase
argument_list|(
name|element
operator|.
name|getTagName
argument_list|()
argument_list|)
condition|)
block|{
name|ListBox
name|list
init|=
name|ListBox
operator|.
name|wrap
argument_list|(
name|element
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|list
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|list
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
name|value
operator|+=
operator|(
name|value
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|","
operator|)
operator|+
name|list
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
literal|"input"
operator|.
name|equalsIgnoreCase
argument_list|(
name|element
operator|.
name|getTagName
argument_list|()
argument_list|)
condition|)
block|{
name|TextBox
name|text
init|=
name|TextBox
operator|.
name|wrap
argument_list|(
name|element
argument_list|)
decl_stmt|;
name|value
operator|=
name|text
operator|.
name|getText
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|Hidden
name|hidden
init|=
name|Hidden
operator|.
name|wrap
argument_list|(
name|element
argument_list|)
decl_stmt|;
name|value
operator|=
name|hidden
operator|.
name|getValue
argument_list|()
expr_stmt|;
block|}
name|conf
operator|=
name|conf
operator|.
name|replace
argument_list|(
literal|"${"
operator|+
name|matcher
operator|.
name|getGroup
argument_list|(
literal|1
argument_list|)
operator|+
literal|"}"
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|conf
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|requestSuggestions
parameter_list|(
specifier|final
name|Request
name|request
parameter_list|,
specifier|final
name|Callback
name|callback
parameter_list|)
block|{
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|SuggestionRpcRequest
argument_list|(
name|request
argument_list|,
name|getConfiguration
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|SuggestionInterface
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|List
argument_list|<
name|Suggestion
argument_list|>
name|suggestions
init|=
operator|new
name|ArrayList
argument_list|<
name|Suggestion
argument_list|>
argument_list|()
decl_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|SuggestionInterface
argument_list|(
literal|"<font color='red'>"
operator|+
name|caught
operator|.
name|getMessage
argument_list|()
operator|+
literal|"</font>"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|callback
operator|.
name|onSuggestionsReady
argument_list|(
name|request
argument_list|,
operator|new
name|Response
argument_list|(
name|suggestions
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|SuggestionInterface
argument_list|>
name|result
parameter_list|)
block|{
name|callback
operator|.
name|onSuggestionsReady
argument_list|(
name|request
argument_list|,
operator|new
name|Response
argument_list|(
name|result
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|SuggestionInterface
implements|implements
name|IsSerializable
implements|,
name|Suggestion
block|{
specifier|private
name|String
name|iDisplayString
decl_stmt|;
specifier|private
name|String
name|iReplacementString
decl_stmt|;
specifier|public
name|SuggestionInterface
parameter_list|()
block|{
block|}
specifier|public
name|SuggestionInterface
parameter_list|(
name|String
name|display
parameter_list|)
block|{
name|iDisplayString
operator|=
name|display
expr_stmt|;
name|iReplacementString
operator|=
name|display
expr_stmt|;
block|}
specifier|public
name|SuggestionInterface
parameter_list|(
name|String
name|display
parameter_list|,
name|String
name|replace
parameter_list|)
block|{
name|iDisplayString
operator|=
name|display
expr_stmt|;
name|iReplacementString
operator|=
name|replace
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDisplayString
parameter_list|()
block|{
return|return
name|iDisplayString
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getReplacementString
parameter_list|()
block|{
return|return
name|iReplacementString
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|SuggestionRpcRequest
extends|extends
name|Request
implements|implements
name|GwtRpcRequest
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|SuggestionInterface
argument_list|>
argument_list|>
block|{
specifier|private
name|String
name|iConfiguration
init|=
literal|null
decl_stmt|;
specifier|public
name|SuggestionRpcRequest
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|SuggestionRpcRequest
parameter_list|(
name|Request
name|request
parameter_list|,
name|String
name|configuration
parameter_list|)
block|{
name|super
argument_list|(
name|request
operator|.
name|getQuery
argument_list|()
argument_list|,
name|request
operator|.
name|getLimit
argument_list|()
argument_list|)
expr_stmt|;
name|iConfiguration
operator|=
name|configuration
expr_stmt|;
block|}
specifier|public
name|String
name|getConfiguration
parameter_list|()
block|{
return|return
name|iConfiguration
return|;
block|}
specifier|public
name|void
name|setConfiguration
parameter_list|(
name|String
name|configuration
parameter_list|)
block|{
name|iConfiguration
operator|=
name|configuration
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getConfiguration
argument_list|()
operator|+
literal|";q="
operator|+
name|getQuery
argument_list|()
operator|+
literal|";limit="
operator|+
name|getLimit
argument_list|()
return|;
block|}
block|}
specifier|public
name|boolean
name|isDisplayStringHTML
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
block|}
end_class

end_unit

