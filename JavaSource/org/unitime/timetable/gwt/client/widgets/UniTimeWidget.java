begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
package|;
end_package

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|HasAriaLabel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|aria
operator|.
name|client
operator|.
name|Id
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|aria
operator|.
name|client
operator|.
name|Roles
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|DOM
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasText
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Panel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|UniTimeWidget
parameter_list|<
name|T
extends|extends
name|Widget
parameter_list|>
extends|extends
name|P
implements|implements
name|HasAriaLabel
block|{
specifier|private
name|T
name|iWidget
decl_stmt|;
specifier|private
name|Widget
name|iReadOnly
init|=
literal|null
decl_stmt|;
specifier|private
name|P
name|iPrint
init|=
literal|null
decl_stmt|;
specifier|private
name|P
name|iHint
decl_stmt|;
specifier|private
name|Element
name|iAriaLabel
init|=
literal|null
decl_stmt|;
specifier|public
name|UniTimeWidget
parameter_list|(
name|T
name|widget
parameter_list|,
name|String
name|hint
parameter_list|)
block|{
name|super
argument_list|(
literal|"unitime-Widget"
argument_list|)
expr_stmt|;
name|iWidget
operator|=
name|widget
expr_stmt|;
name|iWidget
operator|.
name|addStyleName
argument_list|(
literal|"content"
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|iWidget
argument_list|)
expr_stmt|;
name|iHint
operator|=
operator|new
name|P
argument_list|()
expr_stmt|;
name|iHint
operator|.
name|setStyleName
argument_list|(
literal|"hint"
argument_list|)
expr_stmt|;
if|if
condition|(
name|hint
operator|==
literal|null
operator|||
name|hint
operator|.
name|isEmpty
argument_list|()
condition|)
name|iHint
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
else|else
name|iHint
operator|.
name|setHTML
argument_list|(
name|hint
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|iHint
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setAriaLabel
parameter_list|(
name|String
name|text
parameter_list|)
block|{
if|if
condition|(
name|iWidget
operator|instanceof
name|HasAriaLabel
condition|)
block|{
operator|(
operator|(
name|HasAriaLabel
operator|)
name|iWidget
operator|)
operator|.
name|setAriaLabel
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|iAriaLabel
operator|==
literal|null
condition|)
block|{
name|iAriaLabel
operator|=
name|DOM
operator|.
name|createLabel
argument_list|()
expr_stmt|;
name|iAriaLabel
operator|.
name|setId
argument_list|(
name|DOM
operator|.
name|createUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|iAriaLabel
operator|.
name|setClassName
argument_list|(
literal|"hidden-label"
argument_list|)
expr_stmt|;
name|DOM
operator|.
name|appendChild
argument_list|(
name|getElement
argument_list|()
argument_list|,
name|iAriaLabel
argument_list|)
expr_stmt|;
name|Roles
operator|.
name|getCheckboxRole
argument_list|()
operator|.
name|setAriaLabelledbyProperty
argument_list|(
name|iWidget
operator|.
name|getElement
argument_list|()
argument_list|,
name|Id
operator|.
name|of
argument_list|(
name|iAriaLabel
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|iAriaLabel
operator|.
name|setInnerText
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|getAriaLabel
parameter_list|()
block|{
if|if
condition|(
name|iWidget
operator|instanceof
name|HasAriaLabel
condition|)
return|return
operator|(
operator|(
name|HasAriaLabel
operator|)
name|iWidget
operator|)
operator|.
name|getAriaLabel
argument_list|()
return|;
else|else
return|return
operator|(
name|iAriaLabel
operator|==
literal|null
condition|?
literal|""
else|:
name|iAriaLabel
operator|.
name|getInnerText
argument_list|()
operator|)
return|;
block|}
specifier|public
name|void
name|setText
parameter_list|(
name|String
name|html
parameter_list|)
block|{
if|if
condition|(
name|iReadOnly
operator|==
literal|null
condition|)
block|{
name|iReadOnly
operator|=
operator|new
name|P
argument_list|(
literal|"label"
argument_list|)
expr_stmt|;
name|iReadOnly
operator|.
name|setVisible
argument_list|(
operator|!
name|getWidget
argument_list|()
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iPrint
operator|!=
literal|null
condition|)
name|iReadOnly
operator|.
name|addStyleName
argument_list|(
literal|"unitime-NoPrint"
argument_list|)
expr_stmt|;
name|insert
argument_list|(
name|iReadOnly
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iReadOnly
operator|instanceof
name|HasHTML
condition|)
block|{
operator|(
operator|(
name|HasHTML
operator|)
name|iReadOnly
operator|)
operator|.
name|setHTML
argument_list|(
name|html
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iReadOnly
operator|instanceof
name|HasText
condition|)
block|{
operator|(
operator|(
name|HasText
operator|)
name|iReadOnly
operator|)
operator|.
name|setText
argument_list|(
name|html
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|Widget
name|getReadOnlyWidget
parameter_list|()
block|{
return|return
name|iReadOnly
return|;
block|}
specifier|public
name|void
name|setReadOnlyWidget
parameter_list|(
name|Widget
name|readOnly
parameter_list|)
block|{
if|if
condition|(
name|iReadOnly
operator|!=
literal|null
condition|)
name|remove
argument_list|(
name|iReadOnly
argument_list|)
expr_stmt|;
name|iReadOnly
operator|=
name|readOnly
expr_stmt|;
name|iReadOnly
operator|.
name|setVisible
argument_list|(
operator|!
name|getWidget
argument_list|()
operator|.
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
comment|//iReadOnly.addStyleName("label");
if|if
condition|(
name|iPrint
operator|!=
literal|null
condition|)
name|iReadOnly
operator|.
name|addStyleName
argument_list|(
literal|"unitime-NoPrint"
argument_list|)
expr_stmt|;
name|insert
argument_list|(
name|iReadOnly
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setPrintText
parameter_list|(
name|String
name|html
parameter_list|)
block|{
if|if
condition|(
name|iPrint
operator|==
literal|null
condition|)
block|{
name|iPrint
operator|=
operator|new
name|P
argument_list|(
literal|"label"
argument_list|)
expr_stmt|;
name|iPrint
operator|.
name|setHTML
argument_list|(
name|html
argument_list|)
expr_stmt|;
name|iPrint
operator|.
name|addStyleName
argument_list|(
literal|"unitime-Print"
argument_list|)
expr_stmt|;
if|if
condition|(
name|iReadOnly
operator|!=
literal|null
condition|)
name|iReadOnly
operator|.
name|addStyleName
argument_list|(
literal|"unitime-NoPrint"
argument_list|)
expr_stmt|;
name|getWidget
argument_list|()
operator|.
name|addStyleName
argument_list|(
literal|"unitime-NoPrint"
argument_list|)
expr_stmt|;
name|insert
argument_list|(
name|iPrint
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iPrint
operator|.
name|setHTML
argument_list|(
name|html
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|boolean
name|showReadOnly
parameter_list|()
block|{
return|return
name|iWidget
operator|instanceof
name|ListBox
return|;
block|}
specifier|public
name|UniTimeWidget
parameter_list|(
name|T
name|widget
parameter_list|)
block|{
name|this
argument_list|(
name|widget
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|T
name|getWidget
parameter_list|()
block|{
return|return
name|iWidget
return|;
block|}
specifier|public
name|void
name|clearHint
parameter_list|()
block|{
name|iHint
operator|.
name|setHTML
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iHint
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setAriaLabel
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setErrorHint
parameter_list|(
name|String
name|error
parameter_list|)
block|{
if|if
condition|(
name|error
operator|==
literal|null
operator|||
name|error
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|clearHint
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|iHint
operator|.
name|setStyleName
argument_list|(
literal|"error-hint"
argument_list|)
expr_stmt|;
name|iHint
operator|.
name|setHTML
argument_list|(
name|error
argument_list|)
expr_stmt|;
name|iHint
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setAriaLabel
argument_list|(
name|error
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setHint
parameter_list|(
name|String
name|hint
parameter_list|)
block|{
if|if
condition|(
name|hint
operator|==
literal|null
operator|||
name|hint
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|clearHint
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|iHint
operator|.
name|setStyleName
argument_list|(
literal|"hint"
argument_list|)
expr_stmt|;
name|iHint
operator|.
name|setHTML
argument_list|(
name|hint
argument_list|)
expr_stmt|;
name|iHint
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setAriaLabel
argument_list|(
name|hint
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Deprecated
specifier|public
name|void
name|setVisible
parameter_list|(
name|boolean
name|visible
parameter_list|)
block|{
name|getWidget
argument_list|()
operator|.
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
if|if
condition|(
name|iReadOnly
operator|!=
literal|null
condition|)
name|iReadOnly
operator|.
name|setVisible
argument_list|(
operator|!
name|visible
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Deprecated
specifier|public
name|void
name|clear
parameter_list|()
block|{
if|if
condition|(
name|getWidget
argument_list|()
operator|instanceof
name|ListBox
condition|)
operator|(
operator|(
name|ListBox
operator|)
name|getWidget
argument_list|()
operator|)
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|getWidget
argument_list|()
operator|instanceof
name|Panel
condition|)
operator|(
operator|(
name|Panel
operator|)
name|getWidget
argument_list|()
operator|)
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setReadOnly
parameter_list|(
name|boolean
name|readOnly
parameter_list|)
block|{
if|if
condition|(
name|getWidget
argument_list|()
operator|instanceof
name|UniTimeTextBox
condition|)
block|{
operator|(
operator|(
name|UniTimeTextBox
operator|)
name|getWidget
argument_list|()
operator|)
operator|.
name|setReadOnly
argument_list|(
name|readOnly
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|getWidget
argument_list|()
operator|.
name|setVisible
argument_list|(
operator|!
name|readOnly
argument_list|)
expr_stmt|;
if|if
condition|(
name|iReadOnly
operator|!=
literal|null
condition|)
name|iReadOnly
operator|.
name|setVisible
argument_list|(
name|readOnly
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|boolean
name|isReadOnly
parameter_list|()
block|{
if|if
condition|(
name|getWidget
argument_list|()
operator|instanceof
name|UniTimeTextBox
condition|)
block|{
return|return
operator|(
operator|(
name|UniTimeTextBox
operator|)
name|getWidget
argument_list|()
operator|)
operator|.
name|isReadOnly
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|iReadOnly
operator|!=
literal|null
operator|&&
name|iReadOnly
operator|.
name|isVisible
argument_list|()
return|;
block|}
block|}
specifier|public
name|P
name|getPanel
parameter_list|()
block|{
return|return
name|this
return|;
block|}
block|}
end_class

end_unit

