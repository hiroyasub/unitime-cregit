begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 (University Timetabling Application)  * Copyright (C) 2012, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
package|;
end_package

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcImplementedBy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FileUpload
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FormPanel
import|;
end_import

begin_class
specifier|public
class|class
name|UniTimeFileUpload
extends|extends
name|FormPanel
block|{
specifier|private
specifier|static
specifier|final
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|FileUpload
name|iUpload
decl_stmt|;
specifier|public
name|UniTimeFileUpload
parameter_list|()
block|{
name|setEncoding
argument_list|(
name|ENCODING_MULTIPART
argument_list|)
expr_stmt|;
name|setMethod
argument_list|(
name|METHOD_POST
argument_list|)
expr_stmt|;
name|setAction
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"upload"
argument_list|)
expr_stmt|;
name|iUpload
operator|=
operator|new
name|FileUpload
argument_list|()
expr_stmt|;
name|iUpload
operator|.
name|setName
argument_list|(
literal|"file"
argument_list|)
expr_stmt|;
name|setWidget
argument_list|(
name|iUpload
argument_list|)
expr_stmt|;
name|iUpload
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|submit
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|addSubmitCompleteHandler
argument_list|(
operator|new
name|SubmitCompleteHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSubmitComplete
parameter_list|(
name|SubmitCompleteEvent
name|event
parameter_list|)
block|{
name|String
name|message
init|=
name|event
operator|.
name|getResults
argument_list|()
decl_stmt|;
if|if
condition|(
name|message
operator|.
name|startsWith
argument_list|(
literal|"ERROR:"
argument_list|)
condition|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|message
operator|.
name|substring
argument_list|(
literal|"ERROR:"
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reset
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|UniTimeNotifications
operator|.
name|info
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|addSubmitHandler
argument_list|(
operator|new
name|SubmitHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSubmit
parameter_list|(
name|SubmitEvent
name|event
parameter_list|)
block|{
name|String
name|name
init|=
name|iUpload
operator|.
name|getFilename
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|indexOf
argument_list|(
literal|'/'
argument_list|)
operator|>=
literal|0
condition|)
name|name
operator|=
name|name
operator|.
name|substring
argument_list|(
name|name
operator|.
name|lastIndexOf
argument_list|(
literal|'/'
argument_list|)
operator|+
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|name
operator|.
name|indexOf
argument_list|(
literal|'\\'
argument_list|)
operator|>=
literal|0
condition|)
name|name
operator|=
name|name
operator|.
name|substring
argument_list|(
name|name
operator|.
name|lastIndexOf
argument_list|(
literal|'\\'
argument_list|)
operator|+
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|name
operator|.
name|isEmpty
argument_list|()
condition|)
name|UniTimeNotifications
operator|.
name|info
argument_list|(
literal|"Uploading "
operator|+
name|name
operator|+
literal|" ..."
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|reset
parameter_list|()
block|{
name|super
operator|.
name|reset
argument_list|()
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|FileUploadRpcRequest
argument_list|(
literal|true
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|FileUploadRpcResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|FileUploadRpcResponse
name|result
parameter_list|)
block|{
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|check
parameter_list|()
block|{
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|FileUploadRpcRequest
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|FileUploadRpcResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|FileUploadRpcResponse
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|.
name|hasFile
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|result
operator|.
name|getFileName
argument_list|()
operator|.
name|equals
argument_list|(
name|getFileName
argument_list|()
argument_list|)
condition|)
name|reset
argument_list|()
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|getFileName
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|getFileName
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|UniTimeFileUpload
operator|.
name|super
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getFileName
parameter_list|()
block|{
return|return
name|iUpload
operator|.
name|getFilename
argument_list|()
return|;
block|}
annotation|@
name|GwtRpcImplementedBy
argument_list|(
literal|"org.unitime.timetable.events.FileUploadBackend"
argument_list|)
specifier|public
specifier|static
class|class
name|FileUploadRpcRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|FileUploadRpcResponse
argument_list|>
block|{
specifier|private
name|boolean
name|iReset
init|=
literal|false
decl_stmt|;
specifier|public
name|FileUploadRpcRequest
parameter_list|()
block|{
block|}
specifier|public
name|FileUploadRpcRequest
parameter_list|(
name|boolean
name|reset
parameter_list|)
block|{
name|iReset
operator|=
name|reset
expr_stmt|;
block|}
specifier|public
name|boolean
name|isReset
parameter_list|()
block|{
return|return
name|iReset
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|iReset
condition|?
literal|"reset"
else|:
literal|"request"
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|FileUploadRpcResponse
implements|implements
name|GwtRpcResponse
block|{
specifier|private
name|String
name|iName
decl_stmt|;
specifier|public
name|FileUploadRpcResponse
parameter_list|()
block|{
block|}
specifier|public
name|FileUploadRpcResponse
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasFile
parameter_list|()
block|{
return|return
name|iName
operator|!=
literal|null
return|;
block|}
specifier|public
name|String
name|getFileName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
block|}
block|}
end_class

end_unit

