begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|courseofferings
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaButton
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimePageLabel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|sectioning
operator|.
name|CourseDetailsWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|P
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTextBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|CoordinatorInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|CourseCreditFormatInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|CourseCreditTypeInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|CourseCreditUnitTypeInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|CourseOfferingCheckExists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|CourseOfferingCheckExistsInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|CourseOfferingCheckPermissions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|CourseOfferingConstantsInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|CourseOfferingConstantsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|CourseOfferingPermissionsInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|CourseOfferingPropertiesInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|CourseOfferingPropertiesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|CourseTypeInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|DepartmentInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|GetCourseOfferingRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|GetCourseOfferingResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|InstructorInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|OfferingConsentTypeInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|OverrideTypeInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|ResponsibilityInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|SubjectAreaInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|UpdateCourseOfferingAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|UpdateCourseOfferingRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseOfferingInterface
operator|.
name|WaitListInterface
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|regexp
operator|.
name|shared
operator|.
name|MatchResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|regexp
operator|.
name|shared
operator|.
name|RegExp
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Anchor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextArea
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ValueBoxBase
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_class
specifier|public
class|class
name|CourseOfferingEdit
extends|extends
name|Composite
block|{
specifier|protected
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|GwtConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|GwtResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
name|Logger
name|logger
init|=
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
operator|.
name|getLogger
argument_list|(
literal|"CourseOfferingEdit"
argument_list|)
decl_stmt|;
specifier|private
name|SimpleForm
name|iPanel
decl_stmt|;
specifier|private
name|SimpleForm
name|iInstructorPanel
decl_stmt|;
specifier|private
name|SimpleForm
name|overrideTypesForm
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iTitleAndButtons
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
name|iCourseNumber
decl_stmt|,
name|iTitle
decl_stmt|,
name|iUnits
decl_stmt|,
name|iMaxUnits
decl_stmt|,
name|iExternalId
decl_stmt|;
specifier|private
name|UniTimeTextBox
name|iNewEnrollmentDeadline
decl_stmt|,
name|iClassChangesDeadline
decl_stmt|,
name|iCourseDropDeadline
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|iConsent
decl_stmt|,
name|iFundingDepartment
decl_stmt|,
name|iSubjectArea
decl_stmt|,
name|iCredit
decl_stmt|,
name|iCreditType
decl_stmt|,
name|iCreditUnitType
decl_stmt|,
name|iCourseDemands
decl_stmt|,
name|iAlternativeCourseOfferings
decl_stmt|,
name|iCourseType
decl_stmt|,
name|iWaitListing
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|TextArea
argument_list|>
name|iScheduleNote
decl_stmt|,
name|iRequestsNotes
decl_stmt|;
specifier|private
name|Label
name|iCreditText
decl_stmt|,
name|iScheduleNoteText
decl_stmt|,
name|iConsentText
decl_stmt|,
name|iCourseDemandsText
decl_stmt|,
name|iRequestNotesText
decl_stmt|,
name|iTitleText
decl_stmt|,
name|iNewEnrollmentDeadlineText
decl_stmt|,
name|iClassChangesDeadlineText
decl_stmt|;
specifier|private
name|Label
name|iCourseDropDeadlineText
decl_stmt|,
name|iReservationOnlyText
decl_stmt|,
name|iWaitListingText
decl_stmt|;
specifier|private
name|UniTimeTable
name|iInstructorsTable
decl_stmt|;
specifier|private
name|Button
name|iAddCoordinatorButton
decl_stmt|;
specifier|private
name|String
name|iCourseNbrRegex
decl_stmt|;
specifier|private
name|String
name|iCourseNbrInfo
decl_stmt|;
specifier|private
name|String
name|iDefaultTeachingResponsibilityId
decl_stmt|;
specifier|private
name|Boolean
name|iCourseOfferingNumberMustBeUnique
decl_stmt|;
specifier|private
name|Boolean
name|iCourseOfferingNumberUpperCase
decl_stmt|;
specifier|private
name|Boolean
name|iAllowAlternativeCourseOfferings
decl_stmt|;
specifier|private
name|Boolean
name|iCoursesFundingDepartmentsEnabled
decl_stmt|;
specifier|private
name|Boolean
name|iCanEditExternalIds
decl_stmt|;
specifier|private
name|Boolean
name|iCanShowExternalIds
decl_stmt|;
specifier|private
name|Boolean
name|iAllowDemandCourseOfferings
decl_stmt|;
specifier|private
name|Image
name|waitListingImage
decl_stmt|;
specifier|private
name|int
name|iPrefRowsAdded
decl_stmt|;
specifier|private
name|int
name|iNewEnrollmentDeadlineLine
decl_stmt|,
name|iClassChangesDeadlineLine
decl_stmt|,
name|iCourseDropDeadlineLine
decl_stmt|,
name|iAltCourseOfferingLine
decl_stmt|,
name|iFundingDeptLine
decl_stmt|,
name|iCourseNumberLine
decl_stmt|,
name|iTitleLine
decl_stmt|,
name|iReservationOnlyLine
decl_stmt|;
specifier|private
name|int
name|iExternalIdLine
decl_stmt|,
name|iCourseTypeLine
decl_stmt|,
name|iConsentLine
decl_stmt|,
name|iInstructorPanelLine
decl_stmt|,
name|iRequestsNotesLine
decl_stmt|,
name|iScheduleNoteLine
decl_stmt|;
specifier|private
name|int
name|iCreditSectionLine
decl_stmt|,
name|iCreditTextLine
decl_stmt|,
name|iCatalogLinkLabelLine
decl_stmt|,
name|iCourseUrlProviderLine
decl_stmt|,
name|iOverrideTypeLine
decl_stmt|,
name|iDescEnrollmentDeadlinesLine
decl_stmt|;
specifier|private
name|int
name|iCourseDemandsLine
decl_stmt|,
name|iWaitListingLine
decl_stmt|,
name|iScheduleNoteTextLine
decl_stmt|,
name|iConsentTextLine
decl_stmt|,
name|iCourseDemandsTextLine
decl_stmt|,
name|iRequestNotesTextLine
decl_stmt|,
name|iTitleTextLine
decl_stmt|;
specifier|private
name|int
name|iNewEnrollmentDeadlineTextLine
decl_stmt|,
name|iClassChangesDeadlineTextLine
decl_stmt|,
name|iCourseDropDeadlineTextLine
decl_stmt|,
name|iReservationOnlyTextLine
decl_stmt|,
name|iWaitListingTextLine
decl_stmt|;
specifier|private
name|P
name|iNewEnrollmentDeadlinePanel
decl_stmt|,
name|iCourseDropDeadlinePanel
decl_stmt|,
name|iClassChangesDeadlinePanel
decl_stmt|,
name|iReservationOnlyPanel
decl_stmt|,
name|iWaitListingPanel
decl_stmt|;
specifier|private
name|P
name|iNewEnrollmentDeadlineNote
decl_stmt|,
name|iCourseDropDeadlineNote
decl_stmt|,
name|iClassChangesDeadlineNote
decl_stmt|,
name|iDescEnrollmentDeadlinesNote
decl_stmt|;
specifier|private
name|Anchor
name|iCatalogLinkLabel
decl_stmt|;
specifier|private
name|CourseDetailsWidget
name|iCourseUrlProvider
decl_stmt|;
specifier|private
name|CheckBox
name|iByReservationOnly
decl_stmt|,
name|iFractional
decl_stmt|,
name|iOverrideType
decl_stmt|;
specifier|private
name|CourseOfferingInterface
name|iCourseOffering
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|courseAbbr
decl_stmt|;
specifier|private
name|Boolean
name|iIsAdd
init|=
literal|false
decl_stmt|;
specifier|private
name|Boolean
name|iIsEdit
init|=
literal|false
decl_stmt|;
specifier|private
name|Boolean
name|iIsReload
init|=
literal|false
decl_stmt|;
specifier|private
name|Boolean
name|iCanAddCourseOffering
init|=
literal|false
decl_stmt|;
specifier|private
name|Boolean
name|iCanEditCourseOffering
init|=
literal|false
decl_stmt|;
specifier|private
name|Boolean
name|iCanEditCourseOfferingNote
init|=
literal|false
decl_stmt|;
specifier|private
name|Boolean
name|iCanEditCourseOfferingCoordinators
init|=
literal|false
decl_stmt|;
specifier|private
name|Boolean
name|iIsControl
init|=
literal|false
decl_stmt|;
specifier|private
name|Long
name|iCourseOfferingId
decl_stmt|;
specifier|private
name|Long
name|iSubjAreaId
decl_stmt|;
specifier|private
name|Long
name|iInstructionalOfferingId
decl_stmt|;
specifier|private
name|String
name|iCourseNbr
decl_stmt|;
specifier|public
name|CourseOfferingEdit
parameter_list|()
block|{
name|iPanel
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|initWidget
argument_list|(
name|iPanel
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addStyleName
argument_list|(
literal|"unitime-CourseOfferingEdit"
argument_list|)
expr_stmt|;
name|Long
name|offeringId
init|=
literal|null
decl_stmt|;
name|String
name|op
init|=
literal|null
decl_stmt|;
name|Long
name|subjAreaId
init|=
literal|null
decl_stmt|;
name|Long
name|courseOfferingId
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"op"
argument_list|)
operator|!=
literal|null
condition|)
name|op
operator|=
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"op"
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"editCourseOffering"
operator|.
name|equals
argument_list|(
name|op
argument_list|)
condition|)
block|{
if|if
condition|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"offering"
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|offeringId
operator|=
name|Long
operator|.
name|valueOf
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"offering"
argument_list|)
argument_list|)
expr_stmt|;
name|iIsEdit
operator|=
literal|true
expr_stmt|;
name|iIsAdd
operator|=
literal|false
expr_stmt|;
name|iIsReload
operator|=
literal|false
expr_stmt|;
name|courseOfferingId
operator|=
operator|new
name|Long
argument_list|(
name|offeringId
argument_list|)
expr_stmt|;
name|iCourseOfferingId
operator|=
name|courseOfferingId
expr_stmt|;
block|}
block|}
if|else if
condition|(
literal|"addCourseOffering"
operator|.
name|equals
argument_list|(
name|op
argument_list|)
condition|)
block|{
name|iIsAdd
operator|=
literal|true
expr_stmt|;
name|iIsEdit
operator|=
literal|false
expr_stmt|;
name|iIsReload
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"subjArea"
argument_list|)
operator|!=
literal|null
operator|&&
operator|!
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"subjArea"
argument_list|)
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|subjAreaId
operator|=
name|Long
operator|.
name|valueOf
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"subjArea"
argument_list|)
argument_list|)
expr_stmt|;
name|iSubjAreaId
operator|=
name|subjAreaId
expr_stmt|;
block|}
else|else
block|{
name|iSubjAreaId
operator|=
name|subjAreaId
expr_stmt|;
block|}
if|if
condition|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"courseNbr"
argument_list|)
operator|!=
literal|null
operator|&&
operator|!
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"courseNbr"
argument_list|)
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iCourseNbr
operator|=
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"courseNbr"
argument_list|)
expr_stmt|;
empty_stmt|;
block|}
else|else
block|{
name|iCourseNbr
operator|=
literal|null
expr_stmt|;
block|}
block|}
name|iTitleAndButtons
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
literal|"Course Offering"
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"update"
argument_list|,
name|MESSAGES
operator|.
name|buttonUpdate
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iIsEdit
operator|=
literal|true
expr_stmt|;
name|iIsAdd
operator|=
literal|false
expr_stmt|;
name|iIsReload
operator|=
literal|false
expr_stmt|;
if|if
condition|(
operator|!
name|validate
argument_list|(
name|iIsEdit
argument_list|)
condition|)
return|return;
name|iTitleAndButtons
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|UpdateCourseOfferingRequest
name|request
init|=
operator|new
name|UpdateCourseOfferingRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setAction
argument_list|(
name|UpdateCourseOfferingAction
operator|.
name|UPDATE
argument_list|)
expr_stmt|;
name|request
operator|.
name|setCourseOffering
argument_list|(
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitPlease
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iCourseOfferingNumberMustBeUnique
condition|)
block|{
name|CourseOfferingCheckExists
name|existRequest
init|=
operator|new
name|CourseOfferingCheckExists
argument_list|()
decl_stmt|;
name|existRequest
operator|.
name|setCourseNumber
argument_list|(
name|request
operator|.
name|getCourseOffering
argument_list|()
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
expr_stmt|;
name|existRequest
operator|.
name|setSubjectAreaId
argument_list|(
name|request
operator|.
name|getCourseOffering
argument_list|()
operator|.
name|getSubjectAreaId
argument_list|()
argument_list|)
expr_stmt|;
name|existRequest
operator|.
name|setCourseOfferingId
argument_list|(
name|iCourseOfferingId
argument_list|)
expr_stmt|;
name|existRequest
operator|.
name|setIsEdit
argument_list|(
name|iIsEdit
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|existRequest
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|CourseOfferingCheckExistsInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|handleError
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|CourseOfferingCheckExistsInterface
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|.
name|getResponseText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|RPC
operator|.
name|execute
argument_list|(
name|request
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|CourseOfferingInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|handleError
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|CourseOfferingInterface
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|.
name|getErrorMessage
argument_list|()
operator|==
literal|null
operator|||
name|result
operator|.
name|getErrorMessage
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iInstructionalOfferingId
operator|=
name|result
operator|.
name|getInstrOfferingId
argument_list|()
expr_stmt|;
name|afterSaveOrUpdate
argument_list|(
name|iInstructionalOfferingId
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|result
operator|.
name|getErrorMessage
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|result
operator|.
name|getResponseText
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|RPC
operator|.
name|execute
argument_list|(
name|request
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|CourseOfferingInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|handleError
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|CourseOfferingInterface
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|.
name|getErrorMessage
argument_list|()
operator|==
literal|null
operator|||
name|result
operator|.
name|getErrorMessage
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iInstructionalOfferingId
operator|=
name|result
operator|.
name|getInstrOfferingId
argument_list|()
expr_stmt|;
name|afterSaveOrUpdate
argument_list|(
name|iInstructionalOfferingId
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|result
operator|.
name|getErrorMessage
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"save"
argument_list|,
name|MESSAGES
operator|.
name|buttonSave
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iIsAdd
operator|=
literal|true
expr_stmt|;
name|iIsEdit
operator|=
literal|false
expr_stmt|;
name|iIsReload
operator|=
literal|false
expr_stmt|;
if|if
condition|(
operator|!
name|validate
argument_list|(
name|iIsEdit
argument_list|)
condition|)
return|return;
name|iTitleAndButtons
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|UpdateCourseOfferingRequest
name|request
init|=
operator|new
name|UpdateCourseOfferingRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setAction
argument_list|(
name|UpdateCourseOfferingAction
operator|.
name|CREATE
argument_list|)
expr_stmt|;
name|request
operator|.
name|setCourseOffering
argument_list|(
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitPlease
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iCourseOfferingNumberMustBeUnique
condition|)
block|{
name|CourseOfferingCheckExists
name|existRequest
init|=
operator|new
name|CourseOfferingCheckExists
argument_list|()
decl_stmt|;
name|existRequest
operator|.
name|setCourseNumber
argument_list|(
name|request
operator|.
name|getCourseOffering
argument_list|()
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
expr_stmt|;
name|existRequest
operator|.
name|setSubjectAreaId
argument_list|(
name|request
operator|.
name|getCourseOffering
argument_list|()
operator|.
name|getSubjectAreaId
argument_list|()
argument_list|)
expr_stmt|;
name|existRequest
operator|.
name|setIsEdit
argument_list|(
name|iIsEdit
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|existRequest
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|CourseOfferingCheckExistsInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|handleError
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|CourseOfferingCheckExistsInterface
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|.
name|getResponseText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|RPC
operator|.
name|execute
argument_list|(
name|request
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|CourseOfferingInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|handleError
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|CourseOfferingInterface
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|.
name|getErrorMessage
argument_list|()
operator|==
literal|null
operator|||
name|result
operator|.
name|getErrorMessage
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iInstructionalOfferingId
operator|=
name|result
operator|.
name|getInstrOfferingId
argument_list|()
expr_stmt|;
name|afterSaveOrUpdate
argument_list|(
name|iInstructionalOfferingId
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|result
operator|.
name|getErrorMessage
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|result
operator|.
name|getResponseText
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|RPC
operator|.
name|execute
argument_list|(
name|request
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|CourseOfferingInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|handleError
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|CourseOfferingInterface
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|.
name|getErrorMessage
argument_list|()
operator|==
literal|null
operator|||
name|result
operator|.
name|getErrorMessage
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iInstructionalOfferingId
operator|=
name|result
operator|.
name|getInstrOfferingId
argument_list|()
expr_stmt|;
name|afterSaveOrUpdate
argument_list|(
name|iInstructionalOfferingId
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|result
operator|.
name|getErrorMessage
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|iIsAdd
condition|)
block|{
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"back"
argument_list|,
name|MESSAGES
operator|.
name|buttonBack
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|onBack
argument_list|(
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"back"
argument_list|,
name|MESSAGES
operator|.
name|buttonBack
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|onBack
argument_list|(
literal|true
argument_list|,
name|iCourseOfferingId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|iPanel
operator|.
name|addHeaderRow
argument_list|(
name|iTitleAndButtons
argument_list|)
expr_stmt|;
if|if
condition|(
name|iIsAdd
condition|)
block|{
comment|//Subject Area Dropdown
name|iSubjectArea
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iSubjectArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
if|if
condition|(
name|subjAreaId
operator|==
literal|null
condition|)
block|{
name|iSubjectArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
name|iSubjectArea
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iSubjectArea
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|Long
name|subjectAreaId
init|=
operator|new
name|Long
argument_list|(
name|iSubjectArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
decl_stmt|;
comment|//Reload
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|CourseOfferingCheckPermissions
argument_list|(
literal|null
argument_list|,
name|subjectAreaId
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|CourseOfferingPermissionsInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|handleError
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|CourseOfferingPermissionsInterface
name|result
parameter_list|)
block|{
name|iCanAddCourseOffering
operator|=
name|result
operator|.
name|getCanAddCourseOffering
argument_list|()
expr_stmt|;
name|iCanEditCourseOffering
operator|=
name|result
operator|.
name|getCanEditCourseOffering
argument_list|()
expr_stmt|;
name|iCanEditCourseOfferingNote
operator|=
name|result
operator|.
name|getCanEditCourseOfferingNote
argument_list|()
expr_stmt|;
name|iCanEditCourseOfferingCoordinators
operator|=
name|result
operator|.
name|getCanEditCourseOfferingCoordinators
argument_list|()
expr_stmt|;
name|iIsReload
operator|=
literal|true
expr_stmt|;
name|iIsAdd
operator|=
literal|false
expr_stmt|;
name|iSubjAreaId
operator|=
name|subjectAreaId
expr_stmt|;
name|reload
argument_list|(
name|iSubjAreaId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propSubject
argument_list|()
argument_list|,
name|iSubjectArea
argument_list|)
expr_stmt|;
block|}
name|iCourseNumber
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
argument_list|(
operator|new
name|UniTimeTextBox
argument_list|()
argument_list|)
expr_stmt|;
name|iCourseNumber
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|iCourseNumber
operator|.
name|getWidget
argument_list|()
operator|.
name|setVisibleLength
argument_list|(
literal|40
argument_list|)
expr_stmt|;
if|if
condition|(
name|iIsAdd
operator|&&
name|iCourseNbr
operator|!=
literal|null
condition|)
block|{
name|iCourseNumber
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|iCourseNbr
argument_list|)
expr_stmt|;
block|}
name|iCourseNumber
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iCourseNumber
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iCourseNumberLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propCourseNumber
argument_list|()
argument_list|,
name|iCourseNumber
argument_list|)
expr_stmt|;
name|iTitle
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
argument_list|(
operator|new
name|UniTimeTextBox
argument_list|()
argument_list|)
expr_stmt|;
name|iTitle
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|iTitle
operator|.
name|getWidget
argument_list|()
operator|.
name|setVisibleLength
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|iTitleLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propTitle
argument_list|()
argument_list|,
name|iTitle
argument_list|)
expr_stmt|;
name|iTitleText
operator|=
operator|new
name|Label
argument_list|(
literal|"Override"
argument_list|)
expr_stmt|;
name|iTitleTextLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propTitle
argument_list|()
argument_list|,
name|iTitleText
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iTitleTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iExternalId
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
argument_list|(
operator|new
name|UniTimeTextBox
argument_list|(
literal|30
argument_list|,
name|ValueBoxBase
operator|.
name|TextAlignment
operator|.
name|LEFT
argument_list|)
argument_list|)
expr_stmt|;
name|iExternalIdLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propExternalId
argument_list|()
argument_list|,
name|iExternalId
argument_list|)
expr_stmt|;
name|iCourseType
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iCourseType
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iCourseType
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iCourseType
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iCourseTypeLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propType
argument_list|()
argument_list|,
name|iCourseType
argument_list|)
expr_stmt|;
name|iScheduleNote
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextArea
argument_list|>
argument_list|(
operator|new
name|TextArea
argument_list|()
argument_list|)
expr_stmt|;
name|iScheduleNote
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iScheduleNote
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iScheduleNote
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|iScheduleNote
operator|.
name|getWidget
argument_list|()
operator|.
name|setVisibleLines
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|iScheduleNote
operator|.
name|getWidget
argument_list|()
operator|.
name|setCharacterWidth
argument_list|(
literal|57
argument_list|)
expr_stmt|;
name|iScheduleNoteLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propScheduleNote
argument_list|()
argument_list|,
name|iScheduleNote
argument_list|)
expr_stmt|;
name|iScheduleNoteText
operator|=
operator|new
name|Label
argument_list|(
literal|"Override"
argument_list|)
expr_stmt|;
name|iScheduleNoteTextLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propScheduleNote
argument_list|()
argument_list|,
name|iScheduleNoteText
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iScheduleNoteTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//Consent Dropdown
name|iConsent
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iConsent
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iConsent
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iConsent
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iConsentLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propConsent
argument_list|()
argument_list|,
name|iConsent
argument_list|)
expr_stmt|;
name|iConsentText
operator|=
operator|new
name|Label
argument_list|(
literal|"Override"
argument_list|)
expr_stmt|;
name|iConsentTextLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propConsent
argument_list|()
argument_list|,
name|iConsentText
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iConsentTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//Begin Credit section
name|iCreditText
operator|=
operator|new
name|Label
argument_list|(
literal|"Override"
argument_list|)
expr_stmt|;
name|iCreditTextLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propCredit
argument_list|()
argument_list|,
name|iCreditText
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|SimpleForm
name|indentedForm
init|=
operator|new
name|SimpleForm
argument_list|()
decl_stmt|;
name|iCredit
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iCredit
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iCredit
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iCredit
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iCredit
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|toggleCreditSection
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|indentedForm
operator|.
name|addRow
argument_list|(
name|iCredit
argument_list|)
expr_stmt|;
name|indentedForm
operator|.
name|removeStyleName
argument_list|(
literal|"unitime-NotPrintableBottomLine"
argument_list|)
expr_stmt|;
name|iCreditType
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iCreditType
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iCreditType
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iCreditType
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iCreditType
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|indentedForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propCreditType
argument_list|()
argument_list|,
name|iCreditType
argument_list|)
expr_stmt|;
name|iCreditType
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iCreditUnitType
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iCreditUnitType
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iCreditUnitType
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iCreditUnitType
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iCreditUnitType
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|indentedForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propCreditUnitType
argument_list|()
argument_list|,
name|iCreditUnitType
argument_list|)
expr_stmt|;
name|iCreditUnitType
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iUnits
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
argument_list|(
operator|new
name|UniTimeTextBox
argument_list|()
argument_list|)
expr_stmt|;
name|iUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|iUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setVisibleLength
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|indentedForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propUnits
argument_list|()
argument_list|,
name|iUnits
argument_list|)
expr_stmt|;
name|iUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iMaxUnits
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
argument_list|(
operator|new
name|UniTimeTextBox
argument_list|()
argument_list|)
expr_stmt|;
name|iMaxUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|iMaxUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setVisibleLength
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|indentedForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propMaxUnits
argument_list|()
argument_list|,
name|iMaxUnits
argument_list|)
expr_stmt|;
name|iMaxUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iFractional
operator|=
operator|new
name|CheckBox
argument_list|()
expr_stmt|;
name|indentedForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propFractional
argument_list|()
argument_list|,
name|iFractional
argument_list|)
expr_stmt|;
name|iFractional
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iCreditSectionLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propCredit
argument_list|()
argument_list|,
name|indentedForm
argument_list|)
expr_stmt|;
name|indentedForm
operator|.
name|getElement
argument_list|()
operator|.
name|getParentElement
argument_list|()
operator|.
name|setAttribute
argument_list|(
literal|"class"
argument_list|,
literal|"courseOfferingEditPadding"
argument_list|)
expr_stmt|;
comment|//End Credit section
comment|//Begin Take course demands from offering section
name|iCourseDemands
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iCourseDemands
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iCourseDemands
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iCourseDemands
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iCourseDemands
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iCourseDemandsLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propCourseDemands
argument_list|()
argument_list|,
name|iCourseDemands
argument_list|)
expr_stmt|;
name|iCourseDemandsText
operator|=
operator|new
name|Label
argument_list|(
literal|"Override"
argument_list|)
expr_stmt|;
name|iCourseDemandsTextLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propCourseDemands
argument_list|()
argument_list|,
name|iCourseDemandsText
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseDemandsTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//End Take course demands from offering section
comment|//Begin Alternative course offering
name|iAlternativeCourseOfferings
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iAlternativeCourseOfferings
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iAlternativeCourseOfferings
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iAlternativeCourseOfferings
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iAlternativeCourseOfferings
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iAltCourseOfferingLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAlternativeCourseOffering
argument_list|()
argument_list|,
name|iAlternativeCourseOfferings
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iAltCourseOfferingLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//End Alternative course offering
comment|//Catalog Link Label
name|iCatalogLinkLabel
operator|=
operator|new
name|Anchor
argument_list|()
expr_stmt|;
name|iCatalogLinkLabelLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propertyCourseCatalog
argument_list|()
argument_list|,
name|iCatalogLinkLabel
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCatalogLinkLabelLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//CourseURLProvider
name|iCourseUrlProvider
operator|=
operator|new
name|CourseDetailsWidget
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iCourseUrlProvider
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iCourseUrlProviderLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propertyCourseCatalog
argument_list|()
argument_list|,
name|iCourseUrlProvider
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseUrlProviderLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|//Begin Coordinators section
name|ClickHandler
name|deleteCoordinator
init|=
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|AriaButton
name|clickedDeleteButton
init|=
operator|(
name|AriaButton
operator|)
name|event
operator|.
name|getSource
argument_list|()
decl_stmt|;
name|String
name|clickedButtonId
init|=
name|clickedDeleteButton
operator|.
name|getElement
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|Integer
name|clickedButtonIdInteger
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|clickedButtonId
argument_list|)
decl_stmt|;
name|int
name|rowCount
init|=
name|iInstructorsTable
operator|.
name|getRowCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|rowCount
condition|;
name|i
operator|++
control|)
block|{
name|AriaButton
name|deleteButton
init|=
operator|(
name|AriaButton
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|String
name|buttonId
init|=
name|deleteButton
operator|.
name|getElement
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|Integer
name|buttonIdInteger
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|buttonId
argument_list|)
decl_stmt|;
if|if
condition|(
name|buttonIdInteger
operator|.
name|equals
argument_list|(
name|clickedButtonIdInteger
argument_list|)
condition|)
block|{
name|iInstructorsTable
operator|.
name|removeRow
argument_list|(
name|i
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
decl_stmt|;
name|ClickHandler
name|clickAddCoordinator
init|=
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|CourseOfferingConstantsRequest
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|CourseOfferingConstantsInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|handleError
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|CourseOfferingConstantsInterface
name|result
parameter_list|)
block|{
name|iPrefRowsAdded
operator|=
name|result
operator|.
name|getPrefRowsAdded
argument_list|()
expr_stmt|;
name|Integer
name|maxId
init|=
name|getMaxId
argument_list|(
name|iInstructorsTable
argument_list|)
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|i
operator|<
name|iPrefRowsAdded
condition|)
block|{
name|maxId
operator|++
expr_stmt|;
name|List
argument_list|<
name|Widget
argument_list|>
name|widgets
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|instructorDropdown
init|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
name|shareTextBox
init|=
operator|new
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
argument_list|(
operator|new
name|UniTimeTextBox
argument_list|(
literal|4
argument_list|,
name|ValueBoxBase
operator|.
name|TextAlignment
operator|.
name|LEFT
argument_list|)
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|responsibilitiesDropdown
init|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
decl_stmt|;
name|Button
name|deleteButton
init|=
operator|new
name|AriaButton
argument_list|(
name|MESSAGES
operator|.
name|opGroupDelete
argument_list|()
argument_list|)
decl_stmt|;
name|deleteButton
operator|.
name|addStyleName
argument_list|(
literal|"unitime-NoPrint"
argument_list|)
expr_stmt|;
name|deleteButton
operator|.
name|getElement
argument_list|()
operator|.
name|setId
argument_list|(
name|maxId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|deleteButton
operator|.
name|addClickHandler
argument_list|(
name|deleteCoordinator
argument_list|)
expr_stmt|;
name|widgets
operator|.
name|add
argument_list|(
name|instructorDropdown
argument_list|)
expr_stmt|;
name|widgets
operator|.
name|add
argument_list|(
name|shareTextBox
argument_list|)
expr_stmt|;
name|widgets
operator|.
name|add
argument_list|(
name|responsibilitiesDropdown
argument_list|)
expr_stmt|;
name|widgets
operator|.
name|add
argument_list|(
name|deleteButton
argument_list|)
expr_stmt|;
name|iInstructorsTable
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|widgets
argument_list|)
expr_stmt|;
name|i
operator|++
expr_stmt|;
block|}
name|setInstructorDropdowns
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|iInstructorsTable
operator|=
operator|new
name|UniTimeTable
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Widget
argument_list|>
name|instructorHeader
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|P
name|nameColumnHeader
init|=
operator|new
name|P
argument_list|()
decl_stmt|;
name|nameColumnHeader
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|fieldName
argument_list|()
argument_list|)
expr_stmt|;
name|instructorHeader
operator|.
name|add
argument_list|(
name|nameColumnHeader
argument_list|)
expr_stmt|;
name|P
name|shareColumnHeader
init|=
operator|new
name|P
argument_list|()
decl_stmt|;
name|shareColumnHeader
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|colPercentShareInstructor
argument_list|()
argument_list|)
expr_stmt|;
name|instructorHeader
operator|.
name|add
argument_list|(
name|shareColumnHeader
argument_list|)
expr_stmt|;
name|P
name|responsibilityColumnHeader
init|=
operator|new
name|P
argument_list|()
decl_stmt|;
name|responsibilityColumnHeader
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|colTeachingResponsibility
argument_list|()
argument_list|)
expr_stmt|;
name|instructorHeader
operator|.
name|add
argument_list|(
name|responsibilityColumnHeader
argument_list|)
expr_stmt|;
name|P
name|emptyColumnHeader
init|=
operator|new
name|P
argument_list|()
decl_stmt|;
name|emptyColumnHeader
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|instructorHeader
operator|.
name|add
argument_list|(
name|emptyColumnHeader
argument_list|)
expr_stmt|;
name|iInstructorsTable
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|instructorHeader
argument_list|)
expr_stmt|;
name|iAddCoordinatorButton
operator|=
operator|new
name|AriaButton
argument_list|(
name|MESSAGES
operator|.
name|buttonAddCoordinator
argument_list|()
argument_list|)
expr_stmt|;
name|iAddCoordinatorButton
operator|.
name|addStyleName
argument_list|(
literal|"unitime-NoPrint"
argument_list|)
expr_stmt|;
name|iAddCoordinatorButton
operator|.
name|addClickHandler
argument_list|(
name|clickAddCoordinator
argument_list|)
expr_stmt|;
name|iInstructorPanel
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|iInstructorPanel
operator|.
name|removeStyleName
argument_list|(
literal|"unitime-NotPrintableBottomLine"
argument_list|)
expr_stmt|;
name|iInstructorPanel
operator|.
name|addRow
argument_list|(
name|iInstructorsTable
argument_list|)
expr_stmt|;
name|iInstructorPanel
operator|.
name|addRow
argument_list|(
name|iAddCoordinatorButton
argument_list|)
expr_stmt|;
name|iInstructorPanelLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propCoordinators
argument_list|()
argument_list|,
name|iInstructorPanel
argument_list|)
expr_stmt|;
name|iInstructorPanel
operator|.
name|getElement
argument_list|()
operator|.
name|getParentElement
argument_list|()
operator|.
name|setAttribute
argument_list|(
literal|"class"
argument_list|,
literal|"courseOfferingEditPadding"
argument_list|)
expr_stmt|;
comment|//End Coordinators section
name|iByReservationOnly
operator|=
operator|new
name|CheckBox
argument_list|(
name|MESSAGES
operator|.
name|checkByReservationOnly
argument_list|()
argument_list|)
expr_stmt|;
name|iReservationOnlyLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propByReservationOnly
argument_list|()
argument_list|,
name|iByReservationOnly
argument_list|)
expr_stmt|;
name|Image
name|checkMark
init|=
operator|new
name|Image
argument_list|(
name|RESOURCES
operator|.
name|on
argument_list|()
argument_list|)
decl_stmt|;
name|checkMark
operator|.
name|setAltText
argument_list|(
literal|"ENABLED"
argument_list|)
expr_stmt|;
name|checkMark
operator|.
name|addStyleName
argument_list|(
literal|"number"
argument_list|)
expr_stmt|;
name|checkMark
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|descriptionByReservationOnly2
argument_list|()
argument_list|)
expr_stmt|;
name|iReservationOnlyPanel
operator|=
operator|new
name|P
argument_list|(
literal|"deadline"
argument_list|)
expr_stmt|;
name|iReservationOnlyPanel
operator|.
name|add
argument_list|(
name|checkMark
argument_list|)
expr_stmt|;
name|iReservationOnlyText
operator|=
operator|new
name|Label
argument_list|(
name|MESSAGES
operator|.
name|descriptionByReservationOnly2
argument_list|()
argument_list|)
expr_stmt|;
name|iReservationOnlyText
operator|.
name|addStyleName
argument_list|(
literal|"note"
argument_list|)
expr_stmt|;
name|iReservationOnlyPanel
operator|.
name|add
argument_list|(
name|iReservationOnlyText
argument_list|)
expr_stmt|;
name|iReservationOnlyTextLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propByReservationOnly
argument_list|()
argument_list|,
name|iReservationOnlyPanel
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iReservationOnlyTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iNewEnrollmentDeadline
operator|=
operator|new
name|UniTimeTextBox
argument_list|(
literal|4
argument_list|,
name|ValueBoxBase
operator|.
name|TextAlignment
operator|.
name|LEFT
argument_list|)
expr_stmt|;
name|iNewEnrollmentDeadline
operator|.
name|addStyleName
argument_list|(
literal|"number"
argument_list|)
expr_stmt|;
name|iNewEnrollmentDeadlinePanel
operator|=
operator|new
name|P
argument_list|(
literal|"deadline"
argument_list|)
expr_stmt|;
name|iNewEnrollmentDeadlinePanel
operator|.
name|add
argument_list|(
name|iNewEnrollmentDeadline
argument_list|)
expr_stmt|;
name|iNewEnrollmentDeadlineNote
operator|=
operator|new
name|P
argument_list|(
literal|"note"
argument_list|)
expr_stmt|;
name|iNewEnrollmentDeadlinePanel
operator|.
name|add
argument_list|(
name|iNewEnrollmentDeadlineNote
argument_list|)
expr_stmt|;
name|iNewEnrollmentDeadlineLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propNewEnrollmentDeadline
argument_list|()
argument_list|,
name|iNewEnrollmentDeadlinePanel
argument_list|)
expr_stmt|;
name|iNewEnrollmentDeadlineText
operator|=
operator|new
name|Label
argument_list|(
literal|"Override"
argument_list|)
expr_stmt|;
name|iNewEnrollmentDeadlineTextLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propNewEnrollmentDeadline
argument_list|()
argument_list|,
name|iNewEnrollmentDeadlineText
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iNewEnrollmentDeadlineTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iClassChangesDeadline
operator|=
operator|new
name|UniTimeTextBox
argument_list|(
literal|4
argument_list|,
name|ValueBoxBase
operator|.
name|TextAlignment
operator|.
name|LEFT
argument_list|)
expr_stmt|;
name|iClassChangesDeadline
operator|.
name|addStyleName
argument_list|(
literal|"number"
argument_list|)
expr_stmt|;
name|iClassChangesDeadlinePanel
operator|=
operator|new
name|P
argument_list|(
literal|"deadline"
argument_list|)
expr_stmt|;
name|iClassChangesDeadlinePanel
operator|.
name|add
argument_list|(
name|iClassChangesDeadline
argument_list|)
expr_stmt|;
name|iClassChangesDeadlineNote
operator|=
operator|new
name|P
argument_list|(
literal|"note"
argument_list|)
expr_stmt|;
name|iClassChangesDeadlinePanel
operator|.
name|add
argument_list|(
name|iClassChangesDeadlineNote
argument_list|)
expr_stmt|;
name|iClassChangesDeadlineLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propClassChangesDeadline
argument_list|()
argument_list|,
name|iClassChangesDeadlinePanel
argument_list|)
expr_stmt|;
name|iClassChangesDeadlineText
operator|=
operator|new
name|Label
argument_list|(
literal|"Override"
argument_list|)
expr_stmt|;
name|iClassChangesDeadlineTextLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propClassChangesDeadline
argument_list|()
argument_list|,
name|iClassChangesDeadlineText
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iClassChangesDeadlineTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iCourseDropDeadline
operator|=
operator|new
name|UniTimeTextBox
argument_list|(
literal|4
argument_list|,
name|ValueBoxBase
operator|.
name|TextAlignment
operator|.
name|LEFT
argument_list|)
expr_stmt|;
name|iCourseDropDeadline
operator|.
name|addStyleName
argument_list|(
literal|"number"
argument_list|)
expr_stmt|;
name|iCourseDropDeadlinePanel
operator|=
operator|new
name|P
argument_list|(
literal|"deadline"
argument_list|)
expr_stmt|;
name|iCourseDropDeadlinePanel
operator|.
name|add
argument_list|(
name|iCourseDropDeadline
argument_list|)
expr_stmt|;
name|iCourseDropDeadlineNote
operator|=
operator|new
name|P
argument_list|(
literal|"note"
argument_list|)
expr_stmt|;
name|iCourseDropDeadlinePanel
operator|.
name|add
argument_list|(
name|iCourseDropDeadlineNote
argument_list|)
expr_stmt|;
name|iCourseDropDeadlineLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propCourseDropDeadline
argument_list|()
argument_list|,
name|iCourseDropDeadlinePanel
argument_list|)
expr_stmt|;
name|iCourseDropDeadlineText
operator|=
operator|new
name|Label
argument_list|(
literal|"Override"
argument_list|)
expr_stmt|;
name|iCourseDropDeadlineTextLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propCourseDropDeadline
argument_list|()
argument_list|,
name|iCourseDropDeadlineText
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseDropDeadlineTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iDescEnrollmentDeadlinesNote
operator|=
operator|new
name|P
argument_list|(
literal|"note"
argument_list|)
expr_stmt|;
name|iDescEnrollmentDeadlinesLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
literal|""
argument_list|,
name|iDescEnrollmentDeadlinesNote
argument_list|)
expr_stmt|;
name|iRequestsNotes
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextArea
argument_list|>
argument_list|(
operator|new
name|TextArea
argument_list|()
argument_list|)
expr_stmt|;
name|iRequestsNotes
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iRequestsNotes
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iRequestsNotes
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|iRequestsNotes
operator|.
name|getWidget
argument_list|()
operator|.
name|setVisibleLines
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|iRequestsNotes
operator|.
name|getWidget
argument_list|()
operator|.
name|setCharacterWidth
argument_list|(
literal|57
argument_list|)
expr_stmt|;
name|iRequestsNotesLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propRequestsNotes
argument_list|()
argument_list|,
name|iRequestsNotes
argument_list|)
expr_stmt|;
name|iRequestNotesText
operator|=
operator|new
name|Label
argument_list|(
literal|"Override"
argument_list|)
expr_stmt|;
name|iRequestNotesTextLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propRequestsNotes
argument_list|()
argument_list|,
name|iRequestNotesText
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iRequestNotesTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iFundingDepartment
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iFundingDepartment
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iFundingDeptLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propFundingDepartment
argument_list|()
argument_list|,
name|iFundingDepartment
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iFundingDeptLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//Waitlisting
name|iWaitListing
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iWaitListing
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iWaitListing
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iWaitListing
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iWaitListing
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iWaitListingLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propWaitListing
argument_list|()
argument_list|,
name|iWaitListing
argument_list|)
expr_stmt|;
name|waitListingImage
operator|=
operator|new
name|Image
argument_list|(
name|RESOURCES
operator|.
name|on
argument_list|()
argument_list|)
expr_stmt|;
name|waitListingImage
operator|.
name|setAltText
argument_list|(
literal|"ENABLED"
argument_list|)
expr_stmt|;
name|waitListingImage
operator|.
name|addStyleName
argument_list|(
literal|"number"
argument_list|)
expr_stmt|;
name|waitListingImage
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|descWaitListEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|iWaitListingPanel
operator|=
operator|new
name|P
argument_list|(
literal|"deadline"
argument_list|)
expr_stmt|;
name|iWaitListingPanel
operator|.
name|add
argument_list|(
name|waitListingImage
argument_list|)
expr_stmt|;
name|iWaitListingText
operator|=
operator|new
name|Label
argument_list|()
expr_stmt|;
name|iWaitListingText
operator|.
name|addStyleName
argument_list|(
literal|"note"
argument_list|)
expr_stmt|;
name|iWaitListingPanel
operator|.
name|add
argument_list|(
name|iWaitListingText
argument_list|)
expr_stmt|;
name|iWaitListingTextLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propWaitListing
argument_list|()
argument_list|,
name|iWaitListingPanel
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iWaitListingTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//Override Types
name|overrideTypesForm
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|iOverrideType
operator|=
operator|new
name|CheckBox
argument_list|(
name|MESSAGES
operator|.
name|checkByReservationOnly
argument_list|()
argument_list|)
expr_stmt|;
name|overrideTypesForm
operator|.
name|addRow
argument_list|(
name|iOverrideType
argument_list|)
expr_stmt|;
name|iOverrideTypeLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propertyDisabledOverrides
argument_list|()
argument_list|,
name|overrideTypesForm
argument_list|)
expr_stmt|;
name|overrideTypesForm
operator|.
name|removeStyleName
argument_list|(
literal|"unitime-NotPrintableBottomLine"
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iOverrideTypeLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|CourseOfferingCheckPermissions
argument_list|(
name|courseOfferingId
argument_list|,
name|subjAreaId
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|CourseOfferingPermissionsInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|handleError
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|CourseOfferingPermissionsInterface
name|result
parameter_list|)
block|{
name|iCanAddCourseOffering
operator|=
name|result
operator|.
name|getCanAddCourseOffering
argument_list|()
expr_stmt|;
name|iCanEditCourseOffering
operator|=
name|result
operator|.
name|getCanEditCourseOffering
argument_list|()
expr_stmt|;
name|iCanEditCourseOfferingNote
operator|=
name|result
operator|.
name|getCanEditCourseOfferingNote
argument_list|()
expr_stmt|;
name|iCanEditCourseOfferingCoordinators
operator|=
name|result
operator|.
name|getCanEditCourseOfferingCoordinators
argument_list|()
expr_stmt|;
if|if
condition|(
name|iIsEdit
condition|)
block|{
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|GetCourseOfferingRequest
argument_list|(
name|iCourseOfferingId
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GetCourseOfferingResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|handleError
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GetCourseOfferingResponse
name|result
parameter_list|)
block|{
name|iCourseOffering
operator|=
name|result
operator|.
name|getCourseOffering
argument_list|()
expr_stmt|;
name|setValue
argument_list|(
name|iCourseOffering
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iIsAdd
condition|)
block|{
name|setValue
argument_list|(
literal|null
argument_list|,
name|iSubjAreaId
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addNotPrintableBottomRow
argument_list|(
name|iTitleAndButtons
operator|.
name|clonePanel
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|getMaxId
parameter_list|(
name|UniTimeTable
name|instructorTable
parameter_list|)
block|{
name|Integer
name|maxId
init|=
literal|0
decl_stmt|;
name|int
name|rowCount
init|=
name|instructorTable
operator|.
name|getRowCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|rowCount
condition|;
name|i
operator|++
control|)
block|{
name|AriaButton
name|deleteButton
init|=
operator|(
name|AriaButton
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|String
name|buttonId
init|=
name|deleteButton
operator|.
name|getElement
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|Integer
name|buttonIdInteger
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|buttonId
argument_list|)
decl_stmt|;
if|if
condition|(
name|buttonIdInteger
operator|>
name|maxId
condition|)
block|{
name|maxId
operator|=
name|buttonIdInteger
expr_stmt|;
block|}
block|}
return|return
name|maxId
return|;
block|}
specifier|protected
name|void
name|onBack
parameter_list|(
name|boolean
name|iIsEdit
parameter_list|,
name|Long
name|courseOfferingId
parameter_list|)
block|{
if|if
condition|(
name|iIsEdit
condition|)
block|{
name|Long
name|instructionalOfferingId
init|=
literal|null
decl_stmt|;
name|instructionalOfferingId
operator|=
operator|new
name|Long
argument_list|(
name|iCourseOffering
operator|.
name|getInstrOfferingId
argument_list|()
argument_list|)
expr_stmt|;
name|ToolBox
operator|.
name|open
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"instructionalOfferingDetail.do?op=view&io="
operator|+
name|instructionalOfferingId
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ToolBox
operator|.
name|open
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"instructionalOfferingShowSearch.do"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|toggleCreditSection
parameter_list|()
block|{
comment|//Enable/Disable other Credit fields
if|if
condition|(
name|iCredit
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|iCredit
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|String
name|credit
init|=
name|iCredit
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|credit
condition|)
block|{
case|case
literal|"arrangeHours"
case|:
name|iCreditType
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iCreditUnitType
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iMaxUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iFractional
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"fixedUnit"
case|:
name|iCreditType
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iCreditUnitType
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iMaxUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iFractional
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"variableMinMax"
case|:
name|iCreditType
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iCreditUnitType
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iMaxUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iFractional
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"variableRange"
case|:
name|iCreditType
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iCreditUnitType
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iMaxUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iFractional
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
break|break;
default|default:
name|iCreditType
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iCreditUnitType
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iMaxUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iFractional
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
else|else
block|{
name|iCreditType
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iCreditUnitType
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iMaxUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iFractional
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|afterSaveOrUpdate
parameter_list|(
name|Long
name|instructionalOfferingId
parameter_list|)
block|{
name|ToolBox
operator|.
name|open
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"instructionalOfferingDetail.do?op=view&io="
operator|+
name|instructionalOfferingId
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|constructInstructorsTable
parameter_list|()
block|{
name|ClickHandler
name|deleteCoordinator
init|=
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|AriaButton
name|clickedDeleteButton
init|=
operator|(
name|AriaButton
operator|)
name|event
operator|.
name|getSource
argument_list|()
decl_stmt|;
name|String
name|clickedButtonId
init|=
name|clickedDeleteButton
operator|.
name|getElement
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|Integer
name|clickedButtonIdInteger
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|clickedButtonId
argument_list|)
decl_stmt|;
name|int
name|rowCount
init|=
name|iInstructorsTable
operator|.
name|getRowCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|rowCount
condition|;
name|i
operator|++
control|)
block|{
name|AriaButton
name|deleteButton
init|=
operator|(
name|AriaButton
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|String
name|buttonId
init|=
name|deleteButton
operator|.
name|getElement
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|Integer
name|buttonIdInteger
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|buttonId
argument_list|)
decl_stmt|;
if|if
condition|(
name|buttonIdInteger
operator|.
name|equals
argument_list|(
name|clickedButtonIdInteger
argument_list|)
condition|)
block|{
comment|//remove row
name|iInstructorsTable
operator|.
name|removeRow
argument_list|(
name|i
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|i
operator|<
name|iPrefRowsAdded
condition|)
block|{
name|List
argument_list|<
name|Widget
argument_list|>
name|widgets
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|instructorDropdown
init|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
name|shareTextBox
init|=
operator|new
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
argument_list|(
operator|new
name|UniTimeTextBox
argument_list|(
literal|4
argument_list|,
name|ValueBoxBase
operator|.
name|TextAlignment
operator|.
name|LEFT
argument_list|)
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|responsibilitiesDropdown
init|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
decl_stmt|;
name|Button
name|deleteButton
init|=
operator|new
name|AriaButton
argument_list|(
name|MESSAGES
operator|.
name|opGroupDelete
argument_list|()
argument_list|)
decl_stmt|;
name|deleteButton
operator|.
name|addStyleName
argument_list|(
literal|"unitime-NoPrint"
argument_list|)
expr_stmt|;
name|deleteButton
operator|.
name|addClickHandler
argument_list|(
name|deleteCoordinator
argument_list|)
expr_stmt|;
name|widgets
operator|.
name|add
argument_list|(
name|instructorDropdown
argument_list|)
expr_stmt|;
name|widgets
operator|.
name|add
argument_list|(
name|shareTextBox
argument_list|)
expr_stmt|;
name|widgets
operator|.
name|add
argument_list|(
name|responsibilitiesDropdown
argument_list|)
expr_stmt|;
name|widgets
operator|.
name|add
argument_list|(
name|deleteButton
argument_list|)
expr_stmt|;
name|Integer
name|rowNumber
init|=
name|iInstructorsTable
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|widgets
argument_list|)
decl_stmt|;
name|deleteButton
operator|.
name|getElement
argument_list|()
operator|.
name|setId
argument_list|(
name|rowNumber
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|i
operator|++
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setInstructorDropdowns
parameter_list|()
block|{
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|CourseOfferingPropertiesRequest
argument_list|(
literal|false
argument_list|,
name|iSubjAreaId
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|CourseOfferingPropertiesInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|handleError
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|CourseOfferingPropertiesInterface
name|result
parameter_list|)
block|{
name|iDefaultTeachingResponsibilityId
operator|=
name|result
operator|.
name|getDefaultTeachingResponsibilityId
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iInstructorsTable
operator|.
name|getRowCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
comment|//Skip the first row
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|instructorDropdown
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|responsibilityDropdown
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|2
argument_list|)
decl_stmt|;
if|if
condition|(
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|==
literal|0
condition|)
block|{
while|while
condition|(
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|removeItem
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"-"
argument_list|,
literal|"-"
argument_list|)
expr_stmt|;
for|for
control|(
name|InstructorInterface
name|instructorObject
range|:
name|result
operator|.
name|getInstructors
argument_list|()
control|)
block|{
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|instructorObject
operator|.
name|getLabel
argument_list|()
argument_list|,
name|instructorObject
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
condition|)
block|{
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"-"
argument_list|,
literal|"-"
argument_list|)
expr_stmt|;
for|for
control|(
name|InstructorInterface
name|instructorObject
range|:
name|result
operator|.
name|getInstructors
argument_list|()
control|)
block|{
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|instructorObject
operator|.
name|getLabel
argument_list|()
argument_list|,
name|instructorObject
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iDefaultTeachingResponsibilityId
operator|!=
literal|null
operator|&&
operator|!
name|iDefaultTeachingResponsibilityId
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|responsibilityDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
condition|)
block|{
for|for
control|(
name|ResponsibilityInterface
name|responsibilityObject
range|:
name|result
operator|.
name|getResponsibilities
argument_list|()
control|)
block|{
name|responsibilityDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|responsibilityObject
operator|.
name|getLabel
argument_list|()
argument_list|,
name|responsibilityObject
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|int
name|responsibilitiesDropdownIndex
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|1
init|;
name|j
operator|<
name|responsibilityDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
if|if
condition|(
name|responsibilityDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|j
argument_list|)
operator|.
name|equals
argument_list|(
name|iDefaultTeachingResponsibilityId
argument_list|)
condition|)
block|{
name|responsibilitiesDropdownIndex
operator|=
name|j
expr_stmt|;
break|break;
block|}
block|}
name|responsibilityDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|responsibilitiesDropdownIndex
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|responsibilityDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|==
literal|0
operator|||
name|responsibilityDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
condition|)
block|{
while|while
condition|(
name|responsibilityDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|responsibilityDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|removeItem
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
name|responsibilityDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"-"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
for|for
control|(
name|ResponsibilityInterface
name|responsibilityObject
range|:
name|result
operator|.
name|getResponsibilities
argument_list|()
control|)
block|{
name|responsibilityDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|responsibilityObject
operator|.
name|getLabel
argument_list|()
argument_list|,
name|responsibilityObject
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|reload
parameter_list|(
name|Long
name|subjAreaId
parameter_list|)
block|{
name|iIsControl
operator|=
literal|true
expr_stmt|;
name|iAllowDemandCourseOfferings
operator|=
literal|true
expr_stmt|;
name|iCourseUrlProvider
operator|.
name|populate
argument_list|(
name|iSubjectArea
argument_list|,
name|iCourseNumber
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|iCourseUrlProvider
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|iCanAddCourseOffering
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseNumberLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iTitle
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iExternalId
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iScheduleNote
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iConsentLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//Hide the instructors section
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iInstructorPanelLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//Hide byReservationOnly and wk fields
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iReservationOnlyLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//Hide wk rows
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iNewEnrollmentDeadlineLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iClassChangesDeadlineLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseDropDeadlineLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iDescEnrollmentDeadlinesLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//Hide notes
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iRequestsNotesLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|iCourseOffering
operator|=
operator|new
name|CourseOfferingInterface
argument_list|()
expr_stmt|;
name|UniTimePageLabel
operator|.
name|getInstance
argument_list|()
operator|.
name|setPageName
argument_list|(
name|MESSAGES
operator|.
name|pageAddCourseOffering
argument_list|()
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|CourseOfferingPropertiesRequest
argument_list|(
literal|false
argument_list|,
name|iSubjAreaId
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|CourseOfferingPropertiesInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|handleError
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|CourseOfferingPropertiesInterface
name|result
parameter_list|)
block|{
for|for
control|(
name|SubjectAreaInterface
name|subjectAreaItem
range|:
name|result
operator|.
name|getSubjectAreas
argument_list|()
control|)
block|{
name|iSubjectArea
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|subjectAreaItem
operator|.
name|getLabel
argument_list|()
argument_list|,
name|subjectAreaItem
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|subjAreaId
operator|!=
literal|null
condition|)
block|{
name|int
name|indexToFind
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iSubjectArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
comment|//Match by Value
if|if
condition|(
name|iSubjectArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|subjAreaId
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|indexToFind
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
name|iSubjectArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|indexToFind
argument_list|)
expr_stmt|;
block|}
name|iPrefRowsAdded
operator|=
literal|0
expr_stmt|;
name|constructInstructorsTable
argument_list|()
expr_stmt|;
name|iDefaultTeachingResponsibilityId
operator|=
name|result
operator|.
name|getDefaultTeachingResponsibilityId
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iInstructorsTable
operator|.
name|getRowCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|instructorDropdown
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|responsibilitiesDropdown
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|String
name|selectedInstructor
init|=
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
decl_stmt|;
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"-"
argument_list|,
literal|"-"
argument_list|)
expr_stmt|;
for|for
control|(
name|InstructorInterface
name|instructorObject
range|:
name|result
operator|.
name|getInstructors
argument_list|()
control|)
block|{
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|instructorObject
operator|.
name|getLabel
argument_list|()
argument_list|,
name|instructorObject
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|int
name|instructorDropdownIndex
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|1
init|;
name|j
operator|<
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
if|if
condition|(
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|j
argument_list|)
operator|.
name|equals
argument_list|(
name|selectedInstructor
argument_list|)
condition|)
block|{
name|instructorDropdownIndex
operator|=
name|j
expr_stmt|;
break|break;
block|}
block|}
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|instructorDropdownIndex
argument_list|)
expr_stmt|;
name|String
name|selectedResponsibility
init|=
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
decl_stmt|;
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|iDefaultTeachingResponsibilityId
operator|==
literal|null
operator|||
name|iDefaultTeachingResponsibilityId
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"-"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|ResponsibilityInterface
name|responsibilityObject
range|:
name|result
operator|.
name|getResponsibilities
argument_list|()
control|)
block|{
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|responsibilityObject
operator|.
name|getLabel
argument_list|()
argument_list|,
name|responsibilityObject
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|int
name|responsibilitiesDropdownIndex
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|1
init|;
name|j
operator|<
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
if|if
condition|(
name|selectedResponsibility
operator|!=
literal|null
operator|&&
operator|!
name|selectedResponsibility
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|j
argument_list|)
operator|.
name|equals
argument_list|(
name|selectedResponsibility
argument_list|)
condition|)
block|{
name|responsibilitiesDropdownIndex
operator|=
name|j
expr_stmt|;
break|break;
block|}
block|}
else|else
block|{
if|if
condition|(
name|iDefaultTeachingResponsibilityId
operator|!=
literal|null
operator|&&
operator|!
name|iDefaultTeachingResponsibilityId
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|j
argument_list|)
operator|.
name|equals
argument_list|(
name|iDefaultTeachingResponsibilityId
argument_list|)
condition|)
block|{
name|responsibilitiesDropdownIndex
operator|=
name|j
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|responsibilitiesDropdownIndex
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|result
operator|.
name|getResponsibilities
argument_list|()
operator|==
literal|null
operator|||
name|result
operator|.
name|getResponsibilities
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iInstructorsTable
operator|.
name|setColumnVisible
argument_list|(
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iInstructorsTable
operator|.
name|setColumnVisible
argument_list|(
literal|2
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|iCoursesFundingDepartmentsEnabled
operator|=
name|result
operator|.
name|getCoursesFundingDepartmentsEnabled
argument_list|()
expr_stmt|;
if|if
condition|(
name|iCoursesFundingDepartmentsEnabled
condition|)
block|{
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
for|for
control|(
name|DepartmentInterface
name|fundingDepartment
range|:
name|result
operator|.
name|getFundingDepartments
argument_list|()
control|)
block|{
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|fundingDepartment
operator|.
name|getLabel
argument_list|()
argument_list|,
name|fundingDepartment
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iFundingDeptLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|getSubjectAreaEffectiveFundingDept
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|int
name|fundingDeptDropdownIndex
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|result
operator|.
name|getSubjectAreaEffectiveFundingDept
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|fundingDeptDropdownIndex
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|fundingDeptDropdownIndex
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setValue
parameter_list|(
name|CourseOfferingInterface
name|courseOffering
parameter_list|,
name|Long
name|subjAreaId
parameter_list|)
block|{
if|if
condition|(
name|iIsAdd
condition|)
block|{
comment|// Add Course Offering
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"save"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"back"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"update"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setHeaderTitle
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iIsControl
operator|=
literal|true
expr_stmt|;
name|iAllowDemandCourseOfferings
operator|=
literal|true
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCreditTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iCourseUrlProvider
operator|.
name|populate
argument_list|(
name|iSubjectArea
argument_list|,
name|iCourseNumber
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|iCourseUrlProvider
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|iCanAddCourseOffering
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseNumberLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iTitle
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iExternalId
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iScheduleNote
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iConsentLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//Hide the instructors section
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iInstructorPanelLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//Hide byReservationOnly and wk fields
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iReservationOnlyLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//Hide wk rows
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iNewEnrollmentDeadlineLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iClassChangesDeadlineLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseDropDeadlineLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iDescEnrollmentDeadlinesLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//Hide notes
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iRequestsNotesLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|iCourseOffering
operator|=
operator|new
name|CourseOfferingInterface
argument_list|()
expr_stmt|;
name|UniTimePageLabel
operator|.
name|getInstance
argument_list|()
operator|.
name|setPageName
argument_list|(
name|MESSAGES
operator|.
name|pageAddCourseOffering
argument_list|()
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|CourseOfferingPropertiesRequest
argument_list|(
literal|false
argument_list|,
name|iSubjAreaId
argument_list|,
name|iCourseNbr
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|CourseOfferingPropertiesInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|handleError
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|CourseOfferingPropertiesInterface
name|result
parameter_list|)
block|{
for|for
control|(
name|SubjectAreaInterface
name|subjectAreaItem
range|:
name|result
operator|.
name|getSubjectAreas
argument_list|()
control|)
block|{
name|iSubjectArea
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|subjectAreaItem
operator|.
name|getAbbreviation
argument_list|()
argument_list|,
name|subjectAreaItem
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|subjAreaId
operator|!=
literal|null
condition|)
block|{
name|int
name|indexToFind
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iSubjectArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
comment|//Match by Value
if|if
condition|(
name|iSubjectArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|subjAreaId
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|indexToFind
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
name|iSubjectArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|indexToFind
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|result
operator|.
name|getCourseOfferingMustBeUnique
argument_list|()
condition|)
block|{
if|if
condition|(
name|result
operator|.
name|getInstructionalOfferingId
argument_list|()
operator|!=
literal|null
condition|)
block|{
comment|//Redirect
name|ToolBox
operator|.
name|open
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"instructionalOfferingDetail.do?op=view&io="
operator|+
name|result
operator|.
name|getInstructionalOfferingId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|iPrefRowsAdded
operator|=
name|result
operator|.
name|getPrefRowsAdded
argument_list|()
expr_stmt|;
name|constructInstructorsTable
argument_list|()
expr_stmt|;
name|iCourseDropDeadlineNote
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|hintCourseDropDeadline
argument_list|(
name|result
operator|.
name|getWkDropDefault
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iNewEnrollmentDeadlineNote
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|hintNewEnrollmentDeadline
argument_list|(
name|result
operator|.
name|getWkEnrollDefault
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iClassChangesDeadlineNote
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|hintClassChangesDeadline
argument_list|(
name|result
operator|.
name|getWkChangeDefault
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iDescEnrollmentDeadlinesNote
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|descriptionEnrollmentDeadlines
argument_list|(
name|result
operator|.
name|getWeekStartDayOfWeek
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|getCourseTypes
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iCourseType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemSelect
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
for|for
control|(
name|CourseTypeInterface
name|courseType
range|:
name|result
operator|.
name|getCourseTypes
argument_list|()
control|)
block|{
name|iCourseType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|courseType
operator|.
name|getLabel
argument_list|()
argument_list|,
name|courseType
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|//Hide the courseTypes dropdown
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseTypeLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|iCredit
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemSelect
argument_list|()
argument_list|,
literal|"select"
argument_list|)
expr_stmt|;
for|for
control|(
name|CourseCreditFormatInterface
name|courseCreditFormat
range|:
name|result
operator|.
name|getCourseCreditFormats
argument_list|()
control|)
block|{
name|iCredit
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|courseCreditFormat
operator|.
name|getLabel
argument_list|()
argument_list|,
name|courseCreditFormat
operator|.
name|getReference
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|CourseCreditTypeInterface
name|courseCreditType
range|:
name|result
operator|.
name|getCourseCreditTypes
argument_list|()
control|)
block|{
name|iCreditType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|courseCreditType
operator|.
name|getLabel
argument_list|()
argument_list|,
name|courseCreditType
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|CourseCreditUnitTypeInterface
name|courseCreditUnitType
range|:
name|result
operator|.
name|getCourseCreditUnitTypes
argument_list|()
control|)
block|{
name|iCreditUnitType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|courseCreditUnitType
operator|.
name|getLabel
argument_list|()
argument_list|,
name|courseCreditUnitType
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iCanAddCourseOffering
condition|)
block|{
if|if
condition|(
name|iAllowDemandCourseOfferings
condition|)
block|{
if|if
condition|(
name|result
operator|.
name|getCourseDemands
argument_list|()
operator|==
literal|null
operator|||
name|result
operator|.
name|getCourseDemands
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseDemandsLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iCourseDemands
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|""
argument_list|,
literal|"none"
argument_list|)
expr_stmt|;
for|for
control|(
name|CourseOfferingInterface
name|courseOffering
range|:
name|result
operator|.
name|getCourseDemands
argument_list|()
control|)
block|{
name|iCourseDemands
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|courseOffering
operator|.
name|getLabel
argument_list|()
argument_list|,
name|courseOffering
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
name|iConsent
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|consentNone
argument_list|()
argument_list|,
literal|"none"
argument_list|)
expr_stmt|;
for|for
control|(
name|OfferingConsentTypeInterface
name|offeringConsentType
range|:
name|result
operator|.
name|getOfferingConsentTypes
argument_list|()
control|)
block|{
name|iConsent
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|offeringConsentType
operator|.
name|getLabel
argument_list|()
argument_list|,
name|offeringConsentType
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iDefaultTeachingResponsibilityId
operator|=
name|result
operator|.
name|getDefaultTeachingResponsibilityId
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iInstructorsTable
operator|.
name|getRowCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|instructorDropdown
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|responsibilitiesDropdown
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"-"
argument_list|,
literal|"-"
argument_list|)
expr_stmt|;
for|for
control|(
name|InstructorInterface
name|instructorObject
range|:
name|result
operator|.
name|getInstructors
argument_list|()
control|)
block|{
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|instructorObject
operator|.
name|getLabel
argument_list|()
argument_list|,
name|instructorObject
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iDefaultTeachingResponsibilityId
operator|==
literal|null
operator|||
name|iDefaultTeachingResponsibilityId
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"-"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|ResponsibilityInterface
name|responsibilityObject
range|:
name|result
operator|.
name|getResponsibilities
argument_list|()
control|)
block|{
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|responsibilityObject
operator|.
name|getLabel
argument_list|()
argument_list|,
name|responsibilityObject
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iDefaultTeachingResponsibilityId
operator|!=
literal|null
operator|&&
operator|!
name|iDefaultTeachingResponsibilityId
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|int
name|responsibilitiesDropdownIndex
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|1
init|;
name|j
operator|<
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
if|if
condition|(
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|j
argument_list|)
operator|.
name|equals
argument_list|(
name|iDefaultTeachingResponsibilityId
argument_list|)
condition|)
block|{
name|responsibilitiesDropdownIndex
operator|=
name|j
expr_stmt|;
break|break;
block|}
block|}
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|responsibilitiesDropdownIndex
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|result
operator|.
name|getResponsibilities
argument_list|()
operator|==
literal|null
operator|||
name|result
operator|.
name|getResponsibilities
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iInstructorsTable
operator|.
name|setColumnVisible
argument_list|(
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iInstructorsTable
operator|.
name|setColumnVisible
argument_list|(
literal|2
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|iCourseNbrRegex
operator|=
name|result
operator|.
name|getCourseNbrRegex
argument_list|()
expr_stmt|;
name|iCourseNbrInfo
operator|=
name|result
operator|.
name|getCourseNbrInfo
argument_list|()
expr_stmt|;
name|iCourseOfferingNumberMustBeUnique
operator|=
name|result
operator|.
name|getCourseOfferingMustBeUnique
argument_list|()
expr_stmt|;
name|iCourseOfferingNumberUpperCase
operator|=
name|result
operator|.
name|getCourseOfferingNumberUpperCase
argument_list|()
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|getCourseUrlProvider
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|result
operator|.
name|getCourseUrlProvider
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseUrlProviderLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseUrlProviderLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|iAllowAlternativeCourseOfferings
operator|=
name|result
operator|.
name|getAllowAlternativeCourseOfferings
argument_list|()
expr_stmt|;
if|if
condition|(
name|iAllowAlternativeCourseOfferings
condition|)
block|{
if|if
condition|(
name|result
operator|.
name|getAltCourseOfferings
argument_list|()
operator|==
literal|null
operator|||
name|result
operator|.
name|getAltCourseOfferings
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iAltCourseOfferingLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iAlternativeCourseOfferings
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|""
argument_list|,
literal|"none"
argument_list|)
expr_stmt|;
for|for
control|(
name|CourseOfferingInterface
name|courseOffering
range|:
name|result
operator|.
name|getAltCourseOfferings
argument_list|()
control|)
block|{
name|iAlternativeCourseOfferings
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|courseOffering
operator|.
name|getLabel
argument_list|()
argument_list|,
name|courseOffering
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iCanAddCourseOffering
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iAltCourseOfferingLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iAltCourseOfferingLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|iCoursesFundingDepartmentsEnabled
operator|=
name|result
operator|.
name|getCoursesFundingDepartmentsEnabled
argument_list|()
expr_stmt|;
if|if
condition|(
name|iCoursesFundingDepartmentsEnabled
condition|)
block|{
for|for
control|(
name|DepartmentInterface
name|fundingDepartment
range|:
name|result
operator|.
name|getFundingDepartments
argument_list|()
control|)
block|{
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|fundingDepartment
operator|.
name|getLabel
argument_list|()
argument_list|,
name|fundingDepartment
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|result
operator|.
name|getSubjectAreaEffectiveFundingDept
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|int
name|altIndex
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|result
operator|.
name|getSubjectAreaEffectiveFundingDept
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|altIndex
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|altIndex
argument_list|)
expr_stmt|;
block|}
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iFundingDeptLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|WaitListInterface
name|waitListItem
range|:
name|result
operator|.
name|getWaitLists
argument_list|()
control|)
block|{
name|iWaitListing
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|waitListItem
operator|.
name|getLabel
argument_list|()
argument_list|,
name|waitListItem
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iCanEditExternalIds
operator|=
name|result
operator|.
name|getCanEditExternalIds
argument_list|()
expr_stmt|;
name|iCanShowExternalIds
operator|=
name|result
operator|.
name|getCanShowExternalIds
argument_list|()
expr_stmt|;
if|if
condition|(
name|iCanEditCourseOffering
operator|||
name|iCanAddCourseOffering
condition|)
block|{
if|if
condition|(
operator|!
name|iCanEditExternalIds
condition|)
block|{
name|iExternalId
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|iCanEditExternalIds
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iExternalIdLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
comment|//Get Override Types
name|int
name|overrideCounter
init|=
literal|0
decl_stmt|;
for|for
control|(
name|OverrideTypeInterface
name|overrideType
range|:
name|result
operator|.
name|getOverrideTypes
argument_list|()
control|)
block|{
if|if
condition|(
name|overrideCounter
operator|==
literal|0
condition|)
block|{
name|iOverrideType
operator|.
name|setText
argument_list|(
name|overrideType
operator|.
name|getReference
argument_list|()
operator|+
literal|": "
operator|+
name|overrideType
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|iOverrideType
operator|.
name|setFormValue
argument_list|(
name|overrideType
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|CheckBox
name|additionalOverrideType
init|=
operator|new
name|CheckBox
argument_list|()
decl_stmt|;
name|additionalOverrideType
operator|.
name|setText
argument_list|(
name|overrideType
operator|.
name|getReference
argument_list|()
operator|+
literal|": "
operator|+
name|overrideType
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|additionalOverrideType
operator|.
name|setFormValue
argument_list|(
name|overrideType
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|overrideTypesForm
operator|.
name|addRow
argument_list|(
name|additionalOverrideType
argument_list|)
expr_stmt|;
block|}
name|overrideCounter
operator|++
expr_stmt|;
block|}
if|if
condition|(
name|overrideCounter
operator|>
literal|0
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iOverrideTypeLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|//Edit Course Offering
name|iAllowDemandCourseOfferings
operator|=
literal|true
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCreditTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|iCanEditCourseOfferingCoordinators
condition|)
block|{
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|iCanEditCourseOffering
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseNumberLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iConsentTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iConsentLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseDemandsLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseDemandsTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iTitleLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iTitleTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iTitle
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|iCanEditCourseOfferingNote
condition|)
block|{
name|iScheduleNote
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iScheduleNoteLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iScheduleNoteTextLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|courseOffering
operator|.
name|getScheduleBookNote
argument_list|()
operator|==
literal|null
operator|||
name|courseOffering
operator|.
name|getScheduleBookNote
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iScheduleNoteLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iScheduleNoteTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
name|iConsent
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iCourseDemands
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCreditSectionLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|courseOffering
operator|.
name|getIsControl
argument_list|()
condition|)
block|{
if|if
condition|(
name|courseOffering
operator|.
name|getCreditText
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|courseOffering
operator|.
name|getCreditText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCreditTextLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getTitle
argument_list|()
operator|==
literal|null
operator|||
name|courseOffering
operator|.
name|getTitle
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iTitleLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iTitleTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iTitleTextLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|courseOffering
operator|.
name|hasExternalId
argument_list|()
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iExternalIdLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getConsent
argument_list|()
operator|==
literal|null
operator|||
name|courseOffering
operator|.
name|getConsent
argument_list|()
operator|==
operator|-
literal|1
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iConsentTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iConsentTextLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getDemandOfferingId
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseDemandsTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseDemandsTextLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|iExternalId
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|iCreditText
operator|.
name|setText
argument_list|(
name|courseOffering
operator|.
name|getCreditText
argument_list|()
argument_list|)
expr_stmt|;
name|iScheduleNoteText
operator|.
name|setText
argument_list|(
name|courseOffering
operator|.
name|getScheduleBookNote
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|courseOffering
operator|.
name|getIsControl
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|iCanEditCourseOffering
operator|&&
operator|!
name|iCanEditCourseOfferingCoordinators
condition|)
block|{
comment|//We should hide this if there are no instructors saved
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iInstructorPanelLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|courseOffering
operator|.
name|getCoordinators
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iInstructorsTable
operator|.
name|getRowCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|instructorDropdown
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
name|shareTextBox
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|responsibilitiesDropdown
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|Button
name|deleteButton
init|=
operator|(
name|Button
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|shareTextBox
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|deleteButton
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
name|iAddCoordinatorButton
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|//Hide instructors
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iInstructorPanelLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|iCanEditCourseOffering
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iReservationOnlyLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iReservationOnlyTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iNewEnrollmentDeadlineLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iNewEnrollmentDeadlineTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iClassChangesDeadlineLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iClassChangesDeadlineTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseDropDeadlineLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseDropDeadlineTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iByReservationOnly
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iNewEnrollmentDeadline
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iClassChangesDeadline
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iCourseDropDeadline
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|courseOffering
operator|.
name|getByReservationOnly
argument_list|()
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iReservationOnlyTextLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getLastWeekToEnroll
argument_list|()
operator|!=
literal|null
operator|&&
name|courseOffering
operator|.
name|getLastWeekToEnroll
argument_list|()
operator|>=
literal|0
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iNewEnrollmentDeadlineTextLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getLastWeekToChange
argument_list|()
operator|!=
literal|null
operator|&&
name|courseOffering
operator|.
name|getLastWeekToChange
argument_list|()
operator|>=
literal|0
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iClassChangesDeadlineTextLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getLastWeekToDrop
argument_list|()
operator|!=
literal|null
operator|&&
name|courseOffering
operator|.
name|getLastWeekToDrop
argument_list|()
operator|>=
literal|0
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseDropDeadlineTextLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iDescEnrollmentDeadlinesLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iRequestsNotesLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iRequestsNotes
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|courseOffering
operator|.
name|getNotes
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|courseOffering
operator|.
name|getNotes
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iRequestNotesTextLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|//Hide notes
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iRequestNotesTextLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iInstructorPanelLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iReservationOnlyLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iNewEnrollmentDeadlineLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iClassChangesDeadlineLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseDropDeadlineLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iDescEnrollmentDeadlinesLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iRequestsNotesLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|//Change Waitlisting display
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iWaitListingLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iWaitListingTextLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"save"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"update"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|UniTimePageLabel
operator|.
name|getInstance
argument_list|()
operator|.
name|setPageName
argument_list|(
name|MESSAGES
operator|.
name|pageEditCourseOffering
argument_list|()
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"back"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|courseAbbr
operator|=
name|courseOffering
operator|.
name|getSubjectAreaAbbv
argument_list|()
operator|+
literal|' '
operator|+
name|courseOffering
operator|.
name|getCourseNbr
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setHeaderTitle
argument_list|(
name|courseAbbr
argument_list|)
expr_stmt|;
name|iCourseNumber
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|courseOffering
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
expr_stmt|;
name|iTitle
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|courseOffering
operator|.
name|getTitle
argument_list|()
argument_list|)
expr_stmt|;
name|iTitleText
operator|.
name|setText
argument_list|(
name|courseOffering
operator|.
name|getTitle
argument_list|()
argument_list|)
expr_stmt|;
name|iExternalId
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|courseOffering
operator|.
name|getExternalId
argument_list|()
argument_list|)
expr_stmt|;
name|iScheduleNote
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|courseOffering
operator|.
name|getScheduleBookNote
argument_list|()
argument_list|)
expr_stmt|;
comment|//Credit
if|if
condition|(
name|courseOffering
operator|.
name|getUnits
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|iUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|courseOffering
operator|.
name|getUnits
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getMaxUnits
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|iMaxUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|courseOffering
operator|.
name|getMaxUnits
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iFractional
operator|.
name|setValue
argument_list|(
name|courseOffering
operator|.
name|getFractionalIncrementsAllowed
argument_list|()
argument_list|)
expr_stmt|;
name|iCourseUrlProvider
operator|.
name|populate
argument_list|(
name|iSubjectArea
argument_list|,
name|iCourseNumber
argument_list|,
name|courseOffering
operator|.
name|getSubjectAreaId
argument_list|()
argument_list|)
expr_stmt|;
name|iCourseUrlProvider
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|//Coordinators
name|ClickHandler
name|deleteCoordinator
init|=
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|AriaButton
name|clickedDeleteButton
init|=
operator|(
name|AriaButton
operator|)
name|event
operator|.
name|getSource
argument_list|()
decl_stmt|;
name|String
name|clickedButtonId
init|=
name|clickedDeleteButton
operator|.
name|getElement
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|Integer
name|clickedButtonIdInteger
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|clickedButtonId
argument_list|)
decl_stmt|;
name|int
name|rowCount
init|=
name|iInstructorsTable
operator|.
name|getRowCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|rowCount
condition|;
name|i
operator|++
control|)
block|{
name|AriaButton
name|deleteButton
init|=
operator|(
name|AriaButton
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|String
name|buttonId
init|=
name|deleteButton
operator|.
name|getElement
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|Integer
name|buttonIdInteger
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|buttonId
argument_list|)
decl_stmt|;
if|if
condition|(
name|buttonIdInteger
operator|.
name|equals
argument_list|(
name|clickedButtonIdInteger
argument_list|)
condition|)
block|{
name|iInstructorsTable
operator|.
name|removeRow
argument_list|(
name|i
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
decl_stmt|;
name|iByReservationOnly
operator|.
name|setValue
argument_list|(
name|courseOffering
operator|.
name|getByReservationOnly
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|courseOffering
operator|.
name|getLastWeekToEnroll
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|iNewEnrollmentDeadline
operator|.
name|setValue
argument_list|(
name|courseOffering
operator|.
name|getLastWeekToEnroll
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|iNewEnrollmentDeadlineText
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|textLastWeekEnrollment
argument_list|(
name|courseOffering
operator|.
name|getLastWeekToEnroll
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getLastWeekToChange
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|iClassChangesDeadline
operator|.
name|setValue
argument_list|(
name|courseOffering
operator|.
name|getLastWeekToChange
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|iClassChangesDeadlineText
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|textLastWeekChange
argument_list|(
name|courseOffering
operator|.
name|getLastWeekToChange
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getLastWeekToDrop
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|iCourseDropDeadline
operator|.
name|setValue
argument_list|(
name|courseOffering
operator|.
name|getLastWeekToDrop
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|iCourseDropDeadlineText
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|textLastWeekDrop
argument_list|(
name|courseOffering
operator|.
name|getLastWeekToDrop
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|iRequestsNotes
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|courseOffering
operator|.
name|getNotes
argument_list|()
argument_list|)
expr_stmt|;
name|iRequestNotesText
operator|.
name|setText
argument_list|(
name|courseOffering
operator|.
name|getNotes
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|courseOffering
operator|.
name|getCatalogLinkLabel
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|iCatalogLinkLabel
operator|.
name|setHref
argument_list|(
name|courseOffering
operator|.
name|getCatalogLinkLocation
argument_list|()
argument_list|)
expr_stmt|;
name|iCatalogLinkLabel
operator|.
name|setHTML
argument_list|(
name|courseOffering
operator|.
name|getCatalogLinkLabel
argument_list|()
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCatalogLinkLabelLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|CourseOfferingPropertiesRequest
argument_list|(
literal|true
argument_list|,
name|courseOffering
operator|.
name|getSubjectAreaId
argument_list|()
argument_list|,
name|courseOffering
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|CourseOfferingPropertiesInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|handleError
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|CourseOfferingPropertiesInterface
name|result
parameter_list|)
block|{
if|if
condition|(
operator|!
name|result
operator|.
name|getCourseTypes
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iCourseType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemSelect
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
for|for
control|(
name|CourseTypeInterface
name|courseType
range|:
name|result
operator|.
name|getCourseTypes
argument_list|()
control|)
block|{
name|iCourseType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|courseType
operator|.
name|getLabel
argument_list|()
argument_list|,
name|courseType
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|//Hide the courseTypes dropdown
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseTypeLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getCourseTypeId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|int
name|altIndex
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iCourseType
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iCourseType
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|courseOffering
operator|.
name|getCourseTypeId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|altIndex
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
name|iCourseType
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|altIndex
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|iCanEditCourseOffering
condition|)
block|{
if|if
condition|(
name|courseOffering
operator|.
name|getCourseTypeId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|iCourseType
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseTypeLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getWaitList
argument_list|()
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|result
operator|.
name|getWaitListDefault
argument_list|()
condition|)
block|{
name|iWaitListingText
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|waitListDefaultEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|waitListingImage
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|descWaitListEnabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|waitListingImage
operator|.
name|setUrl
argument_list|(
name|RESOURCES
operator|.
name|cancel
argument_list|()
operator|.
name|getSafeUri
argument_list|()
argument_list|)
expr_stmt|;
name|waitListingImage
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|descWaitListDisabled
argument_list|()
argument_list|)
expr_stmt|;
name|iWaitListingText
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|waitListDefaultDisabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|courseOffering
operator|.
name|getWaitList
argument_list|()
condition|)
block|{
name|iWaitListingText
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|waitListEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|waitListingImage
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|descWaitListEnabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|waitListingImage
operator|.
name|setUrl
argument_list|(
name|RESOURCES
operator|.
name|cancel
argument_list|()
operator|.
name|getSafeUri
argument_list|()
argument_list|)
expr_stmt|;
name|waitListingImage
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|descWaitListDisabled
argument_list|()
argument_list|)
expr_stmt|;
name|iWaitListingText
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|waitListDisabled
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iPrefRowsAdded
operator|=
name|result
operator|.
name|getPrefRowsAdded
argument_list|()
expr_stmt|;
name|constructInstructorsTable
argument_list|()
expr_stmt|;
name|iCourseDropDeadlineNote
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|hintCourseDropDeadline
argument_list|(
name|result
operator|.
name|getWkDropDefault
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iNewEnrollmentDeadlineNote
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|hintNewEnrollmentDeadline
argument_list|(
name|result
operator|.
name|getWkEnrollDefault
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iClassChangesDeadlineNote
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|hintClassChangesDeadline
argument_list|(
name|result
operator|.
name|getWkChangeDefault
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iDescEnrollmentDeadlinesNote
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|descriptionEnrollmentDeadlines
argument_list|(
name|result
operator|.
name|getWeekStartDayOfWeek
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iCourseNbrRegex
operator|=
name|result
operator|.
name|getCourseNbrRegex
argument_list|()
expr_stmt|;
name|iCourseNbrInfo
operator|=
name|result
operator|.
name|getCourseNbrInfo
argument_list|()
expr_stmt|;
name|iCourseOfferingNumberMustBeUnique
operator|=
name|result
operator|.
name|getCourseOfferingMustBeUnique
argument_list|()
expr_stmt|;
name|iCourseOfferingNumberUpperCase
operator|=
name|result
operator|.
name|getCourseOfferingNumberUpperCase
argument_list|()
expr_stmt|;
name|iCredit
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemSelect
argument_list|()
argument_list|,
literal|"select"
argument_list|)
expr_stmt|;
for|for
control|(
name|CourseCreditFormatInterface
name|courseCreditFormat
range|:
name|result
operator|.
name|getCourseCreditFormats
argument_list|()
control|)
block|{
name|iCredit
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|courseCreditFormat
operator|.
name|getLabel
argument_list|()
argument_list|,
name|courseCreditFormat
operator|.
name|getReference
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|CourseCreditTypeInterface
name|courseCreditType
range|:
name|result
operator|.
name|getCourseCreditTypes
argument_list|()
control|)
block|{
name|iCreditType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|courseCreditType
operator|.
name|getLabel
argument_list|()
argument_list|,
name|courseCreditType
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|CourseCreditUnitTypeInterface
name|courseCreditUnitType
range|:
name|result
operator|.
name|getCourseCreditUnitTypes
argument_list|()
control|)
block|{
name|iCreditUnitType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|courseCreditUnitType
operator|.
name|getLabel
argument_list|()
argument_list|,
name|courseCreditUnitType
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|WaitListInterface
name|waitListItem
range|:
name|result
operator|.
name|getWaitLists
argument_list|()
control|)
block|{
name|iWaitListing
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|waitListItem
operator|.
name|getLabel
argument_list|()
argument_list|,
name|waitListItem
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|int
name|waitListIndex
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iWaitListing
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|courseOffering
operator|.
name|getWaitList
argument_list|()
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|iWaitListing
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|courseOffering
operator|.
name|getWaitList
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|waitListIndex
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
block|}
name|iWaitListing
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|waitListIndex
argument_list|)
expr_stmt|;
if|if
condition|(
name|iAllowDemandCourseOfferings
condition|)
block|{
if|if
condition|(
name|result
operator|.
name|getCourseDemands
argument_list|()
operator|==
literal|null
operator|||
name|result
operator|.
name|getCourseDemands
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseDemandsLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iCourseDemands
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|""
argument_list|,
literal|"none"
argument_list|)
expr_stmt|;
for|for
control|(
name|CourseOfferingInterface
name|courseOffering
range|:
name|result
operator|.
name|getCourseDemands
argument_list|()
control|)
block|{
name|iCourseDemands
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|courseOffering
operator|.
name|getLabel
argument_list|()
argument_list|,
name|courseOffering
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
operator|!
name|iCanEditCourseOffering
condition|)
block|{
name|iCourseDemands
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
name|iConsent
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|consentNone
argument_list|()
argument_list|,
literal|"none"
argument_list|)
expr_stmt|;
for|for
control|(
name|OfferingConsentTypeInterface
name|offeringConsentType
range|:
name|result
operator|.
name|getOfferingConsentTypes
argument_list|()
control|)
block|{
name|iConsent
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|offeringConsentType
operator|.
name|getLabel
argument_list|()
argument_list|,
name|offeringConsentType
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getConsent
argument_list|()
operator|!=
literal|null
operator|&&
name|courseOffering
operator|.
name|getConsent
argument_list|()
operator|!=
operator|-
literal|1
condition|)
block|{
name|int
name|consentIndex
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iConsent
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iConsent
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|courseOffering
operator|.
name|getConsent
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|consentIndex
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
name|iConsent
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|consentIndex
argument_list|)
expr_stmt|;
name|iConsentText
operator|.
name|setText
argument_list|(
name|courseOffering
operator|.
name|getConsentText
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getDemandOfferingId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|int
name|demandIndex
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iCourseDemands
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iCourseDemands
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|courseOffering
operator|.
name|getDemandOfferingId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|demandIndex
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
name|iCourseDemands
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|demandIndex
argument_list|)
expr_stmt|;
name|iCourseDemandsText
operator|.
name|setText
argument_list|(
name|courseOffering
operator|.
name|getDemandOfferingText
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
operator|!
name|iCanEditCourseOffering
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseDemandsLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getCoordinators
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|int
name|numberOfCoordinators
init|=
name|courseOffering
operator|.
name|getCoordinators
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|Integer
name|maxId
init|=
name|getMaxId
argument_list|(
name|iInstructorsTable
argument_list|)
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|i
operator|<
name|numberOfCoordinators
condition|)
block|{
name|maxId
operator|++
expr_stmt|;
name|List
argument_list|<
name|Widget
argument_list|>
name|widgets
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|instructorDropdown
init|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
name|shareTextBox
init|=
operator|new
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
argument_list|(
operator|new
name|UniTimeTextBox
argument_list|(
literal|4
argument_list|,
name|ValueBoxBase
operator|.
name|TextAlignment
operator|.
name|LEFT
argument_list|)
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|responsibilitiesDropdown
init|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
decl_stmt|;
name|Button
name|deleteButton
init|=
operator|new
name|AriaButton
argument_list|(
name|MESSAGES
operator|.
name|opGroupDelete
argument_list|()
argument_list|)
decl_stmt|;
name|deleteButton
operator|.
name|addStyleName
argument_list|(
literal|"unitime-NoPrint"
argument_list|)
expr_stmt|;
name|deleteButton
operator|.
name|getElement
argument_list|()
operator|.
name|setId
argument_list|(
name|maxId
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|deleteButton
operator|.
name|addClickHandler
argument_list|(
name|deleteCoordinator
argument_list|)
expr_stmt|;
name|widgets
operator|.
name|add
argument_list|(
name|instructorDropdown
argument_list|)
expr_stmt|;
name|widgets
operator|.
name|add
argument_list|(
name|shareTextBox
argument_list|)
expr_stmt|;
name|widgets
operator|.
name|add
argument_list|(
name|responsibilitiesDropdown
argument_list|)
expr_stmt|;
name|widgets
operator|.
name|add
argument_list|(
name|deleteButton
argument_list|)
expr_stmt|;
name|iInstructorsTable
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|widgets
argument_list|)
expr_stmt|;
name|i
operator|++
expr_stmt|;
block|}
block|}
name|iDefaultTeachingResponsibilityId
operator|=
name|result
operator|.
name|getDefaultTeachingResponsibilityId
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iInstructorsTable
operator|.
name|getRowCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|instructorDropdown
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|responsibilitiesDropdown
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"-"
argument_list|,
literal|"-"
argument_list|)
expr_stmt|;
for|for
control|(
name|InstructorInterface
name|instructorObject
range|:
name|result
operator|.
name|getInstructors
argument_list|()
control|)
block|{
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|instructorObject
operator|.
name|getLabel
argument_list|()
argument_list|,
name|instructorObject
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|CoordinatorInterface
name|coordinator
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|courseOffering
operator|.
name|getCoordinators
argument_list|()
operator|.
name|size
argument_list|()
operator|>=
name|i
condition|)
block|{
name|coordinator
operator|=
name|courseOffering
operator|.
name|getCoordinators
argument_list|()
operator|.
name|get
argument_list|(
name|i
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iDefaultTeachingResponsibilityId
operator|==
literal|null
operator|||
name|iDefaultTeachingResponsibilityId
operator|.
name|isEmpty
argument_list|()
operator|||
operator|(
name|coordinator
operator|!=
literal|null
operator|&&
operator|(
name|coordinator
operator|.
name|getResponsibilityId
argument_list|()
operator|==
literal|null
operator|||
name|coordinator
operator|.
name|getResponsibilityId
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|)
operator|)
condition|)
block|{
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"-"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|ResponsibilityInterface
name|responsibilityObject
range|:
name|result
operator|.
name|getResponsibilities
argument_list|()
control|)
block|{
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|responsibilityObject
operator|.
name|getLabel
argument_list|()
argument_list|,
name|responsibilityObject
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|//Set instructors if necessary
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iInstructorsTable
operator|.
name|getRowCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|instructorDropdown
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
name|shareTextBox
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|responsibilitiesDropdown
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|2
argument_list|)
decl_stmt|;
if|if
condition|(
name|courseOffering
operator|.
name|getCoordinators
argument_list|()
operator|.
name|size
argument_list|()
operator|<
name|i
operator|&&
operator|(
name|iDefaultTeachingResponsibilityId
operator|==
literal|null
operator|||
name|iDefaultTeachingResponsibilityId
operator|.
name|isEmpty
argument_list|()
operator|)
condition|)
block|{
break|break;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getCoordinators
argument_list|()
operator|.
name|size
argument_list|()
operator|>=
name|i
condition|)
block|{
name|CoordinatorInterface
name|coordinator
init|=
name|courseOffering
operator|.
name|getCoordinators
argument_list|()
operator|.
name|get
argument_list|(
name|i
operator|-
literal|1
argument_list|)
decl_stmt|;
name|int
name|instructorDropdownIndex
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|1
init|;
name|j
operator|<
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
if|if
condition|(
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|j
argument_list|)
operator|.
name|equals
argument_list|(
name|coordinator
operator|.
name|getInstructorId
argument_list|()
argument_list|)
condition|)
block|{
name|instructorDropdownIndex
operator|=
name|j
expr_stmt|;
break|break;
block|}
block|}
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|instructorDropdownIndex
argument_list|)
expr_stmt|;
name|shareTextBox
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|coordinator
operator|.
name|getPercShare
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|responsibilitiesDropdownIndex
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|1
init|;
name|j
operator|<
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
if|if
condition|(
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|j
argument_list|)
operator|.
name|equals
argument_list|(
name|coordinator
operator|.
name|getResponsibilityId
argument_list|()
argument_list|)
condition|)
block|{
name|responsibilitiesDropdownIndex
operator|=
name|j
expr_stmt|;
break|break;
block|}
block|}
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|responsibilitiesDropdownIndex
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iDefaultTeachingResponsibilityId
operator|!=
literal|null
operator|&&
operator|!
name|iDefaultTeachingResponsibilityId
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|int
name|responsibilitiesDropdownIndex
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|1
init|;
name|j
operator|<
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
if|if
condition|(
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|j
argument_list|)
operator|.
name|equals
argument_list|(
name|iDefaultTeachingResponsibilityId
argument_list|)
condition|)
block|{
name|responsibilitiesDropdownIndex
operator|=
name|j
expr_stmt|;
break|break;
block|}
block|}
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|responsibilitiesDropdownIndex
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|result
operator|.
name|getResponsibilities
argument_list|()
operator|==
literal|null
operator|||
name|result
operator|.
name|getResponsibilities
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iInstructorsTable
operator|.
name|setColumnVisible
argument_list|(
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iInstructorsTable
operator|.
name|setColumnVisible
argument_list|(
literal|2
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getIsControl
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|iCanEditCourseOffering
operator|&&
operator|!
name|iCanEditCourseOfferingCoordinators
condition|)
block|{
if|if
condition|(
name|courseOffering
operator|.
name|getCoordinators
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iInstructorsTable
operator|.
name|getRowCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|instructorDropdown
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
name|shareTextBox
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|responsibilitiesDropdown
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|Button
name|deleteButton
init|=
operator|(
name|Button
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|shareTextBox
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|deleteButton
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
name|iAddCoordinatorButton
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getCreditFormat
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|int
name|creditIndex
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iCredit
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iCredit
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|courseOffering
operator|.
name|getCreditFormat
argument_list|()
argument_list|)
condition|)
block|{
name|creditIndex
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
name|iCredit
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|creditIndex
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getCreditType
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|int
name|creditTypeIndex
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iCreditType
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iCreditType
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|courseOffering
operator|.
name|getCreditType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|creditTypeIndex
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
name|iCreditType
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|creditTypeIndex
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getCreditUnitType
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|int
name|creditUnitTypeIndex
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iCreditUnitType
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iCreditUnitType
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|courseOffering
operator|.
name|getCreditUnitType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|creditUnitTypeIndex
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
name|iCreditUnitType
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|creditUnitTypeIndex
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getCreditFormat
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|toggleCreditSection
argument_list|()
expr_stmt|;
block|}
name|iAllowAlternativeCourseOfferings
operator|=
name|result
operator|.
name|getAllowAlternativeCourseOfferings
argument_list|()
expr_stmt|;
if|if
condition|(
name|iAllowAlternativeCourseOfferings
condition|)
block|{
if|if
condition|(
name|result
operator|.
name|getAltCourseOfferings
argument_list|()
operator|==
literal|null
operator|||
name|result
operator|.
name|getAltCourseOfferings
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iAltCourseOfferingLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iAlternativeCourseOfferings
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|""
argument_list|,
literal|"none"
argument_list|)
expr_stmt|;
for|for
control|(
name|CourseOfferingInterface
name|courseOffering
range|:
name|result
operator|.
name|getAltCourseOfferings
argument_list|()
control|)
block|{
name|iAlternativeCourseOfferings
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|courseOffering
operator|.
name|getLabel
argument_list|()
argument_list|,
name|courseOffering
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getAlternativeCourseOfferingId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|int
name|altIndex
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iAlternativeCourseOfferings
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iAlternativeCourseOfferings
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|courseOffering
operator|.
name|getAlternativeCourseOfferingId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|altIndex
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
name|iAlternativeCourseOfferings
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|altIndex
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iCanEditCourseOffering
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iAltCourseOfferingLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iAltCourseOfferingLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|result
operator|.
name|getCourseUrlProvider
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|result
operator|.
name|getCourseUrlProvider
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseUrlProviderLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseUrlProviderLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|iCoursesFundingDepartmentsEnabled
operator|=
name|result
operator|.
name|getCoursesFundingDepartmentsEnabled
argument_list|()
expr_stmt|;
if|if
condition|(
name|iCoursesFundingDepartmentsEnabled
condition|)
block|{
for|for
control|(
name|DepartmentInterface
name|fundingDepartment
range|:
name|result
operator|.
name|getFundingDepartments
argument_list|()
control|)
block|{
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|fundingDepartment
operator|.
name|getLabel
argument_list|()
argument_list|,
name|fundingDepartment
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|courseOffering
operator|.
name|getFundingDepartmentId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|int
name|altIndex
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|courseOffering
operator|.
name|getFundingDepartmentId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|altIndex
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|altIndex
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|courseOffering
operator|.
name|getEffectiveFundingDepartmentId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|int
name|altIndex
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|courseOffering
operator|.
name|getEffectiveFundingDepartmentId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|altIndex
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|altIndex
argument_list|)
expr_stmt|;
block|}
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iFundingDeptLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|iCanEditExternalIds
operator|=
name|result
operator|.
name|getCanEditExternalIds
argument_list|()
expr_stmt|;
name|iCanShowExternalIds
operator|=
name|result
operator|.
name|getCanShowExternalIds
argument_list|()
expr_stmt|;
if|if
condition|(
name|iCanEditCourseOffering
operator|||
name|iCanAddCourseOffering
condition|)
block|{
if|if
condition|(
operator|!
name|iCanEditExternalIds
condition|)
block|{
name|iExternalId
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|iCanEditCourseOffering
operator|&&
operator|(
name|courseOffering
operator|.
name|getExternalId
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|!
name|courseOffering
operator|.
name|getExternalId
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iCanShowExternalIds
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iExternalIdLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|iCanEditExternalIds
operator|&&
operator|!
name|iCanShowExternalIds
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iExternalIdLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
comment|//Get Override Types
name|int
name|overrideCounter
init|=
literal|0
decl_stmt|;
for|for
control|(
name|OverrideTypeInterface
name|overrideType
range|:
name|result
operator|.
name|getOverrideTypes
argument_list|()
control|)
block|{
if|if
condition|(
name|overrideCounter
operator|==
literal|0
condition|)
block|{
name|iOverrideType
operator|.
name|setText
argument_list|(
name|overrideType
operator|.
name|getReference
argument_list|()
operator|+
literal|": "
operator|+
name|overrideType
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|iOverrideType
operator|.
name|setFormValue
argument_list|(
name|overrideType
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|courseOffering
operator|.
name|getCourseOverrides
argument_list|()
operator|.
name|contains
argument_list|(
name|overrideType
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|iOverrideType
operator|.
name|setValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|CheckBox
name|additionalOverrideType
init|=
operator|new
name|CheckBox
argument_list|()
decl_stmt|;
name|additionalOverrideType
operator|.
name|setText
argument_list|(
name|overrideType
operator|.
name|getReference
argument_list|()
operator|+
literal|": "
operator|+
name|overrideType
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|additionalOverrideType
operator|.
name|setFormValue
argument_list|(
name|overrideType
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|overrideTypesForm
operator|.
name|addRow
argument_list|(
name|additionalOverrideType
argument_list|)
expr_stmt|;
if|if
condition|(
name|courseOffering
operator|.
name|getCourseOverrides
argument_list|()
operator|.
name|contains
argument_list|(
name|overrideType
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|additionalOverrideType
operator|.
name|setValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
name|overrideCounter
operator|++
expr_stmt|;
block|}
if|if
condition|(
name|overrideCounter
operator|>
literal|0
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iOverrideTypeLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|handleError
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedCreate
argument_list|(
name|MESSAGES
operator|.
name|objectCourseOffering
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedCreate
argument_list|(
name|MESSAGES
operator|.
name|objectCourseOffering
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
name|ToolBox
operator|.
name|checkAccess
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
specifier|public
name|CourseOfferingInterface
name|getValue
parameter_list|()
block|{
name|iCourseOffering
operator|.
name|setTitle
argument_list|(
name|iTitle
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|iCourseOffering
operator|.
name|setScheduleBookNote
argument_list|(
name|iScheduleNote
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|Long
name|subjectAreaId
decl_stmt|;
if|if
condition|(
name|iIsAdd
condition|)
block|{
name|subjectAreaId
operator|=
operator|new
name|Long
argument_list|(
name|iSubjectArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
expr_stmt|;
name|iCourseOffering
operator|.
name|setSubjectAreaId
argument_list|(
name|subjectAreaId
argument_list|)
expr_stmt|;
block|}
name|iCourseOffering
operator|.
name|setByReservationOnly
argument_list|(
name|iByReservationOnly
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|iCourseOffering
operator|.
name|setLastWeekToEnroll
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|iNewEnrollmentDeadline
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|iCourseOffering
operator|.
name|setLastWeekToEnroll
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|iCourseOffering
operator|.
name|setLastWeekToChange
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|iClassChangesDeadline
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|iCourseOffering
operator|.
name|setLastWeekToChange
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|iCourseOffering
operator|.
name|setLastWeekToDrop
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|iCourseDropDeadline
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|iCourseOffering
operator|.
name|setLastWeekToDrop
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
name|iCourseOffering
operator|.
name|setNotes
argument_list|(
name|iRequestsNotes
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iConsent
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|iConsent
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
operator|.
name|equals
argument_list|(
literal|"none"
argument_list|)
condition|)
block|{
name|iCourseOffering
operator|.
name|setConsent
argument_list|(
operator|new
name|Long
argument_list|(
name|iConsent
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iCourseOffering
operator|.
name|setConsent
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iCredit
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|iCredit
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
operator|.
name|equals
argument_list|(
literal|"select"
argument_list|)
condition|)
block|{
name|iCourseOffering
operator|.
name|setCreditFormat
argument_list|(
name|iCredit
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
expr_stmt|;
name|iCourseOffering
operator|.
name|setCreditType
argument_list|(
operator|new
name|Long
argument_list|(
name|iCreditType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iCourseOffering
operator|.
name|setCreditUnitType
argument_list|(
operator|new
name|Long
argument_list|(
name|iCreditUnitType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|iCourseOffering
operator|.
name|setUnits
argument_list|(
name|iUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|==
literal|null
condition|?
literal|0
else|:
name|Float
operator|.
name|parseFloat
argument_list|(
name|iUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
name|iCourseOffering
operator|.
name|setUnits
argument_list|(
operator|(
name|float
operator|)
literal|0
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|iCourseOffering
operator|.
name|setMaxUnits
argument_list|(
name|iMaxUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|==
literal|null
condition|?
literal|0
else|:
name|Float
operator|.
name|parseFloat
argument_list|(
name|iMaxUnits
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
name|iCourseOffering
operator|.
name|setMaxUnits
argument_list|(
operator|(
name|float
operator|)
literal|0
argument_list|)
expr_stmt|;
block|}
name|iCourseOffering
operator|.
name|setFractionalIncrementsAllowed
argument_list|(
name|iFractional
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iCourseOffering
operator|.
name|setCreditFormat
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
name|iCourseOffering
operator|.
name|clearInstructors
argument_list|()
expr_stmt|;
name|Integer
name|rowCount
init|=
name|iInstructorsTable
operator|.
name|getRowCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|rowCount
condition|;
name|i
operator|++
control|)
block|{
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|instructorDropdown
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
name|shareTextBox
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|responsibilityDropdown
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|String
name|instructorId
init|=
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
decl_stmt|;
name|String
name|responsibilityId
init|=
name|responsibilityDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
decl_stmt|;
name|String
name|percShare
init|=
name|shareTextBox
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
literal|"-"
operator|.
name|equals
argument_list|(
name|instructorId
argument_list|)
condition|)
block|{
name|CoordinatorInterface
name|coordinator
init|=
operator|new
name|CoordinatorInterface
argument_list|()
decl_stmt|;
name|coordinator
operator|.
name|setInstructorId
argument_list|(
name|instructorId
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|setPercShare
argument_list|(
name|percShare
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|setResponsibilityId
argument_list|(
name|responsibilityId
argument_list|)
expr_stmt|;
name|iCourseOffering
operator|.
name|addSendCoordinator
argument_list|(
name|coordinator
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iCourseDemands
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
literal|"none"
operator|.
name|equals
argument_list|(
name|iCourseDemands
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
condition|)
block|{
name|iCourseOffering
operator|.
name|setDemandOfferingId
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iCourseOffering
operator|.
name|setDemandOfferingId
argument_list|(
operator|new
name|Long
argument_list|(
name|iCourseDemands
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iAllowAlternativeCourseOfferings
condition|)
block|{
if|if
condition|(
name|iAlternativeCourseOfferings
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
literal|"none"
operator|.
name|equals
argument_list|(
name|iAlternativeCourseOfferings
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
condition|)
block|{
name|iCourseOffering
operator|.
name|setAlternativeCourseOfferingId
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iCourseOffering
operator|.
name|setAlternativeCourseOfferingId
argument_list|(
operator|new
name|Long
argument_list|(
name|iAlternativeCourseOfferings
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|iCoursesFundingDepartmentsEnabled
condition|)
block|{
if|if
condition|(
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
literal|"none"
operator|.
name|equals
argument_list|(
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
condition|)
block|{
name|iCourseOffering
operator|.
name|setFundingDepartmentId
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iCourseOffering
operator|.
name|setFundingDepartmentId
argument_list|(
operator|new
name|Long
argument_list|(
name|iFundingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|iCanEditExternalIds
condition|)
block|{
name|iCourseOffering
operator|.
name|setExternalId
argument_list|(
name|iExternalId
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iWaitListing
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|iWaitListing
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iCourseOffering
operator|.
name|setWaitList
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iCourseOffering
operator|.
name|setWaitList
argument_list|(
literal|"true"
operator|.
name|equalsIgnoreCase
argument_list|(
name|iWaitListing
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|iCourseOffering
operator|.
name|setWaitList
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iCourseType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|iCourseType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iCourseOffering
operator|.
name|setCourseTypeId
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iCourseOffering
operator|.
name|setCourseTypeId
argument_list|(
operator|new
name|Long
argument_list|(
name|iCourseType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|iCourseOffering
operator|.
name|setCourseTypeId
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
name|iCourseOffering
operator|.
name|clearCourseOverrides
argument_list|()
expr_stmt|;
name|Integer
name|overrideRowCount
init|=
name|overrideTypesForm
operator|.
name|getRowCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|overrideRowCount
condition|;
name|i
operator|++
control|)
block|{
name|CheckBox
name|overrideCheckBox
init|=
operator|(
name|CheckBox
operator|)
name|overrideTypesForm
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|overrideCheckBox
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|String
name|overrideTypeId
init|=
name|overrideCheckBox
operator|.
name|getFormValue
argument_list|()
decl_stmt|;
name|iCourseOffering
operator|.
name|addCourseOverride
argument_list|(
name|overrideTypeId
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|iCourseOffering
return|;
block|}
specifier|protected
name|boolean
name|validate
parameter_list|(
name|Boolean
name|iIsEdit
parameter_list|)
block|{
name|boolean
name|ok
init|=
literal|true
decl_stmt|;
name|String
name|courseNumber
init|=
name|iCourseNumber
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
name|courseNumber
operator|!=
literal|null
operator|&&
name|iCourseOfferingNumberUpperCase
condition|)
block|{
name|iCourseOffering
operator|.
name|setCourseNbr
argument_list|(
name|courseNumber
operator|.
name|toUpperCase
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iIsAdd
condition|)
block|{
comment|//Subject Area Check
name|String
name|subjectAreaId
init|=
name|iSubjectArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|subjectAreaId
operator|==
literal|null
operator|||
name|subjectAreaId
operator|.
name|equals
argument_list|(
literal|"0"
argument_list|)
condition|)
block|{
name|iSubjectArea
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorSubjectRequired
argument_list|()
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorSubjectRequired
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
block|}
if|if
condition|(
name|courseNumber
operator|==
literal|null
operator|||
name|courseNumber
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|iCourseNumber
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorCourseNumberIsEmpty
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|ok
condition|)
block|{
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorCourseNumberIsEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ok
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
try|try
block|{
name|RegExp
name|rx
init|=
name|RegExp
operator|.
name|compile
argument_list|(
name|iCourseNbrRegex
argument_list|)
decl_stmt|;
name|MatchResult
name|match
init|=
name|rx
operator|.
name|exec
argument_list|(
name|iCourseNumber
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|match
operator|==
literal|null
condition|)
block|{
name|iCourseNumber
operator|.
name|setErrorHint
argument_list|(
name|iCourseNbrInfo
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|iCourseNbrInfo
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|iCourseNumber
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorCourseNumberCannotBeMatched
argument_list|(
name|iCourseNbrRegex
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorCourseNumberCannotBeMatched
argument_list|(
name|iCourseNbrRegex
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
block|}
comment|//Instructor Validation
name|Integer
name|rowCount
init|=
name|iInstructorsTable
operator|.
name|getRowCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|rowCount
condition|;
name|i
operator|++
control|)
block|{
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|instructorDropdown
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|responsibilitiesDropdown
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|String
name|instructorId
init|=
name|instructorDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
decl_stmt|;
name|String
name|responsibilityId
init|=
name|responsibilitiesDropdown
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|instructorId
operator|==
literal|null
operator|||
name|instructorId
operator|.
name|length
argument_list|()
operator|==
literal|0
operator|||
name|instructorId
operator|.
name|equals
argument_list|(
literal|"-"
argument_list|)
condition|)
block|{
continue|continue;
block|}
for|for
control|(
name|int
name|j
init|=
name|i
operator|+
literal|1
init|;
name|j
operator|<
name|rowCount
condition|;
name|j
operator|++
control|)
block|{
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|instructorDropdown2
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|j
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|responsibilitiesDropdown2
init|=
operator|(
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
operator|)
name|iInstructorsTable
operator|.
name|getWidget
argument_list|(
name|j
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|String
name|instructorId2
init|=
name|instructorDropdown2
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
decl_stmt|;
name|String
name|responsibilityId2
init|=
name|responsibilitiesDropdown2
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|instructorId
operator|.
name|equals
argument_list|(
name|instructorId2
argument_list|)
operator|&&
name|responsibilityId
operator|.
name|equals
argument_list|(
name|responsibilityId2
argument_list|)
condition|)
block|{
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorDuplicateCoordinator
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
block|}
block|}
return|return
name|ok
return|;
block|}
block|}
end_class

end_unit

