begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|rooms
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimePageLabel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|FilterBox
operator|.
name|Chip
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|MouseClickListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|TableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|FilterRpcResponse
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|DepartmentInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|ExamTypeInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomDetailInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomPropertiesInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomsPageMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|UpdateRoomDepartmentsRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|RoomDepartmentsEdit
extends|extends
name|Composite
block|{
specifier|private
specifier|static
specifier|final
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|SimpleForm
name|iForm
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iHeader
decl_stmt|,
name|iFooter
decl_stmt|;
specifier|private
name|RoomPropertiesInterface
name|iProperties
decl_stmt|;
specifier|private
name|DepartmentInterface
name|iDepartment
init|=
literal|null
decl_stmt|;
specifier|private
name|ExamTypeInterface
name|iExamType
init|=
literal|null
decl_stmt|;
specifier|private
name|RoomsTable
name|iRooms
init|=
literal|null
decl_stmt|;
specifier|public
name|RoomDepartmentsEdit
parameter_list|()
block|{
name|iForm
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|iForm
operator|.
name|addStyleName
argument_list|(
literal|"unitime-RoomDepartmentsEdit"
argument_list|)
expr_stmt|;
name|iHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"update"
argument_list|,
name|MESSAGES
operator|.
name|buttonUpdate
argument_list|()
argument_list|,
literal|100
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|UpdateRoomDepartmentsRequest
name|request
init|=
operator|new
name|UpdateRoomDepartmentsRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setSessionId
argument_list|(
name|iProperties
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setDepartment
argument_list|(
name|iDepartment
argument_list|)
expr_stmt|;
name|request
operator|.
name|setExamType
argument_list|(
name|iExamType
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iRooms
operator|.
name|getRowCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|RoomDetailInterface
name|room
init|=
name|iRooms
operator|.
name|getData
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|boolean
name|wasSelected
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|iDepartment
operator|!=
literal|null
condition|)
block|{
name|wasSelected
operator|=
operator|(
name|room
operator|.
name|getDepartment
argument_list|(
name|iDepartment
operator|.
name|getId
argument_list|()
argument_list|)
operator|!=
literal|null
operator|)
expr_stmt|;
block|}
if|else if
condition|(
name|iExamType
operator|!=
literal|null
condition|)
block|{
name|wasSelected
operator|=
operator|(
name|room
operator|.
name|getExamType
argument_list|(
name|iExamType
operator|.
name|getId
argument_list|()
argument_list|)
operator|!=
literal|null
operator|)
expr_stmt|;
block|}
name|boolean
name|selected
init|=
name|iRooms
operator|.
name|isRoomSelected
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|selected
operator|!=
name|wasSelected
condition|)
block|{
if|if
condition|(
name|selected
condition|)
name|request
operator|.
name|addLocation
argument_list|(
name|room
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|request
operator|.
name|dropLocation
argument_list|(
name|room
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|request
operator|.
name|hasAddLocations
argument_list|()
operator|&&
operator|!
name|request
operator|.
name|hasDropLocations
argument_list|()
condition|)
block|{
name|hide
argument_list|(
literal|false
argument_list|)
expr_stmt|;
return|return;
block|}
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitUpdatingRoomDepartments
argument_list|()
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|request
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseNull
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorFailedToUpdateRoomDepartments
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|errorFailedToUpdateRoomDepartments
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseNull
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|hide
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"back"
argument_list|,
name|MESSAGES
operator|.
name|buttonBack
argument_list|()
argument_list|,
literal|100
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|hide
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iHeader
argument_list|)
expr_stmt|;
name|iRooms
operator|=
operator|new
name|RoomsTable
argument_list|(
name|RoomsPageMode
operator|.
name|COURSES
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iRooms
argument_list|)
expr_stmt|;
name|iRooms
operator|.
name|addMouseClickListener
argument_list|(
operator|new
name|MouseClickListener
argument_list|<
name|RoomDetailInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseClick
parameter_list|(
name|TableEvent
argument_list|<
name|RoomDetailInterface
argument_list|>
name|event
parameter_list|)
block|{
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iFooter
operator|=
name|iHeader
operator|.
name|clonePanel
argument_list|()
expr_stmt|;
name|iForm
operator|.
name|addBottomRow
argument_list|(
name|iFooter
argument_list|)
expr_stmt|;
name|initWidget
argument_list|(
name|iForm
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setProperties
parameter_list|(
name|RoomPropertiesInterface
name|properties
parameter_list|)
block|{
name|iProperties
operator|=
name|properties
expr_stmt|;
name|iRooms
operator|.
name|setProperties
argument_list|(
name|iProperties
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|hide
parameter_list|(
name|boolean
name|refresh
parameter_list|)
block|{
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|onHide
argument_list|(
name|refresh
argument_list|)
expr_stmt|;
name|Window
operator|.
name|scrollTo
argument_list|(
name|iLastScrollLeft
argument_list|,
name|iLastScrollTop
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|onHide
parameter_list|(
name|boolean
name|refresh
parameter_list|)
block|{
block|}
specifier|protected
name|void
name|onShow
parameter_list|()
block|{
block|}
specifier|private
name|int
name|iLastScrollTop
decl_stmt|,
name|iLastScrollLeft
decl_stmt|;
specifier|public
name|void
name|show
parameter_list|()
block|{
name|UniTimePageLabel
operator|.
name|getInstance
argument_list|()
operator|.
name|setPageName
argument_list|(
name|MESSAGES
operator|.
name|pageEditRoomsDepartments
argument_list|()
argument_list|)
expr_stmt|;
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iLastScrollLeft
operator|=
name|Window
operator|.
name|getScrollLeft
argument_list|()
expr_stmt|;
name|iLastScrollTop
operator|=
name|Window
operator|.
name|getScrollTop
argument_list|()
expr_stmt|;
name|onShow
argument_list|()
expr_stmt|;
name|Window
operator|.
name|scrollTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|setDepartmentOrExamType
parameter_list|(
name|String
name|code
parameter_list|)
block|{
if|if
condition|(
name|iProperties
operator|==
literal|null
condition|)
return|return
literal|false
return|;
name|iDepartment
operator|=
literal|null
expr_stmt|;
name|iExamType
operator|=
literal|null
expr_stmt|;
for|for
control|(
name|ExamTypeInterface
name|type
range|:
name|iProperties
operator|.
name|getExamTypes
argument_list|()
control|)
if|if
condition|(
name|type
operator|.
name|getReference
argument_list|()
operator|.
name|equals
argument_list|(
name|code
argument_list|)
condition|)
block|{
name|iHeader
operator|.
name|setHeaderTitle
argument_list|(
name|MESSAGES
operator|.
name|examinationRooms
argument_list|(
name|type
operator|.
name|getLabel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iExamType
operator|=
name|type
expr_stmt|;
return|return
literal|true
return|;
block|}
for|for
control|(
name|DepartmentInterface
name|department
range|:
name|iProperties
operator|.
name|getDepartments
argument_list|()
control|)
if|if
condition|(
name|department
operator|.
name|getDeptCode
argument_list|()
operator|.
name|equals
argument_list|(
name|code
argument_list|)
condition|)
block|{
name|iHeader
operator|.
name|setHeaderTitle
argument_list|(
name|department
operator|.
name|getExtAbbreviationWhenExist
argument_list|()
operator|+
literal|" - "
operator|+
name|department
operator|.
name|getExtLabelWhenExist
argument_list|()
argument_list|)
expr_stmt|;
name|iDepartment
operator|=
name|department
expr_stmt|;
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|canEdit
parameter_list|()
block|{
if|if
condition|(
name|iDepartment
operator|!=
literal|null
condition|)
block|{
return|return
name|iDepartment
operator|.
name|isCanEditRoomSharing
argument_list|()
return|;
block|}
if|else if
condition|(
name|iExamType
operator|!=
literal|null
condition|)
block|{
return|return
name|iProperties
operator|.
name|isCanEditRoomExams
argument_list|()
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|setDepartmentOrExamType
parameter_list|(
name|RoomFilterBox
name|filter
parameter_list|)
block|{
name|Chip
name|dept
init|=
name|filter
operator|.
name|getChip
argument_list|(
literal|"department"
argument_list|)
decl_stmt|;
if|if
condition|(
name|dept
operator|!=
literal|null
condition|)
block|{
name|iRooms
operator|.
name|setDepartment
argument_list|(
name|dept
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|setDepartmentOrExamType
argument_list|(
name|dept
operator|.
name|getValue
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|void
name|setRooms
parameter_list|(
name|List
argument_list|<
name|Entity
argument_list|>
name|rooms
parameter_list|,
name|Integer
name|sortBy
parameter_list|)
block|{
name|iRooms
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
name|clearErrorMessage
init|=
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
decl_stmt|;
for|for
control|(
name|Entity
name|e
range|:
name|rooms
control|)
block|{
name|RoomDetailInterface
name|room
init|=
operator|(
name|RoomDetailInterface
operator|)
name|e
decl_stmt|;
name|int
name|row
init|=
name|iRooms
operator|.
name|addRoom
argument_list|(
name|room
argument_list|)
decl_stmt|;
name|boolean
name|selected
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|iDepartment
operator|!=
literal|null
condition|)
block|{
name|selected
operator|=
operator|(
name|room
operator|.
name|getDepartment
argument_list|(
name|iDepartment
operator|.
name|getId
argument_list|()
argument_list|)
operator|!=
literal|null
operator|)
expr_stmt|;
block|}
if|else if
condition|(
name|iExamType
operator|!=
literal|null
condition|)
block|{
name|selected
operator|=
operator|(
name|room
operator|.
name|getExamType
argument_list|(
name|iExamType
operator|.
name|getId
argument_list|()
argument_list|)
operator|!=
literal|null
operator|)
expr_stmt|;
block|}
name|iRooms
operator|.
name|selectRoom
argument_list|(
name|row
argument_list|,
name|selected
argument_list|)
expr_stmt|;
name|iRooms
operator|.
name|setSelected
argument_list|(
name|row
argument_list|,
name|selected
argument_list|)
expr_stmt|;
name|iRooms
operator|.
name|getRoomSelection
argument_list|(
name|row
argument_list|)
operator|.
name|addValueChangeHandler
argument_list|(
name|clearErrorMessage
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|sortBy
operator|!=
literal|null
condition|)
name|iRooms
operator|.
name|setSortBy
argument_list|(
name|sortBy
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

