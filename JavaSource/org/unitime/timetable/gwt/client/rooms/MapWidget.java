begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|rooms
package|;
end_package

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|MapPropertiesInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|MapPropertiesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|AbsolutePanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasEnabled
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|RootPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextBox
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|MapWidget
extends|extends
name|AbsolutePanel
implements|implements
name|HasEnabled
block|{
specifier|protected
specifier|static
specifier|final
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
name|TextBox
name|iX
decl_stmt|,
name|iY
decl_stmt|;
specifier|private
name|boolean
name|iInitialized
init|=
literal|false
decl_stmt|;
specifier|protected
name|AbsolutePanel
name|iMapControl
decl_stmt|;
specifier|protected
name|MapWidget
parameter_list|(
name|TextBox
name|x
parameter_list|,
name|TextBox
name|y
parameter_list|)
block|{
name|iX
operator|=
name|x
expr_stmt|;
name|iX
operator|.
name|getElement
argument_list|()
operator|.
name|setId
argument_list|(
literal|"coordX"
argument_list|)
expr_stmt|;
name|iY
operator|=
name|y
expr_stmt|;
name|iY
operator|.
name|getElement
argument_list|()
operator|.
name|setId
argument_list|(
literal|"coordY"
argument_list|)
expr_stmt|;
name|iX
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|setMarker
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iY
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|setMarker
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|static
name|MapWidget
name|createMap
parameter_list|(
name|TextBox
name|x
parameter_list|,
name|TextBox
name|y
parameter_list|,
name|MapPropertiesInterface
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|.
name|isGoogleMap
argument_list|()
condition|)
return|return
operator|new
name|GoogleMap
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|result
operator|.
name|getGoogleMapApiKey
argument_list|()
argument_list|)
return|;
if|if
condition|(
name|result
operator|.
name|isLeafletMap
argument_list|()
condition|)
return|return
operator|new
name|LeafletMap
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|result
operator|.
name|getLeafletMapTiles
argument_list|()
argument_list|,
name|result
operator|.
name|getLeafletMapAttribution
argument_list|()
argument_list|)
return|;
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isEnabled
parameter_list|()
block|{
return|return
name|iMapControl
operator|!=
literal|null
operator|&&
name|iMapControl
operator|.
name|isVisible
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setEnabled
parameter_list|(
name|boolean
name|enabled
parameter_list|)
block|{
if|if
condition|(
name|iMapControl
operator|!=
literal|null
condition|)
name|iMapControl
operator|.
name|setVisible
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onShow
parameter_list|()
block|{
if|if
condition|(
operator|!
name|isVisible
argument_list|()
condition|)
return|return;
if|if
condition|(
operator|!
name|iInitialized
condition|)
block|{
name|iInitialized
operator|=
literal|true
expr_stmt|;
name|setup
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|iMapControl
operator|!=
literal|null
condition|)
block|{
name|setMarker
argument_list|()
expr_stmt|;
block|}
block|}
specifier|protected
specifier|abstract
name|void
name|setup
parameter_list|()
function_decl|;
specifier|public
specifier|abstract
name|void
name|setMarker
parameter_list|()
function_decl|;
specifier|public
specifier|static
name|void
name|insert
parameter_list|(
specifier|final
name|RootPanel
name|panel
parameter_list|)
block|{
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|MapPropertiesRequest
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|MapPropertiesInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|MapPropertiesInterface
name|result
parameter_list|)
block|{
name|MapWidget
name|map
init|=
name|MapWidget
operator|.
name|createMap
argument_list|(
name|TextBox
operator|.
name|wrap
argument_list|(
name|Document
operator|.
name|get
argument_list|()
operator|.
name|getElementById
argument_list|(
literal|"coordX"
argument_list|)
argument_list|)
argument_list|,
name|TextBox
operator|.
name|wrap
argument_list|(
name|Document
operator|.
name|get
argument_list|()
operator|.
name|getElementById
argument_list|(
literal|"coordY"
argument_list|)
argument_list|)
argument_list|,
name|result
argument_list|)
decl_stmt|;
if|if
condition|(
name|map
operator|!=
literal|null
condition|)
block|{
name|panel
operator|.
name|add
argument_list|(
name|map
argument_list|)
expr_stmt|;
name|panel
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|map
operator|.
name|onShow
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

