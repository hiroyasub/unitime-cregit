begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|rooms
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimePageLabel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|rooms
operator|.
name|RoomDetail
operator|.
name|Check
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|ImageLink
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|NumberBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|P
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeFileUpload
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTableHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EventServiceProviderInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|AcademicSessionInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|AttachmentTypeInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|BuildingInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|DepartmentInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|ExamTypeInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|FeatureInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|FeatureTypeInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|FutureOperation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|FutureRoomInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|GroupInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|PeriodPreferenceModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomDetailInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomPictureInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomPictureRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomPictureResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomPropertiesInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomSharingModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomSharingOption
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomTypeInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomUpdateRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomsPageMode
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseOutEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseOutHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseOverEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseOverHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Hidden
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextArea
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FormPanel
operator|.
name|SubmitCompleteEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FormPanel
operator|.
name|SubmitCompleteHandler
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|RoomEdit
extends|extends
name|Composite
block|{
specifier|private
specifier|static
specifier|final
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|GwtConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|GwtResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|SimpleForm
name|iForm
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iHeader
decl_stmt|,
name|iFooter
decl_stmt|;
specifier|private
name|RoomPropertiesInterface
name|iProperties
init|=
literal|null
decl_stmt|;
specifier|private
name|RoomDetailInterface
name|iRoom
init|=
literal|null
decl_stmt|;
specifier|private
name|DepartmentInterface
name|iLastControllingDept
init|=
literal|null
decl_stmt|,
name|iLastEventDept
init|=
literal|null
decl_stmt|;
specifier|private
name|Long
name|iLastSelectedDepartmentId
init|=
literal|null
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|iType
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|iBuilding
decl_stmt|;
specifier|private
name|int
name|iBuildingRow
decl_stmt|;
specifier|private
name|Label
name|iNameLabel
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
name|iName
decl_stmt|;
specifier|private
name|TextBox
name|iDisplayName
decl_stmt|,
name|iExternalId
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|NumberBox
argument_list|>
name|iCapacity
decl_stmt|,
name|iExamCapacity
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|iControllingDepartment
decl_stmt|;
specifier|private
name|NumberBox
name|iX
decl_stmt|,
name|iY
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|P
argument_list|>
name|iCoordinates
decl_stmt|;
specifier|private
name|P
name|iCoordinatesFormat
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|P
argument_list|>
name|iAreaPanel
decl_stmt|;
specifier|private
name|NumberBox
name|iArea
decl_stmt|;
specifier|private
name|P
name|iAreaFormat
decl_stmt|;
specifier|private
name|CheckBox
name|iDistanceCheck
decl_stmt|,
name|iRoomCheck
decl_stmt|;
specifier|private
name|MapWidget
name|iMap
decl_stmt|;
specifier|private
name|ListBox
name|iEventDepartment
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|iEventStatus
decl_stmt|;
specifier|private
name|P
name|iBreakTimePanel
decl_stmt|;
specifier|private
name|NumberBox
name|iBreakTime
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|TextArea
argument_list|>
name|iNote
decl_stmt|;
specifier|private
name|P
name|iExaminationRoomsPanel
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Long
argument_list|,
name|CheckBox
argument_list|>
name|iExaminationRooms
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|CheckBox
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Long
argument_list|,
name|CheckBox
argument_list|>
name|iGroups
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|CheckBox
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Long
argument_list|,
name|CheckBox
argument_list|>
name|iFeatures
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|CheckBox
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|P
name|iGlobalGroupsPanel
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Long
argument_list|,
name|P
argument_list|>
name|iGroupPanel
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|P
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iRoomSharingHeader
decl_stmt|;
specifier|private
name|RoomSharingWidget
name|iRoomSharing
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iPeriodPreferencesHeader
decl_stmt|;
specifier|private
name|int
name|iPeriodPreferencesHeaderRow
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Long
argument_list|,
name|PeriodPreferencesWidget
argument_list|>
name|iPeriodPreferences
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|PeriodPreferencesWidget
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Long
argument_list|,
name|Integer
argument_list|>
name|iPeriodPreferencesRow
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iEventAvailabilityHeader
decl_stmt|;
specifier|private
name|RoomSharingWidget
name|iEventAvailability
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iPicturesHeader
decl_stmt|;
specifier|private
name|UniTimeFileUpload
name|iFileUpload
decl_stmt|;
specifier|private
name|UniTimeTable
argument_list|<
name|RoomPictureInterface
argument_list|>
name|iPictures
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iApplyToHeader
decl_stmt|;
specifier|private
name|UniTimeTable
argument_list|<
name|FutureRoomInterface
argument_list|>
name|iApplyTo
decl_stmt|;
specifier|private
name|RoomsPageMode
name|iMode
init|=
literal|null
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Long
argument_list|,
name|CheckBox
argument_list|>
name|iServices
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|CheckBox
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|P
name|iServicesPanel
decl_stmt|;
specifier|private
name|int
name|iServicesRow
decl_stmt|;
specifier|public
name|RoomEdit
parameter_list|(
name|RoomsPageMode
name|mode
parameter_list|)
block|{
name|iMode
operator|=
name|mode
expr_stmt|;
name|iHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|()
expr_stmt|;
name|ClickHandler
name|clickCreateOrUpdate
init|=
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|validate
argument_list|()
condition|)
block|{
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedValidationCheckForm
argument_list|()
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedValidationCheckForm
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|RoomUpdateRpcRequest
name|request
init|=
name|RoomUpdateRpcRequest
operator|.
name|createSaveOrUpdateRequest
argument_list|(
name|getRoom
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|future
init|=
name|generateAlsoUpdateMessage
argument_list|(
literal|false
argument_list|)
decl_stmt|;
if|if
condition|(
name|future
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|Window
operator|.
name|confirm
argument_list|(
name|getRoom
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|?
name|MESSAGES
operator|.
name|confirmCreateRoomInFutureSessions
argument_list|(
name|future
argument_list|)
else|:
name|MESSAGES
operator|.
name|confirmUpdateRoomInFutureSessions
argument_list|(
name|future
argument_list|)
argument_list|)
condition|)
name|fillFutureFlags
argument_list|(
name|request
argument_list|,
literal|false
argument_list|)
expr_stmt|;
else|else
return|return;
block|}
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|getRoom
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|?
name|MESSAGES
operator|.
name|waitSavingRoom
argument_list|()
else|:
name|MESSAGES
operator|.
name|waitUpdatingRoom
argument_list|()
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|request
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|RoomDetailInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|String
name|message
init|=
literal|null
decl_stmt|;
name|RoomDetailInterface
name|result
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|caught
operator|instanceof
name|RoomException
condition|)
block|{
name|message
operator|=
name|caught
operator|.
name|getMessage
argument_list|()
expr_stmt|;
name|result
operator|=
operator|(
operator|(
name|RoomException
operator|)
name|caught
operator|)
operator|.
name|getRoom
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|getRoom
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
block|{
name|message
operator|=
name|MESSAGES
operator|.
name|errorFailedToSaveRoom
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|message
operator|=
name|MESSAGES
operator|.
name|errorFailedToUpdateRoom
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|message
argument_list|)
expr_stmt|;
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
name|hide
argument_list|(
name|result
argument_list|,
literal|true
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|RoomDetailInterface
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|hide
argument_list|(
name|result
argument_list|,
literal|true
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"create"
argument_list|,
name|MESSAGES
operator|.
name|buttonCreateRoom
argument_list|()
argument_list|,
literal|100
argument_list|,
name|clickCreateOrUpdate
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"update"
argument_list|,
name|MESSAGES
operator|.
name|buttonUpdateRoom
argument_list|()
argument_list|,
literal|100
argument_list|,
name|clickCreateOrUpdate
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"delete"
argument_list|,
name|MESSAGES
operator|.
name|buttonDeleteRoom
argument_list|()
argument_list|,
literal|100
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|RoomUpdateRpcRequest
name|request
init|=
name|RoomUpdateRpcRequest
operator|.
name|createDeleteRequest
argument_list|(
name|getRoom
argument_list|()
operator|.
name|getSessionId
argument_list|()
argument_list|,
name|getRoom
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|future
init|=
name|generateAlsoUpdateMessage
argument_list|(
literal|true
argument_list|)
decl_stmt|;
if|if
condition|(
name|Window
operator|.
name|confirm
argument_list|(
name|future
operator|==
literal|null
condition|?
name|MESSAGES
operator|.
name|confirmDeleteRoom
argument_list|()
else|:
name|MESSAGES
operator|.
name|confirmDeleteRoomInFutureSessions
argument_list|(
name|future
argument_list|)
argument_list|)
condition|)
block|{
if|if
condition|(
name|future
operator|!=
literal|null
condition|)
name|fillFutureFlags
argument_list|(
name|request
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
return|return;
block|}
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitDeletingRoom
argument_list|()
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|request
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|RoomDetailInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|String
name|message
init|=
literal|null
decl_stmt|;
name|RoomDetailInterface
name|result
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|caught
operator|instanceof
name|RoomException
condition|)
block|{
name|message
operator|=
name|caught
operator|.
name|getMessage
argument_list|()
expr_stmt|;
name|result
operator|=
operator|(
operator|(
name|RoomException
operator|)
name|caught
operator|)
operator|.
name|getRoom
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|message
operator|=
name|MESSAGES
operator|.
name|errorFailedToDeleteRoom
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|message
argument_list|)
expr_stmt|;
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
name|hide
argument_list|(
name|result
argument_list|,
literal|true
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|RoomDetailInterface
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|hide
argument_list|(
literal|null
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"back"
argument_list|,
name|MESSAGES
operator|.
name|buttonBack
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|hide
argument_list|(
literal|null
argument_list|,
literal|true
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|=
operator|new
name|SimpleForm
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addStyleName
argument_list|(
literal|"unitime-RoomEdit"
argument_list|)
expr_stmt|;
name|iType
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|typeChanged
argument_list|()
expr_stmt|;
name|iType
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iBuilding
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iBuilding
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iBuilding
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|buildingChanged
argument_list|()
expr_stmt|;
name|iBuilding
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iName
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
argument_list|(
operator|new
name|TextBox
argument_list|()
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"300px"
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iName
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iNameLabel
operator|=
operator|new
name|Label
argument_list|(
name|MESSAGES
operator|.
name|propRoomName
argument_list|()
argument_list|)
expr_stmt|;
name|iDisplayName
operator|=
operator|new
name|TextBox
argument_list|()
expr_stmt|;
name|iDisplayName
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iDisplayName
operator|.
name|setMaxLength
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|iDisplayName
operator|.
name|setWidth
argument_list|(
literal|"480px"
argument_list|)
expr_stmt|;
name|iExternalId
operator|=
operator|new
name|TextBox
argument_list|()
expr_stmt|;
name|iExternalId
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iExternalId
operator|.
name|setMaxLength
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|iExternalId
operator|.
name|setWidth
argument_list|(
literal|"300px"
argument_list|)
expr_stmt|;
name|iCapacity
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|NumberBox
argument_list|>
argument_list|(
operator|new
name|NumberBox
argument_list|()
argument_list|)
expr_stmt|;
name|iCapacity
operator|.
name|getWidget
argument_list|()
operator|.
name|setDecimal
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iCapacity
operator|.
name|getWidget
argument_list|()
operator|.
name|setNegative
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iCapacity
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|iCapacity
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"80px"
argument_list|)
expr_stmt|;
name|iCapacity
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iCapacity
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iControllingDepartment
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iX
operator|=
operator|new
name|NumberBox
argument_list|()
expr_stmt|;
name|iX
operator|.
name|setMaxLength
argument_list|(
literal|12
argument_list|)
expr_stmt|;
name|iX
operator|.
name|setWidth
argument_list|(
literal|"80px"
argument_list|)
expr_stmt|;
name|iX
operator|.
name|setDecimal
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iX
operator|.
name|setNegative
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iX
operator|.
name|addStyleName
argument_list|(
literal|"number"
argument_list|)
expr_stmt|;
name|iY
operator|=
operator|new
name|NumberBox
argument_list|()
expr_stmt|;
name|iY
operator|.
name|setMaxLength
argument_list|(
literal|12
argument_list|)
expr_stmt|;
name|iY
operator|.
name|setWidth
argument_list|(
literal|"80px"
argument_list|)
expr_stmt|;
name|iY
operator|.
name|setDecimal
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iY
operator|.
name|setNegative
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iY
operator|.
name|addStyleName
argument_list|(
literal|"number"
argument_list|)
expr_stmt|;
name|iX
operator|.
name|getElement
argument_list|()
operator|.
name|setId
argument_list|(
literal|"coordX"
argument_list|)
expr_stmt|;
name|iY
operator|.
name|getElement
argument_list|()
operator|.
name|setId
argument_list|(
literal|"coordY"
argument_list|)
expr_stmt|;
name|iCoordinates
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|P
argument_list|>
argument_list|(
operator|new
name|P
argument_list|(
literal|"coordinates"
argument_list|)
argument_list|)
expr_stmt|;
name|iCoordinates
operator|.
name|getWidget
argument_list|()
operator|.
name|add
argument_list|(
name|iX
argument_list|)
expr_stmt|;
name|P
name|comma
init|=
operator|new
name|P
argument_list|(
literal|"comma"
argument_list|)
decl_stmt|;
name|comma
operator|.
name|setText
argument_list|(
literal|", "
argument_list|)
expr_stmt|;
name|iCoordinates
operator|.
name|getWidget
argument_list|()
operator|.
name|add
argument_list|(
name|comma
argument_list|)
expr_stmt|;
name|iCoordinates
operator|.
name|getWidget
argument_list|()
operator|.
name|add
argument_list|(
name|iY
argument_list|)
expr_stmt|;
name|iCoordinatesFormat
operator|=
operator|new
name|P
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|iCoordinates
operator|.
name|getWidget
argument_list|()
operator|.
name|add
argument_list|(
name|iCoordinatesFormat
argument_list|)
expr_stmt|;
name|iArea
operator|=
operator|new
name|NumberBox
argument_list|()
expr_stmt|;
name|iArea
operator|.
name|setDecimal
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iArea
operator|.
name|setNegative
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iArea
operator|.
name|addStyleName
argument_list|(
literal|"number"
argument_list|)
expr_stmt|;
name|iArea
operator|.
name|setWidth
argument_list|(
literal|"80px"
argument_list|)
expr_stmt|;
name|iArea
operator|.
name|setMaxLength
argument_list|(
literal|12
argument_list|)
expr_stmt|;
name|iAreaPanel
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|P
argument_list|>
argument_list|(
operator|new
name|P
argument_list|(
literal|"area"
argument_list|)
argument_list|)
expr_stmt|;
name|iAreaPanel
operator|.
name|getWidget
argument_list|()
operator|.
name|add
argument_list|(
name|iArea
argument_list|)
expr_stmt|;
name|iAreaFormat
operator|=
operator|new
name|P
argument_list|(
literal|"format"
argument_list|)
expr_stmt|;
name|iAreaFormat
operator|.
name|setText
argument_list|(
name|iProperties
operator|!=
literal|null
operator|&&
name|iProperties
operator|.
name|isRoomAreaInMetricUnits
argument_list|()
condition|?
name|CONSTANTS
operator|.
name|roomAreaMetricUnitsLong
argument_list|()
else|:
name|CONSTANTS
operator|.
name|roomAreaUnitsLong
argument_list|()
argument_list|)
expr_stmt|;
name|iAreaPanel
operator|.
name|getWidget
argument_list|()
operator|.
name|add
argument_list|(
name|iAreaFormat
argument_list|)
expr_stmt|;
name|iDistanceCheck
operator|=
operator|new
name|CheckBox
argument_list|()
expr_stmt|;
name|iDistanceCheck
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
name|distanceCheckChanged
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iRoomCheck
operator|=
operator|new
name|CheckBox
argument_list|()
expr_stmt|;
name|iRoomCheck
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
name|roomCheckChanged
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iExaminationRoomsPanel
operator|=
operator|new
name|P
argument_list|(
literal|"exams"
argument_list|)
expr_stmt|;
name|iExaminationRoomsPanel
operator|.
name|setWidth
argument_list|(
literal|"100%"
argument_list|)
expr_stmt|;
name|iExamCapacity
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|NumberBox
argument_list|>
argument_list|(
operator|new
name|NumberBox
argument_list|()
argument_list|)
expr_stmt|;
name|iExamCapacity
operator|.
name|getWidget
argument_list|()
operator|.
name|setDecimal
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iExamCapacity
operator|.
name|getWidget
argument_list|()
operator|.
name|setNegative
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iExamCapacity
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|iExamCapacity
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"80px"
argument_list|)
expr_stmt|;
name|iExamCapacity
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iExamCapacity
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iEventDepartment
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
name|iEventDepartment
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iEventDepartment
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iEventAvailabilityHeader
operator|.
name|setVisible
argument_list|(
name|isEventRoom
argument_list|()
argument_list|)
expr_stmt|;
name|iEventAvailability
operator|.
name|setVisible
argument_list|(
name|isEventRoom
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iProperties
operator|!=
literal|null
operator|&&
name|iProperties
operator|.
name|hasEventServiceProviders
argument_list|()
condition|)
block|{
name|Long
name|deptId
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iEventDepartment
operator|.
name|getValue
argument_list|(
name|iEventDepartment
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|EventServiceProviderInterface
name|service
range|:
name|iProperties
operator|.
name|getEventServiceProviders
argument_list|()
control|)
block|{
if|if
condition|(
name|service
operator|.
name|getDepartmentId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|iServices
operator|.
name|get
argument_list|(
name|service
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|setVisible
argument_list|(
name|service
operator|.
name|getDepartmentId
argument_list|()
operator|.
name|equals
argument_list|(
name|deptId
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iServicesRow
argument_list|,
name|deptId
operator|>=
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iEventStatus
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iEventStatus
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iEventStatus
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemDefault
argument_list|()
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|CONSTANTS
operator|.
name|eventStatusName
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
name|iEventStatus
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|CONSTANTS
operator|.
name|eventStatusName
argument_list|()
index|[
name|i
index|]
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|iNote
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextArea
argument_list|>
argument_list|(
operator|new
name|TextArea
argument_list|()
argument_list|)
expr_stmt|;
name|iNote
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|iNote
operator|.
name|getWidget
argument_list|()
operator|.
name|setVisibleLines
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|iNote
operator|.
name|getWidget
argument_list|()
operator|.
name|setCharacterWidth
argument_list|(
literal|70
argument_list|)
expr_stmt|;
name|iBreakTime
operator|=
operator|new
name|NumberBox
argument_list|()
expr_stmt|;
name|iBreakTime
operator|.
name|setDecimal
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iBreakTime
operator|.
name|setNegative
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iBreakTime
operator|.
name|addStyleName
argument_list|(
literal|"number"
argument_list|)
expr_stmt|;
name|iBreakTime
operator|.
name|setWidth
argument_list|(
literal|"80px"
argument_list|)
expr_stmt|;
name|iBreakTime
operator|.
name|setMaxLength
argument_list|(
literal|12
argument_list|)
expr_stmt|;
name|iBreakTimePanel
operator|=
operator|new
name|P
argument_list|(
literal|"breaktime"
argument_list|)
expr_stmt|;
name|iBreakTimePanel
operator|.
name|add
argument_list|(
name|iBreakTime
argument_list|)
expr_stmt|;
name|P
name|f
init|=
operator|new
name|P
argument_list|(
literal|"note"
argument_list|)
decl_stmt|;
name|f
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|useDefaultBreakTimeWhenEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|iBreakTimePanel
operator|.
name|add
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|iServicesPanel
operator|=
operator|new
name|P
argument_list|(
literal|"services"
argument_list|)
expr_stmt|;
name|iServicesPanel
operator|.
name|setWidth
argument_list|(
literal|"100%"
argument_list|)
expr_stmt|;
name|iRoomSharingHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|headerRoomSharing
argument_list|()
argument_list|)
expr_stmt|;
name|iRoomSharing
operator|=
operator|new
name|RoomSharingWidget
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iRoomSharing
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|RoomInterface
operator|.
name|RoomSharingModel
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|RoomSharingModel
argument_list|>
name|event
parameter_list|)
block|{
name|iRoomSharingHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iControllingDepartment
operator|.
name|clearHint
argument_list|()
expr_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|getDepartment
argument_list|(
name|iLastSelectedDepartmentId
argument_list|)
operator|==
literal|null
condition|)
name|iRoomSharing
operator|.
name|removeOption
argument_list|(
name|iLastSelectedDepartmentId
argument_list|)
expr_stmt|;
name|iLastSelectedDepartmentId
operator|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|iLastSelectedDepartmentId
operator|>
literal|0
condition|)
name|iRoomSharing
operator|.
name|addOption
argument_list|(
name|iLastSelectedDepartmentId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iPeriodPreferencesHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|headerExaminationPeriodPreferences
argument_list|()
argument_list|)
expr_stmt|;
name|iEventAvailabilityHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|headerEventAvailability
argument_list|()
argument_list|)
expr_stmt|;
name|iEventAvailability
operator|=
operator|new
name|RoomSharingWidget
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iPicturesHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|headerRoomPictures
argument_list|()
argument_list|)
expr_stmt|;
name|iPictures
operator|=
operator|new
name|UniTimeTable
argument_list|<
name|RoomPictureInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iPictures
operator|.
name|setStyleName
argument_list|(
literal|"unitime-RoomPictures"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|UniTimeTableHeader
argument_list|>
name|header
init|=
operator|new
name|ArrayList
argument_list|<
name|UniTimeTableHeader
argument_list|>
argument_list|()
decl_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colPicture
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colContentType
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colPictureType
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|"&nbsp;"
argument_list|)
argument_list|)
expr_stmt|;
name|iPictures
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|header
argument_list|)
expr_stmt|;
name|iFileUpload
operator|=
operator|new
name|UniTimeFileUpload
argument_list|()
expr_stmt|;
name|iFileUpload
operator|.
name|addSubmitCompleteHandler
argument_list|(
operator|new
name|SubmitCompleteHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSubmitComplete
parameter_list|(
name|SubmitCompleteEvent
name|event
parameter_list|)
block|{
name|RPC
operator|.
name|execute
argument_list|(
name|RoomPictureRequest
operator|.
name|upload
argument_list|(
name|iRoom
operator|.
name|getSessionId
argument_list|()
argument_list|,
name|iRoom
operator|.
name|getUniqueId
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|RoomPictureResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedToUploadRoomPicture
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|RoomPictureResponse
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|.
name|hasPictures
argument_list|()
condition|)
block|{
for|for
control|(
specifier|final
name|RoomPictureInterface
name|picture
range|:
name|result
operator|.
name|getPictures
argument_list|()
control|)
block|{
for|for
control|(
name|int
name|row
init|=
literal|1
init|;
name|row
operator|<
name|iPictures
operator|.
name|getRowCount
argument_list|()
condition|;
name|row
operator|++
control|)
if|if
condition|(
name|picture
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|iPictures
operator|.
name|getData
argument_list|(
name|row
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|iPictures
operator|.
name|removeRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
break|break;
block|}
name|iPictures
operator|.
name|addRow
argument_list|(
name|picture
argument_list|,
name|line
argument_list|(
name|picture
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|iFileUpload
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iApplyToHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|headerRoomApplyToFutureRooms
argument_list|()
argument_list|)
expr_stmt|;
name|iApplyToHeader
operator|.
name|setTitleStyleName
argument_list|(
literal|"update-options"
argument_list|)
expr_stmt|;
name|iApplyTo
operator|=
operator|new
name|UniTimeTable
argument_list|<
name|FutureRoomInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iApplyTo
operator|.
name|setStyleName
argument_list|(
literal|"unitime-RoomApplyTo"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|UniTimeTableHeader
argument_list|>
name|ah
init|=
operator|new
name|ArrayList
argument_list|<
name|UniTimeTableHeader
argument_list|>
argument_list|()
decl_stmt|;
name|ah
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|"&nbsp;"
argument_list|)
argument_list|)
expr_stmt|;
name|ah
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ah
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colExternalId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ah
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colType
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ah
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colCapacity
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ah
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colSession
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|FutureOperation
name|op
range|:
name|FutureOperation
operator|.
name|values
argument_list|()
control|)
block|{
name|ah
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|getFutureOperationLabel
argument_list|(
name|op
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|iApplyTo
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|ah
argument_list|)
expr_stmt|;
name|iFooter
operator|=
name|iHeader
operator|.
name|clonePanel
argument_list|()
expr_stmt|;
name|initWidget
argument_list|(
name|iForm
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|boolean
name|isEventRoom
parameter_list|()
block|{
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeEventProperties
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeEventProperties
argument_list|()
condition|)
block|{
return|return
operator|!
literal|"-1"
operator|.
name|equals
argument_list|(
name|iEventDepartment
operator|.
name|getValue
argument_list|(
name|iEventDepartment
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|iRoom
operator|.
name|getEventDepartment
argument_list|()
operator|!=
literal|null
return|;
block|}
block|}
specifier|public
name|void
name|setProperties
parameter_list|(
name|RoomPropertiesInterface
name|properties
parameter_list|)
block|{
name|iProperties
operator|=
name|properties
expr_stmt|;
name|iForm
operator|.
name|setColSpan
argument_list|(
name|iProperties
operator|.
name|isGoogleMap
argument_list|()
operator|||
name|iProperties
operator|.
name|isLeafletMap
argument_list|()
condition|?
literal|3
else|:
literal|2
argument_list|)
expr_stmt|;
name|iBuilding
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iBuilding
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemSelect
argument_list|()
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
for|for
control|(
name|BuildingInterface
name|building
range|:
name|iProperties
operator|.
name|getBuildings
argument_list|()
control|)
name|iBuilding
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|building
operator|.
name|getAbbreviation
argument_list|()
operator|+
literal|" - "
operator|+
name|building
operator|.
name|getName
argument_list|()
argument_list|,
name|building
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|iCoordinatesFormat
operator|.
name|setText
argument_list|(
name|iProperties
operator|.
name|getEllipsoid
argument_list|()
argument_list|)
expr_stmt|;
name|iExaminationRooms
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iExaminationRoomsPanel
operator|.
name|clear
argument_list|()
expr_stmt|;
for|for
control|(
specifier|final
name|ExamTypeInterface
name|type
range|:
name|iProperties
operator|.
name|getExamTypes
argument_list|()
control|)
block|{
specifier|final
name|CheckBox
name|ch
init|=
operator|new
name|CheckBox
argument_list|(
name|type
operator|.
name|getLabel
argument_list|()
argument_list|)
decl_stmt|;
name|ch
operator|.
name|addStyleName
argument_list|(
literal|"exam"
argument_list|)
expr_stmt|;
name|iExaminationRooms
operator|.
name|put
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|,
name|ch
argument_list|)
expr_stmt|;
name|iExaminationRoomsPanel
operator|.
name|add
argument_list|(
name|ch
argument_list|)
expr_stmt|;
name|ch
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|ch
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
name|Integer
name|row
init|=
name|iPeriodPreferencesRow
operator|.
name|get
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|row
operator|!=
literal|null
condition|)
block|{
name|PeriodPreferencesWidget
name|pref
init|=
name|iPeriodPreferences
operator|.
name|get
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|row
argument_list|,
name|event
operator|.
name|getValue
argument_list|()
operator|&&
name|pref
operator|!=
literal|null
operator|&&
name|pref
operator|.
name|getModel
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|pref
operator|.
name|getModel
argument_list|()
operator|.
name|getPeriods
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|boolean
name|prefVisible
init|=
literal|false
decl_stmt|;
for|for
control|(
name|ExamTypeInterface
name|t
range|:
name|iProperties
operator|.
name|getExamTypes
argument_list|()
control|)
block|{
if|if
condition|(
name|iExaminationRooms
operator|.
name|get
argument_list|(
name|t
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|PeriodPreferencesWidget
name|pref
init|=
name|iPeriodPreferences
operator|.
name|get
argument_list|(
name|t
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|pref
operator|!=
literal|null
operator|&&
name|pref
operator|.
name|getModel
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|pref
operator|.
name|getModel
argument_list|()
operator|.
name|getPeriods
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|prefVisible
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
block|}
if|if
condition|(
name|iPeriodPreferencesHeaderRow
operator|>
literal|0
condition|)
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iPeriodPreferencesHeaderRow
argument_list|,
name|prefVisible
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|event
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|iExamCapacity
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|iServices
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iServicesPanel
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|iProperties
operator|.
name|hasEventServiceProviders
argument_list|()
condition|)
block|{
for|for
control|(
name|EventServiceProviderInterface
name|service
range|:
name|iProperties
operator|.
name|getEventServiceProviders
argument_list|()
control|)
block|{
specifier|final
name|CheckBox
name|ch
init|=
operator|new
name|CheckBox
argument_list|(
name|service
operator|.
name|getLabel
argument_list|()
operator|+
operator|(
name|service
operator|.
name|getDepartmentId
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|" ("
operator|+
name|MESSAGES
operator|.
name|serviceProviderDepartmental
argument_list|()
operator|+
literal|")"
operator|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|service
operator|.
name|hasMessage
argument_list|()
condition|)
name|ch
operator|.
name|setTitle
argument_list|(
name|service
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|ch
operator|.
name|addStyleName
argument_list|(
literal|"service"
argument_list|)
expr_stmt|;
name|iServices
operator|.
name|put
argument_list|(
name|service
operator|.
name|getId
argument_list|()
argument_list|,
name|ch
argument_list|)
expr_stmt|;
name|iServicesPanel
operator|.
name|add
argument_list|(
name|ch
argument_list|)
expr_stmt|;
name|ch
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|service
operator|.
name|getDepartmentId
argument_list|()
operator|!=
literal|null
condition|)
name|ch
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iMap
operator|==
literal|null
condition|)
name|iMap
operator|=
name|MapWidget
operator|.
name|createMap
argument_list|(
name|iX
argument_list|,
name|iY
argument_list|,
name|iProperties
argument_list|)
expr_stmt|;
name|iGroups
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iGroupPanel
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iGlobalGroupsPanel
operator|=
literal|null
expr_stmt|;
if|if
condition|(
operator|!
name|iProperties
operator|.
name|getGroups
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|P
name|groups
init|=
operator|new
name|P
argument_list|(
literal|"groups"
argument_list|)
decl_stmt|;
for|for
control|(
name|GroupInterface
name|group
range|:
name|iProperties
operator|.
name|getGroups
argument_list|()
control|)
block|{
name|CheckBox
name|ch
init|=
operator|new
name|CheckBox
argument_list|(
name|group
operator|.
name|getLabel
argument_list|()
argument_list|)
decl_stmt|;
name|ch
operator|.
name|addStyleName
argument_list|(
literal|"group"
argument_list|)
expr_stmt|;
name|iGroups
operator|.
name|put
argument_list|(
name|group
operator|.
name|getId
argument_list|()
argument_list|,
name|ch
argument_list|)
expr_stmt|;
if|if
condition|(
name|group
operator|.
name|getDepartment
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|P
name|d
init|=
name|iGroupPanel
operator|.
name|get
argument_list|(
name|group
operator|.
name|getDepartment
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|d
operator|==
literal|null
condition|)
block|{
name|d
operator|=
operator|new
name|P
argument_list|(
literal|"groups"
argument_list|)
expr_stmt|;
name|d
operator|.
name|setWidth
argument_list|(
literal|"100%"
argument_list|)
expr_stmt|;
name|iGroupPanel
operator|.
name|put
argument_list|(
name|group
operator|.
name|getDepartment
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|d
argument_list|)
expr_stmt|;
block|}
name|d
operator|.
name|add
argument_list|(
name|ch
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|groups
operator|.
name|add
argument_list|(
name|ch
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|groups
operator|.
name|getWidgetCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|iGlobalGroupsPanel
operator|=
name|groups
expr_stmt|;
block|}
block|}
name|iFeatures
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|iProperties
operator|.
name|getFeatures
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
for|for
control|(
name|FeatureInterface
name|feature
range|:
name|iProperties
operator|.
name|getFeatures
argument_list|()
control|)
block|{
name|CheckBox
name|ch
init|=
operator|new
name|CheckBox
argument_list|(
name|feature
operator|.
name|getTitle
argument_list|()
argument_list|)
decl_stmt|;
name|ch
operator|.
name|addStyleName
argument_list|(
literal|"feature"
argument_list|)
expr_stmt|;
name|iFeatures
operator|.
name|put
argument_list|(
name|feature
operator|.
name|getId
argument_list|()
argument_list|,
name|ch
argument_list|)
expr_stmt|;
block|}
block|}
name|iPeriodPreferences
operator|.
name|clear
argument_list|()
expr_stmt|;
for|for
control|(
name|ExamTypeInterface
name|type
range|:
name|iProperties
operator|.
name|getExamTypes
argument_list|()
control|)
block|{
name|PeriodPreferencesWidget
name|pref
init|=
operator|new
name|PeriodPreferencesWidget
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|iPeriodPreferences
operator|.
name|put
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|,
name|pref
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setRoom
parameter_list|(
name|RoomDetailInterface
name|room
parameter_list|)
block|{
name|iRoom
operator|=
name|room
expr_stmt|;
if|if
condition|(
name|iRoom
operator|==
literal|null
condition|)
block|{
name|iRoom
operator|=
operator|new
name|RoomDetailInterface
argument_list|()
expr_stmt|;
name|iRoom
operator|.
name|setSessionId
argument_list|(
name|iProperties
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|)
expr_stmt|;
name|iRoom
operator|.
name|setSessionName
argument_list|(
name|iProperties
operator|.
name|getAcademicSessionName
argument_list|()
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"create"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"update"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"delete"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"create"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"update"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"delete"
argument_list|,
name|iRoom
operator|.
name|isCanDelete
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iLastControllingDept
operator|=
name|iRoom
operator|.
name|getControlDepartment
argument_list|()
expr_stmt|;
name|iLastEventDept
operator|=
name|iRoom
operator|.
name|getEventDepartment
argument_list|()
expr_stmt|;
name|iForm
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iHeader
argument_list|)
expr_stmt|;
name|int
name|firstRow
init|=
name|iForm
operator|.
name|getRowCount
argument_list|()
decl_stmt|;
if|if
condition|(
name|iMode
operator|.
name|hasSessionSelection
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAcademicSession
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|(
name|iRoom
operator|.
name|hasSessionName
argument_list|()
condition|?
name|iRoom
operator|.
name|getSessionName
argument_list|()
else|:
name|iProperties
operator|.
name|getAcademicSessionName
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iRoom
operator|.
name|getRoomType
argument_list|()
operator|==
literal|null
operator|||
name|iRoom
operator|.
name|isCanChangeType
argument_list|()
condition|)
block|{
name|iType
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|getRoomType
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemSelect
argument_list|()
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
for|for
control|(
name|RoomTypeInterface
name|type
range|:
name|iProperties
operator|.
name|getRoomTypes
argument_list|()
control|)
block|{
if|if
condition|(
name|type
operator|.
name|isRoom
argument_list|()
operator|&&
name|iProperties
operator|.
name|isCanAddRoom
argument_list|()
condition|)
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|type
operator|.
name|getLabel
argument_list|()
argument_list|,
name|type
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|else if
condition|(
operator|!
name|type
operator|.
name|isRoom
argument_list|()
operator|&&
name|iProperties
operator|.
name|isCanAddNonUniversity
argument_list|()
condition|)
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|type
operator|.
name|getLabel
argument_list|()
argument_list|,
name|type
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|RoomTypeInterface
name|type
range|:
name|iProperties
operator|.
name|getRoomTypes
argument_list|()
control|)
block|{
if|if
condition|(
name|type
operator|.
name|isRoom
argument_list|()
operator|&&
name|iRoom
operator|.
name|getBuilding
argument_list|()
operator|!=
literal|null
condition|)
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|type
operator|.
name|getLabel
argument_list|()
argument_list|,
name|type
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|else if
condition|(
operator|!
name|type
operator|.
name|isRoom
argument_list|()
operator|&&
name|iRoom
operator|.
name|getBuilding
argument_list|()
operator|==
literal|null
condition|)
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|type
operator|.
name|getLabel
argument_list|()
argument_list|,
name|type
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|iRoom
operator|.
name|getRoomType
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propRoomType
argument_list|()
argument_list|,
name|iType
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propRoomType
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|(
name|iRoom
operator|.
name|getRoomType
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|!=
literal|null
operator|&&
name|iRoom
operator|.
name|getBuilding
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iBuildingRow
operator|=
operator|-
literal|1
expr_stmt|;
block|}
if|else if
condition|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|||
name|iRoom
operator|.
name|isCanChangeRoomProperties
argument_list|()
condition|)
block|{
name|iBuilding
operator|.
name|clearHint
argument_list|()
expr_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|getBuilding
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iBuilding
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iBuilding
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|1
operator|+
name|iProperties
operator|.
name|getBuildings
argument_list|()
operator|.
name|indexOf
argument_list|(
name|iRoom
operator|.
name|getBuilding
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|iBuildingRow
operator|=
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propBuilding
argument_list|()
argument_list|,
name|iBuilding
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iBuildingRow
operator|=
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propBuilding
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|(
name|iRoom
operator|.
name|getBuilding
argument_list|()
operator|.
name|getAbbreviation
argument_list|()
operator|+
literal|" - "
operator|+
name|iRoom
operator|.
name|getBuilding
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|||
name|iRoom
operator|.
name|isCanChangeRoomProperties
argument_list|()
condition|)
block|{
name|iName
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|iRoom
operator|.
name|getName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|iRoom
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iNameLabel
argument_list|,
name|iName
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iForm
operator|.
name|addRow
argument_list|(
name|iNameLabel
argument_list|,
operator|new
name|Label
argument_list|(
name|iRoom
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iRoom
operator|.
name|getRoomType
argument_list|()
operator|==
literal|null
operator|||
name|iRoom
operator|.
name|isCanChangeType
argument_list|()
condition|)
block|{
name|typeChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|iBuildingRow
operator|>=
literal|0
condition|)
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iBuildingRow
argument_list|,
name|iRoom
operator|.
name|getRoomType
argument_list|()
operator|!=
literal|null
operator|&&
name|iRoom
operator|.
name|getRoomType
argument_list|()
operator|.
name|isRoom
argument_list|()
argument_list|)
expr_stmt|;
name|iNameLabel
operator|.
name|setText
argument_list|(
name|iRoom
operator|.
name|getRoomType
argument_list|()
operator|!=
literal|null
operator|&&
name|iRoom
operator|.
name|getRoomType
argument_list|()
operator|.
name|isRoom
argument_list|()
condition|?
name|MESSAGES
operator|.
name|propRoomNumber
argument_list|()
else|:
name|MESSAGES
operator|.
name|propRoomName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|||
name|iRoom
operator|.
name|isCanChangeRoomProperties
argument_list|()
condition|)
block|{
name|iDisplayName
operator|.
name|setText
argument_list|(
name|iRoom
operator|.
name|getDisplayName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|iRoom
operator|.
name|getDisplayName
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propDisplayName
argument_list|()
argument_list|,
name|iDisplayName
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iRoom
operator|.
name|hasDisplayName
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propDisplayName
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|(
name|iRoom
operator|.
name|getDisplayName
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeExternalId
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeExternalId
argument_list|()
condition|)
block|{
name|iExternalId
operator|.
name|setText
argument_list|(
name|iRoom
operator|.
name|getExternalId
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|iRoom
operator|.
name|getExternalId
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propExternalId
argument_list|()
argument_list|,
name|iExternalId
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iRoom
operator|.
name|hasExternalId
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propExternalId
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|(
name|iRoom
operator|.
name|getExternalId
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|||
name|iRoom
operator|.
name|isCanChangeCapacity
argument_list|()
condition|)
block|{
name|iCapacity
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iCapacity
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|iRoom
operator|.
name|getCapacity
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propCapacity
argument_list|()
argument_list|,
name|iCapacity
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iRoom
operator|.
name|getCapacity
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propCapacity
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|(
name|iRoom
operator|.
name|getCapacity
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeControll
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeControll
argument_list|()
condition|)
block|{
name|iControllingDepartment
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemNoControlDepartment
argument_list|()
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
for|for
control|(
name|DepartmentInterface
name|department
range|:
name|iProperties
operator|.
name|getDepartments
argument_list|()
control|)
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|department
operator|.
name|getExtAbbreviationOrCode
argument_list|()
operator|+
literal|" - "
operator|+
name|department
operator|.
name|getExtLabelWhenExist
argument_list|()
argument_list|,
name|department
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|getControlDepartment
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|index
init|=
name|iProperties
operator|.
name|getDepartments
argument_list|()
operator|.
name|indexOf
argument_list|(
name|iRoom
operator|.
name|getControlDepartment
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|index
operator|>=
literal|0
condition|)
block|{
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|1
operator|+
name|index
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|iRoom
operator|.
name|getControlDepartment
argument_list|()
operator|.
name|getExtAbbreviationOrCode
argument_list|()
operator|+
literal|" - "
operator|+
name|iRoom
operator|.
name|getControlDepartment
argument_list|()
operator|.
name|getExtLabelWhenExist
argument_list|()
argument_list|,
name|iRoom
operator|.
name|getControlDepartment
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|==
literal|2
condition|)
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propControllingDepartment
argument_list|()
argument_list|,
name|iControllingDepartment
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|/*		} else if (iRoom.getUniqueId() == null) { 			iControllingDepartment.getWidget().clear(); 			for (DepartmentInterface department: iProperties.getDepartments()) 				iControllingDepartment.getWidget().addItem(department.getExtAbbreviationOrCode() + " - " + department.getExtLabelWhenExist(), department.getId().toString()); 			//TODO: guess selected department from filter 			iForm.addRow(MESSAGES.propDepartment(), iControllingDepartment, 1);*/
block|}
if|else if
condition|(
name|iRoom
operator|.
name|getControlDepartment
argument_list|()
operator|!=
literal|null
operator|&&
name|iProperties
operator|.
name|isCanSeeCourses
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propControllingDepartment
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|(
name|RoomDetail
operator|.
name|toString
argument_list|(
name|iRoom
operator|.
name|getControlDepartment
argument_list|()
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|||
name|iRoom
operator|.
name|isCanChangeRoomProperties
argument_list|()
condition|)
block|{
name|iX
operator|.
name|setValue
argument_list|(
name|iRoom
operator|.
name|getX
argument_list|()
argument_list|)
expr_stmt|;
name|iY
operator|.
name|setValue
argument_list|(
name|iRoom
operator|.
name|getY
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propCoordinates
argument_list|()
argument_list|,
name|iCoordinates
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iArea
operator|.
name|setValue
argument_list|(
name|iRoom
operator|.
name|getArea
argument_list|()
argument_list|)
expr_stmt|;
name|iAreaFormat
operator|.
name|setText
argument_list|(
name|iProperties
operator|!=
literal|null
operator|&&
name|iProperties
operator|.
name|isRoomAreaInMetricUnits
argument_list|()
condition|?
name|CONSTANTS
operator|.
name|roomAreaMetricUnitsLong
argument_list|()
else|:
name|CONSTANTS
operator|.
name|roomAreaUnitsLong
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propRoomArea
argument_list|()
argument_list|,
name|iAreaPanel
argument_list|,
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|iProperties
operator|.
name|isCanSeeCourses
argument_list|()
condition|)
block|{
name|iDistanceCheck
operator|.
name|setValue
argument_list|(
operator|!
name|iRoom
operator|.
name|isIgnoreTooFar
argument_list|()
argument_list|)
expr_stmt|;
name|distanceCheckChanged
argument_list|()
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propDistanceCheck
argument_list|()
argument_list|,
name|iDistanceCheck
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
name|iRoomCheck
operator|.
name|setValue
argument_list|(
operator|!
name|iRoom
operator|.
name|isIgnoreRoomCheck
argument_list|()
argument_list|)
expr_stmt|;
name|roomCheckChanged
argument_list|()
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propRoomCheck
argument_list|()
argument_list|,
name|iRoomCheck
argument_list|,
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|iMap
operator|!=
literal|null
condition|)
name|iMap
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|iRoom
operator|.
name|hasCoordinates
argument_list|()
condition|)
block|{
name|P
name|coordinates
init|=
operator|new
name|P
argument_list|(
literal|"coordinates"
argument_list|)
decl_stmt|;
if|if
condition|(
name|iProperties
operator|!=
literal|null
operator|&&
name|iProperties
operator|.
name|hasEllipsoid
argument_list|()
condition|)
name|coordinates
operator|.
name|add
argument_list|(
operator|new
name|HTML
argument_list|(
name|MESSAGES
operator|.
name|coordinatesWithEllipsoid
argument_list|(
name|iRoom
operator|.
name|getX
argument_list|()
argument_list|,
name|iRoom
operator|.
name|getY
argument_list|()
argument_list|,
name|iProperties
operator|.
name|getEllipsoid
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|coordinates
operator|.
name|add
argument_list|(
operator|new
name|HTML
argument_list|(
name|MESSAGES
operator|.
name|coordinates
argument_list|(
name|iRoom
operator|.
name|getX
argument_list|()
argument_list|,
name|iRoom
operator|.
name|getY
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Hidden
name|x
init|=
operator|new
name|Hidden
argument_list|()
decl_stmt|;
name|x
operator|.
name|getElement
argument_list|()
operator|.
name|setId
argument_list|(
literal|"coordX"
argument_list|)
expr_stmt|;
name|x
operator|.
name|setValue
argument_list|(
name|iRoom
operator|.
name|getX
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|iRoom
operator|.
name|getX
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Hidden
name|y
init|=
operator|new
name|Hidden
argument_list|()
decl_stmt|;
name|y
operator|.
name|getElement
argument_list|()
operator|.
name|setId
argument_list|(
literal|"coordY"
argument_list|)
expr_stmt|;
name|y
operator|.
name|setValue
argument_list|(
name|iRoom
operator|.
name|getY
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|iRoom
operator|.
name|getY
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|coordinates
operator|.
name|add
argument_list|(
name|x
argument_list|)
expr_stmt|;
name|coordinates
operator|.
name|add
argument_list|(
name|y
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propCoordinates
argument_list|()
argument_list|,
name|coordinates
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iRoom
operator|.
name|getArea
argument_list|()
operator|!=
literal|null
condition|)
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propRoomArea
argument_list|()
argument_list|,
operator|new
name|HTML
argument_list|(
name|MESSAGES
operator|.
name|roomArea
argument_list|(
name|iRoom
operator|.
name|getArea
argument_list|()
argument_list|)
operator|+
literal|" "
operator|+
operator|(
name|iProperties
operator|!=
literal|null
operator|&&
name|iProperties
operator|.
name|isRoomAreaInMetricUnits
argument_list|()
condition|?
name|CONSTANTS
operator|.
name|roomAreaMetricUnitsShort
argument_list|()
else|:
name|CONSTANTS
operator|.
name|roomAreaUnitsShort
argument_list|()
operator|)
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|iProperties
operator|.
name|isCanSeeCourses
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propDistanceCheck
argument_list|()
argument_list|,
operator|new
name|Check
argument_list|(
operator|!
name|room
operator|.
name|isIgnoreTooFar
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|infoDistanceCheckOn
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|infoDistanceCheckOff
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propRoomCheck
argument_list|()
argument_list|,
operator|new
name|Check
argument_list|(
operator|!
name|room
operator|.
name|isIgnoreRoomCheck
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|infoRoomCheckOn
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|infoRoomCheckOff
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iProperties
operator|.
name|isCanSeeEvents
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propRoomCheck
argument_list|()
argument_list|,
operator|new
name|Check
argument_list|(
operator|!
name|room
operator|.
name|isIgnoreRoomCheck
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|infoRoomCheckOn
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|infoRoomCheckOff
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iMap
operator|!=
literal|null
condition|)
name|iMap
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeExamStatus
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeExamStatus
argument_list|()
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Long
argument_list|,
name|CheckBox
argument_list|>
name|e
range|:
name|iExaminationRooms
operator|.
name|entrySet
argument_list|()
control|)
name|e
operator|.
name|getValue
argument_list|()
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|hasExamTypes
argument_list|()
condition|)
block|{
for|for
control|(
name|ExamTypeInterface
name|type
range|:
name|iRoom
operator|.
name|getExamTypes
argument_list|()
control|)
name|iExaminationRooms
operator|.
name|get
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|setValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propExamRooms
argument_list|()
argument_list|,
name|iExaminationRoomsPanel
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iExamCapacity
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|iRoom
operator|.
name|getExamCapacity
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propExamCapacity
argument_list|()
argument_list|,
name|iExamCapacity
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iProperties
operator|.
name|isCanSeeExams
argument_list|()
operator|&&
operator|(
name|iRoom
operator|.
name|getExamCapacity
argument_list|()
operator|!=
literal|null
operator|||
name|iRoom
operator|.
name|hasExamTypes
argument_list|()
operator|)
condition|)
block|{
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propExamCapacity
argument_list|()
argument_list|,
operator|new
name|RoomDetail
operator|.
name|ExamSeatingCapacityLabel
argument_list|(
name|iRoom
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeEventProperties
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeEventProperties
argument_list|()
condition|)
block|{
name|iEventDepartment
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeControll
argument_list|()
operator|)
operator|||
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|!=
literal|null
operator|&&
operator|(
name|iRoom
operator|.
name|getEventDepartment
argument_list|()
operator|==
literal|null
operator|||
name|iRoom
operator|.
name|isCanChangeControll
argument_list|()
operator|)
operator|)
condition|)
block|{
name|iEventDepartment
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemNoEventDepartment
argument_list|()
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|DepartmentInterface
name|department
range|:
name|iProperties
operator|.
name|getDepartments
argument_list|()
control|)
if|if
condition|(
name|department
operator|.
name|isEvent
argument_list|()
condition|)
name|iEventDepartment
operator|.
name|addItem
argument_list|(
name|department
operator|.
name|getDeptCode
argument_list|()
operator|+
literal|" - "
operator|+
name|department
operator|.
name|getLabel
argument_list|()
argument_list|,
name|department
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|getEventDepartment
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iEventDepartment
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iEventDepartment
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iEventDepartment
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iEventDepartment
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|iRoom
operator|.
name|getEventDepartment
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|iEventDepartment
operator|.
name|setSelectedIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|iRoom
operator|.
name|getEventDepartment
argument_list|()
operator|!=
literal|null
operator|&&
literal|"-1"
operator|.
name|equals
argument_list|(
name|iEventDepartment
operator|.
name|getValue
argument_list|(
name|iEventDepartment
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
condition|)
block|{
name|iEventDepartment
operator|.
name|addItem
argument_list|(
name|iRoom
operator|.
name|getEventDepartment
argument_list|()
operator|.
name|getDeptCode
argument_list|()
operator|+
literal|" - "
operator|+
name|iRoom
operator|.
name|getEventDepartment
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|,
name|iRoom
operator|.
name|getEventDepartment
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|iEventDepartment
operator|.
name|setSelectedIndex
argument_list|(
name|iEventDepartment
operator|.
name|getItemCount
argument_list|()
operator|+
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propEventDepartment
argument_list|()
argument_list|,
name|iEventDepartment
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iEventStatus
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|iRoom
operator|.
name|getEventStatus
argument_list|()
operator|==
literal|null
condition|?
literal|0
else|:
name|iRoom
operator|.
name|getEventStatus
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|iEventStatus
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propEventStatus
argument_list|()
argument_list|,
name|iEventStatus
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iNote
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|iRoom
operator|.
name|getEventNote
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|iRoom
operator|.
name|getEventNote
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propEventNote
argument_list|()
argument_list|,
name|iNote
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iBreakTime
operator|.
name|setValue
argument_list|(
name|iRoom
operator|.
name|getBreakTime
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propBreakTime
argument_list|()
argument_list|,
name|iBreakTimePanel
argument_list|,
literal|1
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Long
argument_list|,
name|CheckBox
argument_list|>
name|e
range|:
name|iServices
operator|.
name|entrySet
argument_list|()
control|)
name|e
operator|.
name|getValue
argument_list|()
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|hasServices
argument_list|()
condition|)
for|for
control|(
name|EventServiceProviderInterface
name|service
range|:
name|iRoom
operator|.
name|getServices
argument_list|()
control|)
name|iServices
operator|.
name|get
argument_list|(
name|service
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|setValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|iProperties
operator|.
name|hasEventServiceProviders
argument_list|()
condition|)
block|{
name|Long
name|deptId
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iEventDepartment
operator|.
name|getValue
argument_list|(
name|iEventDepartment
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|EventServiceProviderInterface
name|service
range|:
name|iProperties
operator|.
name|getEventServiceProviders
argument_list|()
control|)
block|{
if|if
condition|(
name|service
operator|.
name|getDepartmentId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|iServices
operator|.
name|get
argument_list|(
name|service
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|setVisible
argument_list|(
name|service
operator|.
name|getDepartmentId
argument_list|()
operator|.
name|equals
argument_list|(
name|deptId
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|iServicesRow
operator|=
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAvailableServices
argument_list|()
argument_list|,
name|iServicesPanel
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iServicesRow
argument_list|,
name|deptId
operator|>=
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|iProperties
operator|.
name|isCanSeeEvents
argument_list|()
condition|)
block|{
if|if
condition|(
name|iRoom
operator|.
name|getEventDepartment
argument_list|()
operator|!=
literal|null
condition|)
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propEventDepartment
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|(
name|RoomDetail
operator|.
name|toString
argument_list|(
name|iRoom
operator|.
name|getEventDepartment
argument_list|()
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|getEventStatus
argument_list|()
operator|!=
literal|null
operator|||
name|iRoom
operator|.
name|getDefaultEventStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|Label
name|status
init|=
operator|new
name|Label
argument_list|(
name|CONSTANTS
operator|.
name|eventStatusName
argument_list|()
index|[
name|iRoom
operator|.
name|getEventStatus
argument_list|()
operator|==
literal|null
condition|?
name|iRoom
operator|.
name|getDefaultEventStatus
argument_list|()
else|:
name|iRoom
operator|.
name|getEventStatus
argument_list|()
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|getEventStatus
argument_list|()
operator|==
literal|null
condition|)
name|status
operator|.
name|addStyleName
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propEventStatus
argument_list|()
argument_list|,
name|status
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iRoom
operator|.
name|hasEventNote
argument_list|()
operator|||
name|iRoom
operator|.
name|hasDefaultEventNote
argument_list|()
condition|)
block|{
name|HTML
name|note
init|=
operator|new
name|HTML
argument_list|(
name|iRoom
operator|.
name|hasEventNote
argument_list|()
condition|?
name|iRoom
operator|.
name|getEventNote
argument_list|()
else|:
name|iRoom
operator|.
name|getDefaultEventNote
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|iRoom
operator|.
name|hasEventNote
argument_list|()
condition|)
name|note
operator|.
name|addStyleName
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propEventNote
argument_list|()
argument_list|,
name|note
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iRoom
operator|.
name|getBreakTime
argument_list|()
operator|!=
literal|null
operator|||
name|iRoom
operator|.
name|getDefaultBreakTime
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|Label
name|bt
init|=
operator|new
name|Label
argument_list|(
operator|(
name|iRoom
operator|.
name|getBreakTime
argument_list|()
operator|==
literal|null
condition|?
name|iRoom
operator|.
name|getDefaultBreakTime
argument_list|()
else|:
name|iRoom
operator|.
name|getBreakTime
argument_list|()
operator|)
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|getBreakTime
argument_list|()
operator|==
literal|null
condition|)
name|bt
operator|.
name|addStyleName
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propBreakTime
argument_list|()
argument_list|,
name|bt
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iRoom
operator|.
name|hasServices
argument_list|()
condition|)
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAvailableServices
argument_list|()
argument_list|,
operator|new
name|RoomDetail
operator|.
name|ServicesCell
argument_list|(
name|iRoom
operator|.
name|getServices
argument_list|()
argument_list|,
name|iRoom
operator|.
name|getEventDepartment
argument_list|()
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iMap
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|Window
operator|.
name|getClientWidth
argument_list|()
operator|<=
literal|800
condition|)
block|{
name|iForm
operator|.
name|addRow
argument_list|(
name|iMap
operator|.
name|asWidget
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iForm
operator|.
name|setWidget
argument_list|(
name|firstRow
argument_list|,
literal|2
argument_list|,
name|iMap
operator|.
name|asWidget
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getFlexCellFormatter
argument_list|()
operator|.
name|setRowSpan
argument_list|(
name|firstRow
argument_list|,
literal|2
argument_list|,
name|iForm
operator|.
name|getRowCount
argument_list|()
operator|-
name|firstRow
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeGroups
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeGroups
argument_list|()
operator|)
operator|&&
operator|!
name|iProperties
operator|.
name|getGroups
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|MESSAGES
operator|.
name|headerRoomGroups
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Long
argument_list|,
name|CheckBox
argument_list|>
name|e
range|:
name|iGroups
operator|.
name|entrySet
argument_list|()
control|)
name|e
operator|.
name|getValue
argument_list|()
operator|.
name|setValue
argument_list|(
name|iRoom
operator|.
name|hasGroup
argument_list|(
name|e
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|iGlobalGroupsPanel
operator|!=
literal|null
condition|)
block|{
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propGlobalGroups
argument_list|()
argument_list|,
name|iGlobalGroupsPanel
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|List
argument_list|<
name|GroupInterface
argument_list|>
name|globalGroups
init|=
name|iRoom
operator|.
name|getGlobalGroups
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|globalGroups
operator|.
name|isEmpty
argument_list|()
condition|)
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propGlobalGroups
argument_list|()
argument_list|,
operator|new
name|RoomDetail
operator|.
name|GroupsCell
argument_list|(
name|globalGroups
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|DepartmentInterface
name|dept
range|:
name|iProperties
operator|.
name|getDepartments
argument_list|()
control|)
block|{
name|P
name|d
init|=
name|iGroupPanel
operator|.
name|get
argument_list|(
name|dept
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|d
operator|!=
literal|null
condition|)
name|iForm
operator|.
name|addRow
argument_list|(
name|dept
operator|.
name|getExtLabelWhenExist
argument_list|()
operator|+
literal|":"
argument_list|,
name|d
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|iRoom
operator|.
name|hasGroups
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|MESSAGES
operator|.
name|headerRoomGroups
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|GroupInterface
argument_list|>
name|globalGroups
init|=
name|iRoom
operator|.
name|getGlobalGroups
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|globalGroups
operator|.
name|isEmpty
argument_list|()
condition|)
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propGlobalGroups
argument_list|()
argument_list|,
operator|new
name|RoomDetail
operator|.
name|GroupsCell
argument_list|(
name|globalGroups
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|GroupInterface
argument_list|>
name|departmentalGroups
init|=
name|iRoom
operator|.
name|getDepartmentalGroups
argument_list|(
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|departmentalGroups
operator|.
name|isEmpty
argument_list|()
condition|)
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propDepartmenalGroups
argument_list|()
argument_list|,
operator|new
name|RoomDetail
operator|.
name|GroupsCell
argument_list|(
name|departmentalGroups
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeFeatures
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeFeatures
argument_list|()
operator|)
operator|&&
operator|!
name|iProperties
operator|.
name|getFeatures
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|MESSAGES
operator|.
name|headerRoomFeatures
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Long
argument_list|,
name|CheckBox
argument_list|>
name|e
range|:
name|iFeatures
operator|.
name|entrySet
argument_list|()
control|)
name|e
operator|.
name|getValue
argument_list|()
operator|.
name|setValue
argument_list|(
name|iRoom
operator|.
name|hasFeature
argument_list|(
name|e
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|P
name|features
init|=
operator|new
name|P
argument_list|(
literal|"features"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|Long
argument_list|,
name|P
argument_list|>
name|fp
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|P
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|FeatureInterface
name|feature
range|:
name|iProperties
operator|.
name|getFeatures
argument_list|()
control|)
block|{
name|CheckBox
name|ch
init|=
name|iFeatures
operator|.
name|get
argument_list|(
name|feature
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|feature
operator|.
name|getType
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|P
name|d
init|=
name|fp
operator|.
name|get
argument_list|(
name|feature
operator|.
name|getType
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|d
operator|==
literal|null
condition|)
block|{
name|d
operator|=
operator|new
name|P
argument_list|(
literal|"features"
argument_list|)
expr_stmt|;
name|d
operator|.
name|setWidth
argument_list|(
literal|"100%"
argument_list|)
expr_stmt|;
name|fp
operator|.
name|put
argument_list|(
name|feature
operator|.
name|getType
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|d
argument_list|)
expr_stmt|;
block|}
name|d
operator|.
name|add
argument_list|(
name|ch
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|features
operator|.
name|add
argument_list|(
name|ch
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|FeatureInterface
name|feature
range|:
name|iRoom
operator|.
name|getFeatures
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|iFeatures
operator|.
name|containsKey
argument_list|(
name|feature
operator|.
name|getId
argument_list|()
argument_list|)
operator|&&
name|feature
operator|.
name|getDepartment
argument_list|()
operator|==
literal|null
condition|)
block|{
name|P
name|f
init|=
operator|new
name|P
argument_list|(
literal|"feature"
argument_list|)
decl_stmt|;
name|f
operator|.
name|setText
argument_list|(
name|feature
operator|.
name|getTitle
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|feature
operator|.
name|getType
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|P
name|d
init|=
name|fp
operator|.
name|get
argument_list|(
name|feature
operator|.
name|getType
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|d
operator|==
literal|null
condition|)
block|{
name|d
operator|=
operator|new
name|P
argument_list|(
literal|"features"
argument_list|)
expr_stmt|;
name|d
operator|.
name|setWidth
argument_list|(
literal|"100%"
argument_list|)
expr_stmt|;
name|fp
operator|.
name|put
argument_list|(
name|feature
operator|.
name|getType
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|d
argument_list|)
expr_stmt|;
block|}
name|d
operator|.
name|add
argument_list|(
name|f
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|features
operator|.
name|add
argument_list|(
name|f
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|features
operator|.
name|getWidgetCount
argument_list|()
operator|>
literal|0
condition|)
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propFeatures
argument_list|()
argument_list|,
name|features
argument_list|)
expr_stmt|;
for|for
control|(
name|FeatureTypeInterface
name|type
range|:
name|iProperties
operator|.
name|getFeatureTypes
argument_list|()
control|)
block|{
name|P
name|d
init|=
name|fp
operator|.
name|get
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|d
operator|!=
literal|null
condition|)
name|iForm
operator|.
name|addRow
argument_list|(
name|type
operator|.
name|getLabel
argument_list|()
operator|+
literal|":"
argument_list|,
name|d
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|iRoom
operator|.
name|hasFeatures
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|MESSAGES
operator|.
name|headerRoomFeatures
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FeatureInterface
argument_list|>
name|features
init|=
name|iRoom
operator|.
name|getFeatures
argument_list|(
operator|(
name|Long
operator|)
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|features
operator|.
name|isEmpty
argument_list|()
condition|)
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propFeatures
argument_list|()
argument_list|,
operator|new
name|RoomDetail
operator|.
name|FeaturesCell
argument_list|(
name|features
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|FeatureTypeInterface
name|type
range|:
name|iProperties
operator|.
name|getFeatureTypes
argument_list|()
control|)
block|{
name|List
argument_list|<
name|FeatureInterface
argument_list|>
name|featuresOfType
init|=
name|iRoom
operator|.
name|getFeatures
argument_list|(
name|type
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|featuresOfType
operator|.
name|isEmpty
argument_list|()
condition|)
name|iForm
operator|.
name|addRow
argument_list|(
name|type
operator|.
name|getLabel
argument_list|()
operator|+
literal|":"
argument_list|,
operator|new
name|RoomDetail
operator|.
name|FeaturesCell
argument_list|(
name|featuresOfType
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iRoom
operator|.
name|hasRoomSharingModel
argument_list|()
condition|)
block|{
name|iRoomSharingHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iRoomSharing
operator|.
name|setEditable
argument_list|(
name|iProperties
operator|.
name|isCanEditDepartments
argument_list|()
operator|||
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeAvailability
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeAvailability
argument_list|()
argument_list|)
expr_stmt|;
name|iRoomSharing
operator|.
name|setModel
argument_list|(
name|iRoom
operator|.
name|getRoomSharingModel
argument_list|()
argument_list|)
expr_stmt|;
name|iRoomSharing
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iLastSelectedDepartmentId
operator|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|iLastSelectedDepartmentId
operator|>
literal|0
condition|)
name|iRoomSharing
operator|.
name|addOption
argument_list|(
name|iLastSelectedDepartmentId
argument_list|)
expr_stmt|;
block|}
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iRoomSharingHeader
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iRoomSharing
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iProperties
operator|.
name|isCanEditDepartments
argument_list|()
operator|||
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeAvailability
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeAvailability
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iRoomSharingHeader
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iRoomSharing
argument_list|)
expr_stmt|;
name|iRoomSharingHeader
operator|.
name|showLoading
argument_list|()
expr_stmt|;
name|iRoomSharing
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|RoomInterface
operator|.
name|RoomSharingRequest
operator|.
name|load
argument_list|(
name|iRoom
operator|.
name|getSessionId
argument_list|()
argument_list|,
name|iRoom
operator|.
name|getUniqueId
argument_list|()
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|RoomSharingModel
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iRoomSharingHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedToLoadRoomAvailability
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|RoomSharingModel
name|result
parameter_list|)
block|{
name|iRoomSharingHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iRoomSharing
operator|.
name|setEditable
argument_list|(
name|iProperties
operator|.
name|isCanEditDepartments
argument_list|()
operator|||
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeAvailability
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeAvailability
argument_list|()
argument_list|)
expr_stmt|;
name|iRoomSharing
operator|.
name|setModel
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|iRoomSharing
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iLastSelectedDepartmentId
operator|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|iLastSelectedDepartmentId
operator|>
literal|0
condition|)
name|iRoomSharing
operator|.
name|addOption
argument_list|(
name|iLastSelectedDepartmentId
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iProperties
operator|.
name|isCanEditRoomExams
argument_list|()
operator|||
operator|(
name|iProperties
operator|.
name|isCanSeeExams
argument_list|()
operator|&&
name|iRoom
operator|.
name|isCanSeePeriodPreferences
argument_list|()
operator|&&
name|iRoom
operator|.
name|hasExamTypes
argument_list|()
operator|)
condition|)
block|{
name|iPeriodPreferencesHeaderRow
operator|=
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iPeriodPreferencesHeader
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iPeriodPreferencesHeaderRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
for|for
control|(
name|ExamTypeInterface
name|type
range|:
name|iProperties
operator|.
name|getExamTypes
argument_list|()
control|)
block|{
name|PeriodPreferencesWidget
name|pref
init|=
name|iPeriodPreferences
operator|.
name|get
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|row
init|=
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propExaminationPreferences
argument_list|(
name|type
operator|.
name|getLabel
argument_list|()
argument_list|)
argument_list|,
name|pref
argument_list|)
decl_stmt|;
name|iPeriodPreferencesRow
operator|.
name|put
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iPeriodPreferencesRow
operator|.
name|get
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|iPeriodPreferencesHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
for|for
control|(
specifier|final
name|ExamTypeInterface
name|type
range|:
name|iProperties
operator|.
name|getExamTypes
argument_list|()
control|)
block|{
specifier|final
name|PeriodPreferencesWidget
name|pref
init|=
name|iPeriodPreferences
operator|.
name|get
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|hasPeriodPreferenceModel
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
block|{
name|pref
operator|.
name|setEditable
argument_list|(
name|iProperties
operator|.
name|isCanEditRoomExams
argument_list|()
argument_list|)
expr_stmt|;
name|pref
operator|.
name|setModel
argument_list|(
name|iRoom
operator|.
name|getPeriodPreferenceModel
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|boolean
name|visible
init|=
name|iExaminationRooms
operator|.
name|get
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|getValue
argument_list|()
operator|&&
operator|!
name|pref
operator|.
name|getModel
argument_list|()
operator|.
name|getPeriods
argument_list|()
operator|.
name|isEmpty
argument_list|()
decl_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iPeriodPreferencesRow
operator|.
name|get
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
name|visible
argument_list|)
expr_stmt|;
if|if
condition|(
name|visible
condition|)
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iPeriodPreferencesHeaderRow
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeExamStatus
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeExamStatus
argument_list|()
condition|)
block|{
name|iPeriodPreferencesHeader
operator|.
name|showLoading
argument_list|()
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iPeriodPreferencesRow
operator|.
name|get
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|RoomInterface
operator|.
name|PeriodPreferenceRequest
operator|.
name|load
argument_list|(
name|iRoom
operator|.
name|getSessionId
argument_list|()
argument_list|,
name|iRoom
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|type
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|PeriodPreferenceModel
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iPeriodPreferencesHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedToLoadPeriodPreferences
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|PeriodPreferenceModel
name|result
parameter_list|)
block|{
name|iPeriodPreferencesHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|pref
operator|.
name|setEditable
argument_list|(
name|iProperties
operator|.
name|isCanEditRoomExams
argument_list|()
argument_list|)
expr_stmt|;
name|pref
operator|.
name|setModel
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|boolean
name|visible
init|=
name|iExaminationRooms
operator|.
name|get
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|getValue
argument_list|()
operator|&&
operator|!
name|pref
operator|.
name|getModel
argument_list|()
operator|.
name|getPeriods
argument_list|()
operator|.
name|isEmpty
argument_list|()
decl_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iPeriodPreferencesRow
operator|.
name|get
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
name|visible
argument_list|)
expr_stmt|;
if|if
condition|(
name|visible
condition|)
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iPeriodPreferencesHeaderRow
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iPeriodPreferencesRow
operator|.
name|get
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
name|iPeriodPreferencesHeaderRow
operator|=
operator|-
literal|1
expr_stmt|;
name|iPeriodPreferencesRow
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeEventAvailability
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeEventAvailability
argument_list|()
operator|)
operator|||
operator|(
name|iProperties
operator|.
name|isCanSeeEvents
argument_list|()
operator|&&
name|iRoom
operator|.
name|isCanSeeEventAvailability
argument_list|()
operator|)
condition|)
block|{
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iEventAvailabilityHeader
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iEventAvailability
argument_list|)
expr_stmt|;
name|iEventAvailabilityHeader
operator|.
name|setVisible
argument_list|(
name|isEventRoom
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|hasEventAvailabilityModel
argument_list|()
condition|)
block|{
name|iEventAvailabilityHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iEventAvailability
operator|.
name|setEditable
argument_list|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeEventAvailability
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeEventAvailability
argument_list|()
argument_list|)
expr_stmt|;
name|iEventAvailability
operator|.
name|setModel
argument_list|(
name|iRoom
operator|.
name|getEventAvailabilityModel
argument_list|()
argument_list|)
expr_stmt|;
name|iEventAvailability
operator|.
name|setVisible
argument_list|(
name|isEventRoom
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iEventAvailabilityHeader
operator|.
name|showLoading
argument_list|()
expr_stmt|;
name|iEventAvailability
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|RoomInterface
operator|.
name|RoomSharingRequest
operator|.
name|load
argument_list|(
name|iRoom
operator|.
name|getSessionId
argument_list|()
argument_list|,
name|iRoom
operator|.
name|getUniqueId
argument_list|()
argument_list|,
literal|true
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|RoomSharingModel
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iEventAvailabilityHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedToLoadRoomAvailability
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|RoomSharingModel
name|result
parameter_list|)
block|{
name|iEventAvailabilityHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iEventAvailability
operator|.
name|setEditable
argument_list|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeEventAvailability
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeEventAvailability
argument_list|()
argument_list|)
expr_stmt|;
name|iEventAvailability
operator|.
name|setModel
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|iEventAvailability
operator|.
name|setVisible
argument_list|(
name|isEventRoom
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iRoom
operator|.
name|hasPictures
argument_list|()
operator|||
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangePicture
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangePicture
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iPicturesHeader
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangePicture
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangePicture
argument_list|()
condition|)
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propNewPicture
argument_list|()
argument_list|,
name|iFileUpload
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iPictures
argument_list|)
expr_stmt|;
name|iPictures
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|hasPictures
argument_list|()
condition|)
block|{
for|for
control|(
specifier|final
name|RoomPictureInterface
name|picture
range|:
name|iRoom
operator|.
name|getPictures
argument_list|()
control|)
name|iPictures
operator|.
name|addRow
argument_list|(
name|picture
argument_list|,
name|line
argument_list|(
name|picture
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|iForm
operator|.
name|addBottomRow
argument_list|(
name|iFooter
argument_list|)
expr_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|hasFutureSessions
argument_list|()
condition|)
block|{
name|int
name|row
init|=
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iApplyToHeader
argument_list|)
decl_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|row
argument_list|,
literal|"space-above"
argument_list|)
expr_stmt|;
name|iApplyTo
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|long
name|id
init|=
literal|0
decl_stmt|;
for|for
control|(
name|AcademicSessionInterface
name|session
range|:
name|iProperties
operator|.
name|getFutureSessions
argument_list|()
control|)
block|{
name|List
argument_list|<
name|Widget
argument_list|>
name|line
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|CheckBox
name|select
init|=
operator|new
name|CheckBox
argument_list|()
decl_stmt|;
name|line
operator|.
name|add
argument_list|(
name|select
argument_list|)
expr_stmt|;
name|select
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
name|futureChanged
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|()
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|()
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|()
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|()
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|session
operator|.
name|getLabel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Integer
name|flags
init|=
name|RoomCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|getFutureFlags
argument_list|(
name|session
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|select
operator|.
name|setValue
argument_list|(
name|flags
operator|!=
literal|null
argument_list|)
expr_stmt|;
for|for
control|(
name|FutureOperation
name|op
range|:
name|FutureOperation
operator|.
name|values
argument_list|()
control|)
block|{
name|CheckBox
name|ch
init|=
operator|new
name|CheckBox
argument_list|()
decl_stmt|;
name|ch
operator|.
name|setValue
argument_list|(
name|canFutureOperation
argument_list|(
name|iRoom
argument_list|,
name|op
argument_list|)
operator|&&
operator|(
operator|(
name|flags
operator|==
literal|null
operator|&&
name|op
operator|.
name|getDefaultSelectionNewRoom
argument_list|()
operator|)
operator|||
operator|(
name|flags
operator|!=
literal|null
operator|&&
name|op
operator|.
name|in
argument_list|(
name|flags
argument_list|)
operator|)
operator|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|op
operator|==
name|FutureOperation
operator|.
name|ROOM_PROPERTIES
condition|)
block|{
name|ch
operator|.
name|setValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|ch
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
name|line
operator|.
name|add
argument_list|(
name|ch
argument_list|)
expr_stmt|;
block|}
name|FutureRoomInterface
name|fr
init|=
operator|new
name|FutureRoomInterface
argument_list|()
decl_stmt|;
name|fr
operator|.
name|setSession
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|fr
operator|.
name|setId
argument_list|(
operator|--
name|id
argument_list|)
expr_stmt|;
name|iApplyTo
operator|.
name|addRow
argument_list|(
name|fr
argument_list|,
name|line
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|FutureOperation
name|op
range|:
name|FutureOperation
operator|.
name|values
argument_list|()
control|)
block|{
name|iApplyTo
operator|.
name|setColumnVisible
argument_list|(
literal|6
operator|+
name|op
operator|.
name|ordinal
argument_list|()
argument_list|,
name|canFutureOperation
argument_list|(
name|iRoom
argument_list|,
name|op
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|iApplyTo
operator|.
name|setColumnVisible
argument_list|(
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iApplyTo
operator|.
name|setColumnVisible
argument_list|(
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iApplyTo
operator|.
name|setColumnVisible
argument_list|(
literal|3
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iApplyTo
operator|.
name|setColumnVisible
argument_list|(
literal|4
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iApplyTo
argument_list|)
expr_stmt|;
name|futureChanged
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|iRoom
operator|.
name|hasFutureRooms
argument_list|()
condition|)
block|{
name|int
name|row
init|=
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iApplyToHeader
argument_list|)
decl_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|row
argument_list|,
literal|"space-above"
argument_list|)
expr_stmt|;
name|iApplyTo
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|boolean
name|hasExtId
init|=
literal|false
decl_stmt|,
name|hasType
init|=
literal|false
decl_stmt|,
name|hasCapacity
init|=
literal|false
decl_stmt|;
for|for
control|(
name|FutureRoomInterface
name|fr
range|:
name|iRoom
operator|.
name|getFutureRooms
argument_list|()
control|)
block|{
name|List
argument_list|<
name|Widget
argument_list|>
name|line
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|CheckBox
name|select
init|=
operator|new
name|CheckBox
argument_list|()
decl_stmt|;
name|line
operator|.
name|add
argument_list|(
name|select
argument_list|)
expr_stmt|;
name|select
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
name|futureChanged
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|FutureRoomNameCell
argument_list|(
name|fr
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|fr
operator|.
name|hasExternalId
argument_list|()
condition|)
name|hasExtId
operator|=
literal|true
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|fr
operator|.
name|hasExternalId
argument_list|()
condition|?
name|fr
operator|.
name|getExternalId
argument_list|()
else|:
literal|""
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|fr
operator|.
name|hasType
argument_list|()
condition|)
name|hasType
operator|=
literal|true
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|fr
operator|.
name|hasType
argument_list|()
condition|?
name|fr
operator|.
name|getType
argument_list|()
else|:
literal|""
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|fr
operator|.
name|hasCapacity
argument_list|()
condition|)
name|hasCapacity
operator|=
literal|true
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|fr
operator|.
name|hasCapacity
argument_list|()
condition|?
name|fr
operator|.
name|getCapacity
argument_list|()
operator|.
name|toString
argument_list|()
else|:
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|fr
operator|.
name|getSession
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Integer
name|flags
init|=
name|RoomCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|getFutureFlags
argument_list|(
name|fr
operator|.
name|getSession
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|select
operator|.
name|setValue
argument_list|(
name|flags
operator|!=
literal|null
argument_list|)
expr_stmt|;
for|for
control|(
name|FutureOperation
name|op
range|:
name|FutureOperation
operator|.
name|values
argument_list|()
control|)
block|{
name|CheckBox
name|ch
init|=
operator|new
name|CheckBox
argument_list|()
decl_stmt|;
name|ch
operator|.
name|setValue
argument_list|(
name|canFutureOperation
argument_list|(
name|iRoom
argument_list|,
name|op
argument_list|)
operator|&&
operator|(
operator|(
name|flags
operator|==
literal|null
operator|&&
name|op
operator|.
name|getDefaultSelection
argument_list|()
operator|)
operator|||
operator|(
name|flags
operator|!=
literal|null
operator|&&
name|op
operator|.
name|in
argument_list|(
name|flags
argument_list|)
operator|)
operator|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
name|ch
argument_list|)
expr_stmt|;
block|}
name|iApplyTo
operator|.
name|addRow
argument_list|(
name|fr
argument_list|,
name|line
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|FutureOperation
name|op
range|:
name|FutureOperation
operator|.
name|values
argument_list|()
control|)
block|{
name|iApplyTo
operator|.
name|setColumnVisible
argument_list|(
literal|6
operator|+
name|op
operator|.
name|ordinal
argument_list|()
argument_list|,
name|canFutureOperation
argument_list|(
name|iRoom
argument_list|,
name|op
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|iApplyTo
operator|.
name|setColumnVisible
argument_list|(
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iApplyTo
operator|.
name|setColumnVisible
argument_list|(
literal|2
argument_list|,
name|hasExtId
argument_list|)
expr_stmt|;
name|iApplyTo
operator|.
name|setColumnVisible
argument_list|(
literal|3
argument_list|,
name|hasType
argument_list|)
expr_stmt|;
name|iApplyTo
operator|.
name|setColumnVisible
argument_list|(
literal|4
argument_list|,
name|hasCapacity
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iApplyTo
argument_list|)
expr_stmt|;
name|futureChanged
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|RoomDetailInterface
name|getRoom
parameter_list|()
block|{
return|return
name|iRoom
return|;
block|}
specifier|protected
name|void
name|buildingChanged
parameter_list|()
block|{
name|BuildingInterface
name|building
init|=
name|iProperties
operator|.
name|getBuilding
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iBuilding
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iBuilding
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|building
operator|!=
literal|null
condition|)
block|{
name|iX
operator|.
name|setValue
argument_list|(
name|building
operator|.
name|getX
argument_list|()
argument_list|)
expr_stmt|;
name|iY
operator|.
name|setValue
argument_list|(
name|building
operator|.
name|getY
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iMap
operator|!=
literal|null
condition|)
name|iMap
operator|.
name|setMarker
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|futureChanged
parameter_list|()
block|{
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|hasFutureSessions
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|hasFutureRooms
argument_list|()
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iApplyTo
operator|.
name|getRowCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|CheckBox
name|ch
init|=
operator|(
name|CheckBox
operator|)
name|iApplyTo
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|ch
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|iEventStatus
operator|.
name|setHint
argument_list|(
name|MESSAGES
operator|.
name|eventStatusHint
argument_list|(
name|iRoom
operator|.
name|hasSessionName
argument_list|()
condition|?
name|iRoom
operator|.
name|getSessionName
argument_list|()
else|:
name|iProperties
operator|.
name|getAcademicSessionName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
name|iEventStatus
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|typeChanged
parameter_list|()
block|{
name|RoomTypeInterface
name|type
init|=
name|iProperties
operator|.
name|getRoomType
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|iBuildingRow
operator|>=
literal|0
condition|)
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iBuildingRow
argument_list|,
name|type
operator|!=
literal|null
operator|&&
name|type
operator|.
name|isRoom
argument_list|()
argument_list|)
expr_stmt|;
name|iNameLabel
operator|.
name|setText
argument_list|(
name|type
operator|!=
literal|null
operator|&&
name|type
operator|.
name|isRoom
argument_list|()
condition|?
name|MESSAGES
operator|.
name|propRoomNumber
argument_list|()
else|:
name|MESSAGES
operator|.
name|propRoomName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|iLastScrollTop
decl_stmt|,
name|iLastScrollLeft
decl_stmt|;
specifier|public
name|void
name|show
parameter_list|()
block|{
name|UniTimePageLabel
operator|.
name|getInstance
argument_list|()
operator|.
name|setPageName
argument_list|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|?
name|MESSAGES
operator|.
name|pageAddRoom
argument_list|()
else|:
name|MESSAGES
operator|.
name|pageEditRoom
argument_list|()
argument_list|)
expr_stmt|;
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iLastScrollLeft
operator|=
name|Window
operator|.
name|getScrollLeft
argument_list|()
expr_stmt|;
name|iLastScrollTop
operator|=
name|Window
operator|.
name|getScrollTop
argument_list|()
expr_stmt|;
name|onShow
argument_list|()
expr_stmt|;
name|Window
operator|.
name|scrollTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|iMap
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|iMap
operator|.
name|isEnabled
argument_list|()
operator|||
name|iRoom
operator|.
name|hasCoordinates
argument_list|()
condition|)
block|{
name|iMap
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iMap
operator|.
name|onShow
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|iMap
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|List
argument_list|<
name|Widget
argument_list|>
name|line
parameter_list|(
specifier|final
name|RoomPictureInterface
name|picture
parameter_list|)
block|{
name|List
argument_list|<
name|Widget
argument_list|>
name|line
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|Image
name|image
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|picture
operator|.
name|getPictureType
argument_list|()
operator|==
literal|null
operator|||
name|picture
operator|.
name|getPictureType
argument_list|()
operator|.
name|isImage
argument_list|()
condition|)
block|{
name|image
operator|=
operator|new
name|Image
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"picture?id="
operator|+
name|picture
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|image
operator|.
name|addStyleName
argument_list|(
literal|"image"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|image
operator|=
operator|new
name|Image
argument_list|(
name|RESOURCES
operator|.
name|download
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|final
name|ImageLink
name|link
init|=
operator|new
name|ImageLink
argument_list|(
name|image
argument_list|,
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"picture?id="
operator|+
name|picture
operator|.
name|getUniqueId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|picture
operator|.
name|getPictureType
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|picture
operator|.
name|getPictureType
argument_list|()
operator|.
name|isImage
argument_list|()
condition|)
name|link
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|roomPictureLink
argument_list|()
argument_list|)
expr_stmt|;
name|link
operator|.
name|setTitle
argument_list|(
name|picture
operator|.
name|getName
argument_list|()
operator|+
operator|(
name|picture
operator|.
name|getPictureType
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|" ("
operator|+
name|picture
operator|.
name|getPictureType
argument_list|()
operator|.
name|getLabel
argument_list|()
operator|+
literal|")"
operator|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
name|link
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|picture
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|picture
operator|.
name|getType
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangePicture
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangePicture
argument_list|()
condition|)
block|{
specifier|final
name|ListBox
name|type
init|=
operator|new
name|ListBox
argument_list|()
decl_stmt|;
name|type
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
if|if
condition|(
name|picture
operator|.
name|getPictureType
argument_list|()
operator|==
literal|null
condition|)
block|{
name|type
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemSelect
argument_list|()
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
for|for
control|(
name|AttachmentTypeInterface
name|t
range|:
name|iProperties
operator|.
name|getPictureTypes
argument_list|()
control|)
block|{
name|type
operator|.
name|addItem
argument_list|(
name|t
operator|.
name|getLabel
argument_list|()
argument_list|,
name|t
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|type
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|Long
name|id
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|type
operator|.
name|getValue
argument_list|(
name|type
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|picture
operator|.
name|setPictureType
argument_list|(
name|iProperties
operator|.
name|getPictureType
argument_list|(
name|id
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|picture
operator|.
name|getPictureType
argument_list|()
operator|==
literal|null
operator|||
name|picture
operator|.
name|getPictureType
argument_list|()
operator|.
name|isImage
argument_list|()
condition|)
block|{
name|link
operator|.
name|setImage
argument_list|(
operator|new
name|Image
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"picture?id="
operator|+
name|picture
operator|.
name|getUniqueId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|link
operator|.
name|getImage
argument_list|()
operator|.
name|addStyleName
argument_list|(
literal|"image"
argument_list|)
expr_stmt|;
name|link
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|link
operator|.
name|setImage
argument_list|(
operator|new
name|Image
argument_list|(
name|RESOURCES
operator|.
name|download
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|link
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|roomPictureLink
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|link
operator|.
name|setTitle
argument_list|(
name|picture
operator|.
name|getName
argument_list|()
operator|+
operator|(
name|picture
operator|.
name|getPictureType
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|" ("
operator|+
name|picture
operator|.
name|getPictureType
argument_list|()
operator|.
name|getLabel
argument_list|()
operator|+
literal|")"
operator|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
specifier|final
name|AttachmentTypeInterface
name|last
init|=
name|picture
operator|.
name|getPictureType
argument_list|()
decl_stmt|;
for|for
control|(
name|AttachmentTypeInterface
name|t
range|:
name|iProperties
operator|.
name|getPictureTypes
argument_list|()
control|)
block|{
name|type
operator|.
name|addItem
argument_list|(
name|t
operator|.
name|getLabel
argument_list|()
argument_list|,
name|t
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|boolean
name|found
init|=
literal|false
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|type
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|type
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|picture
operator|.
name|getPictureType
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|type
operator|.
name|setSelectedIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|found
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
operator|!
name|found
condition|)
block|{
name|type
operator|.
name|addItem
argument_list|(
name|picture
operator|.
name|getPictureType
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|,
name|picture
operator|.
name|getPictureType
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|type
operator|.
name|setSelectedIndex
argument_list|(
name|type
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|type
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|Long
name|id
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|type
operator|.
name|getValue
argument_list|(
name|type
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|last
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
name|picture
operator|.
name|setPictureType
argument_list|(
name|last
argument_list|)
expr_stmt|;
else|else
name|picture
operator|.
name|setPictureType
argument_list|(
name|iProperties
operator|.
name|getPictureType
argument_list|(
name|id
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|picture
operator|.
name|getPictureType
argument_list|()
operator|==
literal|null
operator|||
name|picture
operator|.
name|getPictureType
argument_list|()
operator|.
name|isImage
argument_list|()
condition|)
block|{
name|link
operator|.
name|setImage
argument_list|(
operator|new
name|Image
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"picture?id="
operator|+
name|picture
operator|.
name|getUniqueId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|link
operator|.
name|getImage
argument_list|()
operator|.
name|addStyleName
argument_list|(
literal|"image"
argument_list|)
expr_stmt|;
name|link
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|link
operator|.
name|setImage
argument_list|(
operator|new
name|Image
argument_list|(
name|RESOURCES
operator|.
name|download
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|link
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|roomPictureLink
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|link
operator|.
name|setTitle
argument_list|(
name|picture
operator|.
name|getName
argument_list|()
operator|+
operator|(
name|picture
operator|.
name|getPictureType
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|" ("
operator|+
name|picture
operator|.
name|getPictureType
argument_list|()
operator|.
name|getLabel
argument_list|()
operator|+
literal|")"
operator|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|line
operator|.
name|add
argument_list|(
name|type
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|picture
operator|.
name|getPictureType
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|picture
operator|.
name|getPictureType
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangePicture
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangePicture
argument_list|()
condition|)
block|{
name|Image
name|remove
init|=
operator|new
name|Image
argument_list|(
name|RESOURCES
operator|.
name|delete
argument_list|()
argument_list|)
decl_stmt|;
name|remove
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|titleDeleteRow
argument_list|()
argument_list|)
expr_stmt|;
name|remove
operator|.
name|addStyleName
argument_list|(
literal|"remove"
argument_list|)
expr_stmt|;
name|remove
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
for|for
control|(
name|int
name|row
init|=
literal|1
init|;
name|row
operator|<
name|iPictures
operator|.
name|getRowCount
argument_list|()
condition|;
name|row
operator|++
control|)
if|if
condition|(
name|picture
operator|.
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
name|iPictures
operator|.
name|getData
argument_list|(
name|row
argument_list|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
condition|)
block|{
name|iPictures
operator|.
name|removeRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
break|break;
block|}
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"update"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|event
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
name|remove
argument_list|)
expr_stmt|;
block|}
return|return
name|line
return|;
block|}
specifier|public
name|boolean
name|validate
parameter_list|()
block|{
name|boolean
name|result
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|||
name|iRoom
operator|.
name|isCanChangeType
argument_list|()
condition|)
block|{
name|Long
name|typeId
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|typeId
operator|<
literal|0
condition|)
block|{
name|iType
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorRoomTypeMustBeSelected
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
literal|false
expr_stmt|;
block|}
for|for
control|(
name|RoomTypeInterface
name|type
range|:
name|iProperties
operator|.
name|getRoomTypes
argument_list|()
control|)
block|{
if|if
condition|(
name|type
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|typeId
argument_list|)
condition|)
name|iRoom
operator|.
name|setRoomType
argument_list|(
name|type
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iRoom
operator|.
name|getRoomType
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iType
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorRoomTypeMustBeSelected
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
literal|false
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|||
name|iRoom
operator|.
name|isCanChangeRoomProperties
argument_list|()
condition|)
block|{
if|if
condition|(
name|iRoom
operator|.
name|getRoomType
argument_list|()
operator|!=
literal|null
operator|&&
name|iRoom
operator|.
name|getRoomType
argument_list|()
operator|.
name|isRoom
argument_list|()
condition|)
block|{
name|Long
name|buildingId
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iBuilding
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iBuilding
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|buildingId
operator|<
literal|0
condition|)
block|{
name|iBuilding
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorBuildingMustBeSelected
argument_list|(
name|iRoom
operator|.
name|getRoomType
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|BuildingInterface
name|building
range|:
name|iProperties
operator|.
name|getBuildings
argument_list|()
control|)
block|{
if|if
condition|(
name|building
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|buildingId
argument_list|)
condition|)
name|iRoom
operator|.
name|setBuilding
argument_list|(
name|building
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iRoom
operator|.
name|getBuilding
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iBuilding
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorBuildingMustBeSelected
argument_list|(
name|iRoom
operator|.
name|getRoomType
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
literal|false
expr_stmt|;
block|}
block|}
block|}
name|iRoom
operator|.
name|setName
argument_list|(
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|getName
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|iRoom
operator|.
name|getRoomType
argument_list|()
operator|!=
literal|null
operator|&&
name|iRoom
operator|.
name|getRoomType
argument_list|()
operator|.
name|isRoom
argument_list|()
condition|)
name|iName
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorRoomNumberIsEmpty
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|iName
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorLocationNameIsEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
literal|false
expr_stmt|;
block|}
name|iRoom
operator|.
name|setDisplayName
argument_list|(
name|iDisplayName
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|iRoom
operator|.
name|setX
argument_list|(
name|iX
operator|.
name|toDouble
argument_list|()
argument_list|)
expr_stmt|;
name|iRoom
operator|.
name|setY
argument_list|(
name|iY
operator|.
name|toDouble
argument_list|()
argument_list|)
expr_stmt|;
name|iRoom
operator|.
name|setArea
argument_list|(
name|iArea
operator|.
name|toDouble
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iProperties
operator|.
name|isCanSeeCourses
argument_list|()
condition|)
name|iRoom
operator|.
name|setIgnoreTooFar
argument_list|(
operator|!
name|iDistanceCheck
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|iRoom
operator|.
name|setIgnoreRoomCheck
argument_list|(
operator|!
name|iRoomCheck
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeExternalId
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeExternalId
argument_list|()
condition|)
block|{
name|iRoom
operator|.
name|setExternalId
argument_list|(
name|iExternalId
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|||
name|iRoom
operator|.
name|isCanChangeCapacity
argument_list|()
condition|)
block|{
name|iRoom
operator|.
name|setCapacity
argument_list|(
name|iCapacity
operator|.
name|getWidget
argument_list|()
operator|.
name|toInteger
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|getCapacity
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iCapacity
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorRoomCapacityIsEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
literal|false
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeControll
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeControll
argument_list|()
condition|)
block|{
name|Long
name|deptId
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iControllingDepartment
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|deptId
operator|<
literal|0
condition|)
block|{
name|iRoom
operator|.
name|setControlDepartment
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iLastControllingDept
operator|!=
literal|null
operator|&&
name|deptId
operator|.
name|equals
argument_list|(
name|iLastControllingDept
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
block|{
name|iRoom
operator|.
name|setControlDepartment
argument_list|(
name|iLastControllingDept
argument_list|)
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|DepartmentInterface
name|dept
range|:
name|iProperties
operator|.
name|getDepartments
argument_list|()
control|)
block|{
if|if
condition|(
name|deptId
operator|.
name|equals
argument_list|(
name|dept
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
name|iRoom
operator|.
name|setControlDepartment
argument_list|(
name|dept
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iRoom
operator|.
name|getControlDepartment
argument_list|()
operator|!=
literal|null
operator|&&
name|iRoomSharing
operator|.
name|getModel
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|boolean
name|hasDepartment
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|iRoomSharing
operator|.
name|getModel
argument_list|()
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|RoomSharingOption
name|opt
range|:
name|iRoomSharing
operator|.
name|getModel
argument_list|()
operator|.
name|getOptions
argument_list|()
control|)
block|{
if|if
condition|(
name|iRoom
operator|.
name|getControlDepartment
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|opt
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
block|{
name|hasDepartment
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
block|}
if|if
condition|(
operator|!
name|hasDepartment
condition|)
block|{
name|iControllingDepartment
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorControllingDepartmentNotAmongRoomSharing
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
literal|false
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|iProperties
operator|.
name|isCanEditRoomExams
argument_list|()
condition|)
block|{
name|iRoom
operator|.
name|getExamTypes
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
for|for
control|(
name|ExamTypeInterface
name|type
range|:
name|iProperties
operator|.
name|getExamTypes
argument_list|()
control|)
block|{
if|if
condition|(
name|iExaminationRooms
operator|.
name|get
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|iRoom
operator|.
name|getExamTypes
argument_list|()
operator|.
name|add
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|iRoom
operator|.
name|setPeriodPreferenceModel
argument_list|(
name|iPeriodPreferences
operator|.
name|get
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|getModel
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeExamStatus
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeExamStatus
argument_list|()
condition|)
block|{
name|iRoom
operator|.
name|setExamCapacity
argument_list|(
name|iExamCapacity
operator|.
name|getWidget
argument_list|()
operator|.
name|toInteger
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|hasExamTypes
argument_list|()
operator|&&
name|iRoom
operator|.
name|getExamCapacity
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iExamCapacity
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorRoomExamCapacityIsEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
literal|false
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeEventProperties
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeEventProperties
argument_list|()
condition|)
block|{
name|Long
name|deptId
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iEventDepartment
operator|.
name|getValue
argument_list|(
name|iEventDepartment
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|deptId
operator|<
literal|0
condition|)
block|{
name|iRoom
operator|.
name|setEventDepartment
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iLastEventDept
operator|!=
literal|null
operator|&&
name|deptId
operator|.
name|equals
argument_list|(
name|iLastEventDept
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
block|{
name|iRoom
operator|.
name|setEventDepartment
argument_list|(
name|iLastEventDept
argument_list|)
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|DepartmentInterface
name|dept
range|:
name|iProperties
operator|.
name|getDepartments
argument_list|()
control|)
block|{
if|if
condition|(
name|deptId
operator|.
name|equals
argument_list|(
name|dept
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
name|iRoom
operator|.
name|setEventDepartment
argument_list|(
name|dept
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iEventStatus
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|==
literal|0
condition|)
name|iRoom
operator|.
name|setEventStatus
argument_list|(
literal|null
argument_list|)
expr_stmt|;
else|else
name|iRoom
operator|.
name|setEventStatus
argument_list|(
name|iEventStatus
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|iRoom
operator|.
name|setEventNote
argument_list|(
name|iNote
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
name|iNote
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iNote
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|2048
condition|)
block|{
name|iNote
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorEventNoteTooLong
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
literal|false
expr_stmt|;
block|}
name|iRoom
operator|.
name|setBreakTime
argument_list|(
name|iBreakTime
operator|.
name|toInteger
argument_list|()
argument_list|)
expr_stmt|;
name|iRoom
operator|.
name|clearServices
argument_list|()
expr_stmt|;
if|if
condition|(
name|iProperties
operator|.
name|hasEventServiceProviders
argument_list|()
operator|&&
name|iRoom
operator|.
name|getEventDepartment
argument_list|()
operator|!=
literal|null
condition|)
for|for
control|(
name|EventServiceProviderInterface
name|service
range|:
name|iProperties
operator|.
name|getEventServiceProviders
argument_list|()
control|)
if|if
condition|(
operator|(
name|service
operator|.
name|getDepartmentId
argument_list|()
operator|==
literal|null
operator|||
name|service
operator|.
name|getDepartmentId
argument_list|()
operator|.
name|equals
argument_list|(
name|iRoom
operator|.
name|getEventDepartment
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
operator|)
operator|&&
name|iServices
operator|.
name|get
argument_list|(
name|service
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|iRoom
operator|.
name|addService
argument_list|(
name|service
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeGroups
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeGroups
argument_list|()
condition|)
block|{
for|for
control|(
name|GroupInterface
name|group
range|:
name|iProperties
operator|.
name|getGroups
argument_list|()
control|)
block|{
if|if
condition|(
name|iGroups
operator|.
name|get
argument_list|(
name|group
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|getValue
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|iRoom
operator|.
name|hasGroup
argument_list|(
name|group
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
name|iRoom
operator|.
name|addGroup
argument_list|(
name|group
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|iRoom
operator|.
name|hasGroup
argument_list|(
name|group
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
name|iRoom
operator|.
name|removeGroup
argument_list|(
name|group
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeFeatures
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeFeatures
argument_list|()
condition|)
block|{
for|for
control|(
name|FeatureInterface
name|feature
range|:
name|iProperties
operator|.
name|getFeatures
argument_list|()
control|)
block|{
if|if
condition|(
name|iFeatures
operator|.
name|get
argument_list|(
name|feature
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|getValue
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|iRoom
operator|.
name|hasFeature
argument_list|(
name|feature
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
name|iRoom
operator|.
name|addFeature
argument_list|(
name|feature
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|iRoom
operator|.
name|hasFeature
argument_list|(
name|feature
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
name|iRoom
operator|.
name|removeFeature
argument_list|(
name|feature
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|iProperties
operator|.
name|isCanEditDepartments
argument_list|()
operator|||
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeAvailability
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeAvailability
argument_list|()
condition|)
block|{
name|iRoom
operator|.
name|setRoomSharingModel
argument_list|(
name|iRoomSharing
operator|.
name|getModel
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeEventAvailability
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeEventAvailability
argument_list|()
condition|)
block|{
name|iRoom
operator|.
name|setEventAvailabilityModel
argument_list|(
name|iEventAvailability
operator|.
name|getModel
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangePicture
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangePicture
argument_list|()
condition|)
block|{
name|iRoom
operator|.
name|getPictures
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iRoom
operator|.
name|getPictures
argument_list|()
operator|.
name|addAll
argument_list|(
name|iPictures
operator|.
name|getData
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|CONSTANTS
operator|.
name|checkRoomHasNoDepartment
argument_list|()
operator|&&
operator|(
name|iProperties
operator|.
name|isCanEditDepartments
argument_list|()
operator|||
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeAvailability
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeAvailability
argument_list|()
operator|)
condition|)
block|{
name|boolean
name|hasDepartment
init|=
operator|(
name|iRoom
operator|.
name|getEventDepartment
argument_list|()
operator|!=
literal|null
operator|)
decl_stmt|;
if|if
condition|(
operator|!
name|hasDepartment
operator|&&
name|iRoomSharing
operator|.
name|getModel
argument_list|()
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|RoomSharingOption
name|opt
range|:
name|iRoomSharing
operator|.
name|getModel
argument_list|()
operator|.
name|getOptions
argument_list|()
control|)
block|{
if|if
condition|(
name|opt
operator|.
name|getId
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hasDepartment
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
block|}
if|if
condition|(
operator|!
name|hasDepartment
condition|)
block|{
name|iRoomSharingHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorRoomHasNoDepartment
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
literal|false
expr_stmt|;
block|}
else|else
name|iRoomSharingHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|void
name|hide
parameter_list|(
name|RoomDetailInterface
name|room
parameter_list|,
name|boolean
name|canShowDetail
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|onHide
argument_list|(
name|room
argument_list|,
name|canShowDetail
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|Window
operator|.
name|scrollTo
argument_list|(
name|iLastScrollLeft
argument_list|,
name|iLastScrollTop
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|onHide
parameter_list|(
name|RoomDetailInterface
name|detail
parameter_list|,
name|boolean
name|canShowDetail
parameter_list|,
name|String
name|message
parameter_list|)
block|{
block|}
specifier|protected
name|void
name|onShow
parameter_list|()
block|{
block|}
specifier|protected
name|String
name|getFutureOperationLabel
parameter_list|(
name|FutureOperation
name|op
parameter_list|)
block|{
switch|switch
condition|(
name|op
condition|)
block|{
case|case
name|ROOM_PROPERTIES
case|:
return|return
name|MESSAGES
operator|.
name|colChangeRoomProperties
argument_list|()
return|;
case|case
name|EXAM_PROPERTIES
case|:
return|return
name|MESSAGES
operator|.
name|colChangeExamProperties
argument_list|()
return|;
case|case
name|EVENT_PROPERTIES
case|:
return|return
name|MESSAGES
operator|.
name|colChangeEventProperties
argument_list|()
return|;
case|case
name|GROUPS
case|:
return|return
name|MESSAGES
operator|.
name|colChangeRoomGroups
argument_list|()
return|;
case|case
name|FEATURES
case|:
return|return
name|MESSAGES
operator|.
name|colChangeRoomFeatures
argument_list|()
return|;
case|case
name|ROOM_SHARING
case|:
return|return
name|MESSAGES
operator|.
name|colChangeRoomSharing
argument_list|()
return|;
case|case
name|EXAM_PREFS
case|:
return|return
name|MESSAGES
operator|.
name|colChangeRoomPeriodPreferences
argument_list|()
return|;
case|case
name|EVENT_AVAILABILITY
case|:
return|return
name|MESSAGES
operator|.
name|colChangeRoomEventAvailability
argument_list|()
return|;
case|case
name|PICTURES
case|:
return|return
name|MESSAGES
operator|.
name|colChangeRoomPictures
argument_list|()
return|;
block|}
return|return
name|op
operator|.
name|name
argument_list|()
return|;
block|}
specifier|protected
name|boolean
name|canFutureOperation
parameter_list|(
name|RoomDetailInterface
name|room
parameter_list|,
name|FutureOperation
name|op
parameter_list|)
block|{
switch|switch
condition|(
name|op
condition|)
block|{
case|case
name|ROOM_PROPERTIES
case|:
return|return
name|iRoom
operator|.
name|getRoomType
argument_list|()
operator|==
literal|null
operator|||
name|iRoom
operator|.
name|isCanChangeType
argument_list|()
operator|||
name|iRoom
operator|.
name|isCanChangeRoomProperties
argument_list|()
operator|||
name|iRoom
operator|.
name|isCanChangeExternalId
argument_list|()
operator|||
name|iRoom
operator|.
name|isCanChangeCapacity
argument_list|()
operator|||
name|iRoom
operator|.
name|isCanChangeControll
argument_list|()
return|;
case|case
name|EXAM_PROPERTIES
case|:
return|return
operator|(
name|iRoom
operator|.
name|getRoomType
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeExamStatus
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeExamStatus
argument_list|()
return|;
case|case
name|EVENT_PROPERTIES
case|:
return|return
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeEventProperties
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeEventProperties
argument_list|()
return|;
case|case
name|GROUPS
case|:
return|return
operator|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeGroups
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeGroups
argument_list|()
operator|)
operator|&&
operator|!
name|iProperties
operator|.
name|getGroups
argument_list|()
operator|.
name|isEmpty
argument_list|()
return|;
case|case
name|FEATURES
case|:
return|return
operator|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeFeatures
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeFeatures
argument_list|()
operator|)
operator|&&
operator|!
name|iProperties
operator|.
name|getFeatures
argument_list|()
operator|.
name|isEmpty
argument_list|()
return|;
case|case
name|ROOM_SHARING
case|:
return|return
name|iProperties
operator|.
name|isCanEditDepartments
argument_list|()
operator|||
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeAvailability
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeAvailability
argument_list|()
return|;
case|case
name|EXAM_PREFS
case|:
return|return
name|iProperties
operator|.
name|isCanEditRoomExams
argument_list|()
return|;
case|case
name|EVENT_AVAILABILITY
case|:
return|return
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangeEventAvailability
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangeEventAvailability
argument_list|()
return|;
case|case
name|PICTURES
case|:
return|return
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|isCanChangePicture
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|isCanChangePicture
argument_list|()
return|;
default|default:
return|return
literal|false
return|;
block|}
block|}
specifier|protected
name|void
name|fillFutureFlags
parameter_list|(
name|RoomUpdateRpcRequest
name|request
parameter_list|,
name|boolean
name|includeWhenNoFlags
parameter_list|)
block|{
name|request
operator|.
name|clearFutureFlags
argument_list|()
expr_stmt|;
if|if
condition|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|hasFutureSessions
argument_list|()
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iApplyTo
operator|.
name|getRowCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|CheckBox
name|ch
init|=
operator|(
name|CheckBox
operator|)
name|iApplyTo
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|ch
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|int
name|flags
init|=
literal|0
decl_stmt|;
for|for
control|(
name|FutureOperation
name|op
range|:
name|FutureOperation
operator|.
name|values
argument_list|()
control|)
block|{
name|CheckBox
name|x
init|=
operator|(
name|CheckBox
operator|)
name|iApplyTo
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|6
operator|+
name|op
operator|.
name|ordinal
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|x
operator|.
name|getValue
argument_list|()
condition|)
name|flags
operator|=
name|op
operator|.
name|set
argument_list|(
name|flags
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|flags
operator|==
literal|0
operator|&&
operator|!
name|includeWhenNoFlags
condition|)
continue|continue;
name|request
operator|.
name|setFutureFlag
argument_list|(
operator|-
name|iApplyTo
operator|.
name|getData
argument_list|(
name|i
argument_list|)
operator|.
name|getSession
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|flags
argument_list|)
expr_stmt|;
name|RoomCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|setFutureFlags
argument_list|(
name|iApplyTo
operator|.
name|getData
argument_list|(
name|i
argument_list|)
operator|.
name|getSession
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|flags
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|RoomCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|setFutureFlags
argument_list|(
name|iApplyTo
operator|.
name|getData
argument_list|(
name|i
argument_list|)
operator|.
name|getSession
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|else if
condition|(
name|iRoom
operator|.
name|hasFutureRooms
argument_list|()
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iApplyTo
operator|.
name|getRowCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|CheckBox
name|ch
init|=
operator|(
name|CheckBox
operator|)
name|iApplyTo
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|ch
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|int
name|flags
init|=
literal|0
decl_stmt|;
for|for
control|(
name|FutureOperation
name|op
range|:
name|FutureOperation
operator|.
name|values
argument_list|()
control|)
block|{
name|CheckBox
name|x
init|=
operator|(
name|CheckBox
operator|)
name|iApplyTo
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|6
operator|+
name|op
operator|.
name|ordinal
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|x
operator|.
name|getValue
argument_list|()
condition|)
name|flags
operator|=
name|op
operator|.
name|set
argument_list|(
name|flags
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|flags
operator|==
literal|0
operator|&&
operator|!
name|includeWhenNoFlags
condition|)
continue|continue;
name|request
operator|.
name|setFutureFlag
argument_list|(
name|iApplyTo
operator|.
name|getData
argument_list|(
name|i
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|,
name|flags
argument_list|)
expr_stmt|;
name|RoomCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|setFutureFlags
argument_list|(
name|iApplyTo
operator|.
name|getData
argument_list|(
name|i
argument_list|)
operator|.
name|getSession
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|flags
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|RoomCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|setFutureFlags
argument_list|(
name|iApplyTo
operator|.
name|getData
argument_list|(
name|i
argument_list|)
operator|.
name|getSession
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|protected
name|String
name|generateAlsoUpdateMessage
parameter_list|(
name|boolean
name|includeWhenNoFlags
parameter_list|)
block|{
if|if
condition|(
operator|(
name|iRoom
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
operator|&&
name|iProperties
operator|.
name|hasFutureSessions
argument_list|()
operator|)
operator|||
name|iRoom
operator|.
name|hasFutureRooms
argument_list|()
condition|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|ret
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iApplyTo
operator|.
name|getRowCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|CheckBox
name|ch
init|=
operator|(
name|CheckBox
operator|)
name|iApplyTo
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|ch
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|int
name|flags
init|=
literal|0
decl_stmt|;
for|for
control|(
name|FutureOperation
name|op
range|:
name|FutureOperation
operator|.
name|values
argument_list|()
control|)
block|{
name|CheckBox
name|x
init|=
operator|(
name|CheckBox
operator|)
name|iApplyTo
operator|.
name|getWidget
argument_list|(
name|i
argument_list|,
literal|6
operator|+
name|op
operator|.
name|ordinal
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|x
operator|.
name|getValue
argument_list|()
condition|)
name|flags
operator|=
name|op
operator|.
name|set
argument_list|(
name|flags
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|flags
operator|==
literal|0
operator|&&
operator|!
name|includeWhenNoFlags
condition|)
continue|continue;
name|ret
operator|.
name|add
argument_list|(
name|iApplyTo
operator|.
name|getData
argument_list|(
name|i
argument_list|)
operator|.
name|getSession
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|ret
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
name|ToolBox
operator|.
name|toString
argument_list|(
name|ret
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
class|class
name|FutureRoomNameCell
extends|extends
name|Label
block|{
name|FutureRoomNameCell
parameter_list|(
specifier|final
name|FutureRoomInterface
name|room
parameter_list|)
block|{
name|super
argument_list|(
name|room
operator|.
name|hasDisplayName
argument_list|()
condition|?
name|MESSAGES
operator|.
name|label
argument_list|(
name|room
operator|.
name|getLabel
argument_list|()
argument_list|,
name|room
operator|.
name|getDisplayName
argument_list|()
argument_list|)
else|:
name|room
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|addMouseOverHandler
argument_list|(
operator|new
name|MouseOverHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseOver
parameter_list|(
name|MouseOverEvent
name|event
parameter_list|)
block|{
name|RoomHint
operator|.
name|showHint
argument_list|(
name|FutureRoomNameCell
operator|.
name|this
operator|.
name|getElement
argument_list|()
argument_list|,
name|room
operator|.
name|getId
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|addMouseOutHandler
argument_list|(
operator|new
name|MouseOutHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseOut
parameter_list|(
name|MouseOutEvent
name|event
parameter_list|)
block|{
name|RoomHint
operator|.
name|hideHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|roomCheckChanged
parameter_list|()
block|{
name|iRoomCheck
operator|.
name|setHTML
argument_list|(
name|iRoomCheck
operator|.
name|getValue
argument_list|()
condition|?
name|MESSAGES
operator|.
name|infoRoomCheckOn
argument_list|()
else|:
name|MESSAGES
operator|.
name|infoRoomCheckOff
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iRoomCheck
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|iRoomCheck
operator|.
name|addStyleName
argument_list|(
literal|"check-enabled"
argument_list|)
expr_stmt|;
name|iRoomCheck
operator|.
name|removeStyleName
argument_list|(
literal|"check-disabled"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iRoomCheck
operator|.
name|addStyleName
argument_list|(
literal|"check-disabled"
argument_list|)
expr_stmt|;
name|iRoomCheck
operator|.
name|removeStyleName
argument_list|(
literal|"check-enabled"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|distanceCheckChanged
parameter_list|()
block|{
name|iDistanceCheck
operator|.
name|setHTML
argument_list|(
name|iDistanceCheck
operator|.
name|getValue
argument_list|()
condition|?
name|MESSAGES
operator|.
name|infoDistanceCheckOn
argument_list|()
else|:
name|MESSAGES
operator|.
name|infoDistanceCheckOff
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iDistanceCheck
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|iDistanceCheck
operator|.
name|addStyleName
argument_list|(
literal|"check-enabled"
argument_list|)
expr_stmt|;
name|iDistanceCheck
operator|.
name|removeStyleName
argument_list|(
literal|"check-disabled"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iDistanceCheck
operator|.
name|addStyleName
argument_list|(
literal|"check-disabled"
argument_list|)
expr_stmt|;
name|iDistanceCheck
operator|.
name|removeStyleName
argument_list|(
literal|"check-enabled"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

