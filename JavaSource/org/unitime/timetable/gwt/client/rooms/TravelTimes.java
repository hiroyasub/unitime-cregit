begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 (University Timetabling Application)  * Copyright (C) 2012, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|rooms
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
operator|.
name|RoomFilterBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcImplementedBy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|AcademicSessionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|FilterRpcResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|BlurEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|BlurHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|FocusEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|FocusHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|HasMouseDownHandlers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyCodes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyDownEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyDownHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseDownEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseDownHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|DOM
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|IsSerializable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|AbsolutePanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FlexTable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHorizontalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasVerticalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HorizontalPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|PopupPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ScrollPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextBox
import|;
end_import

begin_class
specifier|public
class|class
name|TravelTimes
extends|extends
name|Composite
block|{
specifier|private
specifier|static
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|SimpleForm
name|iForm
decl_stmt|;
specifier|private
name|Matrix
name|iMatrix
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iHeader
decl_stmt|,
name|iFooter
decl_stmt|;
specifier|private
name|RoomFilterBox
name|iRoomFilter
decl_stmt|;
specifier|private
name|Button
name|iShow
decl_stmt|;
specifier|public
name|TravelTimes
parameter_list|()
block|{
name|iForm
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|iHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
literal|"Travel time in minutes"
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"save"
argument_list|,
literal|"<u>S</u>ave"
argument_list|,
literal|'s'
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iHeader
operator|.
name|showLoading
argument_list|()
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|TravelTimesRequest
operator|.
name|saveRooms
argument_list|(
name|iMatrix
operator|.
name|getRooms
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|TravelTimeResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
literal|"Failed to save the matrix: "
operator|+
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|TravelTimeResponse
name|result
parameter_list|)
block|{
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iMatrix
operator|.
name|onSaveChanges
argument_list|()
expr_stmt|;
name|iMatrix
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"save"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"back"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"edit"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iShow
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"back"
argument_list|,
literal|"<u>B</u>ack"
argument_list|,
literal|'b'
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iMatrix
operator|.
name|onCancelChanges
argument_list|()
expr_stmt|;
name|iMatrix
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"save"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"back"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"edit"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iShow
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"edit"
argument_list|,
literal|"<u>E</u>dit"
argument_list|,
literal|'e'
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iMatrix
operator|.
name|setEditable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"save"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"back"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"edit"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iShow
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"save"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"back"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"edit"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iRoomFilter
operator|=
operator|new
name|RoomFilterBox
argument_list|(
operator|new
name|Session
argument_list|()
argument_list|)
expr_stmt|;
name|iRoomFilter
operator|.
name|setValue
argument_list|(
literal|"department:Managed"
argument_list|)
expr_stmt|;
name|HorizontalPanel
name|hp
init|=
operator|new
name|HorizontalPanel
argument_list|()
decl_stmt|;
name|hp
operator|.
name|setSpacing
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|Label
name|label
init|=
operator|new
name|Label
argument_list|(
literal|"Filter:"
argument_list|)
decl_stmt|;
name|hp
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|hp
operator|.
name|setCellVerticalAlignment
argument_list|(
name|label
argument_list|,
name|HasVerticalAlignment
operator|.
name|ALIGN_MIDDLE
argument_list|)
expr_stmt|;
name|hp
operator|.
name|add
argument_list|(
name|iRoomFilter
argument_list|)
expr_stmt|;
name|iShow
operator|=
operator|new
name|Button
argument_list|(
literal|"Show"
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iHeader
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"edit"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iMatrix
operator|.
name|clear
argument_list|()
expr_stmt|;
name|LoadingWidget
operator|.
name|showLoading
argument_list|(
literal|"Loading travel times..."
argument_list|)
expr_stmt|;
name|iRoomFilter
operator|.
name|getElements
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|FilterRpcResponse
operator|.
name|Entity
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|hideLoading
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
literal|"Failed to load rooms: "
operator|+
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|List
argument_list|<
name|FilterRpcResponse
operator|.
name|Entity
argument_list|>
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|==
literal|null
operator|||
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|LoadingWidget
operator|.
name|hideLoading
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
literal|"There are no rooms are matching the filter."
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|result
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
block|{
name|LoadingWidget
operator|.
name|hideLoading
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
literal|"There is only one room matching the filter."
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|TravelTimesRequest
name|request
init|=
name|TravelTimesRequest
operator|.
name|loadRooms
argument_list|()
decl_stmt|;
for|for
control|(
name|FilterRpcResponse
operator|.
name|Entity
name|e
range|:
name|result
control|)
block|{
name|request
operator|.
name|addRoom
argument_list|(
operator|new
name|Room
argument_list|(
name|e
operator|.
name|getUniqueId
argument_list|()
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|RPC
operator|.
name|execute
argument_list|(
name|request
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|TravelTimeResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|hideLoading
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
literal|"Failed to load the matrix: "
operator|+
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|TravelTimeResponse
name|result
parameter_list|)
block|{
name|iFooter
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|hideLoading
argument_list|()
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|hasRooms
argument_list|()
condition|)
block|{
name|iMatrix
operator|.
name|init
argument_list|(
name|result
operator|.
name|getRooms
argument_list|()
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iMatrix
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"edit"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
literal|"Failed to load the matrix: there are no rooms."
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|hp
operator|.
name|add
argument_list|(
name|iShow
argument_list|)
expr_stmt|;
name|hp
operator|.
name|setCellVerticalAlignment
argument_list|(
name|iShow
argument_list|,
name|HasVerticalAlignment
operator|.
name|ALIGN_MIDDLE
argument_list|)
expr_stmt|;
name|iShow
operator|.
name|setWidth
argument_list|(
literal|"75px"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|hp
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iHeader
argument_list|)
expr_stmt|;
name|iMatrix
operator|=
operator|new
name|Matrix
argument_list|()
expr_stmt|;
name|ScrollPanel
name|scroll
init|=
operator|new
name|ScrollPanel
argument_list|(
name|iMatrix
argument_list|)
decl_stmt|;
name|scroll
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"max-width"
argument_list|,
operator|(
name|Window
operator|.
name|getClientWidth
argument_list|()
operator|-
literal|100
operator|)
operator|+
literal|"px"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|scroll
argument_list|)
expr_stmt|;
name|iFooter
operator|=
name|iHeader
operator|.
name|clonePanel
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addBottomRow
argument_list|(
name|iFooter
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|initWidget
argument_list|(
name|iForm
argument_list|)
expr_stmt|;
comment|/* 		iHeader.showLoading(); 		RPC.execute(TravelTimesRequest.loadRooms(), new AsyncCallback<TravelTimeResponse>() {  			@Override 			public void onFailure(Throwable caught) { 				iHeader.setErrorMessage("Failed to load the matrix: " + caught.getMessage()); 				ToolBox.checkAccess(caught); 			}  			@Override 			public void onSuccess(TravelTimeResponse result) { 				if (result.hasRooms()) { 					iMatrix.init(result.getRooms()); 					iHeader.clearMessage(); 					iMatrix.setEditable(false); 					iHeader.setEnabled("edit", true); 				} else { 					iHeader.setErrorMessage("Failed to load the matrix: there are no rooms."); 				} 			} 		}); 		*/
block|}
specifier|public
specifier|static
class|class
name|P
extends|extends
name|AbsolutePanel
implements|implements
name|HasMouseDownHandlers
block|{
specifier|private
name|String
name|iCaption
decl_stmt|;
specifier|private
name|P
parameter_list|(
name|String
name|caption
parameter_list|,
name|String
modifier|...
name|styles
parameter_list|)
block|{
name|iCaption
operator|=
name|caption
expr_stmt|;
if|if
condition|(
name|caption
operator|!=
literal|null
condition|)
name|getElement
argument_list|()
operator|.
name|setInnerHTML
argument_list|(
name|caption
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|style
range|:
name|styles
control|)
if|if
condition|(
name|style
operator|!=
literal|null
operator|&&
operator|!
name|style
operator|.
name|isEmpty
argument_list|()
condition|)
name|addStyleName
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|sinkEvents
argument_list|(
name|Event
operator|.
name|ONMOUSEDOWN
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onBrowserEvent
parameter_list|(
name|Event
name|event
parameter_list|)
block|{
switch|switch
condition|(
name|DOM
operator|.
name|eventGetType
argument_list|(
name|event
argument_list|)
condition|)
block|{
case|case
name|Event
operator|.
name|ONMOUSEDOWN
case|:
name|MouseDownEvent
operator|.
name|fireNativeEvent
argument_list|(
name|event
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|event
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
name|event
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addMouseDownHandler
parameter_list|(
name|MouseDownHandler
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|MouseDownEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|String
name|getCaption
parameter_list|()
block|{
return|return
name|iCaption
return|;
block|}
block|}
specifier|private
class|class
name|Matrix
extends|extends
name|FlexTable
block|{
specifier|private
name|List
argument_list|<
name|Room
argument_list|>
name|iRooms
decl_stmt|;
specifier|public
name|Matrix
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|setStyleName
argument_list|(
literal|"unitime-TravelTimes"
argument_list|)
expr_stmt|;
name|setCellPadding
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|setCellSpacing
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|clear
parameter_list|()
block|{
for|for
control|(
name|int
name|row
init|=
name|getRowCount
argument_list|()
operator|-
literal|1
init|;
name|row
operator|>=
literal|0
condition|;
name|row
operator|--
control|)
name|removeRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|init
parameter_list|(
name|List
argument_list|<
name|Room
argument_list|>
name|rooms
parameter_list|)
block|{
name|iRooms
operator|=
name|rooms
expr_stmt|;
name|clear
argument_list|()
expr_stmt|;
name|int
name|col
init|=
literal|1
decl_stmt|;
name|int
name|row
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Room
name|room
range|:
name|getRooms
argument_list|()
control|)
block|{
name|setWidget
argument_list|(
name|row
argument_list|,
name|col
argument_list|,
operator|new
name|P
argument_list|(
name|room
operator|.
name|getName
argument_list|()
argument_list|,
literal|"horizontal-header"
argument_list|)
argument_list|)
expr_stmt|;
name|getCellFormatter
argument_list|()
operator|.
name|setVerticalAlignment
argument_list|(
name|row
argument_list|,
name|col
argument_list|,
name|HasVerticalAlignment
operator|.
name|ALIGN_BOTTOM
argument_list|)
expr_stmt|;
name|col
operator|++
expr_stmt|;
block|}
name|boolean
name|rMark
init|=
literal|false
decl_stmt|;
name|Building
name|prev
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Room
name|room
range|:
name|getRooms
argument_list|()
control|)
block|{
name|row
operator|++
expr_stmt|;
name|col
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|row
operator|>
literal|1
condition|)
if|if
condition|(
name|prev
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|room
operator|.
name|getBuilding
argument_list|()
operator|!=
literal|null
condition|)
name|rMark
operator|=
operator|!
name|rMark
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
operator|!
name|prev
operator|.
name|equals
argument_list|(
name|room
operator|.
name|getBuilding
argument_list|()
argument_list|)
condition|)
block|{
name|rMark
operator|=
operator|!
name|rMark
expr_stmt|;
block|}
block|}
name|setWidget
argument_list|(
name|row
argument_list|,
name|col
argument_list|,
operator|new
name|P
argument_list|(
name|room
operator|.
name|getName
argument_list|()
argument_list|,
literal|"vertical-header"
argument_list|)
argument_list|)
expr_stmt|;
name|getCellFormatter
argument_list|()
operator|.
name|setHorizontalAlignment
argument_list|(
name|row
argument_list|,
name|col
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|col
operator|++
expr_stmt|;
name|Building
name|otherPrev
init|=
literal|null
decl_stmt|;
name|boolean
name|cMark
init|=
literal|false
decl_stmt|;
for|for
control|(
name|Room
name|other
range|:
name|getRooms
argument_list|()
control|)
block|{
if|if
condition|(
name|col
operator|>
literal|1
condition|)
if|if
condition|(
name|otherPrev
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|getBuilding
argument_list|()
operator|!=
literal|null
condition|)
name|cMark
operator|=
operator|!
name|cMark
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
operator|!
name|otherPrev
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getBuilding
argument_list|()
argument_list|)
condition|)
name|cMark
operator|=
operator|!
name|cMark
expr_stmt|;
block|}
if|if
condition|(
name|row
operator|==
name|col
condition|)
block|{
name|setWidget
argument_list|(
name|row
argument_list|,
name|col
argument_list|,
operator|new
name|Time
argument_list|(
name|row
argument_list|,
name|col
argument_list|)
argument_list|)
expr_stmt|;
name|col
operator|++
expr_stmt|;
block|}
else|else
block|{
name|Time
name|cell
init|=
operator|new
name|Time
argument_list|(
name|row
argument_list|,
name|col
argument_list|,
name|room
argument_list|,
name|other
argument_list|)
decl_stmt|;
if|if
condition|(
name|row
operator|>
name|col
condition|)
block|{
name|cell
operator|.
name|setOther
argument_list|(
operator|(
name|Time
operator|)
name|getWidget
argument_list|(
name|col
argument_list|,
name|row
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|rMark
condition|)
name|cell
operator|.
name|addStyleName
argument_list|(
literal|"mark"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|cMark
condition|)
name|cell
operator|.
name|addStyleName
argument_list|(
literal|"mark"
argument_list|)
expr_stmt|;
block|}
name|setWidget
argument_list|(
name|row
argument_list|,
name|col
operator|++
argument_list|,
name|cell
argument_list|)
expr_stmt|;
block|}
name|otherPrev
operator|=
name|other
operator|.
name|getBuilding
argument_list|()
expr_stmt|;
block|}
name|prev
operator|=
name|room
operator|.
name|getBuilding
argument_list|()
expr_stmt|;
name|setWidget
argument_list|(
name|row
argument_list|,
name|col
argument_list|,
operator|new
name|P
argument_list|(
name|room
operator|.
name|getName
argument_list|()
argument_list|,
literal|"vertical-header"
argument_list|)
argument_list|)
expr_stmt|;
name|getCellFormatter
argument_list|()
operator|.
name|setHorizontalAlignment
argument_list|(
name|row
argument_list|,
name|col
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_LEFT
argument_list|)
expr_stmt|;
block|}
name|col
operator|=
literal|1
expr_stmt|;
name|row
operator|++
expr_stmt|;
for|for
control|(
name|Room
name|room
range|:
name|getRooms
argument_list|()
control|)
block|{
name|setWidget
argument_list|(
name|row
argument_list|,
name|col
argument_list|,
operator|new
name|P
argument_list|(
name|room
operator|.
name|getName
argument_list|()
argument_list|,
literal|"horizontal-header"
argument_list|)
argument_list|)
expr_stmt|;
name|getCellFormatter
argument_list|()
operator|.
name|setVerticalAlignment
argument_list|(
name|row
argument_list|,
name|col
argument_list|,
name|HasVerticalAlignment
operator|.
name|ALIGN_TOP
argument_list|)
expr_stmt|;
name|col
operator|++
expr_stmt|;
block|}
block|}
specifier|public
name|List
argument_list|<
name|Room
argument_list|>
name|getRooms
parameter_list|()
block|{
return|return
name|iRooms
return|;
block|}
specifier|public
name|void
name|setEditable
parameter_list|(
name|boolean
name|editable
parameter_list|)
block|{
for|for
control|(
name|int
name|row
init|=
literal|1
init|;
name|row
operator|<
name|getRowCount
argument_list|()
operator|-
literal|1
condition|;
name|row
operator|++
control|)
for|for
control|(
name|int
name|col
init|=
literal|1
init|;
name|col
operator|<
name|getCellCount
argument_list|(
name|row
argument_list|)
operator|-
literal|1
condition|;
name|col
operator|++
control|)
block|{
name|Time
name|time
init|=
operator|(
name|Time
operator|)
name|getWidget
argument_list|(
name|row
argument_list|,
name|col
argument_list|)
decl_stmt|;
if|if
condition|(
name|editable
condition|)
block|{
name|time
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|clearBorderColor
argument_list|()
expr_stmt|;
name|time
operator|.
name|setReadOnly
argument_list|(
name|row
operator|==
name|col
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|time
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setBorderColor
argument_list|(
literal|"transparent"
argument_list|)
expr_stmt|;
name|time
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|onCancelChanges
parameter_list|()
block|{
for|for
control|(
name|int
name|row
init|=
literal|1
init|;
name|row
operator|<
name|getRowCount
argument_list|()
operator|-
literal|1
condition|;
name|row
operator|++
control|)
for|for
control|(
name|int
name|col
init|=
literal|1
init|;
name|col
operator|<
name|getCellCount
argument_list|(
name|row
argument_list|)
operator|-
literal|1
condition|;
name|col
operator|++
control|)
block|{
name|Time
name|time
init|=
operator|(
name|Time
operator|)
name|getWidget
argument_list|(
name|row
argument_list|,
name|col
argument_list|)
decl_stmt|;
name|time
operator|.
name|onCancelChanges
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|onSaveChanges
parameter_list|()
block|{
for|for
control|(
name|int
name|row
init|=
literal|1
init|;
name|row
operator|<
name|getRowCount
argument_list|()
operator|-
literal|1
condition|;
name|row
operator|++
control|)
for|for
control|(
name|int
name|col
init|=
literal|1
init|;
name|col
operator|<
name|getCellCount
argument_list|(
name|row
argument_list|)
operator|-
literal|1
condition|;
name|col
operator|++
control|)
block|{
name|Time
name|time
init|=
operator|(
name|Time
operator|)
name|getWidget
argument_list|(
name|row
argument_list|,
name|col
argument_list|)
decl_stmt|;
name|time
operator|.
name|onSaveChanges
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|KeyDownHandler
name|iKeyDownHandler
init|=
operator|new
name|KeyDownHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyDown
parameter_list|(
name|KeyDownEvent
name|event
parameter_list|)
block|{
name|Time
name|time
init|=
operator|(
name|Time
operator|)
name|event
operator|.
name|getSource
argument_list|()
decl_stmt|;
if|if
condition|(
name|time
operator|.
name|isReadOnly
argument_list|()
operator|||
operator|!
name|time
operator|.
name|isEnabled
argument_list|()
condition|)
return|return;
name|int
name|row
init|=
name|time
operator|.
name|getRow
argument_list|()
decl_stmt|;
name|int
name|col
init|=
name|time
operator|.
name|getColumn
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
condition|)
block|{
case|case
name|KeyCodes
operator|.
name|KEY_DOWN
case|:
while|while
condition|(
literal|true
condition|)
block|{
name|row
operator|++
expr_stmt|;
if|if
condition|(
name|row
operator|>
name|iMatrix
operator|.
name|getRowCount
argument_list|()
operator|-
literal|2
condition|)
block|{
name|row
operator|=
literal|1
expr_stmt|;
name|col
operator|++
expr_stmt|;
if|if
condition|(
name|col
operator|>
name|iMatrix
operator|.
name|getCellCount
argument_list|(
name|row
argument_list|)
operator|-
literal|2
condition|)
name|col
operator|=
literal|1
expr_stmt|;
block|}
name|Time
name|t
init|=
operator|(
name|Time
operator|)
name|iMatrix
operator|.
name|getWidget
argument_list|(
name|row
argument_list|,
name|col
argument_list|)
decl_stmt|;
if|if
condition|(
name|t
operator|.
name|isEnabled
argument_list|()
operator|&&
operator|!
name|t
operator|.
name|isReadOnly
argument_list|()
condition|)
block|{
name|t
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|t
operator|.
name|selectAll
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
name|time
operator|.
name|cancelKey
argument_list|()
expr_stmt|;
return|return;
case|case
name|KeyCodes
operator|.
name|KEY_UP
case|:
while|while
condition|(
literal|true
condition|)
block|{
name|row
operator|--
expr_stmt|;
if|if
condition|(
name|row
operator|<=
literal|0
condition|)
block|{
name|row
operator|=
name|iMatrix
operator|.
name|getRowCount
argument_list|()
operator|-
literal|2
expr_stmt|;
name|col
operator|--
expr_stmt|;
if|if
condition|(
name|col
operator|<=
literal|0
condition|)
name|col
operator|=
name|iMatrix
operator|.
name|getCellCount
argument_list|(
name|row
argument_list|)
operator|-
literal|2
expr_stmt|;
block|}
name|Time
name|t
init|=
operator|(
name|Time
operator|)
name|iMatrix
operator|.
name|getWidget
argument_list|(
name|row
argument_list|,
name|col
argument_list|)
decl_stmt|;
if|if
condition|(
name|t
operator|.
name|isEnabled
argument_list|()
operator|&&
operator|!
name|t
operator|.
name|isReadOnly
argument_list|()
condition|)
block|{
name|t
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|t
operator|.
name|selectAll
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
name|time
operator|.
name|cancelKey
argument_list|()
expr_stmt|;
return|return;
case|case
name|KeyCodes
operator|.
name|KEY_LEFT
case|:
while|while
condition|(
literal|true
condition|)
block|{
name|col
operator|--
expr_stmt|;
if|if
condition|(
name|col
operator|<=
literal|0
condition|)
block|{
name|col
operator|=
name|iMatrix
operator|.
name|getCellCount
argument_list|(
name|row
argument_list|)
operator|-
literal|2
expr_stmt|;
name|row
operator|--
expr_stmt|;
if|if
condition|(
name|row
operator|<=
literal|0
condition|)
name|row
operator|=
name|iMatrix
operator|.
name|getRowCount
argument_list|()
operator|-
literal|2
expr_stmt|;
block|}
name|Time
name|t
init|=
operator|(
name|Time
operator|)
name|iMatrix
operator|.
name|getWidget
argument_list|(
name|row
argument_list|,
name|col
argument_list|)
decl_stmt|;
if|if
condition|(
name|t
operator|.
name|isEnabled
argument_list|()
operator|&&
operator|!
name|t
operator|.
name|isReadOnly
argument_list|()
condition|)
block|{
name|t
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|t
operator|.
name|selectAll
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
name|time
operator|.
name|cancelKey
argument_list|()
expr_stmt|;
return|return;
case|case
name|KeyCodes
operator|.
name|KEY_RIGHT
case|:
while|while
condition|(
literal|true
condition|)
block|{
name|col
operator|++
expr_stmt|;
if|if
condition|(
name|col
operator|>
name|iMatrix
operator|.
name|getCellCount
argument_list|(
name|row
argument_list|)
operator|-
literal|2
condition|)
block|{
name|col
operator|=
literal|1
expr_stmt|;
name|row
operator|++
expr_stmt|;
if|if
condition|(
name|row
operator|>
name|iMatrix
operator|.
name|getRowCount
argument_list|()
operator|-
literal|2
condition|)
name|row
operator|=
literal|1
expr_stmt|;
block|}
name|Time
name|t
init|=
operator|(
name|Time
operator|)
name|iMatrix
operator|.
name|getWidget
argument_list|(
name|row
argument_list|,
name|col
argument_list|)
decl_stmt|;
if|if
condition|(
name|t
operator|.
name|isEnabled
argument_list|()
operator|&&
operator|!
name|t
operator|.
name|isReadOnly
argument_list|()
condition|)
block|{
name|t
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|t
operator|.
name|selectAll
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
name|time
operator|.
name|cancelKey
argument_list|()
expr_stmt|;
return|return;
block|}
block|}
block|}
decl_stmt|;
specifier|private
name|KeyPressHandler
name|iKeyPressHandler
init|=
operator|new
name|KeyPressHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
name|KeyPressEvent
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|Character
operator|.
name|isDigit
argument_list|(
name|event
operator|.
name|getCharCode
argument_list|()
argument_list|)
operator|&&
name|event
operator|.
name|getUnicodeCharCode
argument_list|()
operator|!=
literal|0
condition|)
operator|(
operator|(
name|TextBox
operator|)
name|event
operator|.
name|getSource
argument_list|()
operator|)
operator|.
name|cancelKey
argument_list|()
expr_stmt|;
block|}
block|}
decl_stmt|;
specifier|public
class|class
name|Time
extends|extends
name|TextBox
block|{
specifier|private
name|Time
name|iOther
init|=
literal|null
decl_stmt|;
specifier|private
name|int
name|iRow
decl_stmt|,
name|iCol
decl_stmt|;
specifier|private
name|Room
name|iR1
decl_stmt|,
name|iR2
decl_stmt|;
specifier|private
name|boolean
name|iDefault
init|=
literal|false
decl_stmt|;
specifier|private
name|Integer
name|iInitialTravel
init|=
literal|null
decl_stmt|;
specifier|public
name|Time
parameter_list|(
name|int
name|row
parameter_list|,
name|int
name|col
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|iRow
operator|=
name|row
expr_stmt|;
name|iCol
operator|=
name|col
expr_stmt|;
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setStyleName
argument_list|(
literal|"gwt-SuggestBox"
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
literal|"cell"
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
literal|"disabled"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Time
parameter_list|(
name|int
name|row
parameter_list|,
name|int
name|col
parameter_list|,
name|Room
name|r1
parameter_list|,
name|Room
name|r2
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|iRow
operator|=
name|row
expr_stmt|;
name|iCol
operator|=
name|col
expr_stmt|;
name|setStyleName
argument_list|(
literal|"gwt-SuggestBox"
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
literal|"cell"
argument_list|)
expr_stmt|;
name|iR1
operator|=
name|r1
expr_stmt|;
name|iR2
operator|=
name|r2
expr_stmt|;
name|iInitialTravel
operator|=
name|r1
operator|.
name|getTravelTime
argument_list|(
name|r2
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iInitialTravel
operator|==
literal|null
condition|)
block|{
name|Integer
name|distance
init|=
name|r1
operator|.
name|getDistance
argument_list|(
name|r2
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|distance
operator|!=
literal|null
condition|)
block|{
name|setValue
argument_list|(
name|distance
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|iDefault
operator|=
literal|true
expr_stmt|;
name|addStyleName
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|setValue
argument_list|(
name|iInitialTravel
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|final
name|PopupPanel
name|popup
init|=
operator|new
name|PopupPanel
argument_list|(
literal|true
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|popup
operator|.
name|setStyleName
argument_list|(
literal|"unitime-PopupHint"
argument_list|)
expr_stmt|;
name|popup
operator|.
name|add
argument_list|(
operator|new
name|P
argument_list|(
name|r1
operator|.
name|getName
argument_list|()
operator|+
literal|"&harr; "
operator|+
name|r2
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addFocusHandler
argument_list|(
operator|new
name|FocusHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFocus
parameter_list|(
name|FocusEvent
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|popup
operator|.
name|isShowing
argument_list|()
condition|)
name|popup
operator|.
name|showRelativeTo
argument_list|(
name|Time
operator|.
name|this
argument_list|)
expr_stmt|;
if|if
condition|(
name|iDefault
condition|)
name|removeStyleName
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|addBlurHandler
argument_list|(
operator|new
name|BlurHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onBlur
parameter_list|(
name|BlurEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|popup
operator|.
name|isShowing
argument_list|()
condition|)
name|popup
operator|.
name|hide
argument_list|()
expr_stmt|;
if|if
condition|(
name|iDefault
condition|)
name|addStyleName
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|setMaxLength
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|addKeyDownHandler
argument_list|(
name|iKeyDownHandler
argument_list|)
expr_stmt|;
name|addKeyPressHandler
argument_list|(
name|iKeyPressHandler
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onCancelChanges
parameter_list|()
block|{
if|if
condition|(
name|iRow
operator|==
name|iCol
condition|)
return|return;
name|iR1
operator|.
name|setTravelTime
argument_list|(
name|iR2
argument_list|,
name|iInitialTravel
argument_list|)
expr_stmt|;
if|if
condition|(
name|iInitialTravel
operator|==
literal|null
condition|)
block|{
name|Integer
name|distance
init|=
name|iR1
operator|.
name|getDistance
argument_list|(
name|iR2
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|distance
operator|!=
literal|null
condition|)
block|{
name|setValue
argument_list|(
name|distance
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|iDefault
operator|=
literal|true
expr_stmt|;
name|addStyleName
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|setValue
argument_list|(
name|iInitialTravel
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|onSaveChanges
parameter_list|()
block|{
if|if
condition|(
name|iRow
operator|==
name|iCol
condition|)
return|return;
name|iInitialTravel
operator|=
name|iR1
operator|.
name|getTravelTime
argument_list|(
name|iR2
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|onChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|Integer
name|travel
init|=
literal|null
decl_stmt|;
try|try
block|{
if|if
condition|(
operator|!
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|travel
operator|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
name|iR1
operator|.
name|setTravelTime
argument_list|(
name|iR2
argument_list|,
name|travel
argument_list|)
expr_stmt|;
if|if
condition|(
name|travel
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|iDefault
condition|)
block|{
name|iDefault
operator|=
literal|false
expr_stmt|;
name|removeStyleName
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|Integer
name|distance
init|=
name|iR1
operator|.
name|getDistance
argument_list|(
name|iR2
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|distance
operator|!=
literal|null
condition|)
block|{
name|setValue
argument_list|(
name|distance
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|iDefault
operator|=
literal|true
expr_stmt|;
name|addStyleName
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|int
name|getRow
parameter_list|()
block|{
return|return
name|iRow
return|;
block|}
specifier|public
name|int
name|getColumn
parameter_list|()
block|{
return|return
name|iCol
return|;
block|}
specifier|public
name|void
name|setOther
parameter_list|(
name|Time
name|other
parameter_list|)
block|{
name|iOther
operator|=
name|other
expr_stmt|;
name|iOther
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|setValue
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|iOther
operator|.
name|onChange
argument_list|(
name|event
argument_list|)
expr_stmt|;
name|onChange
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|other
operator|.
name|iOther
operator|=
name|this
expr_stmt|;
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|iOther
operator|.
name|setValue
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|iOther
operator|.
name|onChange
argument_list|(
name|event
argument_list|)
expr_stmt|;
name|onChange
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Room
name|getFirstRoom
parameter_list|()
block|{
return|return
name|iR1
return|;
block|}
specifier|public
name|Room
name|getSecondRoom
parameter_list|()
block|{
return|return
name|iR2
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|Building
implements|implements
name|IsSerializable
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iName
decl_stmt|;
specifier|public
name|Building
parameter_list|()
block|{
block|}
specifier|public
name|Building
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|Building
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|Building
operator|)
name|o
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|Room
implements|implements
name|IsSerializable
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iName
decl_stmt|;
specifier|private
name|Building
name|iBuilding
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Long
argument_list|,
name|Integer
argument_list|>
name|iTravelTimes
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Long
argument_list|,
name|Integer
argument_list|>
name|iDistances
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
specifier|public
name|Room
parameter_list|()
block|{
block|}
specifier|public
name|Room
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|this
argument_list|(
name|id
argument_list|,
name|name
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Room
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|name
parameter_list|,
name|Building
name|building
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
name|iName
operator|=
name|name
expr_stmt|;
name|iBuilding
operator|=
name|building
expr_stmt|;
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|boolean
name|hasBuilding
parameter_list|()
block|{
return|return
name|iBuilding
operator|!=
literal|null
return|;
block|}
specifier|public
name|Building
name|getBuilding
parameter_list|()
block|{
return|return
name|iBuilding
return|;
block|}
specifier|public
name|Integer
name|getTravelTime
parameter_list|(
name|Long
name|roomId
parameter_list|)
block|{
return|return
name|iTravelTimes
operator|.
name|get
argument_list|(
name|roomId
argument_list|)
return|;
block|}
specifier|public
name|Integer
name|getTravelTime
parameter_list|(
name|Room
name|room
parameter_list|)
block|{
return|return
name|getTravelTime
argument_list|(
name|room
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|void
name|setTravelTime
parameter_list|(
name|Long
name|roomId
parameter_list|,
name|Integer
name|time
parameter_list|)
block|{
if|if
condition|(
name|time
operator|==
literal|null
condition|)
name|iTravelTimes
operator|.
name|remove
argument_list|(
name|roomId
argument_list|)
expr_stmt|;
else|else
name|iTravelTimes
operator|.
name|put
argument_list|(
name|roomId
argument_list|,
name|time
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setTravelTime
parameter_list|(
name|Room
name|room
parameter_list|,
name|Integer
name|time
parameter_list|)
block|{
name|setTravelTime
argument_list|(
name|room
operator|.
name|getId
argument_list|()
argument_list|,
name|time
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Integer
name|getDistance
parameter_list|(
name|Long
name|roomId
parameter_list|)
block|{
return|return
name|iDistances
operator|.
name|get
argument_list|(
name|roomId
argument_list|)
return|;
block|}
specifier|public
name|Integer
name|getDistance
parameter_list|(
name|Room
name|room
parameter_list|)
block|{
return|return
name|getDistance
argument_list|(
name|room
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|void
name|setDistance
parameter_list|(
name|Long
name|roomId
parameter_list|,
name|Integer
name|time
parameter_list|)
block|{
if|if
condition|(
name|time
operator|==
literal|null
condition|)
name|iDistances
operator|.
name|remove
argument_list|(
name|roomId
argument_list|)
expr_stmt|;
else|else
name|iDistances
operator|.
name|put
argument_list|(
name|roomId
argument_list|,
name|time
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDistance
parameter_list|(
name|Room
name|room
parameter_list|,
name|Integer
name|time
parameter_list|)
block|{
name|setDistance
argument_list|(
name|room
operator|.
name|getId
argument_list|()
argument_list|,
name|time
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|Room
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|Room
operator|)
name|o
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|private
class|class
name|Session
implements|implements
name|AcademicSessionProvider
block|{
specifier|private
name|List
argument_list|<
name|AcademicSessionChangeHandler
argument_list|>
name|iHandlers
init|=
operator|new
name|ArrayList
argument_list|<
name|AcademicSessionProvider
operator|.
name|AcademicSessionChangeHandler
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iName
decl_stmt|;
specifier|private
name|Session
parameter_list|()
block|{
name|RPC
operator|.
name|execute
argument_list|(
name|TravelTimesRequest
operator|.
name|init
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|TravelTimeResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
literal|"Failed to initialize: "
operator|+
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|ToolBox
operator|.
name|checkAccess
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|TravelTimeResponse
name|result
parameter_list|)
block|{
name|iId
operator|=
name|result
operator|.
name|getSessionId
argument_list|()
expr_stmt|;
name|iName
operator|=
name|result
operator|.
name|getSessionName
argument_list|()
expr_stmt|;
name|fireChange
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|selectSession
parameter_list|(
name|Long
name|sessionId
parameter_list|,
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
name|callback
parameter_list|)
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getAcademicSessionName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
annotation|@
name|Override
specifier|public
name|Long
name|getAcademicSessionId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addAcademicSessionChangeHandler
parameter_list|(
name|AcademicSessionChangeHandler
name|handler
parameter_list|)
block|{
name|iHandlers
operator|.
name|add
argument_list|(
name|handler
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|fireChange
parameter_list|()
block|{
name|AcademicSessionProvider
operator|.
name|AcademicSessionChangeEvent
name|event
init|=
operator|new
name|AcademicSessionProvider
operator|.
name|AcademicSessionChangeEvent
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Long
name|getNewAcademicSessionId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
annotation|@
name|Override
specifier|public
name|Long
name|getOldAcademicSessionId
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isChanged
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
block|}
decl_stmt|;
for|for
control|(
name|AcademicSessionChangeHandler
name|h
range|:
name|iHandlers
control|)
name|h
operator|.
name|onAcademicSessionChange
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|GwtRpcImplementedBy
argument_list|(
literal|"org.unitime.timetable.server.rooms.TravelTimesBackend"
argument_list|)
specifier|public
specifier|static
class|class
name|TravelTimesRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|TravelTimeResponse
argument_list|>
block|{
specifier|public
specifier|static
enum|enum
name|Command
block|{
name|INIT
block|,
name|LOAD
block|,
name|SAVE
block|}
specifier|private
name|Command
name|iCommand
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Room
argument_list|>
name|iRooms
decl_stmt|;
specifier|public
name|TravelTimesRequest
parameter_list|()
block|{
block|}
specifier|private
name|TravelTimesRequest
parameter_list|(
name|Command
name|command
parameter_list|,
name|List
argument_list|<
name|Room
argument_list|>
name|rooms
parameter_list|)
block|{
name|iCommand
operator|=
name|command
expr_stmt|;
name|iRooms
operator|=
name|rooms
expr_stmt|;
block|}
specifier|public
specifier|static
name|TravelTimesRequest
name|loadRooms
parameter_list|()
block|{
return|return
operator|new
name|TravelTimesRequest
argument_list|(
name|Command
operator|.
name|LOAD
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|TravelTimesRequest
name|saveRooms
parameter_list|(
name|List
argument_list|<
name|Room
argument_list|>
name|rooms
parameter_list|)
block|{
return|return
operator|new
name|TravelTimesRequest
argument_list|(
name|Command
operator|.
name|SAVE
argument_list|,
name|rooms
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|TravelTimesRequest
name|init
parameter_list|()
block|{
return|return
operator|new
name|TravelTimesRequest
argument_list|(
name|Command
operator|.
name|INIT
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|public
name|Command
name|getCommand
parameter_list|()
block|{
return|return
name|iCommand
return|;
block|}
specifier|public
name|boolean
name|hasRooms
parameter_list|()
block|{
return|return
name|iRooms
operator|!=
literal|null
operator|&&
operator|!
name|iRooms
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|Room
argument_list|>
name|getRooms
parameter_list|()
block|{
return|return
name|iRooms
return|;
block|}
specifier|public
name|void
name|addRoom
parameter_list|(
name|Room
name|room
parameter_list|)
block|{
if|if
condition|(
name|iRooms
operator|==
literal|null
condition|)
block|{
name|iRooms
operator|=
operator|new
name|ArrayList
argument_list|<
name|Room
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|iRooms
operator|.
name|add
argument_list|(
name|room
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getCommand
argument_list|()
operator|.
name|name
argument_list|()
operator|+
operator|(
name|hasRooms
argument_list|()
condition|?
name|getRooms
argument_list|()
else|:
literal|""
operator|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|TravelTimeResponse
implements|implements
name|GwtRpcResponse
block|{
specifier|private
name|Long
name|iSessionId
decl_stmt|;
specifier|private
name|String
name|iSessionName
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Room
argument_list|>
name|iRooms
decl_stmt|;
specifier|public
name|TravelTimeResponse
parameter_list|()
block|{
block|}
specifier|public
name|TravelTimeResponse
parameter_list|(
name|List
argument_list|<
name|Room
argument_list|>
name|rooms
parameter_list|)
block|{
name|iRooms
operator|=
name|rooms
expr_stmt|;
block|}
specifier|public
name|TravelTimeResponse
parameter_list|(
name|Long
name|sessionId
parameter_list|,
name|String
name|sessionName
parameter_list|)
block|{
name|iSessionId
operator|=
name|sessionId
expr_stmt|;
name|iSessionName
operator|=
name|sessionName
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasRooms
parameter_list|()
block|{
return|return
name|iRooms
operator|!=
literal|null
operator|&&
operator|!
name|iRooms
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|Room
argument_list|>
name|getRooms
parameter_list|()
block|{
return|return
name|iRooms
return|;
block|}
specifier|public
name|void
name|addRoom
parameter_list|(
name|Room
name|room
parameter_list|)
block|{
if|if
condition|(
name|iRooms
operator|==
literal|null
condition|)
block|{
name|iRooms
operator|=
operator|new
name|ArrayList
argument_list|<
name|Room
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|iRooms
operator|.
name|add
argument_list|(
name|room
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Long
name|getSessionId
parameter_list|()
block|{
return|return
name|iSessionId
return|;
block|}
specifier|public
name|String
name|getSessionName
parameter_list|()
block|{
return|return
name|iSessionName
return|;
block|}
block|}
block|}
end_class

end_unit

