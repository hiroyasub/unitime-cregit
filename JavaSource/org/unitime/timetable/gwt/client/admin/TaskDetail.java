begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|admin
package|;
end_package

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|ServerDateTimeFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeConfirmationDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|TimeSelector
operator|.
name|TimeUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|MouseClickListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|TableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|TaskInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ScriptInterface
operator|.
name|ScriptParameterInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|TaskInterface
operator|.
name|DeleteTaskDetailsRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|TaskInterface
operator|.
name|GetTaskExecutionLogRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|TaskInterface
operator|.
name|TaskExecutionInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|TaskInterface
operator|.
name|TaskExecutionLogInterface
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|i18n
operator|.
name|client
operator|.
name|DateTimeFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|TakesValue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Anchor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|TaskDetail
extends|extends
name|SimpleForm
implements|implements
name|TakesValue
argument_list|<
name|TaskInterface
argument_list|>
block|{
specifier|protected
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|GwtConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|DateTimeFormat
name|sDateFormatMeeting
init|=
name|ServerDateTimeFormat
operator|.
name|getFormat
argument_list|(
name|CONSTANTS
operator|.
name|meetingDateFormat
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iHeader
decl_stmt|,
name|iFooter
decl_stmt|,
name|iLogHeader
decl_stmt|;
specifier|private
name|TaskInterface
name|iTask
decl_stmt|;
specifier|private
name|TaskExecutionsTable
name|iExecutions
decl_stmt|;
specifier|private
name|int
name|iLogRow
decl_stmt|;
specifier|private
name|HTML
name|iLog
decl_stmt|;
specifier|public
name|TaskDetail
parameter_list|()
block|{
name|iHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"edit"
argument_list|,
name|MESSAGES
operator|.
name|buttonEditTask
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|doEdit
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"delete"
argument_list|,
name|MESSAGES
operator|.
name|buttonDeleteTask
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|UniTimeConfirmationDialog
operator|.
name|confirm
argument_list|(
name|MESSAGES
operator|.
name|confirmDeleteTask
argument_list|()
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitDelete
argument_list|(
name|getValue
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|DeleteTaskDetailsRpcRequest
argument_list|(
name|getValue
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|TaskInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedDelete
argument_list|(
name|getValue
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedDelete
argument_list|(
name|getValue
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|TaskInterface
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|doBack
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"back"
argument_list|,
name|MESSAGES
operator|.
name|buttonBack
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|doBack
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iFooter
operator|=
name|iHeader
operator|.
name|clonePanel
argument_list|()
expr_stmt|;
name|iExecutions
operator|=
operator|new
name|TaskExecutionsTable
argument_list|()
expr_stmt|;
name|iExecutions
operator|.
name|setAllowSelection
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iExecutions
operator|.
name|setAllowMultiSelect
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iExecutions
operator|.
name|addMouseClickListener
argument_list|(
operator|new
name|MouseClickListener
argument_list|<
name|TaskExecutionInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseClick
parameter_list|(
name|TableEvent
argument_list|<
name|TaskExecutionInterface
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|iExecutions
operator|.
name|getSelectedRow
argument_list|()
operator|>
literal|0
condition|)
block|{
specifier|final
name|TaskExecutionInterface
name|execution
init|=
name|iExecutions
operator|.
name|getData
argument_list|(
name|iExecutions
operator|.
name|getSelectedRow
argument_list|()
argument_list|)
decl_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|GetTaskExecutionLogRpcRequest
argument_list|(
name|execution
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|TaskExecutionLogInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedLoadData
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iLogRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iLogRow
operator|+
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|TaskExecutionLogInterface
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|!=
literal|null
operator|&&
name|result
operator|.
name|hasLog
argument_list|()
condition|)
block|{
name|iLogHeader
operator|.
name|setHeaderTitle
argument_list|(
name|MESSAGES
operator|.
name|sectScriptLog
argument_list|(
name|sDateFormatMeeting
operator|.
name|format
argument_list|(
name|execution
operator|.
name|getExecutionDate
argument_list|()
argument_list|)
operator|+
literal|" "
operator|+
name|execution
operator|.
name|getExecutionTime
argument_list|(
name|CONSTANTS
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iLog
operator|.
name|setHTML
argument_list|(
name|result
operator|.
name|getLog
argument_list|()
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iLogRow
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iLogRow
operator|+
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iLogRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iLogRow
operator|+
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iLogRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iLogRow
operator|+
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iLogHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|()
expr_stmt|;
name|iLog
operator|=
operator|new
name|HTML
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|doBack
parameter_list|()
block|{
block|}
specifier|protected
name|void
name|doEdit
parameter_list|()
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|TaskInterface
name|task
parameter_list|)
block|{
name|iTask
operator|=
name|task
expr_stmt|;
name|clear
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setHeaderTitle
argument_list|(
name|iTask
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"edit"
argument_list|,
name|iTask
operator|.
name|canEdit
argument_list|()
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"delete"
argument_list|,
name|iTask
operator|.
name|canEdit
argument_list|()
argument_list|)
expr_stmt|;
name|addHeaderRow
argument_list|(
name|iHeader
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propScript
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|(
name|iTask
operator|.
name|getScript
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propTaskOwner
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|(
name|iTask
operator|.
name|getOwner
argument_list|()
operator|.
name|getFormattedName
argument_list|(
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|iTask
operator|.
name|getScript
argument_list|()
operator|.
name|getDescription
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|iTask
operator|.
name|getScript
argument_list|()
operator|.
name|getDescription
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propDescription
argument_list|()
argument_list|,
operator|new
name|HTML
argument_list|(
name|iTask
operator|.
name|getScript
argument_list|()
operator|.
name|getDescription
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|iTask
operator|.
name|getScript
argument_list|()
operator|.
name|hasParameters
argument_list|()
condition|)
for|for
control|(
name|ScriptParameterInterface
name|parameter
range|:
name|iTask
operator|.
name|getScript
argument_list|()
operator|.
name|getParameters
argument_list|()
control|)
block|{
name|String
name|value
init|=
name|iTask
operator|.
name|getParameter
argument_list|(
name|parameter
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
name|value
operator|=
name|parameter
operator|.
name|getValue
argument_list|()
expr_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
name|value
operator|=
name|parameter
operator|.
name|getDefaultValue
argument_list|()
expr_stmt|;
if|if
condition|(
name|parameter
operator|.
name|hasOptions
argument_list|()
operator|&&
name|value
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|parameter
operator|.
name|isMultiSelect
argument_list|()
condition|)
block|{
name|String
name|ids
init|=
name|value
decl_stmt|;
name|value
operator|=
literal|""
expr_stmt|;
for|for
control|(
name|String
name|id
range|:
name|ids
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
name|value
operator|+=
operator|(
name|value
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|"<br>"
operator|)
operator|+
name|parameter
operator|.
name|getOption
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|value
operator|=
name|parameter
operator|.
name|getOption
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
literal|"slot"
operator|.
name|equalsIgnoreCase
argument_list|(
name|parameter
operator|.
name|getType
argument_list|()
argument_list|)
operator|||
literal|"time"
operator|.
name|equalsIgnoreCase
argument_list|(
name|parameter
operator|.
name|getType
argument_list|()
argument_list|)
operator|&&
name|value
operator|!=
literal|null
operator|&&
operator|!
name|value
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
try|try
block|{
name|value
operator|=
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
block|}
if|if
condition|(
literal|"file"
operator|.
name|equalsIgnoreCase
argument_list|(
name|parameter
operator|.
name|getType
argument_list|()
argument_list|)
operator|&&
name|value
operator|!=
literal|null
condition|)
block|{
name|addRow
argument_list|(
name|parameter
operator|.
name|getLabel
argument_list|()
operator|+
literal|":"
argument_list|,
operator|new
name|Anchor
argument_list|(
name|value
argument_list|,
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"/taskfile?t="
operator|+
name|iTask
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|addRow
argument_list|(
name|parameter
operator|.
name|getLabel
argument_list|()
operator|+
literal|":"
argument_list|,
operator|new
name|HTML
argument_list|(
name|value
operator|==
literal|null
condition|?
literal|"<i>"
operator|+
name|MESSAGES
operator|.
name|notSet
argument_list|()
operator|+
literal|"</i>"
else|:
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iTask
operator|.
name|getEmail
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|iTask
operator|.
name|getEmail
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propEmail
argument_list|()
argument_list|,
operator|new
name|HTML
argument_list|(
name|iTask
operator|.
name|getEmail
argument_list|()
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|"<br>"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|addHeaderRow
argument_list|(
name|MESSAGES
operator|.
name|sectTaskExecutions
argument_list|()
argument_list|)
expr_stmt|;
name|iExecutions
operator|.
name|setValue
argument_list|(
name|iTask
operator|.
name|getExecutions
argument_list|()
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|iExecutions
argument_list|)
expr_stmt|;
name|iLogRow
operator|=
name|addHeaderRow
argument_list|(
name|iLogHeader
argument_list|)
expr_stmt|;
name|iLog
operator|.
name|setHTML
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|iLog
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iLogRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iLogRow
operator|+
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|addBottomRow
argument_list|(
name|iFooter
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|TaskInterface
name|getValue
parameter_list|()
block|{
return|return
name|iTask
return|;
block|}
block|}
end_class

end_unit

