begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|admin
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
operator|.
name|SingleDateSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|NumberBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeDialogBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeFileUpload
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|MouseClickListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|TableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTableHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ScriptInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EncodeQueryRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EncodeQueryRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ScriptInterface
operator|.
name|DeleteScriptRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ScriptInterface
operator|.
name|ExecuteScriptRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ScriptInterface
operator|.
name|GetScriptOptionsRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ScriptInterface
operator|.
name|LoadAllScriptsRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ScriptInterface
operator|.
name|QueueItemInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ScriptInterface
operator|.
name|SaveOrUpdateScriptRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ScriptInterface
operator|.
name|ScriptOptionsInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ScriptInterface
operator|.
name|ScriptParameterInterface
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Cursor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|i18n
operator|.
name|client
operator|.
name|DateTimeFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|History
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Anchor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHorizontalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextArea
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|VerticalPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|ScriptPage
extends|extends
name|Composite
block|{
specifier|protected
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|GwtResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|GwtConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|DateTimeFormat
name|sTS
init|=
name|DateTimeFormat
operator|.
name|getFormat
argument_list|(
name|CONSTANTS
operator|.
name|timeStampFormatShort
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|SimpleForm
name|iForm
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iHeader
decl_stmt|,
name|iBottom
decl_stmt|,
name|iQueueHeader
decl_stmt|,
name|iLogHeader
decl_stmt|;
specifier|private
name|ListBox
name|iName
decl_stmt|;
specifier|private
name|HTML
name|iDescription
decl_stmt|;
specifier|private
name|int
name|iDescriptionRow
decl_stmt|;
specifier|private
name|UniTimeTable
argument_list|<
name|QueueItemInterface
argument_list|>
name|iQueue
decl_stmt|;
specifier|private
name|HTML
name|iLog
decl_stmt|;
specifier|private
name|int
name|iQueueRow
decl_stmt|,
name|iLogRow
decl_stmt|;
specifier|private
name|List
argument_list|<
name|ScriptInterface
argument_list|>
name|iScripts
init|=
literal|null
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|iParams
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|SaveOrUpdateDialog
name|iDialog
init|=
operator|new
name|SaveOrUpdateDialog
argument_list|()
decl_stmt|;
specifier|private
name|int
name|iLastSelectedRow
init|=
operator|-
literal|1
decl_stmt|;
specifier|private
name|CheckBox
name|iSendEmail
decl_stmt|;
specifier|private
name|TextArea
name|iEmailAddresses
decl_stmt|;
specifier|private
name|VerticalPanel
name|iEmailPanel
decl_stmt|;
specifier|public
name|ScriptPage
parameter_list|()
block|{
name|iForm
operator|=
operator|new
name|SimpleForm
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|removeStyleName
argument_list|(
literal|"unitime-NotPrintableBottomLine"
argument_list|)
expr_stmt|;
name|iQueueHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|sectScriptQueue
argument_list|()
argument_list|)
expr_stmt|;
name|iQueueHeader
operator|.
name|addButton
argument_list|(
literal|"refresh"
argument_list|,
name|MESSAGES
operator|.
name|buttonRefresh
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|refreshQueue
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iQueueRow
operator|=
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iQueueHeader
argument_list|)
expr_stmt|;
name|iQueue
operator|=
operator|new
name|UniTimeTable
argument_list|<
name|ScriptInterface
operator|.
name|QueueItemInterface
argument_list|>
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|UniTimeTableHeader
argument_list|>
name|header
init|=
operator|new
name|ArrayList
argument_list|<
name|UniTimeTableHeader
argument_list|>
argument_list|()
decl_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colStatus
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colProgress
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colSession
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colCreated
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colStarted
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colFinished
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colOutput
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|iQueue
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|header
argument_list|)
expr_stmt|;
name|iQueue
operator|.
name|setAllowSelection
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iQueue
argument_list|)
expr_stmt|;
name|iLogHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|()
expr_stmt|;
name|iLogRow
operator|=
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iLogHeader
argument_list|)
expr_stmt|;
name|iLog
operator|=
operator|new
name|HTML
argument_list|()
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iLog
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iQueueRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iQueueRow
operator|+
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iLogRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iLogRow
operator|+
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|sectScript
argument_list|()
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"execute"
argument_list|,
name|MESSAGES
operator|.
name|buttonExecute
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|Window
operator|.
name|confirm
argument_list|(
name|MESSAGES
operator|.
name|confirmScriptExecution
argument_list|(
name|iName
operator|.
name|getItemText
argument_list|(
name|iName
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
argument_list|)
condition|)
return|return;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitExecuting
argument_list|(
name|iName
operator|.
name|getItemText
argument_list|(
name|iName
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|ExecuteScriptRpcRequest
operator|.
name|executeScript
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iName
operator|.
name|getValue
argument_list|(
name|iName
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|iName
operator|.
name|getItemText
argument_list|(
name|iName
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|,
name|iParams
argument_list|,
operator|(
name|iSendEmail
operator|.
name|getValue
argument_list|()
condition|?
name|iEmailAddresses
operator|.
name|getText
argument_list|()
else|:
literal|null
operator|)
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|QueueItemInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedExecution
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedExecution
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|QueueItemInterface
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|refreshQueue
argument_list|(
literal|null
argument_list|,
name|result
operator|==
literal|null
condition|?
literal|null
else|:
name|result
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"execute"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"add"
argument_list|,
name|MESSAGES
operator|.
name|buttonAddNew
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iDialog
operator|.
name|addScript
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"add"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"edit"
argument_list|,
name|MESSAGES
operator|.
name|buttonEdit
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|ScriptInterface
name|script
init|=
name|getScript
argument_list|()
decl_stmt|;
if|if
condition|(
name|script
operator|!=
literal|null
condition|)
name|iDialog
operator|.
name|editScript
argument_list|(
name|script
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"edit"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iHeader
argument_list|)
expr_stmt|;
name|iName
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
name|iName
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemSelect
argument_list|()
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
name|iName
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propName
argument_list|()
argument_list|,
name|iName
argument_list|)
expr_stmt|;
name|iSendEmail
operator|=
operator|new
name|CheckBox
argument_list|(
name|MESSAGES
operator|.
name|scriptSendEmailCheckbox
argument_list|()
argument_list|)
expr_stmt|;
name|iSendEmail
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iEmailAddresses
operator|=
operator|new
name|TextArea
argument_list|()
expr_stmt|;
name|iEmailAddresses
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|iEmailAddresses
operator|.
name|setVisibleLines
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|iEmailAddresses
operator|.
name|setCharacterWidth
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|iEmailPanel
operator|=
operator|new
name|VerticalPanel
argument_list|()
expr_stmt|;
name|iEmailPanel
operator|.
name|add
argument_list|(
name|iSendEmail
argument_list|)
expr_stmt|;
name|iEmailPanel
operator|.
name|setCellHorizontalAlignment
argument_list|(
name|iSendEmail
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_LEFT
argument_list|)
expr_stmt|;
name|iEmailPanel
operator|.
name|add
argument_list|(
name|iEmailAddresses
argument_list|)
expr_stmt|;
name|iEmailAddresses
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iSendEmail
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
name|iEmailAddresses
operator|.
name|setVisible
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iDescription
operator|=
operator|new
name|HTML
argument_list|()
expr_stmt|;
name|iDescriptionRow
operator|=
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propDescription
argument_list|()
argument_list|,
name|iDescription
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iDescriptionRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propEmail
argument_list|()
argument_list|,
name|iEmailPanel
argument_list|)
expr_stmt|;
name|iBottom
operator|=
name|iHeader
operator|.
name|clonePanel
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addBottomRow
argument_list|(
name|iBottom
argument_list|)
expr_stmt|;
name|initWidget
argument_list|(
name|iForm
argument_list|)
expr_stmt|;
name|iName
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|scriptChanged
argument_list|()
expr_stmt|;
if|if
condition|(
name|iName
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
condition|)
name|History
operator|.
name|newItem
argument_list|(
name|iName
operator|.
name|getValue
argument_list|(
name|iName
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|History
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|reload
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|reload
argument_list|(
name|History
operator|.
name|getToken
argument_list|()
operator|==
literal|null
operator|||
name|History
operator|.
name|getToken
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
name|Long
operator|.
name|valueOf
argument_list|(
name|History
operator|.
name|getToken
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|refreshQueue
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
operator|new
name|Timer
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|refreshQueue
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
operator|.
name|scheduleRepeating
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|iQueue
operator|.
name|addMouseClickListener
argument_list|(
operator|new
name|MouseClickListener
argument_list|<
name|ScriptInterface
operator|.
name|QueueItemInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseClick
parameter_list|(
name|TableEvent
argument_list|<
name|QueueItemInterface
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|iLastSelectedRow
operator|>=
literal|1
condition|)
name|iQueue
operator|.
name|setSelected
argument_list|(
name|iLastSelectedRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
operator|.
name|getData
argument_list|()
operator|!=
literal|null
operator|&&
name|iLastSelectedRow
operator|!=
name|event
operator|.
name|getRow
argument_list|()
condition|)
block|{
name|iQueue
operator|.
name|setSelected
argument_list|(
name|event
operator|.
name|getRow
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|showLog
argument_list|(
name|event
operator|.
name|getData
argument_list|()
argument_list|)
expr_stmt|;
name|iLastSelectedRow
operator|=
name|event
operator|.
name|getRow
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|showLog
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|iLastSelectedRow
operator|=
operator|-
literal|1
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ScriptInterface
name|getScript
parameter_list|()
block|{
if|if
condition|(
name|iScripts
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|ScriptInterface
name|s
range|:
name|iScripts
control|)
if|if
condition|(
name|s
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|iName
operator|.
name|getValue
argument_list|(
name|iName
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
condition|)
block|{
return|return
name|s
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|void
name|populate
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|QueueItemInterface
argument_list|>
name|queue
parameter_list|,
name|String
name|selectId
parameter_list|)
block|{
if|if
condition|(
name|iQueue
operator|.
name|getSelectedRow
argument_list|()
operator|>
literal|0
operator|&&
name|selectId
operator|==
literal|null
condition|)
block|{
name|QueueItemInterface
name|q
init|=
name|iQueue
operator|.
name|getData
argument_list|(
name|iQueue
operator|.
name|getSelectedRow
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|q
operator|!=
literal|null
condition|)
name|selectId
operator|=
name|q
operator|.
name|getId
argument_list|()
expr_stmt|;
block|}
name|QueueItemInterface
name|selectedQueue
init|=
literal|null
decl_stmt|;
name|iQueue
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|iLastSelectedRow
operator|=
operator|-
literal|1
expr_stmt|;
for|for
control|(
specifier|final
name|QueueItemInterface
name|q
range|:
name|queue
control|)
block|{
name|List
argument_list|<
name|Widget
argument_list|>
name|line
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|q
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|q
operator|.
name|getStatus
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|q
operator|.
name|getProgress
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|q
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|q
operator|.
name|getSession
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|q
operator|.
name|getCreated
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|sTS
operator|.
name|format
argument_list|(
name|q
operator|.
name|getCreated
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|q
operator|.
name|getStarted
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|sTS
operator|.
name|format
argument_list|(
name|q
operator|.
name|getStarted
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|q
operator|.
name|getFinished
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|sTS
operator|.
name|format
argument_list|(
name|q
operator|.
name|getFinished
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|q
operator|.
name|getOtuput
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|line
operator|.
name|add
argument_list|(
operator|new
name|Anchor
argument_list|(
name|q
operator|.
name|getOtuput
argument_list|()
operator|.
name|substring
argument_list|(
literal|1
operator|+
name|q
operator|.
name|getOtuput
argument_list|()
operator|.
name|lastIndexOf
argument_list|(
literal|'.'
argument_list|)
argument_list|)
argument_list|,
name|q
operator|.
name|getOtuputLink
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|q
operator|.
name|isCanDelete
argument_list|()
condition|)
block|{
name|Image
name|delete
init|=
operator|new
name|Image
argument_list|(
name|RESOURCES
operator|.
name|delete
argument_list|()
argument_list|)
decl_stmt|;
name|delete
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|titleDeleteRow
argument_list|()
argument_list|)
expr_stmt|;
name|delete
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setCursor
argument_list|(
name|Cursor
operator|.
name|POINTER
argument_list|)
expr_stmt|;
name|delete
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|refreshQueue
argument_list|(
name|q
operator|.
name|getId
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
name|delete
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|iQueue
operator|.
name|addRow
argument_list|(
name|q
argument_list|,
name|line
argument_list|)
expr_stmt|;
if|if
condition|(
name|selectId
operator|!=
literal|null
operator|&&
name|selectId
operator|.
name|equals
argument_list|(
name|q
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
block|{
name|iQueue
operator|.
name|setSelected
argument_list|(
name|iQueue
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iLastSelectedRow
operator|=
name|iQueue
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
expr_stmt|;
name|selectedQueue
operator|=
name|q
expr_stmt|;
block|}
block|}
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iQueueRow
argument_list|,
name|iQueue
operator|.
name|getRowCount
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iQueueRow
operator|+
literal|1
argument_list|,
name|iQueue
operator|.
name|getRowCount
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
name|showLog
argument_list|(
name|selectedQueue
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|refreshQueue
parameter_list|(
name|String
name|deleteId
parameter_list|,
specifier|final
name|String
name|selectId
parameter_list|)
block|{
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|ScriptInterface
operator|.
name|GetQueueTableRpcRequest
argument_list|(
name|deleteId
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|QueueItemInterface
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedLoadData
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|QueueItemInterface
argument_list|>
name|result
parameter_list|)
block|{
name|populate
argument_list|(
name|result
argument_list|,
name|selectId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|showLog
parameter_list|(
name|QueueItemInterface
name|item
parameter_list|)
block|{
if|if
condition|(
name|item
operator|==
literal|null
operator|||
name|item
operator|.
name|getLog
argument_list|()
operator|==
literal|null
operator|||
name|item
operator|.
name|getLog
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iLogRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iLogRow
operator|+
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iLogHeader
operator|.
name|setHeaderTitle
argument_list|(
name|MESSAGES
operator|.
name|sectScriptLog
argument_list|(
name|item
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iLogRow
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iLogRow
operator|+
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iLog
operator|.
name|setHTML
argument_list|(
name|item
operator|.
name|getLog
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|scriptChanged
parameter_list|()
block|{
name|ScriptInterface
name|script
init|=
name|getScript
argument_list|()
decl_stmt|;
if|if
condition|(
name|script
operator|==
literal|null
condition|)
block|{
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iDescriptionRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
while|while
condition|(
name|iForm
operator|.
name|getRowCount
argument_list|()
operator|>
name|iDescriptionRow
operator|+
literal|3
condition|)
name|iForm
operator|.
name|removeRow
argument_list|(
literal|1
operator|+
name|iDescriptionRow
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"edit"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"execute"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iParams
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|iDescription
operator|.
name|setHTML
argument_list|(
name|script
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iDescriptionRow
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"edit"
argument_list|,
name|script
operator|.
name|canEdit
argument_list|()
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"execute"
argument_list|,
name|script
operator|.
name|canExecute
argument_list|()
argument_list|)
expr_stmt|;
name|iParams
operator|.
name|clear
argument_list|()
expr_stmt|;
while|while
condition|(
name|iForm
operator|.
name|getRowCount
argument_list|()
operator|>
name|iDescriptionRow
operator|+
literal|3
condition|)
name|iForm
operator|.
name|removeRow
argument_list|(
literal|1
operator|+
name|iDescriptionRow
argument_list|)
expr_stmt|;
if|if
condition|(
name|script
operator|.
name|hasParameters
argument_list|()
condition|)
block|{
for|for
control|(
specifier|final
name|ScriptParameterInterface
name|param
range|:
name|script
operator|.
name|getParameters
argument_list|()
control|)
block|{
name|Widget
name|widget
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|param
operator|.
name|hasOptions
argument_list|()
condition|)
block|{
specifier|final
name|ListBox
name|list
init|=
operator|new
name|ListBox
argument_list|()
decl_stmt|;
name|list
operator|.
name|setMultipleSelect
argument_list|(
name|param
operator|.
name|isMultiSelect
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|param
operator|.
name|isMultiSelect
argument_list|()
condition|)
name|list
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemSelect
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|ScriptInterface
operator|.
name|ListItem
name|item
range|:
name|param
operator|.
name|getOptions
argument_list|()
control|)
block|{
name|list
operator|.
name|addItem
argument_list|(
name|item
operator|.
name|getText
argument_list|()
argument_list|,
name|item
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|param
operator|.
name|getDefaultValue
argument_list|()
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|param
operator|.
name|isMultiSelect
argument_list|()
condition|)
block|{
for|for
control|(
name|String
name|id
range|:
name|param
operator|.
name|getDefaultValue
argument_list|()
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
if|if
condition|(
operator|!
name|id
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|(
name|id
operator|.
name|equalsIgnoreCase
argument_list|(
name|item
operator|.
name|getValue
argument_list|()
argument_list|)
operator|||
name|id
operator|.
name|equalsIgnoreCase
argument_list|(
name|item
operator|.
name|getText
argument_list|()
argument_list|)
operator|||
name|item
operator|.
name|getText
argument_list|()
operator|.
name|startsWith
argument_list|(
name|id
operator|+
literal|" - "
argument_list|)
operator|)
condition|)
block|{
name|list
operator|.
name|setItemSelected
argument_list|(
name|list
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
if|else if
condition|(
name|param
operator|.
name|getDefaultValue
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|item
operator|.
name|getValue
argument_list|()
argument_list|)
operator|||
name|param
operator|.
name|getDefaultValue
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|item
operator|.
name|getText
argument_list|()
argument_list|)
operator|||
name|item
operator|.
name|getText
argument_list|()
operator|.
name|startsWith
argument_list|(
name|param
operator|.
name|getDefaultValue
argument_list|()
operator|+
literal|" - "
argument_list|)
condition|)
name|list
operator|.
name|setSelectedIndex
argument_list|(
name|list
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
name|list
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|param
operator|.
name|isMultiSelect
argument_list|()
condition|)
block|{
name|String
name|value
init|=
literal|""
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|list
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|list
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
name|value
operator|+=
operator|(
name|value
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|","
operator|)
operator|+
name|list
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|iParams
operator|.
name|put
argument_list|(
name|param
operator|.
name|getName
argument_list|()
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|list
operator|.
name|getSelectedIndex
argument_list|()
operator|<=
literal|0
condition|)
name|iParams
operator|.
name|remove
argument_list|(
name|param
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|iParams
operator|.
name|put
argument_list|(
name|param
operator|.
name|getName
argument_list|()
argument_list|,
name|list
operator|.
name|getValue
argument_list|(
name|list
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|widget
operator|=
name|list
expr_stmt|;
block|}
if|else if
condition|(
literal|"boolean"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
block|{
name|CheckBox
name|ch
init|=
operator|new
name|CheckBox
argument_list|()
decl_stmt|;
name|ch
operator|.
name|setValue
argument_list|(
literal|"true"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getDefaultValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ch
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|==
literal|null
condition|)
name|iParams
operator|.
name|remove
argument_list|(
name|param
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|iParams
operator|.
name|put
argument_list|(
name|param
operator|.
name|getName
argument_list|()
argument_list|,
name|event
operator|.
name|getValue
argument_list|()
condition|?
literal|"true"
else|:
literal|"false"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|widget
operator|=
name|ch
expr_stmt|;
block|}
if|else if
condition|(
literal|"file"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
block|{
name|UniTimeFileUpload
name|upload
init|=
operator|new
name|UniTimeFileUpload
argument_list|()
decl_stmt|;
name|upload
operator|.
name|reset
argument_list|()
expr_stmt|;
name|widget
operator|=
name|upload
expr_stmt|;
block|}
if|else if
condition|(
literal|"textarea"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
block|{
name|TextArea
name|textarea
init|=
operator|new
name|TextArea
argument_list|()
decl_stmt|;
name|textarea
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|textarea
operator|.
name|setVisibleLines
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|textarea
operator|.
name|setCharacterWidth
argument_list|(
literal|80
argument_list|)
expr_stmt|;
if|if
condition|(
name|param
operator|.
name|getDefaultValue
argument_list|()
operator|!=
literal|null
condition|)
name|textarea
operator|.
name|setText
argument_list|(
name|param
operator|.
name|getDefaultValue
argument_list|()
argument_list|)
expr_stmt|;
name|textarea
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|==
literal|null
condition|)
name|iParams
operator|.
name|remove
argument_list|(
name|param
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|iParams
operator|.
name|put
argument_list|(
name|param
operator|.
name|getName
argument_list|()
argument_list|,
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|widget
operator|=
name|textarea
expr_stmt|;
block|}
if|else if
condition|(
literal|"integer"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
operator|||
literal|"int"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
operator|||
literal|"long"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
operator|||
literal|"short"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
operator|||
literal|"byte"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
block|{
name|NumberBox
name|text
init|=
operator|new
name|NumberBox
argument_list|()
decl_stmt|;
name|text
operator|.
name|setDecimal
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|text
operator|.
name|setNegative
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|param
operator|.
name|getDefaultValue
argument_list|()
operator|!=
literal|null
condition|)
name|text
operator|.
name|setText
argument_list|(
name|param
operator|.
name|getDefaultValue
argument_list|()
argument_list|)
expr_stmt|;
name|text
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|==
literal|null
condition|)
name|iParams
operator|.
name|remove
argument_list|(
name|param
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|iParams
operator|.
name|put
argument_list|(
name|param
operator|.
name|getName
argument_list|()
argument_list|,
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|widget
operator|=
name|text
expr_stmt|;
block|}
if|else if
condition|(
literal|"number"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
operator|||
literal|"float"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
operator|||
literal|"double"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
block|{
name|NumberBox
name|text
init|=
operator|new
name|NumberBox
argument_list|()
decl_stmt|;
name|text
operator|.
name|setDecimal
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|text
operator|.
name|setNegative
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|param
operator|.
name|getDefaultValue
argument_list|()
operator|!=
literal|null
condition|)
name|text
operator|.
name|setText
argument_list|(
name|param
operator|.
name|getDefaultValue
argument_list|()
argument_list|)
expr_stmt|;
name|text
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|==
literal|null
condition|)
name|iParams
operator|.
name|remove
argument_list|(
name|param
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|iParams
operator|.
name|put
argument_list|(
name|param
operator|.
name|getName
argument_list|()
argument_list|,
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|widget
operator|=
name|text
expr_stmt|;
block|}
if|else if
condition|(
literal|"date"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
block|{
name|SingleDateSelector
name|text
init|=
operator|new
name|SingleDateSelector
argument_list|()
decl_stmt|;
if|if
condition|(
name|param
operator|.
name|getDefaultValue
argument_list|()
operator|!=
literal|null
condition|)
name|text
operator|.
name|setText
argument_list|(
name|param
operator|.
name|getDefaultValue
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|DateTimeFormat
name|format
init|=
name|DateTimeFormat
operator|.
name|getFormat
argument_list|(
name|CONSTANTS
operator|.
name|eventDateFormat
argument_list|()
argument_list|)
decl_stmt|;
name|text
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Date
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Date
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|==
literal|null
condition|)
name|iParams
operator|.
name|remove
argument_list|(
name|param
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|iParams
operator|.
name|put
argument_list|(
name|param
operator|.
name|getName
argument_list|()
argument_list|,
name|format
operator|.
name|format
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|widget
operator|=
name|text
expr_stmt|;
block|}
else|else
block|{
name|TextBox
name|text
init|=
operator|new
name|TextBox
argument_list|()
decl_stmt|;
name|text
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|text
operator|.
name|setWidth
argument_list|(
literal|"400px"
argument_list|)
expr_stmt|;
if|if
condition|(
name|param
operator|.
name|getDefaultValue
argument_list|()
operator|!=
literal|null
condition|)
name|text
operator|.
name|setText
argument_list|(
name|param
operator|.
name|getDefaultValue
argument_list|()
argument_list|)
expr_stmt|;
name|text
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|==
literal|null
condition|)
name|iParams
operator|.
name|remove
argument_list|(
name|param
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|iParams
operator|.
name|put
argument_list|(
name|param
operator|.
name|getName
argument_list|()
argument_list|,
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|widget
operator|=
name|text
expr_stmt|;
block|}
name|int
name|row
init|=
name|iForm
operator|.
name|insertRow
argument_list|(
name|iForm
operator|.
name|getRowCount
argument_list|()
operator|-
literal|2
argument_list|)
decl_stmt|;
name|iForm
operator|.
name|setWidget
argument_list|(
name|row
argument_list|,
literal|0
argument_list|,
operator|new
name|Label
argument_list|(
operator|(
name|param
operator|.
name|getLabel
argument_list|()
operator|==
literal|null
operator|||
name|param
operator|.
name|getLabel
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
name|param
operator|.
name|getName
argument_list|()
else|:
name|param
operator|.
name|getLabel
argument_list|()
operator|)
operator|+
literal|":"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|setWidget
argument_list|(
name|row
argument_list|,
literal|1
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|public
name|void
name|reload
parameter_list|(
specifier|final
name|Long
name|scriptId
parameter_list|)
block|{
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|GetScriptOptionsRpcRequest
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|ScriptOptionsInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedLoadData
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedLoadData
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|ScriptOptionsInterface
name|result
parameter_list|)
block|{
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"add"
argument_list|,
name|result
operator|.
name|canAdd
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|hasEmail
argument_list|()
condition|)
name|iEmailAddresses
operator|.
name|setText
argument_list|(
name|result
operator|.
name|getEmail
argument_list|()
argument_list|)
expr_stmt|;
name|iDialog
operator|.
name|setup
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|LoadAllScriptsRpcRequest
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|ScriptInterface
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedLoadData
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedLoadData
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|ScriptInterface
argument_list|>
name|result
parameter_list|)
block|{
name|iScripts
operator|=
name|result
expr_stmt|;
name|iName
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iName
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemSelect
argument_list|()
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
name|iName
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|ScriptInterface
name|script
range|:
name|result
control|)
block|{
if|if
condition|(
operator|!
name|script
operator|.
name|canExecute
argument_list|()
operator|&&
operator|!
name|script
operator|.
name|canEdit
argument_list|()
operator|&&
operator|!
name|script
operator|.
name|canDelete
argument_list|()
condition|)
continue|continue;
name|iName
operator|.
name|addItem
argument_list|(
name|script
operator|.
name|getName
argument_list|()
argument_list|,
name|script
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|scriptId
operator|!=
literal|null
operator|&&
name|scriptId
operator|.
name|equals
argument_list|(
name|script
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
name|iName
operator|.
name|setSelectedIndex
argument_list|(
name|iName
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|scriptChanged
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
class|class
name|SaveOrUpdateDialog
extends|extends
name|UniTimeDialogBox
block|{
specifier|private
name|SimpleForm
name|iDialogForm
decl_stmt|;
specifier|private
name|TextBox
name|iName
decl_stmt|;
specifier|private
name|TextArea
name|iDescription
decl_stmt|;
specifier|private
name|ListBox
name|iPermission
decl_stmt|;
specifier|private
name|ListBox
name|iEngine
decl_stmt|;
specifier|private
name|TextArea
name|iScript
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iBottom
decl_stmt|;
specifier|private
name|Long
name|iScriptId
init|=
literal|null
decl_stmt|;
specifier|private
name|UniTimeTable
argument_list|<
name|ScriptParameterInterface
argument_list|>
name|iParams
decl_stmt|;
name|SaveOrUpdateDialog
parameter_list|()
block|{
name|super
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iDialogForm
operator|=
operator|new
name|SimpleForm
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|iName
operator|=
operator|new
name|TextBox
argument_list|()
expr_stmt|;
name|iName
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iName
operator|.
name|setWidth
argument_list|(
literal|"400px"
argument_list|)
expr_stmt|;
name|iName
operator|.
name|setMaxLength
argument_list|(
literal|128
argument_list|)
expr_stmt|;
name|iName
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|iBottom
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iDialogForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propName
argument_list|()
argument_list|,
name|iName
argument_list|)
expr_stmt|;
name|iDescription
operator|=
operator|new
name|TextArea
argument_list|()
expr_stmt|;
name|iDescription
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|iDescription
operator|.
name|setVisibleLines
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|iDescription
operator|.
name|setCharacterWidth
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|iDescription
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|iBottom
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iDialogForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propDescription
argument_list|()
argument_list|,
name|iDescription
argument_list|)
expr_stmt|;
name|iEngine
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
name|iEngine
operator|.
name|setMultipleSelect
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iEngine
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemSelect
argument_list|()
argument_list|)
expr_stmt|;
name|iEngine
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iBottom
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iDialogForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propEngine
argument_list|()
argument_list|,
name|iEngine
argument_list|)
expr_stmt|;
name|iPermission
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
name|iPermission
operator|.
name|setMultipleSelect
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iPermission
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemNone
argument_list|()
argument_list|)
expr_stmt|;
name|iPermission
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iBottom
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iDialogForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propPermission
argument_list|()
argument_list|,
name|iPermission
argument_list|)
expr_stmt|;
name|iScript
operator|=
operator|new
name|TextArea
argument_list|()
expr_stmt|;
name|iScript
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|iScript
operator|.
name|setVisibleLines
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|iScript
operator|.
name|setCharacterWidth
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|iScript
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|iBottom
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iDialogForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propScript
argument_list|()
argument_list|,
name|iScript
argument_list|)
expr_stmt|;
name|iParams
operator|=
operator|new
name|UniTimeTable
argument_list|<
name|ScriptParameterInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iDialogForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propParameters
argument_list|()
argument_list|,
name|iParams
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|UniTimeTableHeader
argument_list|>
name|header
init|=
operator|new
name|ArrayList
argument_list|<
name|UniTimeTableHeader
argument_list|>
argument_list|()
decl_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colLabel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colType
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colDefaultValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|iParams
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|header
argument_list|)
expr_stmt|;
name|ClickHandler
name|save
init|=
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|validate
argument_list|()
condition|)
return|return;
name|ScriptInterface
name|script
init|=
operator|new
name|ScriptInterface
argument_list|()
decl_stmt|;
name|script
operator|.
name|setId
argument_list|(
name|iScriptId
argument_list|)
expr_stmt|;
name|script
operator|.
name|setName
argument_list|(
name|iName
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|script
operator|.
name|setScript
argument_list|(
name|iScript
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|script
operator|.
name|setDescription
argument_list|(
name|iDescription
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|script
operator|.
name|setEngine
argument_list|(
name|iEngine
operator|.
name|getSelectedIndex
argument_list|()
operator|<=
literal|0
condition|?
literal|null
else|:
name|iEngine
operator|.
name|getValue
argument_list|(
name|iEngine
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|script
operator|.
name|setPermission
argument_list|(
name|iPermission
operator|.
name|getSelectedIndex
argument_list|()
operator|<=
literal|0
condition|?
literal|null
else|:
name|iPermission
operator|.
name|getValue
argument_list|(
name|iPermission
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iParams
operator|.
name|getRowCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|ScriptParameterInterface
name|p
init|=
name|iParams
operator|.
name|getData
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|p
operator|!=
literal|null
operator|&&
name|p
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|p
operator|.
name|getName
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|script
operator|.
name|addParameter
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
name|hide
argument_list|()
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitSavingData
argument_list|()
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|SaveOrUpdateScriptRpcRequest
argument_list|(
name|script
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|ScriptInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedSave
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedSave
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|ScriptInterface
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|reload
argument_list|(
name|result
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|iBottom
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|()
expr_stmt|;
name|iBottom
operator|.
name|addButton
argument_list|(
literal|"save"
argument_list|,
name|MESSAGES
operator|.
name|opScriptSave
argument_list|()
argument_list|,
name|save
argument_list|)
expr_stmt|;
name|iBottom
operator|.
name|addButton
argument_list|(
literal|"update"
argument_list|,
name|MESSAGES
operator|.
name|opScriptUpdate
argument_list|()
argument_list|,
name|save
argument_list|)
expr_stmt|;
name|iBottom
operator|.
name|addButton
argument_list|(
literal|"export"
argument_list|,
name|MESSAGES
operator|.
name|opScriptExport
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|RPC
operator|.
name|execute
argument_list|(
name|EncodeQueryRpcRequest
operator|.
name|encode
argument_list|(
literal|"output=script.xml&script="
operator|+
name|iScriptId
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|EncodeQueryRpcResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|EncodeQueryRpcResponse
name|result
parameter_list|)
block|{
name|ToolBox
operator|.
name|open
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"export?q="
operator|+
name|result
operator|.
name|getQuery
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iBottom
operator|.
name|addButton
argument_list|(
literal|"delete"
argument_list|,
name|MESSAGES
operator|.
name|opScriptDelete
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iScriptId
operator|!=
literal|null
condition|)
block|{
name|hide
argument_list|()
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitDelete
argument_list|(
name|iName
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|DeleteScriptRpcRequest
argument_list|(
name|iScriptId
argument_list|,
name|iName
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|ScriptInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedDelete
argument_list|(
name|iName
operator|.
name|getText
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedDelete
argument_list|(
name|iName
operator|.
name|getText
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|ScriptInterface
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|reload
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iBottom
operator|.
name|addButton
argument_list|(
literal|"back"
argument_list|,
name|MESSAGES
operator|.
name|opScriptBack
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iDialogForm
operator|.
name|addBottomRow
argument_list|(
name|iBottom
argument_list|)
expr_stmt|;
name|setWidget
argument_list|(
name|iDialogForm
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|addParam
parameter_list|(
specifier|final
name|ScriptParameterInterface
name|param
parameter_list|)
block|{
name|List
argument_list|<
name|Widget
argument_list|>
name|line
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
specifier|final
name|TextBox
name|name
init|=
operator|new
name|TextBox
argument_list|()
decl_stmt|;
name|name
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|name
operator|.
name|setMaxLength
argument_list|(
literal|128
argument_list|)
expr_stmt|;
name|name
operator|.
name|setWidth
argument_list|(
literal|"125px"
argument_list|)
expr_stmt|;
if|if
condition|(
name|param
operator|.
name|getName
argument_list|()
operator|!=
literal|null
condition|)
name|name
operator|.
name|setText
argument_list|(
name|param
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|name
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|param
operator|.
name|setName
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|iParams
operator|.
name|getWidget
argument_list|(
name|iParams
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
name|addParam
argument_list|(
operator|new
name|ScriptParameterInterface
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iBottom
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|TextBox
name|label
init|=
operator|new
name|TextBox
argument_list|()
decl_stmt|;
name|label
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|label
operator|.
name|setMaxLength
argument_list|(
literal|256
argument_list|)
expr_stmt|;
name|label
operator|.
name|setWidth
argument_list|(
literal|"125px"
argument_list|)
expr_stmt|;
if|if
condition|(
name|param
operator|.
name|getLabel
argument_list|()
operator|!=
literal|null
condition|)
name|label
operator|.
name|setText
argument_list|(
name|param
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|label
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|param
operator|.
name|setLabel
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|iBottom
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|TextBox
name|type
init|=
operator|new
name|TextBox
argument_list|()
decl_stmt|;
name|type
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|type
operator|.
name|setMaxLength
argument_list|(
literal|2048
argument_list|)
expr_stmt|;
name|type
operator|.
name|setWidth
argument_list|(
literal|"125px"
argument_list|)
expr_stmt|;
if|if
condition|(
name|param
operator|.
name|getType
argument_list|()
operator|!=
literal|null
condition|)
name|type
operator|.
name|setText
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|type
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|param
operator|.
name|setType
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|iBottom
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|TextBox
name|defaultValue
init|=
operator|new
name|TextBox
argument_list|()
decl_stmt|;
name|defaultValue
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|defaultValue
operator|.
name|setMaxLength
argument_list|(
literal|2048
argument_list|)
expr_stmt|;
name|defaultValue
operator|.
name|setWidth
argument_list|(
literal|"125px"
argument_list|)
expr_stmt|;
if|if
condition|(
name|param
operator|.
name|getDefaultValue
argument_list|()
operator|!=
literal|null
condition|)
name|defaultValue
operator|.
name|setText
argument_list|(
name|param
operator|.
name|getDefaultValue
argument_list|()
argument_list|)
expr_stmt|;
name|defaultValue
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|param
operator|.
name|setDefaultValue
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|iBottom
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
name|defaultValue
argument_list|)
expr_stmt|;
name|Image
name|delete
init|=
operator|new
name|Image
argument_list|(
name|RESOURCES
operator|.
name|delete
argument_list|()
argument_list|)
decl_stmt|;
name|delete
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|titleDeleteRow
argument_list|()
argument_list|)
expr_stmt|;
name|delete
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setCursor
argument_list|(
name|Cursor
operator|.
name|POINTER
argument_list|)
expr_stmt|;
name|delete
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iParams
operator|.
name|getRowCount
argument_list|()
operator|>
literal|2
condition|)
name|iParams
operator|.
name|removeRow
argument_list|(
name|iParams
operator|.
name|getCellForEvent
argument_list|(
name|event
argument_list|)
operator|.
name|getRowIndex
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
name|delete
argument_list|)
expr_stmt|;
name|iParams
operator|.
name|addRow
argument_list|(
name|param
argument_list|,
name|line
argument_list|)
expr_stmt|;
block|}
specifier|private
name|boolean
name|validate
parameter_list|()
block|{
if|if
condition|(
name|iName
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iBottom
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorNameIsRequired
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
for|for
control|(
name|ScriptInterface
name|script
range|:
name|iScripts
control|)
block|{
if|if
condition|(
name|iScriptId
operator|!=
literal|null
operator|&&
name|iScriptId
operator|.
name|equals
argument_list|(
name|script
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
continue|continue;
if|if
condition|(
name|iName
operator|.
name|getText
argument_list|()
operator|.
name|equals
argument_list|(
name|script
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|iBottom
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorNameNotUnique
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|iEngine
operator|.
name|getSelectedIndex
argument_list|()
operator|<=
literal|0
condition|)
block|{
name|iBottom
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorEngineIsRequired
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
name|iScript
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iBottom
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorScriptIsRequired
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
name|Set
argument_list|<
name|String
argument_list|>
name|names
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iParams
operator|.
name|getRowCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|ScriptParameterInterface
name|p
init|=
name|iParams
operator|.
name|getData
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|p
operator|!=
literal|null
operator|&&
name|p
operator|.
name|getName
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|p
operator|.
name|getName
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|names
operator|.
name|add
argument_list|(
name|p
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|iBottom
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorParameterNameNotUnique
argument_list|(
name|p
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
name|p
operator|.
name|getType
argument_list|()
operator|==
literal|null
operator|||
name|p
operator|.
name|getType
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iBottom
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorParameterTypeRequired
argument_list|(
name|p
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|addScript
parameter_list|()
block|{
name|iScriptId
operator|=
literal|null
expr_stmt|;
name|setText
argument_list|(
name|MESSAGES
operator|.
name|dialogAddScript
argument_list|()
argument_list|)
expr_stmt|;
name|iName
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iDescription
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iEngine
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iPermission
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iScript
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iParams
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|addParam
argument_list|(
operator|new
name|ScriptParameterInterface
argument_list|()
argument_list|)
expr_stmt|;
name|center
argument_list|()
expr_stmt|;
name|iBottom
operator|.
name|setEnabled
argument_list|(
literal|"save"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iBottom
operator|.
name|setEnabled
argument_list|(
literal|"update"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iBottom
operator|.
name|setEnabled
argument_list|(
literal|"delete"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iBottom
operator|.
name|setEnabled
argument_list|(
literal|"export"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|editScript
parameter_list|(
name|ScriptInterface
name|script
parameter_list|)
block|{
name|iScriptId
operator|=
name|script
operator|.
name|getId
argument_list|()
expr_stmt|;
name|setText
argument_list|(
name|MESSAGES
operator|.
name|dialogEditScript
argument_list|()
argument_list|)
expr_stmt|;
name|iName
operator|.
name|setText
argument_list|(
name|script
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|iDescription
operator|.
name|setText
argument_list|(
name|script
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
name|iPermission
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|script
operator|.
name|getPermission
argument_list|()
operator|!=
literal|null
condition|)
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iPermission
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|script
operator|.
name|getPermission
argument_list|()
operator|.
name|equals
argument_list|(
name|iPermission
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
block|{
name|iPermission
operator|.
name|setSelectedIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
break|break;
block|}
name|iEngine
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|script
operator|.
name|getEngine
argument_list|()
operator|!=
literal|null
condition|)
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iEngine
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|script
operator|.
name|getEngine
argument_list|()
operator|.
name|equals
argument_list|(
name|iEngine
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
block|{
name|iEngine
operator|.
name|setSelectedIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
break|break;
block|}
name|iScript
operator|.
name|setText
argument_list|(
name|script
operator|.
name|getScript
argument_list|()
argument_list|)
expr_stmt|;
name|iParams
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|script
operator|.
name|hasParameters
argument_list|()
condition|)
for|for
control|(
name|ScriptParameterInterface
name|param
range|:
name|script
operator|.
name|getParameters
argument_list|()
control|)
block|{
name|ScriptParameterInterface
name|p
init|=
operator|new
name|ScriptParameterInterface
argument_list|()
decl_stmt|;
name|p
operator|.
name|setDefaultValue
argument_list|(
name|param
operator|.
name|getDefaultValue
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|setLabel
argument_list|(
name|param
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|setType
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|setName
argument_list|(
name|param
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|addParam
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
name|addParam
argument_list|(
operator|new
name|ScriptParameterInterface
argument_list|()
argument_list|)
expr_stmt|;
name|center
argument_list|()
expr_stmt|;
name|iBottom
operator|.
name|setEnabled
argument_list|(
literal|"save"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iBottom
operator|.
name|setEnabled
argument_list|(
literal|"update"
argument_list|,
name|script
operator|.
name|canEdit
argument_list|()
argument_list|)
expr_stmt|;
name|iBottom
operator|.
name|setEnabled
argument_list|(
literal|"delete"
argument_list|,
name|script
operator|.
name|canDelete
argument_list|()
argument_list|)
expr_stmt|;
name|iBottom
operator|.
name|setEnabled
argument_list|(
literal|"export"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setup
parameter_list|(
name|ScriptOptionsInterface
name|options
parameter_list|)
block|{
name|iPermission
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iPermission
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemNone
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|permission
range|:
name|options
operator|.
name|getPermissions
argument_list|()
control|)
name|iPermission
operator|.
name|addItem
argument_list|(
name|permission
argument_list|)
expr_stmt|;
name|iEngine
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iEngine
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemSelect
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|engine
range|:
name|options
operator|.
name|getEngines
argument_list|()
control|)
name|iEngine
operator|.
name|addItem
argument_list|(
name|engine
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

