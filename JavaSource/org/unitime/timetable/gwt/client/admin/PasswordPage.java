begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|admin
package|;
end_package

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|PasswordTextBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextBox
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|PasswordPage
extends|extends
name|Composite
block|{
specifier|protected
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|final
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|SimpleForm
name|iForm
decl_stmt|;
specifier|private
name|TextBox
name|iUser
init|=
literal|null
decl_stmt|,
name|iEmail
init|=
literal|null
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iHeader
decl_stmt|,
name|iFooter
decl_stmt|;
specifier|private
name|int
name|iFooterRow
decl_stmt|;
specifier|private
name|PasswordTextBox
name|iOldPassword
decl_stmt|,
name|iNewPassword
decl_stmt|,
name|iRetypePassword
decl_stmt|;
specifier|public
name|PasswordPage
parameter_list|()
block|{
name|iForm
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|iHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|headerChangePassword
argument_list|()
argument_list|)
expr_stmt|;
name|iFooter
operator|=
name|iHeader
operator|.
name|clonePanel
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iHeader
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"1"
operator|.
name|equals
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"reset"
argument_list|)
argument_list|)
condition|)
block|{
name|iHeader
operator|.
name|setHeaderTitle
argument_list|(
name|MESSAGES
operator|.
name|headerResetPassword
argument_list|()
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|addButton
argument_list|(
literal|"reset"
argument_list|,
name|MESSAGES
operator|.
name|buttonReset
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iFooter
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
if|if
condition|(
name|iEmail
operator|.
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|||
operator|!
name|iEmail
operator|.
name|getValue
argument_list|()
operator|.
name|contains
argument_list|(
literal|"@"
argument_list|)
condition|)
block|{
name|iFooter
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorEmailNotValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitPasswordReset
argument_list|()
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|PasswordChangeRequest
operator|.
name|resetPassword
argument_list|(
name|iEmail
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|PasswordChangeResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iFooter
operator|.
name|setErrorMessage
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|PasswordChangeResponse
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iFooter
operator|.
name|setMessage
argument_list|(
name|MESSAGES
operator|.
name|messagePasswordReset
argument_list|()
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|setEnabled
argument_list|(
literal|"reset"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iFooterRow
condition|;
name|i
operator|++
control|)
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|i
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iEmail
operator|=
operator|new
name|TextBox
argument_list|()
expr_stmt|;
name|iEmail
operator|.
name|setStyleName
argument_list|(
literal|"gwt-SuggestBox"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|fieldEmail
argument_list|()
argument_list|,
name|iEmail
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iFooter
operator|.
name|addButton
argument_list|(
literal|"change"
argument_list|,
name|MESSAGES
operator|.
name|buttonChange
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iFooter
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
if|if
condition|(
name|iOldPassword
operator|.
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iFooter
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorOldPasswordNotValid
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iNewPassword
operator|.
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iFooter
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorEnterNewPassword
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
operator|!
name|iNewPassword
operator|.
name|getValue
argument_list|()
operator|.
name|equals
argument_list|(
name|iRetypePassword
operator|.
name|getValue
argument_list|()
argument_list|)
condition|)
block|{
name|iFooter
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorNewPasswordMismatch
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iFooter
operator|.
name|setEnabled
argument_list|(
literal|"change"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|PasswordChangeRequest
operator|.
name|changePassword
argument_list|(
name|iUser
operator|==
literal|null
condition|?
literal|null
else|:
name|iUser
operator|.
name|getValue
argument_list|()
argument_list|,
name|iOldPassword
operator|.
name|getValue
argument_list|()
argument_list|,
name|iNewPassword
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|PasswordChangeResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iFooter
operator|.
name|setEnabled
argument_list|(
literal|"change"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|setErrorMessage
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|PasswordChangeResponse
name|result
parameter_list|)
block|{
name|iOldPassword
operator|.
name|setValue
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iNewPassword
operator|.
name|setValue
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iRetypePassword
operator|.
name|setValue
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|setMessage
argument_list|(
name|MESSAGES
operator|.
name|messagePasswordChanged
argument_list|()
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|setEnabled
argument_list|(
literal|"change"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iFooterRow
condition|;
name|i
operator|++
control|)
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|i
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"user"
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|iUser
operator|=
operator|new
name|TextBox
argument_list|()
expr_stmt|;
name|iUser
operator|.
name|setStyleName
argument_list|(
literal|"gwt-SuggestBox"
argument_list|)
expr_stmt|;
name|iUser
operator|.
name|setValue
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"user"
argument_list|)
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|fieldUsername
argument_list|()
argument_list|,
name|iUser
argument_list|)
expr_stmt|;
block|}
name|iOldPassword
operator|=
operator|new
name|PasswordTextBox
argument_list|()
expr_stmt|;
name|iOldPassword
operator|.
name|setStyleName
argument_list|(
literal|"gwt-SuggestBox"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|fieldOldPassword
argument_list|()
argument_list|,
name|iOldPassword
argument_list|)
expr_stmt|;
if|if
condition|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"key"
argument_list|)
operator|!=
literal|null
condition|)
name|iOldPassword
operator|.
name|setValue
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"key"
argument_list|)
argument_list|)
expr_stmt|;
name|iNewPassword
operator|=
operator|new
name|PasswordTextBox
argument_list|()
expr_stmt|;
name|iNewPassword
operator|.
name|setStyleName
argument_list|(
literal|"gwt-SuggestBox"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|fieldNewPassword
argument_list|()
argument_list|,
name|iNewPassword
argument_list|)
expr_stmt|;
name|iRetypePassword
operator|=
operator|new
name|PasswordTextBox
argument_list|()
expr_stmt|;
name|iRetypePassword
operator|.
name|setStyleName
argument_list|(
literal|"gwt-SuggestBox"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|fieldRetypePassword
argument_list|()
argument_list|,
name|iRetypePassword
argument_list|)
expr_stmt|;
block|}
name|iFooterRow
operator|=
name|iForm
operator|.
name|addBottomRow
argument_list|(
name|iFooter
argument_list|)
expr_stmt|;
name|initWidget
argument_list|(
name|iForm
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|PasswordChangeResponse
implements|implements
name|GwtRpcResponse
block|{ 	}
specifier|public
specifier|static
class|class
name|PasswordChangeRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|PasswordChangeResponse
argument_list|>
block|{
specifier|private
name|String
name|iUsername
decl_stmt|,
name|iEmail
decl_stmt|,
name|iOldPassword
decl_stmt|,
name|iNewPassword
decl_stmt|;
specifier|private
name|boolean
name|iReset
init|=
literal|false
decl_stmt|;
specifier|public
name|PasswordChangeRequest
parameter_list|()
block|{
block|}
specifier|public
name|void
name|setUsername
parameter_list|(
name|String
name|username
parameter_list|)
block|{
name|iUsername
operator|=
name|username
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasUsername
parameter_list|()
block|{
return|return
name|iUsername
operator|!=
literal|null
operator|&&
operator|!
name|iUsername
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getUsername
parameter_list|()
block|{
return|return
name|iUsername
return|;
block|}
specifier|public
name|void
name|setEmail
parameter_list|(
name|String
name|email
parameter_list|)
block|{
name|iEmail
operator|=
name|email
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasEmail
parameter_list|()
block|{
return|return
name|iEmail
operator|!=
literal|null
operator|&&
operator|!
name|iEmail
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getEmail
parameter_list|()
block|{
return|return
name|iEmail
return|;
block|}
specifier|public
name|void
name|setOldPassword
parameter_list|(
name|String
name|passwd
parameter_list|)
block|{
name|iOldPassword
operator|=
name|passwd
expr_stmt|;
block|}
specifier|public
name|String
name|getOldPassword
parameter_list|()
block|{
return|return
name|iOldPassword
return|;
block|}
specifier|public
name|void
name|setNewPassword
parameter_list|(
name|String
name|passwd
parameter_list|)
block|{
name|iNewPassword
operator|=
name|passwd
expr_stmt|;
block|}
specifier|public
name|String
name|getNewPassword
parameter_list|()
block|{
return|return
name|iNewPassword
return|;
block|}
specifier|public
name|void
name|setReset
parameter_list|(
name|boolean
name|reset
parameter_list|)
block|{
name|iReset
operator|=
name|reset
expr_stmt|;
block|}
specifier|public
name|boolean
name|isReset
parameter_list|()
block|{
return|return
name|iReset
return|;
block|}
specifier|public
specifier|static
name|PasswordChangeRequest
name|changePassword
parameter_list|(
name|String
name|username
parameter_list|,
name|String
name|oldPasswd
parameter_list|,
name|String
name|newPasswd
parameter_list|)
block|{
name|PasswordChangeRequest
name|req
init|=
operator|new
name|PasswordChangeRequest
argument_list|()
decl_stmt|;
name|req
operator|.
name|setUsername
argument_list|(
name|username
argument_list|)
expr_stmt|;
name|req
operator|.
name|setOldPassword
argument_list|(
name|oldPasswd
argument_list|)
expr_stmt|;
name|req
operator|.
name|setNewPassword
argument_list|(
name|newPasswd
argument_list|)
expr_stmt|;
return|return
name|req
return|;
block|}
specifier|public
specifier|static
name|PasswordChangeRequest
name|resetPassword
parameter_list|(
name|String
name|email
parameter_list|)
block|{
name|PasswordChangeRequest
name|req
init|=
operator|new
name|PasswordChangeRequest
argument_list|()
decl_stmt|;
name|req
operator|.
name|setEmail
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|req
operator|.
name|setReset
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|req
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|""
return|;
block|}
block|}
block|}
end_class

end_unit

