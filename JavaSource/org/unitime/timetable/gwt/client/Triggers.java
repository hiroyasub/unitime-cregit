begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|admin
operator|.
name|ClearHibernateCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|instructor
operator|.
name|InstructorAvailabilityHint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|Refresh
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|rooms
operator|.
name|RoomHint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|rooms
operator|.
name|RoomSharingHint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeFrameDialog
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Command
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_enum
specifier|public
enum|enum
name|Triggers
block|{
name|gwtHint
argument_list|(
operator|new
name|Command
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|GwtHint
operator|.
name|createTriggers
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
block|,
name|lookup
argument_list|(
operator|new
name|Command
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|Lookup
operator|.
name|createTriggers
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
block|,
name|gwtDialog
argument_list|(
operator|new
name|Command
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|UniTimeFrameDialog
operator|.
name|createTriggers
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
block|,
name|loading
argument_list|(
operator|new
name|Command
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|LoadingWidget
operator|.
name|createTriggers
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
block|,
name|refresh
argument_list|(
operator|new
name|Command
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|Refresh
operator|.
name|createTriggers
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
block|,
name|notifications
argument_list|(
operator|new
name|Command
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|UniTimeNotifications
operator|.
name|createTriggers
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
block|,
name|roomAvailabilityHint
argument_list|(
operator|new
name|Command
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|RoomSharingHint
operator|.
name|createTriggers
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
block|,
name|roomHint
argument_list|(
operator|new
name|Command
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|RoomHint
operator|.
name|createTriggers
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
block|,
name|timeHint
argument_list|(
operator|new
name|Command
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|TimeHint
operator|.
name|createTriggers
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
block|,
name|clearHibCache
argument_list|(
operator|new
name|Command
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|ClearHibernateCache
operator|.
name|createTriggers
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
block|,
name|instructorAvailabilityHint
argument_list|(
operator|new
name|Command
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|InstructorAvailabilityHint
operator|.
name|createTriggers
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
block|, 	;
specifier|private
name|Command
name|iCommand
decl_stmt|;
name|Triggers
parameter_list|(
name|Command
name|registerCommand
parameter_list|)
block|{
name|iCommand
operator|=
name|registerCommand
expr_stmt|;
block|}
specifier|public
name|void
name|register
parameter_list|()
block|{
name|iCommand
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
block|}
end_enum

end_unit

