begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|departments
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeConfirmationDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|DepartmentInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|DepartmentInterface
operator|.
name|UpdateDepartmentAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|DepartmentInterface
operator|.
name|DepartmentPropertiesInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|DepartmentInterface
operator|.
name|DepartmentPropertiesRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Unit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|TakesValue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FlexTable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FlexTable
operator|.
name|FlexCellFormatter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|VerticalPanel
import|;
end_import

begin_class
specifier|public
class|class
name|DepartmentsEdit
extends|extends
name|Composite
implements|implements
name|TakesValue
argument_list|<
name|DepartmentInterface
argument_list|>
block|{
specifier|protected
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|SimpleForm
name|iForm
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iHeader
decl_stmt|,
name|iFooter
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
name|iName
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
name|iAbbreviation
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
name|iExternalManagerAbbreviation
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
name|iExternalManagerName
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
name|iDistPrefPriority
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|CheckBox
argument_list|>
name|iExternalManager
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|Label
argument_list|>
name|iAcademicSession
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
name|iDeptCode
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|iStatusType
decl_stmt|;
specifier|private
name|ListBox
index|[]
name|iCurrentDependentOptions
decl_stmt|;
specifier|private
name|ListBox
index|[]
name|iCurrentStatusTypeOptions
decl_stmt|;
specifier|private
name|List
name|iDependentDepartments
decl_stmt|;
specifier|private
name|List
name|iDependentStatuses
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|iCurrentDependentDepartments
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|iCurrentDependentStatuses
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|TextBox
name|iExternalId
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|CheckBox
argument_list|>
name|iAllowReqTime
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|CheckBox
argument_list|>
name|iAllowReqRoom
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|CheckBox
argument_list|>
name|iAllowReqDist
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|CheckBox
argument_list|>
name|iAllowEvents
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|CheckBox
argument_list|>
name|iInheritInstructorPreferences
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|CheckBox
argument_list|>
name|iAllowStudentScheduling
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|CheckBox
argument_list|>
name|iExternalFundingDept
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|controlDeptHeaderPanel
decl_stmt|;
specifier|private
name|VerticalPanel
name|iControlDeptMainPanel
decl_stmt|;
specifier|private
name|FlexTable
name|iControlDeptFlexTable
decl_stmt|;
specifier|private
name|DepartmentInterface
name|iDepartment
init|=
literal|null
decl_stmt|;
specifier|private
name|DepartmentPropertiesInterface
name|iProperties
decl_stmt|;
specifier|public
name|DepartmentsEdit
parameter_list|()
block|{
comment|/*create the UI */
name|iForm
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|iForm
operator|.
name|addStyleName
argument_list|(
literal|"unitime-Dept"
argument_list|)
expr_stmt|;
name|iHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"save"
argument_list|,
name|MESSAGES
operator|.
name|buttonSave
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|validate
argument_list|()
condition|)
return|return;
name|UpdateDepartmentRequest
name|request
init|=
operator|new
name|UpdateDepartmentRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setAction
argument_list|(
name|UpdateDepartmentAction
operator|.
name|CREATE
argument_list|)
expr_stmt|;
name|request
operator|.
name|setDepartment
argument_list|(
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitPlease
argument_list|()
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|request
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|DepartmentInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedCreate
argument_list|(
name|MESSAGES
operator|.
name|objectDepartment
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedCreate
argument_list|(
name|MESSAGES
operator|.
name|objectDepartment
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|DepartmentInterface
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|onBack
argument_list|(
literal|true
argument_list|,
name|result
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"update"
argument_list|,
name|MESSAGES
operator|.
name|buttonUpdate
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|validate
argument_list|()
condition|)
return|return;
name|UpdateDepartmentRequest
name|request
init|=
operator|new
name|UpdateDepartmentRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setAction
argument_list|(
name|UpdateDepartmentAction
operator|.
name|UPDATE
argument_list|)
expr_stmt|;
name|request
operator|.
name|setDepartment
argument_list|(
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitPlease
argument_list|()
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|request
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|DepartmentInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedUpdate
argument_list|(
name|MESSAGES
operator|.
name|objectDepartment
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedUpdate
argument_list|(
name|MESSAGES
operator|.
name|objectDepartment
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|DepartmentInterface
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|onBack
argument_list|(
literal|true
argument_list|,
name|result
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"delete"
argument_list|,
name|MESSAGES
operator|.
name|buttonDelete
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|UniTimeConfirmationDialog
operator|.
name|confirm
argument_list|(
name|MESSAGES
operator|.
name|confirmDepartmentDelete
argument_list|()
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|UpdateDepartmentRequest
name|request
init|=
operator|new
name|UpdateDepartmentRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setAction
argument_list|(
name|UpdateDepartmentAction
operator|.
name|DELETE
argument_list|)
expr_stmt|;
name|request
operator|.
name|setDepartment
argument_list|(
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitPlease
argument_list|()
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|request
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|DepartmentInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedDelete
argument_list|(
name|MESSAGES
operator|.
name|objectDepartment
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedDelete
argument_list|(
name|MESSAGES
operator|.
name|objectDepartment
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|DepartmentInterface
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|onBack
argument_list|(
literal|true
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"back"
argument_list|,
name|MESSAGES
operator|.
name|buttonBack
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|onBack
argument_list|(
literal|false
argument_list|,
name|iDepartment
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iHeader
argument_list|)
expr_stmt|;
comment|//AcademicSession
name|iAcademicSession
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|Label
argument_list|>
argument_list|(
operator|new
name|Label
argument_list|()
argument_list|)
expr_stmt|;
name|iAcademicSession
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-Label"
argument_list|)
expr_stmt|;
empty_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAcademicSession
argument_list|()
argument_list|,
name|iAcademicSession
argument_list|)
expr_stmt|;
comment|//DeptCode
name|iDeptCode
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
argument_list|(
operator|new
name|TextBox
argument_list|()
argument_list|)
expr_stmt|;
name|iDeptCode
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iDeptCode
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|iDeptCode
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"200px"
argument_list|)
expr_stmt|;
name|iDeptCode
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iDeptCode
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propDeptCode
argument_list|()
argument_list|,
name|iDeptCode
argument_list|)
expr_stmt|;
comment|//abbrev
name|iAbbreviation
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
argument_list|(
operator|new
name|TextBox
argument_list|()
argument_list|)
expr_stmt|;
name|iAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|iAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"100px"
argument_list|)
expr_stmt|;
name|iAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iAbbreviation
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAbbreviation
argument_list|()
argument_list|,
name|iAbbreviation
argument_list|)
expr_stmt|;
comment|//name
name|iName
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
argument_list|(
operator|new
name|TextBox
argument_list|()
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"600px"
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iName
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propName
argument_list|()
argument_list|,
name|iName
argument_list|)
expr_stmt|;
comment|//StatusType
name|iStatusType
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iStatusType
operator|.
name|getWidget
argument_list|()
operator|.
name|setMultipleSelect
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iStatusType
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"300px"
argument_list|)
expr_stmt|;
name|iStatusType
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"gwt-SuggestBox"
argument_list|)
expr_stmt|;
name|iStatusType
operator|.
name|getWidget
argument_list|()
operator|.
name|setVisibleItemCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|optionDepartmentStatus
argument_list|()
argument_list|,
name|iStatusType
argument_list|)
expr_stmt|;
comment|//ExternalID
name|iExternalId
operator|=
operator|new
name|TextBox
argument_list|()
expr_stmt|;
name|iExternalId
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iExternalId
operator|.
name|setMaxLength
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|iExternalId
operator|.
name|setWidth
argument_list|(
literal|"200px"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propExternalId
argument_list|()
argument_list|,
name|iExternalId
argument_list|)
expr_stmt|;
comment|//ExternalManager
name|iExternalManager
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|CheckBox
argument_list|>
argument_list|(
operator|new
name|CheckBox
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propExternalManager
argument_list|()
argument_list|,
name|iExternalManager
argument_list|)
expr_stmt|;
comment|//ExternalManagerAbbreviation
name|iExternalManagerAbbreviation
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
argument_list|(
operator|new
name|TextBox
argument_list|()
argument_list|)
expr_stmt|;
name|iExternalManagerAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iExternalManagerAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|iExternalManagerAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"200px"
argument_list|)
expr_stmt|;
name|iExternalManagerAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iExternalManagerAbbreviation
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propExternalManagerAbbreviation
argument_list|()
argument_list|,
name|iExternalManagerAbbreviation
argument_list|)
expr_stmt|;
comment|//ExternalManagerName
name|iExternalManagerName
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
argument_list|(
operator|new
name|TextBox
argument_list|()
argument_list|)
expr_stmt|;
name|iExternalManagerName
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iExternalManagerName
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|iExternalManagerName
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"200px"
argument_list|)
expr_stmt|;
name|iExternalManagerName
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iExternalManagerName
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propExternalManagerName
argument_list|()
argument_list|,
name|iExternalManagerName
argument_list|)
expr_stmt|;
comment|//DistPrefPriority
name|iDistPrefPriority
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
argument_list|(
operator|new
name|TextBox
argument_list|()
argument_list|)
expr_stmt|;
name|iDistPrefPriority
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iDistPrefPriority
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|iDistPrefPriority
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"100px"
argument_list|)
expr_stmt|;
name|iDistPrefPriority
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iDistPrefPriority
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propPrefPriority
argument_list|()
argument_list|,
name|iDistPrefPriority
argument_list|)
expr_stmt|;
comment|//AllowReqTime
name|iAllowReqTime
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|CheckBox
argument_list|>
argument_list|(
operator|new
name|CheckBox
argument_list|()
argument_list|)
expr_stmt|;
name|iAllowReqTime
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAllowReqTime
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|iAllowReqTime
argument_list|)
expr_stmt|;
comment|//AllowReqRoom
name|iAllowReqRoom
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|CheckBox
argument_list|>
argument_list|(
operator|new
name|CheckBox
argument_list|()
argument_list|)
expr_stmt|;
name|iAllowReqRoom
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAllowReqRoom
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|iAllowReqRoom
argument_list|)
expr_stmt|;
comment|//AllowReqDestribution
name|iAllowReqDist
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|CheckBox
argument_list|>
argument_list|(
operator|new
name|CheckBox
argument_list|()
argument_list|)
expr_stmt|;
name|iAllowReqDist
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAllowReqDist
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|iAllowReqDist
argument_list|)
expr_stmt|;
comment|//Instruc Pref
name|iInheritInstructorPreferences
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|CheckBox
argument_list|>
argument_list|(
operator|new
name|CheckBox
argument_list|()
argument_list|)
expr_stmt|;
name|iInheritInstructorPreferences
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propInheritInstructorPref
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|iInheritInstructorPreferences
argument_list|)
expr_stmt|;
comment|//Allow Events
name|iAllowEvents
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|CheckBox
argument_list|>
argument_list|(
operator|new
name|CheckBox
argument_list|()
argument_list|)
expr_stmt|;
name|iAllowEvents
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAllowEvents
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|iAllowEvents
argument_list|)
expr_stmt|;
comment|//Allow Scheduling
name|iAllowStudentScheduling
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|CheckBox
argument_list|>
argument_list|(
operator|new
name|CheckBox
argument_list|()
argument_list|)
expr_stmt|;
name|iAllowStudentScheduling
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAllowStudentScheduling
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|iAllowStudentScheduling
argument_list|)
expr_stmt|;
comment|//External Funding Department
name|iExternalFundingDept
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|CheckBox
argument_list|>
argument_list|(
operator|new
name|CheckBox
argument_list|()
argument_list|)
expr_stmt|;
name|iExternalFundingDept
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propExternalFundingDept
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|iExternalFundingDept
argument_list|)
expr_stmt|;
comment|//Controlling Department Statuses
name|controlDeptHeaderPanel
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
literal|"Controlling Department Statuses"
argument_list|)
expr_stmt|;
name|controlDeptHeaderPanel
operator|.
name|addButton
argument_list|(
literal|"Delete All"
argument_list|,
name|MESSAGES
operator|.
name|buttonDependentDeleteAll
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|deleteAllDependentDepartments
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|controlDeptHeaderPanel
operator|.
name|addButton
argument_list|(
literal|"Add Status"
argument_list|,
name|MESSAGES
operator|.
name|buttonDependentAddStatus
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|addNewRow
argument_list|(
name|iDepartment
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|controlDeptHeaderPanel
argument_list|)
expr_stmt|;
name|iControlDeptMainPanel
operator|=
operator|new
name|VerticalPanel
argument_list|()
expr_stmt|;
name|iControlDeptFlexTable
operator|=
operator|new
name|FlexTable
argument_list|()
expr_stmt|;
name|iControlDeptMainPanel
operator|.
name|add
argument_list|(
name|iControlDeptFlexTable
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iControlDeptMainPanel
argument_list|)
expr_stmt|;
name|iControlDeptFlexTable
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setPaddingBottom
argument_list|(
literal|20
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|iFooter
operator|=
name|iHeader
operator|.
name|clonePanel
argument_list|()
expr_stmt|;
name|iForm
operator|.
name|addBottomRow
argument_list|(
name|iFooter
argument_list|)
expr_stmt|;
name|initWidget
argument_list|(
name|iForm
argument_list|)
expr_stmt|;
block|}
comment|/*onBack and isAbbreviationUnique are redefined in DepartmentsPage*/
specifier|protected
name|void
name|onBack
parameter_list|(
name|boolean
name|refresh
parameter_list|,
name|Long
name|DepartmentId
parameter_list|)
block|{
block|}
specifier|protected
name|boolean
name|isAbbreviationUnique
parameter_list|(
name|DepartmentInterface
name|Department
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|protected
name|boolean
name|isDeptCodeUnique
parameter_list|(
name|DepartmentInterface
name|Department
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
comment|/* 	 * Set values in UI 	 */
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|DepartmentInterface
name|department
parameter_list|)
block|{
name|Logger
name|log
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|DepartmentsEdit
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
comment|//log.info("setValue");
name|iDeptCode
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iAbbreviation
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iName
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iExternalManagerAbbreviation
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iExternalManagerName
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iDistPrefPriority
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iDeptCode
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iExternalId
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iDistPrefPriority
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iExternalManagerAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iExternalManagerName
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iStatusType
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iAbbreviation
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iAllowReqTime
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iAllowReqRoom
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iAllowReqDist
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iInheritInstructorPreferences
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iAllowEvents
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iAllowStudentScheduling
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iExternalFundingDept
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iControlDeptFlexTable
operator|.
name|removeAllRows
argument_list|()
expr_stmt|;
name|iControlDeptFlexTable
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iCurrentDependentDepartments
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iCurrentDependentStatuses
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iControlDeptFlexTable
operator|.
name|setText
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|MESSAGES
operator|.
name|propControllingDepartment
argument_list|()
argument_list|)
expr_stmt|;
name|FlexCellFormatter
name|cellFormatter
init|=
name|iControlDeptFlexTable
operator|.
name|getFlexCellFormatter
argument_list|()
decl_stmt|;
name|cellFormatter
operator|.
name|setStyleName
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|"department-StatusItalics"
argument_list|)
expr_stmt|;
name|cellFormatter
operator|.
name|setStyleName
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|"department-StatusItalics"
argument_list|)
expr_stmt|;
if|if
condition|(
name|department
operator|==
literal|null
condition|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"department is equal to null"
argument_list|)
expr_stmt|;
name|controlDeptHeaderPanel
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iControlDeptMainPanel
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iExternalManager
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iExternalManager
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setHeaderTitle
argument_list|(
name|MESSAGES
operator|.
name|sectAddDepartment
argument_list|()
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"save"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"update"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"delete"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"back"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iDepartment
operator|=
operator|new
name|DepartmentInterface
argument_list|()
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|DepartmentPropertiesRequest
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|DepartmentPropertiesInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedCreate
argument_list|(
name|MESSAGES
operator|.
name|objectDepartment
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedCreate
argument_list|(
name|MESSAGES
operator|.
name|objectDepartment
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|DepartmentPropertiesInterface
name|result
parameter_list|)
block|{
name|iStatusType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|propDepartmentStatusDefault
argument_list|()
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|result
operator|.
name|getSatusOptions
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|iStatusType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iAcademicSession
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
operator|(
name|result
operator|.
name|getAcademicSessionName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|result
operator|.
name|getAcademicSessionName
argument_list|()
operator|)
argument_list|)
expr_stmt|;
comment|//Remove external funding row when switch in config turned off
if|if
condition|(
name|result
operator|.
name|isCoursesFundingDepartmentsEnabled
argument_list|()
operator|==
literal|false
condition|)
block|{
name|int
name|rowNum
init|=
name|iForm
operator|.
name|getRow
argument_list|(
name|MESSAGES
operator|.
name|propExternalFundingDept
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|rowNum
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iControlDeptFlexTable
operator|.
name|setText
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|MESSAGES
operator|.
name|propStatusManagedBy
argument_list|(
operator|(
operator|(
name|department
operator|.
name|getDeptCode
argument_list|()
operator|==
literal|null
operator|)
condition|?
literal|""
else|:
name|department
operator|.
name|getDeptCode
argument_list|()
operator|)
operator|+
literal|" - "
operator|+
operator|(
operator|(
name|department
operator|.
name|getName
argument_list|()
operator|==
literal|null
operator|)
condition|?
literal|""
else|:
name|department
operator|.
name|getName
argument_list|()
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setHeaderTitle
argument_list|(
name|MESSAGES
operator|.
name|sectEditDepartment
argument_list|()
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"save"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"update"
argument_list|,
name|department
operator|.
name|getCanEdit
argument_list|()
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"delete"
argument_list|,
name|department
operator|.
name|getCanDelete
argument_list|()
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"back"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iDeptCode
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|department
operator|.
name|getDeptCode
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|department
operator|.
name|getDeptCode
argument_list|()
argument_list|)
expr_stmt|;
name|iAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|department
operator|.
name|getAbbreviation
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|department
operator|.
name|getAbbreviation
argument_list|()
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|department
operator|.
name|getName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|department
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|department
operator|.
name|isCanChangeExtManager
argument_list|()
operator|==
literal|false
condition|)
name|iExternalManager
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iAcademicSession
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
operator|(
name|department
operator|.
name|getAcademicSessionName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|department
operator|.
name|getAcademicSessionName
argument_list|()
operator|)
argument_list|)
expr_stmt|;
name|iExternalId
operator|.
name|setText
argument_list|(
name|department
operator|.
name|getExternalId
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|department
operator|.
name|getExternalId
argument_list|()
argument_list|)
expr_stmt|;
name|iDistPrefPriority
operator|.
name|setText
argument_list|(
name|department
operator|.
name|getDistributionPrefPriority
argument_list|()
operator|==
literal|null
condition|?
literal|"0"
else|:
name|department
operator|.
name|getDistributionPrefPriority
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|iExternalManager
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|department
operator|.
name|getExternalManager
argument_list|()
argument_list|)
expr_stmt|;
name|iExternalManagerAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|department
operator|.
name|getExternalMgrAbbv
argument_list|()
argument_list|)
expr_stmt|;
name|iExternalManagerName
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|department
operator|.
name|getExternalMgrLabel
argument_list|()
argument_list|)
expr_stmt|;
name|iStatusType
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iStatusType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|propDepartmentStatusDefault
argument_list|()
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|department
operator|.
name|getSatusOptions
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|iStatusType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|department
operator|.
name|getStatusTypeCode
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|setSelectedValue
argument_list|(
name|iStatusType
operator|.
name|getWidget
argument_list|()
argument_list|,
name|department
operator|.
name|getStatusTypeCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iAllowReqTime
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|department
operator|.
name|getAllowReqTime
argument_list|()
argument_list|)
expr_stmt|;
name|iAllowReqRoom
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|department
operator|.
name|getAllowReqRoom
argument_list|()
argument_list|)
expr_stmt|;
name|iAllowReqDist
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|department
operator|.
name|getAllowReqDistribution
argument_list|()
argument_list|)
expr_stmt|;
name|iInheritInstructorPreferences
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|department
operator|.
name|getInheritInstructorPreferences
argument_list|()
argument_list|)
expr_stmt|;
name|iAllowEvents
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|department
operator|.
name|getAllowEvents
argument_list|()
argument_list|)
expr_stmt|;
name|iAllowStudentScheduling
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|department
operator|.
name|getAllowStudentScheduling
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|department
operator|.
name|isExternalManager
argument_list|()
operator|==
literal|false
condition|)
block|{
name|controlDeptHeaderPanel
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iControlDeptMainPanel
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|controlDeptHeaderPanel
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iControlDeptMainPanel
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|iExternalFundingDept
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|department
operator|.
name|getExternalFundingDept
argument_list|()
argument_list|)
expr_stmt|;
comment|//Remove external funding row when switch in config turned off
if|if
condition|(
name|department
operator|.
name|isCoursesFundingDepartmentsEnabled
argument_list|()
operator|==
literal|false
condition|)
block|{
name|int
name|rowNum
init|=
name|iForm
operator|.
name|getRow
argument_list|(
name|MESSAGES
operator|.
name|propExternalFundingDept
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|rowNum
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
comment|//Controlling department section
if|if
condition|(
name|department
operator|.
name|getExternalManager
argument_list|()
condition|)
block|{
for|for
control|(
name|String
name|entry
range|:
name|department
operator|.
name|getDependentDepartments
argument_list|()
control|)
block|{
name|iCurrentDependentDepartments
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
name|iCurrentDependentStatuses
operator|.
name|clear
argument_list|()
expr_stmt|;
for|for
control|(
name|String
name|entry
range|:
name|department
operator|.
name|getDependentStatuses
argument_list|()
control|)
block|{
name|iCurrentDependentStatuses
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
comment|//dependent departments and their status
if|if
condition|(
operator|!
name|iCurrentDependentDepartments
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
comment|//number of rows showing current dependent depts
name|iCurrentDependentOptions
operator|=
operator|new
name|ListBox
index|[
name|iCurrentDependentDepartments
operator|.
name|size
argument_list|()
index|]
expr_stmt|;
name|iCurrentStatusTypeOptions
operator|=
operator|new
name|ListBox
index|[
name|iCurrentDependentDepartments
operator|.
name|size
argument_list|()
index|]
expr_stmt|;
comment|//Logger log1 = Logger.getLogger(DepartmentsEdit.class.getName());
comment|//log1.info("iCurrentDependentDepartments.isEmpty" + iCurrentDependentDepartments.size());
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iCurrentDependentDepartments
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|iCurrentStatusTypeOptions
index|[
name|i
index|]
operator|=
name|statusOptions
argument_list|(
name|department
argument_list|)
expr_stmt|;
comment|//new ListBox();
name|iCurrentDependentOptions
index|[
name|i
index|]
operator|=
name|departmentOptions
argument_list|(
name|department
argument_list|)
expr_stmt|;
comment|//new ListBox();
name|setSelectedValue
argument_list|(
name|iCurrentStatusTypeOptions
index|[
name|i
index|]
argument_list|,
name|iCurrentDependentStatuses
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|setSelectedValue
argument_list|(
name|iCurrentDependentOptions
index|[
name|i
index|]
argument_list|,
name|iCurrentDependentDepartments
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|numRows
init|=
name|iControlDeptFlexTable
operator|.
name|getRowCount
argument_list|()
decl_stmt|;
name|iControlDeptFlexTable
operator|.
name|setWidget
argument_list|(
name|numRows
argument_list|,
literal|0
argument_list|,
name|iCurrentDependentOptions
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|iControlDeptFlexTable
operator|.
name|setWidget
argument_list|(
name|numRows
argument_list|,
literal|1
argument_list|,
name|iCurrentStatusTypeOptions
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|Button
name|deleteStatusButton
init|=
operator|new
name|Button
argument_list|(
literal|"Delete"
argument_list|)
decl_stmt|;
name|deleteStatusButton
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|int
name|receiverRowIndex
init|=
name|iControlDeptFlexTable
operator|.
name|getCellForEvent
argument_list|(
name|event
argument_list|)
operator|.
name|getRowIndex
argument_list|()
decl_stmt|;
name|iControlDeptFlexTable
operator|.
name|removeRow
argument_list|(
name|receiverRowIndex
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iControlDeptFlexTable
operator|.
name|setWidget
argument_list|(
name|i
operator|+
literal|1
argument_list|,
literal|2
argument_list|,
name|deleteStatusButton
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|iDepartment
operator|=
name|department
expr_stmt|;
comment|//Add row for control dept
name|addNewRow
argument_list|(
name|iDepartment
argument_list|)
expr_stmt|;
name|addNewRow
argument_list|(
name|iDepartment
argument_list|)
expr_stmt|;
block|}
block|}
comment|/* 	 * Get values from UI  	 */
annotation|@
name|Override
specifier|public
name|DepartmentInterface
name|getValue
parameter_list|()
block|{
name|iDepartment
operator|.
name|setName
argument_list|(
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|iDepartment
operator|.
name|setDeptCode
argument_list|(
name|iDeptCode
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|iDepartment
operator|.
name|setAbbreviation
argument_list|(
name|iAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|iDepartment
operator|.
name|setExternalId
argument_list|(
name|iExternalId
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|iDepartment
operator|.
name|setExternalManager
argument_list|(
name|iExternalManager
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|iDepartment
operator|.
name|setExternalMgrLabel
argument_list|(
name|iExternalManagerName
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|iDepartment
operator|.
name|setExternalMgrAbbv
argument_list|(
name|iExternalManagerAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|iDepartment
operator|.
name|setStatusTypeStr
argument_list|(
name|iStatusType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
expr_stmt|;
name|iDepartment
operator|.
name|setAllowReqRoom
argument_list|(
name|iAllowReqRoom
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|iDepartment
operator|.
name|setAllowReqDistribution
argument_list|(
name|iAllowReqDist
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|iDepartment
operator|.
name|setAllowReqTime
argument_list|(
name|iAllowReqTime
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|iDepartment
operator|.
name|setAllowReqRoom
argument_list|(
name|iAllowReqRoom
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|iDepartment
operator|.
name|setExternalFundingDept
argument_list|(
name|iExternalFundingDept
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|iDepartment
operator|.
name|setAllowEvents
argument_list|(
name|iAllowEvents
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|iDepartment
operator|.
name|setInheritInstructorPreferences
argument_list|(
name|iInheritInstructorPreferences
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|iDepartment
operator|.
name|setAllowEvents
argument_list|(
name|iAllowEvents
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|iDepartment
operator|.
name|setAllowStudentScheduling
argument_list|(
name|iAllowStudentScheduling
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|List
name|dependentDepartmentIds
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|List
name|dependentStatuses
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|int
name|rows
init|=
name|iControlDeptFlexTable
operator|.
name|getRowCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|row
init|=
literal|1
init|;
name|row
operator|<
name|rows
condition|;
name|row
operator|++
control|)
block|{
comment|//first row is header
name|ListBox
name|dept
init|=
operator|(
name|ListBox
operator|)
name|iControlDeptFlexTable
operator|.
name|getWidget
argument_list|(
name|row
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|ListBox
name|status
init|=
operator|(
name|ListBox
operator|)
name|iControlDeptFlexTable
operator|.
name|getWidget
argument_list|(
name|row
argument_list|,
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
name|dept
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|dept
operator|.
name|getSelectedValue
argument_list|()
operator|!=
literal|null
operator|&&
name|dept
operator|.
name|getSelectedValue
argument_list|()
operator|!=
literal|""
condition|)
name|dependentDepartmentIds
operator|.
name|add
argument_list|(
name|dept
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|status
operator|.
name|getSelectedValue
argument_list|()
operator|!=
literal|null
operator|&&
name|status
operator|.
name|getSelectedValue
argument_list|()
operator|!=
literal|""
condition|)
name|dependentStatuses
operator|.
name|add
argument_list|(
name|status
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|iDepartment
operator|.
name|setDependentDepartments
argument_list|(
name|dependentDepartmentIds
argument_list|)
expr_stmt|;
name|iDepartment
operator|.
name|setDependentStatuses
argument_list|(
name|dependentStatuses
argument_list|)
expr_stmt|;
return|return
name|iDepartment
return|;
block|}
comment|/* 	 * validate UI 	 */
specifier|protected
name|boolean
name|validate
parameter_list|()
block|{
name|boolean
name|ok
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|iAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iAbbreviation
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorAbbreviationIsEmpty
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|ok
condition|)
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorAbbreviationIsEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
if|else if
condition|(
operator|!
name|isAbbreviationUnique
argument_list|(
name|getValue
argument_list|()
argument_list|)
condition|)
block|{
name|iAbbreviation
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorAbbreviationMustBeUnique
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|ok
condition|)
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorAbbreviationMustBeUnique
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iName
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorNameIsEmpty
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|ok
condition|)
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorNameIsEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|iDeptCode
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iDeptCode
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorDeptCodeIsEmpty
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|ok
condition|)
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorDeptCodeIsEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
if|else if
condition|(
operator|!
name|isDeptCodeUnique
argument_list|(
name|getValue
argument_list|()
argument_list|)
condition|)
block|{
name|iDeptCode
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorDeptCodeMustBeUnique
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|ok
condition|)
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorDeptCodeMustBeUnique
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|iExternalManager
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|==
literal|true
operator|&&
operator|(
name|iExternalManagerName
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|||
name|iExternalManagerName
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
operator|)
condition|)
block|{
name|iExternalManagerName
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorRequired
argument_list|(
name|MESSAGES
operator|.
name|propExternalManagerName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|ok
condition|)
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorRequired
argument_list|(
name|MESSAGES
operator|.
name|propExternalManagerName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|iExternalManager
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|==
literal|false
operator|&&
operator|(
operator|!
name|iExternalManagerName
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|||
name|iExternalManagerName
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
operator|)
condition|)
block|{
name|iExternalManagerName
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorGeneric
argument_list|(
name|MESSAGES
operator|.
name|errorExternalManagerNameUse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|ok
condition|)
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorGeneric
argument_list|(
name|MESSAGES
operator|.
name|errorExternalManagerNameUse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|iExternalManager
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|==
literal|true
operator|&&
operator|(
name|iExternalManagerAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|||
name|iExternalManagerAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
operator|)
condition|)
block|{
name|iExternalManagerAbbreviation
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorRequired
argument_list|(
name|MESSAGES
operator|.
name|propExternalManagerAbbreviation
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|ok
condition|)
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorRequired
argument_list|(
name|MESSAGES
operator|.
name|propExternalManagerAbbreviation
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|iExternalManager
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|==
literal|false
operator|&&
operator|(
operator|!
name|iExternalManagerAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|||
name|iExternalManagerAbbreviation
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
operator|)
condition|)
block|{
name|iExternalManagerAbbreviation
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorGeneric
argument_list|(
name|MESSAGES
operator|.
name|errorExternalManagerAbbreviationUse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|ok
condition|)
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorGeneric
argument_list|(
name|MESSAGES
operator|.
name|errorExternalManagerAbbreviationUse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
return|return
name|ok
return|;
block|}
specifier|public
name|DepartmentInterface
name|getiDepartment
parameter_list|()
block|{
return|return
name|iDepartment
return|;
block|}
specifier|public
name|void
name|setiDepartment
parameter_list|(
name|DepartmentInterface
name|iDepartment
parameter_list|)
block|{
name|this
operator|.
name|iDepartment
operator|=
name|iDepartment
expr_stmt|;
block|}
specifier|public
name|void
name|show
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
block|}
comment|/* 	 * execute add, update, delete 	 */
specifier|public
specifier|static
class|class
name|UpdateDepartmentRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|DepartmentInterface
argument_list|>
block|{
specifier|private
name|UpdateDepartmentAction
name|iAction
decl_stmt|;
specifier|private
name|DepartmentInterface
name|iDepartment
decl_stmt|;
specifier|public
name|UpdateDepartmentAction
name|getAction
parameter_list|()
block|{
return|return
name|iAction
return|;
block|}
specifier|public
name|void
name|setAction
parameter_list|(
name|UpdateDepartmentAction
name|action
parameter_list|)
block|{
name|iAction
operator|=
name|action
expr_stmt|;
block|}
specifier|public
name|DepartmentInterface
name|getDepartment
parameter_list|()
block|{
return|return
name|iDepartment
return|;
block|}
specifier|public
name|void
name|setDepartment
parameter_list|(
name|DepartmentInterface
name|department
parameter_list|)
block|{
name|iDepartment
operator|=
name|department
expr_stmt|;
block|}
block|}
comment|/* 	 * UI for status options in editing department and controlling department 	 */
specifier|public
name|ListBox
name|statusOptions
parameter_list|(
name|DepartmentInterface
name|department
parameter_list|)
block|{
name|ListBox
name|statusTypeOptions
init|=
operator|new
name|ListBox
argument_list|()
decl_stmt|;
name|statusTypeOptions
operator|.
name|setMultipleSelect
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|statusTypeOptions
operator|.
name|setWidth
argument_list|(
literal|"300px"
argument_list|)
expr_stmt|;
name|statusTypeOptions
operator|.
name|setStyleName
argument_list|(
literal|"gwt-SuggestBox"
argument_list|)
expr_stmt|;
name|statusTypeOptions
operator|.
name|setVisibleItemCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|statusTypeOptions
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|propDefaultDependentStatus
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|department
operator|.
name|getSatusOptions
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|statusTypeOptions
operator|.
name|addItem
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|statusTypeOptions
return|;
block|}
specifier|private
name|void
name|setSelectedValue
parameter_list|(
name|ListBox
name|lBox
parameter_list|,
name|String
name|str
parameter_list|)
block|{
name|String
name|text
init|=
name|str
decl_stmt|;
name|int
name|indexToFind
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|lBox
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|lBox
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|text
argument_list|)
condition|)
block|{
name|indexToFind
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
name|lBox
operator|.
name|setSelectedIndex
argument_list|(
name|indexToFind
argument_list|)
expr_stmt|;
block|}
comment|/* 	 * UI for department options in controlling department 	 */
specifier|public
name|ListBox
name|departmentOptions
parameter_list|(
name|DepartmentInterface
name|department
parameter_list|)
block|{
name|ListBox
name|departmentOptions
init|=
operator|new
name|ListBox
argument_list|()
decl_stmt|;
name|departmentOptions
operator|.
name|setMultipleSelect
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|departmentOptions
operator|.
name|setWidth
argument_list|(
literal|"300px"
argument_list|)
expr_stmt|;
name|departmentOptions
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|departmentOptions
operator|.
name|setVisibleItemCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|departmentOptions
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|propDefaultDependentDepartment
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|department
operator|.
name|getExtDepartmentOptions
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|departmentOptions
operator|.
name|addItem
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|departmentOptions
return|;
block|}
comment|/* 	 * Add  row in controlling department  	 */
specifier|public
name|void
name|addNewRow
parameter_list|(
name|DepartmentInterface
name|department
parameter_list|)
block|{
comment|// Add a button to delete
name|Button
name|deleteStatusButton
init|=
operator|new
name|Button
argument_list|(
literal|"Delete"
argument_list|)
decl_stmt|;
name|int
name|row
init|=
name|iControlDeptFlexTable
operator|.
name|getRowCount
argument_list|()
decl_stmt|;
comment|//delete a row
name|deleteStatusButton
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|int
name|receiverRowIndex
init|=
name|iControlDeptFlexTable
operator|.
name|getCellForEvent
argument_list|(
name|event
argument_list|)
operator|.
name|getRowIndex
argument_list|()
decl_stmt|;
name|iControlDeptFlexTable
operator|.
name|removeRow
argument_list|(
name|receiverRowIndex
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
comment|//delete btn
name|iControlDeptFlexTable
operator|.
name|setWidget
argument_list|(
name|row
argument_list|,
literal|2
argument_list|,
name|deleteStatusButton
argument_list|)
expr_stmt|;
comment|//status
name|iControlDeptFlexTable
operator|.
name|setWidget
argument_list|(
name|row
argument_list|,
literal|1
argument_list|,
name|statusOptions
argument_list|(
name|department
argument_list|)
argument_list|)
expr_stmt|;
comment|//department drop down
name|iControlDeptFlexTable
operator|.
name|setWidget
argument_list|(
name|row
argument_list|,
literal|0
argument_list|,
name|departmentOptions
argument_list|(
name|department
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/* 	 * Delete all dependent departments 	 */
specifier|public
name|void
name|deleteAllDependentDepartments
parameter_list|()
block|{
while|while
condition|(
name|iControlDeptFlexTable
operator|.
name|getRowCount
argument_list|()
operator|>
literal|1
condition|)
name|iControlDeptFlexTable
operator|.
name|removeRow
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

