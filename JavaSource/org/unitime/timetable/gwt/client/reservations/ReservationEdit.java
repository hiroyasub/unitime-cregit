begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|reservations
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|Lookup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
operator|.
name|SingleDateSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimePageLabel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|CourseSelectionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|CourseSelectionHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|P
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTextBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|services
operator|.
name|ReservationService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|services
operator|.
name|ReservationServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|RequestedCourse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|PersonInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|Course
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|CourseReservation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|Area
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|Areas
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|Curriculum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|DefaultExpirationDates
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|IdName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|LCReservation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|Offering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|ReservationDefaultExpirationDatesRpcRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Unit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|regexp
operator|.
name|shared
operator|.
name|MatchResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|regexp
operator|.
name|shared
operator|.
name|RegExp
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHorizontalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasVerticalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextArea
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ValueBoxBase
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|VerticalPanel
import|;
end_import

begin_comment
comment|/**  *   * @author Tomas Muller  *  */
end_comment

begin_class
specifier|public
class|class
name|ReservationEdit
extends|extends
name|Composite
block|{
specifier|protected
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|GwtConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|GwtResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|List
argument_list|<
name|EditFinishedHandler
argument_list|>
name|iEditFinishedHandlers
init|=
operator|new
name|ArrayList
argument_list|<
name|EditFinishedHandler
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|SimpleForm
name|iPanel
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iTitleAndButtons
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
name|iLimit
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|SingleDateSelector
argument_list|>
name|iStartDate
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|SingleDateSelector
argument_list|>
name|iExpirationDate
decl_stmt|;
specifier|private
name|RestrictionsTable
name|iRestrictions
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Area
argument_list|>
name|iAreas
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Area
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Curriculum
argument_list|>
name|iCurricula
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Curriculum
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|ListBox
name|iClassifications
decl_stmt|,
name|iMajors
decl_stmt|,
name|iMinors
decl_stmt|,
name|iConcentrations
decl_stmt|;
specifier|private
name|int
name|iMinorRow
init|=
literal|0
decl_stmt|,
name|iConcentrationRow
init|=
literal|0
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|iType
decl_stmt|,
name|iArea
decl_stmt|,
name|iCourse
decl_stmt|,
name|iGroup
decl_stmt|,
name|iCurriculum
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|TextArea
argument_list|>
name|iStudents
decl_stmt|;
specifier|private
name|ReservationInterface
name|iReservation
decl_stmt|;
specifier|private
name|ReservationCourseSelectionBox
name|iCourseBox
decl_stmt|;
specifier|private
name|Lookup
name|iLookup
decl_stmt|;
specifier|private
name|DefaultExpirationDates
name|iExpirations
init|=
literal|null
decl_stmt|;
specifier|private
specifier|final
name|ReservationServiceAsync
name|iReservationService
init|=
name|GWT
operator|.
name|create
argument_list|(
name|ReservationService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|int
name|iStartDateLine
decl_stmt|,
name|iExpirationLine
decl_stmt|,
name|iReservedSpaceLine
decl_stmt|,
name|iGroupLine
decl_stmt|,
name|iCourseLine
decl_stmt|,
name|iAreaLine
decl_stmt|,
name|iStudentsLine
decl_stmt|,
name|iCurriculumLine
decl_stmt|,
name|iInclusionLine
decl_stmt|;
specifier|private
name|CheckBox
name|iCanOverlap
decl_stmt|,
name|iMustBeUsed
decl_stmt|,
name|iOverLimit
decl_stmt|,
name|iAlwaysExpired
decl_stmt|;
specifier|private
name|ListBox
name|iInclusive
decl_stmt|;
specifier|private
name|int
name|iOverrideLine
decl_stmt|;
specifier|private
name|Offering
name|iOffering
init|=
literal|null
decl_stmt|;
specifier|public
name|ReservationEdit
parameter_list|(
name|boolean
name|standAlone
parameter_list|)
block|{
if|if
condition|(
name|standAlone
condition|)
block|{
name|addEditFinishedHandler
argument_list|(
operator|new
name|EditFinishedHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSave
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
block|{
name|ToolBox
operator|.
name|open
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"instructionalOfferingDetail.do?io="
operator|+
name|iOffering
operator|.
name|getId
argument_list|()
operator|+
literal|"#reservations"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onDelete
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
block|{
name|ToolBox
operator|.
name|open
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"instructionalOfferingDetail.do?io="
operator|+
name|iOffering
operator|.
name|getId
argument_list|()
operator|+
literal|"#reservations"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onBack
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
block|{
name|ToolBox
operator|.
name|open
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"instructionalOfferingDetail.do?io="
operator|+
name|iOffering
operator|.
name|getId
argument_list|()
operator|+
literal|"#reservations"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
operator|new
name|Timer
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|ToolBox
operator|.
name|open
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"instructionalOfferingDetail.do?io="
operator|+
name|iOffering
operator|.
name|getId
argument_list|()
operator|+
literal|"#reservations"
argument_list|)
expr_stmt|;
block|}
block|}
operator|.
name|schedule
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasNext
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
block|{
name|String
name|ids
init|=
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"reservations"
argument_list|)
decl_stmt|;
if|if
condition|(
name|ids
operator|!=
literal|null
condition|)
block|{
name|String
index|[]
name|arr
init|=
name|ids
operator|.
name|split
argument_list|(
literal|","
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|arr
operator|.
name|length
operator|-
literal|1
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|evt
operator|.
name|getReservationId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|arr
index|[
name|i
index|]
argument_list|)
condition|)
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasPrevious
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
block|{
name|String
name|ids
init|=
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"reservations"
argument_list|)
decl_stmt|;
if|if
condition|(
name|ids
operator|!=
literal|null
condition|)
block|{
name|String
index|[]
name|arr
init|=
name|ids
operator|.
name|split
argument_list|(
literal|","
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|arr
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|evt
operator|.
name|getReservationId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|arr
index|[
name|i
index|]
argument_list|)
condition|)
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onNext
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
block|{
name|String
name|ids
init|=
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"reservations"
argument_list|)
decl_stmt|;
if|if
condition|(
name|ids
operator|!=
literal|null
condition|)
block|{
name|String
index|[]
name|arr
init|=
name|ids
operator|.
name|split
argument_list|(
literal|","
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|arr
operator|.
name|length
operator|-
literal|1
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|evt
operator|.
name|getReservationId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|arr
index|[
name|i
index|]
argument_list|)
condition|)
block|{
name|load
argument_list|(
name|arr
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
name|onSave
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onPrevious
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
block|{
name|String
name|ids
init|=
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"reservations"
argument_list|)
decl_stmt|;
if|if
condition|(
name|ids
operator|!=
literal|null
condition|)
block|{
name|String
index|[]
name|arr
init|=
name|ids
operator|.
name|split
argument_list|(
literal|","
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|arr
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|evt
operator|.
name|getReservationId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|arr
index|[
name|i
index|]
argument_list|)
condition|)
block|{
name|load
argument_list|(
name|arr
index|[
name|i
operator|-
literal|1
index|]
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
name|onSave
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"id"
argument_list|)
operator|==
literal|null
operator|&&
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"offering"
argument_list|)
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|ReservationException
argument_list|(
name|MESSAGES
operator|.
name|errorReservationOrOfferingIdNotProvided
argument_list|()
argument_list|)
throw|;
block|}
block|}
name|iPanel
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|initWidget
argument_list|(
name|iPanel
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|sectReservationDetails
argument_list|()
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"save"
argument_list|,
name|MESSAGES
operator|.
name|buttonSave
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iTitleAndButtons
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|ReservationInterface
name|r
init|=
name|validate
argument_list|()
decl_stmt|;
if|if
condition|(
name|r
operator|==
literal|null
condition|)
block|{
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedValidationCheckForm
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitSavingReservation
argument_list|()
argument_list|)
expr_stmt|;
name|iReservationService
operator|.
name|save
argument_list|(
name|r
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Long
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Long
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|EditFinishedEvent
name|e
init|=
operator|new
name|EditFinishedEvent
argument_list|(
name|result
argument_list|)
decl_stmt|;
for|for
control|(
name|EditFinishedHandler
name|h
range|:
name|iEditFinishedHandlers
control|)
name|h
operator|.
name|onSave
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"previous"
argument_list|,
name|MESSAGES
operator|.
name|buttonPrevious
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iTitleAndButtons
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|ReservationInterface
name|r
init|=
name|validate
argument_list|()
decl_stmt|;
if|if
condition|(
name|r
operator|==
literal|null
condition|)
block|{
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedValidationCheckForm
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitSavingReservation
argument_list|()
argument_list|)
expr_stmt|;
name|iReservationService
operator|.
name|save
argument_list|(
name|r
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Long
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Long
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|EditFinishedEvent
name|e
init|=
operator|new
name|EditFinishedEvent
argument_list|(
name|result
argument_list|)
decl_stmt|;
for|for
control|(
name|EditFinishedHandler
name|h
range|:
name|iEditFinishedHandlers
control|)
name|h
operator|.
name|onPrevious
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"previous"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"next"
argument_list|,
name|MESSAGES
operator|.
name|buttonNext
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iTitleAndButtons
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|ReservationInterface
name|r
init|=
name|validate
argument_list|()
decl_stmt|;
if|if
condition|(
name|r
operator|==
literal|null
condition|)
block|{
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedValidationCheckForm
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitSavingReservation
argument_list|()
argument_list|)
expr_stmt|;
name|iReservationService
operator|.
name|save
argument_list|(
name|r
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Long
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Long
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|EditFinishedEvent
name|e
init|=
operator|new
name|EditFinishedEvent
argument_list|(
name|result
argument_list|)
decl_stmt|;
for|for
control|(
name|EditFinishedHandler
name|h
range|:
name|iEditFinishedHandlers
control|)
name|h
operator|.
name|onNext
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"next"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"delete"
argument_list|,
name|MESSAGES
operator|.
name|buttonDelete
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iReservation
operator|==
literal|null
condition|)
block|{
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorCannotDeleteUnsavedReservation
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
operator|!
name|Window
operator|.
name|confirm
argument_list|(
name|MESSAGES
operator|.
name|confirmDeleteReservation
argument_list|()
argument_list|)
condition|)
return|return;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitDeletingReservation
argument_list|()
argument_list|)
expr_stmt|;
name|iReservationService
operator|.
name|delete
argument_list|(
name|iReservation
operator|.
name|getId
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|EditFinishedEvent
name|e
init|=
operator|new
name|EditFinishedEvent
argument_list|(
name|iReservation
operator|==
literal|null
condition|?
literal|null
else|:
name|iReservation
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|EditFinishedHandler
name|h
range|:
name|iEditFinishedHandlers
control|)
name|h
operator|.
name|onDelete
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"delete"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"back"
argument_list|,
name|MESSAGES
operator|.
name|buttonBack
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|EditFinishedEvent
name|e
init|=
operator|new
name|EditFinishedEvent
argument_list|(
name|iReservation
operator|==
literal|null
condition|?
literal|null
else|:
name|iReservation
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|EditFinishedHandler
name|h
range|:
name|iEditFinishedHandlers
control|)
name|h
operator|.
name|onBack
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addHeaderRow
argument_list|(
name|iTitleAndButtons
argument_list|)
expr_stmt|;
name|iCourseBox
operator|=
operator|new
name|ReservationCourseSelectionBox
argument_list|()
expr_stmt|;
name|iCourseBox
operator|.
name|setWidth
argument_list|(
literal|"130px"
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propInstructionalOffering
argument_list|()
argument_list|,
name|iCourseBox
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|getElement
argument_list|(
name|iPanel
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
operator|.
name|getStyle
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|100
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|iType
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemSelect
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|reservationIndividual
argument_list|()
argument_list|,
literal|"individual"
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|reservationStudentGroup
argument_list|()
argument_list|,
literal|"group"
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|reservationCurriculum
argument_list|()
argument_list|,
literal|"curriculum"
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|reservationCourse
argument_list|()
argument_list|,
literal|"course"
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|reservationLearningCommunity
argument_list|()
argument_list|,
literal|"lc"
argument_list|)
expr_stmt|;
for|for
control|(
name|ReservationInterface
operator|.
name|OverrideType
name|t
range|:
name|ReservationInterface
operator|.
name|OverrideType
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|t
operator|.
name|isEditable
argument_list|()
condition|)
if|if
condition|(
name|CONSTANTS
operator|.
name|reservationOverrideTypeName
argument_list|()
index|[
name|t
operator|.
name|ordinal
argument_list|()
index|]
operator|!=
literal|null
condition|)
block|{
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|CONSTANTS
operator|.
name|reservationOverrideTypeName
argument_list|()
index|[
name|t
operator|.
name|ordinal
argument_list|()
index|]
argument_list|,
name|t
operator|.
name|getReference
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"Override: "
operator|+
name|t
operator|.
name|name
argument_list|()
argument_list|,
name|t
operator|.
name|getReference
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|reservationIndividualOverride
argument_list|()
argument_list|,
literal|"individual-override"
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|reservationStudentGroupOverride
argument_list|()
argument_list|,
literal|"group-override"
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|reservationCurriculumOverride
argument_list|()
argument_list|,
literal|"curriculum-override"
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iType
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propType
argument_list|()
argument_list|,
name|iType
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|typeChanged
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iLimit
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
argument_list|(
operator|new
name|UniTimeTextBox
argument_list|(
literal|4
argument_list|,
name|ValueBoxBase
operator|.
name|TextAlignment
operator|.
name|RIGHT
argument_list|)
argument_list|)
expr_stmt|;
name|iReservedSpaceLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propReservedSpace
argument_list|()
argument_list|,
name|iLimit
argument_list|)
expr_stmt|;
name|P
name|properties
init|=
operator|new
name|P
argument_list|(
literal|"unitime-OverrideProperties"
argument_list|)
decl_stmt|;
name|iCanOverlap
operator|=
operator|new
name|CheckBox
argument_list|(
name|MESSAGES
operator|.
name|checkCanOverlap
argument_list|()
argument_list|)
expr_stmt|;
name|iOverLimit
operator|=
operator|new
name|CheckBox
argument_list|(
name|MESSAGES
operator|.
name|checkCanOverLimit
argument_list|()
argument_list|)
expr_stmt|;
name|iMustBeUsed
operator|=
operator|new
name|CheckBox
argument_list|(
name|MESSAGES
operator|.
name|checkMustBeUsed
argument_list|()
argument_list|)
expr_stmt|;
name|iAlwaysExpired
operator|=
operator|new
name|CheckBox
argument_list|(
name|MESSAGES
operator|.
name|checkAllwaysExpired
argument_list|()
argument_list|)
expr_stmt|;
name|iAlwaysExpired
operator|.
name|setValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|properties
operator|.
name|add
argument_list|(
name|iCanOverlap
argument_list|)
expr_stmt|;
name|properties
operator|.
name|add
argument_list|(
name|iOverLimit
argument_list|)
expr_stmt|;
name|properties
operator|.
name|add
argument_list|(
name|iMustBeUsed
argument_list|)
expr_stmt|;
name|properties
operator|.
name|add
argument_list|(
name|iAlwaysExpired
argument_list|)
expr_stmt|;
name|iAlwaysExpired
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iExpirationLine
argument_list|,
operator|!
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iStartDateLine
argument_list|,
operator|!
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iInclusionLine
argument_list|,
operator|!
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iOverrideLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propOverrideProperties
argument_list|()
argument_list|,
name|properties
argument_list|)
expr_stmt|;
name|iStartDate
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|SingleDateSelector
argument_list|>
argument_list|(
operator|new
name|SingleDateSelector
argument_list|()
argument_list|)
expr_stmt|;
name|iStartDate
operator|.
name|getWidget
argument_list|()
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Date
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Date
argument_list|>
name|event
parameter_list|)
block|{
name|iStartDate
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iStartDateLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propStartDate
argument_list|()
argument_list|,
name|iStartDate
argument_list|)
expr_stmt|;
name|iExpirationDate
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|SingleDateSelector
argument_list|>
argument_list|(
operator|new
name|SingleDateSelector
argument_list|()
argument_list|)
expr_stmt|;
name|iExpirationDate
operator|.
name|getWidget
argument_list|()
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Date
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Date
argument_list|>
name|event
parameter_list|)
block|{
name|iExpirationDate
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iExpirationLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propExpirationDate
argument_list|()
argument_list|,
name|iExpirationDate
argument_list|)
expr_stmt|;
name|iRestrictions
operator|=
operator|new
name|RestrictionsTable
argument_list|(
name|iLimit
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propRestrictions
argument_list|()
argument_list|,
name|iRestrictions
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|setVerticalAlignment
argument_list|(
name|iPanel
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
name|HasVerticalAlignment
operator|.
name|ALIGN_TOP
argument_list|)
expr_stmt|;
name|iInclusive
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
name|iInclusive
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|reservationInclusiveNotSet
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|iInclusive
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|reservationInclusiveTrue
argument_list|()
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|iInclusive
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|reservationInclusiveFalse
argument_list|()
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|iInclusionLine
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propInclusive
argument_list|()
argument_list|,
name|iInclusive
argument_list|)
expr_stmt|;
name|iStudents
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextArea
argument_list|>
argument_list|(
operator|new
name|TextArea
argument_list|()
argument_list|)
expr_stmt|;
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iStudents
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|split
argument_list|(
literal|"\n"
argument_list|)
operator|.
name|length
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|setVisibleLines
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|setCharacterWidth
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|VerticalPanel
name|students
init|=
operator|new
name|VerticalPanel
argument_list|()
decl_stmt|;
name|students
operator|.
name|add
argument_list|(
name|iStudents
argument_list|)
expr_stmt|;
name|Button
name|lookup
init|=
operator|new
name|Button
argument_list|(
name|MESSAGES
operator|.
name|buttonLookup
argument_list|()
argument_list|)
decl_stmt|;
name|lookup
operator|.
name|setAccessKey
argument_list|(
literal|'l'
argument_list|)
expr_stmt|;
name|iLookup
operator|=
operator|new
name|Lookup
argument_list|()
expr_stmt|;
name|lookup
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iLookup
operator|.
name|center
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iLookup
operator|.
name|setOptions
argument_list|(
literal|"mustHaveExternalId,source=students"
argument_list|)
expr_stmt|;
name|iLookup
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|PersonInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|PersonInterface
argument_list|>
name|event
parameter_list|)
block|{
name|PersonInterface
name|student
init|=
name|event
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|student
operator|!=
literal|null
condition|)
block|{
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|+
operator|(
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|"\n"
operator|)
operator|+
name|student
operator|.
name|getId
argument_list|()
operator|+
literal|" "
operator|+
name|student
operator|.
name|getLastName
argument_list|()
operator|+
literal|", "
operator|+
name|student
operator|.
name|getFirstName
argument_list|()
operator|+
operator|(
name|student
operator|.
name|getMiddleName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|" "
operator|+
name|student
operator|.
name|getMiddleName
argument_list|()
operator|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|split
argument_list|(
literal|"\n"
argument_list|)
operator|.
name|length
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|students
operator|.
name|add
argument_list|(
name|lookup
argument_list|)
expr_stmt|;
name|students
operator|.
name|setCellHorizontalAlignment
argument_list|(
name|lookup
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propStudents
argument_list|()
argument_list|,
name|students
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|setVerticalAlignment
argument_list|(
name|iPanel
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
name|HasVerticalAlignment
operator|.
name|ALIGN_TOP
argument_list|)
expr_stmt|;
name|iStudentsLine
operator|=
name|iPanel
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
expr_stmt|;
name|iGroup
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iGroup
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemSelect
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propStudentGroup
argument_list|()
argument_list|,
name|iGroup
argument_list|)
expr_stmt|;
name|iGroupLine
operator|=
name|iPanel
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
expr_stmt|;
name|iCourse
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iCourse
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|String
name|cid
init|=
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|val
init|=
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
literal|"course"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
condition|)
for|for
control|(
name|Course
name|course
range|:
name|iOffering
operator|.
name|getCourses
argument_list|()
control|)
block|{
if|if
condition|(
name|course
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|cid
argument_list|)
condition|)
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|course
operator|.
name|getLimit
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|course
operator|.
name|getLimit
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propCourse
argument_list|()
argument_list|,
name|iCourse
argument_list|)
expr_stmt|;
name|iCourseLine
operator|=
name|iPanel
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
expr_stmt|;
name|iCurriculum
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemNone
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
literal|"Curriculum:"
argument_list|,
name|iCurriculum
argument_list|)
expr_stmt|;
name|iCurriculumLine
operator|=
name|iPanel
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
expr_stmt|;
name|iArea
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"300px"
argument_list|)
expr_stmt|;
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setMultipleSelect
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setVisibleItemCount
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setHeight
argument_list|(
literal|"100px"
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAcademicArea
argument_list|()
argument_list|,
name|iArea
argument_list|)
expr_stmt|;
name|iAreaLine
operator|=
name|iPanel
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
expr_stmt|;
name|iClassifications
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
name|iClassifications
operator|.
name|setMultipleSelect
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iClassifications
operator|.
name|setWidth
argument_list|(
literal|"300px"
argument_list|)
expr_stmt|;
name|iClassifications
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iClassifications
operator|.
name|setVisibleItemCount
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|iClassifications
operator|.
name|setHeight
argument_list|(
literal|"100px"
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propClassifications
argument_list|()
argument_list|,
name|iClassifications
argument_list|)
expr_stmt|;
name|iMajors
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
name|iMajors
operator|.
name|setMultipleSelect
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iMajors
operator|.
name|setWidth
argument_list|(
literal|"300px"
argument_list|)
expr_stmt|;
name|iMajors
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iMajors
operator|.
name|setVisibleItemCount
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|iMajors
operator|.
name|setHeight
argument_list|(
literal|"100px"
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propMajors
argument_list|()
argument_list|,
name|iMajors
argument_list|)
expr_stmt|;
name|iConcentrations
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
name|iConcentrations
operator|.
name|setMultipleSelect
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iConcentrations
operator|.
name|setWidth
argument_list|(
literal|"300px"
argument_list|)
expr_stmt|;
name|iConcentrations
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iConcentrations
operator|.
name|setVisibleItemCount
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|iConcentrations
operator|.
name|setHeight
argument_list|(
literal|"100px"
argument_list|)
expr_stmt|;
name|iConcentrationRow
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propConcentrations
argument_list|()
argument_list|,
name|iConcentrations
argument_list|)
expr_stmt|;
name|iMinors
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
name|iMinors
operator|.
name|setMultipleSelect
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iMinors
operator|.
name|setWidth
argument_list|(
literal|"300px"
argument_list|)
expr_stmt|;
name|iMinors
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iMinors
operator|.
name|setVisibleItemCount
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|iMinors
operator|.
name|setHeight
argument_list|(
literal|"100px"
argument_list|)
expr_stmt|;
name|iMinorRow
operator|=
name|iPanel
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propMinors
argument_list|()
argument_list|,
name|iMinors
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|curriculumChanged
argument_list|()
expr_stmt|;
name|iCurriculum
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|areaChangedKeepSelection
argument_list|()
expr_stmt|;
name|iArea
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iClassifications
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|String
name|curId
init|=
operator|(
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
condition|?
literal|""
else|:
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
operator|!
name|curId
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Curriculum
name|c
init|=
name|iCurricula
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|curId
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|limit
init|=
literal|0
decl_stmt|;
name|boolean
name|noneSelected
init|=
literal|true
decl_stmt|;
name|classifcations
label|:
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iClassifications
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iClassifications
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
block|{
for|for
control|(
name|IdName
name|f
range|:
name|c
operator|.
name|getClassifications
argument_list|()
control|)
block|{
if|if
condition|(
name|f
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|iClassifications
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
block|{
name|limit
operator|+=
name|f
operator|.
name|getLimit
argument_list|()
expr_stmt|;
name|noneSelected
operator|=
literal|false
expr_stmt|;
continue|continue
name|classifcations
continue|;
block|}
block|}
block|}
block|}
if|if
condition|(
name|noneSelected
condition|)
name|limit
operator|=
name|c
operator|.
name|getLimit
argument_list|()
expr_stmt|;
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|limit
operator|==
literal|0
condition|?
literal|""
else|:
name|String
operator|.
name|valueOf
argument_list|(
name|limit
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iMajors
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|majorChangedKeepSelection
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iConcentrations
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iMinors
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addNotPrintableBottomRow
argument_list|(
name|iTitleAndButtons
operator|.
name|clonePanel
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|standAlone
condition|)
block|{
name|load
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
operator|new
name|InitializationChain
argument_list|(
operator|new
name|InitStudentGroups
argument_list|()
argument_list|,
operator|new
name|InitCurricula
argument_list|()
argument_list|,
operator|new
name|InitExpirationDates
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedLoadData
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|iCourseBox
operator|.
name|addCourseSelectionHandler
argument_list|(
operator|new
name|CourseSelectionHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onCourseSelection
parameter_list|(
name|CourseSelectionEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
operator|&&
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|isCourse
argument_list|()
condition|)
block|{
name|iReservationService
operator|.
name|getOfferingByCourseName
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getCourseName
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Offering
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iCourseBox
operator|.
name|setError
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Offering
name|result
parameter_list|)
block|{
name|setOffering
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setOffering
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|load
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitLoadingReservation
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|id
operator|==
literal|null
condition|)
block|{
operator|new
name|InitializationChain
argument_list|(
operator|new
name|InitStudentGroups
argument_list|()
argument_list|,
operator|new
name|InitCurricula
argument_list|()
argument_list|,
operator|new
name|InitExpirationDates
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|loadingFailed
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
name|setReservation
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iReservationService
operator|.
name|getReservation
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|id
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|ReservationInterface
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|loadingFailed
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
specifier|final
name|ReservationInterface
name|reservation
parameter_list|)
block|{
if|if
condition|(
name|reservation
operator|instanceof
name|ReservationInterface
operator|.
name|CurriculumReservation
condition|)
block|{
operator|new
name|InitializationChain
argument_list|(
operator|new
name|InitCurricula
argument_list|()
argument_list|,
operator|new
name|InitExpirationDates
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|loadingFailed
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
name|setReservation
argument_list|(
name|reservation
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|reservation
operator|instanceof
name|ReservationInterface
operator|.
name|GroupReservation
condition|)
block|{
operator|new
name|InitializationChain
argument_list|(
operator|new
name|InitStudentGroups
argument_list|()
argument_list|,
operator|new
name|InitExpirationDates
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|loadingFailed
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
name|setReservation
argument_list|(
name|reservation
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|reservation
operator|instanceof
name|ReservationInterface
operator|.
name|LCReservation
condition|)
block|{
operator|new
name|InitializationChain
argument_list|(
operator|new
name|InitStudentGroups
argument_list|()
argument_list|,
operator|new
name|InitExpirationDates
argument_list|()
argument_list|)
operator|.
name|execute
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|loadingFailed
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
name|setReservation
argument_list|(
name|reservation
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setReservation
argument_list|(
name|reservation
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
empty_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|loadingFailed
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedLoadData
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedLoadData
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|EditFinishedHandler
name|h
range|:
name|iEditFinishedHandlers
control|)
name|h
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setReservation
parameter_list|(
name|ReservationInterface
name|r
parameter_list|)
block|{
name|iReservation
operator|=
name|r
expr_stmt|;
name|UniTimePageLabel
operator|.
name|getInstance
argument_list|()
operator|.
name|setPageName
argument_list|(
name|iReservation
operator|==
literal|null
condition|?
name|MESSAGES
operator|.
name|pageAddReservation
argument_list|()
else|:
name|MESSAGES
operator|.
name|pageEditReservation
argument_list|()
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"delete"
argument_list|,
name|iReservation
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iLimit
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iType
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iAlwaysExpired
operator|.
name|setValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Long
name|offeringId
init|=
operator|(
name|iReservation
operator|==
literal|null
condition|?
literal|null
else|:
name|iReservation
operator|.
name|getOffering
argument_list|()
operator|.
name|getId
argument_list|()
operator|)
decl_stmt|;
name|Long
name|courseId
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|iReservation
operator|!=
literal|null
operator|&&
name|iReservation
operator|instanceof
name|CourseReservation
condition|)
block|{
name|CourseReservation
name|cr
init|=
operator|(
name|CourseReservation
operator|)
name|iReservation
decl_stmt|;
name|courseId
operator|=
operator|(
name|cr
operator|.
name|getCourse
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|cr
operator|.
name|getCourse
argument_list|()
operator|.
name|getId
argument_list|()
operator|)
expr_stmt|;
block|}
if|if
condition|(
name|iReservation
operator|!=
literal|null
operator|&&
name|iReservation
operator|instanceof
name|LCReservation
condition|)
block|{
name|LCReservation
name|lc
init|=
operator|(
name|LCReservation
operator|)
name|iReservation
decl_stmt|;
name|courseId
operator|=
operator|(
name|lc
operator|.
name|getCourse
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|lc
operator|.
name|getCourse
argument_list|()
operator|.
name|getId
argument_list|()
operator|)
expr_stmt|;
block|}
if|if
condition|(
name|offeringId
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"offering"
argument_list|)
operator|!=
literal|null
condition|)
name|offeringId
operator|=
name|Long
operator|.
name|valueOf
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"offering"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|offeringId
operator|==
literal|null
condition|)
block|{
name|iOffering
operator|=
literal|null
expr_stmt|;
name|iCourseBox
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iCourseBox
operator|.
name|setValue
argument_list|(
operator|(
name|RequestedCourse
operator|)
literal|null
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iCourseBox
operator|.
name|setError
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|""
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iExpirationDate
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|iStartDate
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|iRestrictions
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iClassifications
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iMajors
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iConcentrations
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iMinors
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iType
operator|.
name|setReadOnly
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iCurricula
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemNone
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iInclusive
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|areaChanged
argument_list|()
expr_stmt|;
name|typeChanged
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iCourseBox
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitLoadingReservation
argument_list|()
argument_list|)
expr_stmt|;
name|iReservationService
operator|.
name|getOffering
argument_list|(
name|offeringId
argument_list|,
name|courseId
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Offering
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|loadingFailed
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Offering
name|result
parameter_list|)
block|{
name|setOffering
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iReservation
operator|==
literal|null
condition|)
block|{
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"previous"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"next"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|EditFinishedEvent
name|e
init|=
operator|new
name|EditFinishedEvent
argument_list|(
name|iReservation
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|EditFinishedHandler
name|h
range|:
name|iEditFinishedHandlers
control|)
block|{
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"previous"
argument_list|,
name|h
operator|.
name|hasPrevious
argument_list|(
name|e
argument_list|)
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"next"
argument_list|,
name|h
operator|.
name|hasNext
argument_list|(
name|e
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|setOffering
parameter_list|(
name|Offering
name|offering
parameter_list|)
block|{
name|iOffering
operator|=
name|offering
expr_stmt|;
name|iCourseBox
operator|.
name|setError
argument_list|(
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
name|iOffering
operator|==
literal|null
condition|)
return|return;
if|if
condition|(
name|iOffering
operator|.
name|isUnlockNeeded
argument_list|()
condition|)
name|iCourseBox
operator|.
name|setError
argument_list|(
name|MESSAGES
operator|.
name|hintOfferingIsLocked
argument_list|(
name|iOffering
operator|.
name|getAbbv
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|iCourseBox
operator|.
name|isEnabled
argument_list|()
condition|)
block|{
name|RequestedCourse
name|rc
init|=
operator|new
name|RequestedCourse
argument_list|()
decl_stmt|;
name|Course
name|course
init|=
name|iOffering
operator|.
name|getControllingCourse
argument_list|()
decl_stmt|;
if|if
condition|(
name|iReservation
operator|!=
literal|null
operator|&&
name|iReservation
operator|instanceof
name|CourseReservation
condition|)
block|{
name|CourseReservation
name|cr
init|=
operator|(
name|CourseReservation
operator|)
name|iReservation
decl_stmt|;
if|if
condition|(
name|cr
operator|.
name|getCourse
argument_list|()
operator|!=
literal|null
condition|)
name|course
operator|=
name|cr
operator|.
name|getCourse
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|iReservation
operator|!=
literal|null
operator|&&
name|iReservation
operator|instanceof
name|LCReservation
condition|)
block|{
name|LCReservation
name|lc
init|=
operator|(
name|LCReservation
operator|)
name|iReservation
decl_stmt|;
if|if
condition|(
name|lc
operator|.
name|getCourse
argument_list|()
operator|!=
literal|null
condition|)
name|course
operator|=
name|lc
operator|.
name|getCourse
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|course
operator|!=
literal|null
condition|)
block|{
name|rc
operator|.
name|setCourseId
argument_list|(
name|course
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|rc
operator|.
name|setCourseName
argument_list|(
name|course
operator|.
name|getAbbv
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rc
operator|.
name|setCourseName
argument_list|(
name|iOffering
operator|.
name|getAbbv
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iCourseBox
operator|.
name|setValue
argument_list|(
name|rc
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|iRestrictions
operator|.
name|setOffering
argument_list|(
name|iOffering
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemSelect
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
for|for
control|(
name|Course
name|course
range|:
name|iOffering
operator|.
name|getCourses
argument_list|()
control|)
block|{
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|course
operator|.
name|getAbbv
argument_list|()
operator|+
operator|(
name|course
operator|.
name|getName
argument_list|()
operator|==
literal|null
operator|||
name|course
operator|.
name|getName
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|" - "
operator|+
name|course
operator|.
name|getName
argument_list|()
operator|)
argument_list|,
name|course
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|typeChanged
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|populate
argument_list|()
expr_stmt|;
name|iCurricula
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemNone
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iReservationService
operator|.
name|getCurricula
argument_list|(
name|iOffering
operator|.
name|getId
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|Curriculum
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|loadingFailed
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|List
argument_list|<
name|Curriculum
argument_list|>
name|result
parameter_list|)
block|{
name|int
name|nrAreasSelected
init|=
literal|0
decl_stmt|;
name|String
name|lastSelectedAreaId
init|=
literal|null
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
block|{
name|nrAreasSelected
operator|++
expr_stmt|;
name|lastSelectedAreaId
operator|=
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
block|}
name|curricula
label|:
for|for
control|(
name|Curriculum
name|curriculum
range|:
name|result
control|)
block|{
name|iCurricula
operator|.
name|put
argument_list|(
name|curriculum
operator|.
name|getId
argument_list|()
argument_list|,
name|curriculum
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|curriculum
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" - "
operator|+
name|curriculum
operator|.
name|getName
argument_list|()
operator|+
literal|" ("
operator|+
name|curriculum
operator|.
name|getLimit
argument_list|()
operator|+
literal|")"
argument_list|,
name|curriculum
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|nrAreasSelected
operator|==
literal|1
operator|&&
name|curriculum
operator|.
name|getArea
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|lastSelectedAreaId
argument_list|)
condition|)
block|{
name|majors
label|:
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMajors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iMajors
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
block|{
for|for
control|(
name|IdName
name|m
range|:
name|curriculum
operator|.
name|getMajors
argument_list|()
control|)
block|{
if|if
condition|(
name|m
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|iMajors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
continue|continue
name|majors
continue|;
block|}
continue|continue
name|curricula
continue|;
block|}
else|else
block|{
for|for
control|(
name|IdName
name|m
range|:
name|curriculum
operator|.
name|getMajors
argument_list|()
control|)
block|{
if|if
condition|(
name|m
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|iMajors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
continue|continue
name|curricula
continue|;
block|}
continue|continue
name|majors
continue|;
block|}
block|}
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
name|String
name|val
init|=
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCurriculumLine
argument_list|,
literal|"curriculum"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|&&
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ReservationInterface
operator|.
name|OverrideType
name|getOverrideType
parameter_list|(
name|String
name|ref
parameter_list|)
block|{
for|for
control|(
name|ReservationInterface
operator|.
name|OverrideType
name|t
range|:
name|ReservationInterface
operator|.
name|OverrideType
operator|.
name|values
argument_list|()
control|)
if|if
condition|(
name|t
operator|.
name|getReference
argument_list|()
operator|.
name|equals
argument_list|(
name|ref
argument_list|)
condition|)
return|return
name|t
return|;
return|return
literal|null
return|;
block|}
specifier|private
name|void
name|typeChanged
parameter_list|(
name|boolean
name|setExpiration
parameter_list|)
block|{
name|String
name|val
init|=
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iStudentsLine
argument_list|,
literal|"individual"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|||
literal|"individual-override"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|||
name|getOverrideType
argument_list|(
name|val
argument_list|)
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseLine
argument_list|,
literal|"course"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|||
literal|"lc"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iGroupLine
argument_list|,
literal|"group"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|||
literal|"group-override"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|||
literal|"lc"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCurriculumLine
argument_list|,
operator|(
literal|"curriculum"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|||
literal|"curriculum-override"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|)
operator|&&
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iAreaLine
argument_list|,
literal|"curriculum"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|||
literal|"curriculum-override"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
literal|1
operator|+
name|iAreaLine
argument_list|,
literal|"curriculum"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|||
literal|"curriculum-override"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
literal|2
operator|+
name|iAreaLine
argument_list|,
literal|"curriculum"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|||
literal|"curriculum-override"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iConcentrationRow
argument_list|,
operator|(
literal|"curriculum"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|||
literal|"curriculum-override"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|)
operator|&&
name|iConcentrations
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iMinorRow
argument_list|,
operator|(
literal|"curriculum"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|||
literal|"curriculum-override"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|)
operator|&&
name|iMinors
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iExpirationLine
argument_list|,
name|getOverrideType
argument_list|(
name|val
argument_list|)
operator|==
literal|null
operator|||
name|getOverrideType
argument_list|(
name|val
argument_list|)
operator|.
name|isCanHaveExpirationDate
argument_list|()
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iStartDateLine
argument_list|,
name|getOverrideType
argument_list|(
name|val
argument_list|)
operator|==
literal|null
operator|||
name|getOverrideType
argument_list|(
name|val
argument_list|)
operator|.
name|isCanHaveExpirationDate
argument_list|()
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iInclusionLine
argument_list|,
name|getOverrideType
argument_list|(
name|val
argument_list|)
operator|==
literal|null
operator|||
name|getOverrideType
argument_list|(
name|val
argument_list|)
operator|.
name|isCanHaveExpirationDate
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
literal|"individual-override"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|||
literal|"group-override"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|||
literal|"curriculum-override"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|)
operator|&&
name|iAlwaysExpired
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iExpirationLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iStartDateLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iInclusionLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iReservedSpaceLine
argument_list|,
name|getOverrideType
argument_list|(
name|val
argument_list|)
operator|==
literal|null
operator|||
name|getOverrideType
argument_list|(
name|val
argument_list|)
operator|.
name|isCanHaveExpirationDate
argument_list|()
operator|||
operator|!
name|getOverrideType
argument_list|(
name|val
argument_list|)
operator|.
name|isExpired
argument_list|()
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iOverrideLine
argument_list|,
literal|"individual-override"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|||
literal|"group-override"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|||
literal|"curriculum-override"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"course"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
condition|)
block|{
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|""
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|iOffering
operator|!=
literal|null
condition|)
block|{
name|String
name|cid
init|=
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Course
name|course
range|:
name|iOffering
operator|.
name|getCourses
argument_list|()
control|)
block|{
if|if
condition|(
name|course
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|cid
argument_list|)
condition|)
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|course
operator|.
name|getLimit
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|course
operator|.
name|getLimit
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|else if
condition|(
literal|"individual"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|||
name|getOverrideType
argument_list|(
name|val
argument_list|)
operator|!=
literal|null
operator|||
literal|"individual-override"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
condition|)
block|{
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|split
argument_list|(
literal|"\n"
argument_list|)
operator|.
name|length
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|setExpiration
operator|&&
name|iExpirations
operator|!=
literal|null
condition|)
block|{
name|iExpirationDate
operator|.
name|getWidget
argument_list|()
operator|.
name|setValueInServerTimeZone
argument_list|(
name|iExpirations
operator|.
name|getExpirationDate
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
name|iStartDate
operator|.
name|getWidget
argument_list|()
operator|.
name|setValueInServerTimeZone
argument_list|(
name|iExpirations
operator|.
name|getStartDate
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|areaChanged
parameter_list|()
block|{
name|iMajors
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iMinors
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iClassifications
operator|.
name|clear
argument_list|()
expr_stmt|;
name|int
name|nrAreasSelected
init|=
literal|0
decl_stmt|;
name|String
name|lastSelectedArea
init|=
literal|""
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
name|nrAreasSelected
operator|++
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
block|{
name|String
name|id
init|=
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|Area
name|c
init|=
name|iAreas
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|IdName
name|major
range|:
name|c
operator|.
name|getMajors
argument_list|()
control|)
block|{
name|iMajors
operator|.
name|addItem
argument_list|(
operator|(
name|nrAreasSelected
operator|>
literal|1
condition|?
name|c
operator|.
name|getAbbv
argument_list|()
operator|+
literal|"/"
else|:
literal|""
operator|)
operator|+
name|major
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" - "
operator|+
name|major
operator|.
name|getName
argument_list|()
argument_list|,
name|major
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|IdName
name|minor
range|:
name|c
operator|.
name|getMinors
argument_list|()
control|)
block|{
name|iMinors
operator|.
name|addItem
argument_list|(
operator|(
name|nrAreasSelected
operator|>
literal|1
condition|?
name|c
operator|.
name|getAbbv
argument_list|()
operator|+
literal|"/"
else|:
literal|""
operator|)
operator|+
name|minor
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" - "
operator|+
name|minor
operator|.
name|getName
argument_list|()
argument_list|,
name|minor
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iClassifications
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
condition|)
for|for
control|(
name|IdName
name|clasf
range|:
name|c
operator|.
name|getClassifications
argument_list|()
control|)
block|{
name|iClassifications
operator|.
name|addItem
argument_list|(
name|clasf
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" - "
operator|+
name|clasf
operator|.
name|getName
argument_list|()
argument_list|,
name|clasf
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|lastSelectedArea
operator|=
name|id
expr_stmt|;
block|}
block|}
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iMinorRow
argument_list|,
name|iMinors
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|String
name|curId
init|=
operator|(
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
condition|?
literal|""
else|:
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
operator|!
name|curId
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|nrAreasSelected
operator|!=
literal|1
condition|)
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
else|else
block|{
name|Curriculum
name|c
init|=
name|iCurricula
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|curId
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|c
operator|.
name|getArea
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|lastSelectedArea
argument_list|)
condition|)
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
name|majorChanged
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|Area
name|getSelectedArea
parameter_list|(
name|Long
name|majorId
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
block|{
name|String
name|id
init|=
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|Area
name|c
init|=
name|iAreas
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|c
operator|.
name|getMajor
argument_list|(
name|majorId
argument_list|)
operator|!=
literal|null
condition|)
return|return
name|c
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|void
name|majorChanged
parameter_list|()
block|{
name|iConcentrations
operator|.
name|clear
argument_list|()
expr_stmt|;
name|int
name|nrMajorsSelected
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMajors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|iMajors
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
name|nrMajorsSelected
operator|++
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMajors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iMajors
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
block|{
name|Long
name|majorId
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iMajors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|Area
name|c
init|=
name|getSelectedArea
argument_list|(
name|majorId
argument_list|)
decl_stmt|;
name|IdName
name|m
init|=
name|c
operator|.
name|getMajor
argument_list|(
name|majorId
argument_list|)
decl_stmt|;
for|for
control|(
name|IdName
name|conc
range|:
name|c
operator|.
name|getConcentrations
argument_list|()
control|)
block|{
if|if
condition|(
name|conc
operator|.
name|getParentId
argument_list|()
operator|.
name|equals
argument_list|(
name|majorId
argument_list|)
condition|)
name|iConcentrations
operator|.
name|addItem
argument_list|(
operator|(
name|nrMajorsSelected
operator|>
literal|1
condition|?
name|c
operator|.
name|getAbbv
argument_list|()
operator|+
literal|"/"
operator|+
name|m
operator|.
name|getAbbv
argument_list|()
operator|+
literal|"-"
else|:
literal|""
operator|)
operator|+
name|conc
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" - "
operator|+
name|conc
operator|.
name|getName
argument_list|()
argument_list|,
name|conc
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iConcentrationRow
argument_list|,
name|iConcentrations
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|curriculumChanged
parameter_list|()
block|{
name|String
name|id
init|=
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|id
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iMajors
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iMinors
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iClassifications
operator|.
name|clear
argument_list|()
expr_stmt|;
name|Curriculum
name|c
init|=
name|iCurricula
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
name|c
operator|.
name|getArea
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|areaChanged
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMajors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|String
name|majorId
init|=
name|iMajors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|boolean
name|hasMajor
init|=
literal|false
decl_stmt|;
for|for
control|(
name|IdName
name|m
range|:
name|c
operator|.
name|getMajors
argument_list|()
control|)
if|if
condition|(
name|m
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|majorId
argument_list|)
condition|)
block|{
name|hasMajor
operator|=
literal|true
expr_stmt|;
break|break;
block|}
name|iMajors
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
name|hasMajor
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMinors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|iMinors
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iClassifications
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|String
name|clasfId
init|=
name|iClassifications
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|boolean
name|hasClasf
init|=
literal|false
decl_stmt|;
for|for
control|(
name|IdName
name|m
range|:
name|c
operator|.
name|getClassifications
argument_list|()
control|)
if|if
condition|(
name|m
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|clasfId
argument_list|)
condition|)
block|{
name|hasClasf
operator|=
literal|true
expr_stmt|;
break|break;
block|}
name|iClassifications
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
name|hasClasf
argument_list|)
expr_stmt|;
block|}
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|c
operator|.
name|getLimit
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|c
operator|.
name|getLimit
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|majorChanged
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|areaChangedKeepSelection
parameter_list|()
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|majors
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMajors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|iMajors
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
name|majors
operator|.
name|add
argument_list|(
name|iMajors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|minors
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMinors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|iMinors
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
name|minors
operator|.
name|add
argument_list|(
name|iMinors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|classifications
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iClassifications
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|iClassifications
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
name|classifications
operator|.
name|add
argument_list|(
name|iClassifications
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|areaChanged
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|majors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMajors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|majors
operator|.
name|contains
argument_list|(
name|iMajors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
name|iMajors
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iMajors
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
operator|&&
name|iReservation
operator|!=
literal|null
operator|&&
name|iReservation
operator|instanceof
name|ReservationInterface
operator|.
name|CurriculumReservation
condition|)
block|{
name|Areas
name|areas
init|=
operator|(
operator|(
name|ReservationInterface
operator|.
name|CurriculumReservation
operator|)
name|iReservation
operator|)
operator|.
name|getCurriculum
argument_list|()
decl_stmt|;
if|if
condition|(
name|areas
operator|!=
literal|null
operator|&&
name|areas
operator|.
name|getMajors
argument_list|()
operator|!=
literal|null
condition|)
for|for
control|(
name|IdName
name|id
range|:
name|areas
operator|.
name|getMajors
argument_list|()
control|)
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMajors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|id
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|iMajors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
block|{
name|iMajors
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
operator|!
name|minors
operator|.
name|isEmpty
argument_list|()
condition|)
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMinors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|minors
operator|.
name|contains
argument_list|(
name|iMinors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
name|iMinors
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|iMinors
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
operator|&&
name|iReservation
operator|!=
literal|null
operator|&&
name|iReservation
operator|instanceof
name|ReservationInterface
operator|.
name|CurriculumReservation
condition|)
block|{
name|Areas
name|areas
init|=
operator|(
operator|(
name|ReservationInterface
operator|.
name|CurriculumReservation
operator|)
name|iReservation
operator|)
operator|.
name|getCurriculum
argument_list|()
decl_stmt|;
if|if
condition|(
name|areas
operator|!=
literal|null
operator|&&
name|areas
operator|.
name|getMinors
argument_list|()
operator|!=
literal|null
condition|)
for|for
control|(
name|IdName
name|id
range|:
name|areas
operator|.
name|getMinors
argument_list|()
control|)
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMinors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|id
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|iMinors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
block|{
name|iMinors
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
operator|!
name|classifications
operator|.
name|isEmpty
argument_list|()
condition|)
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iClassifications
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|classifications
operator|.
name|contains
argument_list|(
name|iClassifications
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
name|iClassifications
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|iClassifications
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
operator|&&
name|iReservation
operator|!=
literal|null
operator|&&
name|iReservation
operator|instanceof
name|ReservationInterface
operator|.
name|CurriculumReservation
condition|)
block|{
name|Areas
name|areas
init|=
operator|(
operator|(
name|ReservationInterface
operator|.
name|CurriculumReservation
operator|)
name|iReservation
operator|)
operator|.
name|getCurriculum
argument_list|()
decl_stmt|;
if|if
condition|(
name|areas
operator|!=
literal|null
operator|&&
name|areas
operator|.
name|getClassifications
argument_list|()
operator|!=
literal|null
condition|)
for|for
control|(
name|IdName
name|id
range|:
name|areas
operator|.
name|getClassifications
argument_list|()
control|)
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iClassifications
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|id
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|iClassifications
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
block|{
name|iClassifications
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
name|majorChangedKeepSelection
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|majorChangedKeepSelection
parameter_list|()
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|concentrations
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iConcentrations
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|iConcentrations
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
name|concentrations
operator|.
name|add
argument_list|(
name|iConcentrations
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|majorChanged
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|concentrations
operator|.
name|isEmpty
argument_list|()
condition|)
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iConcentrations
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|concentrations
operator|.
name|contains
argument_list|(
name|iConcentrations
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
name|iConcentrations
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|iConcentrations
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
operator|&&
name|iReservation
operator|!=
literal|null
operator|&&
name|iReservation
operator|instanceof
name|ReservationInterface
operator|.
name|CurriculumReservation
condition|)
block|{
name|Areas
name|areas
init|=
operator|(
operator|(
name|ReservationInterface
operator|.
name|CurriculumReservation
operator|)
name|iReservation
operator|)
operator|.
name|getCurriculum
argument_list|()
decl_stmt|;
if|if
condition|(
name|areas
operator|!=
literal|null
operator|&&
name|areas
operator|.
name|getConcentrations
argument_list|()
operator|!=
literal|null
condition|)
for|for
control|(
name|IdName
name|id
range|:
name|areas
operator|.
name|getConcentrations
argument_list|()
control|)
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iConcentrations
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|id
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|iConcentrations
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
block|{
name|iConcentrations
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
specifier|public
name|void
name|populate
parameter_list|()
block|{
if|if
condition|(
name|iReservation
operator|==
literal|null
condition|)
return|return;
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|iReservation
operator|.
name|getLimit
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|iReservation
operator|.
name|getLimit
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|iInclusive
operator|.
name|setSelectedIndex
argument_list|(
name|iReservation
operator|.
name|hasInclusive
argument_list|()
condition|?
name|iReservation
operator|.
name|isInclusive
argument_list|()
condition|?
literal|1
else|:
literal|2
else|:
literal|0
argument_list|)
expr_stmt|;
name|iCanOverlap
operator|.
name|setValue
argument_list|(
name|iReservation
operator|.
name|isAllowOverlaps
argument_list|()
argument_list|)
expr_stmt|;
name|iAlwaysExpired
operator|.
name|setValue
argument_list|(
name|iReservation
operator|.
name|isAlwaysExpired
argument_list|()
argument_list|)
expr_stmt|;
name|iOverLimit
operator|.
name|setValue
argument_list|(
name|iReservation
operator|.
name|isOverLimit
argument_list|()
argument_list|)
expr_stmt|;
name|iMustBeUsed
operator|.
name|setValue
argument_list|(
name|iReservation
operator|.
name|isMustBeUsed
argument_list|()
argument_list|)
expr_stmt|;
name|iExpirationDate
operator|.
name|getWidget
argument_list|()
operator|.
name|setValueInServerTimeZone
argument_list|(
name|iReservation
operator|.
name|getExpirationDate
argument_list|()
argument_list|)
expr_stmt|;
name|iStartDate
operator|.
name|getWidget
argument_list|()
operator|.
name|setValueInServerTimeZone
argument_list|(
name|iReservation
operator|.
name|getStartDate
argument_list|()
argument_list|)
expr_stmt|;
name|iRestrictions
operator|.
name|populate
argument_list|(
name|iReservation
argument_list|)
expr_stmt|;
if|if
condition|(
name|iReservation
operator|instanceof
name|ReservationInterface
operator|.
name|OverrideReservation
condition|)
block|{
name|select
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
argument_list|,
operator|(
operator|(
name|ReservationInterface
operator|.
name|OverrideReservation
operator|)
name|iReservation
operator|)
operator|.
name|getType
argument_list|()
operator|.
name|getReference
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|students
init|=
literal|""
decl_stmt|;
for|for
control|(
name|IdName
name|student
range|:
operator|(
operator|(
name|ReservationInterface
operator|.
name|OverrideReservation
operator|)
name|iReservation
operator|)
operator|.
name|getStudents
argument_list|()
control|)
name|students
operator|+=
operator|(
name|students
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|"\n"
operator|)
operator|+
name|student
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" "
operator|+
name|student
operator|.
name|getName
argument_list|()
expr_stmt|;
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|students
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iReservation
operator|instanceof
name|ReservationInterface
operator|.
name|IndividualReservation
condition|)
block|{
name|select
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
argument_list|,
name|iReservation
operator|.
name|isOverride
argument_list|()
condition|?
literal|"individual-override"
else|:
literal|"individual"
argument_list|)
expr_stmt|;
name|String
name|students
init|=
literal|""
decl_stmt|;
for|for
control|(
name|IdName
name|student
range|:
operator|(
operator|(
name|ReservationInterface
operator|.
name|IndividualReservation
operator|)
name|iReservation
operator|)
operator|.
name|getStudents
argument_list|()
control|)
name|students
operator|+=
operator|(
name|students
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|"\n"
operator|)
operator|+
name|student
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" "
operator|+
name|student
operator|.
name|getName
argument_list|()
expr_stmt|;
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|students
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iReservation
operator|instanceof
name|ReservationInterface
operator|.
name|GroupReservation
condition|)
block|{
name|select
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
argument_list|,
name|iReservation
operator|.
name|isOverride
argument_list|()
condition|?
literal|"group-override"
else|:
literal|"group"
argument_list|)
expr_stmt|;
name|select
argument_list|(
name|iGroup
operator|.
name|getWidget
argument_list|()
argument_list|,
operator|(
operator|(
name|ReservationInterface
operator|.
name|GroupReservation
operator|)
name|iReservation
operator|)
operator|.
name|getGroup
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iReservation
operator|instanceof
name|ReservationInterface
operator|.
name|CourseReservation
condition|)
block|{
name|select
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
argument_list|,
literal|"course"
argument_list|)
expr_stmt|;
name|select
argument_list|(
name|iCourse
operator|.
name|getWidget
argument_list|()
argument_list|,
operator|(
operator|(
name|ReservationInterface
operator|.
name|CourseReservation
operator|)
name|iReservation
operator|)
operator|.
name|getCourse
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iReservation
operator|instanceof
name|ReservationInterface
operator|.
name|LCReservation
condition|)
block|{
name|select
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
argument_list|,
literal|"lc"
argument_list|)
expr_stmt|;
name|select
argument_list|(
name|iGroup
operator|.
name|getWidget
argument_list|()
argument_list|,
operator|(
operator|(
name|ReservationInterface
operator|.
name|LCReservation
operator|)
name|iReservation
operator|)
operator|.
name|getGroup
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|select
argument_list|(
name|iCourse
operator|.
name|getWidget
argument_list|()
argument_list|,
operator|(
operator|(
name|ReservationInterface
operator|.
name|LCReservation
operator|)
name|iReservation
operator|)
operator|.
name|getCourse
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iReservation
operator|instanceof
name|ReservationInterface
operator|.
name|CurriculumReservation
condition|)
block|{
name|select
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
argument_list|,
name|iReservation
operator|.
name|isOverride
argument_list|()
condition|?
literal|"curriculum-override"
else|:
literal|"curriculum"
argument_list|)
expr_stmt|;
name|Areas
name|curriculum
init|=
operator|(
operator|(
name|ReservationInterface
operator|.
name|CurriculumReservation
operator|)
name|iReservation
operator|)
operator|.
name|getCurriculum
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Long
name|id
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|boolean
name|selected
init|=
literal|false
decl_stmt|;
for|for
control|(
name|IdName
name|aa
range|:
name|curriculum
operator|.
name|getAreas
argument_list|()
control|)
if|if
condition|(
name|aa
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
name|selected
operator|=
literal|true
expr_stmt|;
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
name|selected
argument_list|)
expr_stmt|;
block|}
name|areaChanged
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMajors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Long
name|id
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iMajors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|boolean
name|selected
init|=
literal|false
decl_stmt|;
for|for
control|(
name|IdName
name|mj
range|:
name|curriculum
operator|.
name|getMajors
argument_list|()
control|)
if|if
condition|(
name|mj
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
name|selected
operator|=
literal|true
expr_stmt|;
name|iMajors
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
name|selected
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMinors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Long
name|id
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iMinors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|boolean
name|selected
init|=
literal|false
decl_stmt|;
for|for
control|(
name|IdName
name|mj
range|:
name|curriculum
operator|.
name|getMinors
argument_list|()
control|)
if|if
condition|(
name|mj
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
name|selected
operator|=
literal|true
expr_stmt|;
name|iMinors
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
name|selected
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iClassifications
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Long
name|id
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iClassifications
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|boolean
name|selected
init|=
literal|false
decl_stmt|;
for|for
control|(
name|IdName
name|clasf
range|:
name|curriculum
operator|.
name|getClassifications
argument_list|()
control|)
if|if
condition|(
name|clasf
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
name|selected
operator|=
literal|true
expr_stmt|;
name|iClassifications
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
name|selected
argument_list|)
expr_stmt|;
block|}
name|majorChanged
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iConcentrations
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Long
name|id
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iConcentrations
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|boolean
name|selected
init|=
literal|false
decl_stmt|;
for|for
control|(
name|IdName
name|mj
range|:
name|curriculum
operator|.
name|getConcentrations
argument_list|()
control|)
if|if
condition|(
name|mj
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
name|selected
operator|=
literal|true
expr_stmt|;
name|iConcentrations
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
name|selected
argument_list|)
expr_stmt|;
block|}
block|}
name|typeChanged
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iType
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iType
operator|.
name|setText
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemText
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|select
parameter_list|(
name|ListBox
name|l
parameter_list|,
name|String
name|value
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|l
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|l
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|value
argument_list|)
condition|)
block|{
name|l
operator|.
name|setSelectedIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
specifier|public
name|ReservationInterface
name|validate
parameter_list|()
block|{
name|boolean
name|ok
init|=
literal|true
decl_stmt|;
name|String
name|type
init|=
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|type
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iType
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|hintReservationTypeNotSelected
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|iType
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
name|ReservationInterface
name|r
decl_stmt|;
if|if
condition|(
literal|"individual"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
operator|||
literal|"individual-override"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
operator|||
name|getOverrideType
argument_list|(
name|type
argument_list|)
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
literal|"individual"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
operator|||
literal|"individual-override"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|r
operator|=
operator|new
name|ReservationInterface
operator|.
name|IndividualReservation
argument_list|()
expr_stmt|;
name|r
operator|.
name|setOverride
argument_list|(
literal|"individual-override"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|r
operator|=
operator|new
name|ReservationInterface
operator|.
name|OverrideReservation
argument_list|(
name|getOverrideType
argument_list|(
name|type
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iStudents
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|hintNoStudentsProvided
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|RegExp
name|rx
init|=
name|RegExp
operator|.
name|compile
argument_list|(
literal|"^([a-zA-Z0-9]+)[ ,;\\|]?(.*)$"
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|student
range|:
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|split
argument_list|(
literal|"\\n"
argument_list|)
control|)
block|{
if|if
condition|(
name|student
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
continue|continue;
try|try
block|{
name|MatchResult
name|m
init|=
name|rx
operator|.
name|exec
argument_list|(
name|student
operator|.
name|trim
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|m
operator|==
literal|null
condition|)
block|{
name|iStudents
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|hintLineXIsNotValidStudent
argument_list|(
name|student
argument_list|)
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
break|break;
block|}
name|IdName
name|s
init|=
operator|new
name|IdName
argument_list|()
decl_stmt|;
name|s
operator|.
name|setAbbv
argument_list|(
name|m
operator|.
name|getGroup
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|.
name|setName
argument_list|(
name|m
operator|.
name|getGroupCount
argument_list|()
operator|<=
literal|2
condition|?
literal|""
else|:
name|m
operator|.
name|getGroup
argument_list|(
literal|2
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|ReservationInterface
operator|.
name|IndividualReservation
operator|)
name|r
operator|)
operator|.
name|getStudents
argument_list|()
operator|.
name|add
argument_list|(
name|s
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|ReservationInterface
operator|.
name|IndividualReservation
operator|)
name|r
operator|)
operator|.
name|getStudents
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iStudents
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|hintNoStudentsProvided
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|iStudents
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|hintLineXIsNotValidStudentException
argument_list|(
name|student
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
block|}
block|}
block|}
if|else if
condition|(
literal|"group"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
operator|||
literal|"group-override"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|r
operator|=
operator|new
name|ReservationInterface
operator|.
name|GroupReservation
argument_list|()
expr_stmt|;
name|r
operator|.
name|setOverride
argument_list|(
literal|"group-override"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|gid
init|=
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|gid
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iGroup
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|hintStudentGroupNotProvided
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|IdName
name|group
init|=
operator|new
name|IdName
argument_list|()
decl_stmt|;
name|group
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|gid
argument_list|)
argument_list|)
expr_stmt|;
name|group
operator|.
name|setName
argument_list|(
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemText
argument_list|(
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
operator|(
operator|(
name|ReservationInterface
operator|.
name|GroupReservation
operator|)
name|r
operator|)
operator|.
name|setGroup
argument_list|(
name|group
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
literal|"lc"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|r
operator|=
operator|new
name|ReservationInterface
operator|.
name|LCReservation
argument_list|()
expr_stmt|;
name|String
name|gid
init|=
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|gid
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iGroup
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|hintStudentGroupNotProvided
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|IdName
name|group
init|=
operator|new
name|IdName
argument_list|()
decl_stmt|;
name|group
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|gid
argument_list|)
argument_list|)
expr_stmt|;
name|group
operator|.
name|setName
argument_list|(
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemText
argument_list|(
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
operator|(
operator|(
name|ReservationInterface
operator|.
name|LCReservation
operator|)
name|r
operator|)
operator|.
name|setGroup
argument_list|(
name|group
argument_list|)
expr_stmt|;
block|}
name|String
name|cid
init|=
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cid
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iCourse
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|hintCourseNotProvided
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|Course
name|course
init|=
operator|new
name|Course
argument_list|()
decl_stmt|;
name|course
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|cid
argument_list|)
argument_list|)
expr_stmt|;
name|course
operator|.
name|setName
argument_list|(
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemText
argument_list|(
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
operator|(
operator|(
name|ReservationInterface
operator|.
name|LCReservation
operator|)
name|r
operator|)
operator|.
name|setCourse
argument_list|(
name|course
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
literal|"course"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|r
operator|=
operator|new
name|ReservationInterface
operator|.
name|CourseReservation
argument_list|()
expr_stmt|;
name|String
name|cid
init|=
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cid
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iCourse
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|hintCourseNotProvided
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|Course
name|course
init|=
operator|new
name|Course
argument_list|()
decl_stmt|;
name|course
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|cid
argument_list|)
argument_list|)
expr_stmt|;
name|course
operator|.
name|setName
argument_list|(
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemText
argument_list|(
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
operator|(
operator|(
name|ReservationInterface
operator|.
name|CourseReservation
operator|)
name|r
operator|)
operator|.
name|setCourse
argument_list|(
name|course
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
literal|"curriculum"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
operator|||
literal|"curriculum-override"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|r
operator|=
operator|new
name|ReservationInterface
operator|.
name|CurriculumReservation
argument_list|()
expr_stmt|;
name|r
operator|.
name|setOverride
argument_list|(
literal|"curriculum-override"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
argument_list|)
expr_stmt|;
name|Areas
name|curriculum
init|=
operator|new
name|Areas
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
block|{
name|Area
name|area
init|=
operator|new
name|Area
argument_list|()
decl_stmt|;
name|area
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|area
operator|.
name|setName
argument_list|(
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemText
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|curriculum
operator|.
name|getAreas
argument_list|()
operator|.
name|add
argument_list|(
name|area
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|curriculum
operator|.
name|getAreas
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iArea
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|hintAcademicAreaNotProvided
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMajors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iMajors
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
block|{
name|IdName
name|mj
init|=
operator|new
name|IdName
argument_list|()
decl_stmt|;
name|mj
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iMajors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|mj
operator|.
name|setName
argument_list|(
name|iMajors
operator|.
name|getItemText
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|curriculum
operator|.
name|getMajors
argument_list|()
operator|.
name|add
argument_list|(
name|mj
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMinors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iMinors
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
block|{
name|IdName
name|mj
init|=
operator|new
name|IdName
argument_list|()
decl_stmt|;
name|mj
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iMinors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|mj
operator|.
name|setName
argument_list|(
name|iMinors
operator|.
name|getItemText
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|curriculum
operator|.
name|getMinors
argument_list|()
operator|.
name|add
argument_list|(
name|mj
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iClassifications
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iClassifications
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
block|{
name|IdName
name|clasf
init|=
operator|new
name|IdName
argument_list|()
decl_stmt|;
name|clasf
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iClassifications
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|clasf
operator|.
name|setName
argument_list|(
name|iClassifications
operator|.
name|getItemText
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|curriculum
operator|.
name|getClassifications
argument_list|()
operator|.
name|add
argument_list|(
name|clasf
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iConcentrations
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iConcentrations
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
block|{
name|IdName
name|cc
init|=
operator|new
name|IdName
argument_list|()
decl_stmt|;
name|cc
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iConcentrations
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|cc
operator|.
name|setName
argument_list|(
name|iConcentrations
operator|.
name|getItemText
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|curriculum
operator|.
name|getConcentrations
argument_list|()
operator|.
name|add
argument_list|(
name|cc
argument_list|)
expr_stmt|;
block|}
block|}
operator|(
operator|(
name|ReservationInterface
operator|.
name|CurriculumReservation
operator|)
name|r
operator|)
operator|.
name|setCurriculum
argument_list|(
name|curriculum
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
literal|""
operator|.
name|equals
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|iType
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|hintReservationTypeNotSelected
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
else|else
block|{
name|iType
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|hintReservationTypeNotSupported
argument_list|(
name|type
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
if|if
condition|(
name|iExpirationDate
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|==
literal|null
operator|&&
operator|!
name|iExpirationDate
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iExpirationDate
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|hintExpirationDateNotValid
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|r
operator|.
name|setExpirationDate
argument_list|(
name|iExpirationDate
operator|.
name|getWidget
argument_list|()
operator|.
name|getValueInServerTimeZone
argument_list|()
argument_list|)
expr_stmt|;
name|iExpirationDate
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|iStartDate
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|==
literal|null
operator|&&
operator|!
name|iStartDate
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iStartDate
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|hintStartDateNotValid
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|r
operator|.
name|setStartDate
argument_list|(
name|iStartDate
operator|.
name|getWidget
argument_list|()
operator|.
name|getValueInServerTimeZone
argument_list|()
argument_list|)
expr_stmt|;
name|iStartDate
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|r
operator|.
name|getStartDate
argument_list|()
operator|!=
literal|null
operator|&&
name|r
operator|.
name|getExpirationDate
argument_list|()
operator|!=
literal|null
operator|&&
name|r
operator|.
name|getExpirationDate
argument_list|()
operator|.
name|before
argument_list|(
name|r
operator|.
name|getStartDate
argument_list|()
argument_list|)
condition|)
block|{
name|iExpirationDate
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|hintExpirationDateNotAfterStartDate
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
operator|!
literal|"individual"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
operator|&&
operator|!
literal|"individual-override"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
operator|&&
name|getOverrideType
argument_list|(
name|type
argument_list|)
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|r
operator|.
name|setLimit
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
try|try
block|{
name|r
operator|.
name|setLimit
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|iLimit
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|hintReservationLimitNotValid
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|r
operator|.
name|isOverride
argument_list|()
condition|)
block|{
name|r
operator|.
name|setMustBeUsed
argument_list|(
name|iMustBeUsed
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|setAlwaysExpired
argument_list|(
name|iAlwaysExpired
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|setOverLimit
argument_list|(
name|iOverLimit
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|setAllowOverlaps
argument_list|(
name|iCanOverlap
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|isVisible
argument_list|(
name|iInclusionLine
argument_list|)
condition|)
name|r
operator|.
name|setInclusive
argument_list|(
name|iInclusive
operator|.
name|getSelectedIndex
argument_list|()
operator|==
literal|0
condition|?
literal|null
else|:
name|iInclusive
operator|.
name|getSelectedIndex
argument_list|()
operator|==
literal|1
condition|?
name|Boolean
operator|.
name|TRUE
else|:
name|Boolean
operator|.
name|FALSE
argument_list|)
expr_stmt|;
else|else
name|r
operator|.
name|setInclusive
argument_list|(
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
name|iReservation
operator|!=
literal|null
condition|)
name|r
operator|.
name|setId
argument_list|(
name|iReservation
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|Offering
name|o
init|=
operator|new
name|Offering
argument_list|()
decl_stmt|;
if|if
condition|(
name|iOffering
operator|==
literal|null
condition|)
block|{
name|iCourseBox
operator|.
name|setError
argument_list|(
name|MESSAGES
operator|.
name|hintOfferingNotProvided
argument_list|()
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
if|else if
condition|(
name|iOffering
operator|.
name|isUnlockNeeded
argument_list|()
condition|)
block|{
name|iCourseBox
operator|.
name|setError
argument_list|(
name|MESSAGES
operator|.
name|hintOfferingIsLocked
argument_list|(
name|iOffering
operator|.
name|getAbbv
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|o
operator|.
name|setId
argument_list|(
name|iOffering
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|.
name|setName
argument_list|(
name|iOffering
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|r
operator|.
name|setOffering
argument_list|(
name|o
argument_list|)
expr_stmt|;
name|iRestrictions
operator|.
name|validate
argument_list|(
name|r
argument_list|)
expr_stmt|;
return|return
operator|(
name|ok
condition|?
name|r
else|:
literal|null
operator|)
return|;
block|}
specifier|public
specifier|static
class|class
name|EditFinishedEvent
block|{
specifier|private
name|Long
name|iReservationId
decl_stmt|;
specifier|public
name|EditFinishedEvent
parameter_list|(
name|Long
name|reservationId
parameter_list|)
block|{
name|iReservationId
operator|=
name|reservationId
expr_stmt|;
block|}
specifier|public
name|Long
name|getReservationId
parameter_list|()
block|{
return|return
name|iReservationId
return|;
block|}
block|}
specifier|public
specifier|static
interface|interface
name|EditFinishedHandler
block|{
specifier|public
name|void
name|onBack
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
function_decl|;
specifier|public
name|void
name|onDelete
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
function_decl|;
specifier|public
name|void
name|onSave
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
function_decl|;
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
function_decl|;
specifier|public
name|boolean
name|hasNext
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
function_decl|;
specifier|public
name|boolean
name|hasPrevious
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
function_decl|;
specifier|public
name|void
name|onNext
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
function_decl|;
specifier|public
name|void
name|onPrevious
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
function_decl|;
block|}
specifier|public
name|void
name|addEditFinishedHandler
parameter_list|(
name|EditFinishedHandler
name|h
parameter_list|)
block|{
name|iEditFinishedHandlers
operator|.
name|add
argument_list|(
name|h
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
interface|interface
name|Initialization
block|{
specifier|public
name|void
name|execute
parameter_list|(
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
name|callback
parameter_list|)
function_decl|;
block|}
specifier|public
class|class
name|InitExpirationDates
implements|implements
name|Initialization
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|(
specifier|final
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
name|callback
parameter_list|)
block|{
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|ReservationDefaultExpirationDatesRpcRequest
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|DefaultExpirationDates
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|callback
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|DefaultExpirationDates
name|result
parameter_list|)
block|{
name|iExpirations
operator|=
name|result
expr_stmt|;
if|if
condition|(
name|iExpirations
operator|.
name|hasInclusive
argument_list|()
condition|)
name|iInclusive
operator|.
name|setItemText
argument_list|(
literal|0
argument_list|,
name|iExpirations
operator|.
name|isInclusive
argument_list|()
condition|?
name|MESSAGES
operator|.
name|reservationInclusiveDefaultTrue
argument_list|()
else|:
name|MESSAGES
operator|.
name|reservationInclusiveDefaultFalse
argument_list|()
argument_list|)
expr_stmt|;
name|callback
operator|.
name|onSuccess
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
class|class
name|InitStudentGroups
implements|implements
name|Initialization
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|(
specifier|final
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
name|callback
parameter_list|)
block|{
name|iReservationService
operator|.
name|getStudentGroups
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|IdName
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|removeItem
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|callback
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|List
argument_list|<
name|IdName
argument_list|>
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|removeItem
argument_list|(
literal|2
argument_list|)
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|IdName
name|group
range|:
name|result
control|)
block|{
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|group
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" - "
operator|+
name|group
operator|.
name|getName
argument_list|()
operator|+
literal|" ("
operator|+
name|group
operator|.
name|getLimit
argument_list|()
operator|+
literal|")"
argument_list|,
name|group
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
class|class
name|InitCurricula
implements|implements
name|Initialization
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|(
specifier|final
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
name|callback
parameter_list|)
block|{
name|iReservationService
operator|.
name|getAreas
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|Area
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|callback
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|List
argument_list|<
name|Area
argument_list|>
name|result
parameter_list|)
block|{
for|for
control|(
name|Area
name|c
range|:
name|result
control|)
block|{
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|c
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" - "
operator|+
name|c
operator|.
name|getName
argument_list|()
argument_list|,
name|c
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|iAreas
operator|.
name|put
argument_list|(
name|c
operator|.
name|getId
argument_list|()
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|InitializationChain
implements|implements
name|Initialization
block|{
specifier|private
name|Initialization
index|[]
name|iInitializations
decl_stmt|;
specifier|public
name|InitializationChain
parameter_list|(
name|Initialization
modifier|...
name|initializations
parameter_list|)
block|{
name|iInitializations
operator|=
name|initializations
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|(
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
name|callback
parameter_list|)
block|{
name|execute
argument_list|(
literal|0
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|execute
parameter_list|(
specifier|final
name|int
name|index
parameter_list|,
specifier|final
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
name|callback
parameter_list|)
block|{
if|if
condition|(
name|index
operator|>=
name|iInitializations
operator|.
name|length
condition|)
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iInitializations
index|[
name|index
index|]
operator|.
name|execute
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|callback
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
condition|)
block|{
name|execute
argument_list|(
literal|1
operator|+
name|index
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

