begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2011, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|reservations
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|Lookup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|curricula
operator|.
name|CurriculaCourseSelectionBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|curricula
operator|.
name|CurriculaCourseSelectionBox
operator|.
name|CourseSelectionChangeEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|curricula
operator|.
name|CurriculaCourseSelectionBox
operator|.
name|CourseSelectionChangeHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimePageLabel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTextBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|services
operator|.
name|ReservationService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|services
operator|.
name|ReservationServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|PersonInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|Clazz
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|Course
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|Area
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|Curriculum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|IdName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|Offering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|Subpart
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Cursor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Unit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|i18n
operator|.
name|client
operator|.
name|DateTimeFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|regexp
operator|.
name|shared
operator|.
name|MatchResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|regexp
operator|.
name|shared
operator|.
name|RegExp
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHorizontalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasVerticalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HorizontalPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextArea
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Tree
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TreeItem
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ValueBoxBase
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|VerticalPanel
import|;
end_import

begin_comment
comment|/**  *   * @author Tomas Muller  *  */
end_comment

begin_class
specifier|public
class|class
name|ReservationEdit
extends|extends
name|Composite
block|{
specifier|public
specifier|static
specifier|final
name|GwtResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|DateTimeFormat
name|sDF
init|=
name|DateTimeFormat
operator|.
name|getFormat
argument_list|(
literal|"MM/dd/yyyy"
argument_list|)
decl_stmt|;
specifier|private
name|List
argument_list|<
name|EditFinishedHandler
argument_list|>
name|iEditFinishedHandlers
init|=
operator|new
name|ArrayList
argument_list|<
name|EditFinishedHandler
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|SimpleForm
name|iPanel
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iTitleAndButtons
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
name|iLimit
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|DateBox
argument_list|>
name|iExpirationDate
decl_stmt|;
specifier|private
name|Tree
name|iStructure
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|ConfigSelection
argument_list|>
name|iConfigs
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|ConfigSelection
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|ClassSelection
argument_list|>
name|iClasses
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|ClassSelection
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Area
argument_list|>
name|iAreas
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Area
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Curriculum
argument_list|>
name|iCurricula
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Curriculum
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|ListBox
name|iClassifications
decl_stmt|,
name|iMajors
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|iType
decl_stmt|,
name|iArea
decl_stmt|,
name|iCourse
decl_stmt|,
name|iGroup
decl_stmt|,
name|iCurriculum
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|TextArea
argument_list|>
name|iStudents
decl_stmt|;
specifier|private
name|ReservationInterface
name|iReservation
decl_stmt|;
specifier|private
name|CurriculaCourseSelectionBox
name|iCourseBox
decl_stmt|;
specifier|private
name|Lookup
name|iLookup
decl_stmt|;
specifier|private
specifier|final
name|ReservationServiceAsync
name|iReservationService
init|=
name|GWT
operator|.
name|create
argument_list|(
name|ReservationService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|int
name|iGroupLine
decl_stmt|,
name|iCourseLine
decl_stmt|,
name|iAreaLine
decl_stmt|,
name|iStudentsLine
decl_stmt|,
name|iCurriculumLine
decl_stmt|;
specifier|private
name|Offering
name|iOffering
init|=
literal|null
decl_stmt|;
specifier|public
name|ReservationEdit
parameter_list|(
name|boolean
name|standAlone
parameter_list|)
block|{
if|if
condition|(
name|standAlone
condition|)
block|{
name|addEditFinishedHandler
argument_list|(
operator|new
name|EditFinishedHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSave
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
block|{
name|ToolBox
operator|.
name|open
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"instructionalOfferingDetail.do?io="
operator|+
name|iOffering
operator|.
name|getId
argument_list|()
operator|+
literal|"#reservations"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onDelete
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
block|{
name|ToolBox
operator|.
name|open
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"instructionalOfferingDetail.do?io="
operator|+
name|iOffering
operator|.
name|getId
argument_list|()
operator|+
literal|"#reservations"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onBack
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
block|{
name|ToolBox
operator|.
name|open
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"instructionalOfferingDetail.do?io="
operator|+
name|iOffering
operator|.
name|getId
argument_list|()
operator|+
literal|"#reservations"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
operator|new
name|Timer
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|ToolBox
operator|.
name|open
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"instructionalOfferingDetail.do?io="
operator|+
name|iOffering
operator|.
name|getId
argument_list|()
operator|+
literal|"#reservations"
argument_list|)
expr_stmt|;
block|}
block|}
operator|.
name|schedule
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"id"
argument_list|)
operator|==
literal|null
operator|&&
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"offering"
argument_list|)
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|ReservationException
argument_list|(
literal|"Reservation or instructional offering id not provided."
argument_list|)
throw|;
block|}
block|}
name|iPanel
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|initWidget
argument_list|(
name|iPanel
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
literal|"Reservation Details"
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"save"
argument_list|,
literal|"<u>S</u>ave"
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iTitleAndButtons
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|ReservationInterface
name|r
init|=
name|validate
argument_list|()
decl_stmt|;
if|if
condition|(
name|r
operator|==
literal|null
condition|)
block|{
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
literal|"Validation failed, please check the form for warnings."
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
literal|"Saving reservation..."
argument_list|)
expr_stmt|;
name|iReservationService
operator|.
name|save
argument_list|(
name|r
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Long
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Long
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|EditFinishedEvent
name|e
init|=
operator|new
name|EditFinishedEvent
argument_list|(
name|result
argument_list|)
decl_stmt|;
for|for
control|(
name|EditFinishedHandler
name|h
range|:
name|iEditFinishedHandlers
control|)
name|h
operator|.
name|onSave
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"delete"
argument_list|,
literal|"<u>D</u>elete"
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iReservation
operator|==
literal|null
condition|)
block|{
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
literal|"Cannot delete unsaved reservation."
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
literal|"Deleting reservation..."
argument_list|)
expr_stmt|;
name|iReservationService
operator|.
name|delete
argument_list|(
name|iReservation
operator|.
name|getId
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|EditFinishedEvent
name|e
init|=
operator|new
name|EditFinishedEvent
argument_list|(
name|iReservation
operator|==
literal|null
condition|?
literal|null
else|:
name|iReservation
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|EditFinishedHandler
name|h
range|:
name|iEditFinishedHandlers
control|)
name|h
operator|.
name|onDelete
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"delete"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|addButton
argument_list|(
literal|"back"
argument_list|,
literal|"<u>B</u>ack"
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|EditFinishedEvent
name|e
init|=
operator|new
name|EditFinishedEvent
argument_list|(
name|iReservation
operator|==
literal|null
condition|?
literal|null
else|:
name|iReservation
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|EditFinishedHandler
name|h
range|:
name|iEditFinishedHandlers
control|)
name|h
operator|.
name|onBack
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addHeaderRow
argument_list|(
name|iTitleAndButtons
argument_list|)
expr_stmt|;
name|iCourseBox
operator|=
operator|new
name|CurriculaCourseSelectionBox
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iCourseBox
operator|.
name|setWidth
argument_list|(
literal|"130px"
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
literal|"Instructional Offering:"
argument_list|,
name|iCourseBox
argument_list|)
expr_stmt|;
name|iLimit
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|UniTimeTextBox
argument_list|>
argument_list|(
operator|new
name|UniTimeTextBox
argument_list|(
literal|4
argument_list|,
name|ValueBoxBase
operator|.
name|TextAlignment
operator|.
name|RIGHT
argument_list|)
argument_list|)
expr_stmt|;
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|computeLimit
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
literal|"Reserved Space:"
argument_list|,
name|iLimit
argument_list|)
expr_stmt|;
name|iExpirationDate
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|DateBox
argument_list|>
argument_list|(
operator|new
name|DateBox
argument_list|()
argument_list|)
expr_stmt|;
name|iExpirationDate
operator|.
name|getWidget
argument_list|()
operator|.
name|getTextBox
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iExpirationDate
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
literal|"Expiration Date:"
argument_list|,
name|iExpirationDate
argument_list|)
expr_stmt|;
name|iStructure
operator|=
operator|new
name|Tree
argument_list|(
name|RESOURCES
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
literal|"Restrictions:"
argument_list|,
name|iStructure
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|setVerticalAlignment
argument_list|(
name|iPanel
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
name|HasVerticalAlignment
operator|.
name|ALIGN_TOP
argument_list|)
expr_stmt|;
name|iType
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"Select..."
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"Individual Reservation"
argument_list|,
literal|"individual"
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"Student Group Reservation"
argument_list|,
literal|"group"
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"Curriculum Reservation"
argument_list|,
literal|"curriculum"
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"Course Reservation"
argument_list|,
literal|"course"
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iType
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
literal|"Type:"
argument_list|,
name|iType
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|typeChanged
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iStudents
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextArea
argument_list|>
argument_list|(
operator|new
name|TextArea
argument_list|()
argument_list|)
expr_stmt|;
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iStudents
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|split
argument_list|(
literal|"\n"
argument_list|)
operator|.
name|length
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|setVisibleLines
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|setCharacterWidth
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|VerticalPanel
name|students
init|=
operator|new
name|VerticalPanel
argument_list|()
decl_stmt|;
name|students
operator|.
name|add
argument_list|(
name|iStudents
argument_list|)
expr_stmt|;
name|Button
name|lookup
init|=
operator|new
name|Button
argument_list|(
literal|"<u>L</u>ookup"
argument_list|)
decl_stmt|;
name|lookup
operator|.
name|setAccessKey
argument_list|(
literal|'l'
argument_list|)
expr_stmt|;
name|iLookup
operator|=
operator|new
name|Lookup
argument_list|()
expr_stmt|;
name|lookup
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iLookup
operator|.
name|center
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iLookup
operator|.
name|setOptions
argument_list|(
literal|"mustHaveExternalId,source=students"
argument_list|)
expr_stmt|;
name|iLookup
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|PersonInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|PersonInterface
argument_list|>
name|event
parameter_list|)
block|{
name|PersonInterface
name|student
init|=
name|event
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|student
operator|!=
literal|null
condition|)
block|{
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|+
operator|(
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|"\n"
operator|)
operator|+
name|student
operator|.
name|getId
argument_list|()
operator|+
literal|" "
operator|+
name|student
operator|.
name|getLastName
argument_list|()
operator|+
literal|", "
operator|+
name|student
operator|.
name|getFirstName
argument_list|()
operator|+
operator|(
name|student
operator|.
name|getMiddleName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|" "
operator|+
name|student
operator|.
name|getMiddleName
argument_list|()
operator|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|split
argument_list|(
literal|"\n"
argument_list|)
operator|.
name|length
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|students
operator|.
name|add
argument_list|(
name|lookup
argument_list|)
expr_stmt|;
name|students
operator|.
name|setCellHorizontalAlignment
argument_list|(
name|lookup
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
literal|"Students:"
argument_list|,
name|students
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|setVerticalAlignment
argument_list|(
name|iPanel
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
argument_list|,
literal|0
argument_list|,
name|HasVerticalAlignment
operator|.
name|ALIGN_TOP
argument_list|)
expr_stmt|;
name|iStudentsLine
operator|=
name|iPanel
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
expr_stmt|;
name|iGroup
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iGroup
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"Select..."
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
literal|"Student Group:"
argument_list|,
name|iGroup
argument_list|)
expr_stmt|;
name|iGroupLine
operator|=
name|iPanel
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
expr_stmt|;
name|iCourse
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iCourse
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|String
name|cid
init|=
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Course
name|course
range|:
name|iOffering
operator|.
name|getCourses
argument_list|()
control|)
block|{
if|if
condition|(
name|course
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|cid
argument_list|)
condition|)
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|course
operator|.
name|getLimit
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|course
operator|.
name|getLimit
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
literal|"Course:"
argument_list|,
name|iCourse
argument_list|)
expr_stmt|;
name|iCourseLine
operator|=
name|iPanel
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
expr_stmt|;
name|iCurriculum
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"None"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
literal|"Curriculum:"
argument_list|,
name|iCurriculum
argument_list|)
expr_stmt|;
name|iCurriculumLine
operator|=
name|iPanel
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
expr_stmt|;
name|iArea
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"Select..."
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
literal|"Academic Area:"
argument_list|,
name|iArea
argument_list|)
expr_stmt|;
name|iAreaLine
operator|=
name|iPanel
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
expr_stmt|;
name|iClassifications
operator|=
operator|new
name|ListBox
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iClassifications
operator|.
name|setWidth
argument_list|(
literal|"300px"
argument_list|)
expr_stmt|;
name|iClassifications
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iClassifications
operator|.
name|setVisibleItemCount
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|iClassifications
operator|.
name|setHeight
argument_list|(
literal|"100px"
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
literal|"Classifications:"
argument_list|,
name|iClassifications
argument_list|)
expr_stmt|;
name|iMajors
operator|=
operator|new
name|ListBox
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iMajors
operator|.
name|setWidth
argument_list|(
literal|"300px"
argument_list|)
expr_stmt|;
name|iMajors
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iMajors
operator|.
name|setVisibleItemCount
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|iMajors
operator|.
name|setHeight
argument_list|(
literal|"100px"
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
literal|"Majors:"
argument_list|,
name|iMajors
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|curriculumChanged
argument_list|()
expr_stmt|;
name|iCurriculum
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|areaChanged
argument_list|()
expr_stmt|;
name|iArea
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iClassifications
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|String
name|curId
init|=
operator|(
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
condition|?
literal|""
else|:
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
operator|!
name|curId
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Curriculum
name|c
init|=
name|iCurricula
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|curId
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|limit
init|=
literal|0
decl_stmt|;
name|boolean
name|noneSelected
init|=
literal|true
decl_stmt|;
name|classifcations
label|:
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iClassifications
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iClassifications
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
block|{
for|for
control|(
name|IdName
name|f
range|:
name|c
operator|.
name|getClassifications
argument_list|()
control|)
block|{
if|if
condition|(
name|f
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|iClassifications
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
block|{
name|limit
operator|+=
name|f
operator|.
name|getLimit
argument_list|()
expr_stmt|;
name|noneSelected
operator|=
literal|false
expr_stmt|;
continue|continue
name|classifcations
continue|;
block|}
block|}
block|}
block|}
if|if
condition|(
name|noneSelected
condition|)
name|limit
operator|=
name|c
operator|.
name|getLimit
argument_list|()
expr_stmt|;
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|limit
operator|==
literal|0
condition|?
literal|""
else|:
name|String
operator|.
name|valueOf
argument_list|(
name|limit
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iMajors
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addNotPrintableBottomRow
argument_list|(
name|iTitleAndButtons
operator|.
name|clonePanel
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|standAlone
condition|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
literal|"Loading reservation..."
argument_list|)
expr_stmt|;
if|if
condition|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"id"
argument_list|)
operator|==
literal|null
condition|)
block|{
name|initStudentGroupsAndCurricula
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|loadingFailed
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
name|setReservation
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iReservationService
operator|.
name|getReservation
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"id"
argument_list|)
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|ReservationInterface
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|loadingFailed
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
specifier|final
name|ReservationInterface
name|reservation
parameter_list|)
block|{
if|if
condition|(
name|reservation
operator|instanceof
name|ReservationInterface
operator|.
name|CurriculumReservation
condition|)
block|{
name|initCurricula
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|loadingFailed
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
name|setReservation
argument_list|(
name|reservation
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|reservation
operator|instanceof
name|ReservationInterface
operator|.
name|GroupReservation
condition|)
block|{
name|initStudentGroups
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|loadingFailed
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
name|setReservation
argument_list|(
name|reservation
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setReservation
argument_list|(
name|reservation
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
empty_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|initStudentGroupsAndCurricula
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
literal|"Load failed: "
operator|+
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|iCourseBox
operator|.
name|addCourseSelectionChangeHandler
argument_list|(
operator|new
name|CourseSelectionChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|CourseSelectionChangeEvent
name|evt
parameter_list|)
block|{
if|if
condition|(
name|evt
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|iReservationService
operator|.
name|getOfferingByCourseName
argument_list|(
name|evt
operator|.
name|getCourse
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Offering
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iCourseBox
operator|.
name|setError
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Offering
name|result
parameter_list|)
block|{
name|setOffering
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setOffering
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|loadingFailed
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
literal|"Load failed: "
operator|+
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setErrorMessage
argument_list|(
literal|"Load failed: "
operator|+
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|EditFinishedHandler
name|h
range|:
name|iEditFinishedHandlers
control|)
name|h
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initStudentGroups
parameter_list|(
specifier|final
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
name|callback
parameter_list|)
block|{
name|iReservationService
operator|.
name|getStudentGroups
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|IdName
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|removeItem
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|callback
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|List
argument_list|<
name|IdName
argument_list|>
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|removeItem
argument_list|(
literal|2
argument_list|)
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|IdName
name|group
range|:
name|result
control|)
block|{
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|group
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" - "
operator|+
name|group
operator|.
name|getName
argument_list|()
operator|+
literal|" ("
operator|+
name|group
operator|.
name|getLimit
argument_list|()
operator|+
literal|")"
argument_list|,
name|group
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initCurricula
parameter_list|(
specifier|final
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
name|callback
parameter_list|)
block|{
name|iReservationService
operator|.
name|getAreas
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|Area
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|callback
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|List
argument_list|<
name|Area
argument_list|>
name|result
parameter_list|)
block|{
for|for
control|(
name|Area
name|c
range|:
name|result
control|)
block|{
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|c
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" - "
operator|+
name|c
operator|.
name|getName
argument_list|()
argument_list|,
name|c
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|iAreas
operator|.
name|put
argument_list|(
name|c
operator|.
name|getId
argument_list|()
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initStudentGroupsAndCurricula
parameter_list|(
specifier|final
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
name|callback
parameter_list|)
block|{
name|initStudentGroups
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|callback
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
name|initCurricula
argument_list|(
name|callback
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setReservation
parameter_list|(
name|ReservationInterface
name|r
parameter_list|)
block|{
name|iReservation
operator|=
name|r
expr_stmt|;
name|UniTimePageLabel
operator|.
name|getInstance
argument_list|()
operator|.
name|setPageName
argument_list|(
name|iReservation
operator|==
literal|null
condition|?
literal|"Add Reservation"
else|:
literal|"Edit Reservation"
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|setEnabled
argument_list|(
literal|"delete"
argument_list|,
name|iReservation
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|iTitleAndButtons
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iLimit
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|Long
name|offeringId
init|=
operator|(
name|iReservation
operator|==
literal|null
condition|?
literal|null
else|:
name|iReservation
operator|.
name|getOffering
argument_list|()
operator|.
name|getId
argument_list|()
operator|)
decl_stmt|;
if|if
condition|(
name|offeringId
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"offering"
argument_list|)
operator|!=
literal|null
condition|)
name|offeringId
operator|=
name|Long
operator|.
name|valueOf
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"offering"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|offeringId
operator|==
literal|null
condition|)
block|{
name|iOffering
operator|=
literal|null
expr_stmt|;
name|iCourseBox
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iCourseBox
operator|.
name|setCourse
argument_list|(
literal|""
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|""
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iExpirationDate
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iStructure
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iClasses
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iConfigs
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iClassifications
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iMajors
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iType
operator|.
name|setReadOnly
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iCurricula
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"None"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|areaChanged
argument_list|()
expr_stmt|;
name|typeChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|iCourseBox
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
literal|"Loading reservation..."
argument_list|)
expr_stmt|;
name|iReservationService
operator|.
name|getOffering
argument_list|(
name|offeringId
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Offering
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|loadingFailed
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Offering
name|result
parameter_list|)
block|{
name|setOffering
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setOffering
parameter_list|(
name|Offering
name|offering
parameter_list|)
block|{
name|iOffering
operator|=
name|offering
expr_stmt|;
if|if
condition|(
name|iOffering
operator|==
literal|null
condition|)
return|return;
if|if
condition|(
operator|!
name|iCourseBox
operator|.
name|isEnabled
argument_list|()
condition|)
name|iCourseBox
operator|.
name|setCourse
argument_list|(
name|iOffering
operator|.
name|getAbbv
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iStructure
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iClasses
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iConfigs
operator|.
name|clear
argument_list|()
expr_stmt|;
for|for
control|(
name|Config
name|config
range|:
name|iOffering
operator|.
name|getConfigs
argument_list|()
control|)
block|{
name|TreeItem
name|configItem
init|=
operator|new
name|TreeItem
argument_list|(
operator|new
name|ConfigSelection
argument_list|(
name|config
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|Subpart
name|subpart
range|:
name|config
operator|.
name|getSubparts
argument_list|()
control|)
block|{
if|if
condition|(
name|subpart
operator|.
name|getParentId
argument_list|()
operator|==
literal|null
condition|)
for|for
control|(
name|TreeItem
name|item
range|:
name|addClasses
argument_list|(
name|subpart
argument_list|,
literal|null
argument_list|)
control|)
name|configItem
operator|.
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
name|iStructure
operator|.
name|addItem
argument_list|(
name|configItem
argument_list|)
expr_stmt|;
block|}
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"Select..."
argument_list|,
literal|""
argument_list|)
expr_stmt|;
for|for
control|(
name|Course
name|course
range|:
name|iOffering
operator|.
name|getCourses
argument_list|()
control|)
block|{
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|course
operator|.
name|getAbbv
argument_list|()
operator|+
operator|(
name|course
operator|.
name|getName
argument_list|()
operator|==
literal|null
operator|||
name|course
operator|.
name|getName
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|" - "
operator|+
name|course
operator|.
name|getName
argument_list|()
operator|)
argument_list|,
name|course
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|typeChanged
argument_list|()
expr_stmt|;
name|populate
argument_list|()
expr_stmt|;
name|iCurricula
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"None"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iReservationService
operator|.
name|getCurricula
argument_list|(
name|iOffering
operator|.
name|getId
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|Curriculum
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|loadingFailed
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|List
argument_list|<
name|Curriculum
argument_list|>
name|result
parameter_list|)
block|{
name|curricula
label|:
for|for
control|(
name|Curriculum
name|curriculum
range|:
name|result
control|)
block|{
name|iCurricula
operator|.
name|put
argument_list|(
name|curriculum
operator|.
name|getId
argument_list|()
argument_list|,
name|curriculum
argument_list|)
expr_stmt|;
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|curriculum
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" - "
operator|+
name|curriculum
operator|.
name|getName
argument_list|()
operator|+
literal|" ("
operator|+
name|curriculum
operator|.
name|getLimit
argument_list|()
operator|+
literal|")"
argument_list|,
name|curriculum
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|curriculum
operator|.
name|getArea
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
condition|)
block|{
name|majors
label|:
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMajors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iMajors
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
block|{
for|for
control|(
name|IdName
name|m
range|:
name|curriculum
operator|.
name|getMajors
argument_list|()
control|)
block|{
if|if
condition|(
name|m
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|iMajors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
continue|continue
name|majors
continue|;
block|}
continue|continue
name|curricula
continue|;
block|}
else|else
block|{
for|for
control|(
name|IdName
name|m
range|:
name|curriculum
operator|.
name|getMajors
argument_list|()
control|)
block|{
if|if
condition|(
name|m
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|iMajors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
continue|continue
name|curricula
continue|;
block|}
continue|continue
name|majors
continue|;
block|}
block|}
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
name|String
name|val
init|=
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCurriculumLine
argument_list|,
literal|"curriculum"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|&&
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|computeLimit
argument_list|()
expr_stmt|;
block|}
specifier|private
name|List
argument_list|<
name|TreeItem
argument_list|>
name|addClasses
parameter_list|(
name|Subpart
name|subpart
parameter_list|,
name|Long
name|parent
parameter_list|)
block|{
name|List
argument_list|<
name|TreeItem
argument_list|>
name|ret
init|=
operator|new
name|ArrayList
argument_list|<
name|TreeItem
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Clazz
name|clazz
range|:
name|subpart
operator|.
name|getClasses
argument_list|()
control|)
block|{
if|if
condition|(
name|parent
operator|!=
literal|null
operator|&&
operator|!
name|parent
operator|.
name|equals
argument_list|(
name|clazz
operator|.
name|getParentId
argument_list|()
argument_list|)
condition|)
continue|continue;
name|TreeItem
name|clazzItem
init|=
operator|new
name|TreeItem
argument_list|(
operator|new
name|ClassSelection
argument_list|(
name|clazz
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|Subpart
name|child
range|:
name|subpart
operator|.
name|getConfig
argument_list|()
operator|.
name|getSubparts
argument_list|()
control|)
block|{
if|if
condition|(
name|subpart
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|child
operator|.
name|getParentId
argument_list|()
argument_list|)
condition|)
for|for
control|(
name|TreeItem
name|item
range|:
name|addClasses
argument_list|(
name|child
argument_list|,
name|clazz
operator|.
name|getId
argument_list|()
argument_list|)
control|)
name|clazzItem
operator|.
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
name|ret
operator|.
name|add
argument_list|(
name|clazzItem
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
specifier|private
name|void
name|typeChanged
parameter_list|()
block|{
name|String
name|val
init|=
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iStudentsLine
argument_list|,
literal|"individual"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseLine
argument_list|,
literal|"course"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iGroupLine
argument_list|,
literal|"group"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCurriculumLine
argument_list|,
literal|"curriculum"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
operator|&&
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iAreaLine
argument_list|,
literal|"curriculum"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
literal|1
operator|+
name|iAreaLine
argument_list|,
literal|"curriculum"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
literal|2
operator|+
name|iAreaLine
argument_list|,
literal|"curriculum"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"course"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
condition|)
block|{
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
literal|""
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|String
name|cid
init|=
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Course
name|course
range|:
name|iOffering
operator|.
name|getCourses
argument_list|()
control|)
block|{
if|if
condition|(
name|course
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|cid
argument_list|)
condition|)
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|course
operator|.
name|getLimit
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|course
operator|.
name|getLimit
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
literal|"individual"
operator|.
name|equals
argument_list|(
name|val
argument_list|)
condition|)
block|{
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|split
argument_list|(
literal|"\n"
argument_list|)
operator|.
name|length
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setReadOnly
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|areaChanged
parameter_list|()
block|{
name|iMajors
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iClassifications
operator|.
name|clear
argument_list|()
expr_stmt|;
name|String
name|id
init|=
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|id
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Area
name|c
init|=
name|iAreas
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|IdName
name|major
range|:
name|c
operator|.
name|getMajors
argument_list|()
control|)
block|{
name|iMajors
operator|.
name|addItem
argument_list|(
name|major
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" - "
operator|+
name|major
operator|.
name|getName
argument_list|()
argument_list|,
name|major
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|IdName
name|clasf
range|:
name|c
operator|.
name|getClassifications
argument_list|()
control|)
block|{
name|iClassifications
operator|.
name|addItem
argument_list|(
name|clasf
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" - "
operator|+
name|clasf
operator|.
name|getName
argument_list|()
argument_list|,
name|clasf
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|String
name|curId
init|=
operator|(
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
condition|?
literal|""
else|:
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
operator|!
name|curId
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Curriculum
name|c
init|=
name|iCurricula
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|curId
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|c
operator|.
name|getArea
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|curriculumChanged
parameter_list|()
block|{
name|String
name|id
init|=
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iCurriculum
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|id
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iMajors
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iClassifications
operator|.
name|clear
argument_list|()
expr_stmt|;
name|Curriculum
name|c
init|=
name|iCurricula
operator|.
name|get
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|c
operator|.
name|getArea
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
block|{
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
name|areaChanged
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMajors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|String
name|majorId
init|=
name|iMajors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|boolean
name|hasMajor
init|=
literal|false
decl_stmt|;
for|for
control|(
name|IdName
name|m
range|:
name|c
operator|.
name|getMajors
argument_list|()
control|)
if|if
condition|(
name|m
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|majorId
argument_list|)
condition|)
block|{
name|hasMajor
operator|=
literal|true
expr_stmt|;
break|break;
block|}
name|iMajors
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
name|hasMajor
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iClassifications
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|String
name|clasfId
init|=
name|iClassifications
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|boolean
name|hasClasf
init|=
literal|false
decl_stmt|;
for|for
control|(
name|IdName
name|m
range|:
name|c
operator|.
name|getClassifications
argument_list|()
control|)
if|if
condition|(
name|m
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|clasfId
argument_list|)
condition|)
block|{
name|hasClasf
operator|=
literal|true
expr_stmt|;
break|break;
block|}
name|iClassifications
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
name|hasClasf
argument_list|)
expr_stmt|;
block|}
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|c
operator|.
name|getLimit
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|c
operator|.
name|getLimit
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|populate
parameter_list|()
block|{
if|if
condition|(
name|iReservation
operator|==
literal|null
condition|)
return|return;
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|setValue
argument_list|(
name|iReservation
operator|.
name|getLimit
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|iReservation
operator|.
name|getLimit
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iReservation
operator|.
name|getExpirationDate
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iExpirationDate
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iExpirationDate
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|sDF
operator|.
name|format
argument_list|(
name|iReservation
operator|.
name|getExpirationDate
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Clazz
name|c
range|:
name|iReservation
operator|.
name|getClasses
argument_list|()
control|)
block|{
name|ClassSelection
name|s
init|=
name|iClasses
operator|.
name|get
argument_list|(
name|c
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|s
operator|.
name|setValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|s
operator|.
name|propagateUp
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|s
operator|.
name|propagateDown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|Config
name|c
range|:
name|iReservation
operator|.
name|getConfigs
argument_list|()
control|)
block|{
name|ConfigSelection
name|s
init|=
name|iConfigs
operator|.
name|get
argument_list|(
name|c
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|s
operator|!=
literal|null
condition|)
block|{
name|s
operator|.
name|setValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|s
operator|.
name|propagate
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iStructure
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
name|openNodes
argument_list|(
name|iStructure
operator|.
name|getItem
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|iReservation
operator|instanceof
name|ReservationInterface
operator|.
name|IndividualReservation
condition|)
block|{
name|select
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
argument_list|,
literal|"individual"
argument_list|)
expr_stmt|;
name|String
name|students
init|=
literal|""
decl_stmt|;
for|for
control|(
name|IdName
name|student
range|:
operator|(
operator|(
name|ReservationInterface
operator|.
name|IndividualReservation
operator|)
name|iReservation
operator|)
operator|.
name|getStudents
argument_list|()
control|)
name|students
operator|+=
operator|(
name|students
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|"\n"
operator|)
operator|+
name|student
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" "
operator|+
name|student
operator|.
name|getName
argument_list|()
expr_stmt|;
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|students
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iReservation
operator|instanceof
name|ReservationInterface
operator|.
name|GroupReservation
condition|)
block|{
name|select
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
argument_list|,
literal|"group"
argument_list|)
expr_stmt|;
name|select
argument_list|(
name|iGroup
operator|.
name|getWidget
argument_list|()
argument_list|,
operator|(
operator|(
name|ReservationInterface
operator|.
name|GroupReservation
operator|)
name|iReservation
operator|)
operator|.
name|getGroup
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iReservation
operator|instanceof
name|ReservationInterface
operator|.
name|CourseReservation
condition|)
block|{
name|select
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
argument_list|,
literal|"course"
argument_list|)
expr_stmt|;
name|select
argument_list|(
name|iCourse
operator|.
name|getWidget
argument_list|()
argument_list|,
operator|(
operator|(
name|ReservationInterface
operator|.
name|CourseReservation
operator|)
name|iReservation
operator|)
operator|.
name|getCourse
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iReservation
operator|instanceof
name|ReservationInterface
operator|.
name|CurriculumReservation
condition|)
block|{
name|select
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
argument_list|,
literal|"curriculum"
argument_list|)
expr_stmt|;
name|Area
name|curriculum
init|=
operator|(
operator|(
name|ReservationInterface
operator|.
name|CurriculumReservation
operator|)
name|iReservation
operator|)
operator|.
name|getCurriculum
argument_list|()
decl_stmt|;
name|select
argument_list|(
name|iArea
operator|.
name|getWidget
argument_list|()
argument_list|,
name|curriculum
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|areaChanged
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMajors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Long
name|id
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iMajors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|boolean
name|selected
init|=
literal|false
decl_stmt|;
for|for
control|(
name|IdName
name|mj
range|:
name|curriculum
operator|.
name|getMajors
argument_list|()
control|)
if|if
condition|(
name|mj
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
name|selected
operator|=
literal|true
expr_stmt|;
name|iMajors
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
name|selected
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iClassifications
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Long
name|id
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iClassifications
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|boolean
name|selected
init|=
literal|false
decl_stmt|;
for|for
control|(
name|IdName
name|clasf
range|:
name|curriculum
operator|.
name|getClassifications
argument_list|()
control|)
if|if
condition|(
name|clasf
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
name|selected
operator|=
literal|true
expr_stmt|;
name|iClassifications
operator|.
name|setItemSelected
argument_list|(
name|i
argument_list|,
name|selected
argument_list|)
expr_stmt|;
block|}
block|}
name|typeChanged
argument_list|()
expr_stmt|;
name|iType
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iType
operator|.
name|setText
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemText
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|computeLimit
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|openNodes
parameter_list|(
name|TreeItem
name|item
parameter_list|)
block|{
name|CheckBox
name|ch
init|=
operator|(
name|CheckBox
operator|)
name|item
operator|.
name|getWidget
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|ch
operator|.
name|getValue
argument_list|()
operator|||
name|ch
operator|.
name|isEnabled
argument_list|()
condition|)
return|return;
name|item
operator|.
name|setState
argument_list|(
literal|true
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|item
operator|.
name|getChildCount
argument_list|()
condition|;
name|i
operator|++
control|)
name|openNodes
argument_list|(
name|item
operator|.
name|getChild
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|select
parameter_list|(
name|ListBox
name|l
parameter_list|,
name|String
name|value
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|l
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|l
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|value
argument_list|)
condition|)
block|{
name|l
operator|.
name|setSelectedIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
specifier|public
name|ReservationInterface
name|validate
parameter_list|()
block|{
name|boolean
name|ok
init|=
literal|true
decl_stmt|;
name|String
name|type
init|=
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|type
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iType
operator|.
name|setErrorHint
argument_list|(
literal|"Reservation type must be selected."
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|iType
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
name|ReservationInterface
name|r
decl_stmt|;
if|if
condition|(
literal|"individual"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|r
operator|=
operator|new
name|ReservationInterface
operator|.
name|IndividualReservation
argument_list|()
expr_stmt|;
if|if
condition|(
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iStudents
operator|.
name|setErrorHint
argument_list|(
literal|"No students provided."
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|RegExp
name|rx
init|=
name|RegExp
operator|.
name|compile
argument_list|(
literal|"^([a-zA-Z0-9]+)[ ,;\\|]?(.*)$"
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|student
range|:
name|iStudents
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|split
argument_list|(
literal|"\\n"
argument_list|)
control|)
block|{
if|if
condition|(
name|student
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
continue|continue;
try|try
block|{
name|MatchResult
name|m
init|=
name|rx
operator|.
name|exec
argument_list|(
name|student
operator|.
name|trim
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|m
operator|==
literal|null
condition|)
block|{
name|iStudents
operator|.
name|setErrorHint
argument_list|(
literal|"Line '"
operator|+
name|student
operator|+
literal|"' is not a valid student record."
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
break|break;
block|}
name|IdName
name|s
init|=
operator|new
name|IdName
argument_list|()
decl_stmt|;
name|s
operator|.
name|setAbbv
argument_list|(
name|m
operator|.
name|getGroup
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|.
name|setName
argument_list|(
name|m
operator|.
name|getGroupCount
argument_list|()
operator|<=
literal|2
condition|?
literal|""
else|:
name|m
operator|.
name|getGroup
argument_list|(
literal|2
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|ReservationInterface
operator|.
name|IndividualReservation
operator|)
name|r
operator|)
operator|.
name|getStudents
argument_list|()
operator|.
name|add
argument_list|(
name|s
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|ReservationInterface
operator|.
name|IndividualReservation
operator|)
name|r
operator|)
operator|.
name|getStudents
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iStudents
operator|.
name|setErrorHint
argument_list|(
literal|"No students provided."
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|iStudents
operator|.
name|setErrorHint
argument_list|(
literal|"Line '"
operator|+
name|student
operator|+
literal|"' is not a valid student record ("
operator|+
name|e
operator|.
name|getMessage
argument_list|()
operator|+
literal|")."
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
block|}
block|}
block|}
if|else if
condition|(
literal|"group"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|r
operator|=
operator|new
name|ReservationInterface
operator|.
name|GroupReservation
argument_list|()
expr_stmt|;
name|String
name|gid
init|=
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|gid
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iGroup
operator|.
name|setErrorHint
argument_list|(
literal|"A student group must be provided."
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|IdName
name|group
init|=
operator|new
name|IdName
argument_list|()
decl_stmt|;
name|group
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|gid
argument_list|)
argument_list|)
expr_stmt|;
name|group
operator|.
name|setName
argument_list|(
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemText
argument_list|(
name|iGroup
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
operator|(
operator|(
name|ReservationInterface
operator|.
name|GroupReservation
operator|)
name|r
operator|)
operator|.
name|setGroup
argument_list|(
name|group
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
literal|"course"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|r
operator|=
operator|new
name|ReservationInterface
operator|.
name|CourseReservation
argument_list|()
expr_stmt|;
name|String
name|cid
init|=
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cid
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iCourse
operator|.
name|setErrorHint
argument_list|(
literal|"A course must be provided."
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|Course
name|course
init|=
operator|new
name|Course
argument_list|()
decl_stmt|;
name|course
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|cid
argument_list|)
argument_list|)
expr_stmt|;
name|course
operator|.
name|setName
argument_list|(
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemText
argument_list|(
name|iCourse
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
operator|(
operator|(
name|ReservationInterface
operator|.
name|CourseReservation
operator|)
name|r
operator|)
operator|.
name|setCourse
argument_list|(
name|course
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
literal|"curriculum"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|r
operator|=
operator|new
name|ReservationInterface
operator|.
name|CurriculumReservation
argument_list|()
expr_stmt|;
name|String
name|aid
init|=
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|aid
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iArea
operator|.
name|setErrorHint
argument_list|(
literal|"An academic area must be provided."
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|Area
name|curriculum
init|=
operator|new
name|Area
argument_list|()
decl_stmt|;
name|curriculum
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|aid
argument_list|)
argument_list|)
expr_stmt|;
name|curriculum
operator|.
name|setName
argument_list|(
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemText
argument_list|(
name|iArea
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iMajors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iMajors
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
block|{
name|IdName
name|mj
init|=
operator|new
name|IdName
argument_list|()
decl_stmt|;
name|mj
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iMajors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|mj
operator|.
name|setName
argument_list|(
name|iMajors
operator|.
name|getItemText
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|curriculum
operator|.
name|getMajors
argument_list|()
operator|.
name|add
argument_list|(
name|mj
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iClassifications
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iClassifications
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
block|{
name|IdName
name|clasf
init|=
operator|new
name|IdName
argument_list|()
decl_stmt|;
name|clasf
operator|.
name|setId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iClassifications
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|clasf
operator|.
name|setName
argument_list|(
name|iClassifications
operator|.
name|getItemText
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|curriculum
operator|.
name|getClassifications
argument_list|()
operator|.
name|add
argument_list|(
name|clasf
argument_list|)
expr_stmt|;
block|}
block|}
operator|(
operator|(
name|ReservationInterface
operator|.
name|CurriculumReservation
operator|)
name|r
operator|)
operator|.
name|setCurriculum
argument_list|(
name|curriculum
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|iType
operator|.
name|setErrorHint
argument_list|(
literal|"Reservation type not supported."
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
if|if
condition|(
operator|!
name|iExpirationDate
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
try|try
block|{
name|r
operator|.
name|setExpirationDate
argument_list|(
name|sDF
operator|.
name|parse
argument_list|(
name|iExpirationDate
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iType
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|iExpirationDate
operator|.
name|setErrorHint
argument_list|(
literal|"Expiration date is not valid."
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
literal|"individual"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
condition|)
block|{
if|if
condition|(
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|r
operator|.
name|setLimit
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
try|try
block|{
name|r
operator|.
name|setLimit
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|iLimit
operator|.
name|setErrorHint
argument_list|(
literal|"Reservation limit is not valid."
argument_list|)
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|iReservation
operator|!=
literal|null
condition|)
name|r
operator|.
name|setId
argument_list|(
name|iReservation
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|Offering
name|o
init|=
operator|new
name|Offering
argument_list|()
decl_stmt|;
name|o
operator|.
name|setId
argument_list|(
name|iOffering
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|.
name|setName
argument_list|(
name|iOffering
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|setOffering
argument_list|(
name|o
argument_list|)
expr_stmt|;
for|for
control|(
name|ConfigSelection
name|config
range|:
name|iConfigs
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|config
operator|.
name|getValue
argument_list|()
operator|&&
name|config
operator|.
name|isEnabled
argument_list|()
condition|)
block|{
name|Config
name|c
init|=
operator|new
name|Config
argument_list|()
decl_stmt|;
name|c
operator|.
name|setId
argument_list|(
name|config
operator|.
name|getConfig
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|c
operator|.
name|setName
argument_list|(
name|config
operator|.
name|getConfig
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|getConfigs
argument_list|()
operator|.
name|add
argument_list|(
name|c
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|ClassSelection
name|clazz
range|:
name|iClasses
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|clazz
operator|.
name|getValue
argument_list|()
operator|&&
name|clazz
operator|.
name|isEnabled
argument_list|()
condition|)
block|{
name|Clazz
name|c
init|=
operator|new
name|Clazz
argument_list|()
decl_stmt|;
name|c
operator|.
name|setId
argument_list|(
name|clazz
operator|.
name|getClazz
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|c
operator|.
name|setName
argument_list|(
name|clazz
operator|.
name|getClazz
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|getClasses
argument_list|()
operator|.
name|add
argument_list|(
name|c
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|(
name|ok
condition|?
name|r
else|:
literal|null
operator|)
return|;
block|}
specifier|private
class|class
name|ClassSelection
extends|extends
name|CheckBox
implements|implements
name|ClickHandler
block|{
specifier|private
name|Clazz
name|iClazz
decl_stmt|;
specifier|public
name|ClassSelection
parameter_list|(
name|Clazz
name|clazz
parameter_list|)
block|{
name|setStyleName
argument_list|(
literal|"unitime-LabelInsteadEdit"
argument_list|)
expr_stmt|;
name|setText
argument_list|(
name|clazz
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" ("
operator|+
name|clazz
operator|.
name|getLimit
argument_list|()
operator|+
literal|")"
argument_list|)
expr_stmt|;
name|iClazz
operator|=
name|clazz
expr_stmt|;
name|addClickHandler
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|iClasses
operator|.
name|put
argument_list|(
name|clazz
operator|.
name|getId
argument_list|()
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Clazz
name|getClazz
parameter_list|()
block|{
return|return
name|iClazz
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|propagateUp
argument_list|(
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|propagateDown
argument_list|(
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|computeLimit
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|propagateUp
parameter_list|(
name|boolean
name|selected
parameter_list|)
block|{
if|if
condition|(
name|getClazz
argument_list|()
operator|.
name|getParentId
argument_list|()
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|selected
condition|)
block|{
for|for
control|(
name|Subpart
name|subpart
range|:
name|getClazz
argument_list|()
operator|.
name|getSubpart
argument_list|()
operator|.
name|getConfig
argument_list|()
operator|.
name|getSubparts
argument_list|()
control|)
block|{
if|if
condition|(
name|subpart
operator|.
name|getParentId
argument_list|()
operator|!=
literal|null
condition|)
continue|continue;
for|for
control|(
name|Clazz
name|c
range|:
name|subpart
operator|.
name|getClasses
argument_list|()
control|)
block|{
if|if
condition|(
name|iClasses
operator|.
name|get
argument_list|(
name|c
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|getValue
argument_list|()
condition|)
return|return;
block|}
block|}
block|}
name|ConfigSelection
name|config
init|=
name|iConfigs
operator|.
name|get
argument_list|(
name|getClazz
argument_list|()
operator|.
name|getSubpart
argument_list|()
operator|.
name|getConfig
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|config
operator|!=
literal|null
condition|)
block|{
name|config
operator|.
name|setValue
argument_list|(
name|selected
argument_list|)
expr_stmt|;
name|config
operator|.
name|setEnabled
argument_list|(
operator|!
name|selected
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|ClassSelection
name|parent
init|=
name|iClasses
operator|.
name|get
argument_list|(
name|getClazz
argument_list|()
operator|.
name|getParentId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|selected
condition|)
block|{
for|for
control|(
name|Clazz
name|c
range|:
name|getClazz
argument_list|()
operator|.
name|getSubpart
argument_list|()
operator|.
name|getClasses
argument_list|()
control|)
block|{
if|if
condition|(
name|parent
operator|.
name|getClazz
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|c
operator|.
name|getParentId
argument_list|()
argument_list|)
condition|)
block|{
if|if
condition|(
name|iClasses
operator|.
name|get
argument_list|(
name|c
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|getValue
argument_list|()
condition|)
return|return;
block|}
block|}
block|}
name|parent
operator|.
name|setValue
argument_list|(
name|selected
argument_list|)
expr_stmt|;
name|parent
operator|.
name|setEnabled
argument_list|(
operator|!
name|selected
argument_list|)
expr_stmt|;
name|parent
operator|.
name|propagateUp
argument_list|(
name|selected
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|propagateDown
parameter_list|(
name|boolean
name|selected
parameter_list|)
block|{
for|for
control|(
name|Subpart
name|subpart
range|:
name|getClazz
argument_list|()
operator|.
name|getSubpart
argument_list|()
operator|.
name|getConfig
argument_list|()
operator|.
name|getSubparts
argument_list|()
control|)
block|{
if|if
condition|(
name|getClazz
argument_list|()
operator|.
name|getSubpart
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|subpart
operator|.
name|getParentId
argument_list|()
argument_list|)
condition|)
block|{
for|for
control|(
name|Clazz
name|clazz
range|:
name|subpart
operator|.
name|getClasses
argument_list|()
control|)
block|{
if|if
condition|(
name|getClazz
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|clazz
operator|.
name|getParentId
argument_list|()
argument_list|)
condition|)
block|{
name|ClassSelection
name|child
init|=
name|iClasses
operator|.
name|get
argument_list|(
name|clazz
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|child
operator|.
name|setValue
argument_list|(
name|selected
argument_list|)
expr_stmt|;
name|child
operator|.
name|setEnabled
argument_list|(
operator|!
name|selected
argument_list|)
expr_stmt|;
name|child
operator|.
name|propagateDown
argument_list|(
name|selected
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
block|}
specifier|private
class|class
name|ConfigSelection
extends|extends
name|CheckBox
implements|implements
name|ClickHandler
block|{
specifier|private
name|Config
name|iConfig
decl_stmt|;
specifier|public
name|ConfigSelection
parameter_list|(
name|Config
name|config
parameter_list|)
block|{
name|setStyleName
argument_list|(
literal|"unitime-LabelInsteadEdit"
argument_list|)
expr_stmt|;
name|setText
argument_list|(
literal|"Configuration "
operator|+
name|config
operator|.
name|getAbbv
argument_list|()
operator|+
operator|(
name|config
operator|.
name|getLimit
argument_list|()
operator|==
literal|null
condition|?
literal|" (unlimited)"
else|:
literal|" ("
operator|+
name|config
operator|.
name|getLimit
argument_list|()
operator|+
literal|")"
operator|)
argument_list|)
expr_stmt|;
name|iConfig
operator|=
name|config
expr_stmt|;
name|iConfigs
operator|.
name|put
argument_list|(
name|config
operator|.
name|getId
argument_list|()
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addClickHandler
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Config
name|getConfig
parameter_list|()
block|{
return|return
name|iConfig
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|propagate
argument_list|(
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|computeLimit
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|propagate
parameter_list|(
name|boolean
name|selected
parameter_list|)
block|{
for|for
control|(
name|Subpart
name|subpart
range|:
name|getConfig
argument_list|()
operator|.
name|getSubparts
argument_list|()
control|)
block|{
for|for
control|(
name|Clazz
name|clazz
range|:
name|subpart
operator|.
name|getClasses
argument_list|()
control|)
block|{
name|ClassSelection
name|child
init|=
name|iClasses
operator|.
name|get
argument_list|(
name|clazz
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|child
operator|.
name|setValue
argument_list|(
name|selected
argument_list|)
expr_stmt|;
name|child
operator|.
name|setEnabled
argument_list|(
operator|!
name|selected
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|private
name|void
name|computeLimit
parameter_list|()
block|{
if|if
condition|(
name|iOffering
operator|==
literal|null
condition|)
block|{
name|iLimit
operator|.
name|clearHint
argument_list|()
expr_stmt|;
return|return;
block|}
comment|// if (iLimit.isReadOnly()) return;
name|int
name|total
init|=
literal|0
decl_stmt|,
name|limit
init|=
operator|-
literal|1
decl_stmt|;
name|boolean
name|totalUnlimited
init|=
literal|false
decl_stmt|,
name|unlimited
init|=
literal|false
decl_stmt|;
for|for
control|(
name|Config
name|config
range|:
name|iOffering
operator|.
name|getConfigs
argument_list|()
control|)
block|{
for|for
control|(
name|Subpart
name|subpart
range|:
name|config
operator|.
name|getSubparts
argument_list|()
control|)
block|{
name|int
name|lim
init|=
literal|0
decl_stmt|;
name|boolean
name|selected
init|=
literal|false
decl_stmt|;
for|for
control|(
name|Clazz
name|clazz
range|:
name|subpart
operator|.
name|getClasses
argument_list|()
control|)
block|{
name|ClassSelection
name|child
init|=
name|iClasses
operator|.
name|get
argument_list|(
name|clazz
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|child
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|lim
operator|+=
name|clazz
operator|.
name|getLimit
argument_list|()
expr_stmt|;
name|selected
operator|=
literal|true
expr_stmt|;
block|}
block|}
if|if
condition|(
name|selected
operator|&&
operator|(
name|limit
operator|<
literal|0
operator|||
name|limit
operator|>
name|lim
operator|)
condition|)
block|{
name|limit
operator|=
name|lim
expr_stmt|;
block|}
block|}
block|}
name|int
name|lim
init|=
literal|0
decl_stmt|;
name|boolean
name|selected
init|=
literal|false
decl_stmt|;
for|for
control|(
name|Config
name|config
range|:
name|iOffering
operator|.
name|getConfigs
argument_list|()
control|)
block|{
if|if
condition|(
name|config
operator|.
name|getLimit
argument_list|()
operator|==
literal|null
condition|)
name|totalUnlimited
operator|=
literal|true
expr_stmt|;
else|else
name|total
operator|+=
name|config
operator|.
name|getLimit
argument_list|()
expr_stmt|;
name|ConfigSelection
name|cfg
init|=
name|iConfigs
operator|.
name|get
argument_list|(
name|config
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cfg
operator|!=
literal|null
operator|&&
name|cfg
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|selected
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|cfg
operator|.
name|getConfig
argument_list|()
operator|.
name|getLimit
argument_list|()
operator|==
literal|null
condition|)
name|unlimited
operator|=
literal|true
expr_stmt|;
else|else
name|lim
operator|+=
name|cfg
operator|.
name|getConfig
argument_list|()
operator|.
name|getLimit
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|selected
operator|&&
operator|(
name|limit
operator|<
literal|0
operator|||
name|limit
operator|>
name|lim
operator|)
condition|)
block|{
name|limit
operator|=
name|lim
expr_stmt|;
block|}
name|int
name|entered
init|=
name|Integer
operator|.
name|MAX_VALUE
decl_stmt|;
try|try
block|{
name|entered
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|iLimit
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
block|}
if|if
condition|(
name|limit
operator|>=
literal|0
operator|||
name|unlimited
condition|)
block|{
if|if
condition|(
name|unlimited
operator|||
name|limit
operator|>=
name|entered
condition|)
name|iLimit
operator|.
name|clearHint
argument_list|()
expr_stmt|;
else|else
name|iLimit
operator|.
name|setHint
argument_list|(
operator|(
name|limit
operator|==
literal|0
condition|?
literal|"No space"
else|:
name|limit
operator|==
literal|1
condition|?
literal|"Only 1 space"
else|:
literal|"Only "
operator|+
name|limit
operator|+
literal|" spaces"
operator|)
operator|+
literal|" selected"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
operator|!
name|iOffering
operator|.
name|isOffered
argument_list|()
condition|)
name|iLimit
operator|.
name|setHint
argument_list|(
name|iOffering
operator|.
name|getAbbv
argument_list|()
operator|+
literal|" is not offered"
argument_list|)
expr_stmt|;
if|else if
condition|(
name|totalUnlimited
operator|||
name|total
operator|>=
name|entered
operator|||
name|entered
operator|==
name|Integer
operator|.
name|MAX_VALUE
condition|)
name|iLimit
operator|.
name|clearHint
argument_list|()
expr_stmt|;
else|else
name|iLimit
operator|.
name|setHint
argument_list|(
operator|(
name|total
operator|==
literal|0
condition|?
literal|"No space"
else|:
name|total
operator|==
literal|1
condition|?
literal|"Only 1 space"
else|:
literal|"Only "
operator|+
name|total
operator|+
literal|" spaces"
operator|)
operator|+
literal|" in "
operator|+
name|iOffering
operator|.
name|getAbbv
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
class|class
name|DateBox
extends|extends
name|Composite
block|{
specifier|private
specifier|static
name|int
name|sIdCounter
init|=
literal|0
decl_stmt|;
specifier|private
name|String
name|iId
decl_stmt|;
specifier|private
name|UniTimeTextBox
name|iText
decl_stmt|;
specifier|private
name|Image
name|iImage
decl_stmt|;
specifier|public
name|DateBox
parameter_list|()
block|{
name|iId
operator|=
literal|"date_box_"
operator|+
operator|(
name|sIdCounter
operator|++
operator|)
expr_stmt|;
name|HorizontalPanel
name|hp
init|=
operator|new
name|HorizontalPanel
argument_list|()
decl_stmt|;
name|hp
operator|.
name|setSpacing
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iText
operator|=
operator|new
name|UniTimeTextBox
argument_list|()
expr_stmt|;
name|iImage
operator|=
operator|new
name|Image
argument_list|()
expr_stmt|;
name|iImage
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setMarginLeft
argument_list|(
literal|2
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|iImage
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setMarginTop
argument_list|(
literal|4
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|iText
operator|.
name|getElement
argument_list|()
operator|.
name|setId
argument_list|(
name|iId
argument_list|)
expr_stmt|;
name|iText
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setMarginLeft
argument_list|(
operator|-
literal|1
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|iImage
operator|.
name|getElement
argument_list|()
operator|.
name|setId
argument_list|(
literal|"show_"
operator|+
name|iId
argument_list|)
expr_stmt|;
name|iImage
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setCursor
argument_list|(
name|Cursor
operator|.
name|POINTER
argument_list|)
expr_stmt|;
name|iImage
operator|.
name|setUrl
argument_list|(
literal|"scripts/jscalendar/calendar_1.gif"
argument_list|)
expr_stmt|;
name|hp
operator|.
name|add
argument_list|(
name|iText
argument_list|)
expr_stmt|;
name|hp
operator|.
name|add
argument_list|(
name|iImage
argument_list|)
expr_stmt|;
name|initWidget
argument_list|(
name|hp
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getText
parameter_list|()
block|{
return|return
name|iText
operator|.
name|getText
argument_list|()
return|;
block|}
specifier|public
name|void
name|setText
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|iText
operator|.
name|setText
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TextBox
name|getTextBox
parameter_list|()
block|{
return|return
name|iText
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|onAttach
parameter_list|()
block|{
name|super
operator|.
name|onAttach
argument_list|()
expr_stmt|;
name|setup
argument_list|(
name|iId
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|native
name|void
name|setup
parameter_list|(
name|String
name|id
parameter_list|)
comment|/*-{ 			$wnd.Calendar.setup( { 				cache      : true, 				electric   : false, 				inputField : id, 				ifFormat   : "%m/%d/%Y", 				showOthers : true, 				button     : "show_" + id 			} );			 		}-*/
function_decl|;
block|}
specifier|public
specifier|static
class|class
name|EditFinishedEvent
block|{
specifier|private
name|Long
name|iReservationId
decl_stmt|;
specifier|public
name|EditFinishedEvent
parameter_list|(
name|Long
name|reservationId
parameter_list|)
block|{
name|iReservationId
operator|=
name|reservationId
expr_stmt|;
block|}
specifier|public
name|Long
name|getReservationId
parameter_list|()
block|{
return|return
name|iReservationId
return|;
block|}
block|}
specifier|public
specifier|static
interface|interface
name|EditFinishedHandler
block|{
specifier|public
name|void
name|onBack
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
function_decl|;
specifier|public
name|void
name|onDelete
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
function_decl|;
specifier|public
name|void
name|onSave
parameter_list|(
name|EditFinishedEvent
name|evt
parameter_list|)
function_decl|;
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
function_decl|;
block|}
specifier|public
name|void
name|addEditFinishedHandler
parameter_list|(
name|EditFinishedHandler
name|h
parameter_list|)
block|{
name|iEditFinishedHandlers
operator|.
name|add
argument_list|(
name|h
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

