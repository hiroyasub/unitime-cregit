begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|solver
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|P
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|PreferenceInterface
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|PreferenceLegend
extends|extends
name|P
block|{
specifier|public
name|PreferenceLegend
parameter_list|(
name|List
argument_list|<
name|?
extends|extends
name|PreferenceInterface
argument_list|>
name|preferences
parameter_list|)
block|{
name|super
argument_list|(
literal|"unitime-PreferenceLegend"
argument_list|)
expr_stmt|;
for|for
control|(
name|PreferenceInterface
name|pref
range|:
name|preferences
control|)
block|{
name|add
argument_list|(
operator|new
name|PreferenceCell
argument_list|(
name|pref
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|PreferenceCell
extends|extends
name|P
block|{
specifier|public
name|PreferenceCell
parameter_list|(
name|PreferenceInterface
name|pref
parameter_list|)
block|{
name|super
argument_list|(
literal|"legend-line"
argument_list|)
expr_stmt|;
name|P
name|box
init|=
operator|new
name|P
argument_list|(
literal|"box"
argument_list|)
decl_stmt|;
name|box
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setBackgroundColor
argument_list|(
name|pref
operator|.
name|getColor
argument_list|()
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|box
argument_list|)
expr_stmt|;
name|P
name|text
init|=
operator|new
name|P
argument_list|(
literal|"text"
argument_list|)
decl_stmt|;
name|text
operator|.
name|setText
argument_list|(
name|pref
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

