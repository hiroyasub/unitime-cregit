begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|solver
operator|.
name|suggestions
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
operator|.
name|UniTimeFilterBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|solver
operator|.
name|SolverCookie
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|FilterBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|TimeSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|FilterBox
operator|.
name|Chip
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|FilterBox
operator|.
name|Suggestion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|TimeSelector
operator|.
name|TimeUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SuggestionsInterface
operator|.
name|SuggestionsFilterRpcRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
operator|.
name|ScheduledCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Unit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|BlurEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|BlurHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyCodes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyUpEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyUpHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|TakesValue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextBox
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|SuggestionsFilter
extends|extends
name|UniTimeFilterBox
argument_list|<
name|SuggestionsFilterRpcRequest
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|GwtConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|Long
name|iClassId
init|=
literal|null
decl_stmt|;
specifier|private
name|TextBox
name|iMin
decl_stmt|,
name|iMax
decl_stmt|;
specifier|private
name|Chip
name|iLastSize
init|=
literal|null
decl_stmt|;
specifier|public
name|SuggestionsFilter
parameter_list|()
block|{
name|super
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|setShowSuggestionsOnFocus
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setDefaultValueProvider
argument_list|(
operator|new
name|TakesValue
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
specifier|final
name|String
name|value
parameter_list|)
block|{
name|SolverCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|setSuggestionsFilter
argument_list|(
name|value
operator|==
literal|null
condition|?
literal|""
else|:
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getValue
parameter_list|()
block|{
return|return
name|SolverCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|getSuggestionsFilter
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Chip
argument_list|>
name|modes
init|=
operator|new
name|ArrayList
argument_list|<
name|Chip
argument_list|>
argument_list|()
decl_stmt|;
name|modes
operator|.
name|add
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"mode"
argument_list|,
literal|"Suggestions"
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagMode
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|MESSAGES
operator|.
name|suggestionsSuggestions
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|modes
operator|.
name|add
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"mode"
argument_list|,
literal|"Placements"
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagMode
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|MESSAGES
operator|.
name|suggestionsPlacements
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|FilterBox
operator|.
name|StaticSimpleFilter
name|modeFilter
init|=
operator|new
name|FilterBox
operator|.
name|StaticSimpleFilter
argument_list|(
literal|"mode"
argument_list|,
name|MESSAGES
operator|.
name|tagMode
argument_list|()
argument_list|,
name|modes
argument_list|)
decl_stmt|;
name|modeFilter
operator|.
name|setMultipleSelection
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|addFilter
argument_list|(
name|modeFilter
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Chip
argument_list|>
name|flags
init|=
operator|new
name|ArrayList
argument_list|<
name|Chip
argument_list|>
argument_list|()
decl_stmt|;
name|flags
operator|.
name|add
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"flag"
argument_list|,
literal|"Same Room"
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagFlag
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|MESSAGES
operator|.
name|suggestionsSameRoom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|flags
operator|.
name|add
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"flag"
argument_list|,
literal|"Same Time"
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagFlag
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|MESSAGES
operator|.
name|suggestionsSameTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|flags
operator|.
name|add
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"flag"
argument_list|,
literal|"Allow Break Hard"
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagFlag
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|MESSAGES
operator|.
name|suggestionsAllowBreakHard
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|StaticSimpleFilter
argument_list|(
literal|"flag"
argument_list|,
name|MESSAGES
operator|.
name|tagFlag
argument_list|()
argument_list|,
name|flags
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|getSuggestions
parameter_list|(
name|List
argument_list|<
name|Chip
argument_list|>
name|chips
parameter_list|,
name|String
name|text
parameter_list|,
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|Suggestion
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
try|try
block|{
name|List
argument_list|<
name|Suggestion
argument_list|>
name|suggestions
init|=
operator|new
name|ArrayList
argument_list|<
name|Suggestion
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|text
operator|.
name|startsWith
argument_list|(
literal|"D"
argument_list|)
operator|||
name|text
operator|.
name|startsWith
argument_list|(
literal|"d"
argument_list|)
condition|)
block|{
name|Integer
name|value
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|text
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"depth"
argument_list|,
literal|"D"
operator|+
name|value
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagSuggestionsDepth
argument_list|()
argument_list|)
operator|.
name|withLabel
argument_list|(
name|value
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|getChip
argument_list|(
literal|"depth"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|text
operator|.
name|startsWith
argument_list|(
literal|"R"
argument_list|)
operator|||
name|text
operator|.
name|startsWith
argument_list|(
literal|"r"
argument_list|)
condition|)
block|{
name|Integer
name|value
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|text
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"results"
argument_list|,
literal|"R"
operator|+
name|value
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagSuggestionsResults
argument_list|()
argument_list|)
operator|.
name|withLabel
argument_list|(
name|value
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|getChip
argument_list|(
literal|"results"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|text
operator|.
name|startsWith
argument_list|(
literal|"T"
argument_list|)
operator|||
name|text
operator|.
name|startsWith
argument_list|(
literal|"t"
argument_list|)
condition|)
block|{
name|Integer
name|value
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|text
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"timeout"
argument_list|,
literal|"T"
operator|+
name|value
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagSuggestionsTimeLimit
argument_list|()
argument_list|)
operator|.
name|withLabel
argument_list|(
name|value
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|getChip
argument_list|(
literal|"timeout"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Integer
name|value
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|text
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|value
operator|<
literal|10
condition|)
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"depth"
argument_list|,
literal|"D"
operator|+
name|value
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagSuggestionsDepth
argument_list|()
argument_list|)
operator|.
name|withLabel
argument_list|(
name|value
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|getChip
argument_list|(
literal|"depth"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"timeout"
argument_list|,
literal|"T"
operator|+
name|value
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagSuggestionsTimeLimit
argument_list|()
argument_list|)
operator|.
name|withLabel
argument_list|(
name|value
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|getChip
argument_list|(
literal|"timeout"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"results"
argument_list|,
literal|"R"
operator|+
name|value
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagSuggestionsResults
argument_list|()
argument_list|)
operator|.
name|withLabel
argument_list|(
name|value
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|getChip
argument_list|(
literal|"results"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
name|suggestions
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|super
operator|.
name|getSuggestions
argument_list|(
name|chips
argument_list|,
name|text
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|StaticSimpleFilter
argument_list|(
literal|"date"
argument_list|,
name|MESSAGES
operator|.
name|tagDate
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|StaticSimpleFilter
argument_list|(
literal|"time"
argument_list|,
name|MESSAGES
operator|.
name|tagTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|StaticSimpleFilter
argument_list|(
literal|"room"
argument_list|,
name|MESSAGES
operator|.
name|tagRoom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|StaticSimpleFilter
argument_list|(
literal|"depth"
argument_list|,
name|MESSAGES
operator|.
name|tagSuggestionsDepth
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|StaticSimpleFilter
argument_list|(
literal|"timeout"
argument_list|,
name|MESSAGES
operator|.
name|tagSuggestionsTimeLimit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|StaticSimpleFilter
argument_list|(
literal|"results"
argument_list|,
name|MESSAGES
operator|.
name|tagSuggestionsResults
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Chip
argument_list|>
name|days
init|=
operator|new
name|ArrayList
argument_list|<
name|Chip
argument_list|>
argument_list|()
decl_stmt|;
name|days
operator|.
name|add
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"day"
argument_list|,
literal|"Monday"
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagDayOfWeek
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|days
operator|.
name|add
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"day"
argument_list|,
literal|"Tuesday"
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagDayOfWeek
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|days
operator|.
name|add
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"day"
argument_list|,
literal|"Wednesday"
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagDayOfWeek
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
index|[
literal|2
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|days
operator|.
name|add
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"day"
argument_list|,
literal|"Thursday"
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagDayOfWeek
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
index|[
literal|3
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|days
operator|.
name|add
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"day"
argument_list|,
literal|"Friday"
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagDayOfWeek
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|days
operator|.
name|add
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"day"
argument_list|,
literal|"Saturday"
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagDayOfWeek
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
index|[
literal|5
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|days
operator|.
name|add
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"day"
argument_list|,
literal|"Sunday"
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagDayOfWeek
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
index|[
literal|6
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|StaticSimpleFilter
argument_list|(
literal|"day"
argument_list|,
name|MESSAGES
operator|.
name|tagDayOfWeek
argument_list|()
argument_list|,
name|days
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|TimeSelector
name|st
init|=
operator|new
name|TimeSelector
argument_list|(
literal|null
argument_list|)
decl_stmt|;
specifier|final
name|TimeSelector
name|et
init|=
operator|new
name|TimeSelector
argument_list|(
name|st
argument_list|)
decl_stmt|;
name|st
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|st
operator|.
name|addStyleName
argument_list|(
literal|"unitime-TimeSelector"
argument_list|)
expr_stmt|;
name|et
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|et
operator|.
name|addStyleName
argument_list|(
literal|"unitime-TimeSelector"
argument_list|)
expr_stmt|;
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|CustomFilter
argument_list|(
literal|"time"
argument_list|,
name|MESSAGES
operator|.
name|tagTime
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|(
name|MESSAGES
operator|.
name|propAfter
argument_list|()
argument_list|)
argument_list|,
name|st
argument_list|,
operator|new
name|Label
argument_list|(
literal|" "
operator|+
name|MESSAGES
operator|.
name|propBefore
argument_list|()
argument_list|)
argument_list|,
name|et
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|getSuggestions
parameter_list|(
name|List
argument_list|<
name|Chip
argument_list|>
name|chips
parameter_list|,
name|String
name|text
parameter_list|,
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|Suggestion
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
name|List
argument_list|<
name|FilterBox
operator|.
name|Suggestion
argument_list|>
name|suggestions
init|=
operator|new
name|ArrayList
argument_list|<
name|FilterBox
operator|.
name|Suggestion
argument_list|>
argument_list|()
decl_stmt|;
name|Chip
name|chStart
init|=
literal|null
decl_stmt|,
name|chStop
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Chip
name|c
range|:
name|chips
control|)
block|{
if|if
condition|(
name|c
operator|.
name|getCommand
argument_list|()
operator|.
name|equals
argument_list|(
literal|"after"
argument_list|)
condition|)
name|chStart
operator|=
name|c
expr_stmt|;
if|if
condition|(
name|c
operator|.
name|getCommand
argument_list|()
operator|.
name|equals
argument_list|(
literal|"before"
argument_list|)
condition|)
name|chStop
operator|=
name|c
expr_stmt|;
block|}
name|Integer
name|start
init|=
name|TimeSelector
operator|.
name|TimeUtils
operator|.
name|parseTime
argument_list|(
name|CONSTANTS
argument_list|,
name|text
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Integer
name|stop
init|=
name|TimeSelector
operator|.
name|TimeUtils
operator|.
name|parseTime
argument_list|(
name|CONSTANTS
argument_list|,
name|text
argument_list|,
name|chStart
operator|==
literal|null
condition|?
literal|null
else|:
name|TimeSelector
operator|.
name|TimeUtils
operator|.
name|parseMilitary
argument_list|(
name|chStart
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|chStart
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|start
operator|!=
literal|null
condition|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|FilterBox
operator|.
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"after"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|start
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeAfter
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|start
argument_list|)
argument_list|)
argument_list|,
name|chStart
argument_list|)
argument_list|)
expr_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|FilterBox
operator|.
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"after"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|start
operator|+
literal|3
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeAfter
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|start
operator|+
literal|3
argument_list|)
argument_list|)
argument_list|,
name|chStart
argument_list|)
argument_list|)
expr_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|FilterBox
operator|.
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"after"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|start
operator|+
literal|6
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeAfter
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|start
operator|+
literal|6
argument_list|)
argument_list|)
argument_list|,
name|chStart
argument_list|)
argument_list|)
expr_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|FilterBox
operator|.
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"after"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|start
operator|+
literal|9
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeAfter
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|start
operator|+
literal|9
argument_list|)
argument_list|)
argument_list|,
name|chStart
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|stop
operator|!=
literal|null
condition|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|FilterBox
operator|.
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"before"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|stop
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeBefore
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|stop
argument_list|)
argument_list|)
argument_list|,
name|chStop
argument_list|)
argument_list|)
expr_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|FilterBox
operator|.
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"before"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|stop
operator|+
literal|3
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeBefore
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|stop
operator|+
literal|3
argument_list|)
argument_list|)
argument_list|,
name|chStop
argument_list|)
argument_list|)
expr_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|FilterBox
operator|.
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"before"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|stop
operator|+
literal|6
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeBefore
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|stop
operator|+
literal|6
argument_list|)
argument_list|)
argument_list|,
name|chStop
argument_list|)
argument_list|)
expr_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|FilterBox
operator|.
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"before"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|stop
operator|+
literal|9
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeBefore
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|stop
operator|+
literal|9
argument_list|)
argument_list|)
argument_list|,
name|chStop
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|stop
operator|!=
literal|null
condition|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|FilterBox
operator|.
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"before"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|stop
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeBefore
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|stop
argument_list|)
argument_list|)
argument_list|,
name|chStop
argument_list|)
argument_list|)
expr_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|FilterBox
operator|.
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"before"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|stop
operator|+
literal|3
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeBefore
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|stop
operator|+
literal|3
argument_list|)
argument_list|)
argument_list|,
name|chStop
argument_list|)
argument_list|)
expr_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|FilterBox
operator|.
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"before"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|stop
operator|+
literal|6
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeBefore
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|stop
operator|+
literal|6
argument_list|)
argument_list|)
argument_list|,
name|chStop
argument_list|)
argument_list|)
expr_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|FilterBox
operator|.
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"before"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|stop
operator|+
literal|9
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeBefore
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|stop
operator|+
literal|9
argument_list|)
argument_list|)
argument_list|,
name|chStop
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|start
operator|!=
literal|null
condition|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|FilterBox
operator|.
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"after"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|start
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeAfter
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|start
argument_list|)
argument_list|)
argument_list|,
name|chStart
argument_list|)
argument_list|)
expr_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|FilterBox
operator|.
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"after"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|start
operator|+
literal|3
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeAfter
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|start
operator|+
literal|3
argument_list|)
argument_list|)
argument_list|,
name|chStart
argument_list|)
argument_list|)
expr_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|FilterBox
operator|.
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"after"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|start
operator|+
literal|6
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeAfter
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|start
operator|+
literal|6
argument_list|)
argument_list|)
argument_list|,
name|chStart
argument_list|)
argument_list|)
expr_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|FilterBox
operator|.
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"after"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|start
operator|+
literal|9
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeAfter
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|start
operator|+
literal|9
argument_list|)
argument_list|)
argument_list|,
name|chStart
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
name|suggestions
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|st
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Integer
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Integer
argument_list|>
name|event
parameter_list|)
block|{
name|Chip
name|ch
init|=
name|getChip
argument_list|(
literal|"after"
argument_list|)
decl_stmt|;
name|Integer
name|start
init|=
name|event
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|start
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|ch
operator|!=
literal|null
condition|)
name|removeChip
argument_list|(
name|ch
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|ch
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|ch
operator|.
name|getCommand
argument_list|()
operator|.
name|equals
argument_list|(
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|start
argument_list|)
argument_list|)
condition|)
return|return;
name|removeChip
argument_list|(
name|ch
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|addChip
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"after"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|start
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeAfter
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|start
argument_list|)
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|Chip
name|ch2
init|=
name|getChip
argument_list|(
literal|"before"
argument_list|)
decl_stmt|;
name|Integer
name|stop
init|=
name|et
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|stop
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|ch2
operator|!=
literal|null
condition|)
name|removeChip
argument_list|(
name|ch2
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|ch2
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|ch2
operator|.
name|getCommand
argument_list|()
operator|.
name|equals
argument_list|(
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|stop
argument_list|)
argument_list|)
condition|)
return|return;
name|removeChip
argument_list|(
name|ch2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|addChip
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"before"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|stop
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeBefore
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|stop
argument_list|)
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|et
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Integer
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Integer
argument_list|>
name|event
parameter_list|)
block|{
name|Chip
name|ch
init|=
name|getChip
argument_list|(
literal|"before"
argument_list|)
decl_stmt|;
name|Integer
name|stop
init|=
name|event
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|stop
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|ch
operator|!=
literal|null
condition|)
name|removeChip
argument_list|(
name|ch
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|ch
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|ch
operator|.
name|getCommand
argument_list|()
operator|.
name|equals
argument_list|(
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|stop
argument_list|)
argument_list|)
condition|)
return|return;
name|removeChip
argument_list|(
name|ch
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|addChip
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"before"
argument_list|,
name|TimeUtils
operator|.
name|slot2military
argument_list|(
name|stop
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagTimeBefore
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|stop
argument_list|)
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|StaticSimpleFilter
argument_list|(
literal|"after"
argument_list|,
name|MESSAGES
operator|.
name|tagTimeAfter
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|validate
parameter_list|(
name|String
name|text
parameter_list|,
name|AsyncCallback
argument_list|<
name|Chip
argument_list|>
name|callback
parameter_list|)
block|{
name|String
name|translatedValue
init|=
literal|null
decl_stmt|;
name|Integer
name|slot
init|=
name|TimeUtils
operator|.
name|parseTime2
argument_list|(
name|CONSTANTS
argument_list|,
name|text
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|slot
operator|!=
literal|null
condition|)
name|translatedValue
operator|=
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|slot
argument_list|)
expr_stmt|;
name|callback
operator|.
name|onSuccess
argument_list|(
operator|new
name|Chip
argument_list|(
name|getCommand
argument_list|()
argument_list|,
name|text
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|getLabel
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|translatedValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|StaticSimpleFilter
argument_list|(
literal|"before"
argument_list|,
name|MESSAGES
operator|.
name|tagTimeBefore
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|validate
parameter_list|(
name|String
name|text
parameter_list|,
name|AsyncCallback
argument_list|<
name|Chip
argument_list|>
name|callback
parameter_list|)
block|{
name|String
name|translatedValue
init|=
literal|null
decl_stmt|;
name|Integer
name|slot
init|=
name|TimeUtils
operator|.
name|parseTime2
argument_list|(
name|CONSTANTS
argument_list|,
name|text
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|slot
operator|!=
literal|null
condition|)
name|translatedValue
operator|=
name|TimeUtils
operator|.
name|slot2time
argument_list|(
name|slot
argument_list|)
expr_stmt|;
name|callback
operator|.
name|onSuccess
argument_list|(
operator|new
name|Chip
argument_list|(
name|getCommand
argument_list|()
argument_list|,
name|text
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|getLabel
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|translatedValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Label
name|l1
init|=
operator|new
name|Label
argument_list|(
name|MESSAGES
operator|.
name|propMin
argument_list|()
argument_list|)
decl_stmt|;
name|iMin
operator|=
operator|new
name|TextBox
argument_list|()
expr_stmt|;
name|iMin
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|iMin
operator|.
name|setMaxLength
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|iMin
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|50
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|Label
name|l2
init|=
operator|new
name|Label
argument_list|(
name|MESSAGES
operator|.
name|propMax
argument_list|()
argument_list|)
decl_stmt|;
name|l2
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setMarginLeft
argument_list|(
literal|10
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|iMax
operator|=
operator|new
name|TextBox
argument_list|()
expr_stmt|;
name|iMax
operator|.
name|setMaxLength
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|iMax
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|50
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|iMax
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|CustomFilter
argument_list|(
literal|"size"
argument_list|,
name|MESSAGES
operator|.
name|tagRoomSize
argument_list|()
argument_list|,
name|l1
argument_list|,
name|iMin
argument_list|,
name|l2
argument_list|,
name|iMax
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|getSuggestions
parameter_list|(
specifier|final
name|List
argument_list|<
name|Chip
argument_list|>
name|chips
parameter_list|,
specifier|final
name|String
name|text
parameter_list|,
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|FilterBox
operator|.
name|Suggestion
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
if|if
condition|(
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|List
argument_list|<
name|FilterBox
operator|.
name|Suggestion
argument_list|>
name|suggestions
init|=
operator|new
name|ArrayList
argument_list|<
name|FilterBox
operator|.
name|Suggestion
argument_list|>
argument_list|()
decl_stmt|;
name|Chip
name|old
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Chip
name|c
range|:
name|chips
control|)
block|{
if|if
condition|(
name|c
operator|.
name|getCommand
argument_list|()
operator|.
name|equals
argument_list|(
literal|"size"
argument_list|)
condition|)
block|{
name|old
operator|=
name|c
expr_stmt|;
break|break;
block|}
block|}
try|try
block|{
name|String
name|number
init|=
name|text
decl_stmt|;
name|String
name|prefix
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|text
operator|.
name|startsWith
argument_list|(
literal|"<="
argument_list|)
operator|||
name|text
operator|.
name|startsWith
argument_list|(
literal|">="
argument_list|)
condition|)
block|{
name|number
operator|=
name|number
operator|.
name|substring
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|prefix
operator|=
name|text
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|text
operator|.
name|startsWith
argument_list|(
literal|"<"
argument_list|)
operator|||
name|text
operator|.
name|startsWith
argument_list|(
literal|">"
argument_list|)
condition|)
block|{
name|number
operator|=
name|number
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|prefix
operator|=
name|text
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
name|Integer
operator|.
name|parseInt
argument_list|(
name|number
argument_list|)
expr_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"size"
argument_list|,
name|text
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagRoomSize
argument_list|()
argument_list|)
argument_list|,
name|old
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|prefix
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"size"
argument_list|,
literal|"<="
operator|+
name|text
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagRoomSize
argument_list|()
argument_list|)
argument_list|,
name|old
argument_list|)
argument_list|)
expr_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"size"
argument_list|,
literal|">="
operator|+
name|text
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagRoomSize
argument_list|()
argument_list|)
argument_list|,
name|old
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
if|if
condition|(
name|text
operator|.
name|contains
argument_list|(
literal|".."
argument_list|)
condition|)
block|{
try|try
block|{
name|String
name|first
init|=
name|text
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|text
operator|.
name|indexOf
argument_list|(
literal|'.'
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|second
init|=
name|text
operator|.
name|substring
argument_list|(
name|text
operator|.
name|indexOf
argument_list|(
literal|".."
argument_list|)
operator|+
literal|2
argument_list|)
decl_stmt|;
name|Integer
operator|.
name|parseInt
argument_list|(
name|first
argument_list|)
expr_stmt|;
name|Integer
operator|.
name|parseInt
argument_list|(
name|second
argument_list|)
expr_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|Suggestion
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"size"
argument_list|,
name|text
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagRoomSize
argument_list|()
argument_list|)
argument_list|,
name|old
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
name|suggestions
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iMin
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|sizeChanged
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iMax
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|sizeChanged
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iMin
operator|.
name|addKeyPressHandler
argument_list|(
operator|new
name|KeyPressHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
name|KeyPressEvent
name|event
parameter_list|)
block|{
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|sizeChanged
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iMax
operator|.
name|addKeyPressHandler
argument_list|(
operator|new
name|KeyPressHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
name|KeyPressEvent
name|event
parameter_list|)
block|{
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|sizeChanged
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iMin
operator|.
name|addKeyUpHandler
argument_list|(
operator|new
name|KeyUpHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyUp
parameter_list|(
name|KeyUpEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_BACKSPACE
condition|)
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|sizeChanged
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iMax
operator|.
name|addKeyUpHandler
argument_list|(
operator|new
name|KeyUpHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyUp
parameter_list|(
name|KeyUpEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_BACKSPACE
condition|)
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|sizeChanged
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iMin
operator|.
name|addBlurHandler
argument_list|(
operator|new
name|BlurHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onBlur
parameter_list|(
name|BlurEvent
name|event
parameter_list|)
block|{
name|sizeChanged
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iMax
operator|.
name|addBlurHandler
argument_list|(
operator|new
name|BlurHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onBlur
parameter_list|(
name|BlurEvent
name|event
parameter_list|)
block|{
name|sizeChanged
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|iLastSize
operator|=
name|getChip
argument_list|(
literal|"size"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|isFilterPopupShowing
argument_list|()
condition|)
block|{
name|Chip
name|size
init|=
name|getChip
argument_list|(
literal|"size"
argument_list|)
decl_stmt|;
if|if
condition|(
name|size
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|size
operator|.
name|getValue
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"<="
argument_list|)
condition|)
block|{
name|iMin
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iMax
operator|.
name|setText
argument_list|(
name|size
operator|.
name|getValue
argument_list|()
operator|.
name|substring
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|size
operator|.
name|getValue
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"<"
argument_list|)
condition|)
block|{
try|try
block|{
name|iMax
operator|.
name|setText
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|size
operator|.
name|getValue
argument_list|()
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|iMin
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
block|}
if|else if
condition|(
name|size
operator|.
name|getValue
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|">="
argument_list|)
condition|)
block|{
name|iMin
operator|.
name|setText
argument_list|(
name|size
operator|.
name|getValue
argument_list|()
operator|.
name|substring
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|iMax
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|size
operator|.
name|getValue
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|">"
argument_list|)
condition|)
block|{
try|try
block|{
name|iMin
operator|.
name|setText
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|size
operator|.
name|getValue
argument_list|()
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|iMax
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
block|}
if|else if
condition|(
name|size
operator|.
name|getValue
argument_list|()
operator|.
name|contains
argument_list|(
literal|".."
argument_list|)
condition|)
block|{
name|iMin
operator|.
name|setText
argument_list|(
name|size
operator|.
name|getValue
argument_list|()
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|size
operator|.
name|getValue
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|".."
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iMax
operator|.
name|setText
argument_list|(
name|size
operator|.
name|getValue
argument_list|()
operator|.
name|substring
argument_list|(
name|size
operator|.
name|getValue
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|".."
argument_list|)
operator|+
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iMin
operator|.
name|setText
argument_list|(
name|size
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|iMax
operator|.
name|setText
argument_list|(
name|size
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|iMin
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iMax
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
name|Chip
name|chStart
init|=
name|getChip
argument_list|(
literal|"after"
argument_list|)
decl_stmt|;
if|if
condition|(
name|chStart
operator|!=
literal|null
condition|)
name|st
operator|.
name|setValue
argument_list|(
name|TimeSelector
operator|.
name|TimeUtils
operator|.
name|parseMilitary
argument_list|(
name|chStart
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|st
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Chip
name|chStop
init|=
name|getChip
argument_list|(
literal|"before"
argument_list|)
decl_stmt|;
if|if
condition|(
name|chStop
operator|!=
literal|null
condition|)
name|et
operator|.
name|setValue
argument_list|(
name|TimeSelector
operator|.
name|TimeUtils
operator|.
name|parseMilitary
argument_list|(
name|chStop
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|et
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|sizeChanged
parameter_list|(
name|boolean
name|fireChange
parameter_list|)
block|{
name|Chip
name|oldChip
init|=
name|getChip
argument_list|(
literal|"size"
argument_list|)
decl_stmt|;
if|if
condition|(
name|iMin
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iMax
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|oldChip
operator|!=
literal|null
condition|)
block|{
name|removeChip
argument_list|(
name|oldChip
argument_list|,
name|fireChange
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|Chip
name|newChip
init|=
operator|new
name|Chip
argument_list|(
literal|"size"
argument_list|,
name|iMin
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
literal|"<="
operator|+
name|iMax
operator|.
name|getText
argument_list|()
else|:
name|iMax
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
literal|">="
operator|+
name|iMin
operator|.
name|getText
argument_list|()
else|:
name|iMin
operator|.
name|getText
argument_list|()
operator|+
literal|".."
operator|+
name|iMax
operator|.
name|getText
argument_list|()
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagRoomSize
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|newChip
operator|.
name|equals
argument_list|(
name|oldChip
argument_list|)
condition|)
block|{
if|if
condition|(
name|fireChange
operator|&&
operator|!
name|newChip
operator|.
name|equals
argument_list|(
name|iLastSize
argument_list|)
condition|)
name|fireValueChangeEvent
argument_list|()
expr_stmt|;
return|return;
block|}
else|else
block|{
if|if
condition|(
name|oldChip
operator|!=
literal|null
condition|)
name|removeChip
argument_list|(
name|oldChip
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|addChip
argument_list|(
name|newChip
argument_list|,
name|fireChange
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|setClassId
parameter_list|(
name|Long
name|classId
parameter_list|)
block|{
if|if
condition|(
name|iClassId
operator|==
literal|null
operator|||
operator|!
name|iClassId
operator|.
name|equals
argument_list|(
name|classId
argument_list|)
condition|)
block|{
name|iClassId
operator|=
name|classId
expr_stmt|;
name|init
argument_list|(
literal|false
argument_list|,
name|getAcademicSessionId
argument_list|()
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
if|if
condition|(
name|isFilterPopupShowing
argument_list|()
condition|)
name|showFilterPopup
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|SuggestionsFilterRpcRequest
name|createRpcRequest
parameter_list|()
block|{
name|SuggestionsFilterRpcRequest
name|request
init|=
operator|new
name|SuggestionsFilterRpcRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setClassId
argument_list|(
name|iClassId
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
block|}
end_class

end_unit

