begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|solver
operator|.
name|suggestions
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaButton
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|solver
operator|.
name|SolverCookie
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|FilterBox
operator|.
name|Chip
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|MouseClickListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|TableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SuggestionsInterface
operator|.
name|ComputeSuggestionsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SuggestionsInterface
operator|.
name|SelectedAssignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SuggestionsInterface
operator|.
name|SelectedAssignmentsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SuggestionsInterface
operator|.
name|Suggestion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SuggestionsInterface
operator|.
name|Suggestions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|SuggestionsWidget
extends|extends
name|SimpleForm
block|{
specifier|protected
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|SuggestionsPageContext
name|iContext
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iHeader
decl_stmt|,
name|iFooter
decl_stmt|;
specifier|private
name|ComputeSuggestionsRequest
name|iRequest
decl_stmt|;
specifier|private
name|SuggestionsTable
name|iTable
decl_stmt|;
specifier|private
name|int
name|iHeaderRow
init|=
literal|0
decl_stmt|,
name|iFooterRow
init|=
literal|0
decl_stmt|;
specifier|protected
specifier|static
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|boolean
name|iSuggestionsComputed
init|=
literal|false
decl_stmt|;
specifier|private
name|SuggestionsFilter
name|iFilter
init|=
literal|null
decl_stmt|;
specifier|private
name|AriaButton
name|iApply
init|=
literal|null
decl_stmt|;
specifier|public
name|SuggestionsWidget
parameter_list|(
name|SuggestionsPageContext
name|context
parameter_list|)
block|{
name|super
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|iContext
operator|=
name|context
expr_stmt|;
name|iHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|headerSuggestions
argument_list|()
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setCollapsible
argument_list|(
name|SolverCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|isShowSuggestions
argument_list|()
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addCollapsibleHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
name|SolverCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|setShowSuggestions
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|showSuggestions
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|hideSuggestions
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iFooter
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|()
expr_stmt|;
name|iFooter
operator|.
name|addButton
argument_list|(
literal|"deeper"
argument_list|,
name|MESSAGES
operator|.
name|buttonSearchDeeper
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iFilter
operator|.
name|removeChip
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"depth"
argument_list|,
literal|null
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|addChip
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"depth"
argument_list|,
literal|"D"
operator|+
operator|(
name|iRequest
operator|.
name|getDepth
argument_list|()
operator|+
literal|1
operator|)
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iRequest
operator|.
name|setDepth
argument_list|(
name|iRequest
operator|.
name|getDepth
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|computeSuggestions
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|addButton
argument_list|(
literal|"longer"
argument_list|,
name|MESSAGES
operator|.
name|buttonSearchLonger
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iFilter
operator|.
name|removeChip
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"timeout"
argument_list|,
literal|null
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|addChip
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"timeout"
argument_list|,
literal|"T"
operator|+
operator|(
literal|2
operator|*
name|iRequest
operator|.
name|getTimeLimit
argument_list|()
operator|/
literal|1000
operator|)
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iRequest
operator|.
name|setTimeLimit
argument_list|(
literal|2
operator|*
name|iRequest
operator|.
name|getTimeLimit
argument_list|()
argument_list|)
expr_stmt|;
name|computeSuggestions
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|removeStyleName
argument_list|(
literal|"unitime-NotPrintableBottomLine"
argument_list|)
expr_stmt|;
name|iApply
operator|=
operator|new
name|AriaButton
argument_list|(
name|MESSAGES
operator|.
name|buttonSearch
argument_list|()
argument_list|)
expr_stmt|;
name|iApply
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|computeSuggestions
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onSelection
parameter_list|(
name|Suggestion
name|suggestion
parameter_list|)
block|{
block|}
specifier|public
name|void
name|clearMessage
parameter_list|()
block|{
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iFooter
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setInfoMessage
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iFooter
operator|.
name|setMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|showLoading
parameter_list|()
block|{
name|iHeader
operator|.
name|showLoading
argument_list|()
expr_stmt|;
name|iFooter
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setRequest
parameter_list|(
name|SelectedAssignmentsRequest
name|request
parameter_list|)
block|{
name|setSelection
argument_list|(
name|request
operator|.
name|getAssignments
argument_list|()
argument_list|,
name|request
operator|.
name|getClassId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setSelection
parameter_list|(
name|List
argument_list|<
name|SelectedAssignment
argument_list|>
name|assignments
parameter_list|,
name|Long
name|classId
parameter_list|)
block|{
name|clearMessage
argument_list|()
expr_stmt|;
if|if
condition|(
name|iFilter
operator|==
literal|null
condition|)
block|{
name|iFilter
operator|=
operator|new
name|SuggestionsFilter
argument_list|()
expr_stmt|;
name|iFilter
operator|.
name|setValue
argument_list|(
name|SolverCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|getSuggestionsFilter
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iFilter
operator|.
name|setClassId
argument_list|(
name|classId
argument_list|)
expr_stmt|;
name|clear
argument_list|()
expr_stmt|;
name|iSuggestionsComputed
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|iTable
operator|==
literal|null
condition|)
block|{
name|iTable
operator|=
operator|new
name|SuggestionsTable
argument_list|(
name|iContext
operator|.
name|getProperties
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iTable
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iTable
operator|.
name|addMouseClickListener
argument_list|(
operator|new
name|MouseClickListener
argument_list|<
name|Suggestion
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseClick
parameter_list|(
name|TableEvent
argument_list|<
name|Suggestion
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getData
argument_list|()
operator|!=
literal|null
condition|)
name|onSelection
argument_list|(
name|event
operator|.
name|getData
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iTable
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
name|iHeaderRow
operator|=
name|addHeaderRow
argument_list|(
name|iHeader
argument_list|)
expr_stmt|;
name|int
name|filterRow
init|=
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propFilter
argument_list|()
argument_list|,
name|iFilter
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|setWidget
argument_list|(
name|filterRow
argument_list|,
literal|2
argument_list|,
name|iApply
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|iTable
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|setEnabled
argument_list|(
literal|"longer"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|setEnabled
argument_list|(
literal|"deeper"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iFooterRow
operator|=
name|addBottomRow
argument_list|(
name|iFooter
argument_list|)
expr_stmt|;
name|getFlexCellFormatter
argument_list|()
operator|.
name|removeStyleName
argument_list|(
name|iFooterRow
argument_list|,
literal|0
argument_list|,
literal|"unitime-TopLine"
argument_list|)
expr_stmt|;
name|iRequest
operator|=
operator|new
name|ComputeSuggestionsRequest
argument_list|(
name|classId
argument_list|,
name|assignments
argument_list|)
expr_stmt|;
if|if
condition|(
name|SolverCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|isShowSuggestions
argument_list|()
condition|)
block|{
name|showSuggestions
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|hideSuggestions
argument_list|()
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|hideSuggestions
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
name|iHeaderRow
operator|+
literal|1
init|;
name|i
operator|<=
name|iFooterRow
condition|;
name|i
operator|++
control|)
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|i
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|showSuggestions
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
name|iHeaderRow
operator|+
literal|1
init|;
name|i
operator|<=
name|iFooterRow
condition|;
name|i
operator|++
control|)
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|i
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|iSuggestionsComputed
condition|)
name|computeSuggestions
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|computeSuggestions
parameter_list|()
block|{
name|iSuggestionsComputed
operator|=
literal|true
expr_stmt|;
name|iTable
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iApply
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|showLoading
argument_list|()
expr_stmt|;
name|Chip
name|depth
init|=
name|iFilter
operator|.
name|getChip
argument_list|(
literal|"depth"
argument_list|)
decl_stmt|;
if|if
condition|(
name|depth
operator|!=
literal|null
condition|)
name|iRequest
operator|.
name|setDepth
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|depth
operator|.
name|getValue
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"D"
argument_list|)
operator|||
name|depth
operator|.
name|getValue
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"d"
argument_list|)
condition|?
name|depth
operator|.
name|getValue
argument_list|()
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
else|:
name|depth
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Chip
name|results
init|=
name|iFilter
operator|.
name|getChip
argument_list|(
literal|"results"
argument_list|)
decl_stmt|;
if|if
condition|(
name|results
operator|!=
literal|null
condition|)
name|iRequest
operator|.
name|setLimit
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|results
operator|.
name|getValue
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"R"
argument_list|)
operator|||
name|results
operator|.
name|getValue
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"r"
argument_list|)
condition|?
name|results
operator|.
name|getValue
argument_list|()
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
else|:
name|results
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Chip
name|timeout
init|=
name|iFilter
operator|.
name|getChip
argument_list|(
literal|"timeout"
argument_list|)
decl_stmt|;
if|if
condition|(
name|timeout
operator|!=
literal|null
condition|)
name|iRequest
operator|.
name|setTimeLimit
argument_list|(
literal|1000
operator|*
name|Integer
operator|.
name|parseInt
argument_list|(
name|timeout
operator|.
name|getValue
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"T"
argument_list|)
operator|||
name|timeout
operator|.
name|getValue
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"t"
argument_list|)
condition|?
name|timeout
operator|.
name|getValue
argument_list|()
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
else|:
name|timeout
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iRequest
operator|.
name|setSameRoom
argument_list|(
name|iFilter
operator|.
name|hasChip
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"flag"
argument_list|,
literal|"Same Room"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iRequest
operator|.
name|setSameTime
argument_list|(
name|iFilter
operator|.
name|hasChip
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"flag"
argument_list|,
literal|"Same Time"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iRequest
operator|.
name|setAllowBreakHard
argument_list|(
name|iFilter
operator|.
name|hasChip
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"flag"
argument_list|,
literal|"Allow Break Hard"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iRequest
operator|.
name|setPlacements
argument_list|(
name|iFilter
operator|.
name|hasChip
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"mode"
argument_list|,
literal|"Placements"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iRequest
operator|.
name|setFilter
argument_list|(
name|iFilter
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|setEnabled
argument_list|(
literal|"longer"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|setEnabled
argument_list|(
literal|"deeper"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|iRequest
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Suggestions
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedToComputeSuggestions
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedToComputeSuggestions
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
name|iApply
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Suggestions
name|result
parameter_list|)
block|{
name|iTable
operator|.
name|setValue
argument_list|(
name|result
operator|.
name|getSuggestions
argument_list|()
argument_list|)
expr_stmt|;
name|iTable
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iApply
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|setEnabled
argument_list|(
literal|"longer"
argument_list|,
name|result
operator|.
name|isTimeoutReached
argument_list|()
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|setEnabled
argument_list|(
literal|"deeper"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
if|if
condition|(
name|result
operator|.
name|isTimeoutReached
argument_list|()
condition|)
name|setInfoMessage
argument_list|(
name|MESSAGES
operator|.
name|suggestionsNoteTimeoutNoResults
argument_list|(
name|result
operator|.
name|getTimeLimit
argument_list|()
operator|/
literal|1000
argument_list|,
name|result
operator|.
name|getNrCombinationsConsidered
argument_list|()
argument_list|,
name|result
operator|.
name|getDepth
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|setInfoMessage
argument_list|(
name|MESSAGES
operator|.
name|suggestionsNoteNoTimeoutNoResults
argument_list|(
name|result
operator|.
name|getNrCombinationsConsidered
argument_list|()
argument_list|,
name|result
operator|.
name|getDepth
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|result
operator|.
name|size
argument_list|()
operator|<
name|result
operator|.
name|getNrSolutions
argument_list|()
condition|)
block|{
if|if
condition|(
name|result
operator|.
name|isTimeoutReached
argument_list|()
condition|)
name|setInfoMessage
argument_list|(
name|MESSAGES
operator|.
name|suggestionsNoteTimeoutNResults
argument_list|(
name|result
operator|.
name|getTimeLimit
argument_list|()
operator|/
literal|1000
argument_list|,
name|result
operator|.
name|getNrCombinationsConsidered
argument_list|()
argument_list|,
name|result
operator|.
name|getDepth
argument_list|()
argument_list|,
name|result
operator|.
name|getSuggestions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|result
operator|.
name|getNrSolutions
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|setInfoMessage
argument_list|(
name|MESSAGES
operator|.
name|suggestionsNoteNoTimeoutNResults
argument_list|(
name|result
operator|.
name|getNrCombinationsConsidered
argument_list|()
argument_list|,
name|result
operator|.
name|getDepth
argument_list|()
argument_list|,
name|result
operator|.
name|getSuggestions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
name|result
operator|.
name|getNrSolutions
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|result
operator|.
name|isTimeoutReached
argument_list|()
condition|)
name|setInfoMessage
argument_list|(
name|MESSAGES
operator|.
name|suggestionsNoteTimeoutAllResults
argument_list|(
name|result
operator|.
name|getTimeLimit
argument_list|()
operator|/
literal|1000
argument_list|,
name|result
operator|.
name|getNrCombinationsConsidered
argument_list|()
argument_list|,
name|result
operator|.
name|getDepth
argument_list|()
argument_list|,
name|result
operator|.
name|getSuggestions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|setInfoMessage
argument_list|(
name|MESSAGES
operator|.
name|suggestionsNoteNoTimeoutAllResults
argument_list|(
name|result
operator|.
name|getNrCombinationsConsidered
argument_list|()
argument_list|,
name|result
operator|.
name|getDepth
argument_list|()
argument_list|,
name|result
operator|.
name|getSuggestions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

