begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|solver
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
operator|.
name|SingleDateSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|NumberBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeFileUpload
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|FilterInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|FilterInterface
operator|.
name|FilterParameterInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|FilterInterface
operator|.
name|ListItem
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|i18n
operator|.
name|client
operator|.
name|DateTimeFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasValue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextArea
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|PageFilter
extends|extends
name|SimpleForm
implements|implements
name|HasValue
argument_list|<
name|FilterInterface
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|GwtConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iHeader
decl_stmt|,
name|iFooter
decl_stmt|;
specifier|private
name|FilterInterface
name|iFilter
decl_stmt|;
name|int
name|iFilterHeaderRow
init|=
operator|-
literal|1
decl_stmt|,
name|iFilterLastRow
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|PageFilter
parameter_list|()
block|{
name|iHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|sectFilter
argument_list|()
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setCollapsible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addCollapsibleHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
for|for
control|(
name|int
name|row
init|=
name|iFilterHeaderRow
operator|+
literal|1
init|;
name|row
operator|<=
name|iFilterLastRow
condition|;
name|row
operator|++
control|)
block|{
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|row
argument_list|,
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iFilterHeaderRow
operator|=
name|addHeaderRow
argument_list|(
name|iHeader
argument_list|)
expr_stmt|;
name|iFilterLastRow
operator|=
name|iFilterHeaderRow
expr_stmt|;
name|iFooter
operator|=
name|iHeader
operator|.
name|clonePanel
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|UniTimeHeaderPanel
name|getHeader
parameter_list|()
block|{
return|return
name|iHeader
return|;
block|}
specifier|public
name|UniTimeHeaderPanel
name|getFooter
parameter_list|()
block|{
return|return
name|iFooter
return|;
block|}
specifier|protected
name|Widget
name|getWidget
parameter_list|(
specifier|final
name|FilterParameterInterface
name|param
parameter_list|)
block|{
if|if
condition|(
name|param
operator|.
name|hasOptions
argument_list|()
condition|)
block|{
specifier|final
name|ListBox
name|list
init|=
operator|new
name|ListBox
argument_list|()
decl_stmt|;
name|list
operator|.
name|setMultipleSelect
argument_list|(
name|param
operator|.
name|isMultiSelect
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|param
operator|.
name|isMultiSelect
argument_list|()
condition|)
name|list
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemSelect
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|ListItem
name|item
range|:
name|param
operator|.
name|getOptions
argument_list|()
control|)
block|{
name|list
operator|.
name|addItem
argument_list|(
name|item
operator|.
name|getText
argument_list|()
argument_list|,
name|item
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|param
operator|.
name|getDefaultValue
argument_list|()
operator|!=
literal|null
operator|&&
name|param
operator|.
name|getDefaultValue
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|item
operator|.
name|getValue
argument_list|()
argument_list|)
condition|)
name|list
operator|.
name|setSelectedIndex
argument_list|(
name|list
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|list
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|param
operator|.
name|isMultiSelect
argument_list|()
condition|)
block|{
name|String
name|value
init|=
literal|""
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|list
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|list
operator|.
name|isItemSelected
argument_list|(
name|i
argument_list|)
condition|)
name|value
operator|+=
operator|(
name|value
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|","
operator|)
operator|+
name|list
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|param
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|list
operator|.
name|getSelectedIndex
argument_list|()
operator|<=
literal|0
condition|)
name|param
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
else|else
name|param
operator|.
name|setValue
argument_list|(
name|list
operator|.
name|getValue
argument_list|(
name|list
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|PageFilter
operator|.
name|this
argument_list|,
name|iFilter
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|list
return|;
block|}
if|if
condition|(
literal|"boolean"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
block|{
name|CheckBox
name|ch
init|=
operator|new
name|CheckBox
argument_list|()
decl_stmt|;
name|ch
operator|.
name|setValue
argument_list|(
literal|"1"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getDefaultValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ch
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|==
literal|null
condition|)
name|param
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
else|else
name|param
operator|.
name|setValue
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
condition|?
literal|"1"
else|:
literal|"0"
argument_list|)
expr_stmt|;
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|PageFilter
operator|.
name|this
argument_list|,
name|iFilter
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|ch
return|;
block|}
if|if
condition|(
literal|"file"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
block|{
name|UniTimeFileUpload
name|upload
init|=
operator|new
name|UniTimeFileUpload
argument_list|()
decl_stmt|;
name|upload
operator|.
name|reset
argument_list|()
expr_stmt|;
name|upload
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|==
literal|null
condition|)
name|param
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
else|else
name|param
operator|.
name|setValue
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|PageFilter
operator|.
name|this
argument_list|,
name|iFilter
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|upload
return|;
block|}
if|if
condition|(
literal|"textarea"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
block|{
name|TextArea
name|textarea
init|=
operator|new
name|TextArea
argument_list|()
decl_stmt|;
name|textarea
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|textarea
operator|.
name|setVisibleLines
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|textarea
operator|.
name|setCharacterWidth
argument_list|(
literal|80
argument_list|)
expr_stmt|;
if|if
condition|(
name|param
operator|.
name|getDefaultValue
argument_list|()
operator|!=
literal|null
condition|)
name|textarea
operator|.
name|setText
argument_list|(
name|param
operator|.
name|getDefaultValue
argument_list|()
argument_list|)
expr_stmt|;
name|textarea
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|==
literal|null
condition|)
name|param
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
else|else
name|param
operator|.
name|setValue
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|PageFilter
operator|.
name|this
argument_list|,
name|iFilter
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|textarea
return|;
block|}
if|if
condition|(
literal|"integer"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
operator|||
literal|"int"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
operator|||
literal|"long"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
operator|||
literal|"short"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
operator|||
literal|"byte"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
block|{
name|NumberBox
name|text
init|=
operator|new
name|NumberBox
argument_list|()
decl_stmt|;
name|text
operator|.
name|setDecimal
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|text
operator|.
name|setNegative
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|param
operator|.
name|getDefaultValue
argument_list|()
operator|!=
literal|null
condition|)
name|text
operator|.
name|setText
argument_list|(
name|param
operator|.
name|getDefaultValue
argument_list|()
argument_list|)
expr_stmt|;
name|text
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|==
literal|null
condition|)
name|param
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
else|else
name|param
operator|.
name|setValue
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|PageFilter
operator|.
name|this
argument_list|,
name|iFilter
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|text
return|;
block|}
if|if
condition|(
literal|"number"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
operator|||
literal|"float"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
operator|||
literal|"double"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
block|{
name|NumberBox
name|text
init|=
operator|new
name|NumberBox
argument_list|()
decl_stmt|;
name|text
operator|.
name|setDecimal
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|text
operator|.
name|setNegative
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|param
operator|.
name|getDefaultValue
argument_list|()
operator|!=
literal|null
condition|)
name|text
operator|.
name|setText
argument_list|(
name|param
operator|.
name|getDefaultValue
argument_list|()
argument_list|)
expr_stmt|;
name|text
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|==
literal|null
condition|)
name|param
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
else|else
name|param
operator|.
name|setValue
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|PageFilter
operator|.
name|this
argument_list|,
name|iFilter
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|text
return|;
block|}
if|if
condition|(
literal|"date"
operator|.
name|equalsIgnoreCase
argument_list|(
name|param
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
block|{
name|SingleDateSelector
name|text
init|=
operator|new
name|SingleDateSelector
argument_list|()
decl_stmt|;
if|if
condition|(
name|param
operator|.
name|getDefaultValue
argument_list|()
operator|!=
literal|null
condition|)
name|text
operator|.
name|setText
argument_list|(
name|param
operator|.
name|getDefaultValue
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|DateTimeFormat
name|format
init|=
name|DateTimeFormat
operator|.
name|getFormat
argument_list|(
name|CONSTANTS
operator|.
name|eventDateFormat
argument_list|()
argument_list|)
decl_stmt|;
name|text
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Date
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Date
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|==
literal|null
condition|)
name|param
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
else|else
name|param
operator|.
name|setValue
argument_list|(
name|format
operator|.
name|format
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|PageFilter
operator|.
name|this
argument_list|,
name|iFilter
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|text
return|;
block|}
name|TextBox
name|text
init|=
operator|new
name|TextBox
argument_list|()
decl_stmt|;
name|text
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|text
operator|.
name|setWidth
argument_list|(
literal|"400px"
argument_list|)
expr_stmt|;
if|if
condition|(
name|param
operator|.
name|getDefaultValue
argument_list|()
operator|!=
literal|null
condition|)
name|text
operator|.
name|setText
argument_list|(
name|param
operator|.
name|getDefaultValue
argument_list|()
argument_list|)
expr_stmt|;
name|text
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|==
literal|null
condition|)
name|param
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
else|else
name|param
operator|.
name|setValue
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|PageFilter
operator|.
name|this
argument_list|,
name|iFilter
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|text
return|;
block|}
specifier|public
name|FilterInterface
name|getValue
parameter_list|()
block|{
return|return
name|iFilter
return|;
block|}
specifier|public
name|void
name|setValue
parameter_list|(
name|FilterInterface
name|filter
parameter_list|)
block|{
name|setValue
argument_list|(
name|filter
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addValueChangeHandler
parameter_list|(
name|ValueChangeHandler
argument_list|<
name|FilterInterface
argument_list|>
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|ValueChangeEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|FilterInterface
name|filter
parameter_list|,
name|boolean
name|fireEvents
parameter_list|)
block|{
name|iFilter
operator|=
name|filter
expr_stmt|;
for|for
control|(
name|int
name|row
init|=
name|getRowCount
argument_list|()
operator|-
literal|1
init|;
name|row
operator|>
name|iFilterHeaderRow
condition|;
name|row
operator|--
control|)
name|removeRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
for|for
control|(
specifier|final
name|FilterParameterInterface
name|param
range|:
name|filter
operator|.
name|getParameters
argument_list|()
control|)
block|{
name|Widget
name|w
init|=
name|getWidget
argument_list|(
name|param
argument_list|)
decl_stmt|;
name|iFilterLastRow
operator|=
name|addRow
argument_list|(
name|param
operator|.
name|getLabel
argument_list|()
argument_list|,
name|w
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|iHeader
operator|.
name|isCollapsible
argument_list|()
condition|)
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iFilterLastRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|addBottomRow
argument_list|(
name|iFooter
argument_list|)
expr_stmt|;
if|if
condition|(
name|fireEvents
condition|)
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|this
argument_list|,
name|iFilter
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

