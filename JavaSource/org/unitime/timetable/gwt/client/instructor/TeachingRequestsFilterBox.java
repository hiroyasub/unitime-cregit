begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|instructor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaSuggestBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
operator|.
name|UniTimeFilterBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|FilterBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|FilterBox
operator|.
name|Chip
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|FilterBox
operator|.
name|Suggestion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|FilterRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|TeachingRequestsFilterRpcRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
operator|.
name|ScheduledCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Unit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|BlurEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|BlurHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyCodes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyUpEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyUpHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestOracle
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|TeachingRequestsFilterBox
extends|extends
name|UniTimeFilterBox
argument_list|<
name|TeachingRequestsFilterRpcRequest
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|Boolean
name|iAssigned
decl_stmt|;
specifier|private
name|ListBox
name|iDepartments
decl_stmt|;
specifier|private
name|String
name|iDepartmentAttribute
decl_stmt|;
specifier|private
name|String
name|iDepartmentTag
decl_stmt|;
specifier|private
name|AriaSuggestBox
name|iCourse
decl_stmt|;
specifier|private
name|Chip
name|iLastCourse
decl_stmt|;
specifier|private
name|AriaSuggestBox
name|iInstructor
decl_stmt|;
specifier|private
name|Chip
name|iLastInstructor
decl_stmt|;
specifier|public
name|TeachingRequestsFilterBox
parameter_list|(
name|Boolean
name|assigned
parameter_list|)
block|{
name|super
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|iAssigned
operator|=
name|assigned
expr_stmt|;
name|setShowSuggestionsOnFocus
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iDepartmentAttribute
operator|=
operator|(
name|assigned
operator|!=
literal|null
condition|?
literal|"subject"
else|:
literal|"department"
operator|)
expr_stmt|;
name|iDepartmentTag
operator|=
operator|(
name|assigned
operator|!=
literal|null
condition|?
name|MESSAGES
operator|.
name|tagSubjectArea
argument_list|()
else|:
name|MESSAGES
operator|.
name|tagDepartment
argument_list|()
operator|)
expr_stmt|;
name|iDepartments
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
name|iDepartments
operator|.
name|setMultipleSelect
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iDepartments
operator|.
name|setWidth
argument_list|(
literal|"100%"
argument_list|)
expr_stmt|;
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|CustomFilter
argument_list|(
name|iDepartmentAttribute
argument_list|,
name|iDepartmentTag
argument_list|,
name|iDepartments
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|getSuggestions
parameter_list|(
name|List
argument_list|<
name|Chip
argument_list|>
name|chips
parameter_list|,
name|String
name|text
parameter_list|,
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|Suggestion
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
if|if
condition|(
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Chip
name|oldChip
init|=
name|getChip
argument_list|(
name|iDepartmentAttribute
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Suggestion
argument_list|>
name|suggestions
init|=
operator|new
name|ArrayList
argument_list|<
name|Suggestion
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iDepartments
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Chip
name|chip
init|=
operator|new
name|Chip
argument_list|(
name|iDepartmentAttribute
argument_list|,
name|iDepartments
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|iDepartmentTag
argument_list|)
decl_stmt|;
name|String
name|name
init|=
name|iDepartments
operator|.
name|getItemText
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|iDepartments
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|text
operator|.
name|toLowerCase
argument_list|()
argument_list|)
condition|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|Suggestion
argument_list|(
name|name
argument_list|,
name|chip
argument_list|,
name|oldChip
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|text
operator|.
name|length
argument_list|()
operator|>
literal|2
operator|&&
operator|(
name|name
operator|.
name|toLowerCase
argument_list|()
operator|.
name|contains
argument_list|(
literal|" "
operator|+
name|text
operator|.
name|toLowerCase
argument_list|()
argument_list|)
operator|||
name|name
operator|.
name|toLowerCase
argument_list|()
operator|.
name|contains
argument_list|(
literal|" ("
operator|+
name|text
operator|.
name|toLowerCase
argument_list|()
argument_list|)
operator|)
condition|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|Suggestion
argument_list|(
name|name
argument_list|,
name|chip
argument_list|,
name|oldChip
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
name|suggestions
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iDepartments
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|Chip
name|oldChip
init|=
name|getChip
argument_list|(
name|iDepartmentAttribute
argument_list|)
decl_stmt|;
name|Chip
name|newChip
init|=
operator|(
name|iDepartments
operator|.
name|getSelectedIndex
argument_list|()
operator|<=
literal|0
condition|?
literal|null
else|:
operator|new
name|Chip
argument_list|(
name|iDepartmentAttribute
argument_list|,
name|iDepartments
operator|.
name|getValue
argument_list|(
name|iDepartments
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|iDepartmentTag
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|oldChip
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|newChip
operator|==
literal|null
condition|)
block|{
name|removeChip
argument_list|(
name|oldChip
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
operator|!
name|oldChip
operator|.
name|getValue
argument_list|()
operator|.
name|equals
argument_list|(
name|newChip
operator|.
name|getValue
argument_list|()
argument_list|)
condition|)
block|{
name|removeChip
argument_list|(
name|oldChip
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|addChip
argument_list|(
name|newChip
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
if|if
condition|(
name|newChip
operator|!=
literal|null
condition|)
name|addChip
argument_list|(
name|newChip
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|StaticSimpleFilter
argument_list|(
literal|"course"
argument_list|,
name|MESSAGES
operator|.
name|tagCourse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Label
name|courseLab
init|=
operator|new
name|Label
argument_list|(
name|MESSAGES
operator|.
name|propCourse
argument_list|()
argument_list|)
decl_stmt|;
name|iCourse
operator|=
operator|new
name|AriaSuggestBox
argument_list|(
operator|new
name|CourseOracle
argument_list|()
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|setWidth
argument_list|(
literal|"200px"
argument_list|)
expr_stmt|;
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|StaticSimpleFilter
argument_list|(
literal|"course"
argument_list|,
name|MESSAGES
operator|.
name|tagCourse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|getValueBox
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|courseChanged
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|getValueBox
argument_list|()
operator|.
name|addKeyPressHandler
argument_list|(
operator|new
name|KeyPressHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
name|KeyPressEvent
name|event
parameter_list|)
block|{
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|courseChanged
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|getValueBox
argument_list|()
operator|.
name|addKeyUpHandler
argument_list|(
operator|new
name|KeyUpHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyUp
parameter_list|(
name|KeyUpEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_BACKSPACE
condition|)
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|courseChanged
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|getValueBox
argument_list|()
operator|.
name|addBlurHandler
argument_list|(
operator|new
name|BlurHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onBlur
parameter_list|(
name|BlurEvent
name|event
parameter_list|)
block|{
name|courseChanged
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iCourse
operator|.
name|addSelectionHandler
argument_list|(
operator|new
name|SelectionHandler
argument_list|<
name|SuggestOracle
operator|.
name|Suggestion
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSelection
parameter_list|(
name|SelectionEvent
argument_list|<
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestOracle
operator|.
name|Suggestion
argument_list|>
name|event
parameter_list|)
block|{
name|courseChanged
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Label
name|instructorLab
init|=
operator|new
name|Label
argument_list|(
name|MESSAGES
operator|.
name|propInstructor
argument_list|()
argument_list|)
decl_stmt|;
name|instructorLab
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setMarginLeft
argument_list|(
literal|10
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|iInstructor
operator|=
operator|new
name|AriaSuggestBox
argument_list|(
operator|new
name|InstructorOracle
argument_list|()
argument_list|)
expr_stmt|;
name|iInstructor
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|iInstructor
operator|.
name|setWidth
argument_list|(
literal|"200px"
argument_list|)
expr_stmt|;
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|StaticSimpleFilter
argument_list|(
literal|"instructor"
argument_list|,
name|MESSAGES
operator|.
name|tagInstructor
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iInstructor
operator|.
name|getValueBox
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|instructorChanged
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iInstructor
operator|.
name|getValueBox
argument_list|()
operator|.
name|addKeyPressHandler
argument_list|(
operator|new
name|KeyPressHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
name|KeyPressEvent
name|event
parameter_list|)
block|{
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|instructorChanged
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iInstructor
operator|.
name|getValueBox
argument_list|()
operator|.
name|addKeyUpHandler
argument_list|(
operator|new
name|KeyUpHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyUp
parameter_list|(
name|KeyUpEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_BACKSPACE
condition|)
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|instructorChanged
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iInstructor
operator|.
name|getValueBox
argument_list|()
operator|.
name|addBlurHandler
argument_list|(
operator|new
name|BlurHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onBlur
parameter_list|(
name|BlurEvent
name|event
parameter_list|)
block|{
name|instructorChanged
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iInstructor
operator|.
name|addSelectionHandler
argument_list|(
operator|new
name|SelectionHandler
argument_list|<
name|SuggestOracle
operator|.
name|Suggestion
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSelection
parameter_list|(
name|SelectionEvent
argument_list|<
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestOracle
operator|.
name|Suggestion
argument_list|>
name|event
parameter_list|)
block|{
name|instructorChanged
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|addFilter
argument_list|(
operator|new
name|FilterBox
operator|.
name|CustomFilter
argument_list|(
literal|"Other"
argument_list|,
name|MESSAGES
operator|.
name|tagOther
argument_list|()
argument_list|,
name|courseLab
argument_list|,
name|iCourse
argument_list|,
name|instructorLab
argument_list|,
name|iInstructor
argument_list|)
argument_list|)
expr_stmt|;
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|iLastCourse
operator|=
name|getChip
argument_list|(
literal|"course"
argument_list|)
expr_stmt|;
name|iLastInstructor
operator|=
name|getChip
argument_list|(
literal|"instructor"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|isFilterPopupShowing
argument_list|()
condition|)
block|{
name|iDepartments
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iDepartments
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|String
name|value
init|=
name|iDepartments
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|hasChip
argument_list|(
operator|new
name|Chip
argument_list|(
name|iDepartmentAttribute
argument_list|,
name|value
argument_list|)
argument_list|)
condition|)
block|{
name|iDepartments
operator|.
name|setSelectedIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
name|Chip
name|course
init|=
name|getChip
argument_list|(
literal|"course"
argument_list|)
decl_stmt|;
if|if
condition|(
name|course
operator|==
literal|null
condition|)
name|iCourse
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
else|else
name|iCourse
operator|.
name|setText
argument_list|(
name|course
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|Chip
name|instructor
init|=
name|getChip
argument_list|(
literal|"instructor"
argument_list|)
decl_stmt|;
if|if
condition|(
name|instructor
operator|==
literal|null
condition|)
name|iInstructor
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
else|else
name|iInstructor
operator|.
name|setText
argument_list|(
name|instructor
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|init
argument_list|(
literal|false
argument_list|,
name|getAcademicSessionId
argument_list|()
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
if|if
condition|(
name|isFilterPopupShowing
argument_list|()
condition|)
name|showFilterPopup
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|courseChanged
parameter_list|(
name|boolean
name|fireChange
parameter_list|)
block|{
name|Chip
name|oldChip
init|=
name|getChip
argument_list|(
literal|"course"
argument_list|)
decl_stmt|;
if|if
condition|(
name|iCourse
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|oldChip
operator|!=
literal|null
condition|)
name|removeChip
argument_list|(
name|oldChip
argument_list|,
name|fireChange
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Chip
name|newChip
init|=
operator|new
name|Chip
argument_list|(
literal|"course"
argument_list|,
name|iCourse
operator|.
name|getText
argument_list|()
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagCourse
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|oldChip
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|newChip
operator|.
name|equals
argument_list|(
name|oldChip
argument_list|)
condition|)
block|{
if|if
condition|(
name|fireChange
operator|&&
operator|!
name|newChip
operator|.
name|equals
argument_list|(
name|iLastCourse
argument_list|)
condition|)
name|fireValueChangeEvent
argument_list|()
expr_stmt|;
return|return;
block|}
name|removeChip
argument_list|(
name|oldChip
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|addChip
argument_list|(
name|newChip
argument_list|,
name|fireChange
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|instructorChanged
parameter_list|(
name|boolean
name|fireChange
parameter_list|)
block|{
name|Chip
name|oldChip
init|=
name|getChip
argument_list|(
literal|"instructor"
argument_list|)
decl_stmt|;
if|if
condition|(
name|iInstructor
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|oldChip
operator|!=
literal|null
condition|)
name|removeChip
argument_list|(
name|oldChip
argument_list|,
name|fireChange
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Chip
name|newChip
init|=
operator|new
name|Chip
argument_list|(
literal|"instructor"
argument_list|,
name|iInstructor
operator|.
name|getText
argument_list|()
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|MESSAGES
operator|.
name|tagInstructor
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|oldChip
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|newChip
operator|.
name|equals
argument_list|(
name|oldChip
argument_list|)
condition|)
block|{
if|if
condition|(
name|fireChange
operator|&&
operator|!
name|newChip
operator|.
name|equals
argument_list|(
name|iLastInstructor
argument_list|)
condition|)
name|fireValueChangeEvent
argument_list|()
expr_stmt|;
return|return;
block|}
name|removeChip
argument_list|(
name|oldChip
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|addChip
argument_list|(
name|newChip
argument_list|,
name|fireChange
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|boolean
name|populateFilter
parameter_list|(
name|FilterBox
operator|.
name|Filter
name|filter
parameter_list|,
name|List
argument_list|<
name|FilterRpcResponse
operator|.
name|Entity
argument_list|>
name|entities
parameter_list|)
block|{
if|if
condition|(
name|iDepartmentAttribute
operator|.
name|equals
argument_list|(
name|filter
operator|.
name|getCommand
argument_list|()
argument_list|)
condition|)
block|{
name|iDepartments
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iDepartments
operator|.
name|addItem
argument_list|(
literal|"department"
operator|.
name|equals
argument_list|(
name|iDepartmentAttribute
argument_list|)
condition|?
name|MESSAGES
operator|.
name|itemAllDepartments
argument_list|()
else|:
name|MESSAGES
operator|.
name|itemAllSubjectAreas
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
if|if
condition|(
name|entities
operator|!=
literal|null
condition|)
for|for
control|(
name|FilterRpcResponse
operator|.
name|Entity
name|entity
range|:
name|entities
control|)
name|iDepartments
operator|.
name|addItem
argument_list|(
name|entity
operator|.
name|getName
argument_list|()
operator|+
operator|(
name|entity
operator|.
name|getCount
argument_list|()
operator|>
literal|0
condition|?
literal|" ("
operator|+
name|entity
operator|.
name|getCount
argument_list|()
operator|+
literal|")"
else|:
literal|""
operator|)
argument_list|,
name|entity
operator|.
name|getAbbreviation
argument_list|()
argument_list|)
expr_stmt|;
name|iDepartments
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|Chip
name|dept
init|=
name|getChip
argument_list|(
name|iDepartmentAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|dept
operator|!=
literal|null
condition|)
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iDepartments
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|dept
operator|.
name|getValue
argument_list|()
operator|.
name|equals
argument_list|(
name|iDepartments
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
block|{
name|iDepartments
operator|.
name|setSelectedIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
break|break;
block|}
return|return
literal|true
return|;
block|}
if|else if
condition|(
name|filter
operator|!=
literal|null
operator|&&
name|filter
operator|instanceof
name|FilterBox
operator|.
name|StaticSimpleFilter
condition|)
block|{
name|FilterBox
operator|.
name|StaticSimpleFilter
name|simple
init|=
operator|(
name|FilterBox
operator|.
name|StaticSimpleFilter
operator|)
name|filter
decl_stmt|;
name|List
argument_list|<
name|FilterBox
operator|.
name|Chip
argument_list|>
name|chips
init|=
operator|new
name|ArrayList
argument_list|<
name|FilterBox
operator|.
name|Chip
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|entities
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|FilterRpcResponse
operator|.
name|Entity
name|entity
range|:
name|entities
control|)
name|chips
operator|.
name|add
argument_list|(
operator|new
name|FilterBox
operator|.
name|Chip
argument_list|(
name|filter
operator|.
name|getCommand
argument_list|()
argument_list|,
name|entity
operator|.
name|getAbbreviation
argument_list|()
argument_list|)
operator|.
name|withLabel
argument_list|(
name|entity
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|withCount
argument_list|(
name|entity
operator|.
name|getCount
argument_list|()
argument_list|)
operator|.
name|withTranslatedCommand
argument_list|(
name|filter
operator|.
name|getLabel
argument_list|()
argument_list|)
operator|.
name|withTranslatedValue
argument_list|(
name|entity
operator|.
name|getProperty
argument_list|(
literal|"translated-value"
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|simple
operator|.
name|setValues
argument_list|(
name|chips
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|TeachingRequestsFilterRpcRequest
name|createRpcRequest
parameter_list|()
block|{
name|TeachingRequestsFilterRpcRequest
name|req
init|=
operator|new
name|TeachingRequestsFilterRpcRequest
argument_list|()
decl_stmt|;
if|if
condition|(
name|iAssigned
operator|!=
literal|null
condition|)
name|req
operator|.
name|setOption
argument_list|(
literal|"assigned"
argument_list|,
name|iAssigned
condition|?
literal|"true"
else|:
literal|"false"
argument_list|)
expr_stmt|;
return|return
name|req
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|onLoad
parameter_list|(
name|FilterRpcResponse
name|result
parameter_list|)
block|{
if|if
condition|(
operator|!
name|result
operator|.
name|hasEntities
argument_list|()
condition|)
return|return;
name|boolean
name|added
init|=
literal|false
decl_stmt|;
name|types
label|:
for|for
control|(
name|String
name|type
range|:
name|result
operator|.
name|getTypes
argument_list|()
control|)
block|{
if|if
condition|(
literal|"department"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
operator|||
literal|"subject"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
operator|||
literal|"assigned"
operator|.
name|equals
argument_list|(
name|type
argument_list|)
condition|)
continue|continue;
for|for
control|(
name|FilterBox
operator|.
name|Filter
name|filter
range|:
name|iFilter
operator|.
name|getWidget
argument_list|()
operator|.
name|getFilters
argument_list|()
control|)
block|{
if|if
condition|(
name|filter
operator|.
name|getCommand
argument_list|()
operator|.
name|equals
argument_list|(
name|type
argument_list|)
condition|)
continue|continue
name|types
continue|;
block|}
name|iFilter
operator|.
name|getWidget
argument_list|()
operator|.
name|getFilters
argument_list|()
operator|.
name|add
argument_list|(
name|iFilter
operator|.
name|getWidget
argument_list|()
operator|.
name|getFilters
argument_list|()
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|,
operator|new
name|FilterBox
operator|.
name|StaticSimpleFilter
argument_list|(
name|type
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|added
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|added
condition|)
name|setValue
argument_list|(
name|getValue
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
class|class
name|CourseSuggestion
implements|implements
name|SuggestOracle
operator|.
name|Suggestion
block|{
specifier|private
name|FilterBox
operator|.
name|Suggestion
name|iSuggestion
decl_stmt|;
name|CourseSuggestion
parameter_list|(
name|FilterBox
operator|.
name|Suggestion
name|suggestion
parameter_list|)
block|{
name|iSuggestion
operator|=
name|suggestion
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDisplayString
parameter_list|()
block|{
return|return
name|iSuggestion
operator|.
name|getChipToAdd
argument_list|()
operator|.
name|getLabel
argument_list|()
operator|+
operator|(
name|iSuggestion
operator|.
name|getChipToAdd
argument_list|()
operator|.
name|hasToolTip
argument_list|()
condition|?
literal|"<span class='item-hint'>"
operator|+
name|iSuggestion
operator|.
name|getChipToAdd
argument_list|()
operator|.
name|getToolTip
argument_list|()
operator|+
literal|"</span>"
else|:
literal|""
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getReplacementString
parameter_list|()
block|{
return|return
name|iSuggestion
operator|.
name|getChipToAdd
argument_list|()
operator|.
name|getValue
argument_list|()
return|;
block|}
block|}
specifier|public
class|class
name|CourseOracle
extends|extends
name|SuggestOracle
block|{
annotation|@
name|Override
specifier|public
name|void
name|requestSuggestions
parameter_list|(
specifier|final
name|Request
name|request
parameter_list|,
specifier|final
name|Callback
name|callback
parameter_list|)
block|{
if|if
condition|(
operator|!
name|request
operator|.
name|getQuery
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iFilter
operator|.
name|getWidget
argument_list|()
operator|.
name|getSuggestionsProvider
argument_list|()
operator|.
name|getSuggestions
argument_list|(
name|iFilter
operator|.
name|getWidget
argument_list|()
operator|.
name|getChips
argument_list|(
literal|null
argument_list|)
argument_list|,
name|request
operator|.
name|getQuery
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|FilterBox
operator|.
name|Suggestion
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Collection
argument_list|<
name|FilterBox
operator|.
name|Suggestion
argument_list|>
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|==
literal|null
condition|)
return|return;
name|List
argument_list|<
name|CourseSuggestion
argument_list|>
name|suggestions
init|=
operator|new
name|ArrayList
argument_list|<
name|CourseSuggestion
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|FilterBox
operator|.
name|Suggestion
name|suggestion
range|:
name|result
control|)
block|{
if|if
condition|(
name|suggestion
operator|.
name|getChipToAdd
argument_list|()
operator|!=
literal|null
operator|&&
literal|"course"
operator|.
name|equals
argument_list|(
name|suggestion
operator|.
name|getChipToAdd
argument_list|()
operator|.
name|getCommand
argument_list|()
argument_list|)
condition|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|CourseSuggestion
argument_list|(
name|suggestion
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|callback
operator|.
name|onSuggestionsReady
argument_list|(
name|request
argument_list|,
operator|new
name|Response
argument_list|(
name|suggestions
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isDisplayStringHTML
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
block|}
specifier|public
class|class
name|InstructorSuggestion
implements|implements
name|SuggestOracle
operator|.
name|Suggestion
block|{
specifier|private
name|FilterBox
operator|.
name|Suggestion
name|iSuggestion
decl_stmt|;
name|InstructorSuggestion
parameter_list|(
name|FilterBox
operator|.
name|Suggestion
name|suggestion
parameter_list|)
block|{
name|iSuggestion
operator|=
name|suggestion
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDisplayString
parameter_list|()
block|{
return|return
name|iSuggestion
operator|.
name|getChipToAdd
argument_list|()
operator|.
name|getLabel
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getReplacementString
parameter_list|()
block|{
return|return
name|iSuggestion
operator|.
name|getChipToAdd
argument_list|()
operator|.
name|getValue
argument_list|()
return|;
block|}
block|}
specifier|public
class|class
name|InstructorOracle
extends|extends
name|SuggestOracle
block|{
annotation|@
name|Override
specifier|public
name|void
name|requestSuggestions
parameter_list|(
specifier|final
name|Request
name|request
parameter_list|,
specifier|final
name|Callback
name|callback
parameter_list|)
block|{
if|if
condition|(
operator|!
name|request
operator|.
name|getQuery
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iFilter
operator|.
name|getWidget
argument_list|()
operator|.
name|getSuggestionsProvider
argument_list|()
operator|.
name|getSuggestions
argument_list|(
name|iFilter
operator|.
name|getWidget
argument_list|()
operator|.
name|getChips
argument_list|(
literal|null
argument_list|)
argument_list|,
name|request
operator|.
name|getQuery
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|FilterBox
operator|.
name|Suggestion
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Collection
argument_list|<
name|FilterBox
operator|.
name|Suggestion
argument_list|>
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|==
literal|null
condition|)
return|return;
name|List
argument_list|<
name|InstructorSuggestion
argument_list|>
name|suggestions
init|=
operator|new
name|ArrayList
argument_list|<
name|InstructorSuggestion
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|FilterBox
operator|.
name|Suggestion
name|suggestion
range|:
name|result
control|)
block|{
if|if
condition|(
name|suggestion
operator|.
name|getChipToAdd
argument_list|()
operator|!=
literal|null
operator|&&
literal|"instructor"
operator|.
name|equals
argument_list|(
name|suggestion
operator|.
name|getChipToAdd
argument_list|()
operator|.
name|getCommand
argument_list|()
argument_list|)
condition|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|InstructorSuggestion
argument_list|(
name|suggestion
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|callback
operator|.
name|onSuggestionsReady
argument_list|(
name|request
argument_list|,
operator|new
name|Response
argument_list|(
name|suggestions
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

