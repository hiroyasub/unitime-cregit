begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|instructor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|GwtHint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|rooms
operator|.
name|RoomCookie
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|P
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|InstructorInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|PreferenceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|PreferenceInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|TeachingRequestsPagePropertiesResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseOutEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseOutHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseOverEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseOverHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Image
import|;
end_import

begin_class
specifier|public
class|class
name|TimePreferenceCell
extends|extends
name|P
implements|implements
name|UniTimeTable
operator|.
name|HasRefresh
block|{
specifier|private
name|TeachingRequestsPagePropertiesResponse
name|iProperties
decl_stmt|;
specifier|private
name|String
name|iPattern
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|PreferenceInfo
argument_list|>
name|iPreferences
init|=
literal|null
decl_stmt|;
specifier|private
specifier|static
name|InstructorAvailabilityWidget
name|sAvailability
init|=
operator|new
name|InstructorAvailabilityWidget
argument_list|()
decl_stmt|;
specifier|public
name|TimePreferenceCell
parameter_list|(
name|TeachingRequestsPagePropertiesResponse
name|properties
parameter_list|)
block|{
name|super
argument_list|(
literal|"preferences"
argument_list|)
expr_stmt|;
name|iProperties
operator|=
name|properties
expr_stmt|;
name|addMouseOverHandler
argument_list|(
operator|new
name|MouseOverHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseOver
parameter_list|(
name|MouseOverEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iPattern
operator|!=
literal|null
condition|)
block|{
name|iProperties
operator|.
name|getInstructorAvailabilityModel
argument_list|()
operator|.
name|setPattern
argument_list|(
name|iPattern
argument_list|)
expr_stmt|;
name|sAvailability
operator|.
name|setModel
argument_list|(
name|iProperties
operator|.
name|getInstructorAvailabilityModel
argument_list|()
argument_list|)
expr_stmt|;
name|GwtHint
operator|.
name|showHint
argument_list|(
name|getElement
argument_list|()
argument_list|,
name|sAvailability
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|addMouseOutHandler
argument_list|(
operator|new
name|MouseOutHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseOut
parameter_list|(
name|MouseOutEvent
name|event
parameter_list|)
block|{
name|GwtHint
operator|.
name|hideHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TimePreferenceCell
parameter_list|(
name|TeachingRequestsPagePropertiesResponse
name|properties
parameter_list|,
name|InstructorInfo
name|instructor
parameter_list|)
block|{
name|this
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|setValue
argument_list|(
name|instructor
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setValue
parameter_list|(
name|InstructorInfo
name|instructor
parameter_list|)
block|{
name|iPattern
operator|=
name|instructor
operator|.
name|getAvailability
argument_list|()
expr_stmt|;
name|iPreferences
operator|=
name|instructor
operator|.
name|getTimePreferences
argument_list|()
expr_stmt|;
name|refresh
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|refresh
parameter_list|()
block|{
name|clear
argument_list|()
expr_stmt|;
name|RoomCookie
name|cookie
init|=
name|RoomCookie
operator|.
name|getInstance
argument_list|()
decl_stmt|;
if|if
condition|(
name|iPattern
operator|!=
literal|null
operator|&&
operator|!
name|iPattern
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
name|cookie
operator|.
name|isGridAsText
argument_list|()
condition|)
block|{
specifier|final
name|Image
name|availability
init|=
operator|new
name|Image
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"pattern?pref="
operator|+
name|iPattern
operator|+
literal|"&v="
operator|+
operator|(
name|cookie
operator|.
name|areRoomsHorizontal
argument_list|()
condition|?
literal|"0"
else|:
literal|"1"
operator|)
operator|+
operator|(
name|cookie
operator|.
name|hasMode
argument_list|()
condition|?
literal|"&s="
operator|+
name|cookie
operator|.
name|getMode
argument_list|()
else|:
literal|""
operator|)
argument_list|)
decl_stmt|;
name|availability
operator|.
name|setStyleName
argument_list|(
literal|"grid"
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|availability
argument_list|)
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|PreferenceInfo
name|p
range|:
name|iPreferences
control|)
block|{
name|P
name|prf
init|=
operator|new
name|P
argument_list|(
literal|"prf"
argument_list|)
decl_stmt|;
name|prf
operator|.
name|setText
argument_list|(
name|p
operator|.
name|getOwnerName
argument_list|()
argument_list|)
expr_stmt|;
name|PreferenceInterface
name|preference
init|=
name|iProperties
operator|.
name|getPreference
argument_list|(
name|p
operator|.
name|getPreference
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|preference
operator|!=
literal|null
condition|)
block|{
name|prf
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setColor
argument_list|(
name|preference
operator|.
name|getColor
argument_list|()
argument_list|)
expr_stmt|;
name|prf
operator|.
name|setTitle
argument_list|(
name|preference
operator|.
name|getName
argument_list|()
operator|+
literal|" "
operator|+
name|p
operator|.
name|getOwnerName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|add
argument_list|(
name|prf
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

