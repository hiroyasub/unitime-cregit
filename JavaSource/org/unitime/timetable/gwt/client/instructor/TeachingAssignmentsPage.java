begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|instructor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|rooms
operator|.
name|RoomCookie
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|FilterPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|FilterBox
operator|.
name|Chip
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EncodeQueryRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EncodeQueryRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|FilterRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|AssignmentInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|DepartmentInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|InstructorInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|TeachingAssignmentsPageRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|TeachingRequestInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|TeachingRequestsFilterRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|TeachingRequestsPagePropertiesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|TeachingRequestsPagePropertiesResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|http
operator|.
name|client
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|History
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|TeachingAssignmentsPage
extends|extends
name|SimpleForm
block|{
specifier|protected
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|FilterPanel
name|iFilterPanel
decl_stmt|;
specifier|private
name|TeachingRequestsFilterBox
name|iFilterBox
decl_stmt|;
specifier|private
name|TeachingAssignmentsTable
name|iTable
decl_stmt|;
specifier|private
name|Button
name|iSearch
decl_stmt|,
name|iExportCSV
decl_stmt|,
name|iExportPDF
decl_stmt|;
specifier|public
name|TeachingAssignmentsPage
parameter_list|()
block|{
name|iFilterPanel
operator|=
operator|new
name|FilterPanel
argument_list|()
expr_stmt|;
name|Label
name|filterLabel
init|=
operator|new
name|Label
argument_list|(
name|MESSAGES
operator|.
name|propDepartment
argument_list|()
argument_list|)
decl_stmt|;
name|iFilterPanel
operator|.
name|addLeft
argument_list|(
name|filterLabel
argument_list|)
expr_stmt|;
name|iFilterBox
operator|=
operator|new
name|TeachingRequestsFilterBox
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|iFilterPanel
operator|.
name|addLeft
argument_list|(
name|iFilterBox
argument_list|)
expr_stmt|;
name|iSearch
operator|=
operator|new
name|Button
argument_list|(
name|UniTimeHeaderPanel
operator|.
name|stripAccessKey
argument_list|(
name|MESSAGES
operator|.
name|buttonSearch
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Character
name|searchAccessKey
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|MESSAGES
operator|.
name|buttonSearch
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|searchAccessKey
operator|!=
literal|null
condition|)
name|iSearch
operator|.
name|setAccessKey
argument_list|(
name|searchAccessKey
argument_list|)
expr_stmt|;
name|iSearch
operator|.
name|addStyleName
argument_list|(
literal|"unitime-NoPrint"
argument_list|)
expr_stmt|;
name|iFilterPanel
operator|.
name|addRight
argument_list|(
name|iSearch
argument_list|)
expr_stmt|;
name|iSearch
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|search
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iExportCSV
operator|=
operator|new
name|Button
argument_list|(
name|UniTimeHeaderPanel
operator|.
name|stripAccessKey
argument_list|(
name|MESSAGES
operator|.
name|buttonExportCSV
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Character
name|exportCsvAccessKey
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|MESSAGES
operator|.
name|buttonExportCSV
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|exportCsvAccessKey
operator|!=
literal|null
condition|)
name|iExportCSV
operator|.
name|setAccessKey
argument_list|(
name|exportCsvAccessKey
argument_list|)
expr_stmt|;
name|iExportCSV
operator|.
name|addStyleName
argument_list|(
literal|"unitime-NoPrint"
argument_list|)
expr_stmt|;
name|iFilterPanel
operator|.
name|addRight
argument_list|(
name|iExportCSV
argument_list|)
expr_stmt|;
name|iExportCSV
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|export
argument_list|(
literal|"teaching-assignments.csv"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iExportPDF
operator|=
operator|new
name|Button
argument_list|(
name|UniTimeHeaderPanel
operator|.
name|stripAccessKey
argument_list|(
name|MESSAGES
operator|.
name|buttonExportPDF
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Character
name|exportPdfAccessKey
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|MESSAGES
operator|.
name|buttonExportPDF
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|exportPdfAccessKey
operator|!=
literal|null
condition|)
name|iExportPDF
operator|.
name|setAccessKey
argument_list|(
name|exportCsvAccessKey
argument_list|)
expr_stmt|;
name|iExportPDF
operator|.
name|addStyleName
argument_list|(
literal|"unitime-NoPrint"
argument_list|)
expr_stmt|;
name|iFilterPanel
operator|.
name|addRight
argument_list|(
name|iExportPDF
argument_list|)
expr_stmt|;
name|iExportPDF
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|export
argument_list|(
literal|"teaching-assignments.pdf"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|addHeaderRow
argument_list|(
name|iFilterPanel
argument_list|)
expr_stmt|;
name|iTable
operator|=
operator|new
name|TeachingAssignmentsTable
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|void
name|onAssignmentChanged
parameter_list|(
name|List
argument_list|<
name|AssignmentInfo
argument_list|>
name|assignments
parameter_list|)
block|{
if|if
condition|(
name|iTable
operator|.
name|isVisible
argument_list|()
condition|)
name|search
argument_list|()
expr_stmt|;
block|}
block|}
expr_stmt|;
name|iTable
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|iTable
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitLoadingPage
argument_list|()
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|TeachingRequestsPagePropertiesRequest
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|TeachingRequestsPagePropertiesResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iFilterBox
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|failedToInitialize
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedToInitialize
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
name|ToolBox
operator|.
name|checkAccess
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|TeachingRequestsPagePropertiesResponse
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iTable
operator|.
name|setProperties
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|Chip
name|department
init|=
name|iFilterBox
operator|.
name|getChip
argument_list|(
literal|"department"
argument_list|)
decl_stmt|;
if|if
condition|(
name|department
operator|!=
literal|null
condition|)
block|{
name|boolean
name|match
init|=
literal|false
decl_stmt|;
for|for
control|(
name|DepartmentInterface
name|d
range|:
name|result
operator|.
name|getDepartments
argument_list|()
control|)
block|{
if|if
condition|(
name|d
operator|.
name|getDeptCode
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|department
operator|.
name|getValue
argument_list|()
argument_list|)
condition|)
block|{
name|match
operator|=
literal|true
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|match
condition|)
name|iFilterBox
operator|.
name|setValue
argument_list|(
literal|""
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|result
operator|.
name|getLastDepartmentId
argument_list|()
operator|!=
literal|null
operator|&&
name|iFilterBox
operator|.
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
for|for
control|(
name|DepartmentInterface
name|d
range|:
name|result
operator|.
name|getDepartments
argument_list|()
control|)
block|{
if|if
condition|(
name|d
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|result
operator|.
name|getLastDepartmentId
argument_list|()
argument_list|)
condition|)
block|{
name|iFilterBox
operator|.
name|setValue
argument_list|(
literal|"department:\""
operator|+
name|d
operator|.
name|getDeptCode
argument_list|()
operator|+
literal|"\""
argument_list|,
literal|true
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|Window
operator|.
name|Location
operator|.
name|getHash
argument_list|()
operator|!=
literal|null
operator|&&
name|Window
operator|.
name|Location
operator|.
name|getHash
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|1
condition|)
block|{
name|iFilterBox
operator|.
name|setValue
argument_list|(
name|URL
operator|.
name|decode
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getHash
argument_list|()
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|search
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|String
name|q
init|=
name|InstructorCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|getQuery
argument_list|(
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|q
operator|!=
literal|null
operator|&&
operator|!
name|q
operator|.
name|isEmpty
argument_list|()
condition|)
name|iFilterBox
operator|.
name|setValue
argument_list|(
name|q
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|History
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iFilterBox
operator|.
name|setValue
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|replace
argument_list|(
literal|"%20"
argument_list|,
literal|" "
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|search
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|void
name|search
parameter_list|()
block|{
name|History
operator|.
name|newItem
argument_list|(
name|iFilterBox
operator|.
name|getValue
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|InstructorCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|setQuery
argument_list|(
literal|null
argument_list|,
name|iFilterBox
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitLoadingTeachingAssignments
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|TeachingRequestsFilterRpcRequest
name|filter
init|=
name|iFilterBox
operator|.
name|getElementsRequest
argument_list|()
decl_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|TeachingAssignmentsPageRequest
argument_list|(
name|filter
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|InstructorInfo
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iFilterBox
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|failedToLoadTeachingAssignments
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedToLoadTeachingAssignments
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|InstructorInfo
argument_list|>
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iTable
operator|.
name|populate
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|iTable
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|SingleTeachingAssingment
block|{
name|InstructorInfo
name|iInstructor
decl_stmt|;
name|TeachingRequestInfo
name|iRequest
decl_stmt|;
specifier|public
name|SingleTeachingAssingment
parameter_list|(
name|InstructorInfo
name|instructor
parameter_list|,
name|TeachingRequestInfo
name|request
parameter_list|)
block|{
name|iInstructor
operator|=
name|instructor
expr_stmt|;
name|iRequest
operator|=
name|request
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasInstructor
parameter_list|()
block|{
return|return
name|iInstructor
operator|!=
literal|null
return|;
block|}
specifier|public
name|InstructorInfo
name|getInstructor
parameter_list|()
block|{
return|return
name|iInstructor
return|;
block|}
specifier|public
name|boolean
name|hasRequest
parameter_list|()
block|{
return|return
name|iRequest
operator|!=
literal|null
return|;
block|}
specifier|public
name|TeachingRequestInfo
name|getRequest
parameter_list|()
block|{
return|return
name|iRequest
return|;
block|}
block|}
name|void
name|export
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|RoomCookie
name|cookie
init|=
name|RoomCookie
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|String
name|query
init|=
literal|"output="
operator|+
name|type
decl_stmt|;
name|FilterRpcRequest
name|requests
init|=
name|iFilterBox
operator|.
name|getElementsRequest
argument_list|()
decl_stmt|;
if|if
condition|(
name|requests
operator|.
name|hasOptions
argument_list|()
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|option
range|:
name|requests
operator|.
name|getOptions
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
for|for
control|(
name|String
name|value
range|:
name|option
operator|.
name|getValue
argument_list|()
control|)
block|{
name|query
operator|+=
literal|"&r:"
operator|+
name|option
operator|.
name|getKey
argument_list|()
operator|+
literal|"="
operator|+
name|URL
operator|.
name|encodeQueryString
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|requests
operator|.
name|getText
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|requests
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|query
operator|+=
literal|"&r:text="
operator|+
name|URL
operator|.
name|encodeQueryString
argument_list|(
name|requests
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|query
operator|+=
literal|"&sort="
operator|+
name|InstructorCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|getSortTeachingAssignmentsBy
argument_list|()
operator|+
literal|"&columns="
operator|+
name|InstructorCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|getTeachingAssignmentsColumns
argument_list|()
operator|+
literal|"&grid="
operator|+
operator|(
name|cookie
operator|.
name|isGridAsText
argument_list|()
condition|?
literal|"0"
else|:
literal|"1"
operator|)
operator|+
literal|"&vertical="
operator|+
operator|(
name|cookie
operator|.
name|areRoomsHorizontal
argument_list|()
condition|?
literal|"0"
else|:
literal|"1"
operator|)
operator|+
operator|(
name|cookie
operator|.
name|hasMode
argument_list|()
condition|?
literal|"&mode="
operator|+
name|cookie
operator|.
name|getMode
argument_list|()
else|:
literal|""
operator|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|EncodeQueryRpcRequest
operator|.
name|encode
argument_list|(
name|query
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|EncodeQueryRpcResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|EncodeQueryRpcResponse
name|result
parameter_list|)
block|{
name|ToolBox
operator|.
name|open
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"export?q="
operator|+
name|result
operator|.
name|getQuery
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

