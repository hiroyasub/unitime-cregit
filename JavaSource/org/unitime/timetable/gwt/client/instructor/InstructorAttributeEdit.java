begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|instructor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimePageLabel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|MouseClickListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|TableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|AttributeInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|AttributeTypeInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|DepartmentInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|GetInstructorAttributeParentsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|InstructorAttributePropertiesInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|UpdateInstructorAttributeRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextBox
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|InstructorAttributeEdit
extends|extends
name|Composite
block|{
specifier|private
specifier|static
specifier|final
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|SimpleForm
name|iForm
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iHeader
decl_stmt|,
name|iFooter
decl_stmt|;
specifier|private
name|InstructorAttributePropertiesInterface
name|iProperties
decl_stmt|;
specifier|private
name|AttributeInterface
name|iAttribute
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
name|iName
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
name|iCode
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|iType
decl_stmt|;
specifier|private
name|ListBox
name|iParent
decl_stmt|;
specifier|private
name|Label
name|iDepartment
decl_stmt|;
specifier|private
name|int
name|iDepartmentRow
decl_stmt|;
specifier|private
name|CheckBox
name|iGlobal
decl_stmt|;
specifier|private
name|DepartmentInterface
name|iSelectedDepartment
decl_stmt|;
specifier|private
name|InstructorsTable
name|iInstructors
init|=
literal|null
decl_stmt|;
specifier|public
name|InstructorAttributeEdit
parameter_list|(
name|InstructorAttributePropertiesInterface
name|properties
parameter_list|)
block|{
name|iForm
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|iForm
operator|.
name|addStyleName
argument_list|(
literal|"unitime-InstructorAttributeEdit"
argument_list|)
expr_stmt|;
name|iProperties
operator|=
name|properties
expr_stmt|;
name|iHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|()
expr_stmt|;
name|ClickHandler
name|createOrUpdateFeature
init|=
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|validate
argument_list|()
condition|)
block|{
name|UpdateInstructorAttributeRequest
name|request
init|=
operator|new
name|UpdateInstructorAttributeRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setAttribute
argument_list|(
name|iAttribute
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iInstructors
operator|.
name|getRowCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|InstructorInterface
name|instructor
init|=
name|iInstructors
operator|.
name|getData
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|boolean
name|wasSelected
init|=
name|instructor
operator|.
name|hasAttribute
argument_list|(
name|iAttribute
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|boolean
name|selected
init|=
name|iInstructors
operator|.
name|isInstructorSelected
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|selected
operator|!=
name|wasSelected
condition|)
block|{
if|if
condition|(
name|selected
condition|)
name|request
operator|.
name|addInstructor
argument_list|(
name|instructor
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|request
operator|.
name|dropInstructor
argument_list|(
name|instructor
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|iAttribute
operator|.
name|getId
argument_list|()
operator|==
literal|null
condition|?
name|MESSAGES
operator|.
name|waitSavingInstructorAttribute
argument_list|()
else|:
name|MESSAGES
operator|.
name|waitUpdatingInstructorAttribute
argument_list|()
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|request
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|AttributeInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|String
name|message
init|=
operator|(
name|iAttribute
operator|.
name|getId
argument_list|()
operator|==
literal|null
condition|?
name|MESSAGES
operator|.
name|errorFailedToSaveInstructorAttribute
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
else|:
name|MESSAGES
operator|.
name|errorFailedToUpdateInstructorAttribute
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|)
decl_stmt|;
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|AttributeInterface
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|hide
argument_list|(
literal|true
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedValidationCheckForm
argument_list|()
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedValidationCheckForm
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"create"
argument_list|,
name|MESSAGES
operator|.
name|buttonCreateInstructorAttribute
argument_list|()
argument_list|,
literal|100
argument_list|,
name|createOrUpdateFeature
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"update"
argument_list|,
name|MESSAGES
operator|.
name|buttonUpdateInstructorAttribute
argument_list|()
argument_list|,
literal|100
argument_list|,
name|createOrUpdateFeature
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"delete"
argument_list|,
name|MESSAGES
operator|.
name|buttonDeleteInstructorAttribute
argument_list|()
argument_list|,
literal|100
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|UpdateInstructorAttributeRequest
name|request
init|=
operator|new
name|UpdateInstructorAttributeRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setDeleteAttributeId
argument_list|(
name|iAttribute
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitDeletingInstructorAttribute
argument_list|()
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|request
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|AttributeInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|String
name|message
init|=
name|MESSAGES
operator|.
name|errorFailedToDeleteInstructorAttribute
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
decl_stmt|;
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|AttributeInterface
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|hide
argument_list|(
literal|true
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"back"
argument_list|,
name|MESSAGES
operator|.
name|buttonBack
argument_list|()
argument_list|,
literal|100
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|hide
argument_list|(
literal|false
argument_list|,
name|iAttribute
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iHeader
argument_list|)
expr_stmt|;
name|iCode
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
argument_list|(
operator|new
name|TextBox
argument_list|()
argument_list|)
expr_stmt|;
name|iCode
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iCode
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|iCode
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"170px"
argument_list|)
expr_stmt|;
name|iCode
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iCode
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAbbreviation
argument_list|()
argument_list|,
name|iCode
argument_list|)
expr_stmt|;
name|iName
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
argument_list|(
operator|new
name|TextBox
argument_list|()
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|60
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"370px"
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iName
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propName
argument_list|()
argument_list|,
name|iName
argument_list|)
expr_stmt|;
name|iType
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propInstructorAttributeType
argument_list|()
argument_list|,
name|iType
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iType
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|setupParents
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iParent
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
name|iParent
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propInstructorAttributeParent
argument_list|()
argument_list|,
name|iParent
argument_list|)
expr_stmt|;
name|iGlobal
operator|=
operator|new
name|CheckBox
argument_list|()
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propGlobalInstructorAttribute
argument_list|()
argument_list|,
name|iGlobal
argument_list|)
expr_stmt|;
name|iGlobal
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iDepartmentRow
argument_list|,
operator|!
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|setupParents
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iDepartment
operator|=
operator|new
name|Label
argument_list|()
expr_stmt|;
name|iDepartmentRow
operator|=
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propDepartment
argument_list|()
argument_list|,
name|iDepartment
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|MESSAGES
operator|.
name|headerInstructors
argument_list|()
argument_list|)
expr_stmt|;
name|iInstructors
operator|=
operator|new
name|InstructorsTable
argument_list|(
name|iProperties
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iInstructors
operator|.
name|setWidth
argument_list|(
literal|"100%"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iInstructors
argument_list|)
expr_stmt|;
name|iInstructors
operator|.
name|addMouseClickListener
argument_list|(
operator|new
name|MouseClickListener
argument_list|<
name|InstructorInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseClick
parameter_list|(
name|TableEvent
argument_list|<
name|InstructorInterface
argument_list|>
name|event
parameter_list|)
block|{
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iFooter
operator|=
name|iHeader
operator|.
name|clonePanel
argument_list|()
expr_stmt|;
name|iForm
operator|.
name|addBottomRow
argument_list|(
name|iFooter
argument_list|)
expr_stmt|;
name|initWidget
argument_list|(
name|iForm
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|iProperties
operator|.
name|getAttributeTypes
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemSelect
argument_list|()
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
for|for
control|(
name|AttributeTypeInterface
name|type
range|:
name|iProperties
operator|.
name|getAttributeTypes
argument_list|()
control|)
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|type
operator|.
name|getLabel
argument_list|()
argument_list|,
name|type
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|hide
parameter_list|(
name|boolean
name|refresh
parameter_list|,
name|AttributeInterface
name|attribute
parameter_list|)
block|{
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|onHide
argument_list|(
name|refresh
argument_list|,
name|attribute
argument_list|)
expr_stmt|;
name|Window
operator|.
name|scrollTo
argument_list|(
name|iLastScrollLeft
argument_list|,
name|iLastScrollTop
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|onHide
parameter_list|(
name|boolean
name|refresh
parameter_list|,
name|AttributeInterface
name|feature
parameter_list|)
block|{
block|}
specifier|protected
name|void
name|onShow
parameter_list|()
block|{
block|}
specifier|private
name|int
name|iLastScrollTop
decl_stmt|,
name|iLastScrollLeft
decl_stmt|;
specifier|public
name|void
name|show
parameter_list|()
block|{
name|UniTimePageLabel
operator|.
name|getInstance
argument_list|()
operator|.
name|setPageName
argument_list|(
name|iAttribute
operator|.
name|getId
argument_list|()
operator|==
literal|null
condition|?
name|MESSAGES
operator|.
name|pageAddInstructorAttribute
argument_list|()
else|:
name|MESSAGES
operator|.
name|pageEditInstructorAttribute
argument_list|()
argument_list|)
expr_stmt|;
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iLastScrollLeft
operator|=
name|Window
operator|.
name|getScrollLeft
argument_list|()
expr_stmt|;
name|iLastScrollTop
operator|=
name|Window
operator|.
name|getScrollTop
argument_list|()
expr_stmt|;
name|onShow
argument_list|()
expr_stmt|;
name|Window
operator|.
name|scrollTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|hide
parameter_list|()
block|{
name|hide
argument_list|(
literal|true
argument_list|,
name|iAttribute
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|setupParents
parameter_list|()
block|{
name|iParent
operator|.
name|clear
argument_list|()
expr_stmt|;
name|GetInstructorAttributeParentsRequest
name|request
init|=
operator|new
name|GetInstructorAttributeParentsRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setAttributeId
argument_list|(
name|iAttribute
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setDepartmentId
argument_list|(
name|iGlobal
operator|.
name|getValue
argument_list|()
condition|?
literal|null
else|:
name|iSelectedDepartment
operator|==
literal|null
condition|?
literal|null
else|:
name|iSelectedDepartment
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setTypeId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|request
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|AttributeInterface
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|AttributeInterface
argument_list|>
name|result
parameter_list|)
block|{
name|iParent
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iParent
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemInstructorAttributeNoParent
argument_list|()
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
name|int
name|select
init|=
literal|0
decl_stmt|;
for|for
control|(
name|AttributeInterface
name|a
range|:
name|result
control|)
block|{
name|iParent
operator|.
name|addItem
argument_list|(
name|a
operator|.
name|getName
argument_list|()
argument_list|,
name|a
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|a
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|iAttribute
operator|.
name|getParentId
argument_list|()
argument_list|)
condition|)
name|select
operator|=
name|iParent
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
expr_stmt|;
block|}
name|iParent
operator|.
name|setSelectedIndex
argument_list|(
name|select
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setAttribute
parameter_list|(
name|AttributeInterface
name|attribute
parameter_list|,
name|DepartmentInterface
name|department
parameter_list|)
block|{
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iName
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iCode
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iType
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iSelectedDepartment
operator|=
name|department
expr_stmt|;
name|iDepartment
operator|.
name|setText
argument_list|(
name|department
operator|==
literal|null
condition|?
literal|""
else|:
name|department
operator|.
name|getDeptCode
argument_list|()
operator|+
literal|" - "
operator|+
name|department
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|attribute
operator|==
literal|null
condition|)
block|{
name|iAttribute
operator|=
operator|new
name|AttributeInterface
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"create"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"update"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"delete"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iCode
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iCode
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iGlobal
operator|.
name|setValue
argument_list|(
name|iSelectedDepartment
operator|==
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iGlobal
operator|.
name|setEnabled
argument_list|(
name|iProperties
operator|.
name|isCanAddGlobalAttribute
argument_list|()
operator|&&
name|iSelectedDepartment
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iAttribute
operator|=
operator|new
name|AttributeInterface
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"create"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"update"
argument_list|,
name|attribute
operator|.
name|canEdit
argument_list|()
operator|||
name|attribute
operator|.
name|canAssign
argument_list|()
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"delete"
argument_list|,
name|attribute
operator|.
name|canDelete
argument_list|()
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|attribute
operator|.
name|getName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|attribute
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
name|attribute
operator|.
name|canEdit
argument_list|()
argument_list|)
expr_stmt|;
name|iCode
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|attribute
operator|.
name|getCode
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|attribute
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
name|iCode
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
name|attribute
operator|.
name|canEdit
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|attribute
operator|.
name|getType
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|1
operator|+
name|iProperties
operator|.
name|getAttributeTypes
argument_list|()
operator|.
name|indexOf
argument_list|(
name|attribute
operator|.
name|getType
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
name|attribute
operator|.
name|canEdit
argument_list|()
operator|&&
name|attribute
operator|.
name|canChangeType
argument_list|()
argument_list|)
expr_stmt|;
name|iGlobal
operator|.
name|setValue
argument_list|(
operator|!
name|attribute
operator|.
name|isDepartmental
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iGlobal
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
name|setupParents
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setInstructors
parameter_list|(
name|List
argument_list|<
name|InstructorInterface
argument_list|>
name|instructors
parameter_list|)
block|{
name|iInstructors
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|iInstructors
operator|.
name|resetVisibility
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
name|clearErrorMessage
init|=
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
decl_stmt|;
if|if
condition|(
name|instructors
operator|!=
literal|null
condition|)
for|for
control|(
name|InstructorInterface
name|i
range|:
name|instructors
control|)
block|{
name|int
name|row
init|=
name|iInstructors
operator|.
name|addInstructor
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|boolean
name|selected
init|=
name|i
operator|.
name|hasAttribute
argument_list|(
name|iAttribute
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|iInstructors
operator|.
name|selectInstructor
argument_list|(
name|row
argument_list|,
name|selected
argument_list|)
expr_stmt|;
name|iInstructors
operator|.
name|setSelected
argument_list|(
name|row
argument_list|,
name|selected
argument_list|)
expr_stmt|;
name|iInstructors
operator|.
name|getInstructorSelection
argument_list|(
name|row
argument_list|)
operator|.
name|addValueChangeHandler
argument_list|(
name|clearErrorMessage
argument_list|)
expr_stmt|;
block|}
name|int
name|sort
init|=
name|InstructorCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|getSortInstructorsBy
argument_list|()
decl_stmt|;
if|if
condition|(
name|sort
operator|!=
literal|0
condition|)
name|iInstructors
operator|.
name|setSortBy
argument_list|(
name|sort
argument_list|)
expr_stmt|;
name|iInstructors
operator|.
name|setVisible
argument_list|(
name|iInstructors
operator|.
name|getRowCount
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|validate
parameter_list|()
block|{
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|iAttribute
operator|.
name|setName
argument_list|(
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iAttribute
operator|.
name|getName
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iName
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorNameIsEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
literal|false
expr_stmt|;
block|}
name|iAttribute
operator|.
name|setCode
argument_list|(
name|iCode
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iAttribute
operator|.
name|getCode
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iCode
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorAbbreviationIsEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
literal|false
expr_stmt|;
block|}
name|iAttribute
operator|.
name|setType
argument_list|(
name|iProperties
operator|.
name|getAttributeType
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|iAttribute
operator|.
name|getType
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iType
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorNoAttributeTypeSelected
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|iGlobal
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|iAttribute
operator|.
name|setDepartment
argument_list|(
name|iSelectedDepartment
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iAttribute
operator|.
name|setDepartment
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iParent
operator|.
name|getSelectedIndex
argument_list|()
operator|>
literal|0
condition|)
block|{
name|iAttribute
operator|.
name|setParentId
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iParent
operator|.
name|getValue
argument_list|(
name|iParent
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iAttribute
operator|.
name|setParentName
argument_list|(
name|iParent
operator|.
name|getItemText
argument_list|(
name|iParent
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iAttribute
operator|.
name|setParentId
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|iAttribute
operator|.
name|setParentName
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|AttributeInterface
name|getAttribute
parameter_list|()
block|{
return|return
name|iAttribute
return|;
block|}
block|}
end_class

end_unit

