begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeDialogBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTableHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|HasCellAlignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|HasColSpan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|HasStyleName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|MouseClickListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|TableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|PersonInterface
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|JavaScriptObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
operator|.
name|ScheduledCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Unit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyCodes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyUpEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyUpHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|DOM
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHorizontalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasValue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasVerticalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HorizontalPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ScrollPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|VerticalPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHorizontalAlignment
operator|.
name|HorizontalAlignmentConstant
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|Lookup
extends|extends
name|UniTimeDialogBox
implements|implements
name|HasValue
argument_list|<
name|PersonInterface
argument_list|>
block|{
specifier|public
specifier|static
specifier|final
name|GwtResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|VerticalPanel
name|iPanel
decl_stmt|;
specifier|private
name|UniTimeTable
argument_list|<
name|PersonInterface
argument_list|>
name|iTable
decl_stmt|;
specifier|private
name|ScrollPanel
name|iScroll
decl_stmt|;
specifier|private
name|TextBox
name|iQuery
decl_stmt|;
specifier|private
name|String
name|iOptions
decl_stmt|;
specifier|private
name|Timer
name|iTimer
decl_stmt|;
specifier|private
name|String
name|iLastQuery
init|=
literal|null
decl_stmt|;
specifier|private
name|PersonInterface
name|iValue
init|=
literal|null
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
name|Lookup
parameter_list|()
block|{
name|super
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|setText
argument_list|(
name|MESSAGES
operator|.
name|dialogPeopleLookup
argument_list|()
argument_list|)
expr_stmt|;
name|setEscapeToHide
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iPanel
operator|=
operator|new
name|VerticalPanel
argument_list|()
expr_stmt|;
name|iPanel
operator|.
name|setSpacing
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|iQuery
operator|=
operator|new
name|TextBox
argument_list|()
expr_stmt|;
name|iQuery
operator|.
name|setWidth
argument_list|(
literal|"400px"
argument_list|)
expr_stmt|;
name|HorizontalPanel
name|queryPanel
init|=
operator|new
name|HorizontalPanel
argument_list|()
decl_stmt|;
name|Label
name|filterText
init|=
operator|new
name|Label
argument_list|(
name|MESSAGES
operator|.
name|propName
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|filterText
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setMarginRight
argument_list|(
literal|5
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|queryPanel
operator|.
name|setWidth
argument_list|(
literal|"75px"
argument_list|)
expr_stmt|;
name|queryPanel
operator|.
name|add
argument_list|(
name|filterText
argument_list|)
expr_stmt|;
name|queryPanel
operator|.
name|setCellHorizontalAlignment
argument_list|(
name|filterText
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|queryPanel
operator|.
name|setCellVerticalAlignment
argument_list|(
name|filterText
argument_list|,
name|HasVerticalAlignment
operator|.
name|ALIGN_MIDDLE
argument_list|)
expr_stmt|;
name|queryPanel
operator|.
name|add
argument_list|(
name|iQuery
argument_list|)
expr_stmt|;
name|HTML
name|blank
init|=
operator|new
name|HTML
argument_list|(
literal|"&nbsp;"
argument_list|)
decl_stmt|;
name|blank
operator|.
name|setWidth
argument_list|(
literal|"75px"
argument_list|)
expr_stmt|;
name|queryPanel
operator|.
name|add
argument_list|(
name|blank
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|add
argument_list|(
name|queryPanel
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|setCellHorizontalAlignment
argument_list|(
name|queryPanel
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_CENTER
argument_list|)
expr_stmt|;
name|iTable
operator|=
operator|new
name|UniTimeTable
argument_list|<
name|PersonInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iScroll
operator|=
operator|new
name|ScrollPanel
argument_list|(
name|iTable
argument_list|)
expr_stmt|;
name|iScroll
operator|.
name|setSize
argument_list|(
literal|"800px"
argument_list|,
literal|"500px"
argument_list|)
expr_stmt|;
name|iScroll
operator|.
name|setStyleName
argument_list|(
literal|"unitime-ScrollPanel"
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|add
argument_list|(
name|iScroll
argument_list|)
expr_stmt|;
name|setWidget
argument_list|(
name|iPanel
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|UniTimeTableHeader
argument_list|>
name|header
init|=
operator|new
name|ArrayList
argument_list|<
name|UniTimeTableHeader
argument_list|>
argument_list|()
decl_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colEmail
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colPhone
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colDepartment
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colSource
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iTable
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|header
argument_list|)
expr_stmt|;
name|iTable
operator|.
name|setAllowSelection
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iTable
operator|.
name|setWidth
argument_list|(
literal|"100%"
argument_list|)
expr_stmt|;
name|iTimer
operator|=
operator|new
name|Timer
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|update
argument_list|()
expr_stmt|;
block|}
block|}
expr_stmt|;
name|iTable
operator|.
name|addMouseClickListener
argument_list|(
operator|new
name|MouseClickListener
argument_list|<
name|PersonInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseClick
parameter_list|(
name|TableEvent
argument_list|<
name|PersonInterface
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getData
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|iTimer
operator|.
name|cancel
argument_list|()
expr_stmt|;
name|Lookup
operator|.
name|this
operator|.
name|hide
argument_list|()
expr_stmt|;
name|setValue
argument_list|(
name|event
operator|.
name|getData
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iQuery
operator|.
name|addKeyUpHandler
argument_list|(
operator|new
name|KeyUpHandler
argument_list|()
block|{
specifier|public
name|void
name|onKeyUp
parameter_list|(
name|KeyUpEvent
name|event
parameter_list|)
block|{
name|iTimer
operator|.
name|schedule
argument_list|(
literal|500
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|sinkEvents
argument_list|(
name|Event
operator|.
name|ONKEYDOWN
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|scrollToSelectedRow
parameter_list|()
block|{
name|int
name|row
init|=
name|iTable
operator|.
name|getSelectedRow
argument_list|()
decl_stmt|;
if|if
condition|(
name|row
operator|<
literal|0
condition|)
return|return;
name|Element
name|scroll
init|=
name|iScroll
operator|.
name|getElement
argument_list|()
decl_stmt|;
name|Element
name|item
init|=
name|iTable
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|getElement
argument_list|(
name|iTable
operator|.
name|getSelectedRow
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|==
literal|null
condition|)
return|return;
name|int
name|realOffset
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|item
operator|!=
literal|null
operator|&&
operator|!
name|item
operator|.
name|equals
argument_list|(
name|scroll
argument_list|)
condition|)
block|{
name|realOffset
operator|+=
name|item
operator|.
name|getOffsetTop
argument_list|()
expr_stmt|;
name|item
operator|=
name|item
operator|.
name|getOffsetParent
argument_list|()
expr_stmt|;
block|}
name|scroll
operator|.
name|setScrollTop
argument_list|(
name|realOffset
operator|-
name|scroll
operator|.
name|getOffsetHeight
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onBrowserEvent
parameter_list|(
specifier|final
name|Event
name|event
parameter_list|)
block|{
switch|switch
condition|(
name|DOM
operator|.
name|eventGetType
argument_list|(
name|event
argument_list|)
condition|)
block|{
case|case
name|Event
operator|.
name|ONKEYDOWN
case|:
if|if
condition|(
name|event
operator|.
name|getKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_DOWN
operator|&&
name|iTable
operator|.
name|getRowCount
argument_list|()
operator|>
literal|1
operator|&&
name|iTable
operator|.
name|getData
argument_list|(
literal|1
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|int
name|row
init|=
name|iTable
operator|.
name|getSelectedRow
argument_list|()
decl_stmt|;
if|if
condition|(
name|row
operator|>=
literal|0
condition|)
name|iTable
operator|.
name|setSelected
argument_list|(
name|row
argument_list|,
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|row
operator|<
literal|0
condition|)
block|{
name|row
operator|=
literal|1
expr_stmt|;
block|}
else|else
block|{
name|row
operator|++
expr_stmt|;
block|}
if|if
condition|(
name|row
operator|>=
name|iTable
operator|.
name|getRowCount
argument_list|()
condition|)
name|row
operator|=
literal|1
expr_stmt|;
name|iTable
operator|.
name|setSelected
argument_list|(
name|row
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|scrollToSelectedRow
argument_list|()
expr_stmt|;
name|event
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
name|event
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|event
operator|.
name|getKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_UP
operator|&&
name|iTable
operator|.
name|getRowCount
argument_list|()
operator|>
literal|1
operator|&&
name|iTable
operator|.
name|getData
argument_list|(
literal|1
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|int
name|row
init|=
name|iTable
operator|.
name|getSelectedRow
argument_list|()
decl_stmt|;
if|if
condition|(
name|row
operator|>=
literal|0
condition|)
name|iTable
operator|.
name|setSelected
argument_list|(
name|row
argument_list|,
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|row
operator|<
literal|0
condition|)
block|{
name|row
operator|=
name|iTable
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
expr_stmt|;
block|}
else|else
block|{
name|row
operator|--
expr_stmt|;
block|}
if|if
condition|(
name|row
operator|<=
literal|0
condition|)
name|row
operator|=
name|iTable
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
expr_stmt|;
empty_stmt|;
name|iTable
operator|.
name|setSelected
argument_list|(
name|row
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|scrollToSelectedRow
argument_list|()
expr_stmt|;
name|event
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
name|event
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|event
operator|.
name|getKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_ENTER
condition|)
block|{
name|int
name|row
init|=
name|iTable
operator|.
name|getSelectedRow
argument_list|()
decl_stmt|;
if|if
condition|(
name|row
operator|>=
literal|0
condition|)
block|{
name|PersonInterface
name|person
init|=
name|iTable
operator|.
name|getData
argument_list|(
name|row
argument_list|)
decl_stmt|;
if|if
condition|(
name|person
operator|!=
literal|null
condition|)
block|{
name|iTimer
operator|.
name|cancel
argument_list|()
expr_stmt|;
name|Lookup
operator|.
name|this
operator|.
name|hide
argument_list|()
expr_stmt|;
name|setValue
argument_list|(
name|person
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
break|break;
block|}
block|}
specifier|public
name|void
name|setQuery
parameter_list|(
name|String
name|query
parameter_list|)
block|{
name|iQuery
operator|.
name|setText
argument_list|(
name|query
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setOptions
parameter_list|(
name|String
name|options
parameter_list|)
block|{
name|iOptions
operator|=
name|options
expr_stmt|;
block|}
specifier|public
name|void
name|update
parameter_list|()
block|{
specifier|final
name|String
name|q
init|=
name|iQuery
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
if|if
condition|(
name|q
operator|.
name|equals
argument_list|(
name|iLastQuery
argument_list|)
condition|)
return|return;
if|if
condition|(
name|q
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iTable
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
return|return;
block|}
name|iTable
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Widget
argument_list|>
name|line
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|LoadingImage
argument_list|()
argument_list|)
expr_stmt|;
name|iTable
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|line
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|PersonInterface
operator|.
name|LookupRequest
argument_list|(
name|q
argument_list|,
name|iOptions
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|PersonInterface
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|PersonInterface
argument_list|>
name|result
parameter_list|)
block|{
name|iLastQuery
operator|=
name|q
expr_stmt|;
name|iTable
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|boolean
name|hasId
init|=
literal|true
decl_stmt|;
for|for
control|(
name|PersonInterface
name|person
range|:
name|result
control|)
block|{
name|List
argument_list|<
name|Widget
argument_list|>
name|line
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|person
operator|.
name|getName
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|person
operator|.
name|getEmail
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|person
operator|.
name|getPhone
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|person
operator|.
name|getDepartment
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|person
operator|.
name|getSource
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iTable
operator|.
name|addRow
argument_list|(
name|person
argument_list|,
name|line
argument_list|)
expr_stmt|;
if|if
condition|(
name|person
operator|.
name|getId
argument_list|()
operator|==
literal|null
operator|||
name|person
operator|.
name|getId
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|||
literal|"null"
operator|.
name|equals
argument_list|(
name|person
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
block|{
name|int
name|row
init|=
name|iTable
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|col
init|=
literal|0
init|;
name|col
operator|<
name|iTable
operator|.
name|getCellCount
argument_list|(
name|row
argument_list|)
condition|;
name|col
operator|++
control|)
name|iTable
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|row
argument_list|,
name|col
argument_list|,
literal|"unitime-Disabled"
argument_list|)
expr_stmt|;
if|if
condition|(
name|hasId
condition|)
block|{
name|hasId
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|row
operator|>
literal|1
condition|)
for|for
control|(
name|int
name|col
init|=
literal|0
init|;
name|col
operator|<
name|iTable
operator|.
name|getCellCount
argument_list|(
name|row
argument_list|)
condition|;
name|col
operator|++
control|)
name|iTable
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|row
argument_list|,
name|col
argument_list|,
literal|"unitime-TopLineDash"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|List
argument_list|<
name|Widget
argument_list|>
name|line
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|ErrorLine
argument_list|(
name|MESSAGES
operator|.
name|errorNoPersonMatchingQuery
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|iTable
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|line
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iTable
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Widget
argument_list|>
name|line
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|line
operator|.
name|add
argument_list|(
operator|new
name|ErrorLine
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|iTable
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|line
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|ErrorLine
extends|extends
name|Label
implements|implements
name|HasColSpan
implements|,
name|HasStyleName
block|{
specifier|private
name|boolean
name|iError
decl_stmt|;
specifier|public
name|ErrorLine
parameter_list|(
name|String
name|text
parameter_list|,
name|boolean
name|error
parameter_list|)
block|{
name|super
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|iError
operator|=
name|error
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getColSpan
parameter_list|()
block|{
return|return
literal|5
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getStyleName
parameter_list|()
block|{
return|return
operator|(
name|iError
condition|?
literal|"unitime-ErrorMessage"
else|:
literal|"unitime-Message"
operator|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|LoadingImage
extends|extends
name|Image
implements|implements
name|HasColSpan
implements|,
name|HasCellAlignment
block|{
specifier|public
name|LoadingImage
parameter_list|()
block|{
name|super
argument_list|(
name|RESOURCES
operator|.
name|loading_small
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getColSpan
parameter_list|()
block|{
return|return
literal|5
return|;
block|}
annotation|@
name|Override
specifier|public
name|HorizontalAlignmentConstant
name|getCellAlignment
parameter_list|()
block|{
return|return
name|HasHorizontalAlignment
operator|.
name|ALIGN_CENTER
return|;
block|}
block|}
specifier|public
specifier|static
specifier|native
name|void
name|createTriggers
parameter_list|()
comment|/*-{ 		$wnd.peopleLookup = function(query, callback, options) { 			@org.unitime.timetable.gwt.client.Lookup::peopleLookup(Ljava/lang/String;Lcom/google/gwt/core/client/JavaScriptObject;Ljava/lang/String;)(query,callback,options); 		}; 	}-*/
function_decl|;
specifier|public
name|void
name|center
parameter_list|()
block|{
name|super
operator|.
name|center
argument_list|()
expr_stmt|;
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|iLastQuery
operator|=
literal|null
expr_stmt|;
name|iQuery
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iQuery
operator|.
name|selectAll
argument_list|()
expr_stmt|;
name|update
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|peopleLookup
parameter_list|(
name|String
name|query
parameter_list|,
specifier|final
name|JavaScriptObject
name|callback
parameter_list|,
name|String
name|options
parameter_list|)
block|{
specifier|final
name|Lookup
name|lookup
init|=
operator|new
name|Lookup
argument_list|()
decl_stmt|;
if|if
condition|(
name|query
operator|!=
literal|null
operator|&&
operator|!
name|query
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|lookup
operator|.
name|setQuery
argument_list|(
name|query
argument_list|)
expr_stmt|;
name|lookup
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|PersonInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|PersonInterface
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
condition|)
name|lookup
operator|.
name|fireCallback
argument_list|(
name|callback
argument_list|,
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getFirstName
argument_list|()
argument_list|,
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getMiddleName
argument_list|()
argument_list|,
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getLastName
argument_list|()
argument_list|,
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getEmail
argument_list|()
argument_list|,
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getPhone
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|lookup
operator|.
name|setOptions
argument_list|(
name|options
argument_list|)
expr_stmt|;
name|lookup
operator|.
name|center
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|native
name|void
name|fireCallback
parameter_list|(
name|JavaScriptObject
name|callback
parameter_list|,
name|String
modifier|...
name|person
parameter_list|)
comment|/*-{ 		callback(person); 	}-*/
function_decl|;
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addValueChangeHandler
parameter_list|(
name|ValueChangeHandler
argument_list|<
name|PersonInterface
argument_list|>
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|ValueChangeEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|PersonInterface
name|getValue
parameter_list|()
block|{
return|return
name|iValue
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|PersonInterface
name|value
parameter_list|)
block|{
name|setValue
argument_list|(
name|value
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|PersonInterface
name|value
parameter_list|,
name|boolean
name|fireEvents
parameter_list|)
block|{
name|iValue
operator|=
name|value
expr_stmt|;
if|if
condition|(
name|fireEvents
condition|)
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|this
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

