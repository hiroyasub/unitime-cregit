begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 (University Timetabling Application)  * Copyright (C) 2012, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|GwtHint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|rooms
operator|.
name|RoomHint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|FilterBox
operator|.
name|Chip
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|P
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeDialogBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|TimeSelector
operator|.
name|TimeUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|AcademicSessionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EventRoomAvailabilityRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EventRoomAvailabilityRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EventType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|MeetingConflictInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|MeetingInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|ResourceInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|ResourceType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|FilterRpcResponse
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Cursor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Overflow
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Unit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyCodes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseDownEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseDownHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseOutEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseOutHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseOverEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseOverHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|CloseEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|CloseHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|i18n
operator|.
name|client
operator|.
name|DateTimeFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|DOM
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Event
operator|.
name|NativePreviewEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|MenuBar
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|MenuItem
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|PopupPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|RootPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ScrollPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|UIObject
import|;
end_import

begin_class
specifier|public
class|class
name|AddMeetingsDialog
extends|extends
name|UniTimeDialogBox
block|{
specifier|private
specifier|static
specifier|final
name|GwtConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|DateTimeFormat
name|sDayOfWeek
init|=
name|DateTimeFormat
operator|.
name|getFormat
argument_list|(
literal|"EEEE"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|DateTimeFormat
name|sDateFormat
init|=
name|DateTimeFormat
operator|.
name|getFormat
argument_list|(
name|CONSTANTS
operator|.
name|eventDateFormat
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|SimpleForm
name|iDatesForm
decl_stmt|,
name|iAvailabilityForm
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iDatesHeader
decl_stmt|,
name|iAvailabilityHeader
decl_stmt|;
specifier|private
name|P
name|iRoomAvailability
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|iSelected
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|EventRoomAvailabilityRpcResponse
name|iResponse
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|P
argument_list|>
name|iPanels
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|P
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|StartEndTimeSelector
name|iTimes
decl_stmt|;
specifier|private
name|SessionDatesSelector
name|iDates
decl_stmt|;
specifier|private
name|RoomFilterBox
name|iRooms
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Entity
argument_list|>
name|iMatchingRooms
decl_stmt|;
specifier|private
name|ScrollPanel
name|iScrollDates
decl_stmt|;
specifier|private
name|ScrollPanel
name|iScrollRooms
decl_stmt|;
specifier|private
name|int
name|iIndex
init|=
literal|0
decl_stmt|,
name|iStep
init|=
literal|10
decl_stmt|;
specifier|private
name|Long
name|iEventId
init|=
literal|null
decl_stmt|;
specifier|private
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|MeetingInterface
argument_list|>
argument_list|>
name|iCallback
decl_stmt|;
specifier|private
name|AcademicSessionProvider
name|iSession
decl_stmt|;
specifier|public
name|AddMeetingsDialog
parameter_list|(
name|AcademicSessionProvider
name|session
parameter_list|,
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|MeetingInterface
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
name|super
argument_list|(
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|setAnimationEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iCallback
operator|=
name|callback
expr_stmt|;
name|iSession
operator|=
name|session
expr_stmt|;
name|setText
argument_list|(
name|MESSAGES
operator|.
name|dialogAddMeetings
argument_list|()
argument_list|)
expr_stmt|;
name|setEscapeToHide
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iDatesForm
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|iDatesHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|()
expr_stmt|;
name|iDatesHeader
operator|.
name|addButton
argument_list|(
literal|"next"
argument_list|,
name|MESSAGES
operator|.
name|buttonNext
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iDates
operator|.
name|getSelectedDaysCount
argument_list|()
operator|==
literal|0
condition|)
block|{
name|iDatesHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorNoDateSelected
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitCheckingRoomAvailability
argument_list|()
argument_list|)
expr_stmt|;
name|iRooms
operator|.
name|getElements
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|Entity
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iDatesHeader
operator|.
name|setErrorMessage
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|List
argument_list|<
name|Entity
argument_list|>
name|result
parameter_list|)
block|{
name|iMatchingRooms
operator|=
name|result
expr_stmt|;
if|if
condition|(
name|result
operator|==
literal|null
operator|||
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iDatesHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|errorNoMatchingRooms
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iDates
operator|.
name|getSelectedDaysCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|iDatesHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|EventRoomAvailabilityRpcRequest
operator|.
name|checkAvailability
argument_list|(
name|getStartSlot
argument_list|()
argument_list|,
name|getEndSlot
argument_list|()
argument_list|,
name|getDates
argument_list|()
argument_list|,
name|getRooms
argument_list|()
argument_list|,
name|iEventId
argument_list|,
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|EventRoomAvailabilityRpcResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iDatesHeader
operator|.
name|setErrorMessage
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|EventRoomAvailabilityRpcResponse
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|populate
argument_list|(
name|result
argument_list|,
literal|0
argument_list|,
name|EventCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|getRoomsSortBy
argument_list|()
argument_list|)
expr_stmt|;
name|setWidget
argument_list|(
name|iAvailabilityForm
argument_list|)
expr_stmt|;
name|recenter
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iDatesForm
operator|.
name|addHeaderRow
argument_list|(
name|iDatesHeader
argument_list|)
expr_stmt|;
name|SimpleForm
name|form
init|=
operator|new
name|SimpleForm
argument_list|()
decl_stmt|;
name|form
operator|.
name|removeStyleName
argument_list|(
literal|"unitime-NotPrintableBottomLine"
argument_list|)
expr_stmt|;
name|iDates
operator|=
operator|new
name|SessionDatesSelector
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|form
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propDates
argument_list|()
argument_list|,
name|iDates
argument_list|)
expr_stmt|;
name|iTimes
operator|=
operator|new
name|StartEndTimeSelector
argument_list|()
expr_stmt|;
name|form
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propTimes
argument_list|()
argument_list|,
name|iTimes
argument_list|)
expr_stmt|;
name|iRooms
operator|=
operator|new
name|RoomFilterBox
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|form
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propLocations
argument_list|()
argument_list|,
name|iRooms
argument_list|)
expr_stmt|;
name|iScrollDates
operator|=
operator|new
name|ScrollPanel
argument_list|(
name|form
argument_list|)
expr_stmt|;
name|iScrollDates
operator|.
name|setStyleName
argument_list|(
literal|"unitime-VerticalScrollPanel"
argument_list|)
expr_stmt|;
name|iDatesForm
operator|.
name|addRow
argument_list|(
name|iScrollDates
argument_list|)
expr_stmt|;
name|iDatesForm
operator|.
name|addBottomRow
argument_list|(
name|iDatesHeader
operator|.
name|clonePanel
argument_list|()
argument_list|)
expr_stmt|;
name|iAvailabilityForm
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|iAvailabilityHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|()
expr_stmt|;
name|iAvailabilityHeader
operator|.
name|addButton
argument_list|(
literal|"dates"
argument_list|,
name|MESSAGES
operator|.
name|buttonPrevious
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|setWidget
argument_list|(
name|iDatesForm
argument_list|)
expr_stmt|;
name|recenter
argument_list|()
expr_stmt|;
name|iResponse
operator|=
literal|null
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iAvailabilityHeader
operator|.
name|addButton
argument_list|(
literal|"prev"
argument_list|,
name|MESSAGES
operator|.
name|buttonLeft
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|populate
argument_list|(
name|iResponse
argument_list|,
name|iIndex
operator|-
name|iStep
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|recenter
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iAvailabilityHeader
operator|.
name|addButton
argument_list|(
literal|"next"
argument_list|,
name|MESSAGES
operator|.
name|buttonRight
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|populate
argument_list|(
name|iResponse
argument_list|,
name|iIndex
operator|+
name|iStep
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|recenter
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iAvailabilityHeader
operator|.
name|addButton
argument_list|(
literal|"sort"
argument_list|,
name|MESSAGES
operator|.
name|buttonSortBy
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
specifier|final
name|PopupPanel
name|popup
init|=
operator|new
name|PopupPanel
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|MenuBar
name|menu
init|=
operator|new
name|MenuBar
argument_list|(
literal|true
argument_list|)
decl_stmt|;
for|for
control|(
specifier|final
name|SortRoomsBy
name|sortBy
range|:
name|SortRoomsBy
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|sortBy
operator|==
name|SortRoomsBy
operator|.
name|DISTANCE
operator|&&
operator|!
name|iRooms
operator|.
name|hasChip
argument_list|(
operator|new
name|Chip
argument_list|(
literal|"flag"
argument_list|,
literal|"Nearby"
argument_list|)
argument_list|)
condition|)
continue|continue;
name|MenuItem
name|item
init|=
operator|new
name|MenuItem
argument_list|(
name|MESSAGES
operator|.
name|opSortBy
argument_list|(
name|getSortRoomsByName
argument_list|(
name|sortBy
argument_list|)
argument_list|)
argument_list|,
literal|true
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|popup
operator|.
name|hide
argument_list|()
expr_stmt|;
name|EventCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|setSortRoomsBy
argument_list|(
name|sortBy
operator|.
name|ordinal
argument_list|()
argument_list|)
expr_stmt|;
name|populate
argument_list|(
name|iResponse
argument_list|,
literal|0
argument_list|,
name|sortBy
operator|.
name|ordinal
argument_list|()
argument_list|)
expr_stmt|;
name|recenter
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|item
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setCursor
argument_list|(
name|Cursor
operator|.
name|POINTER
argument_list|)
expr_stmt|;
name|menu
operator|.
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
name|menu
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|menu
operator|.
name|setFocusOnHoverEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|popup
operator|.
name|add
argument_list|(
name|menu
argument_list|)
expr_stmt|;
name|popup
operator|.
name|showRelativeTo
argument_list|(
operator|(
name|UIObject
operator|)
name|event
operator|.
name|getSource
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|MenuBar
operator|)
name|popup
operator|.
name|getWidget
argument_list|()
operator|)
operator|.
name|focus
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iAvailabilityHeader
operator|.
name|addButton
argument_list|(
literal|"select"
argument_list|,
name|MESSAGES
operator|.
name|buttonSelect
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|hide
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|MeetingInterface
argument_list|>
name|meetings
init|=
operator|new
name|ArrayList
argument_list|<
name|MeetingInterface
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Integer
name|date
range|:
name|getDates
argument_list|()
control|)
block|{
for|for
control|(
name|Entity
name|room
range|:
name|getRooms
argument_list|()
control|)
block|{
if|if
condition|(
name|isSelected
argument_list|(
name|date
argument_list|,
name|room
argument_list|)
condition|)
block|{
name|MeetingInterface
name|meeting
init|=
operator|new
name|MeetingInterface
argument_list|()
decl_stmt|;
name|meeting
operator|.
name|setDayOfYear
argument_list|(
name|date
argument_list|)
expr_stmt|;
name|meeting
operator|.
name|setStartSlot
argument_list|(
name|getStartSlot
argument_list|()
argument_list|)
expr_stmt|;
name|meeting
operator|.
name|setEndSlot
argument_list|(
name|getEndSlot
argument_list|()
argument_list|)
expr_stmt|;
name|meeting
operator|.
name|setStartOffset
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|meeting
operator|.
name|setEndOffset
argument_list|(
operator|-
name|Integer
operator|.
name|parseInt
argument_list|(
name|room
operator|.
name|getProperty
argument_list|(
literal|"breakTime"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ResourceInterface
name|location
init|=
operator|new
name|ResourceInterface
argument_list|()
decl_stmt|;
name|location
operator|.
name|setId
argument_list|(
name|room
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|location
operator|.
name|setType
argument_list|(
name|ResourceType
operator|.
name|ROOM
argument_list|)
expr_stmt|;
name|location
operator|.
name|setName
argument_list|(
name|room
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|location
operator|.
name|setSize
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|room
operator|.
name|getProperty
argument_list|(
literal|"capacity"
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|meeting
operator|.
name|setLocation
argument_list|(
name|location
argument_list|)
expr_stmt|;
name|meeting
operator|.
name|setConflicts
argument_list|(
name|getConflicts
argument_list|(
name|date
argument_list|,
name|room
argument_list|)
argument_list|)
expr_stmt|;
name|meetings
operator|.
name|add
argument_list|(
name|meeting
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|iCallback
operator|.
name|onSuccess
argument_list|(
name|meetings
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iAvailabilityForm
operator|.
name|addHeaderRow
argument_list|(
name|iAvailabilityHeader
argument_list|)
expr_stmt|;
name|iRoomAvailability
operator|=
operator|new
name|P
argument_list|(
literal|"unitime-MeetingSelection"
argument_list|)
expr_stmt|;
name|iScrollRooms
operator|=
operator|new
name|ScrollPanel
argument_list|(
name|iRoomAvailability
argument_list|)
expr_stmt|;
name|iAvailabilityForm
operator|.
name|addRow
argument_list|(
name|iScrollRooms
argument_list|)
expr_stmt|;
name|iAvailabilityForm
operator|.
name|addNotPrintableBottomRow
argument_list|(
name|iAvailabilityHeader
operator|.
name|clonePanel
argument_list|()
argument_list|)
expr_stmt|;
name|setWidget
argument_list|(
name|iDatesForm
argument_list|)
expr_stmt|;
name|addCloseHandler
argument_list|(
operator|new
name|CloseHandler
argument_list|<
name|PopupPanel
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClose
parameter_list|(
name|CloseEvent
argument_list|<
name|PopupPanel
argument_list|>
name|event
parameter_list|)
block|{
name|RootPanel
operator|.
name|getBodyElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setOverflow
argument_list|(
name|Overflow
operator|.
name|AUTO
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|static
enum|enum
name|SortRoomsBy
block|{
name|CAPACITY
block|,
name|NAME
block|,
name|DISTANCE
block|,
name|AVAILABILITY
block|}
specifier|public
specifier|static
name|String
name|getSortRoomsByName
parameter_list|(
name|SortRoomsBy
name|sortBy
parameter_list|)
block|{
switch|switch
condition|(
name|sortBy
condition|)
block|{
case|case
name|CAPACITY
case|:
return|return
name|MESSAGES
operator|.
name|colCapacity
argument_list|()
return|;
case|case
name|NAME
case|:
return|return
name|MESSAGES
operator|.
name|colName
argument_list|()
return|;
case|case
name|DISTANCE
case|:
return|return
name|MESSAGES
operator|.
name|colRoomDistance
argument_list|()
return|;
case|case
name|AVAILABILITY
case|:
return|return
name|MESSAGES
operator|.
name|colRoomAvailability
argument_list|()
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|Comparator
argument_list|<
name|Entity
argument_list|>
name|getSortRoomsComparator
parameter_list|(
name|SortRoomsBy
name|sortBy
parameter_list|,
specifier|final
name|boolean
name|preferSize
parameter_list|,
specifier|final
name|List
argument_list|<
name|Integer
argument_list|>
name|dates
parameter_list|,
specifier|final
name|EventRoomAvailabilityRpcResponse
name|availability
parameter_list|)
block|{
switch|switch
condition|(
name|sortBy
condition|)
block|{
case|case
name|CAPACITY
case|:
return|return
operator|new
name|Comparator
argument_list|<
name|Entity
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|int
name|compare
parameter_list|(
name|Entity
name|r1
parameter_list|,
name|Entity
name|r2
parameter_list|)
block|{
name|int
name|cmp
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|r1
operator|.
name|getProperty
argument_list|(
literal|"capacity"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
operator|.
name|compareTo
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|r2
operator|.
name|getProperty
argument_list|(
literal|"capacity"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
name|cmp
operator|=
name|r1
operator|.
name|getName
argument_list|()
operator|.
name|compareTo
argument_list|(
name|r2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|(
name|cmp
operator|==
literal|0
condition|?
name|r1
operator|.
name|getUniqueId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|r2
operator|.
name|getUniqueId
argument_list|()
argument_list|)
else|:
name|cmp
operator|)
return|;
block|}
block|}
return|;
case|case
name|NAME
case|:
return|return
operator|new
name|Comparator
argument_list|<
name|Entity
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|int
name|compare
parameter_list|(
name|Entity
name|r1
parameter_list|,
name|Entity
name|r2
parameter_list|)
block|{
name|int
name|cmp
init|=
name|r1
operator|.
name|getName
argument_list|()
operator|.
name|compareTo
argument_list|(
name|r2
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
return|return
operator|(
name|cmp
operator|==
literal|0
condition|?
name|r1
operator|.
name|getUniqueId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|r2
operator|.
name|getUniqueId
argument_list|()
argument_list|)
else|:
name|cmp
operator|)
return|;
block|}
block|}
return|;
case|case
name|DISTANCE
case|:
return|return
operator|new
name|Comparator
argument_list|<
name|Entity
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|int
name|compare
parameter_list|(
name|Entity
name|r1
parameter_list|,
name|Entity
name|r2
parameter_list|)
block|{
name|int
name|cmp
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|r1
operator|.
name|getProperty
argument_list|(
literal|"distance"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
operator|.
name|compareTo
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|r2
operator|.
name|getProperty
argument_list|(
literal|"distance"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
if|if
condition|(
name|preferSize
condition|)
block|{
name|cmp
operator|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|r1
operator|.
name|getProperty
argument_list|(
literal|"capacity"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
operator|.
name|compareTo
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|r2
operator|.
name|getProperty
argument_list|(
literal|"capacity"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
block|}
name|cmp
operator|=
name|r1
operator|.
name|getName
argument_list|()
operator|.
name|compareTo
argument_list|(
name|r2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|(
name|cmp
operator|==
literal|0
condition|?
name|r1
operator|.
name|getUniqueId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|r2
operator|.
name|getUniqueId
argument_list|()
argument_list|)
else|:
name|cmp
operator|)
return|;
block|}
block|}
return|;
case|case
name|AVAILABILITY
case|:
return|return
operator|new
name|Comparator
argument_list|<
name|Entity
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|int
name|compare
parameter_list|(
name|Entity
name|r1
parameter_list|,
name|Entity
name|r2
parameter_list|)
block|{
name|Long
name|p1
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|r1
operator|.
name|getProperty
argument_list|(
literal|"permId"
argument_list|,
literal|"-1"
argument_list|)
argument_list|)
decl_stmt|;
name|Long
name|p2
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|r2
operator|.
name|getProperty
argument_list|(
literal|"permId"
argument_list|,
literal|"-1"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|a1
init|=
literal|0
decl_stmt|,
name|a2
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Integer
name|date
range|:
name|dates
control|)
block|{
name|Set
argument_list|<
name|MeetingConflictInterface
argument_list|>
name|c1
init|=
name|availability
operator|.
name|getOverlaps
argument_list|(
name|date
argument_list|,
name|p1
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|MeetingConflictInterface
argument_list|>
name|c2
init|=
name|availability
operator|.
name|getOverlaps
argument_list|(
name|date
argument_list|,
name|p2
argument_list|)
decl_stmt|;
if|if
condition|(
name|c1
operator|==
literal|null
operator|||
name|c1
operator|.
name|isEmpty
argument_list|()
condition|)
name|a1
operator|++
expr_stmt|;
if|if
condition|(
name|c2
operator|==
literal|null
operator|||
name|c2
operator|.
name|isEmpty
argument_list|()
condition|)
name|a2
operator|++
expr_stmt|;
block|}
if|if
condition|(
name|a1
operator|>
name|a2
condition|)
return|return
operator|-
literal|1
return|;
if|if
condition|(
name|a1
operator|<
name|a2
condition|)
return|return
literal|1
return|;
name|int
name|cmp
init|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|r1
operator|.
name|getProperty
argument_list|(
literal|"distance"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
operator|.
name|compareTo
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|r2
operator|.
name|getProperty
argument_list|(
literal|"distance"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
if|if
condition|(
name|preferSize
condition|)
block|{
name|cmp
operator|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|r1
operator|.
name|getProperty
argument_list|(
literal|"capacity"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
operator|.
name|compareTo
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|r2
operator|.
name|getProperty
argument_list|(
literal|"capacity"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
block|}
name|cmp
operator|=
name|r1
operator|.
name|getName
argument_list|()
operator|.
name|compareTo
argument_list|(
name|r2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|(
name|cmp
operator|==
literal|0
condition|?
name|r1
operator|.
name|getUniqueId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|r2
operator|.
name|getUniqueId
argument_list|()
argument_list|)
else|:
name|cmp
operator|)
return|;
block|}
block|}
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
name|void
name|showDialog
parameter_list|(
name|Long
name|eventId
parameter_list|)
block|{
name|iStep
operator|=
operator|(
name|Window
operator|.
name|getClientWidth
argument_list|()
operator|-
literal|300
operator|)
operator|/
literal|105
expr_stmt|;
name|ToolBox
operator|.
name|setMaxHeight
argument_list|(
name|iScrollRooms
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
argument_list|,
operator|(
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|-
literal|200
operator|)
operator|+
literal|"px"
argument_list|)
expr_stmt|;
name|ToolBox
operator|.
name|setMaxHeight
argument_list|(
name|iScrollDates
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
argument_list|,
operator|(
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|-
literal|200
operator|)
operator|+
literal|"px"
argument_list|)
expr_stmt|;
name|int
name|nrMonths
init|=
name|Math
operator|.
name|max
argument_list|(
literal|3
argument_list|,
name|Math
operator|.
name|min
argument_list|(
literal|5
argument_list|,
operator|(
name|Window
operator|.
name|getClientWidth
argument_list|()
operator|-
literal|300
operator|)
operator|/
literal|225
argument_list|)
argument_list|)
decl_stmt|;
name|iDates
operator|.
name|setWidth
argument_list|(
operator|(
literal|225
operator|*
name|nrMonths
operator|)
operator|+
literal|"px"
argument_list|)
expr_stmt|;
name|iResponse
operator|=
literal|null
expr_stmt|;
name|iEventId
operator|=
name|eventId
expr_stmt|;
name|setWidget
argument_list|(
name|iDatesForm
argument_list|)
expr_stmt|;
name|center
argument_list|()
expr_stmt|;
name|RootPanel
operator|.
name|getBodyElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setOverflow
argument_list|(
name|Overflow
operator|.
name|HIDDEN
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setVisible
parameter_list|(
name|boolean
name|visible
parameter_list|)
block|{
name|super
operator|.
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
if|if
condition|(
name|visible
operator|&&
name|getElement
argument_list|()
operator|.
name|getClientHeight
argument_list|()
operator|>
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|-
literal|100
condition|)
name|recenter
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|hide
parameter_list|()
block|{
name|super
operator|.
name|hide
argument_list|()
expr_stmt|;
name|GwtHint
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Entity
argument_list|>
name|getRooms
parameter_list|()
block|{
return|return
name|iMatchingRooms
return|;
block|}
specifier|public
name|Integer
name|getStartSlot
parameter_list|()
block|{
return|return
name|iTimes
operator|.
name|getValue
argument_list|()
operator|.
name|getStart
argument_list|()
return|;
block|}
specifier|public
name|Integer
name|getEndSlot
parameter_list|()
block|{
return|return
name|iTimes
operator|.
name|getValue
argument_list|()
operator|.
name|getEnd
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|Integer
argument_list|>
name|getDates
parameter_list|()
block|{
return|return
name|iDates
operator|.
name|getSelectedDays
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isSelected
parameter_list|(
name|Integer
name|date
parameter_list|,
name|Entity
name|room
parameter_list|)
block|{
return|return
name|iSelected
operator|.
name|contains
argument_list|(
name|date
operator|+
literal|":"
operator|+
name|room
operator|.
name|getUniqueId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|void
name|reset
parameter_list|(
name|String
name|roomFilterValue
parameter_list|)
block|{
name|reset
argument_list|(
name|roomFilterValue
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|reset
parameter_list|(
name|String
name|roomFilterValue
parameter_list|,
name|List
argument_list|<
name|MeetingInterface
argument_list|>
name|meetings
parameter_list|)
block|{
name|iMatchingRooms
operator|=
literal|null
expr_stmt|;
name|iDates
operator|.
name|setValue
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|Date
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|iTimes
operator|.
name|setValue
argument_list|(
operator|new
name|StartEndTimeSelector
operator|.
name|StartEndTime
argument_list|(
literal|7
operator|*
literal|12
operator|+
literal|6
argument_list|,
literal|17
operator|*
literal|12
operator|+
literal|6
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iRooms
operator|.
name|setValue
argument_list|(
name|roomFilterValue
operator|==
literal|null
operator|||
name|roomFilterValue
operator|.
name|isEmpty
argument_list|()
condition|?
literal|"flag:Event"
else|:
name|roomFilterValue
operator|.
name|contains
argument_list|(
literal|"flag:All"
argument_list|)
operator|||
name|roomFilterValue
operator|.
name|contains
argument_list|(
literal|"flag:Event"
argument_list|)
condition|?
name|roomFilterValue
else|:
literal|"flag:Event "
operator|+
name|roomFilterValue
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iSelected
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|meetings
operator|!=
literal|null
operator|&&
operator|!
name|meetings
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|MeetingInterface
name|first
init|=
name|meetings
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|iTimes
operator|.
name|setValue
argument_list|(
operator|new
name|StartEndTimeSelector
operator|.
name|StartEndTime
argument_list|(
name|first
operator|.
name|getStartSlot
argument_list|()
argument_list|,
name|first
operator|.
name|getEndSlot
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|TreeSet
argument_list|<
name|Date
argument_list|>
name|dates
init|=
operator|new
name|TreeSet
argument_list|<
name|Date
argument_list|>
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|rooms
init|=
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|MeetingInterface
name|m
range|:
name|meetings
control|)
block|{
name|dates
operator|.
name|add
argument_list|(
name|m
operator|.
name|getMeetingDate
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|m
operator|.
name|getLocation
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|iSelected
operator|.
name|add
argument_list|(
name|m
operator|.
name|getDayOfYear
argument_list|()
operator|+
literal|":"
operator|+
name|m
operator|.
name|getLocation
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|rooms
operator|.
name|add
argument_list|(
name|m
operator|.
name|getLocationName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|iDates
operator|.
name|setValue
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|Date
argument_list|>
argument_list|(
name|dates
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|roomFilter
init|=
literal|""
decl_stmt|;
for|for
control|(
name|String
name|room
range|:
name|rooms
control|)
block|{
if|if
condition|(
operator|!
name|roomFilter
operator|.
name|isEmpty
argument_list|()
condition|)
name|roomFilter
operator|+=
literal|" or "
expr_stmt|;
name|roomFilter
operator|+=
name|room
expr_stmt|;
block|}
name|iRooms
operator|.
name|setValue
argument_list|(
operator|(
name|roomFilterValue
operator|==
literal|null
operator|||
name|roomFilterValue
operator|.
name|isEmpty
argument_list|()
condition|?
literal|"flag:Event"
else|:
name|roomFilterValue
operator|.
name|contains
argument_list|(
literal|"flag:All"
argument_list|)
operator|||
name|roomFilterValue
operator|.
name|contains
argument_list|(
literal|"flag:Event"
argument_list|)
condition|?
name|roomFilterValue
else|:
literal|"flag:Event "
operator|+
name|roomFilterValue
operator|)
operator|+
operator|(
name|roomFilter
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|" "
operator|+
name|roomFilter
operator|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|Integer
name|iHoverDate
init|=
literal|null
decl_stmt|;
specifier|private
name|Entity
name|iHoverLoc
init|=
literal|null
decl_stmt|;
specifier|private
name|void
name|populate
parameter_list|(
name|EventRoomAvailabilityRpcResponse
name|response
parameter_list|,
name|int
name|index
parameter_list|,
name|Integer
name|sortBy
parameter_list|)
block|{
name|iResponse
operator|=
name|response
expr_stmt|;
name|iIndex
operator|=
name|index
expr_stmt|;
if|if
condition|(
name|iIndex
operator|<
literal|0
condition|)
name|iIndex
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|iIndex
operator|>=
name|getRooms
argument_list|()
operator|.
name|size
argument_list|()
condition|)
name|iIndex
operator|=
name|iStep
operator|*
operator|(
name|getRooms
argument_list|()
operator|.
name|size
argument_list|()
operator|/
name|iStep
operator|)
expr_stmt|;
if|if
condition|(
name|sortBy
operator|!=
literal|null
operator|&&
name|sortBy
operator|>=
literal|0
operator|&&
name|sortBy
operator|<
name|SortRoomsBy
operator|.
name|values
argument_list|()
operator|.
name|length
condition|)
block|{
name|Comparator
argument_list|<
name|Entity
argument_list|>
name|comparator
init|=
name|getSortRoomsComparator
argument_list|(
name|SortRoomsBy
operator|.
name|values
argument_list|()
index|[
name|sortBy
index|]
argument_list|,
name|iRooms
operator|.
name|getChip
argument_list|(
literal|"size"
argument_list|)
operator|!=
literal|null
argument_list|,
name|getDates
argument_list|()
argument_list|,
name|iResponse
argument_list|)
decl_stmt|;
if|if
condition|(
name|comparator
operator|!=
literal|null
condition|)
name|Collections
operator|.
name|sort
argument_list|(
name|iMatchingRooms
argument_list|,
name|comparator
argument_list|)
expr_stmt|;
block|}
name|iAvailabilityHeader
operator|.
name|setEnabled
argument_list|(
literal|"prev"
argument_list|,
name|iIndex
operator|>
literal|0
argument_list|)
expr_stmt|;
name|iAvailabilityHeader
operator|.
name|setEnabled
argument_list|(
literal|"next"
argument_list|,
name|iIndex
operator|+
name|iStep
operator|<
name|getRooms
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|iRoomAvailability
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iPanels
operator|.
name|clear
argument_list|()
expr_stmt|;
name|P
name|box
init|=
operator|new
name|P
argument_list|(
literal|"box"
argument_list|)
decl_stmt|;
name|iRoomAvailability
operator|.
name|add
argument_list|(
name|box
argument_list|)
expr_stmt|;
name|P
name|row
init|=
operator|new
name|P
argument_list|(
literal|"row"
argument_list|)
decl_stmt|;
name|box
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|P
argument_list|(
literal|"corner"
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
name|iIndex
init|;
name|i
operator|<
name|iIndex
operator|+
name|iStep
operator|&&
name|i
operator|<
name|getRooms
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
specifier|final
name|Entity
name|room
init|=
name|getRooms
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
specifier|final
name|P
name|p
init|=
operator|new
name|P
argument_list|(
literal|"room"
argument_list|)
decl_stmt|;
name|p
operator|.
name|setHTML
argument_list|(
name|MESSAGES
operator|.
name|singleRoomSelection
argument_list|(
name|room
operator|.
name|getName
argument_list|()
argument_list|,
name|room
operator|.
name|getProperty
argument_list|(
literal|"type"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|room
operator|.
name|getProperty
argument_list|(
literal|"capacity"
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|addMouseOverHandler
argument_list|(
operator|new
name|MouseOverHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseOver
parameter_list|(
name|MouseOverEvent
name|event
parameter_list|)
block|{
operator|(
operator|(
name|P
operator|)
name|event
operator|.
name|getSource
argument_list|()
operator|)
operator|.
name|addStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
name|RoomHint
operator|.
name|showHint
argument_list|(
name|p
operator|.
name|getElement
argument_list|()
argument_list|,
name|room
operator|.
name|getUniqueId
argument_list|()
argument_list|,
literal|""
argument_list|,
name|room
operator|.
name|getProperty
argument_list|(
literal|"distance"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|p
operator|.
name|addMouseOutHandler
argument_list|(
operator|new
name|MouseOutHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseOut
parameter_list|(
name|MouseOutEvent
name|event
parameter_list|)
block|{
operator|(
operator|(
name|P
operator|)
name|event
operator|.
name|getSource
argument_list|()
operator|)
operator|.
name|removeStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
name|RoomHint
operator|.
name|hideHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|p
operator|.
name|addMouseDownHandler
argument_list|(
operator|new
name|MouseDownHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseDown
parameter_list|(
name|MouseDownEvent
name|event
parameter_list|)
block|{
name|boolean
name|selected
init|=
literal|true
decl_stmt|;
for|for
control|(
name|Integer
name|date
range|:
name|getDates
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|isSelected
argument_list|(
name|date
argument_list|,
name|room
argument_list|)
condition|)
block|{
name|selected
operator|=
literal|false
expr_stmt|;
name|setSelected
argument_list|(
name|date
argument_list|,
name|room
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|selected
condition|)
block|{
for|for
control|(
specifier|final
name|Integer
name|date
range|:
name|getDates
argument_list|()
control|)
name|setSelected
argument_list|(
name|date
argument_list|,
name|room
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
for|for
control|(
specifier|final
name|Integer
name|date
range|:
name|getDates
argument_list|()
control|)
block|{
name|row
operator|=
operator|new
name|P
argument_list|(
literal|"row"
argument_list|)
expr_stmt|;
name|box
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
specifier|final
name|P
name|day
init|=
operator|new
name|P
argument_list|(
literal|"date"
argument_list|)
decl_stmt|;
specifier|final
name|Date
name|d
init|=
name|iDates
operator|.
name|getDate
argument_list|(
name|date
argument_list|)
decl_stmt|;
name|day
operator|.
name|setHTML
argument_list|(
name|MESSAGES
operator|.
name|dateTimeHeader
argument_list|(
name|sDayOfWeek
operator|.
name|format
argument_list|(
name|d
argument_list|)
argument_list|,
name|sDateFormat
operator|.
name|format
argument_list|(
name|d
argument_list|)
argument_list|,
name|TimeUtils
operator|.
name|slot2short
argument_list|(
name|getStartSlot
argument_list|()
argument_list|)
argument_list|,
name|TimeUtils
operator|.
name|slot2short
argument_list|(
name|getEndSlot
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|day
argument_list|)
expr_stmt|;
name|day
operator|.
name|addMouseOverHandler
argument_list|(
operator|new
name|MouseOverHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseOver
parameter_list|(
name|MouseOverEvent
name|event
parameter_list|)
block|{
operator|(
operator|(
name|P
operator|)
name|event
operator|.
name|getSource
argument_list|()
operator|)
operator|.
name|addStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|day
operator|.
name|addMouseOutHandler
argument_list|(
operator|new
name|MouseOutHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseOut
parameter_list|(
name|MouseOutEvent
name|event
parameter_list|)
block|{
operator|(
operator|(
name|P
operator|)
name|event
operator|.
name|getSource
argument_list|()
operator|)
operator|.
name|removeStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|day
operator|.
name|addMouseDownHandler
argument_list|(
operator|new
name|MouseDownHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseDown
parameter_list|(
name|MouseDownEvent
name|event
parameter_list|)
block|{
name|boolean
name|selected
init|=
literal|true
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|iIndex
init|;
name|i
operator|<
name|iIndex
operator|+
name|iStep
operator|&&
name|i
operator|<
name|getRooms
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Entity
name|room
init|=
name|getRooms
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|isSelected
argument_list|(
name|date
argument_list|,
name|room
argument_list|)
condition|)
block|{
name|selected
operator|=
literal|false
expr_stmt|;
name|setSelected
argument_list|(
name|date
argument_list|,
name|room
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|selected
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
name|iIndex
init|;
name|i
operator|<
name|iIndex
operator|+
name|iStep
operator|&&
name|i
operator|<
name|getRooms
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Entity
name|room
init|=
name|getRooms
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|setSelected
argument_list|(
name|date
argument_list|,
name|room
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
name|iIndex
init|;
name|i
operator|<
name|iIndex
operator|+
name|iStep
operator|&&
name|i
operator|<
name|getRooms
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
specifier|final
name|Entity
name|room
init|=
name|getRooms
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
specifier|final
name|Set
argument_list|<
name|MeetingConflictInterface
argument_list|>
name|conflicts
init|=
name|response
operator|.
name|getOverlaps
argument_list|(
name|date
argument_list|,
name|Long
operator|.
name|valueOf
argument_list|(
name|room
operator|.
name|getProperty
argument_list|(
literal|"permId"
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|P
name|p
init|=
operator|new
name|P
argument_list|(
literal|"cell"
argument_list|)
decl_stmt|;
if|if
condition|(
name|conflicts
operator|==
literal|null
operator|||
name|conflicts
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|p
operator|.
name|addStyleName
argument_list|(
literal|"free"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|p
operator|.
name|addStyleName
argument_list|(
literal|"conflict"
argument_list|)
expr_stmt|;
name|String
name|conf
init|=
literal|""
decl_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|MeetingConflictInterface
name|event
range|:
name|conflicts
control|)
block|{
if|if
condition|(
name|count
operator|==
literal|3
condition|)
block|{
name|conf
operator|+=
literal|"<br>..."
expr_stmt|;
break|break;
block|}
name|conf
operator|+=
operator|(
name|conf
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|"<br>"
operator|)
operator|+
name|event
operator|.
name|getName
argument_list|()
operator|+
operator|(
name|event
operator|.
name|getType
argument_list|()
operator|==
name|EventType
operator|.
name|Unavailabile
condition|?
literal|""
else|:
literal|" ("
operator|+
name|event
operator|.
name|getType
argument_list|()
operator|.
name|getAbbreviation
argument_list|(
name|CONSTANTS
argument_list|)
operator|+
literal|")"
operator|)
expr_stmt|;
name|count
operator|++
expr_stmt|;
block|}
name|p
operator|.
name|setHTML
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
name|iPanels
operator|.
name|put
argument_list|(
name|date
operator|+
literal|":"
operator|+
name|room
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|p
operator|.
name|addMouseDownHandler
argument_list|(
operator|new
name|MouseDownHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseDown
parameter_list|(
name|MouseDownEvent
name|event
parameter_list|)
block|{
name|setSelected
argument_list|(
name|date
argument_list|,
name|room
argument_list|,
operator|!
name|isSelected
argument_list|(
name|date
argument_list|,
name|room
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|isSelected
argument_list|(
name|date
argument_list|,
name|room
argument_list|)
condition|)
name|p
operator|.
name|addStyleName
argument_list|(
literal|"selected"
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|p
operator|.
name|addMouseOverHandler
argument_list|(
operator|new
name|MouseOverHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseOver
parameter_list|(
name|MouseOverEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iHoverDate
operator|!=
literal|null
operator|&&
name|iHoverLoc
operator|!=
literal|null
condition|)
block|{
name|P
name|p
init|=
name|iPanels
operator|.
name|get
argument_list|(
name|iHoverDate
operator|+
literal|":"
operator|+
name|iHoverLoc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|p
operator|!=
literal|null
condition|)
name|p
operator|.
name|removeStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
block|}
operator|(
operator|(
name|P
operator|)
name|event
operator|.
name|getSource
argument_list|()
operator|)
operator|.
name|addStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
name|iHoverDate
operator|=
name|date
expr_stmt|;
name|iHoverLoc
operator|=
name|room
expr_stmt|;
name|String
name|capacity
init|=
name|room
operator|.
name|getProperty
argument_list|(
literal|"capacity"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|String
name|distance
init|=
name|room
operator|.
name|getProperty
argument_list|(
literal|"distance"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|String
name|hint
init|=
name|room
operator|.
name|getProperty
argument_list|(
literal|"type"
argument_list|,
literal|null
argument_list|)
operator|+
operator|(
name|capacity
operator|!=
literal|null
condition|?
literal|", "
operator|+
name|MESSAGES
operator|.
name|hintRoomCapacity
argument_list|(
name|capacity
argument_list|)
else|:
literal|""
operator|)
operator|+
operator|(
name|distance
operator|!=
literal|null
operator|&&
operator|!
literal|"0"
operator|.
name|equals
argument_list|(
name|distance
argument_list|)
condition|?
literal|", "
operator|+
name|MESSAGES
operator|.
name|hintRoomDistance
argument_list|(
name|distance
argument_list|)
else|:
literal|""
operator|)
decl_stmt|;
name|String
name|message
init|=
name|MESSAGES
operator|.
name|dateTimeHint
argument_list|(
name|sDayOfWeek
operator|.
name|format
argument_list|(
name|d
argument_list|)
argument_list|,
name|sDateFormat
operator|.
name|format
argument_list|(
name|d
argument_list|)
argument_list|,
name|TimeUtils
operator|.
name|slot2short
argument_list|(
name|getStartSlot
argument_list|()
argument_list|)
argument_list|,
name|TimeUtils
operator|.
name|slot2short
argument_list|(
name|getEndSlot
argument_list|()
argument_list|)
argument_list|)
operator|+
literal|"<br>"
operator|+
name|room
operator|.
name|getName
argument_list|()
operator|+
literal|" ("
operator|+
name|hint
operator|+
literal|")"
decl_stmt|;
if|if
condition|(
name|conflicts
operator|!=
literal|null
operator|&&
operator|!
name|conflicts
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|message
operator|+=
literal|"<br>"
operator|+
name|MESSAGES
operator|.
name|propConflicts
argument_list|()
expr_stmt|;
for|for
control|(
name|MeetingConflictInterface
name|conflictingEvent
range|:
name|conflicts
control|)
name|message
operator|+=
operator|(
name|conflicts
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|?
literal|""
else|:
literal|"<br>&nbsp;&nbsp;&nbsp;"
operator|)
operator|+
name|conflictingEvent
operator|.
name|getName
argument_list|()
operator|+
operator|(
name|conflictingEvent
operator|.
name|getType
argument_list|()
operator|==
name|EventType
operator|.
name|Unavailabile
condition|?
literal|""
else|:
literal|" ("
operator|+
name|conflictingEvent
operator|.
name|getType
argument_list|()
operator|.
name|getAbbreviation
argument_list|(
name|CONSTANTS
argument_list|)
operator|+
literal|")"
operator|)
expr_stmt|;
block|}
name|GwtHint
operator|.
name|showHint
argument_list|(
name|p
operator|.
name|getElement
argument_list|()
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|p
operator|.
name|addMouseOutHandler
argument_list|(
operator|new
name|MouseOutHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseOut
parameter_list|(
name|MouseOutEvent
name|event
parameter_list|)
block|{
operator|(
operator|(
name|P
operator|)
name|event
operator|.
name|getSource
argument_list|()
operator|)
operator|.
name|removeStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
name|GwtHint
operator|.
name|hideHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
name|Set
argument_list|<
name|String
argument_list|>
name|selected
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Integer
name|date
range|:
name|getDates
argument_list|()
control|)
for|for
control|(
name|Entity
name|room
range|:
name|getRooms
argument_list|()
control|)
block|{
name|String
name|selection
init|=
name|date
operator|+
literal|":"
operator|+
name|room
operator|.
name|getUniqueId
argument_list|()
decl_stmt|;
if|if
condition|(
name|iSelected
operator|.
name|contains
argument_list|(
name|selection
argument_list|)
condition|)
name|selected
operator|.
name|add
argument_list|(
name|selection
argument_list|)
expr_stmt|;
block|}
name|iSelected
operator|=
name|selected
expr_stmt|;
name|iAvailabilityHeader
operator|.
name|setEnabled
argument_list|(
literal|"select"
argument_list|,
operator|!
name|selected
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iHoverDate
operator|!=
literal|null
operator|&&
name|iHoverLoc
operator|!=
literal|null
operator|&&
name|iPanels
operator|.
name|get
argument_list|(
name|iHoverDate
operator|+
literal|":"
operator|+
name|iHoverLoc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|==
literal|null
condition|)
block|{
name|iHoverDate
operator|=
literal|null
expr_stmt|;
name|iHoverLoc
operator|=
literal|null
expr_stmt|;
block|}
block|}
specifier|public
name|Set
argument_list|<
name|MeetingConflictInterface
argument_list|>
name|getConflicts
parameter_list|(
name|Integer
name|date
parameter_list|,
name|Entity
name|room
parameter_list|)
block|{
return|return
name|iResponse
operator|.
name|getOverlaps
argument_list|(
name|date
argument_list|,
name|Long
operator|.
name|valueOf
argument_list|(
name|room
operator|.
name|getProperty
argument_list|(
literal|"permId"
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|void
name|setSelected
parameter_list|(
name|Integer
name|date
parameter_list|,
name|Entity
name|room
parameter_list|,
name|boolean
name|selected
parameter_list|)
block|{
if|if
condition|(
operator|!
literal|"1"
operator|.
name|equals
argument_list|(
name|room
operator|.
name|getProperty
argument_list|(
literal|"overbook"
argument_list|,
literal|"0"
argument_list|)
argument_list|)
condition|)
block|{
name|Set
argument_list|<
name|MeetingConflictInterface
argument_list|>
name|conf
init|=
name|getConflicts
argument_list|(
name|date
argument_list|,
name|room
argument_list|)
decl_stmt|;
if|if
condition|(
name|conf
operator|!=
literal|null
operator|&&
operator|!
name|conf
operator|.
name|isEmpty
argument_list|()
condition|)
return|return;
block|}
name|String
name|selection
init|=
name|date
operator|+
literal|":"
operator|+
name|room
operator|.
name|getUniqueId
argument_list|()
decl_stmt|;
name|P
name|p
init|=
name|iPanels
operator|.
name|get
argument_list|(
name|selection
argument_list|)
decl_stmt|;
if|if
condition|(
name|selected
condition|)
block|{
name|p
operator|.
name|addStyleName
argument_list|(
literal|"selected"
argument_list|)
expr_stmt|;
name|iSelected
operator|.
name|add
argument_list|(
name|selection
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|p
operator|.
name|removeStyleName
argument_list|(
literal|"selected"
argument_list|)
expr_stmt|;
name|iSelected
operator|.
name|remove
argument_list|(
name|selection
argument_list|)
expr_stmt|;
block|}
name|iAvailabilityHeader
operator|.
name|setEnabled
argument_list|(
literal|"select"
argument_list|,
operator|!
name|iSelected
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|recenter
parameter_list|()
block|{
name|GwtHint
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iScrollRooms
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|clearHeight
argument_list|()
expr_stmt|;
if|if
condition|(
name|getElement
argument_list|()
operator|.
name|getClientHeight
argument_list|()
operator|>
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|-
literal|100
condition|)
name|iScrollRooms
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setHeight
argument_list|(
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|-
literal|200
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|iScrollDates
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|clearHeight
argument_list|()
expr_stmt|;
if|if
condition|(
name|getElement
argument_list|()
operator|.
name|getClientHeight
argument_list|()
operator|>
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|-
literal|100
condition|)
block|{
name|iScrollDates
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setHeight
argument_list|(
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|-
literal|200
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
block|}
name|int
name|left
init|=
operator|(
name|Window
operator|.
name|getClientWidth
argument_list|()
operator|-
name|getOffsetWidth
argument_list|()
operator|)
operator|>>
literal|1
decl_stmt|;
name|int
name|top
init|=
operator|(
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|-
name|getOffsetHeight
argument_list|()
operator|)
operator|>>
literal|1
decl_stmt|;
name|setPopupPosition
argument_list|(
name|Math
operator|.
name|max
argument_list|(
name|Window
operator|.
name|getScrollLeft
argument_list|()
operator|+
name|left
argument_list|,
literal|0
argument_list|)
argument_list|,
name|Math
operator|.
name|max
argument_list|(
name|Window
operator|.
name|getScrollTop
argument_list|()
operator|+
name|top
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|onPreviewNativeEvent
parameter_list|(
name|NativePreviewEvent
name|event
parameter_list|)
block|{
name|super
operator|.
name|onPreviewNativeEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
if|if
condition|(
name|iResponse
operator|==
literal|null
condition|)
return|return;
name|int
name|min
init|=
name|iIndex
decl_stmt|,
name|max
init|=
name|Math
operator|.
name|min
argument_list|(
name|iIndex
operator|+
name|iStep
argument_list|,
name|getRooms
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
operator|-
literal|1
decl_stmt|;
if|if
condition|(
name|event
operator|.
name|getTypeInt
argument_list|()
operator|==
name|Event
operator|.
name|ONKEYDOWN
condition|)
block|{
switch|switch
condition|(
name|DOM
operator|.
name|eventGetKeyCode
argument_list|(
operator|(
name|Event
operator|)
name|event
operator|.
name|getNativeEvent
argument_list|()
argument_list|)
condition|)
block|{
case|case
name|KeyCodes
operator|.
name|KEY_DOWN
case|:
if|if
condition|(
name|iHoverDate
operator|!=
literal|null
operator|&&
name|iHoverLoc
operator|!=
literal|null
condition|)
block|{
name|iPanels
operator|.
name|get
argument_list|(
name|iHoverDate
operator|+
literal|":"
operator|+
name|iHoverLoc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|.
name|removeStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
name|int
name|idx
init|=
name|Math
operator|.
name|min
argument_list|(
name|Math
operator|.
name|max
argument_list|(
literal|0
argument_list|,
name|getDates
argument_list|()
operator|.
name|indexOf
argument_list|(
name|iHoverDate
argument_list|)
operator|+
literal|1
argument_list|)
argument_list|,
name|getDates
argument_list|()
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
name|iHoverDate
operator|=
name|getDates
argument_list|()
operator|.
name|get
argument_list|(
name|idx
argument_list|)
expr_stmt|;
name|iPanels
operator|.
name|get
argument_list|(
name|iHoverDate
operator|+
literal|":"
operator|+
name|iHoverLoc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|.
name|addStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iHoverDate
operator|=
name|getDates
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iHoverLoc
operator|=
name|getRooms
argument_list|()
operator|.
name|get
argument_list|(
name|min
argument_list|)
expr_stmt|;
name|iPanels
operator|.
name|get
argument_list|(
name|iHoverDate
operator|+
literal|":"
operator|+
name|iHoverLoc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|.
name|addStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
block|}
name|iScrollRooms
operator|.
name|ensureVisible
argument_list|(
name|iPanels
operator|.
name|get
argument_list|(
name|iHoverDate
operator|+
literal|":"
operator|+
name|iHoverLoc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|KeyCodes
operator|.
name|KEY_UP
case|:
if|if
condition|(
name|iHoverDate
operator|!=
literal|null
operator|&&
name|iHoverLoc
operator|!=
literal|null
condition|)
block|{
name|iPanels
operator|.
name|get
argument_list|(
name|iHoverDate
operator|+
literal|":"
operator|+
name|iHoverLoc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|.
name|removeStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
name|int
name|idx
init|=
name|Math
operator|.
name|min
argument_list|(
name|Math
operator|.
name|max
argument_list|(
literal|0
argument_list|,
name|getDates
argument_list|()
operator|.
name|indexOf
argument_list|(
name|iHoverDate
argument_list|)
operator|-
literal|1
argument_list|)
argument_list|,
name|getDates
argument_list|()
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
name|iHoverDate
operator|=
name|getDates
argument_list|()
operator|.
name|get
argument_list|(
name|idx
argument_list|)
expr_stmt|;
name|iPanels
operator|.
name|get
argument_list|(
name|iHoverDate
operator|+
literal|":"
operator|+
name|iHoverLoc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|.
name|addStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iHoverDate
operator|=
name|getDates
argument_list|()
operator|.
name|get
argument_list|(
name|getDates
argument_list|()
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|iHoverLoc
operator|=
name|getRooms
argument_list|()
operator|.
name|get
argument_list|(
name|min
argument_list|)
expr_stmt|;
name|iPanels
operator|.
name|get
argument_list|(
name|iHoverDate
operator|+
literal|":"
operator|+
name|iHoverLoc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|.
name|addStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
block|}
name|iScrollDates
operator|.
name|ensureVisible
argument_list|(
name|iPanels
operator|.
name|get
argument_list|(
name|iHoverDate
operator|+
literal|":"
operator|+
name|iHoverLoc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|KeyCodes
operator|.
name|KEY_RIGHT
case|:
if|if
condition|(
name|iHoverDate
operator|!=
literal|null
operator|&&
name|iHoverLoc
operator|!=
literal|null
condition|)
block|{
name|iPanels
operator|.
name|get
argument_list|(
name|iHoverDate
operator|+
literal|":"
operator|+
name|iHoverLoc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|.
name|removeStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
name|int
name|idx
init|=
name|Math
operator|.
name|min
argument_list|(
name|Math
operator|.
name|max
argument_list|(
name|min
argument_list|,
name|getRooms
argument_list|()
operator|.
name|indexOf
argument_list|(
name|iHoverLoc
argument_list|)
operator|+
literal|1
argument_list|)
argument_list|,
name|max
argument_list|)
decl_stmt|;
name|iHoverLoc
operator|=
name|getRooms
argument_list|()
operator|.
name|get
argument_list|(
name|idx
argument_list|)
expr_stmt|;
name|iPanels
operator|.
name|get
argument_list|(
name|iHoverDate
operator|+
literal|":"
operator|+
name|iHoverLoc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|.
name|addStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iHoverDate
operator|=
name|getDates
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iHoverLoc
operator|=
name|getRooms
argument_list|()
operator|.
name|get
argument_list|(
name|min
argument_list|)
expr_stmt|;
name|iPanels
operator|.
name|get
argument_list|(
name|iHoverDate
operator|+
literal|":"
operator|+
name|iHoverLoc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|.
name|addStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|KeyCodes
operator|.
name|KEY_LEFT
case|:
if|if
condition|(
name|iHoverDate
operator|!=
literal|null
operator|&&
name|iHoverLoc
operator|!=
literal|null
condition|)
block|{
name|iPanels
operator|.
name|get
argument_list|(
name|iHoverDate
operator|+
literal|":"
operator|+
name|iHoverLoc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|.
name|removeStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
name|int
name|idx
init|=
name|Math
operator|.
name|min
argument_list|(
name|Math
operator|.
name|max
argument_list|(
name|min
argument_list|,
name|getRooms
argument_list|()
operator|.
name|indexOf
argument_list|(
name|iHoverLoc
argument_list|)
operator|-
literal|1
argument_list|)
argument_list|,
name|max
argument_list|)
decl_stmt|;
name|iHoverLoc
operator|=
name|getRooms
argument_list|()
operator|.
name|get
argument_list|(
name|idx
argument_list|)
expr_stmt|;
name|iPanels
operator|.
name|get
argument_list|(
name|iHoverDate
operator|+
literal|":"
operator|+
name|iHoverLoc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|.
name|addStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iHoverDate
operator|=
name|getDates
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iHoverLoc
operator|=
name|getRooms
argument_list|()
operator|.
name|get
argument_list|(
name|max
argument_list|)
expr_stmt|;
name|iPanels
operator|.
name|get
argument_list|(
name|iHoverDate
operator|+
literal|":"
operator|+
name|iHoverLoc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|.
name|addStyleName
argument_list|(
literal|"hover"
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|KeyCodes
operator|.
name|KEY_PAGEDOWN
case|:
if|if
condition|(
name|iIndex
operator|+
name|iStep
operator|<
name|getRooms
argument_list|()
operator|.
name|size
argument_list|()
condition|)
name|populate
argument_list|(
name|iResponse
argument_list|,
name|iIndex
operator|+
name|iStep
argument_list|,
literal|null
argument_list|)
expr_stmt|;
break|break;
case|case
name|KeyCodes
operator|.
name|KEY_PAGEUP
case|:
if|if
condition|(
name|iIndex
operator|>
literal|0
condition|)
name|populate
argument_list|(
name|iResponse
argument_list|,
name|iIndex
operator|-
name|iStep
argument_list|,
literal|null
argument_list|)
expr_stmt|;
break|break;
case|case
literal|32
case|:
if|if
condition|(
name|iHoverDate
operator|!=
literal|null
operator|&&
name|iHoverLoc
operator|!=
literal|null
condition|)
block|{
name|setSelected
argument_list|(
name|iHoverDate
argument_list|,
name|iHoverLoc
argument_list|,
operator|!
name|isSelected
argument_list|(
name|iHoverDate
argument_list|,
name|iHoverLoc
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

