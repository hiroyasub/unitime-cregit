begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|Lookup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
operator|.
name|TimeGrid
operator|.
name|MeetingClickEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
operator|.
name|TimeGrid
operator|.
name|MeetingClickHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimePageLabel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|IntervalSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|MouseClickListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|TableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|WeekSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|PersonInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EncodeQueryRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EventDetailRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|FilterRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|MeetingInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EncodeQueryRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EventPropertiesRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EventLookupRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|ResourceLookupRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|ResourceInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|ResourceType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EventPropertiesRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|WeekInterface
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|FocusEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|FocusHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyUpEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyUpHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|http
operator|.
name|client
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|i18n
operator|.
name|client
operator|.
name|DateTimeFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|DockPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHorizontalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasVerticalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|RootPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SimplePanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestOracle
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestOracle
operator|.
name|Suggestion
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TabBar
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|EventResourceTimetable
extends|extends
name|Composite
implements|implements
name|EventTable
operator|.
name|MeetingFilter
block|{
specifier|private
specifier|static
specifier|final
name|GwtConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|DateTimeFormat
name|sDateFormat
init|=
name|DateTimeFormat
operator|.
name|getFormat
argument_list|(
name|CONSTANTS
operator|.
name|eventDateFormat
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|SimplePanel
name|iRootPanel
decl_stmt|;
specifier|private
name|EventDetail
name|iEventDetail
decl_stmt|;
specifier|private
name|EventAdd
name|iEventAdd
decl_stmt|;
specifier|private
name|SimpleForm
name|iPanel
decl_stmt|,
name|iFilter
decl_stmt|;
specifier|private
name|DockPanel
name|iDockPanel
decl_stmt|;
specifier|private
name|SimplePanel
name|iGridOrTablePanel
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iHeader
decl_stmt|,
name|iFooter
decl_stmt|,
name|iFilterHeader
decl_stmt|;
specifier|private
name|TimeGrid
name|iTimeGrid
decl_stmt|;
specifier|private
name|EventTable
name|iTable
decl_stmt|;
specifier|private
name|ResourceInterface
name|iResource
decl_stmt|;
specifier|private
name|List
argument_list|<
name|EventInterface
argument_list|>
name|iData
decl_stmt|;
specifier|private
name|WeekSelector
name|iWeekPanel
decl_stmt|;
specifier|private
name|RoomSelector
name|iRoomPanel
decl_stmt|;
specifier|private
name|AcademicSessionSelectionBox
name|iSession
decl_stmt|;
specifier|private
name|ListBox
name|iResourceTypes
decl_stmt|;
specifier|private
name|SuggestBox
name|iResources
decl_stmt|;
specifier|private
name|boolean
name|iCanLookupPeople
init|=
literal|false
decl_stmt|;
specifier|private
name|int
name|iResourcesRow
init|=
operator|-
literal|1
decl_stmt|;
specifier|private
name|EventFilterBox
name|iEvents
init|=
literal|null
decl_stmt|;
specifier|private
name|RoomFilterBox
name|iRooms
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iLocDate
init|=
literal|null
decl_stmt|,
name|iLocRoom
init|=
literal|null
decl_stmt|;
specifier|private
name|MeetingClickHandler
name|iMeetingClickHandler
decl_stmt|;
specifier|private
name|Lookup
name|iLookup
decl_stmt|;
specifier|private
name|IntervalSelector
argument_list|<
name|String
argument_list|>
name|iViewMode
decl_stmt|;
specifier|private
name|TabBar
name|iTabBar
decl_stmt|;
specifier|private
name|EventPropertiesRpcResponse
name|iProperties
decl_stmt|;
specifier|public
name|EventResourceTimetable
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|iLocDate
operator|=
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"date"
argument_list|)
expr_stmt|;
name|iLocRoom
operator|=
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"room"
argument_list|)
expr_stmt|;
name|iFilter
operator|=
operator|new
name|SimpleForm
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|removeStyleName
argument_list|(
literal|"unitime-NotPrintableBottomLine"
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|getColumnFormatter
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|0
argument_list|,
literal|"120px"
argument_list|)
expr_stmt|;
name|iFilterHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|sectFilter
argument_list|()
argument_list|)
expr_stmt|;
name|iFilterHeader
operator|.
name|addButton
argument_list|(
literal|"search"
argument_list|,
name|MESSAGES
operator|.
name|buttonSearch
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|resourceTypeChanged
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iLookup
operator|=
operator|new
name|Lookup
argument_list|()
expr_stmt|;
name|iLookup
operator|.
name|setOptions
argument_list|(
literal|"mustHaveExternalId"
argument_list|)
expr_stmt|;
name|iLookup
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|PersonInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|PersonInterface
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|iResources
operator|.
name|setText
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|resourceTypeChanged
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iFilterHeader
operator|.
name|addButton
argument_list|(
literal|"lookup"
argument_list|,
name|MESSAGES
operator|.
name|buttonLookup
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iLookup
operator|.
name|center
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iFilterHeader
operator|.
name|setEnabled
argument_list|(
literal|"lookup"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iFilterHeader
operator|.
name|addButton
argument_list|(
literal|"add"
argument_list|,
name|MESSAGES
operator|.
name|buttonAddEvent
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iEventAdd
operator|.
name|reset
argument_list|(
name|iRooms
operator|.
name|getValue
argument_list|()
argument_list|,
operator|(
name|iTimeGrid
operator|==
literal|null
condition|?
literal|null
else|:
name|iTimeGrid
operator|.
name|getSelections
argument_list|()
operator|)
argument_list|,
name|iLookup
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
condition|?
operator|new
name|EventInterface
operator|.
name|ContactInterface
argument_list|(
name|iLookup
operator|.
name|getValue
argument_list|()
argument_list|)
else|:
name|iProperties
operator|==
literal|null
condition|?
literal|null
else|:
name|iProperties
operator|.
name|getMainContact
argument_list|()
argument_list|,
operator|(
name|iProperties
operator|==
literal|null
condition|?
literal|false
else|:
name|iProperties
operator|.
name|isCanLookupPeople
argument_list|()
operator|)
argument_list|)
expr_stmt|;
name|iEventAdd
operator|.
name|show
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iFilterHeader
operator|.
name|setEnabled
argument_list|(
literal|"add"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|addHeaderRow
argument_list|(
name|iFilterHeader
argument_list|)
expr_stmt|;
name|iSession
operator|=
operator|new
name|AcademicSessionSelectionBox
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|void
name|onInitializationSuccess
parameter_list|(
name|List
argument_list|<
name|AcademicSession
argument_list|>
name|sessions
parameter_list|)
block|{
name|iFilter
operator|.
name|setVisible
argument_list|(
name|sessions
operator|!=
literal|null
operator|&&
operator|!
name|sessions
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
operator|!=
literal|null
condition|)
name|iLookup
operator|.
name|setOptions
argument_list|(
literal|"mustHaveExternalId,session="
operator|+
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|onInitializationFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iFilterHeader
operator|.
name|setErrorMessage
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
name|iFilter
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAcademicSession
argument_list|()
argument_list|,
name|iSession
argument_list|)
expr_stmt|;
name|iEvents
operator|=
operator|new
name|EventFilterBox
argument_list|(
name|iSession
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|void
name|initAsync
parameter_list|()
block|{
name|super
operator|.
name|initAsync
argument_list|()
expr_stmt|;
name|resourceTypeChanged
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
name|iFilter
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propEventFilter
argument_list|()
argument_list|,
name|iEvents
argument_list|)
expr_stmt|;
if|if
condition|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"events"
argument_list|)
operator|!=
literal|null
condition|)
name|iEvents
operator|.
name|setValue
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"events"
argument_list|)
argument_list|)
expr_stmt|;
name|iRooms
operator|=
operator|new
name|RoomFilterBox
argument_list|(
name|iSession
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|void
name|initAsync
parameter_list|()
block|{
name|super
operator|.
name|initAsync
argument_list|()
expr_stmt|;
name|resourceTypeChanged
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
name|iFilter
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propRoomFilter
argument_list|()
argument_list|,
name|iRooms
argument_list|)
expr_stmt|;
if|if
condition|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"rooms"
argument_list|)
operator|!=
literal|null
condition|)
name|iRooms
operator|.
name|setValue
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"rooms"
argument_list|)
argument_list|)
expr_stmt|;
name|iResourceTypes
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
for|for
control|(
name|ResourceType
name|resource
range|:
name|ResourceType
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|resource
operator|.
name|isVisible
argument_list|()
condition|)
name|iResourceTypes
operator|.
name|addItem
argument_list|(
name|resource
operator|.
name|getPageTitle
argument_list|()
argument_list|,
name|resource
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iResourceTypes
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iResources
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|UniTimePageLabel
operator|.
name|getInstance
argument_list|()
operator|.
name|setPageName
argument_list|(
name|getResourceType
argument_list|()
operator|.
name|getPageTitle
argument_list|()
argument_list|)
expr_stmt|;
name|hideResults
argument_list|()
expr_stmt|;
name|resourceTypeChanged
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propResourceType
argument_list|()
argument_list|,
name|iResourceTypes
argument_list|)
expr_stmt|;
if|if
condition|(
name|type
operator|!=
literal|null
condition|)
name|iFilter
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iFilter
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iResources
operator|=
operator|new
name|SuggestBox
argument_list|(
operator|new
name|SuggestOracle
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|requestDefaultSuggestions
parameter_list|(
name|Request
name|request
parameter_list|,
name|Callback
name|callback
parameter_list|)
block|{
name|requestSuggestions
argument_list|(
name|request
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|requestSuggestions
parameter_list|(
specifier|final
name|Request
name|request
parameter_list|,
specifier|final
name|Callback
name|callback
parameter_list|)
block|{
if|if
condition|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|RPC
operator|.
name|execute
argument_list|(
name|ResourceLookupRpcRequest
operator|.
name|findResources
argument_list|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|,
name|ResourceType
operator|.
name|valueOf
argument_list|(
name|iResourceTypes
operator|.
name|getValue
argument_list|(
name|iResourceTypes
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|request
operator|.
name|getQuery
argument_list|()
argument_list|,
name|request
operator|.
name|getLimit
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|ResourceInterface
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
specifier|final
name|Throwable
name|caught
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|Suggestion
argument_list|>
name|suggestions
init|=
operator|new
name|ArrayList
argument_list|<
name|Suggestion
argument_list|>
argument_list|()
decl_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|Suggestion
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|getDisplayString
parameter_list|()
block|{
return|return
literal|"<font color='red'>"
operator|+
name|caught
operator|.
name|getMessage
argument_list|()
operator|+
literal|"</font>"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getReplacementString
parameter_list|()
block|{
return|return
literal|""
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|callback
operator|.
name|onSuggestionsReady
argument_list|(
name|request
argument_list|,
operator|new
name|Response
argument_list|(
name|suggestions
argument_list|)
argument_list|)
expr_stmt|;
name|ToolBox
operator|.
name|checkAccess
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|ResourceInterface
argument_list|>
name|result
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|Suggestion
argument_list|>
name|suggestions
init|=
operator|new
name|ArrayList
argument_list|<
name|Suggestion
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|ResourceInterface
name|resource
range|:
name|result
control|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|ResourceSuggestion
argument_list|(
name|resource
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|callback
operator|.
name|onSuggestionsReady
argument_list|(
name|request
argument_list|,
operator|new
name|Response
argument_list|(
name|suggestions
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isDisplayStringHTML
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iResources
operator|.
name|getTextBox
argument_list|()
operator|.
name|addFocusHandler
argument_list|(
operator|new
name|FocusHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFocus
parameter_list|(
name|FocusEvent
name|event
parameter_list|)
block|{
name|iResources
operator|.
name|showSuggestionList
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iResourcesRow
operator|=
name|iFilter
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propResource
argument_list|()
argument_list|,
name|iResources
argument_list|)
expr_stmt|;
name|iResources
operator|.
name|addSelectionHandler
argument_list|(
operator|new
name|SelectionHandler
argument_list|<
name|Suggestion
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSelection
parameter_list|(
name|SelectionEvent
argument_list|<
name|Suggestion
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getSelectedItem
argument_list|()
operator|instanceof
name|ResourceSuggestion
condition|)
block|{
name|resourceChanged
argument_list|(
operator|(
operator|(
name|ResourceSuggestion
operator|)
name|event
operator|.
name|getSelectedItem
argument_list|()
operator|)
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iResourcesRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iResourceTypes
operator|.
name|setSelectedIndex
argument_list|(
name|ResourceType
operator|.
name|ROOM
operator|.
name|ordinal
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|typeString
init|=
operator|(
name|type
operator|!=
literal|null
condition|?
name|type
else|:
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"type"
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|typeString
operator|!=
literal|null
condition|)
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
name|iResourceTypes
operator|.
name|getItemCount
argument_list|()
condition|;
name|idx
operator|++
control|)
block|{
if|if
condition|(
name|iResourceTypes
operator|.
name|getValue
argument_list|(
name|idx
argument_list|)
operator|.
name|equals
argument_list|(
name|typeString
operator|.
name|toUpperCase
argument_list|()
argument_list|)
condition|)
block|{
name|iResourceTypes
operator|.
name|setSelectedIndex
argument_list|(
name|idx
argument_list|)
expr_stmt|;
block|}
block|}
name|String
name|name
init|=
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"name"
argument_list|)
decl_stmt|;
if|if
condition|(
name|name
operator|!=
literal|null
condition|)
block|{
name|iResources
operator|.
name|setText
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
name|UniTimePageLabel
operator|.
name|getInstance
argument_list|()
operator|.
name|setPageName
argument_list|(
name|getResourceType
argument_list|()
operator|.
name|getPageTitle
argument_list|()
argument_list|)
expr_stmt|;
name|iPanel
operator|=
operator|new
name|SimpleForm
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|removeStyleName
argument_list|(
literal|"unitime-NotPrintableBottomLine"
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
name|iFilter
argument_list|)
expr_stmt|;
name|iHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|()
expr_stmt|;
name|iPanel
operator|.
name|addHeaderRow
argument_list|(
name|iHeader
argument_list|)
expr_stmt|;
name|iWeekPanel
operator|=
operator|new
name|WeekSelector
argument_list|(
name|iSession
argument_list|)
expr_stmt|;
name|iWeekPanel
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|WeekSelector
operator|.
name|Interval
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|WeekSelector
operator|.
name|Interval
argument_list|>
name|e
parameter_list|)
block|{
name|iTable
operator|.
name|populateTable
argument_list|(
name|iData
argument_list|,
name|EventResourceTimetable
operator|.
name|this
argument_list|,
name|iProperties
operator|.
name|isCanLookupPeople
argument_list|()
argument_list|)
expr_stmt|;
name|populateGrid
argument_list|()
expr_stmt|;
name|changeUrl
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iRoomPanel
operator|=
operator|new
name|RoomSelector
argument_list|()
expr_stmt|;
name|iTabBar
operator|=
operator|new
name|TabBar
argument_list|()
expr_stmt|;
name|iTabBar
operator|.
name|addTab
argument_list|(
name|MESSAGES
operator|.
name|tabGrid
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iTabBar
operator|.
name|addTab
argument_list|(
name|MESSAGES
operator|.
name|tabTable
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iTabBar
operator|.
name|selectTab
argument_list|(
literal|"table"
operator|.
name|equalsIgnoreCase
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"tab"
argument_list|)
argument_list|)
condition|?
literal|1
else|:
literal|0
argument_list|)
expr_stmt|;
name|iTabBar
operator|.
name|addSelectionHandler
argument_list|(
operator|new
name|SelectionHandler
argument_list|<
name|Integer
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSelection
parameter_list|(
name|SelectionEvent
argument_list|<
name|Integer
argument_list|>
name|event
parameter_list|)
block|{
name|iGridOrTablePanel
operator|.
name|setWidget
argument_list|(
name|iTabBar
operator|.
name|getSelectedTab
argument_list|()
operator|==
literal|0
condition|?
name|iTimeGrid
else|:
name|iTable
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setHeaderTitle
argument_list|(
name|name
argument_list|(
name|event
operator|.
name|getSelectedItem
argument_list|()
operator|==
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|changeUrl
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iGridOrTablePanel
operator|=
operator|new
name|SimplePanel
argument_list|()
expr_stmt|;
name|iGridOrTablePanel
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TabPanel"
argument_list|)
expr_stmt|;
specifier|final
name|Character
name|gridAccessKey
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|MESSAGES
operator|.
name|tabGrid
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|Character
name|tableAccessKey
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|MESSAGES
operator|.
name|tabTable
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|gridAccessKey
operator|!=
literal|null
operator|||
name|tableAccessKey
operator|!=
literal|null
condition|)
block|{
name|RootPanel
operator|.
name|get
argument_list|()
operator|.
name|addDomHandler
argument_list|(
operator|new
name|KeyUpHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyUp
parameter_list|(
name|KeyUpEvent
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|iRootPanel
operator|.
name|getWidget
argument_list|()
operator|.
name|equals
argument_list|(
name|iPanel
argument_list|)
condition|)
return|return;
if|if
condition|(
name|gridAccessKey
operator|!=
literal|null
operator|&&
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getCtrlKey
argument_list|()
operator|&&
operator|(
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
name|gridAccessKey
operator|||
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
name|Character
operator|.
name|toUpperCase
argument_list|(
name|gridAccessKey
argument_list|)
operator|)
condition|)
block|{
name|iTabBar
operator|.
name|selectTab
argument_list|(
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|iTable
operator|!=
literal|null
condition|)
name|iTable
operator|.
name|clearHover
argument_list|()
expr_stmt|;
name|event
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|tableAccessKey
operator|!=
literal|null
operator|&&
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getCtrlKey
argument_list|()
operator|&&
operator|(
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
name|tableAccessKey
operator|||
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
name|Character
operator|.
name|toUpperCase
argument_list|(
name|tableAccessKey
argument_list|)
operator|)
condition|)
block|{
name|iTabBar
operator|.
name|selectTab
argument_list|(
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|iTimeGrid
operator|!=
literal|null
condition|)
name|iTimeGrid
operator|.
name|hideSelectionPopup
argument_list|()
expr_stmt|;
name|event
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|,
name|KeyUpEvent
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iDockPanel
operator|=
operator|new
name|DockPanel
argument_list|()
expr_stmt|;
name|iDockPanel
operator|.
name|setSpacing
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iDockPanel
operator|.
name|add
argument_list|(
name|iGridOrTablePanel
argument_list|,
name|DockPanel
operator|.
name|SOUTH
argument_list|)
expr_stmt|;
name|iDockPanel
operator|.
name|add
argument_list|(
name|iRoomPanel
argument_list|,
name|DockPanel
operator|.
name|WEST
argument_list|)
expr_stmt|;
name|iDockPanel
operator|.
name|setCellHorizontalAlignment
argument_list|(
name|iRoomPanel
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_LEFT
argument_list|)
expr_stmt|;
name|iDockPanel
operator|.
name|add
argument_list|(
name|iTabBar
argument_list|,
name|DockPanel
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|iDockPanel
operator|.
name|setCellVerticalAlignment
argument_list|(
name|iTabBar
argument_list|,
name|HasVerticalAlignment
operator|.
name|ALIGN_BOTTOM
argument_list|)
expr_stmt|;
name|iDockPanel
operator|.
name|setCellHorizontalAlignment
argument_list|(
name|iTabBar
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_CENTER
argument_list|)
expr_stmt|;
name|iDockPanel
operator|.
name|add
argument_list|(
name|iWeekPanel
argument_list|,
name|DockPanel
operator|.
name|EAST
argument_list|)
expr_stmt|;
name|iDockPanel
operator|.
name|setCellHorizontalAlignment
argument_list|(
name|iWeekPanel
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
name|iDockPanel
argument_list|)
expr_stmt|;
name|hideResults
argument_list|()
expr_stmt|;
name|iFooter
operator|=
name|iHeader
operator|.
name|clonePanel
argument_list|()
expr_stmt|;
name|iPanel
operator|.
name|addRow
argument_list|(
name|iFooter
argument_list|)
expr_stmt|;
name|iRootPanel
operator|=
operator|new
name|SimplePanel
argument_list|(
name|iPanel
argument_list|)
expr_stmt|;
name|initWidget
argument_list|(
name|iRootPanel
argument_list|)
expr_stmt|;
name|iRoomPanel
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|IntervalSelector
argument_list|<
name|ResourceInterface
argument_list|>
operator|.
name|Interval
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|IntervalSelector
argument_list|<
name|ResourceInterface
argument_list|>
operator|.
name|Interval
argument_list|>
name|e
parameter_list|)
block|{
name|iTable
operator|.
name|populateTable
argument_list|(
name|iData
argument_list|,
name|EventResourceTimetable
operator|.
name|this
argument_list|,
name|iProperties
operator|.
name|isCanLookupPeople
argument_list|()
argument_list|)
expr_stmt|;
name|populateGrid
argument_list|()
expr_stmt|;
name|changeUrl
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iPanel
operator|.
name|getRowCount
argument_list|()
condition|;
name|i
operator|++
control|)
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|i
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"print"
argument_list|,
name|MESSAGES
operator|.
name|buttonPrint
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|clickEvent
parameter_list|)
block|{
name|EventTable
name|table
init|=
operator|new
name|EventTable
argument_list|()
decl_stmt|;
name|table
operator|.
name|populateTable
argument_list|(
name|iData
argument_list|,
name|EventResourceTimetable
operator|.
name|this
argument_list|,
name|iProperties
operator|.
name|isCanLookupPeople
argument_list|()
argument_list|)
expr_stmt|;
name|TimeGrid
name|tg
init|=
name|iTimeGrid
operator|.
name|getPrintWidget
argument_list|()
decl_stmt|;
for|for
control|(
name|EventInterface
name|event
range|:
name|iData
control|)
block|{
name|List
argument_list|<
name|MeetingInterface
argument_list|>
name|meetings
init|=
operator|new
name|ArrayList
argument_list|<
name|MeetingInterface
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|MeetingInterface
name|meeting
range|:
name|event
operator|.
name|getMeetings
argument_list|()
control|)
if|if
condition|(
operator|!
name|filter
argument_list|(
name|meeting
argument_list|)
condition|)
name|meetings
operator|.
name|add
argument_list|(
name|meeting
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|meetings
operator|.
name|isEmpty
argument_list|()
condition|)
name|tg
operator|.
name|addPrintEvent
argument_list|(
name|event
argument_list|,
name|meetings
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
condition|)
name|tg
operator|.
name|labelDays
argument_list|(
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|.
name|getFirst
argument_list|()
argument_list|,
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|.
name|getLast
argument_list|()
argument_list|)
expr_stmt|;
name|ToolBox
operator|.
name|print
argument_list|(
name|iHeader
operator|.
name|getHeaderTitle
argument_list|()
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
name|tg
argument_list|,
name|table
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"export"
argument_list|,
name|MESSAGES
operator|.
name|buttonExportICal
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|clickEvent
parameter_list|)
block|{
if|if
condition|(
name|iTimeGrid
operator|.
name|getCalendarUrl
argument_list|()
operator|!=
literal|null
condition|)
name|ToolBox
operator|.
name|open
argument_list|(
name|iTimeGrid
operator|.
name|getCalendarUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"print"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"export"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|EventPropertiesRpcRequest
operator|.
name|requestEventProperties
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|EventPropertiesRpcResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|EventPropertiesRpcResponse
name|result
parameter_list|)
block|{
name|iProperties
operator|=
name|result
expr_stmt|;
name|iCanLookupPeople
operator|=
operator|(
name|result
operator|==
literal|null
condition|?
literal|false
else|:
name|result
operator|.
name|isCanLookupPeople
argument_list|()
operator|)
expr_stmt|;
name|iFilterHeader
operator|.
name|setEnabled
argument_list|(
literal|"lookup"
argument_list|,
name|iCanLookupPeople
operator|&&
name|getResourceType
argument_list|()
operator|==
name|ResourceType
operator|.
name|PERSON
argument_list|)
expr_stmt|;
name|iFilterHeader
operator|.
name|setEnabled
argument_list|(
literal|"add"
argument_list|,
name|result
operator|.
name|isCanAddEvent
argument_list|()
argument_list|)
expr_stmt|;
name|iEventAdd
operator|.
name|setup
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iEventDetail
operator|=
operator|new
name|EventDetail
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|void
name|onHide
parameter_list|()
block|{
name|iRootPanel
operator|.
name|setWidget
argument_list|(
name|iPanel
argument_list|)
expr_stmt|;
name|UniTimePageLabel
operator|.
name|getInstance
argument_list|()
operator|.
name|setPageName
argument_list|(
name|getResourceType
argument_list|()
operator|.
name|getPageTitle
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|onShow
parameter_list|()
block|{
if|if
condition|(
name|iTable
operator|!=
literal|null
condition|)
name|iTable
operator|.
name|clearHover
argument_list|()
expr_stmt|;
name|iRootPanel
operator|.
name|setWidget
argument_list|(
name|iEventDetail
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
name|iEventAdd
operator|=
operator|new
name|EventAdd
argument_list|(
name|iSession
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|void
name|onHide
parameter_list|()
block|{
name|iRootPanel
operator|.
name|setWidget
argument_list|(
name|iPanel
argument_list|)
expr_stmt|;
name|UniTimePageLabel
operator|.
name|getInstance
argument_list|()
operator|.
name|setPageName
argument_list|(
name|getResourceType
argument_list|()
operator|.
name|getPageTitle
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|onShow
parameter_list|()
block|{
if|if
condition|(
name|iTable
operator|!=
literal|null
condition|)
name|iTable
operator|.
name|clearHover
argument_list|()
expr_stmt|;
name|iRootPanel
operator|.
name|setWidget
argument_list|(
name|iEventAdd
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
name|iMeetingClickHandler
operator|=
operator|new
name|MeetingClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMeetingClick
parameter_list|(
specifier|final
name|MeetingClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|event
operator|.
name|getEvent
argument_list|()
operator|.
name|isCanView
argument_list|()
condition|)
return|return;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitLoading
argument_list|(
name|event
operator|.
name|getEvent
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|EventDetailRpcRequest
operator|.
name|requestEventDetails
argument_list|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|,
name|event
operator|.
name|getEvent
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|EventInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|fail
argument_list|(
name|MESSAGES
operator|.
name|failedLoad
argument_list|(
name|event
operator|.
name|getEvent
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|EventInterface
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iEventDetail
operator|.
name|setEvent
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|iEventDetail
operator|.
name|show
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
name|iTable
operator|=
operator|new
name|EventTable
argument_list|()
expr_stmt|;
name|iTable
operator|.
name|addMouseClickListener
argument_list|(
operator|new
name|MouseClickListener
argument_list|<
name|EventInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onMouseClick
parameter_list|(
specifier|final
name|TableEvent
argument_list|<
name|EventInterface
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|event
operator|.
name|getData
argument_list|()
operator|.
name|isCanView
argument_list|()
condition|)
return|return;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitLoading
argument_list|(
name|event
operator|.
name|getData
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|EventDetailRpcRequest
operator|.
name|requestEventDetails
argument_list|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|,
name|event
operator|.
name|getData
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|EventInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|fail
argument_list|(
name|MESSAGES
operator|.
name|failedLoad
argument_list|(
name|event
operator|.
name|getData
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|EventInterface
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iEventDetail
operator|.
name|setEvent
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|iEventDetail
operator|.
name|show
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Collection
argument_list|<
name|EventInterface
argument_list|>
name|sortedEvents
parameter_list|()
block|{
name|TreeSet
argument_list|<
name|EventInterface
argument_list|>
name|data
init|=
operator|new
name|TreeSet
argument_list|<
name|EventInterface
argument_list|>
argument_list|(
operator|new
name|Comparator
argument_list|<
name|EventInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|int
name|compare
parameter_list|(
name|EventInterface
name|e1
parameter_list|,
name|EventInterface
name|e2
parameter_list|)
block|{
name|int
name|cmp
init|=
operator|new
name|Integer
argument_list|(
name|e1
operator|.
name|getMeetings
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|getDayOfYear
argument_list|()
argument_list|)
operator|.
name|compareTo
argument_list|(
name|e2
operator|.
name|getMeetings
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|getDayOfYear
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
name|cmp
operator|=
operator|new
name|Integer
argument_list|(
name|e1
operator|.
name|getMeetings
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|getStartSlot
argument_list|()
argument_list|)
operator|.
name|compareTo
argument_list|(
name|e2
operator|.
name|getMeetings
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|getStartSlot
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
return|return
name|e1
operator|.
name|compareTo
argument_list|(
name|e2
argument_list|)
return|;
block|}
block|}
argument_list|)
decl_stmt|;
name|data
operator|.
name|addAll
argument_list|(
name|iData
argument_list|)
expr_stmt|;
return|return
name|data
return|;
block|}
specifier|public
name|ResourceType
name|getResourceType
parameter_list|()
block|{
if|if
condition|(
name|iResourceTypes
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
condition|)
return|return
literal|null
return|;
return|return
name|ResourceType
operator|.
name|values
argument_list|()
index|[
name|iResourceTypes
operator|.
name|getSelectedIndex
argument_list|()
index|]
return|;
block|}
specifier|public
name|String
name|getResourceName
parameter_list|()
block|{
if|if
condition|(
name|getResourceType
argument_list|()
operator|==
name|ResourceType
operator|.
name|PERSON
operator|&&
operator|!
name|iCanLookupPeople
condition|)
return|return
literal|""
return|;
return|return
operator|(
name|iResources
operator|.
name|getText
argument_list|()
operator|==
literal|null
operator|||
name|iResources
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
name|iResources
operator|.
name|getText
argument_list|()
operator|)
return|;
block|}
specifier|private
name|void
name|resourceTypeChanged
parameter_list|(
name|boolean
name|allowEmptyResource
parameter_list|)
block|{
if|if
condition|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
operator|!=
literal|null
condition|)
name|iLookup
operator|.
name|setOptions
argument_list|(
literal|"mustHaveExternalId,session="
operator|+
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|)
expr_stmt|;
name|ResourceType
name|type
init|=
name|getResourceType
argument_list|()
decl_stmt|;
if|if
condition|(
name|type
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|type
operator|==
name|ResourceType
operator|.
name|ROOM
condition|)
block|{
name|iFilter
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iResourcesRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iFilterHeader
operator|.
name|setEnabled
argument_list|(
literal|"lookup"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
operator|!=
literal|null
operator|&&
operator|(
operator|!
name|iRooms
operator|.
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|||
operator|!
name|iEvents
operator|.
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|)
condition|)
block|{
name|ResourceInterface
name|resource
init|=
operator|new
name|ResourceInterface
argument_list|()
decl_stmt|;
name|resource
operator|.
name|setType
argument_list|(
name|ResourceType
operator|.
name|ROOM
argument_list|)
expr_stmt|;
name|resource
operator|.
name|setName
argument_list|(
name|iRooms
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|allowEmptyResource
condition|)
name|resourceChanged
argument_list|(
name|resource
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|iFilter
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iResourcesRow
argument_list|,
name|type
operator|!=
name|ResourceType
operator|.
name|PERSON
argument_list|)
expr_stmt|;
operator|(
operator|(
name|Label
operator|)
name|iFilter
operator|.
name|getWidget
argument_list|(
name|iResourcesRow
argument_list|,
literal|0
argument_list|)
operator|)
operator|.
name|setText
argument_list|(
name|type
operator|.
name|getLabel
argument_list|()
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|.
name|toUpperCase
argument_list|()
operator|+
name|type
operator|.
name|getLabel
argument_list|()
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
operator|+
literal|":"
argument_list|)
expr_stmt|;
name|iFilterHeader
operator|.
name|setEnabled
argument_list|(
literal|"lookup"
argument_list|,
name|iCanLookupPeople
operator|&&
name|getResourceType
argument_list|()
operator|==
name|ResourceType
operator|.
name|PERSON
argument_list|)
expr_stmt|;
if|if
condition|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
operator|!=
literal|null
operator|&&
operator|(
operator|(
name|type
operator|==
name|ResourceType
operator|.
name|PERSON
operator|&&
name|allowEmptyResource
operator|)
operator|||
name|getResourceName
argument_list|()
operator|!=
literal|null
operator|)
condition|)
block|{
name|iFilterHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
literal|"Loading "
operator|+
name|type
operator|.
name|getLabel
argument_list|()
operator|+
operator|(
name|type
operator|!=
name|ResourceType
operator|.
name|PERSON
condition|?
literal|" "
operator|+
name|getResourceName
argument_list|()
else|:
literal|""
operator|)
operator|+
literal|" ..."
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|ResourceLookupRpcRequest
operator|.
name|findResource
argument_list|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|,
name|type
argument_list|,
name|getResourceName
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|ResourceInterface
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iFilterHeader
operator|.
name|setErrorMessage
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|hideResults
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|ResourceInterface
argument_list|>
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|resourceChanged
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|private
name|void
name|resourceChanged
parameter_list|(
name|ResourceInterface
name|resource
parameter_list|)
block|{
specifier|final
name|String
name|locDate
init|=
name|iLocDate
decl_stmt|;
specifier|final
name|String
name|locRoom
init|=
name|iLocRoom
decl_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitLoadingTimetable
argument_list|(
name|resource
operator|.
name|getType
argument_list|()
operator|==
name|ResourceType
operator|.
name|ROOM
condition|?
name|MESSAGES
operator|.
name|resourceRoom
argument_list|()
operator|.
name|toLowerCase
argument_list|()
else|:
name|resource
operator|.
name|getName
argument_list|()
argument_list|,
name|iSession
operator|.
name|getAcademicSessionName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iResource
operator|=
name|resource
expr_stmt|;
name|iFilterHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|EventLookupRpcRequest
operator|.
name|findEvents
argument_list|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|,
name|iResource
argument_list|,
name|iEvents
operator|.
name|getElementsRequest
argument_list|()
argument_list|,
name|iRooms
operator|.
name|getElementsRequest
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|maxMeetings
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|EventInterface
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|EventInterface
argument_list|>
name|result
parameter_list|)
block|{
name|iData
operator|=
name|result
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|changeUrl
argument_list|()
expr_stmt|;
if|if
condition|(
name|iData
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iFilterHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedNoEvents
argument_list|(
operator|(
name|iResource
operator|.
name|getType
argument_list|()
operator|==
name|ResourceType
operator|.
name|PERSON
condition|?
literal|""
else|:
name|iResource
operator|.
name|getType
argument_list|()
operator|.
name|getLabel
argument_list|()
operator|+
literal|" "
operator|)
operator|+
name|iResource
operator|.
name|getName
argument_list|()
argument_list|,
name|iSession
operator|.
name|getAcademicSessionName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|hideResults
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|Collections
operator|.
name|sort
argument_list|(
name|iData
argument_list|)
expr_stmt|;
name|TreeSet
argument_list|<
name|ResourceInterface
argument_list|>
name|rooms
init|=
operator|new
name|TreeSet
argument_list|<
name|ResourceInterface
argument_list|>
argument_list|()
decl_stmt|;
name|int
name|nrMeetings
init|=
literal|0
decl_stmt|;
for|for
control|(
name|EventInterface
name|event
range|:
name|iData
control|)
block|{
for|for
control|(
name|MeetingInterface
name|meeting
range|:
name|event
operator|.
name|getMeetings
argument_list|()
control|)
block|{
if|if
condition|(
name|meeting
operator|.
name|getLocation
argument_list|()
operator|!=
literal|null
condition|)
name|rooms
operator|.
name|add
argument_list|(
name|meeting
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|nrMeetings
operator|+=
name|event
operator|.
name|getMeetings
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
name|iRoomPanel
operator|.
name|setValues
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|ResourceInterface
argument_list|>
argument_list|(
name|rooms
argument_list|)
argument_list|)
expr_stmt|;
name|iRoomPanel
operator|.
name|setValue
argument_list|(
name|iRoomPanel
operator|.
name|parse
argument_list|(
name|locRoom
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|iWeekPanel
operator|.
name|getAllWeeks
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|List
argument_list|<
name|WeekInterface
argument_list|>
name|weeks
init|=
operator|new
name|ArrayList
argument_list|<
name|WeekInterface
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|WeekInterface
name|week
range|:
name|iWeekPanel
operator|.
name|getAllWeeks
argument_list|()
control|)
block|{
name|boolean
name|hasEvents
init|=
literal|false
decl_stmt|;
name|events
label|:
for|for
control|(
name|EventInterface
name|event
range|:
name|iData
control|)
block|{
for|for
control|(
name|MeetingInterface
name|meeting
range|:
name|event
operator|.
name|getMeetings
argument_list|()
control|)
block|{
if|if
condition|(
name|meeting
operator|.
name|getDayOfYear
argument_list|()
operator|>=
name|week
operator|.
name|getDayOfYear
argument_list|()
operator|&&
name|meeting
operator|.
name|getDayOfYear
argument_list|()
operator|<
name|week
operator|.
name|getDayOfYear
argument_list|()
operator|+
literal|7
condition|)
block|{
name|hasEvents
operator|=
literal|true
expr_stmt|;
break|break
name|events
break|;
block|}
block|}
block|}
if|if
condition|(
name|hasEvents
condition|)
name|weeks
operator|.
name|add
argument_list|(
name|week
argument_list|)
expr_stmt|;
block|}
name|iWeekPanel
operator|.
name|setValues
argument_list|(
name|weeks
argument_list|)
expr_stmt|;
block|}
name|iWeekPanel
operator|.
name|setValue
argument_list|(
name|iWeekPanel
operator|.
name|parse
argument_list|(
name|locDate
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|nrMeetings
operator|>
name|CONSTANTS
operator|.
name|maxMeetings
argument_list|()
condition|)
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|warnTooManyMeetings
argument_list|(
name|CONSTANTS
operator|.
name|maxMeetings
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|int
name|nrDays
init|=
literal|4
decl_stmt|;
name|int
name|firstSlot
init|=
operator|-
literal|1
decl_stmt|,
name|lastSlot
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|EventInterface
name|event
range|:
name|iData
control|)
block|{
for|for
control|(
name|MeetingInterface
name|meeting
range|:
name|event
operator|.
name|getMeetings
argument_list|()
control|)
block|{
if|if
condition|(
name|firstSlot
operator|<
literal|0
operator|||
name|firstSlot
operator|>
name|meeting
operator|.
name|getStartSlot
argument_list|()
condition|)
name|firstSlot
operator|=
name|meeting
operator|.
name|getStartSlot
argument_list|()
expr_stmt|;
if|if
condition|(
name|lastSlot
operator|<
literal|0
operator|||
name|lastSlot
operator|<
name|meeting
operator|.
name|getEndSlot
argument_list|()
condition|)
name|lastSlot
operator|=
name|meeting
operator|.
name|getEndSlot
argument_list|()
expr_stmt|;
name|nrDays
operator|=
name|Math
operator|.
name|max
argument_list|(
name|nrDays
argument_list|,
name|meeting
operator|.
name|getDayOfWeek
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|nrDays
operator|++
expr_stmt|;
name|int
name|days
index|[]
init|=
operator|new
name|int
index|[
name|nrDays
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|days
operator|.
name|length
condition|;
name|i
operator|++
control|)
name|days
index|[
name|i
index|]
operator|=
name|i
expr_stmt|;
name|int
name|firstHour
init|=
name|firstSlot
operator|/
literal|12
decl_stmt|;
name|int
name|lastHour
init|=
literal|1
operator|+
operator|(
name|lastSlot
operator|-
literal|1
operator|)
operator|/
literal|12
decl_stmt|;
name|HashMap
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|colors
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|iTimeGrid
operator|!=
literal|null
condition|)
name|iTimeGrid
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|iTimeGrid
operator|=
operator|new
name|TimeGrid
argument_list|(
name|colors
argument_list|,
name|days
argument_list|,
operator|(
name|int
operator|)
operator|(
literal|0.9
operator|*
name|Window
operator|.
name|getClientWidth
argument_list|()
operator|/
name|nrDays
operator|)
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
operator|(
name|firstHour
operator|<
literal|7
condition|?
name|firstHour
else|:
literal|7
operator|)
argument_list|,
operator|(
name|lastHour
operator|>
literal|18
condition|?
name|lastHour
else|:
literal|18
operator|)
argument_list|)
expr_stmt|;
name|iTimeGrid
operator|.
name|addMeetingClickHandler
argument_list|(
name|iMeetingClickHandler
argument_list|)
expr_stmt|;
name|populateGrid
argument_list|()
expr_stmt|;
name|iTable
operator|.
name|populateTable
argument_list|(
name|iData
argument_list|,
name|EventResourceTimetable
operator|.
name|this
argument_list|,
name|iProperties
operator|.
name|isCanLookupPeople
argument_list|()
argument_list|)
expr_stmt|;
name|iGridOrTablePanel
operator|.
name|setWidget
argument_list|(
name|iTabBar
operator|.
name|getSelectedTab
argument_list|()
operator|==
literal|0
condition|?
name|iTimeGrid
else|:
name|iTable
argument_list|)
expr_stmt|;
name|showResults
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iFilterHeader
operator|.
name|setErrorMessage
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|hideResults
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|populateGrid
parameter_list|()
block|{
name|iTimeGrid
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setHeaderTitle
argument_list|(
name|name
argument_list|(
name|iTabBar
operator|.
name|getSelectedTab
argument_list|()
operator|==
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// iTableHeader.setHeaderTitle(name(false));
name|iTimeGrid
operator|.
name|setResourceType
argument_list|(
name|getResourceType
argument_list|()
argument_list|)
expr_stmt|;
name|iTimeGrid
operator|.
name|setSelectedWeeks
argument_list|(
name|iWeekPanel
operator|.
name|getSelected
argument_list|()
argument_list|)
expr_stmt|;
name|iTimeGrid
operator|.
name|setRoomResources
argument_list|(
name|iRoomPanel
operator|.
name|getSelected
argument_list|()
argument_list|)
expr_stmt|;
name|iTimeGrid
operator|.
name|setMode
argument_list|(
name|gridMode
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|EventInterface
name|event
range|:
name|sortedEvents
argument_list|()
control|)
block|{
name|List
argument_list|<
name|MeetingInterface
argument_list|>
name|meetings
init|=
operator|new
name|ArrayList
argument_list|<
name|MeetingInterface
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|MeetingInterface
name|meeting
range|:
name|event
operator|.
name|getMeetings
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|filter
argument_list|(
name|meeting
argument_list|)
condition|)
name|meetings
operator|.
name|add
argument_list|(
name|meeting
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|meetings
operator|.
name|isEmpty
argument_list|()
condition|)
name|iTimeGrid
operator|.
name|addEvent
argument_list|(
name|event
argument_list|,
name|meetings
argument_list|)
expr_stmt|;
block|}
name|iTimeGrid
operator|.
name|shrink
argument_list|()
expr_stmt|;
if|if
condition|(
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
condition|)
name|iTimeGrid
operator|.
name|labelDays
argument_list|(
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|.
name|getFirst
argument_list|()
argument_list|,
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|.
name|getLast
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|name
parameter_list|(
name|boolean
name|timetable
parameter_list|)
block|{
name|String
name|resource
decl_stmt|;
if|if
condition|(
name|iResource
operator|.
name|getType
argument_list|()
operator|==
name|ResourceType
operator|.
name|ROOM
condition|)
block|{
if|if
condition|(
name|iRoomPanel
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
operator|&&
name|iRoomPanel
operator|.
name|getValue
argument_list|()
operator|.
name|isOne
argument_list|()
condition|)
block|{
name|resource
operator|=
name|iRoomPanel
operator|.
name|getValue
argument_list|()
operator|.
name|getFirst
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|iRoomPanel
operator|.
name|getValues
argument_list|()
operator|!=
literal|null
operator|&&
name|iRoomPanel
operator|.
name|getValues
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
block|{
name|resource
operator|=
name|iRoomPanel
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resource
operator|=
name|MESSAGES
operator|.
name|resourceRoom
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
name|resource
operator|=
name|iResource
operator|.
name|getNameWithHint
argument_list|()
expr_stmt|;
block|}
name|String
name|session
init|=
name|iSession
operator|.
name|getAcademicSessionName
argument_list|()
decl_stmt|;
if|if
condition|(
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|.
name|isAll
argument_list|()
condition|)
name|session
operator|=
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|toLowerCase
argument_list|()
expr_stmt|;
return|return
operator|(
name|timetable
condition|?
name|MESSAGES
operator|.
name|sectTimetable
argument_list|(
name|resource
argument_list|,
name|session
argument_list|)
else|:
name|MESSAGES
operator|.
name|sectEvents
argument_list|(
name|resource
argument_list|,
name|session
argument_list|)
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|filter
parameter_list|(
name|MeetingInterface
name|meeting
parameter_list|)
block|{
if|if
condition|(
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|.
name|isAll
argument_list|()
condition|)
block|{
name|int
name|firstDayOfYear
init|=
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|.
name|getFirst
argument_list|()
operator|.
name|getDayOfYear
argument_list|()
decl_stmt|;
name|int
name|lastDayOfYear
init|=
operator|(
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|.
name|isOne
argument_list|()
condition|?
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|.
name|getFirst
argument_list|()
else|:
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|.
name|getLast
argument_list|()
operator|)
operator|.
name|getDayOfYear
argument_list|()
operator|+
literal|6
decl_stmt|;
if|if
condition|(
name|meeting
operator|.
name|getDayOfYear
argument_list|()
operator|<
name|firstDayOfYear
operator|||
name|meeting
operator|.
name|getDayOfYear
argument_list|()
operator|>
name|lastDayOfYear
condition|)
return|return
literal|true
return|;
block|}
if|if
condition|(
name|iRoomPanel
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|iRoomPanel
operator|.
name|getValue
argument_list|()
operator|.
name|isAll
argument_list|()
condition|)
block|{
if|if
condition|(
name|iRoomPanel
operator|.
name|getValue
argument_list|()
operator|.
name|isOne
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|iRoomPanel
operator|.
name|getValue
argument_list|()
operator|.
name|getFirst
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|meeting
operator|.
name|getLocationName
argument_list|()
argument_list|)
condition|)
return|return
literal|true
return|;
block|}
else|else
block|{
if|if
condition|(
name|iRoomPanel
operator|.
name|getValue
argument_list|()
operator|.
name|getFirst
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|compareTo
argument_list|(
name|meeting
operator|.
name|getLocationName
argument_list|()
argument_list|)
operator|>
literal|0
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|iRoomPanel
operator|.
name|getValue
argument_list|()
operator|.
name|getLast
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|compareTo
argument_list|(
name|meeting
operator|.
name|getLocationName
argument_list|()
argument_list|)
operator|<
literal|0
condition|)
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|private
name|TimeGrid
operator|.
name|Mode
name|gridMode
parameter_list|()
block|{
if|if
condition|(
literal|"0"
operator|.
name|equals
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"eq"
argument_list|)
argument_list|)
condition|)
return|return
name|TimeGrid
operator|.
name|Mode
operator|.
name|FILLSPACE
return|;
switch|switch
condition|(
name|iResource
operator|.
name|getType
argument_list|()
condition|)
block|{
case|case
name|ROOM
case|:
return|return
operator|(
name|iRoomPanel
operator|.
name|isOne
argument_list|()
operator|||
name|iWeekPanel
operator|.
name|isOne
argument_list|()
condition|?
name|TimeGrid
operator|.
name|Mode
operator|.
name|OVERLAP
else|:
name|TimeGrid
operator|.
name|Mode
operator|.
name|PROPORTIONAL
operator|)
return|;
case|case
name|PERSON
case|:
return|return
name|TimeGrid
operator|.
name|Mode
operator|.
name|OVERLAP
return|;
default|default:
return|return
operator|(
name|iRoomPanel
operator|.
name|isOne
argument_list|()
operator|||
operator|(
name|iWeekPanel
operator|.
name|isOne
argument_list|()
operator|&&
name|iRoomPanel
operator|.
name|getSelected
argument_list|()
operator|.
name|size
argument_list|()
operator|<=
literal|10
operator|)
condition|?
name|TimeGrid
operator|.
name|Mode
operator|.
name|OVERLAP
else|:
name|TimeGrid
operator|.
name|Mode
operator|.
name|PROPORTIONAL
operator|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|ResourceSuggestion
implements|implements
name|Suggestion
block|{
specifier|private
name|ResourceInterface
name|iResource
decl_stmt|;
specifier|public
name|ResourceSuggestion
parameter_list|(
name|ResourceInterface
name|resource
parameter_list|)
block|{
name|iResource
operator|=
name|resource
expr_stmt|;
block|}
specifier|public
name|ResourceInterface
name|getResource
parameter_list|()
block|{
return|return
name|iResource
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDisplayString
parameter_list|()
block|{
if|if
condition|(
name|iResource
operator|.
name|hasTitle
argument_list|()
condition|)
return|return
name|iResource
operator|.
name|getTitle
argument_list|()
return|;
if|if
condition|(
name|iResource
operator|.
name|hasAbbreviation
argument_list|()
operator|&&
operator|!
name|iResource
operator|.
name|getAbbreviation
argument_list|()
operator|.
name|equals
argument_list|(
name|iResource
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
return|return
name|iResource
operator|.
name|getAbbreviation
argument_list|()
operator|+
literal|" - "
operator|+
name|iResource
operator|.
name|getName
argument_list|()
return|;
return|return
operator|(
name|iResource
operator|.
name|hasAbbreviation
argument_list|()
condition|?
name|iResource
operator|.
name|getAbbreviation
argument_list|()
else|:
name|iResource
operator|.
name|getName
argument_list|()
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getReplacementString
parameter_list|()
block|{
return|return
operator|(
name|iResource
operator|.
name|hasAbbreviation
argument_list|()
condition|?
name|iResource
operator|.
name|getAbbreviation
argument_list|()
else|:
name|iResource
operator|.
name|getName
argument_list|()
operator|)
return|;
block|}
block|}
specifier|protected
name|void
name|changeUrl
parameter_list|()
block|{
name|FilterRpcRequest
name|events
init|=
name|iEvents
operator|.
name|getElementsRequest
argument_list|()
decl_stmt|;
name|FilterRpcRequest
name|rooms
init|=
name|iRooms
operator|.
name|getElementsRequest
argument_list|()
decl_stmt|;
if|if
condition|(
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|.
name|isAll
argument_list|()
condition|)
block|{
name|events
operator|.
name|setOption
argument_list|(
literal|"from"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|.
name|getFirst
argument_list|()
operator|.
name|getDayOfYear
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|events
operator|.
name|setOption
argument_list|(
literal|"to"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
operator|(
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|.
name|isOne
argument_list|()
condition|?
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|.
name|getFirst
argument_list|()
else|:
name|iWeekPanel
operator|.
name|getValue
argument_list|()
operator|.
name|getLast
argument_list|()
operator|)
operator|.
name|getDayOfYear
argument_list|()
operator|+
literal|6
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iRoomPanel
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|iRoomPanel
operator|.
name|getValue
argument_list|()
operator|.
name|isAll
argument_list|()
condition|)
block|{
for|for
control|(
name|ResourceInterface
name|resource
range|:
name|iRoomPanel
operator|.
name|getSelected
argument_list|()
control|)
name|events
operator|.
name|addOption
argument_list|(
literal|"room"
argument_list|,
name|resource
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|query
init|=
literal|"sid="
operator|+
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
operator|+
operator|(
name|iResource
operator|==
literal|null
operator|||
name|iResource
operator|.
name|getType
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|"&type="
operator|+
name|iResource
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|)
operator|+
operator|(
name|iResource
operator|==
literal|null
operator|||
name|iResource
operator|.
name|getId
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|"&id="
operator|+
name|iResource
operator|.
name|getId
argument_list|()
operator|)
operator|+
operator|(
name|iResource
operator|==
literal|null
operator|||
name|iResource
operator|.
name|getExternalId
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|"&ext="
operator|+
name|iResource
operator|.
name|getExternalId
argument_list|()
operator|)
decl_stmt|;
if|if
condition|(
name|events
operator|.
name|getOptions
argument_list|()
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|option
range|:
name|events
operator|.
name|getOptions
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
for|for
control|(
name|String
name|value
range|:
name|option
operator|.
name|getValue
argument_list|()
control|)
block|{
name|query
operator|+=
literal|"&e:"
operator|+
name|option
operator|.
name|getKey
argument_list|()
operator|+
literal|"="
operator|+
name|URL
operator|.
name|encodeQueryString
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|events
operator|.
name|getText
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|events
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|query
operator|+=
literal|"&e:text="
operator|+
name|URL
operator|.
name|encodeQueryString
argument_list|(
name|events
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|rooms
operator|.
name|getOptions
argument_list|()
operator|!=
literal|null
operator|&&
operator|(
name|iRoomPanel
operator|.
name|getValue
argument_list|()
operator|==
literal|null
operator|||
name|iRoomPanel
operator|.
name|getValue
argument_list|()
operator|.
name|isAll
argument_list|()
operator|)
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|option
range|:
name|rooms
operator|.
name|getOptions
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
for|for
control|(
name|String
name|value
range|:
name|option
operator|.
name|getValue
argument_list|()
control|)
block|{
name|query
operator|+=
literal|"&r:"
operator|+
name|option
operator|.
name|getKey
argument_list|()
operator|+
literal|"="
operator|+
name|URL
operator|.
name|encodeQueryString
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|rooms
operator|.
name|getText
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|rooms
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|query
operator|+=
literal|"&r:text="
operator|+
name|URL
operator|.
name|encodeQueryString
argument_list|(
name|rooms
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iTimeGrid
operator|!=
literal|null
condition|)
name|RPC
operator|.
name|execute
argument_list|(
name|EncodeQueryRpcRequest
operator|.
name|encode
argument_list|(
name|query
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|EncodeQueryRpcResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"export"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iTimeGrid
operator|.
name|setCalendarUrl
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|EncodeQueryRpcResponse
name|result
parameter_list|)
block|{
name|iTimeGrid
operator|.
name|setCalendarUrl
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"calendar?q="
operator|+
name|result
operator|.
name|getQuery
argument_list|()
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"export"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iLocDate
operator|=
name|iWeekPanel
operator|.
name|getSelection
argument_list|()
expr_stmt|;
name|iLocRoom
operator|=
name|iRoomPanel
operator|.
name|getSelection
argument_list|()
expr_stmt|;
name|changeUrl
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"page"
argument_list|)
argument_list|,
literal|"term="
operator|+
name|URL
operator|.
name|encodeQueryString
argument_list|(
name|iSession
operator|.
name|getAcademicSessionAbbreviation
argument_list|()
argument_list|)
operator|+
literal|"&type="
operator|+
name|iResourceTypes
operator|.
name|getValue
argument_list|(
name|iResourceTypes
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
operator|.
name|toLowerCase
argument_list|()
operator|+
operator|(
name|iResource
operator|==
literal|null
operator|||
name|iResource
operator|.
name|getAbbreviation
argument_list|()
operator|==
literal|null
operator|||
name|iResource
operator|.
name|getType
argument_list|()
operator|==
name|ResourceType
operator|.
name|PERSON
condition|?
literal|""
else|:
literal|"&name="
operator|+
name|URL
operator|.
name|encodeQueryString
argument_list|(
name|iResource
operator|.
name|getAbbreviation
argument_list|()
argument_list|)
operator|)
operator|+
operator|(
name|iLocDate
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|"&date="
operator|+
name|URL
operator|.
name|encodeQueryString
argument_list|(
name|iLocDate
argument_list|)
operator|)
operator|+
operator|(
name|iEvents
operator|.
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|"&events="
operator|+
name|URL
operator|.
name|encodeQueryString
argument_list|(
name|iEvents
operator|.
name|getValue
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
operator|)
operator|+
operator|(
name|iRooms
operator|.
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|"&rooms="
operator|+
name|URL
operator|.
name|encodeQueryString
argument_list|(
name|iRooms
operator|.
name|getValue
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
operator|)
operator|+
operator|(
name|iLocRoom
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|"&room="
operator|+
name|URL
operator|.
name|encodeQueryString
argument_list|(
name|iLocRoom
argument_list|)
operator|)
operator|+
literal|"&tab="
operator|+
operator|(
name|iTabBar
operator|.
name|getSelectedTab
argument_list|()
operator|==
literal|0
condition|?
literal|"grid"
else|:
literal|"table"
operator|)
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|native
specifier|static
name|void
name|changeUrl
parameter_list|(
name|String
name|page
parameter_list|,
name|String
name|query
parameter_list|)
comment|/*-{ 		try { 			$wnd.history.pushState(query, "", "gwt.jsp?page=" + page + "&" + query); 		} catch (err) { 		} 	}-*/
function_decl|;
specifier|private
class|class
name|RoomSelector
extends|extends
name|IntervalSelector
argument_list|<
name|ResourceInterface
argument_list|>
block|{
specifier|public
name|RoomSelector
parameter_list|()
block|{
name|super
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Interval
name|parse
parameter_list|(
name|String
name|query
parameter_list|)
block|{
if|if
condition|(
name|query
operator|==
literal|null
operator|||
name|getValues
argument_list|()
operator|==
literal|null
condition|)
return|return
operator|new
name|Interval
argument_list|()
return|;
name|ResourceInterface
name|first
init|=
literal|null
decl_stmt|,
name|last
init|=
literal|null
decl_stmt|;
for|for
control|(
name|ResourceInterface
name|e
range|:
name|getValues
argument_list|()
control|)
block|{
if|if
condition|(
name|e
operator|.
name|getName
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|query
argument_list|)
condition|)
return|return
operator|new
name|Interval
argument_list|(
name|e
argument_list|)
return|;
if|if
condition|(
name|e
operator|.
name|getName
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|startsWith
argument_list|(
name|query
operator|.
name|toLowerCase
argument_list|()
argument_list|)
condition|)
block|{
if|if
condition|(
name|first
operator|==
literal|null
condition|)
name|first
operator|=
name|e
expr_stmt|;
name|last
operator|=
name|e
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|first
operator|!=
literal|null
condition|)
return|return
operator|new
name|Interval
argument_list|(
name|first
argument_list|,
name|last
argument_list|)
return|;
block|}
block|}
name|Interval
name|ret
init|=
name|super
operator|.
name|parse
argument_list|(
name|query
argument_list|)
decl_stmt|;
return|return
operator|(
name|ret
operator|==
literal|null
condition|?
operator|new
name|Interval
argument_list|()
else|:
name|ret
operator|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|String
name|getDisplayString
parameter_list|(
name|Interval
name|interval
parameter_list|)
block|{
if|if
condition|(
name|interval
operator|==
literal|null
operator|||
name|interval
operator|.
name|isAll
argument_list|()
condition|)
return|return
name|MESSAGES
operator|.
name|allRooms
argument_list|()
return|;
if|if
condition|(
name|interval
operator|.
name|isOne
argument_list|()
condition|)
block|{
name|String
name|hint
init|=
name|interval
operator|.
name|getFirst
argument_list|()
operator|.
name|getRoomType
argument_list|()
operator|+
operator|(
name|interval
operator|.
name|getFirst
argument_list|()
operator|.
name|hasSize
argument_list|()
condition|?
literal|", "
operator|+
name|interval
operator|.
name|getFirst
argument_list|()
operator|.
name|getSize
argument_list|()
operator|+
literal|" seats"
else|:
literal|""
operator|)
operator|+
operator|(
name|interval
operator|.
name|getFirst
argument_list|()
operator|.
name|hasDistance
argument_list|()
condition|?
literal|", "
operator|+
name|Math
operator|.
name|round
argument_list|(
name|interval
operator|.
name|getFirst
argument_list|()
operator|.
name|getDistance
argument_list|()
argument_list|)
operator|+
literal|" m"
else|:
literal|""
operator|)
decl_stmt|;
return|return
name|interval
operator|.
name|getFirst
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"<span class='item-hint'>"
operator|+
name|hint
operator|+
literal|"</span>"
return|;
block|}
else|else
block|{
return|return
literal|"&nbsp;&nbsp;&nbsp;"
operator|+
name|interval
operator|.
name|getFirst
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" - "
operator|+
name|interval
operator|.
name|getLast
argument_list|()
operator|.
name|getName
argument_list|()
return|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|String
name|getReplaceString
parameter_list|(
name|Interval
name|interval
parameter_list|)
block|{
if|if
condition|(
name|interval
operator|==
literal|null
operator|||
name|interval
operator|.
name|isAll
argument_list|()
condition|)
return|return
name|MESSAGES
operator|.
name|allRooms
argument_list|()
return|;
return|return
name|interval
operator|.
name|isOne
argument_list|()
condition|?
name|interval
operator|.
name|getFirst
argument_list|()
operator|.
name|getName
argument_list|()
else|:
name|interval
operator|.
name|getFirst
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" - "
operator|+
name|interval
operator|.
name|getLast
argument_list|()
operator|.
name|getName
argument_list|()
return|;
block|}
specifier|public
name|String
name|getSelection
parameter_list|()
block|{
if|if
condition|(
name|getValue
argument_list|()
operator|==
literal|null
operator|||
name|getValue
argument_list|()
operator|.
name|isAll
argument_list|()
condition|)
return|return
literal|""
return|;
return|return
name|getValue
argument_list|()
operator|.
name|isOne
argument_list|()
condition|?
name|getValue
argument_list|()
operator|.
name|getFirst
argument_list|()
operator|.
name|getName
argument_list|()
else|:
name|getValue
argument_list|()
operator|.
name|getFirst
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"-"
operator|+
name|getValue
argument_list|()
operator|.
name|getLast
argument_list|()
operator|.
name|getName
argument_list|()
return|;
block|}
block|}
specifier|private
name|void
name|hideResults
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iPanel
operator|.
name|getRowCount
argument_list|()
condition|;
name|i
operator|++
control|)
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|i
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// iGridOrTablePanel.setVisible(false);
comment|// iTabBar.setVisible(false);
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"print"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"export"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|showResults
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iPanel
operator|.
name|getRowCount
argument_list|()
condition|;
name|i
operator|++
control|)
name|iPanel
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|i
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"print"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// iGridOrTablePanel.setVisible(true);
comment|// iTabBar.setVisible(true);
block|}
block|}
end_class

end_unit

