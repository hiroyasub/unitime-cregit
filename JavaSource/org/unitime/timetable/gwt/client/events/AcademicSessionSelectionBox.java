begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 (University Timetabling Application)  * Copyright (C) 2012, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcImplementedBy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|AcademicSessionProvider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|IsSerializable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HorizontalPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_class
specifier|public
class|class
name|AcademicSessionSelectionBox
extends|extends
name|Composite
implements|implements
name|AcademicSessionProvider
block|{
specifier|private
specifier|static
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|iList
decl_stmt|;
specifier|private
name|HorizontalPanel
name|iPanel
decl_stmt|;
specifier|private
name|Button
name|iPrev
decl_stmt|,
name|iNext
decl_stmt|;
specifier|private
name|List
argument_list|<
name|AcademicSessionChangeHandler
argument_list|>
name|iChangeHandlers
init|=
operator|new
name|ArrayList
argument_list|<
name|AcademicSessionChangeHandler
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|AcademicSession
argument_list|>
name|iSessions
init|=
operator|new
name|ArrayList
argument_list|<
name|AcademicSession
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Long
name|iLastSessionId
init|=
literal|null
decl_stmt|;
specifier|public
name|AcademicSessionSelectionBox
parameter_list|()
block|{
name|iPanel
operator|=
operator|new
name|HorizontalPanel
argument_list|()
expr_stmt|;
name|iPanel
operator|.
name|setSpacing
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|setStyleName
argument_list|(
literal|"unitime-AcademicSessionSelector"
argument_list|)
expr_stmt|;
name|iPrev
operator|=
operator|new
name|Button
argument_list|(
literal|"&laquo;"
argument_list|)
expr_stmt|;
name|iPrev
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iPrev
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|Long
name|id
init|=
name|getAcademicSessionId
argument_list|()
decl_stmt|;
for|for
control|(
name|AcademicSession
name|s
range|:
name|iSessions
control|)
if|if
condition|(
name|s
operator|.
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
name|id
argument_list|)
operator|&&
name|s
operator|.
name|getPreviousId
argument_list|()
operator|!=
literal|null
condition|)
name|selectSession
argument_list|(
name|s
operator|.
name|getPreviousId
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iNext
operator|=
operator|new
name|Button
argument_list|(
literal|"&raquo;"
argument_list|)
expr_stmt|;
name|iNext
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iNext
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|Long
name|id
init|=
name|getAcademicSessionId
argument_list|()
decl_stmt|;
for|for
control|(
name|AcademicSession
name|s
range|:
name|iSessions
control|)
if|if
condition|(
name|s
operator|.
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
name|id
argument_list|)
operator|&&
name|s
operator|.
name|getNextId
argument_list|()
operator|!=
literal|null
condition|)
name|selectSession
argument_list|(
name|s
operator|.
name|getNextId
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iList
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iList
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
literal|"Plase select..."
argument_list|,
literal|"0"
argument_list|)
expr_stmt|;
name|iList
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|fireAcademicSessionChanged
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|add
argument_list|(
name|iPrev
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|add
argument_list|(
name|iList
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|add
argument_list|(
name|iNext
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|ListAcademicSessions
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|AcademicSession
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iList
operator|.
name|setErrorHint
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|AcademicSession
argument_list|>
name|result
parameter_list|)
block|{
name|iSessions
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iSessions
operator|.
name|addAll
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|int
name|select
init|=
operator|-
literal|1
decl_stmt|;
name|iPrev
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iNext
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
for|for
control|(
name|AcademicSession
name|session
range|:
name|result
control|)
block|{
name|iList
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|session
operator|.
name|getName
argument_list|()
argument_list|,
name|session
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|session
operator|.
name|isSelected
argument_list|()
condition|)
block|{
name|select
operator|=
name|iList
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
expr_stmt|;
name|iPrev
operator|.
name|setEnabled
argument_list|(
name|session
operator|.
name|getPreviousId
argument_list|()
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|iNext
operator|.
name|setEnabled
argument_list|(
name|session
operator|.
name|getNextId
argument_list|()
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|select
operator|>=
literal|0
condition|)
block|{
name|iList
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|select
argument_list|)
expr_stmt|;
name|fireAcademicSessionChanged
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|initWidget
argument_list|(
name|iPanel
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Long
name|getAcademicSessionId
parameter_list|()
block|{
if|if
condition|(
name|iList
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|<=
literal|0
condition|)
return|return
literal|null
return|;
return|return
name|Long
operator|.
name|valueOf
argument_list|(
name|iList
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|iList
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getAcademicSessionName
parameter_list|()
block|{
if|if
condition|(
name|iList
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|<=
literal|0
condition|)
return|return
literal|null
return|;
return|return
name|iList
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemText
argument_list|(
name|iList
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addAcademicSessionChangeHandler
parameter_list|(
name|AcademicSessionChangeHandler
name|handler
parameter_list|)
block|{
name|iChangeHandlers
operator|.
name|add
argument_list|(
name|handler
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|selectSession
parameter_list|(
name|Long
name|sessionId
parameter_list|,
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
name|callback
parameter_list|)
block|{
if|if
condition|(
name|sessionId
operator|==
literal|null
condition|)
block|{
name|iList
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|callback
operator|!=
literal|null
condition|)
name|callback
operator|.
name|onSuccess
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iPrev
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iNext
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|index
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iList
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|sessionId
operator|.
name|equals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iList
operator|.
name|getWidget
argument_list|()
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
condition|)
block|{
name|index
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|index
operator|>=
literal|0
condition|)
block|{
name|iList
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|AcademicSession
name|session
init|=
name|iSessions
operator|.
name|get
argument_list|(
name|index
operator|-
literal|1
argument_list|)
decl_stmt|;
name|iPrev
operator|.
name|setEnabled
argument_list|(
name|session
operator|.
name|getPreviousId
argument_list|()
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|iNext
operator|.
name|setEnabled
argument_list|(
name|session
operator|.
name|getNextId
argument_list|()
operator|!=
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
name|callback
operator|!=
literal|null
condition|)
name|callback
operator|.
name|onSuccess
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iPrev
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iNext
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|callback
operator|!=
literal|null
condition|)
name|callback
operator|.
name|onSuccess
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
name|fireAcademicSessionChanged
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|fireAcademicSessionChanged
parameter_list|()
block|{
specifier|final
name|Long
name|oldSession
init|=
name|iLastSessionId
decl_stmt|;
name|iLastSessionId
operator|=
name|getAcademicSessionId
argument_list|()
expr_stmt|;
name|AcademicSessionChangeEvent
name|event
init|=
operator|new
name|AcademicSessionChangeEvent
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isChanged
parameter_list|()
block|{
if|if
condition|(
name|oldSession
operator|==
literal|null
condition|)
return|return
name|getAcademicSessionId
argument_list|()
operator|!=
literal|null
return|;
else|else
return|return
operator|!
name|oldSession
operator|.
name|equals
argument_list|(
name|getAcademicSessionId
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Long
name|getOldAcademicSessionId
parameter_list|()
block|{
return|return
name|oldSession
return|;
block|}
annotation|@
name|Override
specifier|public
name|Long
name|getNewAcademicSessionId
parameter_list|()
block|{
return|return
name|getAcademicSessionId
argument_list|()
return|;
block|}
block|}
decl_stmt|;
for|for
control|(
name|AcademicSessionChangeHandler
name|handler
range|:
name|iChangeHandlers
control|)
name|handler
operator|.
name|onAcademicSessionChange
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|AcademicSession
implements|implements
name|IsSerializable
block|{
specifier|private
name|Long
name|iUniqueId
decl_stmt|;
specifier|private
name|String
name|iName
decl_stmt|;
specifier|private
name|boolean
name|iSelected
decl_stmt|;
specifier|private
name|Long
name|iPreviousId
decl_stmt|,
name|iNextId
decl_stmt|;
specifier|public
name|AcademicSession
parameter_list|()
block|{
block|}
specifier|public
name|AcademicSession
parameter_list|(
name|Long
name|uniqueId
parameter_list|,
name|String
name|name
parameter_list|,
name|boolean
name|selected
parameter_list|)
block|{
name|iUniqueId
operator|=
name|uniqueId
expr_stmt|;
name|iName
operator|=
name|name
expr_stmt|;
name|iSelected
operator|=
name|selected
expr_stmt|;
block|}
specifier|public
name|Long
name|getUniqueId
parameter_list|()
block|{
return|return
name|iUniqueId
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|boolean
name|isSelected
parameter_list|()
block|{
return|return
name|iSelected
return|;
block|}
specifier|public
name|Long
name|getPreviousId
parameter_list|()
block|{
return|return
name|iPreviousId
return|;
block|}
specifier|public
name|void
name|setPreviousId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iPreviousId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|Long
name|getNextId
parameter_list|()
block|{
return|return
name|iNextId
return|;
block|}
specifier|public
name|void
name|setNextId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iNextId
operator|=
name|id
expr_stmt|;
block|}
block|}
annotation|@
name|GwtRpcImplementedBy
argument_list|(
literal|"org.unitime.timetable.events.ListAcademicSessions"
argument_list|)
specifier|public
specifier|static
class|class
name|ListAcademicSessions
implements|implements
name|GwtRpcRequest
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|AcademicSession
argument_list|>
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|""
return|;
block|}
block|}
block|}
end_class

end_unit

