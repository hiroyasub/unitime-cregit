begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 (University Timetabling Application)  * Copyright (C) 2012, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|Lookup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
operator|.
name|AcademicSessionSelectionBox
operator|.
name|AcademicSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
operator|.
name|EventMeetingTable
operator|.
name|EventMeetingRow
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
operator|.
name|EventMeetingTable
operator|.
name|OperationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimePageLabel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|sectioning
operator|.
name|EnrollmentTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|NumberBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeDialogBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTableHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|AcademicSessionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
operator|.
name|Enrollment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EventType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|SaveOrApproveEventRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|PersonInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|ContactInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EventPropertiesRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EventRoomAvailabilityRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EventRoomAvailabilityRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EventEnrollmentsRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|MeetingInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|MessageInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|RelatedObjectInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|RelatedObjectLookupRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|RelatedObjectLookupRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|ResourceInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|SaveEventRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|SelectionInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|SponsoringOrganizationInterface
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
operator|.
name|ScheduledCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Unit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|DomEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|DoubleClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|DoubleClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyCodes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHorizontalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasValue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|MenuBar
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|PopupPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextArea
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|UIObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|VerticalPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_class
specifier|public
class|class
name|EventAdd
extends|extends
name|Composite
implements|implements
name|EventMeetingTable
operator|.
name|Implementation
implements|,
name|AcademicSessionSelectionBox
operator|.
name|AcademicSessionFilter
block|{
specifier|private
specifier|static
specifier|final
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|GwtResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|String
name|iMainExternalId
init|=
literal|null
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
name|iName
decl_stmt|;
specifier|private
name|NumberBox
name|iLimit
decl_stmt|;
specifier|private
name|ListBox
name|iSponsors
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|iEventType
decl_stmt|;
specifier|private
name|TextArea
name|iNotes
decl_stmt|,
name|iEmails
decl_stmt|;
specifier|private
name|TextBox
name|iMainFName
decl_stmt|,
name|iMainMName
decl_stmt|,
name|iMainPhone
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
name|iMainLName
decl_stmt|,
name|iMainEmail
decl_stmt|;
specifier|private
name|CheckBox
name|iReqAttendance
decl_stmt|;
specifier|private
name|ListBox
name|iStandardNotes
decl_stmt|;
specifier|private
name|SimpleForm
name|iCoursesForm
decl_stmt|;
specifier|private
name|SimpleForm
name|iForm
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iHeader
decl_stmt|,
name|iFooter
decl_stmt|,
name|iMeetingsHeader
decl_stmt|;
specifier|private
name|EventMeetingTable
name|iMeetings
decl_stmt|;
specifier|private
name|CourseRelatedObjectsTable
name|iCourses
decl_stmt|;
specifier|private
name|AddMeetingsDialog
name|iEventAddMeetings
decl_stmt|;
specifier|private
name|AcademicSessionSelectionBox
name|iSession
decl_stmt|;
specifier|private
name|Lookup
name|iLookup
decl_stmt|,
name|iAdditionalLookup
decl_stmt|;
specifier|private
name|UniTimeTable
argument_list|<
name|ContactInterface
argument_list|>
name|iContacts
decl_stmt|;
specifier|private
name|int
name|iContactRow
decl_stmt|;
specifier|private
name|EnrollmentTable
name|iEnrollments
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iEnrollmentHeader
decl_stmt|;
specifier|private
name|int
name|iEnrollmentRow
decl_stmt|;
specifier|private
name|Button
name|iLookupButton
decl_stmt|,
name|iAdditionalLookupButton
decl_stmt|,
name|iStandardNotesButton
decl_stmt|;
specifier|private
name|UniTimeDialogBox
name|iStandardNotesBox
decl_stmt|;
specifier|private
name|EventInterface
name|iEvent
decl_stmt|,
name|iSavedEvent
decl_stmt|;
specifier|private
name|EventPropertiesProvider
name|iProperties
decl_stmt|;
specifier|private
name|int
name|iSessionRow
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|EventAdd
parameter_list|(
name|AcademicSessionSelectionBox
name|session
parameter_list|,
name|EventPropertiesProvider
name|properties
parameter_list|)
block|{
name|iSession
operator|=
name|session
expr_stmt|;
name|iProperties
operator|=
name|properties
expr_stmt|;
name|iForm
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|iLookup
operator|=
operator|new
name|Lookup
argument_list|()
expr_stmt|;
name|iLookup
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|PersonInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|PersonInterface
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|iMainExternalId
operator|=
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getId
argument_list|()
expr_stmt|;
name|iMainFName
operator|.
name|setText
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getFirstName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getFirstName
argument_list|()
argument_list|)
expr_stmt|;
name|iMainMName
operator|.
name|setText
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getMiddleName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getMiddleName
argument_list|()
argument_list|)
expr_stmt|;
name|iMainLName
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getLastName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getLastName
argument_list|()
argument_list|)
expr_stmt|;
name|iMainPhone
operator|.
name|setText
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getPhone
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getPhone
argument_list|()
argument_list|)
expr_stmt|;
name|iMainEmail
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getEmail
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|getEmail
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iAdditionalLookup
operator|=
operator|new
name|Lookup
argument_list|()
expr_stmt|;
name|iAdditionalLookup
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|PersonInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|PersonInterface
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
condition|)
block|{
specifier|final
name|ContactInterface
name|contact
init|=
operator|new
name|ContactInterface
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Widget
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|contact
operator|.
name|getName
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|contact
operator|.
name|hasEmail
argument_list|()
condition|?
name|contact
operator|.
name|getEmail
argument_list|()
else|:
literal|""
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|contact
operator|.
name|hasPhone
argument_list|()
condition|?
name|contact
operator|.
name|getPhone
argument_list|()
else|:
literal|""
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|Image
name|remove
init|=
operator|new
name|Image
argument_list|(
name|RESOURCES
operator|.
name|delete
argument_list|()
argument_list|)
decl_stmt|;
name|remove
operator|.
name|addStyleName
argument_list|(
literal|"remove"
argument_list|)
expr_stmt|;
name|remove
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
for|for
control|(
name|int
name|row
init|=
literal|1
init|;
name|row
operator|<
name|iContacts
operator|.
name|getRowCount
argument_list|()
condition|;
name|row
operator|++
control|)
if|if
condition|(
name|contact
operator|.
name|equals
argument_list|(
name|iContacts
operator|.
name|getData
argument_list|(
name|row
argument_list|)
argument_list|)
condition|)
block|{
name|iContacts
operator|.
name|removeRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
break|break;
block|}
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iContactRow
argument_list|,
name|iContacts
operator|.
name|getRowCount
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|remove
argument_list|)
expr_stmt|;
name|int
name|rowNum
init|=
name|iContacts
operator|.
name|addRow
argument_list|(
name|contact
argument_list|,
name|row
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|col
init|=
literal|0
init|;
name|col
operator|<
name|iContacts
operator|.
name|getCellCount
argument_list|(
name|rowNum
argument_list|)
condition|;
name|col
operator|++
control|)
name|iContacts
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|rowNum
argument_list|,
name|col
argument_list|,
literal|"main-contact"
argument_list|)
expr_stmt|;
block|}
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iContactRow
argument_list|,
name|iContacts
operator|.
name|getRowCount
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iLookup
operator|.
name|setOptions
argument_list|(
literal|"mustHaveExternalId"
operator|+
operator|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|",session="
operator|+
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
operator|)
argument_list|)
expr_stmt|;
name|iAdditionalLookup
operator|.
name|setOptions
argument_list|(
literal|"mustHaveExternalId"
operator|+
operator|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|",session="
operator|+
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
operator|)
argument_list|)
expr_stmt|;
name|iSession
operator|.
name|addAcademicSessionChangeHandler
argument_list|(
operator|new
name|AcademicSessionProvider
operator|.
name|AcademicSessionChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onAcademicSessionChange
parameter_list|(
name|AcademicSessionProvider
operator|.
name|AcademicSessionChangeEvent
name|event
parameter_list|)
block|{
name|iLookup
operator|.
name|setOptions
argument_list|(
literal|"mustHaveExternalId,session="
operator|+
name|event
operator|.
name|getNewAcademicSessionId
argument_list|()
argument_list|)
expr_stmt|;
name|iAdditionalLookup
operator|.
name|setOptions
argument_list|(
literal|"mustHaveExternalId,session="
operator|+
name|event
operator|.
name|getNewAcademicSessionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|sectEvent
argument_list|()
argument_list|)
expr_stmt|;
name|ClickHandler
name|clickCreateOrUpdate
init|=
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iSavedEvent
operator|=
literal|null
expr_stmt|;
name|validate
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedValidation
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
condition|)
block|{
specifier|final
name|EventInterface
name|event
init|=
name|getEvent
argument_list|()
decl_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|event
operator|.
name|getId
argument_list|()
operator|==
literal|null
condition|?
name|MESSAGES
operator|.
name|waitCreate
argument_list|(
name|event
operator|.
name|getName
argument_list|()
argument_list|)
else|:
name|MESSAGES
operator|.
name|waitUpdate
argument_list|(
name|event
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|SaveEventRpcRequest
operator|.
name|saveEvent
argument_list|(
name|getEvent
argument_list|()
argument_list|,
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|,
name|getMessage
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|SaveOrApproveEventRpcResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|String
name|message
init|=
operator|(
name|event
operator|.
name|getId
argument_list|()
operator|==
literal|null
condition|?
name|MESSAGES
operator|.
name|failedCreate
argument_list|(
name|event
operator|.
name|getName
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
else|:
name|MESSAGES
operator|.
name|failedUpdate
argument_list|(
name|event
operator|.
name|getName
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|)
decl_stmt|;
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|SaveOrApproveEventRpcResponse
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iSavedEvent
operator|=
name|result
operator|.
name|getEvent
argument_list|()
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|hasMessages
argument_list|()
condition|)
for|for
control|(
name|MessageInterface
name|m
range|:
name|result
operator|.
name|getMessages
argument_list|()
control|)
block|{
if|if
condition|(
name|m
operator|.
name|isError
argument_list|()
condition|)
name|UniTimeNotifications
operator|.
name|warn
argument_list|(
name|m
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
if|else if
condition|(
name|m
operator|.
name|isWarning
argument_list|()
condition|)
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|m
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|UniTimeNotifications
operator|.
name|info
argument_list|(
name|m
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"create"
argument_list|,
name|MESSAGES
operator|.
name|buttonCreate
argument_list|()
argument_list|,
literal|75
argument_list|,
name|clickCreateOrUpdate
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"update"
argument_list|,
name|MESSAGES
operator|.
name|buttonUpdate
argument_list|()
argument_list|,
literal|75
argument_list|,
name|clickCreateOrUpdate
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"delete"
argument_list|,
name|MESSAGES
operator|.
name|buttonDelete
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|clickEvent
parameter_list|)
block|{
specifier|final
name|EventInterface
name|event
init|=
name|getEvent
argument_list|()
decl_stmt|;
if|if
condition|(
name|event
operator|.
name|hasMeetings
argument_list|()
condition|)
name|event
operator|.
name|getMeetings
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitDelete
argument_list|(
name|event
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|SaveEventRpcRequest
operator|.
name|saveEvent
argument_list|(
name|event
argument_list|,
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|,
name|getMessage
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|SaveOrApproveEventRpcResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|failedDelete
argument_list|(
name|event
operator|.
name|getName
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedDelete
argument_list|(
name|event
operator|.
name|getName
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|SaveOrApproveEventRpcResponse
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iSavedEvent
operator|=
name|result
operator|.
name|getEvent
argument_list|()
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|hasMessages
argument_list|()
condition|)
for|for
control|(
name|MessageInterface
name|m
range|:
name|result
operator|.
name|getMessages
argument_list|()
control|)
block|{
if|if
condition|(
name|m
operator|.
name|isError
argument_list|()
condition|)
name|UniTimeNotifications
operator|.
name|warn
argument_list|(
name|m
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
if|else if
condition|(
name|m
operator|.
name|isWarning
argument_list|()
condition|)
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|m
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|UniTimeNotifications
operator|.
name|info
argument_list|(
name|m
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"back"
argument_list|,
name|MESSAGES
operator|.
name|buttonBack
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iHeader
argument_list|)
expr_stmt|;
name|iSessionRow
operator|=
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAcademicSession
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|()
argument_list|)
expr_stmt|;
name|iName
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
argument_list|(
operator|new
name|TextBox
argument_list|()
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"480px"
argument_list|)
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iName
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propEventName
argument_list|()
argument_list|,
name|iName
argument_list|)
expr_stmt|;
name|iSponsors
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propSponsor
argument_list|()
argument_list|,
name|iSponsors
argument_list|)
expr_stmt|;
name|iEventType
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iEventType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|EventInterface
operator|.
name|EventType
operator|.
name|Special
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propEventType
argument_list|()
argument_list|,
name|iEventType
argument_list|)
expr_stmt|;
name|iLimit
operator|=
operator|new
name|NumberBox
argument_list|()
expr_stmt|;
name|iLimit
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iLimit
operator|.
name|setMaxLength
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|iLimit
operator|.
name|setWidth
argument_list|(
literal|"50px"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAttendance
argument_list|()
argument_list|,
name|iLimit
argument_list|)
expr_stmt|;
name|iCourses
operator|=
operator|new
name|CourseRelatedObjectsTable
argument_list|(
name|iSession
argument_list|)
expr_stmt|;
name|iCourses
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|List
argument_list|<
name|RelatedObjectInterface
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|List
argument_list|<
name|RelatedObjectInterface
argument_list|>
argument_list|>
name|event
parameter_list|)
block|{
name|checkEnrollments
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|,
name|iMeetings
operator|.
name|getMeetings
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iReqAttendance
operator|=
operator|new
name|CheckBox
argument_list|(
name|MESSAGES
operator|.
name|checkRequiredAttendance
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleForm
name|mainContact
init|=
operator|new
name|SimpleForm
argument_list|()
decl_stmt|;
name|mainContact
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|clearWidth
argument_list|()
expr_stmt|;
name|mainContact
operator|.
name|removeStyleName
argument_list|(
literal|"unitime-NotPrintableBottomLine"
argument_list|)
expr_stmt|;
name|iLookupButton
operator|=
operator|new
name|Button
argument_list|(
name|MESSAGES
operator|.
name|buttonLookupMainContact
argument_list|()
argument_list|)
expr_stmt|;
name|iLookupButton
operator|.
name|setWidth
argument_list|(
literal|"75px"
argument_list|)
expr_stmt|;
name|Character
name|lookupAccessKey
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|MESSAGES
operator|.
name|buttonLookupMainContact
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|lookupAccessKey
operator|!=
literal|null
condition|)
name|iLookupButton
operator|.
name|setAccessKey
argument_list|(
name|lookupAccessKey
argument_list|)
expr_stmt|;
name|iLookupButton
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|iLookupButton
operator|.
name|isVisible
argument_list|()
condition|)
return|return;
name|iLookup
operator|.
name|setQuery
argument_list|(
operator|(
name|iMainFName
operator|.
name|getText
argument_list|()
operator|+
operator|(
name|iMainMName
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|" "
operator|+
name|iMainMName
operator|.
name|getText
argument_list|()
operator|)
operator|+
literal|" "
operator|+
name|iMainLName
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|)
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|iLookup
operator|.
name|center
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iLookupButton
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iAdditionalLookupButton
operator|=
operator|new
name|Button
argument_list|(
name|MESSAGES
operator|.
name|buttonLookupAdditionalContact
argument_list|()
argument_list|)
expr_stmt|;
name|iAdditionalLookupButton
operator|.
name|setWidth
argument_list|(
literal|"125px"
argument_list|)
expr_stmt|;
name|Character
name|additionalLookupAccessKey
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|MESSAGES
operator|.
name|buttonLookupAdditionalContact
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|additionalLookupAccessKey
operator|!=
literal|null
condition|)
name|iAdditionalLookupButton
operator|.
name|setAccessKey
argument_list|(
name|additionalLookupAccessKey
argument_list|)
expr_stmt|;
name|iAdditionalLookupButton
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iAdditionalLookupButton
operator|.
name|isVisible
argument_list|()
condition|)
name|iAdditionalLookup
operator|.
name|center
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iAdditionalLookupButton
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iMainFName
operator|=
operator|new
name|TextBox
argument_list|()
expr_stmt|;
name|iMainFName
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iMainFName
operator|.
name|setMaxLength
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|iMainFName
operator|.
name|setWidth
argument_list|(
literal|"285px"
argument_list|)
expr_stmt|;
name|mainContact
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propFirstName
argument_list|()
argument_list|,
name|iMainFName
argument_list|)
expr_stmt|;
name|mainContact
operator|.
name|setWidget
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|iLookupButton
argument_list|)
expr_stmt|;
name|iMainMName
operator|=
operator|new
name|TextBox
argument_list|()
expr_stmt|;
name|iMainMName
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iMainMName
operator|.
name|setMaxLength
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|iMainMName
operator|.
name|setWidth
argument_list|(
literal|"285px"
argument_list|)
expr_stmt|;
name|mainContact
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propMiddleName
argument_list|()
argument_list|,
name|iMainMName
argument_list|)
expr_stmt|;
name|iMainLName
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
argument_list|(
operator|new
name|TextBox
argument_list|()
argument_list|)
expr_stmt|;
name|iMainLName
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iMainLName
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|iMainLName
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"285px"
argument_list|)
expr_stmt|;
name|iMainLName
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iMainLName
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|mainContact
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propLastName
argument_list|()
argument_list|,
name|iMainLName
argument_list|)
expr_stmt|;
name|iMainEmail
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextBox
argument_list|>
argument_list|(
operator|new
name|TextBox
argument_list|()
argument_list|)
expr_stmt|;
name|iMainEmail
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iMainEmail
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|iMainEmail
operator|.
name|getWidget
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|"285px"
argument_list|)
expr_stmt|;
name|iMainEmail
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iMainEmail
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|mainContact
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propEmail
argument_list|()
argument_list|,
name|iMainEmail
argument_list|)
expr_stmt|;
name|iMainPhone
operator|=
operator|new
name|TextBox
argument_list|()
expr_stmt|;
name|iMainPhone
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iMainPhone
operator|.
name|setMaxLength
argument_list|(
literal|35
argument_list|)
expr_stmt|;
name|iMainPhone
operator|.
name|setWidth
argument_list|(
literal|"285px"
argument_list|)
expr_stmt|;
name|mainContact
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propPhone
argument_list|()
argument_list|,
name|iMainPhone
argument_list|)
expr_stmt|;
name|mainContact
operator|.
name|setWidget
argument_list|(
name|mainContact
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
argument_list|,
literal|2
argument_list|,
name|iAdditionalLookupButton
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propMainContact
argument_list|()
argument_list|,
name|mainContact
argument_list|)
expr_stmt|;
name|iContacts
operator|=
operator|new
name|UniTimeTable
argument_list|<
name|ContactInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iContacts
operator|.
name|setStyleName
argument_list|(
literal|"unitime-EventContacts"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Widget
argument_list|>
name|contactHeader
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|contactHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|contactHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colEmail
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|contactHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colPhone
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|contactHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|"&nbsp;"
argument_list|)
argument_list|)
expr_stmt|;
name|iContacts
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|contactHeader
argument_list|)
expr_stmt|;
name|iContactRow
operator|=
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAdditionalContacts
argument_list|()
argument_list|,
name|iContacts
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iContactRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iEmails
operator|=
operator|new
name|TextArea
argument_list|()
expr_stmt|;
name|iEmails
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|iEmails
operator|.
name|setVisibleLines
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|iEmails
operator|.
name|setCharacterWidth
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|UniTimeWidget
argument_list|<
name|TextArea
argument_list|>
name|emailsWithHint
init|=
operator|new
name|UniTimeWidget
argument_list|<
name|TextArea
argument_list|>
argument_list|(
name|iEmails
argument_list|)
decl_stmt|;
name|emailsWithHint
operator|.
name|setHint
argument_list|(
name|MESSAGES
operator|.
name|hintAdditionalEmails
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAdditionalEmails
argument_list|()
argument_list|,
name|emailsWithHint
argument_list|)
expr_stmt|;
name|iStandardNotes
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
name|iStandardNotes
operator|.
name|setVisibleItemCount
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|iStandardNotes
operator|.
name|setWidth
argument_list|(
literal|"600px"
argument_list|)
expr_stmt|;
name|iStandardNotes
operator|.
name|addDoubleClickHandler
argument_list|(
operator|new
name|DoubleClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onDoubleClick
parameter_list|(
name|DoubleClickEvent
name|event
parameter_list|)
block|{
name|String
name|text
init|=
name|iNotes
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|text
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
name|text
operator|.
name|endsWith
argument_list|(
literal|"\n"
argument_list|)
condition|)
name|text
operator|+=
literal|"\n"
expr_stmt|;
name|text
operator|+=
name|iStandardNotes
operator|.
name|getItemText
argument_list|(
name|iStandardNotes
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
expr_stmt|;
name|iNotes
operator|.
name|setText
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|iStandardNotesBox
operator|.
name|hide
argument_list|()
expr_stmt|;
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|iNotes
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iStandardNotes
operator|.
name|addKeyPressHandler
argument_list|(
operator|new
name|KeyPressHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
name|KeyPressEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_ENTER
condition|)
block|{
name|String
name|text
init|=
name|iNotes
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|text
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
name|text
operator|.
name|endsWith
argument_list|(
literal|"\n"
argument_list|)
condition|)
name|text
operator|+=
literal|"\n"
expr_stmt|;
name|text
operator|+=
name|iStandardNotes
operator|.
name|getItemText
argument_list|(
name|iStandardNotes
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
expr_stmt|;
name|iNotes
operator|.
name|setText
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|event
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
name|event
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
name|iStandardNotesBox
operator|.
name|hide
argument_list|()
expr_stmt|;
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|iNotes
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|standardNotesWithHint
init|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
name|iStandardNotes
argument_list|)
decl_stmt|;
name|standardNotesWithHint
operator|.
name|setHint
argument_list|(
name|MESSAGES
operator|.
name|hintStandardNoteDoubleClickToSelect
argument_list|()
argument_list|)
expr_stmt|;
name|iStandardNotesBox
operator|=
operator|new
name|UniTimeDialogBox
argument_list|(
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iStandardNotesBox
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|dialogStandardNotes
argument_list|()
argument_list|)
expr_stmt|;
name|iStandardNotesBox
operator|.
name|setWidget
argument_list|(
name|standardNotesWithHint
argument_list|)
expr_stmt|;
name|iNotes
operator|=
operator|new
name|TextArea
argument_list|()
expr_stmt|;
name|iNotes
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|iNotes
operator|.
name|setVisibleLines
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|iNotes
operator|.
name|setCharacterWidth
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|VerticalPanel
name|notesPanel
init|=
operator|new
name|VerticalPanel
argument_list|()
decl_stmt|;
name|notesPanel
operator|.
name|add
argument_list|(
name|iNotes
argument_list|)
expr_stmt|;
name|notesPanel
operator|.
name|setSpacing
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iStandardNotesButton
operator|=
operator|new
name|Button
argument_list|(
name|MESSAGES
operator|.
name|buttonStandardNotes
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iStandardNotes
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|iStandardNotesBox
operator|.
name|center
argument_list|()
expr_stmt|;
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|iStandardNotes
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|Character
name|standardNotesButtonAccessKey
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|MESSAGES
operator|.
name|buttonStandardNotes
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|standardNotesButtonAccessKey
operator|!=
literal|null
condition|)
name|iStandardNotesButton
operator|.
name|setAccessKey
argument_list|(
name|standardNotesButtonAccessKey
argument_list|)
expr_stmt|;
name|iStandardNotesButton
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iStandardNotesButton
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setMarginTop
argument_list|(
literal|2
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|notesPanel
operator|.
name|add
argument_list|(
name|iStandardNotesButton
argument_list|)
expr_stmt|;
name|notesPanel
operator|.
name|setCellHorizontalAlignment
argument_list|(
name|iStandardNotesButton
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAdditionalInformation
argument_list|()
argument_list|,
name|notesPanel
argument_list|)
expr_stmt|;
name|iCoursesForm
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|iCoursesForm
operator|.
name|addHeaderRow
argument_list|(
name|MESSAGES
operator|.
name|sectRelatedCourses
argument_list|()
argument_list|)
expr_stmt|;
name|iCoursesForm
operator|.
name|removeStyleName
argument_list|(
literal|"unitime-NotPrintableBottomLine"
argument_list|)
expr_stmt|;
name|iCoursesForm
operator|.
name|addRow
argument_list|(
name|iCourses
argument_list|)
expr_stmt|;
name|iCoursesForm
operator|.
name|addRow
argument_list|(
name|iReqAttendance
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iCoursesForm
argument_list|)
expr_stmt|;
name|iEventType
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|int
name|row
init|=
name|iForm
operator|.
name|getRow
argument_list|(
name|MESSAGES
operator|.
name|propAttendance
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|iEventType
operator|.
name|isReadOnly
argument_list|()
condition|)
block|{
name|iCoursesForm
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|row
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iEventType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|==
literal|1
condition|)
block|{
name|iCoursesForm
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|row
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iCoursesForm
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|row
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|checkEnrollments
argument_list|(
name|iCourses
operator|.
name|getValue
argument_list|()
argument_list|,
name|iMeetings
operator|.
name|getMeetings
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iEventAddMeetings
operator|=
operator|new
name|AddMeetingsDialog
argument_list|(
name|session
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|MeetingInterface
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedAddMeetings
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|List
argument_list|<
name|MeetingInterface
argument_list|>
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitCheckingRoomAvailability
argument_list|()
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|EventRoomAvailabilityRpcRequest
operator|.
name|checkAvailability
argument_list|(
name|result
argument_list|,
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|EventRoomAvailabilityRpcResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedRoomAvailability
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|EventRoomAvailabilityRpcResponse
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|addMeetings
argument_list|(
name|result
operator|.
name|getMeetings
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
comment|// addMeetings(result);
block|}
block|}
argument_list|)
expr_stmt|;
name|iMeetingsHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|sectMeetings
argument_list|()
argument_list|)
expr_stmt|;
name|iMeetingsHeader
operator|.
name|addButton
argument_list|(
literal|"add"
argument_list|,
name|MESSAGES
operator|.
name|buttonAddMeetings
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iEventAddMeetings
operator|.
name|showDialog
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iMeetingsHeader
operator|.
name|addButton
argument_list|(
literal|"operations"
argument_list|,
name|MESSAGES
operator|.
name|buttonMoreOperations
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
specifier|final
name|PopupPanel
name|popup
init|=
operator|new
name|PopupPanel
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|iMeetings
operator|.
name|getHeader
argument_list|(
literal|0
argument_list|)
operator|.
name|setMenu
argument_list|(
name|popup
argument_list|)
expr_stmt|;
name|popup
operator|.
name|showRelativeTo
argument_list|(
operator|(
name|UIObject
operator|)
name|event
operator|.
name|getSource
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|MenuBar
operator|)
name|popup
operator|.
name|getWidget
argument_list|()
operator|)
operator|.
name|focus
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iMeetingsHeader
argument_list|)
expr_stmt|;
name|iMeetings
operator|=
operator|new
name|EventMeetingTable
argument_list|(
name|EventMeetingTable
operator|.
name|Mode
operator|.
name|MeetingsOfAnEvent
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iMeetings
operator|.
name|setEditable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iMeetings
operator|.
name|setOperation
argument_list|(
name|EventMeetingTable
operator|.
name|OperationType
operator|.
name|AddMeetings
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|iMeetings
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|List
argument_list|<
name|EventMeetingRow
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|List
argument_list|<
name|EventMeetingRow
argument_list|>
argument_list|>
name|event
parameter_list|)
block|{
name|checkEnrollments
argument_list|(
name|iCourses
operator|.
name|getValue
argument_list|()
argument_list|,
name|iMeetings
operator|.
name|getMeetings
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iMeetings
argument_list|)
expr_stmt|;
name|iEnrollments
operator|=
operator|new
name|EnrollmentTable
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iEnrollments
operator|.
name|getTable
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-Enrollments"
argument_list|)
expr_stmt|;
name|iEnrollmentHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|sectEnrollments
argument_list|()
argument_list|)
expr_stmt|;
name|iEnrollmentRow
operator|=
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iEnrollmentHeader
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iEnrollments
operator|.
name|getTable
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iEnrollmentRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iEnrollmentRow
operator|+
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iFooter
operator|=
name|iHeader
operator|.
name|clonePanel
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addNotPrintableBottomRow
argument_list|(
name|iFooter
argument_list|)
expr_stmt|;
name|initWidget
argument_list|(
name|iForm
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getMessage
parameter_list|()
block|{
return|return
name|iNotes
operator|.
name|getText
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isEventAdd
parameter_list|()
block|{
return|return
name|iEvent
operator|==
literal|null
operator|||
name|iEvent
operator|.
name|getId
argument_list|()
operator|==
literal|null
return|;
block|}
specifier|public
name|Long
name|getEventId
parameter_list|()
block|{
return|return
name|iEvent
operator|==
literal|null
condition|?
literal|null
else|:
name|iEvent
operator|.
name|getId
argument_list|()
return|;
block|}
specifier|public
name|EventInterface
name|getEvent
parameter_list|()
block|{
name|iEvent
operator|.
name|setName
argument_list|(
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|iEventType
operator|.
name|isReadOnly
argument_list|()
condition|)
block|{
name|iEvent
operator|.
name|setType
argument_list|(
name|iEventType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|==
literal|0
condition|?
name|EventType
operator|.
name|Special
else|:
name|EventType
operator|.
name|Course
argument_list|)
expr_stmt|;
name|iEvent
operator|.
name|setMaxCapacity
argument_list|(
name|iLimit
operator|.
name|toInteger
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iEvent
operator|.
name|getContact
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iEvent
operator|.
name|setContact
argument_list|(
operator|new
name|ContactInterface
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|setExternalId
argument_list|(
name|iMainExternalId
argument_list|)
expr_stmt|;
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|setFirstName
argument_list|(
name|iMainFName
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|setMiddleName
argument_list|(
name|iMainMName
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|setLastName
argument_list|(
name|iMainLName
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|setEmail
argument_list|(
name|iMainEmail
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|setPhone
argument_list|(
name|iMainPhone
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iEvent
operator|.
name|hasAdditionalContacts
argument_list|()
condition|)
name|iEvent
operator|.
name|getAdditionalContacts
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
for|for
control|(
name|ContactInterface
name|contact
range|:
name|iContacts
operator|.
name|getData
argument_list|()
control|)
name|iEvent
operator|.
name|addAdditionalContact
argument_list|(
name|contact
argument_list|)
expr_stmt|;
name|iEvent
operator|.
name|setEmail
argument_list|(
name|iEmails
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
comment|/* 		if (iEvent.hasNotes()&& iEvent.getNotes().last().getDate() == null) 			iEvent.getNotes().remove(iEvent.getNotes().last()); 		if (!iNotes.getText().isEmpty()) { 			NoteInterface note = new NoteInterface(); 			note.setNote(iNotes.getText()); 			note.setType(iEvent.getId() == null ? NoteType.Create : NoteType.AddMeetings); 			iEvent.addNote(note); 		} 		*/
if|if
condition|(
name|iEvent
operator|.
name|hasMeetings
argument_list|()
condition|)
name|iEvent
operator|.
name|getMeetings
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
for|for
control|(
name|MeetingInterface
name|meeting
range|:
name|iMeetings
operator|.
name|getMeetings
argument_list|()
control|)
name|iEvent
operator|.
name|addMeeting
argument_list|(
name|meeting
argument_list|)
expr_stmt|;
if|if
condition|(
name|iSponsors
operator|.
name|getSelectedIndex
argument_list|()
operator|>
literal|0
condition|)
block|{
name|Long
name|sponsorId
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|iSponsors
operator|.
name|getValue
argument_list|(
name|iSponsors
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|SponsoringOrganizationInterface
name|sponsor
init|=
literal|null
decl_stmt|;
name|List
argument_list|<
name|SponsoringOrganizationInterface
argument_list|>
name|sponsors
init|=
operator|(
name|getProperties
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|getProperties
argument_list|()
operator|.
name|getSponsoringOrganizations
argument_list|()
operator|)
decl_stmt|;
for|for
control|(
name|SponsoringOrganizationInterface
name|s
range|:
name|sponsors
control|)
if|if
condition|(
name|s
operator|.
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
name|sponsorId
argument_list|)
condition|)
block|{
name|sponsor
operator|=
name|s
expr_stmt|;
break|break;
block|}
name|iEvent
operator|.
name|setSponsor
argument_list|(
name|sponsor
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iEvent
operator|.
name|setSponsor
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iEvent
operator|.
name|getType
argument_list|()
operator|==
name|EventType
operator|.
name|Course
condition|)
block|{
if|if
condition|(
name|iEvent
operator|.
name|hasRelatedObjects
argument_list|()
condition|)
name|iEvent
operator|.
name|getRelatedObjects
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
for|for
control|(
name|RelatedObjectInterface
name|related
range|:
name|iCourses
operator|.
name|getValue
argument_list|()
control|)
name|iEvent
operator|.
name|addRelatedObject
argument_list|(
name|related
argument_list|)
expr_stmt|;
name|iEvent
operator|.
name|setRequiredAttendance
argument_list|(
name|iReqAttendance
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|iEvent
operator|.
name|getType
argument_list|()
operator|==
name|EventType
operator|.
name|Special
condition|)
block|{
if|if
condition|(
name|iEvent
operator|.
name|hasRelatedObjects
argument_list|()
condition|)
name|iEvent
operator|.
name|getRelatedObjects
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iEvent
operator|.
name|setRequiredAttendance
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
return|return
name|iEvent
return|;
block|}
specifier|public
name|EventInterface
name|getSavedEvent
parameter_list|()
block|{
return|return
name|iSavedEvent
return|;
block|}
specifier|protected
name|void
name|addMeetings
parameter_list|(
name|List
argument_list|<
name|MeetingInterface
argument_list|>
name|meetings
parameter_list|)
block|{
name|List
argument_list|<
name|MeetingInterface
argument_list|>
name|existingMeetings
init|=
name|iMeetings
operator|.
name|getMeetings
argument_list|()
decl_stmt|;
if|if
condition|(
name|meetings
operator|!=
literal|null
operator|&&
operator|!
name|meetings
operator|.
name|isEmpty
argument_list|()
condition|)
name|meetings
label|:
for|for
control|(
name|MeetingInterface
name|meeting
range|:
name|meetings
control|)
block|{
for|for
control|(
name|MeetingInterface
name|existing
range|:
name|existingMeetings
control|)
block|{
if|if
condition|(
name|existing
operator|.
name|inConflict
argument_list|(
name|meeting
argument_list|)
condition|)
block|{
name|UniTimeNotifications
operator|.
name|warn
argument_list|(
name|MESSAGES
operator|.
name|warnNewMeetingOverlaps
argument_list|(
name|meeting
operator|.
name|toString
argument_list|()
argument_list|,
name|existing
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
continue|continue
name|meetings
continue|;
block|}
block|}
name|iMeetings
operator|.
name|add
argument_list|(
operator|new
name|EventMeetingRow
argument_list|(
name|iEvent
argument_list|,
name|meeting
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|iMeetings
argument_list|,
name|iMeetings
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|iLastScrollTop
decl_stmt|,
name|iLastScrollLeft
decl_stmt|;
specifier|public
name|void
name|show
parameter_list|()
block|{
name|UniTimePageLabel
operator|.
name|getInstance
argument_list|()
operator|.
name|setPageName
argument_list|(
name|iEvent
operator|.
name|getId
argument_list|()
operator|==
literal|null
condition|?
name|MESSAGES
operator|.
name|pageAddEvent
argument_list|()
else|:
name|MESSAGES
operator|.
name|pageEditEvent
argument_list|()
argument_list|)
expr_stmt|;
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iLastScrollLeft
operator|=
name|Window
operator|.
name|getScrollLeft
argument_list|()
expr_stmt|;
name|iLastScrollTop
operator|=
name|Window
operator|.
name|getScrollTop
argument_list|()
expr_stmt|;
name|onShow
argument_list|()
expr_stmt|;
name|Window
operator|.
name|scrollTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|isVisible
argument_list|(
name|iSessionRow
argument_list|)
condition|)
block|{
name|iSession
operator|.
name|setFilter
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|setWidget
argument_list|(
name|iSessionRow
argument_list|,
literal|1
argument_list|,
name|iSession
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|hide
parameter_list|()
block|{
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|onHide
argument_list|()
expr_stmt|;
name|Window
operator|.
name|scrollTo
argument_list|(
name|iLastScrollLeft
argument_list|,
name|iLastScrollTop
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|onHide
parameter_list|()
block|{
block|}
specifier|protected
name|void
name|onShow
parameter_list|()
block|{
block|}
specifier|public
name|void
name|setup
parameter_list|(
name|EventPropertiesRpcResponse
name|properties
parameter_list|)
block|{
if|if
condition|(
name|properties
operator|.
name|hasSponsoringOrganizations
argument_list|()
condition|)
block|{
name|iSponsors
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iSponsors
operator|.
name|addItem
argument_list|(
literal|"Select..."
argument_list|,
literal|""
argument_list|)
expr_stmt|;
for|for
control|(
name|SponsoringOrganizationInterface
name|sponsor
range|:
name|properties
operator|.
name|getSponsoringOrganizations
argument_list|()
control|)
name|iSponsors
operator|.
name|addItem
argument_list|(
name|sponsor
operator|.
name|getName
argument_list|()
argument_list|,
name|sponsor
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iForm
operator|.
name|getRow
argument_list|(
name|MESSAGES
operator|.
name|propSponsor
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|isAttached
argument_list|()
operator|&&
name|isVisible
argument_list|()
operator|&&
operator|(
name|iEvent
operator|!=
literal|null
operator|&&
name|iEvent
operator|.
name|getId
argument_list|()
operator|==
literal|null
operator|)
condition|)
name|setEvent
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setEvent
parameter_list|(
name|EventInterface
name|event
parameter_list|)
block|{
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iSessionRow
argument_list|,
name|event
operator|==
literal|null
argument_list|)
expr_stmt|;
name|iEvent
operator|=
operator|(
name|event
operator|==
literal|null
condition|?
operator|new
name|EventInterface
argument_list|()
else|:
name|event
operator|)
expr_stmt|;
name|iSavedEvent
operator|=
literal|null
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|iEvent
operator|.
name|getName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|iEvent
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iEvent
operator|.
name|hasSponsor
argument_list|()
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|iSponsors
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|iSponsors
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|equals
argument_list|(
name|iEvent
operator|.
name|getSponsor
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|iSponsors
operator|.
name|setSelectedIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
else|else
block|{
name|iSponsors
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
name|boolean
name|canAddCourseEvent
init|=
operator|(
name|getProperties
argument_list|()
operator|==
literal|null
condition|?
literal|false
else|:
name|getProperties
argument_list|()
operator|.
name|isCanAddCourseEvent
argument_list|()
operator|)
decl_stmt|;
if|if
condition|(
name|canAddCourseEvent
condition|)
block|{
if|if
condition|(
name|iEventType
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|==
literal|1
condition|)
name|iEventType
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|EventInterface
operator|.
name|EventType
operator|.
name|Course
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|iEventType
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|==
literal|2
condition|)
name|iEventType
operator|.
name|getWidget
argument_list|()
operator|.
name|removeItem
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iEvent
operator|.
name|getType
argument_list|()
operator|==
literal|null
condition|)
block|{
name|iEventType
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iEventType
operator|.
name|setReadOnly
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iEventType
operator|.
name|setText
argument_list|(
name|iEvent
operator|.
name|getType
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|iEventType
operator|.
name|setReadOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|iLimit
operator|.
name|setValue
argument_list|(
name|iEvent
operator|.
name|hasMaxCapacity
argument_list|()
condition|?
name|iEvent
operator|.
name|getMaxCapacity
argument_list|()
else|:
literal|null
argument_list|)
expr_stmt|;
name|iNotes
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iEmails
operator|.
name|setText
argument_list|(
name|iEvent
operator|.
name|hasEmail
argument_list|()
condition|?
name|iEvent
operator|.
name|getEmail
argument_list|()
else|:
literal|""
argument_list|)
expr_stmt|;
if|if
condition|(
name|iEvent
operator|.
name|getType
argument_list|()
operator|==
name|EventType
operator|.
name|Course
condition|)
block|{
name|iCourses
operator|.
name|setValue
argument_list|(
name|iEvent
operator|.
name|getRelatedObjects
argument_list|()
argument_list|)
expr_stmt|;
name|iReqAttendance
operator|.
name|setValue
argument_list|(
name|iEvent
operator|.
name|hasRequiredAttendance
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|canAddCourseEvent
condition|)
name|iCourses
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|iReqAttendance
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iEvent
operator|.
name|hasMeetings
argument_list|()
condition|)
block|{
name|iMeetings
operator|.
name|setMeetings
argument_list|(
name|iEvent
argument_list|,
name|iEvent
operator|.
name|getMeetings
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iMeetings
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|MeetingInterface
argument_list|>
name|meetings
init|=
operator|new
name|ArrayList
argument_list|<
name|MeetingInterface
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|SelectionInterface
argument_list|>
name|selection
init|=
operator|(
name|iProperties
operator|==
literal|null
condition|?
literal|null
else|:
name|iProperties
operator|.
name|getSelection
argument_list|()
operator|)
decl_stmt|;
if|if
condition|(
name|selection
operator|!=
literal|null
operator|&&
operator|!
name|selection
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
for|for
control|(
name|SelectionInterface
name|s
range|:
name|selection
control|)
block|{
for|for
control|(
name|Integer
name|day
range|:
name|s
operator|.
name|getDays
argument_list|()
control|)
block|{
for|for
control|(
name|ResourceInterface
name|room
range|:
name|s
operator|.
name|getLocations
argument_list|()
control|)
block|{
name|MeetingInterface
name|meeting
init|=
operator|new
name|MeetingInterface
argument_list|()
decl_stmt|;
name|meeting
operator|.
name|setStartSlot
argument_list|(
name|s
operator|.
name|getStartSlot
argument_list|()
argument_list|)
expr_stmt|;
name|meeting
operator|.
name|setEndSlot
argument_list|(
name|s
operator|.
name|getStartSlot
argument_list|()
operator|+
name|s
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|meeting
operator|.
name|setStartOffset
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|meeting
operator|.
name|setEndOffset
argument_list|(
operator|-
name|room
operator|.
name|getBreakTime
argument_list|()
argument_list|)
expr_stmt|;
name|meeting
operator|.
name|setDayOfYear
argument_list|(
name|day
argument_list|)
expr_stmt|;
name|meeting
operator|.
name|setLocation
argument_list|(
name|room
argument_list|)
expr_stmt|;
name|meetings
operator|.
name|add
argument_list|(
name|meeting
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
if|if
condition|(
operator|!
name|meetings
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitCheckingRoomAvailability
argument_list|()
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|EventRoomAvailabilityRpcRequest
operator|.
name|checkAvailability
argument_list|(
name|meetings
argument_list|,
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|EventRoomAvailabilityRpcResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedRoomAvailability
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|EventRoomAvailabilityRpcResponse
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iMeetings
operator|.
name|setMeetings
argument_list|(
name|iEvent
argument_list|,
name|result
operator|.
name|getMeetings
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iEvent
operator|.
name|hasContact
argument_list|()
condition|)
block|{
name|iMainExternalId
operator|=
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|getExternalId
argument_list|()
expr_stmt|;
name|iMainFName
operator|.
name|setText
argument_list|(
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|hasFirstName
argument_list|()
condition|?
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|getFirstName
argument_list|()
else|:
literal|""
argument_list|)
expr_stmt|;
name|iMainMName
operator|.
name|setText
argument_list|(
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|hasMiddleName
argument_list|()
condition|?
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|getMiddleName
argument_list|()
else|:
literal|""
argument_list|)
expr_stmt|;
name|iMainLName
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|hasLastName
argument_list|()
condition|?
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|getLastName
argument_list|()
else|:
literal|""
argument_list|)
expr_stmt|;
name|iMainPhone
operator|.
name|setText
argument_list|(
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|hasPhone
argument_list|()
condition|?
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|getPhone
argument_list|()
else|:
literal|""
argument_list|)
expr_stmt|;
name|iMainEmail
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|hasEmail
argument_list|()
condition|?
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|getEmail
argument_list|()
else|:
literal|""
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ContactInterface
name|mainContact
init|=
operator|(
name|getProperties
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|getProperties
argument_list|()
operator|.
name|getMainContact
argument_list|()
operator|)
decl_stmt|;
if|if
condition|(
name|mainContact
operator|!=
literal|null
condition|)
block|{
name|iMainExternalId
operator|=
name|mainContact
operator|.
name|getExternalId
argument_list|()
expr_stmt|;
name|iMainFName
operator|.
name|setText
argument_list|(
name|mainContact
operator|.
name|getFirstName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|mainContact
operator|.
name|getFirstName
argument_list|()
argument_list|)
expr_stmt|;
name|iMainMName
operator|.
name|setText
argument_list|(
name|mainContact
operator|.
name|getMiddleName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|mainContact
operator|.
name|getMiddleName
argument_list|()
argument_list|)
expr_stmt|;
name|iMainLName
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|mainContact
operator|.
name|getLastName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|mainContact
operator|.
name|getLastName
argument_list|()
argument_list|)
expr_stmt|;
name|iMainPhone
operator|.
name|setText
argument_list|(
name|mainContact
operator|.
name|getPhone
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|mainContact
operator|.
name|getPhone
argument_list|()
argument_list|)
expr_stmt|;
name|iMainEmail
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
name|mainContact
operator|.
name|getEmail
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|mainContact
operator|.
name|getEmail
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iMainExternalId
operator|=
literal|null
expr_stmt|;
name|iMainFName
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iMainMName
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iMainLName
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iMainPhone
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iMainEmail
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
block|}
name|iContacts
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|iEvent
operator|.
name|hasAdditionalContacts
argument_list|()
condition|)
block|{
for|for
control|(
specifier|final
name|ContactInterface
name|contact
range|:
name|iEvent
operator|.
name|getAdditionalContacts
argument_list|()
control|)
block|{
name|List
argument_list|<
name|Widget
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|contact
operator|.
name|getName
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|contact
operator|.
name|hasEmail
argument_list|()
condition|?
name|contact
operator|.
name|getEmail
argument_list|()
else|:
literal|""
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|contact
operator|.
name|hasPhone
argument_list|()
condition|?
name|contact
operator|.
name|getPhone
argument_list|()
else|:
literal|""
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|Image
name|remove
init|=
operator|new
name|Image
argument_list|(
name|RESOURCES
operator|.
name|delete
argument_list|()
argument_list|)
decl_stmt|;
name|remove
operator|.
name|addStyleName
argument_list|(
literal|"remove"
argument_list|)
expr_stmt|;
name|remove
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
for|for
control|(
name|int
name|row
init|=
literal|1
init|;
name|row
operator|<
name|iContacts
operator|.
name|getRowCount
argument_list|()
condition|;
name|row
operator|++
control|)
if|if
condition|(
name|contact
operator|.
name|equals
argument_list|(
name|iContacts
operator|.
name|getData
argument_list|(
name|row
argument_list|)
argument_list|)
condition|)
block|{
name|iContacts
operator|.
name|removeRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
break|break;
block|}
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iContactRow
argument_list|,
name|iContacts
operator|.
name|getRowCount
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|remove
argument_list|)
expr_stmt|;
name|int
name|rowNum
init|=
name|iContacts
operator|.
name|addRow
argument_list|(
name|contact
argument_list|,
name|row
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|col
init|=
literal|0
init|;
name|col
operator|<
name|iContacts
operator|.
name|getCellCount
argument_list|(
name|rowNum
argument_list|)
condition|;
name|col
operator|++
control|)
name|iContacts
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|rowNum
argument_list|,
name|col
argument_list|,
literal|"main-contact"
argument_list|)
expr_stmt|;
block|}
block|}
name|boolean
name|canLookup
init|=
operator|(
name|getProperties
argument_list|()
operator|==
literal|null
condition|?
literal|false
else|:
name|getProperties
argument_list|()
operator|.
name|isCanLookupContacts
argument_list|()
operator|)
decl_stmt|;
name|iLookupButton
operator|.
name|setVisible
argument_list|(
name|canLookup
argument_list|)
expr_stmt|;
name|iAdditionalLookupButton
operator|.
name|setVisible
argument_list|(
name|canLookup
argument_list|)
expr_stmt|;
name|boolean
name|canSeeStandardNotes
init|=
operator|(
name|getProperties
argument_list|()
operator|==
literal|null
condition|?
literal|false
else|:
name|getProperties
argument_list|()
operator|.
name|isCanLookupContacts
argument_list|()
operator|&&
name|getProperties
argument_list|()
operator|.
name|hasStandardNotes
argument_list|()
operator|)
decl_stmt|;
name|iStandardNotesButton
operator|.
name|setVisible
argument_list|(
name|canSeeStandardNotes
argument_list|)
expr_stmt|;
name|iStandardNotes
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|canSeeStandardNotes
condition|)
for|for
control|(
name|String
name|note
range|:
name|getProperties
argument_list|()
operator|.
name|getStandardNotes
argument_list|()
control|)
name|iStandardNotes
operator|.
name|addItem
argument_list|(
name|note
argument_list|)
expr_stmt|;
name|iEventAddMeetings
operator|.
name|reset
argument_list|(
name|iProperties
operator|==
literal|null
condition|?
literal|null
else|:
name|iProperties
operator|.
name|getRoomFilter
argument_list|()
argument_list|)
expr_stmt|;
name|DomEvent
operator|.
name|fireNativeEvent
argument_list|(
name|Document
operator|.
name|get
argument_list|()
operator|.
name|createChangeEvent
argument_list|()
argument_list|,
name|iEventType
operator|.
name|getWidget
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
name|canDelete
init|=
operator|(
name|iEvent
operator|.
name|getId
argument_list|()
operator|!=
literal|null
operator|)
decl_stmt|;
if|if
condition|(
name|canDelete
operator|&&
name|iEvent
operator|.
name|hasMeetings
argument_list|()
condition|)
block|{
for|for
control|(
name|MeetingInterface
name|meeting
range|:
name|iEvent
operator|.
name|getMeetings
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|meeting
operator|.
name|isCanEdit
argument_list|()
condition|)
block|{
name|canDelete
operator|=
literal|false
expr_stmt|;
break|break;
block|}
block|}
block|}
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"delete"
argument_list|,
name|canDelete
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"create"
argument_list|,
name|iEvent
operator|.
name|getId
argument_list|()
operator|==
literal|null
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"update"
argument_list|,
name|iEvent
operator|.
name|getId
argument_list|()
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|CourseRelatedObjectLine
block|{
name|List
argument_list|<
name|RelatedObjectLookupRpcResponse
argument_list|>
name|iSubjects
decl_stmt|,
name|iCourses
decl_stmt|,
name|iSubparts
decl_stmt|,
name|iClasses
decl_stmt|;
specifier|public
name|List
argument_list|<
name|RelatedObjectLookupRpcResponse
argument_list|>
name|getSubjects
parameter_list|()
block|{
return|return
name|iSubjects
return|;
block|}
specifier|public
name|void
name|setSubjects
parameter_list|(
name|List
argument_list|<
name|RelatedObjectLookupRpcResponse
argument_list|>
name|subjects
parameter_list|)
block|{
name|iSubjects
operator|=
name|subjects
expr_stmt|;
block|}
specifier|public
name|RelatedObjectLookupRpcResponse
name|getSubject
parameter_list|(
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
operator|||
name|value
operator|.
name|isEmpty
argument_list|()
operator|||
name|iSubjects
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|RelatedObjectLookupRpcResponse
name|r
range|:
name|iSubjects
control|)
if|if
condition|(
name|r
operator|.
name|getUniqueId
argument_list|()
operator|!=
literal|null
operator|&&
name|r
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|value
argument_list|)
condition|)
return|return
name|r
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|List
argument_list|<
name|RelatedObjectLookupRpcResponse
argument_list|>
name|getCourses
parameter_list|()
block|{
return|return
name|iCourses
return|;
block|}
specifier|public
name|void
name|setCourses
parameter_list|(
name|List
argument_list|<
name|RelatedObjectLookupRpcResponse
argument_list|>
name|courses
parameter_list|)
block|{
name|iCourses
operator|=
name|courses
expr_stmt|;
block|}
specifier|public
name|RelatedObjectLookupRpcResponse
name|getCourse
parameter_list|(
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
operator|||
name|value
operator|.
name|isEmpty
argument_list|()
operator|||
name|iCourses
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|RelatedObjectLookupRpcResponse
name|r
range|:
name|iCourses
control|)
if|if
condition|(
name|r
operator|.
name|getUniqueId
argument_list|()
operator|!=
literal|null
operator|&&
name|r
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|value
argument_list|)
condition|)
return|return
name|r
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|List
argument_list|<
name|RelatedObjectLookupRpcResponse
argument_list|>
name|getSubparts
parameter_list|()
block|{
return|return
name|iSubparts
return|;
block|}
specifier|public
name|void
name|setSubparts
parameter_list|(
name|List
argument_list|<
name|RelatedObjectLookupRpcResponse
argument_list|>
name|subparts
parameter_list|)
block|{
name|iSubparts
operator|=
name|subparts
expr_stmt|;
block|}
specifier|public
name|RelatedObjectLookupRpcResponse
name|getSubpart
parameter_list|(
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
operator|||
name|value
operator|.
name|isEmpty
argument_list|()
operator|||
name|iSubparts
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|RelatedObjectLookupRpcResponse
name|r
range|:
name|iSubparts
control|)
if|if
condition|(
name|r
operator|.
name|getUniqueId
argument_list|()
operator|!=
literal|null
operator|&&
operator|(
name|r
operator|.
name|getLevel
argument_list|()
operator|+
literal|":"
operator|+
name|r
operator|.
name|getUniqueId
argument_list|()
operator|)
operator|.
name|equals
argument_list|(
name|value
argument_list|)
condition|)
return|return
name|r
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|List
argument_list|<
name|RelatedObjectLookupRpcResponse
argument_list|>
name|getClasses
parameter_list|()
block|{
return|return
name|iClasses
return|;
block|}
specifier|public
name|void
name|setClasses
parameter_list|(
name|List
argument_list|<
name|RelatedObjectLookupRpcResponse
argument_list|>
name|classes
parameter_list|)
block|{
name|iClasses
operator|=
name|classes
expr_stmt|;
block|}
specifier|public
name|RelatedObjectLookupRpcResponse
name|getClass
parameter_list|(
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
operator|||
name|value
operator|.
name|isEmpty
argument_list|()
operator|||
name|iClasses
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|RelatedObjectLookupRpcResponse
name|r
range|:
name|iClasses
control|)
if|if
condition|(
name|r
operator|.
name|getUniqueId
argument_list|()
operator|!=
literal|null
operator|&&
name|r
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|value
argument_list|)
condition|)
return|return
name|r
return|;
return|return
literal|null
return|;
block|}
block|}
specifier|private
name|List
argument_list|<
name|RelatedObjectInterface
argument_list|>
name|iLastRelatedObjects
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|MeetingInterface
argument_list|>
name|iLastMeetings
init|=
literal|null
decl_stmt|;
specifier|public
name|void
name|checkEnrollments
parameter_list|(
specifier|final
name|List
argument_list|<
name|RelatedObjectInterface
argument_list|>
name|relatedObjects
parameter_list|,
specifier|final
name|List
argument_list|<
name|MeetingInterface
argument_list|>
name|meetings
parameter_list|)
block|{
if|if
condition|(
name|relatedObjects
operator|==
literal|null
operator|||
name|relatedObjects
operator|.
name|isEmpty
argument_list|()
operator|||
name|iEventType
operator|.
name|isReadOnly
argument_list|()
operator|||
name|iEventType
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|!=
literal|1
condition|)
block|{
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iEnrollmentRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iEnrollmentRow
operator|+
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iEnrollmentRow
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iEnrollmentRow
operator|+
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|relatedObjects
operator|.
name|equals
argument_list|(
name|iLastRelatedObjects
argument_list|)
operator|&&
name|meetings
operator|.
name|equals
argument_list|(
name|iLastMeetings
argument_list|)
condition|)
return|return;
name|iEnrollmentHeader
operator|.
name|showLoading
argument_list|()
expr_stmt|;
name|iLastMeetings
operator|=
name|meetings
expr_stmt|;
name|iLastRelatedObjects
operator|=
name|relatedObjects
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|EventEnrollmentsRpcRequest
operator|.
name|getEnrollmentsForRelatedObjects
argument_list|(
name|relatedObjects
argument_list|,
name|meetings
argument_list|,
name|iEvent
operator|.
name|getId
argument_list|()
argument_list|,
name|iProperties
operator|.
name|getSessionId
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|ClassAssignmentInterface
operator|.
name|Enrollment
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
if|if
condition|(
name|relatedObjects
operator|.
name|equals
argument_list|(
name|iLastRelatedObjects
argument_list|)
operator|&&
name|meetings
operator|.
name|equals
argument_list|(
name|iLastMeetings
argument_list|)
condition|)
block|{
name|iEnrollments
operator|.
name|clear
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedNoEnrollments
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|Enrollment
argument_list|>
name|result
parameter_list|)
block|{
if|if
condition|(
name|relatedObjects
operator|.
name|equals
argument_list|(
name|iLastRelatedObjects
argument_list|)
operator|&&
name|meetings
operator|.
name|equals
argument_list|(
name|iLastMeetings
argument_list|)
condition|)
block|{
name|iEnrollmentHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iEnrollments
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iEnrollments
operator|.
name|populate
argument_list|(
name|result
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|CourseRelatedObjectsTable
extends|extends
name|UniTimeTable
argument_list|<
name|CourseRelatedObjectLine
argument_list|>
implements|implements
name|HasValue
argument_list|<
name|List
argument_list|<
name|RelatedObjectInterface
argument_list|>
argument_list|>
block|{
specifier|private
name|Timer
name|iChangeTimer
init|=
literal|null
decl_stmt|;
specifier|private
specifier|static
name|int
name|sChangeWaitTime
init|=
literal|500
decl_stmt|;
specifier|private
name|AcademicSessionProvider
name|iSession
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|RelatedObjectInterface
argument_list|>
name|iLastChange
init|=
literal|null
decl_stmt|;
specifier|public
name|CourseRelatedObjectsTable
parameter_list|(
name|AcademicSessionProvider
name|session
parameter_list|)
block|{
name|iSession
operator|=
name|session
expr_stmt|;
name|setStyleName
argument_list|(
literal|"unitime-EventOwners"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Widget
argument_list|>
name|header
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colSubject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colCourseNumber
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colConfigOrSubpart
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colClassNumber
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|"&nbsp;"
argument_list|)
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
literal|null
argument_list|,
name|header
argument_list|)
expr_stmt|;
name|iChangeTimer
operator|=
operator|new
name|Timer
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|List
argument_list|<
name|RelatedObjectInterface
argument_list|>
name|value
init|=
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|iLastChange
operator|!=
literal|null
operator|&&
name|iLastChange
operator|.
name|equals
argument_list|(
name|value
argument_list|)
condition|)
return|return;
name|iLastChange
operator|=
name|value
expr_stmt|;
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|CourseRelatedObjectsTable
operator|.
name|this
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
block|}
specifier|private
name|void
name|addLine
parameter_list|(
specifier|final
name|RelatedObjectInterface
name|data
parameter_list|)
block|{
name|List
argument_list|<
name|Widget
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
specifier|final
name|CourseRelatedObjectLine
name|line
init|=
operator|new
name|CourseRelatedObjectLine
argument_list|()
decl_stmt|;
specifier|final
name|ListBox
name|subject
init|=
operator|new
name|ListBox
argument_list|()
decl_stmt|;
name|subject
operator|.
name|addStyleName
argument_list|(
literal|"subject"
argument_list|)
expr_stmt|;
name|subject
operator|.
name|addItem
argument_list|(
literal|"-"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|subject
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|RelatedObjectLookupRpcRequest
operator|.
name|getChildren
argument_list|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|,
name|RelatedObjectLookupRpcRequest
operator|.
name|Level
operator|.
name|SESSION
argument_list|,
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|RelatedObjectLookupRpcResponse
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedLoad
argument_list|(
name|MESSAGES
operator|.
name|colSubjects
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|RelatedObjectLookupRpcResponse
argument_list|>
name|result
parameter_list|)
block|{
name|line
operator|.
name|setSubjects
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|Long
name|selectedId
init|=
operator|(
name|data
operator|!=
literal|null
operator|&&
name|data
operator|.
name|hasSelection
argument_list|()
condition|?
name|data
operator|.
name|getSelection
argument_list|()
index|[
literal|0
index|]
else|:
literal|null
operator|)
decl_stmt|;
name|int
name|selectedIdx
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|RelatedObjectLookupRpcResponse
name|r
range|:
name|result
control|)
block|{
name|subject
operator|.
name|addItem
argument_list|(
name|r
operator|.
name|getLabel
argument_list|()
argument_list|,
name|r
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|r
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|selectedId
operator|!=
literal|null
operator|&&
name|selectedId
operator|.
name|equals
argument_list|(
name|r
operator|.
name|getUniqueId
argument_list|()
argument_list|)
condition|)
name|selectedIdx
operator|=
name|subject
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
expr_stmt|;
block|}
if|if
condition|(
name|selectedIdx
operator|>=
literal|0
condition|)
name|subject
operator|.
name|setSelectedIndex
argument_list|(
name|selectedIdx
argument_list|)
expr_stmt|;
name|DomEvent
operator|.
name|fireNativeEvent
argument_list|(
name|Document
operator|.
name|get
argument_list|()
operator|.
name|createChangeEvent
argument_list|()
argument_list|,
name|subject
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|subject
argument_list|)
expr_stmt|;
specifier|final
name|ListBox
name|course
init|=
operator|new
name|ListBox
argument_list|()
decl_stmt|;
name|course
operator|.
name|addStyleName
argument_list|(
literal|"course"
argument_list|)
expr_stmt|;
name|course
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemNotApplicable
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|course
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|subject
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
specifier|final
name|RelatedObjectLookupRpcResponse
name|rSubject
init|=
operator|(
name|subject
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
condition|?
literal|null
else|:
name|line
operator|.
name|getSubject
argument_list|(
name|subject
operator|.
name|getValue
argument_list|(
name|subject
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|rSubject
operator|==
literal|null
condition|)
block|{
name|course
operator|.
name|clear
argument_list|()
expr_stmt|;
name|course
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemNotApplicable
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|course
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|DomEvent
operator|.
name|fireNativeEvent
argument_list|(
name|Document
operator|.
name|get
argument_list|()
operator|.
name|createChangeEvent
argument_list|()
argument_list|,
name|course
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|course
operator|.
name|clear
argument_list|()
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|RelatedObjectLookupRpcRequest
operator|.
name|getChildren
argument_list|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|,
name|rSubject
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|RelatedObjectLookupRpcResponse
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedLoad
argument_list|(
name|MESSAGES
operator|.
name|colCourses
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|RelatedObjectLookupRpcResponse
argument_list|>
name|result
parameter_list|)
block|{
name|RelatedObjectLookupRpcResponse
name|res
init|=
operator|(
name|subject
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
condition|?
literal|null
else|:
name|line
operator|.
name|getSubject
argument_list|(
name|subject
operator|.
name|getValue
argument_list|(
name|subject
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
operator|!
name|rSubject
operator|.
name|equals
argument_list|(
name|res
argument_list|)
condition|)
return|return;
name|course
operator|.
name|clear
argument_list|()
expr_stmt|;
name|line
operator|.
name|setCourses
argument_list|(
name|result
argument_list|)
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|size
argument_list|()
operator|>
literal|1
condition|)
name|course
operator|.
name|addItem
argument_list|(
literal|"-"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|Long
name|selectedId
init|=
operator|(
name|data
operator|!=
literal|null
operator|&&
name|data
operator|.
name|hasSelection
argument_list|()
condition|?
name|data
operator|.
name|getSelection
argument_list|()
index|[
literal|1
index|]
else|:
literal|null
operator|)
decl_stmt|;
name|int
name|selectedIdx
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|RelatedObjectLookupRpcResponse
name|r
range|:
name|result
control|)
block|{
name|course
operator|.
name|addItem
argument_list|(
name|r
operator|.
name|getLabel
argument_list|()
argument_list|,
name|r
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|r
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|selectedId
operator|!=
literal|null
operator|&&
name|selectedId
operator|.
name|equals
argument_list|(
name|r
operator|.
name|getUniqueId
argument_list|()
argument_list|)
condition|)
name|selectedIdx
operator|=
name|course
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
expr_stmt|;
block|}
if|if
condition|(
name|selectedIdx
operator|>=
literal|0
condition|)
name|course
operator|.
name|setSelectedIndex
argument_list|(
name|selectedIdx
argument_list|)
expr_stmt|;
name|DomEvent
operator|.
name|fireNativeEvent
argument_list|(
name|Document
operator|.
name|get
argument_list|()
operator|.
name|createChangeEvent
argument_list|()
argument_list|,
name|course
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|line
operator|.
name|equals
argument_list|(
name|getData
argument_list|(
name|getRowCount
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
condition|)
name|addLine
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
name|iChangeTimer
operator|.
name|schedule
argument_list|(
name|sChangeWaitTime
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|course
argument_list|)
expr_stmt|;
specifier|final
name|ListBox
name|subpart
init|=
operator|new
name|ListBox
argument_list|()
decl_stmt|;
name|subpart
operator|.
name|addStyleName
argument_list|(
literal|"subpart"
argument_list|)
expr_stmt|;
name|subpart
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemNotApplicable
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|subpart
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|course
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|RelatedObjectLookupRpcResponse
name|rSubject
init|=
operator|(
name|subject
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
condition|?
literal|null
else|:
name|line
operator|.
name|getSubject
argument_list|(
name|subject
operator|.
name|getValue
argument_list|(
name|subject
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
operator|)
decl_stmt|;
specifier|final
name|RelatedObjectLookupRpcResponse
name|rCourse
init|=
operator|(
name|course
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
condition|?
literal|null
else|:
name|line
operator|.
name|getCourse
argument_list|(
name|course
operator|.
name|getValue
argument_list|(
name|course
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|rCourse
operator|==
literal|null
condition|)
block|{
name|subpart
operator|.
name|clear
argument_list|()
expr_stmt|;
name|subpart
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemNotApplicable
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|DomEvent
operator|.
name|fireNativeEvent
argument_list|(
name|Document
operator|.
name|get
argument_list|()
operator|.
name|createChangeEvent
argument_list|()
argument_list|,
name|subpart
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|subpart
operator|.
name|clear
argument_list|()
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|RelatedObjectLookupRpcRequest
operator|.
name|getChildren
argument_list|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|,
name|rSubject
argument_list|,
name|rCourse
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|RelatedObjectLookupRpcResponse
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedLoad
argument_list|(
name|MESSAGES
operator|.
name|colConfigsOrSubparts
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|RelatedObjectLookupRpcResponse
argument_list|>
name|result
parameter_list|)
block|{
name|RelatedObjectLookupRpcResponse
name|res
init|=
operator|(
name|course
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
condition|?
literal|null
else|:
name|line
operator|.
name|getCourse
argument_list|(
name|course
operator|.
name|getValue
argument_list|(
name|course
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
operator|!
name|rCourse
operator|.
name|equals
argument_list|(
name|res
argument_list|)
condition|)
return|return;
name|subpart
operator|.
name|clear
argument_list|()
expr_stmt|;
name|line
operator|.
name|setSubparts
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|Long
name|selectedId
init|=
operator|(
name|data
operator|!=
literal|null
operator|&&
name|data
operator|.
name|hasSelection
argument_list|()
operator|&&
name|data
operator|.
name|getSelection
argument_list|()
operator|.
name|length
operator|>=
literal|3
condition|?
name|data
operator|.
name|getSelection
argument_list|()
index|[
literal|2
index|]
else|:
literal|null
operator|)
decl_stmt|;
name|int
name|selectedIdx
init|=
operator|-
literal|1
decl_stmt|;
name|RelatedObjectLookupRpcRequest
operator|.
name|Level
name|selectedLevel
init|=
name|RelatedObjectLookupRpcRequest
operator|.
name|Level
operator|.
name|NONE
decl_stmt|;
if|if
condition|(
name|data
operator|!=
literal|null
operator|&&
name|data
operator|.
name|hasSelection
argument_list|()
condition|)
block|{
switch|switch
condition|(
name|data
operator|.
name|getType
argument_list|()
condition|)
block|{
case|case
name|Config
case|:
name|selectedLevel
operator|=
name|RelatedObjectLookupRpcRequest
operator|.
name|Level
operator|.
name|CONFIG
expr_stmt|;
break|break;
case|case
name|Course
case|:
name|selectedLevel
operator|=
name|RelatedObjectLookupRpcRequest
operator|.
name|Level
operator|.
name|COURSE
expr_stmt|;
break|break;
case|case
name|Offering
case|:
name|selectedLevel
operator|=
name|RelatedObjectLookupRpcRequest
operator|.
name|Level
operator|.
name|OFFERING
expr_stmt|;
break|break;
case|case
name|Class
case|:
name|selectedLevel
operator|=
name|RelatedObjectLookupRpcRequest
operator|.
name|Level
operator|.
name|SUBPART
expr_stmt|;
break|break;
block|}
block|}
for|for
control|(
name|RelatedObjectLookupRpcResponse
name|r
range|:
name|result
control|)
block|{
name|subpart
operator|.
name|addItem
argument_list|(
name|r
operator|.
name|getLabel
argument_list|()
argument_list|,
name|r
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|r
operator|.
name|getLevel
argument_list|()
operator|+
literal|":"
operator|+
name|r
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|selectedLevel
operator|==
name|r
operator|.
name|getLevel
argument_list|()
condition|)
block|{
switch|switch
condition|(
name|r
operator|.
name|getLevel
argument_list|()
condition|)
block|{
case|case
name|COURSE
case|:
case|case
name|OFFERING
case|:
name|selectedIdx
operator|=
name|subpart
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
expr_stmt|;
break|break;
case|case
name|SUBPART
case|:
case|case
name|CONFIG
case|:
if|if
condition|(
name|r
operator|.
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
name|selectedId
argument_list|)
condition|)
name|selectedIdx
operator|=
name|subpart
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
expr_stmt|;
break|break;
block|}
block|}
block|}
if|if
condition|(
name|selectedIdx
operator|>=
literal|0
condition|)
name|subpart
operator|.
name|setSelectedIndex
argument_list|(
name|selectedIdx
argument_list|)
expr_stmt|;
name|DomEvent
operator|.
name|fireNativeEvent
argument_list|(
name|Document
operator|.
name|get
argument_list|()
operator|.
name|createChangeEvent
argument_list|()
argument_list|,
name|subpart
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|iChangeTimer
operator|.
name|schedule
argument_list|(
name|sChangeWaitTime
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|subpart
argument_list|)
expr_stmt|;
specifier|final
name|ListBox
name|clazz
init|=
operator|new
name|ListBox
argument_list|()
decl_stmt|;
name|clazz
operator|.
name|addStyleName
argument_list|(
literal|"class"
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemNotApplicable
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|subpart
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|RelatedObjectLookupRpcResponse
name|rSubject
init|=
operator|(
name|subject
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
condition|?
literal|null
else|:
name|line
operator|.
name|getSubject
argument_list|(
name|subject
operator|.
name|getValue
argument_list|(
name|subject
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
operator|)
decl_stmt|;
name|RelatedObjectLookupRpcResponse
name|rCourse
init|=
operator|(
name|course
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
condition|?
literal|null
else|:
name|line
operator|.
name|getCourse
argument_list|(
name|course
operator|.
name|getValue
argument_list|(
name|course
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
operator|)
decl_stmt|;
specifier|final
name|RelatedObjectLookupRpcResponse
name|rSubpart
init|=
operator|(
name|subpart
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
condition|?
literal|null
else|:
name|line
operator|.
name|getSubpart
argument_list|(
name|subpart
operator|.
name|getValue
argument_list|(
name|subpart
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|rSubpart
operator|==
literal|null
condition|)
block|{
name|clazz
operator|.
name|clear
argument_list|()
expr_stmt|;
name|clazz
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemNotApplicable
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|clazz
operator|.
name|clear
argument_list|()
expr_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|RelatedObjectLookupRpcRequest
operator|.
name|getChildren
argument_list|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|,
name|rSubject
argument_list|,
name|rCourse
argument_list|,
name|rSubpart
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|RelatedObjectLookupRpcResponse
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedLoad
argument_list|(
name|MESSAGES
operator|.
name|colClasses
argument_list|()
argument_list|,
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|RelatedObjectLookupRpcResponse
argument_list|>
name|result
parameter_list|)
block|{
name|RelatedObjectLookupRpcResponse
name|res
init|=
operator|(
name|subpart
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
condition|?
literal|null
else|:
name|line
operator|.
name|getSubpart
argument_list|(
name|subpart
operator|.
name|getValue
argument_list|(
name|subpart
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
operator|!
name|rSubpart
operator|.
name|equals
argument_list|(
name|res
argument_list|)
condition|)
return|return;
name|clazz
operator|.
name|clear
argument_list|()
expr_stmt|;
name|line
operator|.
name|setClasses
argument_list|(
name|result
argument_list|)
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|size
argument_list|()
operator|>
literal|1
condition|)
name|clazz
operator|.
name|addItem
argument_list|(
literal|"-"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|Long
name|selectedId
init|=
operator|(
name|data
operator|!=
literal|null
operator|&&
name|data
operator|.
name|hasSelection
argument_list|()
operator|&&
name|data
operator|.
name|getSelection
argument_list|()
operator|.
name|length
operator|>=
literal|4
condition|?
name|data
operator|.
name|getSelection
argument_list|()
index|[
literal|3
index|]
else|:
literal|null
operator|)
decl_stmt|;
name|int
name|selectedIdx
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
name|result
operator|.
name|size
argument_list|()
condition|;
name|idx
operator|++
control|)
block|{
name|RelatedObjectLookupRpcResponse
name|r
init|=
name|result
operator|.
name|get
argument_list|(
name|idx
argument_list|)
decl_stmt|;
name|clazz
operator|.
name|addItem
argument_list|(
name|r
operator|.
name|getLabel
argument_list|()
argument_list|,
name|r
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|r
operator|.
name|getUniqueId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|selectedId
operator|!=
literal|null
operator|&&
name|selectedId
operator|.
name|equals
argument_list|(
name|r
operator|.
name|getUniqueId
argument_list|()
argument_list|)
condition|)
name|selectedIdx
operator|=
name|idx
expr_stmt|;
block|}
if|if
condition|(
name|selectedIdx
operator|>=
literal|0
condition|)
name|clazz
operator|.
name|setSelectedIndex
argument_list|(
name|selectedIdx
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|iChangeTimer
operator|.
name|schedule
argument_list|(
name|sChangeWaitTime
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|clazz
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iChangeTimer
operator|.
name|schedule
argument_list|(
name|sChangeWaitTime
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|clazz
argument_list|)
expr_stmt|;
name|Image
name|remove
init|=
operator|new
name|Image
argument_list|(
name|RESOURCES
operator|.
name|delete
argument_list|()
argument_list|)
decl_stmt|;
name|remove
operator|.
name|addStyleName
argument_list|(
literal|"remove"
argument_list|)
expr_stmt|;
name|remove
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
for|for
control|(
name|int
name|row
init|=
literal|1
init|;
name|row
operator|<
name|getRowCount
argument_list|()
condition|;
name|row
operator|++
control|)
if|if
condition|(
name|line
operator|.
name|equals
argument_list|(
name|getData
argument_list|(
name|row
argument_list|)
argument_list|)
condition|)
block|{
name|removeRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|getRowCount
argument_list|()
operator|<=
literal|1
condition|)
name|addLine
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|iChangeTimer
operator|.
name|schedule
argument_list|(
name|sChangeWaitTime
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|remove
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|line
argument_list|,
name|row
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addValueChangeHandler
parameter_list|(
name|ValueChangeHandler
argument_list|<
name|List
argument_list|<
name|RelatedObjectInterface
argument_list|>
argument_list|>
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|ValueChangeEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|RelatedObjectInterface
argument_list|>
name|getValue
parameter_list|()
block|{
name|List
argument_list|<
name|RelatedObjectInterface
argument_list|>
name|objects
init|=
operator|new
name|ArrayList
argument_list|<
name|RelatedObjectInterface
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|row
init|=
literal|1
init|;
name|row
operator|<
name|getRowCount
argument_list|()
condition|;
name|row
operator|++
control|)
block|{
name|CourseRelatedObjectLine
name|line
init|=
name|getData
argument_list|(
name|row
argument_list|)
decl_stmt|;
name|ListBox
name|subject
init|=
operator|(
name|ListBox
operator|)
name|getWidget
argument_list|(
name|row
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|RelatedObjectLookupRpcResponse
name|rSubject
init|=
operator|(
name|subject
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
condition|?
literal|null
else|:
name|line
operator|.
name|getSubject
argument_list|(
name|subject
operator|.
name|getValue
argument_list|(
name|subject
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
operator|)
decl_stmt|;
name|ListBox
name|course
init|=
operator|(
name|ListBox
operator|)
name|getWidget
argument_list|(
name|row
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|RelatedObjectLookupRpcResponse
name|rCourse
init|=
operator|(
name|course
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
condition|?
literal|null
else|:
name|line
operator|.
name|getCourse
argument_list|(
name|course
operator|.
name|getValue
argument_list|(
name|course
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
operator|)
decl_stmt|;
name|ListBox
name|subpart
init|=
operator|(
name|ListBox
operator|)
name|getWidget
argument_list|(
name|row
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|RelatedObjectLookupRpcResponse
name|rSubpart
init|=
operator|(
name|subpart
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
condition|?
literal|null
else|:
name|line
operator|.
name|getSubpart
argument_list|(
name|subpart
operator|.
name|getValue
argument_list|(
name|subpart
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
operator|)
decl_stmt|;
name|ListBox
name|clazz
init|=
operator|(
name|ListBox
operator|)
name|getWidget
argument_list|(
name|row
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|RelatedObjectLookupRpcResponse
name|rClazz
init|=
operator|(
name|clazz
operator|.
name|getSelectedIndex
argument_list|()
operator|<
literal|0
condition|?
literal|null
else|:
name|line
operator|.
name|getClass
argument_list|(
name|clazz
operator|.
name|getValue
argument_list|(
name|clazz
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|rClazz
operator|!=
literal|null
operator|&&
name|rClazz
operator|.
name|getRelatedObject
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|objects
operator|.
name|add
argument_list|(
name|rClazz
operator|.
name|getRelatedObject
argument_list|()
argument_list|)
expr_stmt|;
continue|continue;
block|}
if|if
condition|(
name|rSubpart
operator|!=
literal|null
operator|&&
name|rSubpart
operator|.
name|getRelatedObject
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|objects
operator|.
name|add
argument_list|(
name|rSubpart
operator|.
name|getRelatedObject
argument_list|()
argument_list|)
expr_stmt|;
continue|continue;
block|}
if|if
condition|(
name|rCourse
operator|!=
literal|null
operator|&&
name|rCourse
operator|.
name|getRelatedObject
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|objects
operator|.
name|add
argument_list|(
name|rCourse
operator|.
name|getRelatedObject
argument_list|()
argument_list|)
expr_stmt|;
continue|continue;
block|}
if|if
condition|(
name|rSubject
operator|!=
literal|null
operator|&&
name|rSubject
operator|.
name|getRelatedObject
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|objects
operator|.
name|add
argument_list|(
name|rSubject
operator|.
name|getRelatedObject
argument_list|()
argument_list|)
expr_stmt|;
continue|continue;
block|}
block|}
return|return
name|objects
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|List
argument_list|<
name|RelatedObjectInterface
argument_list|>
name|value
parameter_list|)
block|{
name|setValue
argument_list|(
name|value
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|List
argument_list|<
name|RelatedObjectInterface
argument_list|>
name|value
parameter_list|,
name|boolean
name|fireEvents
parameter_list|)
block|{
name|iLastChange
operator|=
literal|null
expr_stmt|;
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
for|for
control|(
name|RelatedObjectInterface
name|line
range|:
name|value
control|)
name|addLine
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|addLine
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|addLine
argument_list|(
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
name|fireEvents
condition|)
name|ValueChangeEvent
operator|.
name|fire
argument_list|(
name|CourseRelatedObjectsTable
operator|.
name|this
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|validate
parameter_list|(
specifier|final
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
name|callback
parameter_list|)
block|{
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|boolean
name|valid
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|iName
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iName
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|reqEventName
argument_list|()
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|reqEventName
argument_list|()
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|reqEventName
argument_list|()
argument_list|)
expr_stmt|;
name|valid
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|iName
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|iMainLName
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|reqMainContactLastName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|valid
condition|)
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|reqMainContactLastName
argument_list|()
argument_list|)
expr_stmt|;
name|valid
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|iMainLName
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|iMainEmail
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|reqMainContactEmail
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|valid
condition|)
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|reqMainContactEmail
argument_list|()
argument_list|)
expr_stmt|;
name|valid
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|iMainEmail
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|iMeetings
operator|.
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iEvent
operator|.
name|getId
argument_list|()
operator|==
literal|null
condition|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|reqMeetings
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|valid
condition|)
name|iHeader
operator|.
name|setErrorMessage
argument_list|(
name|MESSAGES
operator|.
name|reqMeetings
argument_list|()
argument_list|)
expr_stmt|;
name|valid
operator|=
literal|false
expr_stmt|;
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
name|valid
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|EventPropertiesRpcResponse
name|getProperties
parameter_list|()
block|{
return|return
name|iProperties
operator|==
literal|null
condition|?
literal|null
else|:
name|iProperties
operator|.
name|getProperties
argument_list|()
return|;
block|}
specifier|public
specifier|static
interface|interface
name|EventPropertiesProvider
block|{
specifier|public
name|Long
name|getSessionId
parameter_list|()
function_decl|;
specifier|public
name|EventPropertiesRpcResponse
name|getProperties
parameter_list|()
function_decl|;
specifier|public
name|List
argument_list|<
name|SelectionInterface
argument_list|>
name|getSelection
parameter_list|()
function_decl|;
specifier|public
name|String
name|getRoomFilter
parameter_list|()
function_decl|;
specifier|public
name|ContactInterface
name|getMainContact
parameter_list|()
function_decl|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|(
name|EventMeetingTable
name|source
parameter_list|,
name|OperationType
name|operation
parameter_list|,
name|List
argument_list|<
name|EventMeetingRow
argument_list|>
name|selection
parameter_list|)
block|{
switch|switch
condition|(
name|operation
condition|)
block|{
case|case
name|AddMeetings
case|:
name|iEventAddMeetings
operator|.
name|showDialog
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|accept
parameter_list|(
name|AcademicSession
name|session
parameter_list|)
block|{
return|return
name|session
operator|.
name|has
argument_list|(
name|AcademicSession
operator|.
name|Flag
operator|.
name|CanAddEvents
argument_list|)
return|;
block|}
block|}
end_class

end_unit

