begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 (University Timetabling Application)  * Copyright (C) 2012, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
operator|.
name|EventAdd
operator|.
name|EventPropertiesProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimePageLabel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|sectioning
operator|.
name|EnrollmentTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTableHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
operator|.
name|Enrollment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|ApproveEventRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|ContactInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EventEnrollmentsRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|MeetingInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|NoteInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|RelatedObjectInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|ResourceInterface
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|i18n
operator|.
name|client
operator|.
name|DateTimeFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_class
specifier|public
class|class
name|EventDetail
extends|extends
name|Composite
block|{
specifier|private
specifier|static
specifier|final
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|GwtConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|DateTimeFormat
name|sTimeStampFormat
init|=
name|DateTimeFormat
operator|.
name|getFormat
argument_list|(
name|CONSTANTS
operator|.
name|timeStampFormat
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|EventInterface
name|iEvent
init|=
literal|null
decl_stmt|;
specifier|private
name|SimpleForm
name|iForm
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iHeader
decl_stmt|,
name|iFooter
decl_stmt|,
name|iEnrollmentHeader
decl_stmt|;
specifier|private
name|UniTimeTable
argument_list|<
name|ContactInterface
argument_list|>
name|iContacts
decl_stmt|;
specifier|private
name|MeetingTable
name|iMeetings
decl_stmt|;
specifier|private
name|UniTimeTable
argument_list|<
name|NoteInterface
argument_list|>
name|iNotes
decl_stmt|;
specifier|private
name|UniTimeTable
argument_list|<
name|RelatedObjectInterface
argument_list|>
name|iOwners
decl_stmt|;
specifier|private
name|EnrollmentTable
name|iEnrollments
decl_stmt|;
specifier|private
name|EventPropertiesProvider
name|iProperties
decl_stmt|;
specifier|public
name|EventDetail
parameter_list|(
name|EventPropertiesProvider
name|properties
parameter_list|)
block|{
name|iForm
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|iProperties
operator|=
name|properties
expr_stmt|;
name|iHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"edit"
argument_list|,
name|MESSAGES
operator|.
name|buttonEdit
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|edit
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"previous"
argument_list|,
name|MESSAGES
operator|.
name|buttonPrevious
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|EventInterface
name|prev
init|=
name|getPrevious
argument_list|(
name|getEvent
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|prev
operator|!=
literal|null
condition|)
name|previous
argument_list|(
name|prev
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"next"
argument_list|,
name|MESSAGES
operator|.
name|buttonNext
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|EventInterface
name|next
init|=
name|getNext
argument_list|(
name|getEvent
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|next
operator|!=
literal|null
condition|)
name|next
argument_list|(
name|next
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|addButton
argument_list|(
literal|"back"
argument_list|,
name|MESSAGES
operator|.
name|buttonBack
argument_list|()
argument_list|,
literal|75
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iContacts
operator|=
operator|new
name|UniTimeTable
argument_list|<
name|ContactInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iContacts
operator|.
name|setStyleName
argument_list|(
literal|"unitime-EventContacts"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Widget
argument_list|>
name|contactHeader
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|contactHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|contactHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colEmail
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|contactHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colPhone
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iContacts
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|contactHeader
argument_list|)
expr_stmt|;
name|MeetingTable
name|approveMeetings
init|=
operator|new
name|MeetingTable
argument_list|()
decl_stmt|;
name|approveMeetings
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|approveMeetings
operator|.
name|setSelectable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|ApproveDialog
argument_list|<
name|MeetingInterface
argument_list|>
name|approveDialog
init|=
operator|new
name|ApproveDialog
argument_list|<
name|MeetingInterface
argument_list|>
argument_list|(
name|approveMeetings
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|void
name|onSubmit
parameter_list|(
specifier|final
name|ApproveEventRpcRequest
operator|.
name|Operation
name|operation
parameter_list|,
name|List
argument_list|<
name|MeetingInterface
argument_list|>
name|meetings
parameter_list|,
name|String
name|message
parameter_list|)
block|{
switch|switch
condition|(
name|operation
condition|)
block|{
case|case
name|APPROVE
case|:
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitForApproval
argument_list|(
name|iEvent
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|INQUIRE
case|:
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitForInquiry
argument_list|(
name|iEvent
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|REJECT
case|:
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitForRejection
argument_list|(
name|iEvent
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
name|RPC
operator|.
name|execute
argument_list|(
name|ApproveEventRpcRequest
operator|.
name|createRequest
argument_list|(
name|operation
argument_list|,
name|iProperties
operator|.
name|getSessionId
argument_list|()
argument_list|,
name|iEvent
argument_list|,
name|meetings
argument_list|,
name|message
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|EventInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|EventInterface
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|hasMessage
argument_list|()
condition|)
block|{
if|if
condition|(
name|result
operator|.
name|getMessage
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"WARN:"
argument_list|)
condition|)
name|UniTimeNotifications
operator|.
name|info
argument_list|(
name|result
operator|.
name|getMessage
argument_list|()
operator|.
name|substring
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|UniTimeNotifications
operator|.
name|info
argument_list|(
name|result
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
switch|switch
condition|(
name|operation
condition|)
block|{
case|case
name|APPROVE
case|:
name|onApprovalOrReject
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|setEvent
argument_list|(
name|result
argument_list|)
expr_stmt|;
break|break;
case|case
name|REJECT
case|:
name|onApprovalOrReject
argument_list|(
name|result
operator|.
name|getId
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|result
argument_list|)
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|getId
argument_list|()
operator|!=
literal|null
condition|)
name|setEvent
argument_list|(
name|result
argument_list|)
expr_stmt|;
else|else
name|EventDetail
operator|.
name|this
operator|.
name|hide
argument_list|()
expr_stmt|;
break|break;
case|case
name|INQUIRE
case|:
name|setEvent
argument_list|(
name|result
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|iMeetings
operator|=
operator|new
name|MeetingTable
argument_list|()
expr_stmt|;
name|iMeetings
operator|.
name|setApproveDialog
argument_list|(
name|approveDialog
argument_list|)
expr_stmt|;
name|iMeetings
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iOwners
operator|=
operator|new
name|UniTimeTable
argument_list|<
name|RelatedObjectInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iOwners
operator|.
name|setStyleName
argument_list|(
literal|"unitime-EventOwners"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Widget
argument_list|>
name|ownersHeader
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|ownersHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colCourse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ownersHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colSection
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ownersHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colType
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ownersHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colDate
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ownersHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ownersHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colLocation
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ownersHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colInstructor
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iOwners
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|ownersHeader
argument_list|)
expr_stmt|;
name|iEnrollmentHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|sectEnrollments
argument_list|()
argument_list|)
expr_stmt|;
name|iEnrollments
operator|=
operator|new
name|EnrollmentTable
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iEnrollments
operator|.
name|getTable
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-Enrollments"
argument_list|)
expr_stmt|;
name|iNotes
operator|=
operator|new
name|UniTimeTable
argument_list|<
name|NoteInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iNotes
operator|.
name|setStyleName
argument_list|(
literal|"unitime-EventNotes"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Widget
argument_list|>
name|notesHeader
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|notesHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colDate
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|notesHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colUser
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|notesHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colAction
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|notesHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colMeetings
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|notesHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colNote
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iNotes
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|notesHeader
argument_list|)
expr_stmt|;
name|iFooter
operator|=
name|iHeader
operator|.
name|clonePanel
argument_list|()
expr_stmt|;
name|initWidget
argument_list|(
name|iForm
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|iLastScrollTop
decl_stmt|,
name|iLastScrollLeft
decl_stmt|;
specifier|public
name|void
name|show
parameter_list|()
block|{
name|UniTimePageLabel
operator|.
name|getInstance
argument_list|()
operator|.
name|setPageName
argument_list|(
name|MESSAGES
operator|.
name|pageEventDetail
argument_list|()
argument_list|)
expr_stmt|;
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iLastScrollLeft
operator|=
name|Window
operator|.
name|getScrollLeft
argument_list|()
expr_stmt|;
name|iLastScrollTop
operator|=
name|Window
operator|.
name|getScrollTop
argument_list|()
expr_stmt|;
name|onShow
argument_list|()
expr_stmt|;
name|Window
operator|.
name|scrollTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|hide
parameter_list|()
block|{
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|onHide
argument_list|()
expr_stmt|;
name|Window
operator|.
name|scrollTo
argument_list|(
name|iLastScrollLeft
argument_list|,
name|iLastScrollTop
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|onHide
parameter_list|()
block|{
block|}
specifier|protected
name|void
name|onShow
parameter_list|()
block|{
block|}
specifier|protected
name|void
name|edit
parameter_list|()
block|{
block|}
specifier|protected
name|EventInterface
name|getNext
parameter_list|(
name|Long
name|eventId
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|protected
name|void
name|next
parameter_list|(
name|EventInterface
name|event
parameter_list|)
block|{
block|}
specifier|protected
name|EventInterface
name|getPrevious
parameter_list|(
name|Long
name|eventId
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|protected
name|void
name|previous
parameter_list|(
name|EventInterface
name|previous
parameter_list|)
block|{
block|}
specifier|protected
name|void
name|onApprovalOrReject
parameter_list|(
name|EventInterface
name|event
parameter_list|)
block|{
block|}
specifier|public
name|void
name|setEvent
parameter_list|(
name|EventInterface
name|event
parameter_list|)
block|{
name|iEvent
operator|=
name|event
expr_stmt|;
name|iMeetings
operator|.
name|getApproveDialog
argument_list|()
operator|.
name|reset
argument_list|(
name|iProperties
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setHeaderTitle
argument_list|(
name|iEvent
operator|.
name|getName
argument_list|()
operator|+
literal|" ("
operator|+
name|iEvent
operator|.
name|getType
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|")"
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"edit"
argument_list|,
name|iEvent
operator|.
name|isCanEdit
argument_list|()
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"previous"
argument_list|,
name|getPrevious
argument_list|(
name|iEvent
operator|.
name|getId
argument_list|()
argument_list|)
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|iHeader
operator|.
name|setEnabled
argument_list|(
literal|"next"
argument_list|,
name|getNext
argument_list|(
name|iEvent
operator|.
name|getId
argument_list|()
argument_list|)
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iHeader
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propEventType
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|(
name|iEvent
operator|.
name|getType
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iContacts
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|iEvent
operator|.
name|hasContact
argument_list|()
condition|)
block|{
name|List
argument_list|<
name|Label
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|Label
argument_list|>
argument_list|()
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|hasEmail
argument_list|()
condition|?
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|getEmail
argument_list|()
else|:
literal|""
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|hasPhone
argument_list|()
condition|?
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|getPhone
argument_list|()
else|:
literal|""
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|rowNum
init|=
name|iContacts
operator|.
name|addRow
argument_list|(
name|iEvent
operator|.
name|getContact
argument_list|()
argument_list|,
name|row
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|col
init|=
literal|0
init|;
name|col
operator|<
name|iContacts
operator|.
name|getCellCount
argument_list|(
name|rowNum
argument_list|)
condition|;
name|col
operator|++
control|)
name|iContacts
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|rowNum
argument_list|,
name|col
argument_list|,
literal|"main-contact"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iEvent
operator|.
name|hasAdditionalContacts
argument_list|()
condition|)
block|{
for|for
control|(
name|ContactInterface
name|contact
range|:
name|iEvent
operator|.
name|getAdditionalContacts
argument_list|()
control|)
block|{
name|List
argument_list|<
name|Label
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|Label
argument_list|>
argument_list|()
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|contact
operator|.
name|getName
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|contact
operator|.
name|hasEmail
argument_list|()
condition|?
name|contact
operator|.
name|getEmail
argument_list|()
else|:
literal|""
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|contact
operator|.
name|hasPhone
argument_list|()
condition|?
name|contact
operator|.
name|getPhone
argument_list|()
else|:
literal|""
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|rowNum
init|=
name|iContacts
operator|.
name|addRow
argument_list|(
name|contact
argument_list|,
name|row
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|col
init|=
literal|0
init|;
name|col
operator|<
name|iContacts
operator|.
name|getCellCount
argument_list|(
name|rowNum
argument_list|)
condition|;
name|col
operator|++
control|)
name|iContacts
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|rowNum
argument_list|,
name|col
argument_list|,
literal|"additional-contact"
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iContacts
operator|.
name|getRowCount
argument_list|()
operator|>
literal|1
condition|)
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propContacts
argument_list|()
argument_list|,
name|iContacts
argument_list|)
expr_stmt|;
if|if
condition|(
name|iEvent
operator|.
name|hasEmail
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAdditionalEmails
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|(
name|iEvent
operator|.
name|getEmail
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iEvent
operator|.
name|hasSponsor
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propSponsor
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|(
name|iEvent
operator|.
name|getSponsor
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iEvent
operator|.
name|hasEnrollment
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propEnrollment
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|iEvent
operator|.
name|getEnrollment
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|r
init|=
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propStudentConflicts
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|r
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iEvent
operator|.
name|hasMaxCapacity
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAttendance
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|(
name|iEvent
operator|.
name|getMaxCapacity
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iEvent
operator|.
name|hasLastChange
argument_list|()
condition|)
block|{
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propLastChange
argument_list|()
argument_list|,
operator|new
name|Label
argument_list|(
name|iEvent
operator|.
name|getLastChange
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|iMeetings
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
for|for
control|(
name|MeetingInterface
name|meeting
range|:
name|iEvent
operator|.
name|getMeetings
argument_list|()
control|)
block|{
name|iMeetings
operator|.
name|add
argument_list|(
name|meeting
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iMeetings
operator|.
name|getRowCount
argument_list|()
operator|>
literal|1
condition|)
block|{
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|MESSAGES
operator|.
name|sectMeetings
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iMeetings
argument_list|)
expr_stmt|;
block|}
name|iNotes
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|iEvent
operator|.
name|hasNotes
argument_list|()
condition|)
block|{
for|for
control|(
name|NoteInterface
name|note
range|:
name|iEvent
operator|.
name|getNotes
argument_list|()
control|)
block|{
name|List
argument_list|<
name|Widget
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|sTimeStampFormat
operator|.
name|format
argument_list|(
name|note
operator|.
name|getDate
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|HTML
argument_list|(
name|note
operator|.
name|getUser
argument_list|()
operator|==
literal|null
condition|?
literal|"<i>N/A</i>"
else|:
name|note
operator|.
name|getUser
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|note
operator|.
name|getType
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|HTML
argument_list|(
name|note
operator|.
name|getMeetings
argument_list|()
operator|==
literal|null
condition|?
literal|"<i>N/A</i>"
else|:
name|note
operator|.
name|getMeetings
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|HTML
argument_list|(
name|note
operator|.
name|getNote
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|.
name|getNote
argument_list|()
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|"<br>"
argument_list|)
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|r
init|=
name|iNotes
operator|.
name|addRow
argument_list|(
name|note
argument_list|,
name|row
argument_list|)
decl_stmt|;
name|iNotes
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|r
argument_list|,
name|note
operator|.
name|getType
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|toLowerCase
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iNotes
operator|.
name|getRowCount
argument_list|()
operator|>
literal|1
condition|)
block|{
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|MESSAGES
operator|.
name|sectNotes
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iNotes
argument_list|)
expr_stmt|;
block|}
name|iOwners
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|iEvent
operator|.
name|hasRelatedObjects
argument_list|()
condition|)
block|{
for|for
control|(
name|RelatedObjectInterface
name|obj
range|:
name|iEvent
operator|.
name|getRelatedObjects
argument_list|()
control|)
block|{
name|List
argument_list|<
name|Widget
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|String
name|course
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|obj
operator|.
name|hasCourseNames
argument_list|()
condition|)
block|{
for|for
control|(
name|String
name|cn
range|:
name|obj
operator|.
name|getCourseNames
argument_list|()
control|)
block|{
if|if
condition|(
name|course
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|course
operator|+=
name|cn
expr_stmt|;
block|}
else|else
block|{
name|course
operator|+=
literal|"<span class='cross-list'>"
operator|+
name|cn
operator|+
literal|"</span>"
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
name|course
operator|=
name|obj
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
name|row
operator|.
name|add
argument_list|(
operator|new
name|HTML
argument_list|(
name|course
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|section
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|obj
operator|.
name|hasExternalIds
argument_list|()
condition|)
block|{
for|for
control|(
name|String
name|ex
range|:
name|obj
operator|.
name|getExternalIds
argument_list|()
control|)
block|{
if|if
condition|(
name|section
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|section
operator|+=
name|ex
expr_stmt|;
block|}
else|else
block|{
name|section
operator|+=
literal|"<span class='cross-list'>"
operator|+
name|ex
operator|+
literal|"</span>"
expr_stmt|;
block|}
block|}
block|}
if|else if
condition|(
name|obj
operator|.
name|hasSectionNumber
argument_list|()
condition|)
block|{
name|section
operator|=
name|obj
operator|.
name|getSectionNumber
argument_list|()
expr_stmt|;
block|}
name|row
operator|.
name|add
argument_list|(
operator|new
name|HTML
argument_list|(
name|section
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|type
init|=
operator|(
name|obj
operator|.
name|hasInstruction
argument_list|()
condition|?
name|obj
operator|.
name|getInstruction
argument_list|()
else|:
name|obj
operator|.
name|getType
argument_list|()
operator|.
name|name
argument_list|()
operator|)
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|type
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|obj
operator|.
name|hasDate
argument_list|()
condition|)
block|{
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|obj
operator|.
name|getDate
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|obj
operator|.
name|hasTime
argument_list|()
condition|)
block|{
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|obj
operator|.
name|getTime
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|location
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|obj
operator|.
name|hasLocations
argument_list|()
condition|)
block|{
for|for
control|(
name|ResourceInterface
name|loc
range|:
name|obj
operator|.
name|getLocations
argument_list|()
control|)
block|{
name|location
operator|+=
operator|(
name|location
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|"<br>"
operator|)
operator|+
name|loc
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
block|}
name|row
operator|.
name|add
argument_list|(
operator|new
name|HTML
argument_list|(
name|location
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|obj
operator|.
name|hasInstructors
argument_list|()
condition|)
block|{
name|row
operator|.
name|add
argument_list|(
operator|new
name|HTML
argument_list|(
name|obj
operator|.
name|getInstructorNames
argument_list|(
literal|"<br>"
argument_list|)
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|.
name|add
argument_list|(
operator|new
name|HTML
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|int
name|rowNumber
init|=
name|iOwners
operator|.
name|addRow
argument_list|(
name|obj
argument_list|,
name|row
argument_list|)
decl_stmt|;
name|iOwners
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|rowNumber
argument_list|,
literal|"owner-row"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iOwners
operator|.
name|getCellCount
argument_list|(
name|rowNumber
argument_list|)
condition|;
name|i
operator|++
control|)
name|iOwners
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|rowNumber
argument_list|,
name|i
argument_list|,
literal|"owner-cell"
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iOwners
operator|.
name|getRowCount
argument_list|()
operator|>
literal|1
condition|)
block|{
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|MESSAGES
operator|.
name|sectRelations
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iOwners
argument_list|)
expr_stmt|;
block|}
name|iEnrollments
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|iEvent
operator|.
name|hasEnrollment
argument_list|()
condition|)
block|{
specifier|final
name|int
name|enrollmentsRow
init|=
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iEnrollmentHeader
argument_list|)
decl_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iEnrollments
operator|.
name|getTable
argument_list|()
argument_list|)
expr_stmt|;
name|iEnrollmentHeader
operator|.
name|showLoading
argument_list|()
expr_stmt|;
specifier|final
name|Long
name|eventId
init|=
name|iEvent
operator|.
name|getId
argument_list|()
decl_stmt|;
name|RPC
operator|.
name|execute
argument_list|(
name|EventEnrollmentsRpcRequest
operator|.
name|getEnrollmentsForEvent
argument_list|(
name|eventId
argument_list|,
name|iProperties
operator|.
name|getSessionId
argument_list|()
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|ClassAssignmentInterface
operator|.
name|Enrollment
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
if|if
condition|(
name|eventId
operator|.
name|equals
argument_list|(
name|iEvent
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
block|{
name|iEnrollmentHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedNoEnrollments
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|enrollmentsRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|enrollmentsRow
operator|+
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|Enrollment
argument_list|>
name|result
parameter_list|)
block|{
if|if
condition|(
name|eventId
operator|.
name|equals
argument_list|(
name|iEvent
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
block|{
if|if
condition|(
name|result
operator|==
literal|null
condition|)
name|result
operator|=
operator|new
name|GwtRpcResponseList
argument_list|<
name|Enrollment
argument_list|>
argument_list|()
expr_stmt|;
name|iEnrollmentHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iEnrollments
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iEnrollments
operator|.
name|populate
argument_list|(
name|result
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|int
name|conf
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Enrollment
name|e
range|:
name|result
control|)
if|if
condition|(
name|e
operator|.
name|hasConflict
argument_list|()
condition|)
name|conf
operator|++
expr_stmt|;
if|if
condition|(
name|conf
operator|!=
literal|0
condition|)
block|{
name|int
name|row
init|=
name|iForm
operator|.
name|getRow
argument_list|(
name|MESSAGES
operator|.
name|propStudentConflicts
argument_list|()
argument_list|)
decl_stmt|;
operator|(
operator|(
name|Label
operator|)
name|iForm
operator|.
name|getWidget
argument_list|(
name|row
argument_list|,
literal|1
argument_list|)
operator|)
operator|.
name|setText
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|row
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|iForm
operator|.
name|addNotPrintableBottomRow
argument_list|(
name|iFooter
argument_list|)
expr_stmt|;
block|}
specifier|public
name|EventInterface
name|getEvent
parameter_list|()
block|{
return|return
name|iEvent
return|;
block|}
block|}
end_class

end_unit

