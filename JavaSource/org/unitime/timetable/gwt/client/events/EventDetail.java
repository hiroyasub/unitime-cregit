begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 (University Timetabling Application)  * Copyright (C) 2012, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTableHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|ContactInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|MeetingInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|NoteInterface
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|i18n
operator|.
name|client
operator|.
name|DateTimeFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHorizontalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_class
specifier|public
class|class
name|EventDetail
extends|extends
name|Composite
block|{
specifier|private
specifier|static
specifier|final
name|GwtConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|DateTimeFormat
name|sDateFormat
init|=
name|DateTimeFormat
operator|.
name|getFormat
argument_list|(
name|CONSTANTS
operator|.
name|eventDateFormat
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|DateTimeFormat
name|sTimeStampFormat
init|=
name|DateTimeFormat
operator|.
name|getFormat
argument_list|(
name|CONSTANTS
operator|.
name|timeStampFormat
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|EventInterface
name|iEvent
init|=
literal|null
decl_stmt|;
specifier|private
name|SimpleForm
name|iForm
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iHeader
decl_stmt|,
name|iMeetingsHeader
decl_stmt|,
name|iNotesHeader
decl_stmt|;
specifier|private
name|UniTimeTable
argument_list|<
name|ContactInterface
argument_list|>
name|iContacts
decl_stmt|;
specifier|private
name|UniTimeTable
argument_list|<
name|MeetingInterface
argument_list|>
name|iMeetings
decl_stmt|;
specifier|private
name|UniTimeTable
argument_list|<
name|NoteInterface
argument_list|>
name|iNotes
decl_stmt|;
specifier|private
name|Label
name|iEventType
decl_stmt|,
name|iLastChange
decl_stmt|,
name|iSponsor
decl_stmt|,
name|iEmail
decl_stmt|;
specifier|public
name|EventDetail
parameter_list|()
block|{
name|iForm
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|iHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|()
expr_stmt|;
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iHeader
argument_list|)
expr_stmt|;
name|iEventType
operator|=
operator|new
name|Label
argument_list|(
literal|""
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
literal|"Event Type:"
argument_list|,
name|iEventType
argument_list|)
expr_stmt|;
name|iContacts
operator|=
operator|new
name|UniTimeTable
argument_list|<
name|ContactInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iContacts
operator|.
name|setStyleName
argument_list|(
literal|"unitime-EventContacts"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
literal|"Contact:"
argument_list|,
name|iContacts
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Widget
argument_list|>
name|contactHeader
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|contactHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|"Name"
argument_list|)
argument_list|)
expr_stmt|;
name|contactHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|"Email"
argument_list|)
argument_list|)
expr_stmt|;
name|contactHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|"Phone"
argument_list|)
argument_list|)
expr_stmt|;
name|iContacts
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|contactHeader
argument_list|)
expr_stmt|;
name|iEmail
operator|=
operator|new
name|Label
argument_list|(
literal|""
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
literal|"Additional Emails:"
argument_list|,
name|iEmail
argument_list|)
expr_stmt|;
name|iSponsor
operator|=
operator|new
name|Label
argument_list|(
literal|""
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
literal|"Sponsoring Organization:"
argument_list|,
name|iSponsor
argument_list|)
expr_stmt|;
name|iLastChange
operator|=
operator|new
name|Label
argument_list|(
literal|""
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
literal|"Last Change:"
argument_list|,
name|iLastChange
argument_list|)
expr_stmt|;
name|iMeetingsHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
literal|"Meetings"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iMeetingsHeader
argument_list|)
expr_stmt|;
name|iMeetings
operator|=
operator|new
name|UniTimeTable
argument_list|<
name|MeetingInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iMeetings
operator|.
name|setStyleName
argument_list|(
literal|"unitime-EventMeetings"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iMeetings
argument_list|)
expr_stmt|;
name|iNotesHeader
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
literal|"Notes"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addHeaderRow
argument_list|(
name|iNotesHeader
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Widget
argument_list|>
name|meetingsHeader
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|meetingsHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|"&otimes;"
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_CENTER
argument_list|)
argument_list|)
expr_stmt|;
name|meetingsHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|"Date"
argument_list|)
argument_list|)
expr_stmt|;
name|meetingsHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|"Time"
argument_list|)
argument_list|)
expr_stmt|;
name|meetingsHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|"Location"
argument_list|)
argument_list|)
expr_stmt|;
name|meetingsHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|"Capacity"
argument_list|)
argument_list|)
expr_stmt|;
name|meetingsHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|"Approved"
argument_list|)
argument_list|)
expr_stmt|;
name|iMeetings
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|meetingsHeader
argument_list|)
expr_stmt|;
name|iNotes
operator|=
operator|new
name|UniTimeTable
argument_list|<
name|NoteInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iNotes
operator|.
name|setStyleName
argument_list|(
literal|"unitime-EventNotes"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|iNotes
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Widget
argument_list|>
name|notesHeader
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|notesHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|"Date"
argument_list|)
argument_list|)
expr_stmt|;
name|notesHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|"User"
argument_list|)
argument_list|)
expr_stmt|;
name|notesHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|"Action"
argument_list|)
argument_list|)
expr_stmt|;
name|notesHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|"Meetings"
argument_list|)
argument_list|)
expr_stmt|;
name|notesHeader
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|"Note"
argument_list|)
argument_list|)
expr_stmt|;
name|iNotes
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|notesHeader
argument_list|)
expr_stmt|;
comment|// iFooter = iHeader.clonePanel();
comment|// iForm.addNotPrintableBottomRow(iFooter);
name|initWidget
argument_list|(
name|iForm
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setEvent
parameter_list|(
name|EventInterface
name|event
parameter_list|)
block|{
name|iEvent
operator|=
name|event
expr_stmt|;
name|iHeader
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
name|iHeader
operator|.
name|setHeaderTitle
argument_list|(
name|iEvent
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|iEventType
operator|.
name|setText
argument_list|(
name|iEvent
operator|.
name|getType
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|iContacts
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|iEvent
operator|.
name|hasContact
argument_list|()
condition|)
block|{
name|List
argument_list|<
name|Label
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|Label
argument_list|>
argument_list|()
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|hasEmail
argument_list|()
condition|?
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|getEmail
argument_list|()
else|:
literal|""
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|hasPhone
argument_list|()
condition|?
name|iEvent
operator|.
name|getContact
argument_list|()
operator|.
name|getPhone
argument_list|()
else|:
literal|""
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|iContacts
operator|.
name|addRow
argument_list|(
name|iEvent
operator|.
name|getContact
argument_list|()
argument_list|,
name|row
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iEvent
operator|.
name|hasAdditionalContacts
argument_list|()
condition|)
block|{
for|for
control|(
name|ContactInterface
name|contact
range|:
name|iEvent
operator|.
name|getAdditionalContacts
argument_list|()
control|)
block|{
name|List
argument_list|<
name|Label
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|Label
argument_list|>
argument_list|()
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|contact
operator|.
name|getName
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|contact
operator|.
name|hasEmail
argument_list|()
condition|?
name|contact
operator|.
name|getEmail
argument_list|()
else|:
literal|""
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|contact
operator|.
name|hasPhone
argument_list|()
condition|?
name|contact
operator|.
name|getPhone
argument_list|()
else|:
literal|""
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Label
name|label
range|:
name|row
control|)
name|label
operator|.
name|addStyleName
argument_list|(
literal|"main-contact"
argument_list|)
expr_stmt|;
name|iContacts
operator|.
name|addRow
argument_list|(
name|contact
argument_list|,
name|row
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iEvent
operator|.
name|hasLastChange
argument_list|()
condition|)
block|{
name|iLastChange
operator|.
name|setText
argument_list|(
name|iEvent
operator|.
name|getLastChange
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iForm
operator|.
name|getRow
argument_list|(
literal|"Last Change:"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iLastChange
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iForm
operator|.
name|getRow
argument_list|(
literal|"Last Change:"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iEvent
operator|.
name|hasSponsor
argument_list|()
condition|)
block|{
name|iSponsor
operator|.
name|setText
argument_list|(
name|iEvent
operator|.
name|getSponsor
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iForm
operator|.
name|getRow
argument_list|(
literal|"Sponsoring Organization:"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iSponsor
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iForm
operator|.
name|getRow
argument_list|(
literal|"Sponsoring Organization:"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iEvent
operator|.
name|hasEmail
argument_list|()
condition|)
block|{
name|iEmail
operator|.
name|setText
argument_list|(
name|iEvent
operator|.
name|getEmail
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iForm
operator|.
name|getRow
argument_list|(
literal|"Additional Emails:"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iEmail
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iForm
operator|.
name|getRow
argument_list|(
literal|"Additional Emails:"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|iMeetings
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
for|for
control|(
name|MeetingInterface
name|meeting
range|:
name|iEvent
operator|.
name|getMeetings
argument_list|()
control|)
block|{
name|List
argument_list|<
name|Widget
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|CheckBox
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|meeting
operator|.
name|getMeetingDate
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|meeting
operator|.
name|getMeetingTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|meeting
operator|.
name|getLocation
argument_list|()
operator|==
literal|null
condition|)
block|{
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|meeting
operator|.
name|getLocationName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|meeting
operator|.
name|getLocation
argument_list|()
operator|.
name|getSize
argument_list|()
operator|==
literal|null
condition|?
literal|"N/A"
else|:
name|meeting
operator|.
name|getLocation
argument_list|()
operator|.
name|getSize
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|meeting
operator|.
name|getApprovalDate
argument_list|()
operator|==
literal|null
condition|?
literal|"not approved"
else|:
name|sDateFormat
operator|.
name|format
argument_list|(
name|meeting
operator|.
name|getApprovalDate
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|meeting
operator|.
name|isApproved
argument_list|()
condition|)
name|row
operator|.
name|get
argument_list|(
name|row
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
operator|.
name|addStyleName
argument_list|(
literal|"not-approved"
argument_list|)
expr_stmt|;
name|int
name|r
init|=
name|iMeetings
operator|.
name|addRow
argument_list|(
name|meeting
argument_list|,
name|row
argument_list|)
decl_stmt|;
if|if
condition|(
name|meeting
operator|.
name|isPast
argument_list|()
condition|)
name|iMeetings
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|r
argument_list|,
literal|"past-meeting"
argument_list|)
expr_stmt|;
block|}
name|iNotes
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|iEvent
operator|.
name|hasNotes
argument_list|()
condition|)
block|{
name|iNotesHeader
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iNotes
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
for|for
control|(
name|NoteInterface
name|note
range|:
name|iEvent
operator|.
name|getNotes
argument_list|()
control|)
block|{
name|List
argument_list|<
name|Widget
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|sTimeStampFormat
operator|.
name|format
argument_list|(
name|note
operator|.
name|getDate
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|HTML
argument_list|(
name|note
operator|.
name|getUser
argument_list|()
operator|==
literal|null
condition|?
literal|"<i>N/A</i>"
else|:
name|note
operator|.
name|getUser
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|note
operator|.
name|getType
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|HTML
argument_list|(
name|note
operator|.
name|getMeetings
argument_list|()
operator|==
literal|null
condition|?
literal|"<i>N/A</i>"
else|:
name|note
operator|.
name|getMeetings
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|HTML
argument_list|(
name|note
operator|.
name|getNote
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|.
name|getNote
argument_list|()
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|"<br>"
argument_list|)
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|r
init|=
name|iNotes
operator|.
name|addRow
argument_list|(
name|note
argument_list|,
name|row
argument_list|)
decl_stmt|;
name|iNotes
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|r
argument_list|,
name|note
operator|.
name|getType
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|toLowerCase
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|iNotesHeader
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iNotes
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

