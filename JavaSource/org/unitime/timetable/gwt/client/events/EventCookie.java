begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 (University Timetabling Application)  * Copyright (C) 2012, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EventFlag
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Cookies
import|;
end_import

begin_class
specifier|public
class|class
name|EventCookie
block|{
specifier|private
name|int
name|iFlags
init|=
name|EventInterface
operator|.
name|sDefaultEventFlags
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|iHash
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|boolean
name|iShowDeltedMeetings
init|=
literal|true
decl_stmt|;
specifier|private
name|int
name|iSortRoomsBy
init|=
operator|-
literal|1
decl_stmt|;
specifier|private
name|boolean
name|iRoomsHorizontal
init|=
literal|true
decl_stmt|;
specifier|private
name|boolean
name|iExpandRoomConflicts
init|=
literal|false
decl_stmt|;
specifier|private
specifier|static
name|EventCookie
name|sInstance
init|=
literal|null
decl_stmt|;
specifier|private
name|EventCookie
parameter_list|()
block|{
try|try
block|{
name|String
name|cookie
init|=
name|Cookies
operator|.
name|getCookie
argument_list|(
literal|"UniTime:Event"
argument_list|)
decl_stmt|;
if|if
condition|(
name|cookie
operator|!=
literal|null
condition|)
block|{
name|String
index|[]
name|params
init|=
name|cookie
operator|.
name|split
argument_list|(
literal|"\\|"
argument_list|)
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
name|iFlags
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|params
index|[
name|idx
operator|++
index|]
argument_list|)
expr_stmt|;
name|iShowDeltedMeetings
operator|=
literal|"T"
operator|.
name|equals
argument_list|(
name|params
index|[
name|idx
operator|++
index|]
argument_list|)
expr_stmt|;
name|iSortRoomsBy
operator|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|params
index|[
name|idx
operator|++
index|]
argument_list|)
expr_stmt|;
name|iRoomsHorizontal
operator|=
operator|!
literal|"F"
operator|.
name|equals
argument_list|(
name|params
index|[
name|idx
operator|++
index|]
argument_list|)
expr_stmt|;
name|iExpandRoomConflicts
operator|=
literal|"T"
operator|.
name|equals
argument_list|(
name|params
index|[
name|idx
operator|++
index|]
argument_list|)
expr_stmt|;
while|while
condition|(
name|idx
operator|<
name|params
operator|.
name|length
condition|)
block|{
name|String
name|hash
init|=
name|params
index|[
name|idx
operator|++
index|]
decl_stmt|;
name|int
name|colon
init|=
name|hash
operator|.
name|indexOf
argument_list|(
literal|':'
argument_list|)
decl_stmt|;
name|iHash
operator|.
name|put
argument_list|(
name|hash
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|colon
argument_list|)
argument_list|,
name|hash
operator|.
name|substring
argument_list|(
name|colon
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
block|}
specifier|private
name|void
name|save
parameter_list|()
block|{
name|String
name|cookie
init|=
name|String
operator|.
name|valueOf
argument_list|(
name|iFlags
argument_list|)
operator|+
literal|"|"
operator|+
operator|(
name|iShowDeltedMeetings
condition|?
literal|"T"
else|:
literal|"F"
operator|)
operator|+
literal|"|"
operator|+
name|iSortRoomsBy
operator|+
literal|"|"
operator|+
operator|(
name|iRoomsHorizontal
condition|?
literal|"T"
else|:
literal|"F"
operator|)
operator|+
literal|"|"
operator|+
operator|(
name|iExpandRoomConflicts
condition|?
literal|"T"
else|:
literal|"F"
operator|)
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|iHash
operator|.
name|entrySet
argument_list|()
control|)
name|cookie
operator|+=
literal|"|"
operator|+
name|entry
operator|.
name|getKey
argument_list|()
operator|+
literal|":"
operator|+
name|entry
operator|.
name|getValue
argument_list|()
expr_stmt|;
name|Cookies
operator|.
name|setCookie
argument_list|(
literal|"UniTime:Event"
argument_list|,
name|cookie
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|EventCookie
name|getInstance
parameter_list|()
block|{
if|if
condition|(
name|sInstance
operator|==
literal|null
condition|)
name|sInstance
operator|=
operator|new
name|EventCookie
argument_list|()
expr_stmt|;
return|return
name|sInstance
return|;
block|}
specifier|public
name|boolean
name|get
parameter_list|(
name|EventFlag
name|f
parameter_list|)
block|{
return|return
name|f
operator|.
name|in
argument_list|(
name|iFlags
argument_list|)
return|;
block|}
specifier|public
name|void
name|set
parameter_list|(
name|EventFlag
name|f
parameter_list|,
name|boolean
name|value
parameter_list|)
block|{
name|iFlags
operator|=
operator|(
name|value
condition|?
name|f
operator|.
name|set
argument_list|(
name|iFlags
argument_list|)
else|:
name|f
operator|.
name|clear
argument_list|(
name|iFlags
argument_list|)
operator|)
expr_stmt|;
name|save
argument_list|()
expr_stmt|;
block|}
specifier|public
name|int
name|getFlags
parameter_list|()
block|{
return|return
name|iFlags
return|;
block|}
specifier|public
name|boolean
name|hasHash
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|String
name|hash
init|=
name|getHash
argument_list|(
name|type
argument_list|)
decl_stmt|;
return|return
name|hash
operator|!=
literal|null
operator|&&
operator|!
name|hash
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getHash
parameter_list|(
name|String
name|type
parameter_list|)
block|{
return|return
name|iHash
operator|.
name|get
argument_list|(
name|type
argument_list|)
return|;
block|}
specifier|public
name|void
name|setHash
parameter_list|(
name|String
name|type
parameter_list|,
name|String
name|hash
parameter_list|)
block|{
name|iHash
operator|.
name|put
argument_list|(
name|type
argument_list|,
name|hash
argument_list|)
expr_stmt|;
name|save
argument_list|()
expr_stmt|;
block|}
specifier|public
name|boolean
name|isShowDeletedMeetings
parameter_list|()
block|{
return|return
name|iShowDeltedMeetings
return|;
block|}
specifier|public
name|void
name|setShowDeletedMeetings
parameter_list|(
name|boolean
name|show
parameter_list|)
block|{
name|iShowDeltedMeetings
operator|=
name|show
expr_stmt|;
name|save
argument_list|()
expr_stmt|;
block|}
specifier|public
name|int
name|getRoomsSortBy
parameter_list|()
block|{
return|return
name|iSortRoomsBy
return|;
block|}
specifier|public
name|void
name|setSortRoomsBy
parameter_list|(
name|int
name|sortRoomsBy
parameter_list|)
block|{
name|iSortRoomsBy
operator|=
name|sortRoomsBy
expr_stmt|;
name|save
argument_list|()
expr_stmt|;
block|}
specifier|public
name|boolean
name|areRoomsHorizontal
parameter_list|()
block|{
return|return
name|iRoomsHorizontal
return|;
block|}
specifier|public
name|void
name|setRoomsHorizontal
parameter_list|(
name|boolean
name|roomsHorizontal
parameter_list|)
block|{
name|iRoomsHorizontal
operator|=
name|roomsHorizontal
expr_stmt|;
name|save
argument_list|()
expr_stmt|;
block|}
specifier|public
name|boolean
name|isExpandRoomConflicts
parameter_list|()
block|{
return|return
name|iExpandRoomConflicts
return|;
block|}
specifier|public
name|void
name|setExpandRoomConflicts
parameter_list|(
name|boolean
name|expandRoomConflicts
parameter_list|)
block|{
name|iExpandRoomConflicts
operator|=
name|expandRoomConflicts
expr_stmt|;
name|save
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

