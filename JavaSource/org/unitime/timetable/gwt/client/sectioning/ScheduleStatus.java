begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|sectioning
package|;
end_package

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|P
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|PageAccessException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Cursor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|http
operator|.
name|client
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|resources
operator|.
name|client
operator|.
name|ImageResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Image
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|ScheduleStatus
extends|extends
name|P
block|{
specifier|static
specifier|final
name|StudentSectioningResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StudentSectioningMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
enum|enum
name|Level
block|{
name|INFO
argument_list|(
literal|"unitime-ScheduleMessage"
argument_list|,
name|RESOURCES
operator|.
name|statusInfo
argument_list|()
argument_list|)
block|,
name|WARNING
argument_list|(
literal|"unitime-ScheduleWarningMessage"
argument_list|,
name|RESOURCES
operator|.
name|statusWarning
argument_list|()
argument_list|)
block|,
name|ERROR
argument_list|(
literal|"unitime-ScheduleErrorMessage"
argument_list|,
name|RESOURCES
operator|.
name|statusError
argument_list|()
argument_list|)
block|,
name|DONE
argument_list|(
literal|"unitime-ScheduleMessage"
argument_list|,
name|RESOURCES
operator|.
name|statusDone
argument_list|()
argument_list|)
block|, 		;
specifier|private
name|String
name|iStyleName
decl_stmt|;
specifier|private
name|ImageResource
name|iIcon
decl_stmt|;
name|Level
parameter_list|(
name|String
name|styleName
parameter_list|,
name|ImageResource
name|icon
parameter_list|)
block|{
name|iStyleName
operator|=
name|styleName
expr_stmt|;
name|iIcon
operator|=
name|icon
expr_stmt|;
block|}
specifier|public
name|String
name|getStyleName
parameter_list|()
block|{
return|return
name|iStyleName
return|;
block|}
specifier|public
name|ImageResource
name|getIcon
parameter_list|()
block|{
return|return
name|iIcon
return|;
block|}
block|}
specifier|private
name|Level
name|iLevel
decl_stmt|;
specifier|private
name|Image
name|iImage
decl_stmt|;
specifier|private
name|P
name|iMessage
decl_stmt|;
specifier|private
name|Command
name|iOnClickCommand
decl_stmt|;
specifier|public
name|ScheduleStatus
parameter_list|()
block|{
name|super
argument_list|(
literal|"unitime-ScheduleStatus"
argument_list|)
expr_stmt|;
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iImage
operator|=
operator|new
name|Image
argument_list|()
expr_stmt|;
name|iImage
operator|.
name|setStyleName
argument_list|(
literal|"image"
argument_list|)
expr_stmt|;
name|iMessage
operator|=
operator|new
name|P
argument_list|(
literal|"message"
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|iImage
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|iMessage
argument_list|)
expr_stmt|;
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iOnClickCommand
operator|!=
literal|null
condition|)
name|iOnClickCommand
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setMessage
parameter_list|(
name|Level
name|level
parameter_list|,
name|String
name|message
parameter_list|,
name|Command
name|command
parameter_list|)
block|{
name|iOnClickCommand
operator|=
name|command
expr_stmt|;
if|if
condition|(
name|iLevel
operator|!=
literal|null
condition|)
name|removeStyleName
argument_list|(
name|iLevel
operator|.
name|getStyleName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|message
operator|==
literal|null
operator|||
name|message
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iLevel
operator|=
literal|null
expr_stmt|;
name|iMessage
operator|.
name|setHTML
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iLevel
operator|=
name|level
expr_stmt|;
name|addStyleName
argument_list|(
name|iLevel
operator|.
name|getStyleName
argument_list|()
argument_list|)
expr_stmt|;
name|iMessage
operator|.
name|setHTML
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|iImage
operator|.
name|setResource
argument_list|(
name|iLevel
operator|.
name|getIcon
argument_list|()
argument_list|)
expr_stmt|;
name|iImage
operator|.
name|setAltText
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iOnClickCommand
operator|!=
literal|null
condition|)
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setCursor
argument_list|(
name|Cursor
operator|.
name|POINTER
argument_list|)
expr_stmt|;
else|else
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|clearCursor
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setMessage
parameter_list|(
name|Level
name|level
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|setMessage
argument_list|(
name|level
argument_list|,
name|message
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Level
name|getLevel
parameter_list|()
block|{
return|return
name|iLevel
return|;
block|}
specifier|public
name|String
name|getMessage
parameter_list|()
block|{
return|return
name|iMessage
operator|.
name|getHTML
argument_list|()
return|;
block|}
specifier|public
name|void
name|info
parameter_list|(
name|String
name|message
parameter_list|,
name|boolean
name|popup
parameter_list|)
block|{
name|setMessage
argument_list|(
name|Level
operator|.
name|INFO
argument_list|,
name|message
argument_list|)
expr_stmt|;
if|if
condition|(
name|popup
condition|)
name|UniTimeNotifications
operator|.
name|info
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|info
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|info
argument_list|(
name|message
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|warning
parameter_list|(
name|String
name|message
parameter_list|,
name|boolean
name|popup
parameter_list|)
block|{
name|setMessage
argument_list|(
name|Level
operator|.
name|WARNING
argument_list|,
name|message
argument_list|)
expr_stmt|;
if|if
condition|(
name|popup
condition|)
name|UniTimeNotifications
operator|.
name|warn
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|warning
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|warning
argument_list|(
name|message
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|error
parameter_list|(
name|String
name|message
parameter_list|,
name|boolean
name|popup
parameter_list|)
block|{
name|setMessage
argument_list|(
name|Level
operator|.
name|ERROR
argument_list|,
name|message
argument_list|)
expr_stmt|;
if|if
condition|(
name|popup
condition|)
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|error
parameter_list|(
name|String
name|message
parameter_list|,
name|boolean
name|popup
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
if|if
condition|(
name|t
operator|!=
literal|null
operator|&&
name|t
operator|instanceof
name|PageAccessException
operator|&&
name|message
operator|!=
literal|null
operator|&&
operator|!
name|message
operator|.
name|contains
argument_list|(
name|MESSAGES
operator|.
name|sessionExpiredClickToLogin
argument_list|()
argument_list|)
condition|)
block|{
name|setMessage
argument_list|(
name|Level
operator|.
name|ERROR
argument_list|,
name|message
operator|+
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|sessionExpiredClickToLogin
argument_list|()
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|Window
operator|.
name|open
argument_list|(
literal|"selectPrimaryRole.do?m="
operator|+
name|URL
operator|.
name|encodeQueryString
argument_list|(
name|MESSAGES
operator|.
name|sessionExpiredClickToLogin
argument_list|()
argument_list|)
operator|+
literal|"&target="
operator|+
name|URL
operator|.
name|encodeQueryString
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getHref
argument_list|()
argument_list|)
argument_list|,
literal|"_self"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setMessage
argument_list|(
name|Level
operator|.
name|ERROR
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|popup
condition|)
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|error
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|error
argument_list|(
name|message
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|error
parameter_list|(
name|String
name|message
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
if|if
condition|(
name|t
operator|!=
literal|null
operator|&&
name|t
operator|instanceof
name|PageAccessException
operator|&&
name|message
operator|!=
literal|null
operator|&&
operator|!
name|message
operator|.
name|contains
argument_list|(
name|MESSAGES
operator|.
name|sessionExpiredClickToLogin
argument_list|()
argument_list|)
condition|)
block|{
name|setMessage
argument_list|(
name|Level
operator|.
name|ERROR
argument_list|,
name|message
operator|+
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|sessionExpiredClickToLogin
argument_list|()
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|Window
operator|.
name|open
argument_list|(
literal|"selectPrimaryRole.do?m="
operator|+
name|URL
operator|.
name|encodeQueryString
argument_list|(
name|MESSAGES
operator|.
name|sessionExpiredClickToLogin
argument_list|()
argument_list|)
operator|+
literal|"&target="
operator|+
name|URL
operator|.
name|encodeQueryString
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getHref
argument_list|()
argument_list|)
argument_list|,
literal|"_self"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setMessage
argument_list|(
name|Level
operator|.
name|ERROR
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|message
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|error
parameter_list|(
name|String
name|message
parameter_list|,
name|Throwable
name|t
parameter_list|,
name|Command
name|callback
parameter_list|)
block|{
name|setMessage
argument_list|(
name|Level
operator|.
name|ERROR
argument_list|,
name|message
argument_list|,
name|callback
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|message
argument_list|,
name|t
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|error
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|error
argument_list|(
name|t
operator|.
name|getMessage
argument_list|()
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|done
parameter_list|(
name|String
name|message
parameter_list|,
name|boolean
name|popup
parameter_list|)
block|{
name|setMessage
argument_list|(
name|Level
operator|.
name|DONE
argument_list|,
name|message
argument_list|)
expr_stmt|;
if|if
condition|(
name|popup
condition|)
name|UniTimeNotifications
operator|.
name|info
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|done
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|done
argument_list|(
name|message
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|setMessage
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setOnClickCommand
parameter_list|(
name|Command
name|command
parameter_list|)
block|{
name|iOnClickCommand
operator|=
name|command
expr_stmt|;
block|}
block|}
end_class

end_unit

