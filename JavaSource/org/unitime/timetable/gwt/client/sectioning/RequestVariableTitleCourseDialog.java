begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|sectioning
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaSuggestBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaTextBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|events
operator|.
name|SingleDateSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|P
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeConfirmationDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeDialogBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|services
operator|.
name|SectioningService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|services
operator|.
name|SectioningServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|GradeMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|StudentSectioningContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SpecialRegistrationInterface
operator|.
name|InstructorInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SpecialRegistrationInterface
operator|.
name|VariableTitleCourseInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SpecialRegistrationInterface
operator|.
name|VariableTitleCourseRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SpecialRegistrationInterface
operator|.
name|VariableTitleCourseResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|IsSerializable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|AbsolutePanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestOracle
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextArea
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestOracle
operator|.
name|Suggestion
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|RequestVariableTitleCourseDialog
extends|extends
name|UniTimeDialogBox
block|{
specifier|protected
specifier|static
name|StudentSectioningMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
name|GwtMessages
name|GWT_MSG
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|SectioningServiceAsync
name|iSectioningService
init|=
name|GWT
operator|.
name|create
argument_list|(
name|SectioningService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|ScheduleStatus
name|iStatus
decl_stmt|;
specifier|private
name|StudentSectioningContext
name|iContext
decl_stmt|;
specifier|private
name|VariableTitleCourseInfo
name|iSelectedCourse
decl_stmt|;
specifier|private
name|SimpleForm
name|iForm
decl_stmt|;
specifier|private
name|HTML
name|iCourseDetails
decl_stmt|;
specifier|private
name|int
name|iCourseDetailsLine
decl_stmt|;
specifier|private
name|TextArea
name|iNote
init|=
literal|null
decl_stmt|;
specifier|private
name|AriaTextBox
name|iCourseName
init|=
literal|null
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|AriaTextBox
argument_list|>
name|iCourseTitle
init|=
literal|null
decl_stmt|;
specifier|private
name|ListBox
name|iCredit
decl_stmt|;
specifier|private
name|AriaSuggestBox
name|iCourseSuggestBox
init|=
literal|null
decl_stmt|;
specifier|private
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
name|iInstructor
decl_stmt|;
specifier|private
name|ListBox
name|iGradeMode
decl_stmt|;
specifier|private
name|SingleDateSelector
name|iDateFrom
decl_stmt|,
name|iDateTo
decl_stmt|;
specifier|private
name|CheckBox
name|iDisclaimer
decl_stmt|;
specifier|private
name|int
name|iDisclaimerLine
decl_stmt|;
specifier|private
name|Timer
name|iTimer
decl_stmt|;
specifier|private
name|Float
name|iCurrentCredit
decl_stmt|,
name|iMaxCredit
decl_stmt|;
specifier|private
name|Label
name|iCreditMessage
decl_stmt|;
specifier|private
name|int
name|iCreditLine
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iButtons
decl_stmt|;
specifier|public
name|RequestVariableTitleCourseDialog
parameter_list|(
name|StudentSectioningContext
name|context
parameter_list|,
name|ScheduleStatus
name|status
parameter_list|)
block|{
name|super
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
literal|"unitime-RequestVariableTitleCourseDialog"
argument_list|)
expr_stmt|;
name|setText
argument_list|(
name|MESSAGES
operator|.
name|dialogRequestVariableTitleCourse
argument_list|()
argument_list|)
expr_stmt|;
name|iContext
operator|=
name|context
expr_stmt|;
name|iStatus
operator|=
name|status
expr_stmt|;
name|iForm
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|iCourseName
operator|=
operator|new
name|AriaTextBox
argument_list|()
expr_stmt|;
name|iCourseName
operator|.
name|getElement
argument_list|()
operator|.
name|setAttribute
argument_list|(
literal|"autocomplete"
argument_list|,
literal|"off"
argument_list|)
expr_stmt|;
name|iCourseSuggestBox
operator|=
operator|new
name|AriaSuggestBox
argument_list|(
name|iCourseName
argument_list|,
operator|new
name|VariableTitleCourseSuggestions
argument_list|()
argument_list|)
expr_stmt|;
name|iTimer
operator|=
operator|new
name|Timer
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|onCourseChanged
argument_list|(
name|iCourseName
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
name|iCourseSuggestBox
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|iTimer
operator|.
name|schedule
argument_list|(
literal|500
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iCourseSuggestBox
operator|.
name|addSelectionHandler
argument_list|(
operator|new
name|SelectionHandler
argument_list|<
name|SuggestOracle
operator|.
name|Suggestion
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSelection
parameter_list|(
name|SelectionEvent
argument_list|<
name|Suggestion
argument_list|>
name|event
parameter_list|)
block|{
name|iTimer
operator|.
name|cancel
argument_list|()
expr_stmt|;
if|if
condition|(
name|event
operator|.
name|getSelectedItem
argument_list|()
operator|instanceof
name|VariableTitleCourseInfo
condition|)
block|{
name|onCourseChanged
argument_list|(
operator|(
operator|(
name|VariableTitleCourseInfo
operator|)
name|event
operator|.
name|getSelectedItem
argument_list|()
operator|)
operator|.
name|getCourseName
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setCourse
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iCourseSuggestBox
operator|.
name|addStyleName
argument_list|(
literal|"course"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propReqVTCourseCourse
argument_list|()
argument_list|,
name|iCourseSuggestBox
argument_list|)
expr_stmt|;
name|iCourseDetails
operator|=
operator|new
name|HTML
argument_list|()
expr_stmt|;
name|iCourseDetails
operator|.
name|addStyleName
argument_list|(
literal|"details"
argument_list|)
expr_stmt|;
name|iCourseDetailsLine
operator|=
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propReqVTCourseDetails
argument_list|()
argument_list|,
name|iCourseDetails
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseDetailsLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iCourseTitle
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|AriaTextBox
argument_list|>
argument_list|(
operator|new
name|AriaTextBox
argument_list|()
argument_list|)
expr_stmt|;
name|iCourseTitle
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextBox"
argument_list|)
expr_stmt|;
name|iCourseTitle
operator|.
name|getWidget
argument_list|()
operator|.
name|addStyleName
argument_list|(
literal|"title"
argument_list|)
expr_stmt|;
name|iCourseTitle
operator|.
name|getWidget
argument_list|()
operator|.
name|setMaxLength
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|iCourseTitle
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|iCourseTitle
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iButtons
operator|.
name|clearMessage
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propReqVTCourseTitle
argument_list|()
argument_list|,
name|iCourseTitle
argument_list|)
expr_stmt|;
name|iCredit
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
name|iCredit
operator|.
name|addStyleName
argument_list|(
literal|"credit"
argument_list|)
expr_stmt|;
name|iCredit
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propReqVTCourseCredit
argument_list|()
argument_list|,
name|iCredit
argument_list|)
expr_stmt|;
name|iCredit
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|checkCredit
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iInstructor
operator|=
operator|new
name|UniTimeWidget
argument_list|<
name|ListBox
argument_list|>
argument_list|(
operator|new
name|ListBox
argument_list|()
argument_list|)
expr_stmt|;
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|addStyleName
argument_list|(
literal|"instructor"
argument_list|)
expr_stmt|;
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propReqVTCourseInstructor
argument_list|()
argument_list|,
name|iInstructor
argument_list|)
expr_stmt|;
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
if|if
condition|(
literal|"-"
operator|.
name|equals
argument_list|(
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
condition|)
name|iInstructor
operator|.
name|setHint
argument_list|(
name|MESSAGES
operator|.
name|hintReqVTCourseNoInstructorMatch
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|iInstructor
operator|.
name|clearHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iGradeMode
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
name|iGradeMode
operator|.
name|addStyleName
argument_list|(
literal|"grade-mode"
argument_list|)
expr_stmt|;
name|iGradeMode
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propReqVTCourseGradeMode
argument_list|()
argument_list|,
name|iGradeMode
argument_list|)
expr_stmt|;
name|AbsolutePanel
name|m
init|=
operator|new
name|AbsolutePanel
argument_list|()
decl_stmt|;
name|m
operator|.
name|setStyleName
argument_list|(
literal|"dates"
argument_list|)
expr_stmt|;
name|P
name|from
init|=
operator|new
name|P
argument_list|(
literal|"from"
argument_list|)
decl_stmt|;
name|from
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|propReqVTCourseDatesFrom
argument_list|()
argument_list|)
expr_stmt|;
name|m
operator|.
name|add
argument_list|(
name|from
argument_list|)
expr_stmt|;
name|iDateFrom
operator|=
operator|new
name|SingleDateSelector
argument_list|()
expr_stmt|;
name|m
operator|.
name|add
argument_list|(
name|iDateFrom
argument_list|)
expr_stmt|;
name|P
name|to
init|=
operator|new
name|P
argument_list|(
literal|"to"
argument_list|)
decl_stmt|;
name|to
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|propReqVTCourseDatesTo
argument_list|()
argument_list|)
expr_stmt|;
name|m
operator|.
name|add
argument_list|(
name|to
argument_list|)
expr_stmt|;
name|iDateTo
operator|=
operator|new
name|SingleDateSelector
argument_list|()
expr_stmt|;
name|m
operator|.
name|add
argument_list|(
name|iDateTo
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propReqVTCourseDates
argument_list|()
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|iDateFrom
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iDateTo
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iNote
operator|=
operator|new
name|TextArea
argument_list|()
expr_stmt|;
name|iNote
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|iNote
operator|.
name|addStyleName
argument_list|(
literal|"request-note"
argument_list|)
expr_stmt|;
name|iNote
operator|.
name|setVisibleLines
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|iNote
operator|.
name|setCharacterWidth
argument_list|(
literal|80
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propReqVTCourseNote
argument_list|()
argument_list|,
name|iNote
argument_list|)
expr_stmt|;
name|iDisclaimer
operator|=
operator|new
name|CheckBox
argument_list|()
expr_stmt|;
name|iDisclaimer
operator|.
name|addStyleName
argument_list|(
literal|"disclaimer"
argument_list|)
expr_stmt|;
name|iDisclaimer
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iDisclaimer
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
name|iButtons
operator|.
name|setEnabled
argument_list|(
literal|"submit"
argument_list|,
name|iDisclaimer
operator|.
name|isEnabled
argument_list|()
operator|&&
name|iDisclaimer
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iDisclaimerLine
operator|=
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propReqVTCourseDisclaimer
argument_list|()
argument_list|,
name|iDisclaimer
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iDisclaimerLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iCreditMessage
operator|=
operator|new
name|Label
argument_list|()
expr_stmt|;
name|iCreditMessage
operator|.
name|addStyleName
argument_list|(
literal|"credit"
argument_list|)
expr_stmt|;
name|iCreditLine
operator|=
name|iForm
operator|.
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propReqVTMaxCredit
argument_list|()
argument_list|,
name|iCreditMessage
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCreditLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iButtons
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|()
expr_stmt|;
name|iButtons
operator|.
name|addButton
argument_list|(
literal|"submit"
argument_list|,
name|MESSAGES
operator|.
name|buttonSubmitVariableTitleCourse
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|validate
argument_list|()
condition|)
block|{
name|hide
argument_list|()
expr_stmt|;
name|onSubmit
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iButtons
operator|.
name|addButton
argument_list|(
literal|"cancel"
argument_list|,
name|MESSAGES
operator|.
name|buttonCloseVariableTitleCourse
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iButtons
operator|.
name|setEnabled
argument_list|(
literal|"submit"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addBottomRow
argument_list|(
name|iButtons
argument_list|)
expr_stmt|;
name|setWidget
argument_list|(
name|iForm
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|requestVariableTitleCourse
parameter_list|(
name|Float
name|currentCredit
parameter_list|,
name|Float
name|maxCredit
parameter_list|)
block|{
name|iCourseName
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iCourseTitle
operator|.
name|getWidget
argument_list|()
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iDisclaimer
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iNote
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iCredit
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iInstructor
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iGradeMode
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iDateFrom
operator|.
name|setValueInServerTimeZone
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|iDateTo
operator|.
name|setValueInServerTimeZone
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|setCourse
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|iCurrentCredit
operator|=
name|currentCredit
expr_stmt|;
name|iMaxCredit
operator|=
name|maxCredit
expr_stmt|;
name|center
argument_list|()
expr_stmt|;
name|iCourseName
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|onCourseChanged
parameter_list|(
name|String
name|course
parameter_list|)
block|{
if|if
condition|(
name|course
operator|==
literal|null
operator|||
name|course
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|setCourse
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|iSelectedCourse
operator|!=
literal|null
operator|&&
operator|(
name|iSelectedCourse
operator|.
name|getCourseName
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|course
argument_list|)
operator|||
name|iSelectedCourse
operator|.
name|getReplacementString
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|course
argument_list|)
operator|)
condition|)
return|return;
name|iSectioningService
operator|.
name|getVariableTitleCourse
argument_list|(
name|iContext
argument_list|,
name|course
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|VariableTitleCourseInfo
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iStatus
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|exceptionGetVariableTitleCourseInfo
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|VariableTitleCourseInfo
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|!=
literal|null
operator|&&
name|result
operator|.
name|equals
argument_list|(
name|iSelectedCourse
argument_list|)
condition|)
return|return;
name|setCourse
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|setCourse
parameter_list|(
name|VariableTitleCourseInfo
name|course
parameter_list|)
block|{
name|iSelectedCourse
operator|=
name|course
expr_stmt|;
name|String
name|lastCredit
init|=
name|iCredit
operator|.
name|getSelectedValue
argument_list|()
decl_stmt|;
name|String
name|lastInstructor
init|=
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
decl_stmt|;
name|String
name|lastGradeMode
init|=
name|iGradeMode
operator|.
name|getSelectedValue
argument_list|()
decl_stmt|;
name|iCredit
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iInstructor
operator|.
name|clearHint
argument_list|()
expr_stmt|;
name|iGradeMode
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iCourseDetails
operator|.
name|setHTML
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseDetailsLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iDisclaimerLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCreditLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|iSelectedCourse
operator|==
literal|null
condition|)
block|{
name|iCredit
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iGradeMode
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iDisclaimer
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iDateFrom
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iDateTo
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|iSelectedCourse
operator|.
name|hasDetails
argument_list|()
condition|)
block|{
name|iCourseDetails
operator|.
name|setHTML
argument_list|(
name|iSelectedCourse
operator|.
name|getDetails
argument_list|()
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCourseDetailsLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iSelectedCourse
operator|.
name|hasAvailableCredits
argument_list|()
condition|)
block|{
for|for
control|(
name|float
name|cred
range|:
name|iSelectedCourse
operator|.
name|getAvailableCredits
argument_list|()
control|)
block|{
name|iCredit
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|credit
argument_list|(
name|cred
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|cred
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|lastCredit
operator|!=
literal|null
operator|&&
name|lastCredit
operator|.
name|equals
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|cred
argument_list|)
argument_list|)
condition|)
block|{
name|iCredit
operator|.
name|setSelectedIndex
argument_list|(
name|iCredit
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|iCredit
operator|.
name|setEnabled
argument_list|(
name|iCredit
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|iDateFrom
operator|.
name|getValueInServerTimeZone
argument_list|()
operator|==
literal|null
condition|)
name|iDateFrom
operator|.
name|setValueInServerTimeZone
argument_list|(
name|iSelectedCourse
operator|.
name|getStartDate
argument_list|()
argument_list|)
expr_stmt|;
comment|// iDateFrom.setEnabled(true);
if|if
condition|(
name|iDateTo
operator|.
name|getValueInServerTimeZone
argument_list|()
operator|==
literal|null
condition|)
name|iDateTo
operator|.
name|setValueInServerTimeZone
argument_list|(
name|iSelectedCourse
operator|.
name|getEndDate
argument_list|()
argument_list|)
expr_stmt|;
comment|// iDateTo.setEnabled(true);
if|if
condition|(
name|iSelectedCourse
operator|.
name|hasInstructors
argument_list|()
condition|)
block|{
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|GWT_MSG
operator|.
name|itemSelect
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
for|for
control|(
name|InstructorInfo
name|i
range|:
name|iSelectedCourse
operator|.
name|getInstructors
argument_list|()
control|)
block|{
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|i
operator|.
name|getName
argument_list|()
argument_list|,
name|i
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|lastInstructor
operator|!=
literal|null
operator|&&
name|lastInstructor
operator|.
name|equals
argument_list|(
name|i
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|addItem
argument_list|(
name|MESSAGES
operator|.
name|itemReqVTNoInstructor
argument_list|()
argument_list|,
literal|"-"
argument_list|)
expr_stmt|;
if|if
condition|(
name|lastInstructor
operator|!=
literal|null
operator|&&
name|lastInstructor
operator|.
name|equals
argument_list|(
literal|"-"
argument_list|)
condition|)
block|{
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|setSelectedIndex
argument_list|(
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|iInstructor
operator|.
name|setHint
argument_list|(
name|MESSAGES
operator|.
name|hintReqVTCourseNoInstructorMatch
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|setEnabled
argument_list|(
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|iSelectedCourse
operator|.
name|hasGradeModes
argument_list|()
condition|)
block|{
name|GradeMode
name|selection
init|=
name|iSelectedCourse
operator|.
name|getDefaultGradeMode
argument_list|()
decl_stmt|;
if|if
condition|(
name|lastGradeMode
operator|!=
literal|null
condition|)
for|for
control|(
name|GradeMode
name|gm
range|:
name|iSelectedCourse
operator|.
name|getGradeModes
argument_list|()
control|)
if|if
condition|(
name|gm
operator|.
name|getCode
argument_list|()
operator|.
name|equals
argument_list|(
name|lastGradeMode
argument_list|)
condition|)
name|selection
operator|=
name|gm
expr_stmt|;
for|for
control|(
name|GradeMode
name|gm
range|:
name|iSelectedCourse
operator|.
name|getGradeModes
argument_list|()
control|)
block|{
name|iGradeMode
operator|.
name|addItem
argument_list|(
name|gm
operator|.
name|getLabel
argument_list|()
argument_list|,
name|gm
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|gm
operator|.
name|equals
argument_list|(
name|selection
argument_list|)
condition|)
name|iGradeMode
operator|.
name|setSelectedIndex
argument_list|(
name|iGradeMode
operator|.
name|getItemCount
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
name|iGradeMode
operator|.
name|setEnabled
argument_list|(
name|iGradeMode
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|iSelectedCourse
operator|.
name|hasDisclaimer
argument_list|()
condition|)
block|{
name|iDisclaimer
operator|.
name|setText
argument_list|(
name|iSelectedCourse
operator|.
name|getDisclaimer
argument_list|()
argument_list|)
expr_stmt|;
name|iDisclaimer
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iDisclaimerLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|checkCredit
argument_list|()
expr_stmt|;
block|}
name|iButtons
operator|.
name|setEnabled
argument_list|(
literal|"submit"
argument_list|,
name|iSelectedCourse
operator|!=
literal|null
operator|&&
operator|(
operator|!
name|iSelectedCourse
operator|.
name|hasDisclaimer
argument_list|()
operator|||
name|iDisclaimer
operator|.
name|getValue
argument_list|()
operator|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|checkCredit
parameter_list|()
block|{
if|if
condition|(
name|iMaxCredit
operator|==
literal|null
operator|||
name|iCurrentCredit
operator|==
literal|null
operator|||
name|iCredit
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
condition|)
block|{
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCreditLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|float
name|credit
init|=
name|iCurrentCredit
operator|+
name|Float
operator|.
name|valueOf
argument_list|(
name|iCredit
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|credit
operator|>
name|iMaxCredit
condition|)
block|{
name|iCreditMessage
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|varCreditMaxExceeded
argument_list|(
name|credit
argument_list|,
name|iMaxCredit
argument_list|)
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCreditLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iForm
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iCreditLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|protected
name|boolean
name|validate
parameter_list|()
block|{
name|boolean
name|valid
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|iCourseTitle
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iCourseTitle
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorReqVTCourseNoTitle
argument_list|()
argument_list|)
expr_stmt|;
name|valid
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|isEnabled
argument_list|()
operator|&&
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|==
literal|0
condition|)
block|{
name|iInstructor
operator|.
name|setErrorHint
argument_list|(
name|MESSAGES
operator|.
name|errorReqVTCourseNoTitle
argument_list|()
argument_list|)
expr_stmt|;
name|valid
operator|=
literal|false
expr_stmt|;
block|}
return|return
name|valid
return|;
block|}
specifier|protected
name|void
name|onSubmit
parameter_list|()
block|{
specifier|final
name|VariableTitleCourseRequest
name|request
init|=
operator|new
name|VariableTitleCourseRequest
argument_list|(
name|iContext
argument_list|)
decl_stmt|;
name|request
operator|.
name|setCourse
argument_list|(
name|iSelectedCourse
argument_list|)
expr_stmt|;
name|request
operator|.
name|setCredit
argument_list|(
name|Float
operator|.
name|valueOf
argument_list|(
name|iCredit
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|request
operator|.
name|setTitle
argument_list|(
name|iCourseTitle
operator|.
name|getWidget
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setNote
argument_list|(
name|iNote
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setStartDate
argument_list|(
name|iDateFrom
operator|.
name|getValueInServerTimeZone
argument_list|()
argument_list|)
expr_stmt|;
name|request
operator|.
name|setEndDate
argument_list|(
name|iDateTo
operator|.
name|getValueInServerTimeZone
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iCurrentCredit
operator|!=
literal|null
operator|&&
name|iMaxCredit
operator|!=
literal|null
condition|)
block|{
name|float
name|credit
init|=
name|iCurrentCredit
operator|+
name|Float
operator|.
name|valueOf
argument_list|(
name|iCredit
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|credit
operator|>
name|iMaxCredit
condition|)
block|{
name|request
operator|.
name|setMaxCredit
argument_list|(
name|credit
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
operator|>
literal|0
operator|&&
operator|!
literal|"-"
operator|.
name|equals
argument_list|(
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
condition|)
name|request
operator|.
name|setInstructor
argument_list|(
operator|new
name|InstructorInfo
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
argument_list|,
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|getItemText
argument_list|(
name|iInstructor
operator|.
name|getWidget
argument_list|()
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|iGradeMode
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
condition|)
name|request
operator|.
name|setGradeModeCode
argument_list|(
name|iGradeMode
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitRequestVariableTitleCourse
argument_list|()
argument_list|)
expr_stmt|;
name|iSectioningService
operator|.
name|requestVariableTitleCourse
argument_list|(
name|request
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|VariableTitleCourseResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
specifier|final
name|VariableTitleCourseResponse
name|response
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
if|if
condition|(
name|response
operator|.
name|hasRequests
argument_list|()
condition|)
block|{
name|iStatus
operator|.
name|info
argument_list|(
name|MESSAGES
operator|.
name|statusVariableCourseRequested
argument_list|()
argument_list|)
expr_stmt|;
name|onChange
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|response
operator|.
name|getCourse
argument_list|()
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|response
operator|.
name|getCourse
argument_list|()
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
for|for
control|(
name|CourseRequestInterface
operator|.
name|Preference
name|p
range|:
name|response
operator|.
name|getCourse
argument_list|()
operator|.
name|getSelectedClasses
argument_list|()
control|)
block|{
name|request
operator|.
name|setSection
argument_list|(
name|p
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
name|UniTimeConfirmationDialog
operator|.
name|confirm
argument_list|(
name|MESSAGES
operator|.
name|questionVariableCourseAlreadyExists
argument_list|()
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|request
operator|.
name|setCheckIfExists
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitRequestVariableTitleCourse
argument_list|()
argument_list|)
expr_stmt|;
name|iSectioningService
operator|.
name|requestVariableTitleCourse
argument_list|(
name|request
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|VariableTitleCourseResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|VariableTitleCourseResponse
name|response
parameter_list|)
block|{
if|if
condition|(
name|response
operator|.
name|hasRequests
argument_list|()
condition|)
name|iStatus
operator|.
name|info
argument_list|(
name|MESSAGES
operator|.
name|statusVariableCourseRequested
argument_list|()
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|onChange
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iStatus
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|exceptionRequestVariableTitleCourse
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|onChange
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iStatus
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|exceptionRequestVariableTitleCourse
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|onChange
parameter_list|(
name|VariableTitleCourseResponse
name|response
parameter_list|)
block|{
block|}
specifier|public
specifier|static
class|class
name|SuggestionInterface
implements|implements
name|IsSerializable
implements|,
name|Suggestion
block|{
specifier|private
name|String
name|iDisplayString
decl_stmt|;
specifier|private
name|String
name|iReplacementString
decl_stmt|;
specifier|public
name|SuggestionInterface
parameter_list|()
block|{
block|}
specifier|public
name|SuggestionInterface
parameter_list|(
name|String
name|display
parameter_list|)
block|{
name|iDisplayString
operator|=
name|display
expr_stmt|;
name|iReplacementString
operator|=
name|display
expr_stmt|;
block|}
specifier|public
name|SuggestionInterface
parameter_list|(
name|String
name|display
parameter_list|,
name|String
name|replace
parameter_list|)
block|{
name|iDisplayString
operator|=
name|display
expr_stmt|;
name|iReplacementString
operator|=
name|replace
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDisplayString
parameter_list|()
block|{
return|return
name|iDisplayString
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getReplacementString
parameter_list|()
block|{
return|return
name|iReplacementString
return|;
block|}
block|}
specifier|protected
class|class
name|VariableTitleCourseSuggestions
extends|extends
name|SuggestOracle
block|{
annotation|@
name|Override
specifier|public
name|void
name|requestSuggestions
parameter_list|(
specifier|final
name|Request
name|request
parameter_list|,
specifier|final
name|Callback
name|callback
parameter_list|)
block|{
name|iTimer
operator|.
name|cancel
argument_list|()
expr_stmt|;
name|iSectioningService
operator|.
name|listVariableTitleCourses
argument_list|(
name|iContext
argument_list|,
name|request
operator|.
name|getQuery
argument_list|()
argument_list|,
name|request
operator|.
name|getLimit
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|VariableTitleCourseInfo
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Collection
argument_list|<
name|VariableTitleCourseInfo
argument_list|>
name|result
parameter_list|)
block|{
name|callback
operator|.
name|onSuggestionsReady
argument_list|(
name|request
argument_list|,
operator|new
name|Response
argument_list|(
name|result
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|List
argument_list|<
name|Suggestion
argument_list|>
name|suggestions
init|=
operator|new
name|ArrayList
argument_list|<
name|Suggestion
argument_list|>
argument_list|()
decl_stmt|;
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|SuggestionInterface
argument_list|(
literal|"<font color='red'>"
operator|+
name|caught
operator|.
name|getMessage
argument_list|()
operator|+
literal|"</font>"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|callback
operator|.
name|onSuggestionsReady
argument_list|(
name|request
argument_list|,
operator|new
name|Response
argument_list|(
name|suggestions
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isDisplayStringHTML
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
block|}
block|}
end_class

end_unit

