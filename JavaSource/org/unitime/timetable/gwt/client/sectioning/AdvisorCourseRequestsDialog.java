begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|sectioning
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeDialogBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|WebTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtAriaMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|FreeTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|Preference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|RequestedCourse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|TakesValue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHorizontalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ScrollPanel
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|AdvisorCourseRequestsDialog
extends|extends
name|UniTimeDialogBox
block|{
specifier|protected
specifier|static
name|StudentSectioningMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
name|StudentSectioningConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|GwtAriaMessages
name|ARIA
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtAriaMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|SimpleForm
name|iForm
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|iFooter
decl_stmt|;
specifier|private
name|TakesValue
argument_list|<
name|CourseRequestInterface
argument_list|>
name|iRequests
decl_stmt|;
specifier|private
name|CourseRequestInterface
name|iAdvisorRequests
decl_stmt|;
specifier|private
name|WebTable
name|iTable
decl_stmt|;
specifier|public
name|AdvisorCourseRequestsDialog
parameter_list|(
name|TakesValue
argument_list|<
name|CourseRequestInterface
argument_list|>
name|requests
parameter_list|)
block|{
name|super
argument_list|(
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|setEscapeToHide
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
literal|"unitime-AdvisorCourseRequestsDialog"
argument_list|)
expr_stmt|;
name|setText
argument_list|(
name|MESSAGES
operator|.
name|dialogAdvisorCourseRequests
argument_list|()
argument_list|)
expr_stmt|;
name|iRequests
operator|=
name|requests
expr_stmt|;
name|iForm
operator|=
operator|new
name|SimpleForm
argument_list|()
expr_stmt|;
name|iTable
operator|=
operator|new
name|WebTable
argument_list|()
expr_stmt|;
name|iTable
operator|.
name|setEmptyMessage
argument_list|(
name|MESSAGES
operator|.
name|emptyRequests
argument_list|()
argument_list|)
expr_stmt|;
name|iTable
operator|.
name|setHeader
argument_list|(
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colPriority
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"25px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCourse
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colTitle
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"200px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCredit
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"20px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colPreferences
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"100px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colNotes
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"300px"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iTable
operator|.
name|addStyleName
argument_list|(
literal|"unitime-AdvisorCourseRequestsTable"
argument_list|)
expr_stmt|;
name|iTable
operator|.
name|setSelectSameIdRows
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|ScrollPanel
name|scroll
init|=
operator|new
name|ScrollPanel
argument_list|(
name|iTable
argument_list|)
decl_stmt|;
name|scroll
operator|.
name|setStyleName
argument_list|(
literal|"unitime-ScrollPanel"
argument_list|)
expr_stmt|;
name|scroll
operator|.
name|addStyleName
argument_list|(
literal|"requests"
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addRow
argument_list|(
name|scroll
argument_list|)
expr_stmt|;
name|iFooter
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|()
expr_stmt|;
name|iFooter
operator|.
name|addButton
argument_list|(
literal|"apply"
argument_list|,
name|MESSAGES
operator|.
name|buttonAdvisorRequestsApply
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|doApply
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|addButton
argument_list|(
literal|"close"
argument_list|,
name|MESSAGES
operator|.
name|buttonAdvisorRequestsClose
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iForm
operator|.
name|addBottomRow
argument_list|(
name|iFooter
argument_list|)
expr_stmt|;
name|setWidget
argument_list|(
name|iForm
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|doApply
parameter_list|()
block|{
name|hide
argument_list|()
expr_stmt|;
name|iRequests
operator|.
name|setValue
argument_list|(
name|createRequests
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|CourseRequestInterface
name|createRequests
parameter_list|()
block|{
name|CourseRequestInterface
name|requests
init|=
name|iRequests
operator|.
name|getValue
argument_list|()
decl_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|CourseRequestInterface
operator|.
name|Request
argument_list|>
name|i
init|=
name|requests
operator|.
name|getCourses
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|CourseRequestInterface
operator|.
name|Request
name|request
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|request
operator|.
name|isCanDelete
argument_list|()
condition|)
continue|continue;
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|Iterator
argument_list|<
name|CourseRequestInterface
operator|.
name|Request
argument_list|>
name|i
init|=
name|requests
operator|.
name|getAlternatives
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|CourseRequestInterface
operator|.
name|Request
name|request
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|request
operator|.
name|isCanDelete
argument_list|()
condition|)
continue|continue;
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
name|requests
operator|.
name|applyAdvisorRequests
argument_list|(
name|iAdvisorRequests
argument_list|)
expr_stmt|;
return|return
name|requests
return|;
block|}
specifier|public
name|void
name|open
parameter_list|(
name|CourseRequestInterface
name|requests
parameter_list|)
block|{
name|iAdvisorRequests
operator|=
name|requests
expr_stmt|;
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
name|rows
init|=
operator|new
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
argument_list|()
decl_stmt|;
name|boolean
name|hasPref
init|=
literal|false
decl_stmt|;
name|int
name|priority
init|=
literal|1
decl_stmt|;
for|for
control|(
name|Request
name|request
range|:
name|iAdvisorRequests
operator|.
name|getCourses
argument_list|()
control|)
block|{
if|if
condition|(
name|request
operator|.
name|hasRequestedCourse
argument_list|()
condition|)
block|{
name|boolean
name|first
init|=
literal|true
decl_stmt|;
for|for
control|(
name|RequestedCourse
name|rc
range|:
name|request
operator|.
name|getRequestedCourse
argument_list|()
control|)
block|{
name|WebTable
operator|.
name|Row
name|row
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|isCourse
argument_list|()
condition|)
block|{
name|Collection
argument_list|<
name|Preference
argument_list|>
name|prefs
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|hasSelectedIntructionalMethods
argument_list|()
condition|)
block|{
if|if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|ArrayList
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
operator|.
name|size
argument_list|()
operator|+
name|rc
operator|.
name|getSelectedClasses
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|prefs
operator|!=
literal|null
condition|)
name|hasPref
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|first
condition|)
block|{
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|request
operator|.
name|hasAdvisorCredit
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorCredit
argument_list|()
else|:
literal|""
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|NoteCell
name|note
init|=
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|request
operator|.
name|hasAdvisorNote
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorNote
argument_list|()
else|:
literal|""
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|note
operator|.
name|setRowSpan
argument_list|(
name|request
operator|.
name|getRequestedCourse
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsPriority
argument_list|(
name|priority
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCourseTitle
argument_list|()
condition|?
name|rc
operator|.
name|getCourseTitle
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
name|credit
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|ToolBox
operator|.
name|toString
argument_list|(
name|prefs
argument_list|)
argument_list|,
literal|true
argument_list|)
argument_list|,
name|note
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCourseTitle
argument_list|()
condition|?
name|rc
operator|.
name|getCourseTitle
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|ToolBox
operator|.
name|toString
argument_list|(
name|prefs
argument_list|)
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|rc
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
name|String
name|free
init|=
literal|""
decl_stmt|;
for|for
control|(
name|FreeTime
name|ft
range|:
name|rc
operator|.
name|getFreeTime
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|free
operator|.
name|isEmpty
argument_list|()
condition|)
name|free
operator|+=
literal|", "
expr_stmt|;
name|free
operator|+=
name|ft
operator|.
name|toString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|first
condition|)
block|{
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
operator|&&
name|request
operator|.
name|hasAdvisorCredit
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorCredit
argument_list|()
else|:
literal|""
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|NoteCell
name|note
init|=
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|request
operator|.
name|hasAdvisorNote
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorNote
argument_list|()
else|:
literal|""
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|note
operator|.
name|setRowSpan
argument_list|(
name|request
operator|.
name|getRequestedCourse
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsPriority
argument_list|(
name|priority
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|CONSTANTS
operator|.
name|freePrefix
argument_list|()
operator|+
name|free
argument_list|,
literal|2
argument_list|,
literal|null
argument_list|)
argument_list|,
name|credit
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
name|note
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|CONSTANTS
operator|.
name|freePrefix
argument_list|()
operator|+
name|free
argument_list|,
literal|2
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|priority
operator|>
literal|1
operator|&&
name|first
condition|)
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|row
operator|.
name|setId
argument_list|(
literal|"P"
operator|+
name|priority
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|first
operator|=
literal|false
expr_stmt|;
block|}
name|priority
operator|++
expr_stmt|;
block|}
else|else
block|{
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|request
operator|.
name|hasAdvisorCredit
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorCredit
argument_list|()
else|:
literal|""
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|NoteCell
name|note
init|=
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|request
operator|.
name|hasAdvisorNote
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorNote
argument_list|()
else|:
literal|""
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsPriority
argument_list|(
name|priority
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
name|credit
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
name|note
argument_list|)
decl_stmt|;
if|if
condition|(
name|priority
operator|>
literal|1
condition|)
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|row
operator|.
name|setId
argument_list|(
literal|"P"
operator|+
name|priority
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
block|}
name|priority
operator|=
literal|1
expr_stmt|;
for|for
control|(
name|Request
name|request
range|:
name|iAdvisorRequests
operator|.
name|getAlternatives
argument_list|()
control|)
block|{
if|if
condition|(
name|request
operator|.
name|hasRequestedCourse
argument_list|()
condition|)
block|{
name|boolean
name|first
init|=
literal|true
decl_stmt|;
for|for
control|(
name|RequestedCourse
name|rc
range|:
name|request
operator|.
name|getRequestedCourse
argument_list|()
control|)
block|{
name|WebTable
operator|.
name|Row
name|row
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|isCourse
argument_list|()
condition|)
block|{
name|Collection
argument_list|<
name|Preference
argument_list|>
name|prefs
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|hasSelectedIntructionalMethods
argument_list|()
condition|)
block|{
if|if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|ArrayList
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
operator|.
name|size
argument_list|()
operator|+
name|rc
operator|.
name|getSelectedClasses
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|prefs
operator|!=
literal|null
condition|)
name|hasPref
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|first
condition|)
block|{
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|request
operator|.
name|hasAdvisorCredit
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorCredit
argument_list|()
else|:
literal|""
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|NoteCell
name|note
init|=
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|request
operator|.
name|hasAdvisorNote
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorNote
argument_list|()
else|:
literal|""
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|note
operator|.
name|setRowSpan
argument_list|(
name|request
operator|.
name|getRequestedCourse
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsAlternative
argument_list|(
name|priority
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCourseTitle
argument_list|()
condition|?
name|rc
operator|.
name|getCourseTitle
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
name|credit
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|ToolBox
operator|.
name|toString
argument_list|(
name|prefs
argument_list|)
argument_list|,
literal|true
argument_list|)
argument_list|,
name|note
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCourseTitle
argument_list|()
condition|?
name|rc
operator|.
name|getCourseTitle
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|ToolBox
operator|.
name|toString
argument_list|(
name|prefs
argument_list|)
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|first
condition|)
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|priority
operator|==
literal|1
condition|?
literal|"top-border-solid"
else|:
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|row
operator|.
name|setId
argument_list|(
literal|"A"
operator|+
name|priority
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|first
operator|=
literal|false
expr_stmt|;
block|}
name|priority
operator|++
expr_stmt|;
block|}
else|else
block|{
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|request
operator|.
name|hasAdvisorCredit
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorCredit
argument_list|()
else|:
literal|""
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|NoteCell
name|note
init|=
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|request
operator|.
name|hasAdvisorNote
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorNote
argument_list|()
else|:
literal|""
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsAlternative
argument_list|(
name|priority
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
name|credit
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
name|note
argument_list|)
decl_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|priority
operator|==
literal|1
condition|?
literal|"top-border-solid"
else|:
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|row
operator|.
name|setId
argument_list|(
literal|"A"
operator|+
name|priority
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
block|}
name|float
name|min
init|=
literal|0
decl_stmt|,
name|max
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Request
name|request
range|:
name|iAdvisorRequests
operator|.
name|getCourses
argument_list|()
control|)
block|{
name|min
operator|+=
name|request
operator|.
name|getAdvisorCreditMin
argument_list|()
expr_stmt|;
name|max
operator|+=
name|request
operator|.
name|getAdvisorCreditMax
argument_list|()
expr_stmt|;
block|}
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|min
operator|<
name|max
condition|?
name|MESSAGES
operator|.
name|creditRange
argument_list|(
name|min
argument_list|,
name|max
argument_list|)
else|:
name|MESSAGES
operator|.
name|credit
argument_list|(
name|min
argument_list|)
argument_list|)
decl_stmt|;
name|WebTable
operator|.
name|NoteCell
name|note
init|=
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|iAdvisorRequests
operator|.
name|hasCreditNote
argument_list|()
condition|?
name|iAdvisorRequests
operator|.
name|getCreditNote
argument_list|()
else|:
literal|""
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|note
operator|.
name|setColSpan
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|Row
name|crow
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|rowTotalPriorityCreditHours
argument_list|()
argument_list|,
literal|2
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
name|credit
argument_list|,
name|note
argument_list|)
decl_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|crow
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
literal|"top-border-solid"
argument_list|)
expr_stmt|;
name|crow
operator|.
name|getCell
argument_list|(
literal|0
argument_list|)
operator|.
name|setStyleName
argument_list|(
literal|"top-border-solid text-bold"
argument_list|)
expr_stmt|;
name|crow
operator|.
name|setId
argument_list|(
literal|"C"
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|crow
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|Row
index|[]
name|rowArray
init|=
operator|new
name|WebTable
operator|.
name|Row
index|[
name|rows
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Row
name|row
range|:
name|rows
control|)
name|rowArray
index|[
name|idx
operator|++
index|]
operator|=
name|row
expr_stmt|;
name|iTable
operator|.
name|setData
argument_list|(
name|rowArray
argument_list|)
expr_stmt|;
name|iTable
operator|.
name|setColumnVisible
argument_list|(
literal|4
argument_list|,
name|hasPref
argument_list|)
expr_stmt|;
name|center
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

