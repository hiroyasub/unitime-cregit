begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|sectioning
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaButton
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|resources
operator|.
name|client
operator|.
name|ImageResource
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|AriaMultiButton
extends|extends
name|AriaButton
block|{
name|List
argument_list|<
name|AriaButton
argument_list|>
name|iClones
init|=
operator|new
name|ArrayList
argument_list|<
name|AriaButton
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|AriaMultiButton
parameter_list|(
name|String
name|html
parameter_list|)
block|{
name|super
argument_list|(
name|html
argument_list|)
expr_stmt|;
block|}
specifier|public
name|AriaMultiButton
parameter_list|(
name|ImageResource
name|image
parameter_list|,
name|String
name|html
parameter_list|)
block|{
name|super
argument_list|(
name|image
argument_list|,
name|html
argument_list|)
expr_stmt|;
block|}
specifier|public
name|AriaMultiButton
parameter_list|(
name|String
name|html
parameter_list|,
name|ImageResource
name|image
parameter_list|)
block|{
name|super
argument_list|(
name|html
argument_list|,
name|image
argument_list|)
expr_stmt|;
block|}
specifier|public
name|AriaButton
name|createClone
parameter_list|()
block|{
name|AriaButton
name|button
init|=
operator|new
name|AriaButton
argument_list|(
name|getHTML
argument_list|()
argument_list|)
decl_stmt|;
name|button
operator|.
name|setAriaLabel
argument_list|(
name|getAriaLabel
argument_list|()
argument_list|)
expr_stmt|;
name|button
operator|.
name|setStyleName
argument_list|(
name|getStyleName
argument_list|()
argument_list|)
expr_stmt|;
name|ToolBox
operator|.
name|setMinWidth
argument_list|(
name|button
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
argument_list|,
literal|"75px"
argument_list|)
expr_stmt|;
name|button
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|AriaMultiButton
operator|.
name|this
operator|.
name|click
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iClones
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|button
operator|.
name|setVisible
argument_list|(
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
name|button
operator|.
name|setEnabled
argument_list|(
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|ml
init|=
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|getMarginLeft
argument_list|()
decl_stmt|;
if|if
condition|(
name|ml
operator|!=
literal|null
operator|&&
operator|!
name|ml
operator|.
name|isEmpty
argument_list|()
condition|)
name|button
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"margin-left"
argument_list|,
name|ml
argument_list|)
expr_stmt|;
name|String
name|mr
init|=
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|getMarginRight
argument_list|()
decl_stmt|;
if|if
condition|(
name|mr
operator|!=
literal|null
operator|&&
operator|!
name|mr
operator|.
name|isEmpty
argument_list|()
condition|)
name|button
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"margin-right"
argument_list|,
name|mr
argument_list|)
expr_stmt|;
return|return
name|button
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setEnabled
parameter_list|(
name|boolean
name|enabled
parameter_list|)
block|{
name|super
operator|.
name|setEnabled
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
for|for
control|(
name|AriaButton
name|clone
range|:
name|iClones
control|)
name|clone
operator|.
name|setEnabled
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setVisible
parameter_list|(
name|boolean
name|visible
parameter_list|)
block|{
name|super
operator|.
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
for|for
control|(
name|AriaButton
name|clone
range|:
name|iClones
control|)
name|clone
operator|.
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setHTML
parameter_list|(
name|String
name|html
parameter_list|)
block|{
name|super
operator|.
name|setHTML
argument_list|(
name|html
argument_list|)
expr_stmt|;
if|if
condition|(
name|iClones
operator|!=
literal|null
condition|)
for|for
control|(
name|AriaButton
name|clone
range|:
name|iClones
control|)
name|clone
operator|.
name|setHTML
argument_list|(
name|html
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setTitle
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|super
operator|.
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
for|for
control|(
name|AriaButton
name|clone
range|:
name|iClones
control|)
name|clone
operator|.
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

