begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|sectioning
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaButton
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|CourseFinderDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|CourseFinderMultipleCourses
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|P
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|RequestedCourse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionHandler
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|SelectAllCourseFinderDialog
extends|extends
name|CourseFinderDialog
block|{
name|AriaButton
name|iFilterSelectAll
init|=
literal|null
decl_stmt|;
specifier|public
name|SelectAllCourseFinderDialog
parameter_list|()
block|{
name|iFilterSelectAll
operator|=
operator|new
name|AriaButton
argument_list|(
name|MESSAGES
operator|.
name|buttonSelectAll
argument_list|()
argument_list|)
expr_stmt|;
name|iFilterSelectAll
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|CourseFinderTab
name|tab
init|=
name|getSelectedTab
argument_list|()
decl_stmt|;
if|if
condition|(
name|tab
operator|!=
literal|null
operator|&&
name|tab
operator|instanceof
name|CourseFinderMultipleCourses
condition|)
block|{
name|CourseFinderMultipleCourses
name|courses
init|=
operator|(
name|CourseFinderMultipleCourses
operator|)
name|tab
decl_stmt|;
if|if
condition|(
name|courses
operator|.
name|isAllowMultiSelection
argument_list|()
condition|)
block|{
name|List
argument_list|<
name|CourseAssignment
argument_list|>
name|selected
init|=
operator|new
name|ArrayList
argument_list|<
name|CourseAssignment
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|CourseAssignment
name|ca
range|:
name|courses
operator|.
name|getCourses
argument_list|()
control|)
if|if
condition|(
name|ca
operator|.
name|getSelection
argument_list|()
operator|!=
literal|null
condition|)
name|selected
operator|.
name|add
argument_list|(
name|ca
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|selected
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Collections
operator|.
name|sort
argument_list|(
name|selected
argument_list|)
expr_stmt|;
for|for
control|(
name|CourseAssignment
name|ca
range|:
name|selected
control|)
name|courses
operator|.
name|selectCourse
argument_list|(
name|ca
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|RequestedCourse
name|rc
init|=
operator|(
name|RequestedCourse
operator|)
operator|(
name|tab
operator|==
literal|null
condition|?
literal|null
else|:
name|tab
operator|.
name|getValue
argument_list|()
operator|)
decl_stmt|;
if|if
condition|(
name|rc
operator|!=
literal|null
condition|)
name|iFilter
operator|.
name|setValue
argument_list|(
name|rc
operator|.
name|toString
argument_list|(
name|CONSTANTS
argument_list|)
argument_list|)
expr_stmt|;
name|hide
argument_list|()
expr_stmt|;
name|SelectionEvent
operator|.
name|fire
argument_list|(
name|SelectAllCourseFinderDialog
operator|.
name|this
argument_list|,
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iFilterSelectAll
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iFilterSelectAll
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|P
name|filterButton
init|=
operator|new
name|P
argument_list|(
literal|"button"
argument_list|)
decl_stmt|;
name|filterButton
operator|.
name|add
argument_list|(
name|iFilterSelectAll
argument_list|)
expr_stmt|;
name|iFilterPanel
operator|.
name|insert
argument_list|(
name|filterButton
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|checkSelectAll
parameter_list|()
block|{
name|CourseFinderTab
name|tab
init|=
name|getSelectedTab
argument_list|()
decl_stmt|;
if|if
condition|(
name|tab
operator|!=
literal|null
operator|&&
name|tab
operator|instanceof
name|CourseFinderMultipleCourses
condition|)
block|{
name|CourseFinderMultipleCourses
name|course
init|=
operator|(
name|CourseFinderMultipleCourses
operator|)
name|tab
decl_stmt|;
if|if
condition|(
name|course
operator|.
name|isAllowMultiSelection
argument_list|()
condition|)
block|{
name|int
name|nrCourses
init|=
literal|0
decl_stmt|,
name|nrSelect
init|=
literal|0
decl_stmt|;
for|for
control|(
name|CourseAssignment
name|ca
range|:
name|course
operator|.
name|getCourses
argument_list|()
control|)
block|{
name|nrCourses
operator|++
expr_stmt|;
if|if
condition|(
name|ca
operator|.
name|getSelection
argument_list|()
operator|!=
literal|null
condition|)
name|nrSelect
operator|++
expr_stmt|;
block|}
if|if
condition|(
name|nrSelect
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|nrSelect
operator|==
name|nrCourses
condition|)
block|{
name|iFilterSelectAll
operator|.
name|setHTML
argument_list|(
name|MESSAGES
operator|.
name|buttonSelectAll
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iFilterSelectAll
operator|.
name|setHTML
argument_list|(
name|MESSAGES
operator|.
name|buttonPickN
argument_list|(
name|nrSelect
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|iFilterSelectAll
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iFilterSelectAll
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
name|iFilterSelectAll
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iFilterSelectAll
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iFilterSelectAll
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iFilterSelectAll
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setTabs
parameter_list|(
name|CourseFinderTab
modifier|...
name|tabs
parameter_list|)
block|{
name|super
operator|.
name|setTabs
argument_list|(
name|tabs
argument_list|)
expr_stmt|;
for|for
control|(
name|CourseFinderTab
name|tab
range|:
name|tabs
control|)
if|if
condition|(
name|tab
operator|instanceof
name|CourseFinderMultipleCourses
condition|)
name|tab
operator|.
name|addResponseHandler
argument_list|(
operator|new
name|ResponseHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onResponse
parameter_list|(
name|ResponseEvent
name|event
parameter_list|)
block|{
name|checkSelectAll
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|iTabPanel
operator|!=
literal|null
condition|)
name|iTabPanel
operator|.
name|addSelectionHandler
argument_list|(
operator|new
name|SelectionHandler
argument_list|<
name|Integer
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSelection
parameter_list|(
name|SelectionEvent
argument_list|<
name|Integer
argument_list|>
name|event
parameter_list|)
block|{
name|checkSelectAll
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

