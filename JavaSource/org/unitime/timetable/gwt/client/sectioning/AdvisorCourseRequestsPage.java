begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|sectioning
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|Lookup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimePageHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeConfirmationDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|services
operator|.
name|SectioningService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|services
operator|.
name|SectioningServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|PersonInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|AcademicSessionProvider
operator|.
name|AcademicSessionChangeEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|AcademicSessionProvider
operator|.
name|AcademicSessionChangeHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|AcademicSessionProvider
operator|.
name|AcademicSessionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|AcademicSessionProvider
operator|.
name|AcademicSessionMatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|AdvisingStudentDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|AdvisorCourseRequestSubmission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|StudentStatusInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SpecialRegistrationInterface
operator|.
name|SpecialRegistrationContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
operator|.
name|ScheduledCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
operator|.
name|ClosingEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
operator|.
name|Location
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|AdvisorCourseRequestsPage
extends|extends
name|SimpleForm
block|{
specifier|private
specifier|static
specifier|final
name|SectioningServiceAsync
name|sSectioningService
init|=
name|GWT
operator|.
name|create
argument_list|(
name|SectioningService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StudentSectioningMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|header
decl_stmt|,
name|footer
decl_stmt|;
specifier|private
name|Lookup
name|iLookupDialog
init|=
literal|null
decl_stmt|;
specifier|private
name|Label
name|iStudentName
decl_stmt|,
name|iStudentExternalId
decl_stmt|,
name|iTerm
decl_stmt|;
specifier|private
name|Label
name|iAdvisorEmail
init|=
literal|null
decl_stmt|;
specifier|private
name|AdvisorAcademicSessionSelector
name|iSession
init|=
literal|null
decl_stmt|;
specifier|private
name|SpecialRegistrationContext
name|iSpecRegCx
init|=
literal|null
decl_stmt|;
specifier|private
name|Label
name|iTotalCredit
init|=
literal|null
decl_stmt|;
specifier|private
name|ListBox
name|iStatus
init|=
literal|null
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|AdvisorCourseRequestLine
argument_list|>
name|iCourses
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|AdvisorCourseRequestLine
argument_list|>
name|iAlternatives
decl_stmt|;
specifier|private
name|AdvisingStudentDetails
name|iDetails
decl_stmt|;
specifier|public
name|AdvisorCourseRequestsPage
parameter_list|()
block|{
name|super
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|UniTimePageHeader
operator|.
name|getInstance
argument_list|()
operator|.
name|getLeft
argument_list|()
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|UniTimePageHeader
operator|.
name|getInstance
argument_list|()
operator|.
name|getLeft
argument_list|()
operator|.
name|setPreventDefault
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
literal|"unitime-AdvisorCourseRequests"
argument_list|)
expr_stmt|;
name|header
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|()
expr_stmt|;
name|header
operator|.
name|addButton
argument_list|(
literal|"lookup"
argument_list|,
name|MESSAGES
operator|.
name|buttonLookupStudent
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|isPageChanged
argument_list|()
condition|)
block|{
name|UniTimeConfirmationDialog
operator|.
name|confirm
argument_list|(
name|MESSAGES
operator|.
name|queryLeaveAdvisorsCourseRequestsNotSave
argument_list|()
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|lookupStudent
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|lookupStudent
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|header
operator|.
name|addButton
argument_list|(
literal|"print"
argument_list|,
name|MESSAGES
operator|.
name|buttonPrint
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|submit
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"print"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|header
operator|.
name|addButton
argument_list|(
literal|"submit"
argument_list|,
name|MESSAGES
operator|.
name|buttonSubmitPrint
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|submit
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"submit"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|addHeaderRow
argument_list|(
name|header
argument_list|)
expr_stmt|;
name|iStudentName
operator|=
operator|new
name|Label
argument_list|()
expr_stmt|;
name|iStudentName
operator|.
name|addStyleName
argument_list|(
literal|"student-name"
argument_list|)
expr_stmt|;
name|iStudentExternalId
operator|=
operator|new
name|Label
argument_list|()
expr_stmt|;
name|iStudentExternalId
operator|.
name|addStyleName
argument_list|(
literal|"student-id"
argument_list|)
expr_stmt|;
name|addDoubleRow
argument_list|(
name|MESSAGES
operator|.
name|propStudentName
argument_list|()
argument_list|,
name|iStudentName
argument_list|,
literal|2
argument_list|,
name|MESSAGES
operator|.
name|propStudentExternalId
argument_list|()
argument_list|,
name|iStudentExternalId
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|iSession
operator|=
operator|new
name|AdvisorAcademicSessionSelector
argument_list|()
expr_stmt|;
name|iAdvisorEmail
operator|=
operator|new
name|Label
argument_list|()
expr_stmt|;
name|iAdvisorEmail
operator|.
name|addStyleName
argument_list|(
literal|"advisor-email"
argument_list|)
expr_stmt|;
name|iTerm
operator|=
operator|new
name|Label
argument_list|()
expr_stmt|;
name|iTerm
operator|.
name|addStyleName
argument_list|(
literal|"term"
argument_list|)
expr_stmt|;
name|addDoubleRow
argument_list|(
name|MESSAGES
operator|.
name|propAdvisorEmail
argument_list|()
argument_list|,
name|iAdvisorEmail
argument_list|,
literal|2
argument_list|,
name|MESSAGES
operator|.
name|propAcademicSession
argument_list|()
argument_list|,
name|iTerm
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|iSession
operator|.
name|addAcademicSessionChangeHandler
argument_list|(
operator|new
name|AcademicSessionChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onAcademicSessionChange
parameter_list|(
name|AcademicSessionChangeEvent
name|event
parameter_list|)
block|{
name|iTerm
operator|.
name|setText
argument_list|(
name|iSession
operator|.
name|getAcademicSessionName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|iSession
operator|.
name|getAcademicSessionName
argument_list|()
argument_list|)
expr_stmt|;
name|iLookupDialog
operator|.
name|setOptions
argument_list|(
literal|"mustHaveExternalId,source=students,session="
operator|+
name|event
operator|.
name|getNewAcademicSessionId
argument_list|()
argument_list|)
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"submit"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"print"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|sSectioningService
operator|.
name|getStudentAdvisingDetails
argument_list|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|,
name|iStudentExternalId
operator|.
name|getText
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|AdvisingStudentDetails
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|AdvisingStudentDetails
name|result
parameter_list|)
block|{
name|iDetails
operator|=
name|result
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"submit"
argument_list|,
name|result
operator|.
name|isCanUpdate
argument_list|()
argument_list|)
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"print"
argument_list|,
operator|!
name|result
operator|.
name|isCanUpdate
argument_list|()
argument_list|)
expr_stmt|;
name|iAdvisorEmail
operator|.
name|setText
argument_list|(
name|result
operator|.
name|getAdvisorEmail
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|result
operator|.
name|getAdvisorEmail
argument_list|()
argument_list|)
expr_stmt|;
name|iStudentName
operator|.
name|setText
argument_list|(
name|result
operator|.
name|getStudentName
argument_list|()
argument_list|)
expr_stmt|;
name|iStudentExternalId
operator|.
name|setText
argument_list|(
name|result
operator|.
name|getStudentExternalId
argument_list|()
argument_list|)
expr_stmt|;
name|iStatus
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|iStatus
operator|.
name|addItem
argument_list|(
name|result
operator|.
name|getStatus
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|,
name|result
operator|.
name|getStatus
argument_list|()
operator|.
name|getReference
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iStatus
operator|.
name|addItem
argument_list|(
literal|""
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
name|iStatus
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|hasStatuses
argument_list|()
condition|)
for|for
control|(
name|StudentStatusInfo
name|status
range|:
name|result
operator|.
name|getStatuses
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|status
operator|.
name|equals
argument_list|(
name|result
operator|.
name|getStatus
argument_list|()
argument_list|)
condition|)
name|iStatus
operator|.
name|addItem
argument_list|(
name|status
operator|.
name|getLabel
argument_list|()
argument_list|,
name|status
operator|.
name|getReference
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|setRequest
argument_list|(
name|result
operator|.
name|getRequest
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iTerm
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iSession
operator|.
name|selectSession
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iStudentName
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|isPageChanged
argument_list|()
condition|)
block|{
name|UniTimeConfirmationDialog
operator|.
name|confirm
argument_list|(
name|MESSAGES
operator|.
name|queryLeaveAdvisorsCourseRequestsNotSave
argument_list|()
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|lookupStudent
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|lookupStudent
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iStudentExternalId
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|isPageChanged
argument_list|()
condition|)
block|{
name|UniTimeConfirmationDialog
operator|.
name|confirm
argument_list|(
name|MESSAGES
operator|.
name|queryLeaveAdvisorsCourseRequestsNotSave
argument_list|()
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|lookupStudent
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|lookupStudent
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iStatus
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
name|iStatus
operator|.
name|addStyleName
argument_list|(
literal|"status"
argument_list|)
expr_stmt|;
name|addDoubleRow
argument_list|(
literal|""
argument_list|,
operator|new
name|Label
argument_list|()
argument_list|,
literal|2
argument_list|,
name|MESSAGES
operator|.
name|propStudentStatus
argument_list|()
argument_list|,
name|iStatus
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|iSpecRegCx
operator|=
operator|new
name|SpecialRegistrationContext
argument_list|()
expr_stmt|;
name|iCourses
operator|=
operator|new
name|ArrayList
argument_list|<
name|AdvisorCourseRequestLine
argument_list|>
argument_list|()
expr_stmt|;
name|iAlternatives
operator|=
operator|new
name|ArrayList
argument_list|<
name|AdvisorCourseRequestLine
argument_list|>
argument_list|()
expr_stmt|;
name|UniTimeHeaderPanel
name|requests
init|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsCourses
argument_list|()
argument_list|)
decl_stmt|;
name|requests
operator|.
name|setMessage
argument_list|(
name|MESSAGES
operator|.
name|headCreditHoursNotes
argument_list|()
argument_list|)
expr_stmt|;
name|requests
operator|.
name|addStyleName
argument_list|(
literal|"requests-header"
argument_list|)
expr_stmt|;
name|addHeaderRow
argument_list|(
name|requests
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|9
condition|;
name|i
operator|++
control|)
block|{
specifier|final
name|AdvisorCourseRequestLine
name|line
init|=
operator|new
name|AdvisorCourseRequestLine
argument_list|(
name|iSession
argument_list|,
name|i
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|,
name|iSpecRegCx
argument_list|)
decl_stmt|;
name|line
operator|.
name|insert
argument_list|(
name|this
argument_list|,
name|getRowCount
argument_list|()
argument_list|)
expr_stmt|;
name|iCourses
operator|.
name|add
argument_list|(
name|line
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|>
literal|0
condition|)
block|{
name|AdvisorCourseRequestLine
name|prev
init|=
name|iCourses
operator|.
name|get
argument_list|(
name|i
operator|-
literal|1
argument_list|)
decl_stmt|;
name|line
operator|.
name|setPrevious
argument_list|(
name|prev
argument_list|)
expr_stmt|;
name|prev
operator|.
name|setNext
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
name|line
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|CourseRequestInterface
operator|.
name|Request
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Request
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
operator|&&
name|iCourses
operator|.
name|indexOf
argument_list|(
name|line
argument_list|)
operator|+
literal|1
operator|==
name|iCourses
operator|.
name|size
argument_list|()
condition|)
name|addCourseLine
argument_list|()
expr_stmt|;
name|updateTotalCredits
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|Label
name|l
init|=
operator|new
name|Label
argument_list|(
name|MESSAGES
operator|.
name|labelTotalPriorityCreditHours
argument_list|()
argument_list|)
decl_stmt|;
name|l
operator|.
name|addStyleName
argument_list|(
literal|"total-credit-label"
argument_list|)
expr_stmt|;
name|int
name|row
init|=
name|getRowCount
argument_list|()
decl_stmt|;
name|setWidget
argument_list|(
name|row
argument_list|,
literal|0
argument_list|,
name|l
argument_list|)
expr_stmt|;
name|getFlexCellFormatter
argument_list|()
operator|.
name|setColSpan
argument_list|(
name|row
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|iTotalCredit
operator|=
operator|new
name|Label
argument_list|(
name|MESSAGES
operator|.
name|credit
argument_list|(
literal|0f
argument_list|)
argument_list|)
expr_stmt|;
name|iTotalCredit
operator|.
name|addStyleName
argument_list|(
literal|"total-credit-value"
argument_list|)
expr_stmt|;
name|setWidget
argument_list|(
name|row
argument_list|,
literal|1
argument_list|,
name|iTotalCredit
argument_list|)
expr_stmt|;
name|UniTimeHeaderPanel
name|alternatives
init|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsAlternatives
argument_list|()
argument_list|)
decl_stmt|;
name|alternatives
operator|.
name|setMessage
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsAlternativesNote
argument_list|()
argument_list|)
expr_stmt|;
name|addHeaderRow
argument_list|(
name|alternatives
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
block|{
specifier|final
name|AdvisorCourseRequestLine
name|line
init|=
operator|new
name|AdvisorCourseRequestLine
argument_list|(
name|iSession
argument_list|,
name|i
argument_list|,
literal|true
argument_list|,
literal|null
argument_list|,
name|iSpecRegCx
argument_list|)
decl_stmt|;
name|line
operator|.
name|insert
argument_list|(
name|this
argument_list|,
name|getRowCount
argument_list|()
argument_list|)
expr_stmt|;
name|iAlternatives
operator|.
name|add
argument_list|(
name|line
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|==
literal|0
condition|)
block|{
name|AdvisorCourseRequestLine
name|prev
init|=
name|iCourses
operator|.
name|get
argument_list|(
name|iCourses
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
name|line
operator|.
name|setPrevious
argument_list|(
name|prev
argument_list|)
expr_stmt|;
name|prev
operator|.
name|setNext
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|AdvisorCourseRequestLine
name|prev
init|=
name|iAlternatives
operator|.
name|get
argument_list|(
name|i
operator|-
literal|1
argument_list|)
decl_stmt|;
name|line
operator|.
name|setPrevious
argument_list|(
name|prev
argument_list|)
expr_stmt|;
name|prev
operator|.
name|setNext
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
name|line
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|CourseRequestInterface
operator|.
name|Request
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Request
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
operator|&&
name|iAlternatives
operator|.
name|indexOf
argument_list|(
name|line
argument_list|)
operator|+
literal|1
operator|==
name|iAlternatives
operator|.
name|size
argument_list|()
condition|)
name|addAlternativeLine
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|iCourses
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getCourses
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|setHint
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsHint1
argument_list|()
argument_list|)
expr_stmt|;
name|iCourses
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getCourses
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|setHint
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsHint3
argument_list|()
argument_list|)
expr_stmt|;
name|iCourses
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getCourses
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|setHint
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsHint4
argument_list|()
argument_list|)
expr_stmt|;
name|iCourses
operator|.
name|get
argument_list|(
name|iCourses
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
operator|.
name|getCourses
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|setHint
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsHint8
argument_list|()
argument_list|)
expr_stmt|;
name|iAlternatives
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getCourses
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|setHint
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsHintA0
argument_list|()
argument_list|)
expr_stmt|;
name|footer
operator|=
name|header
operator|.
name|clonePanel
argument_list|()
expr_stmt|;
name|addBottomRow
argument_list|(
name|footer
argument_list|)
expr_stmt|;
name|Window
operator|.
name|addWindowClosingHandler
argument_list|(
operator|new
name|Window
operator|.
name|ClosingHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onWindowClosing
parameter_list|(
name|ClosingEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|isPageChanged
argument_list|()
condition|)
block|{
if|if
condition|(
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|isShowing
argument_list|()
condition|)
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|event
operator|.
name|setMessage
argument_list|(
name|MESSAGES
operator|.
name|queryLeaveAdvisorsCourseRequestsNotSave
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iLookupDialog
operator|=
operator|new
name|Lookup
argument_list|()
expr_stmt|;
name|iLookupDialog
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|dialogStudentLookup
argument_list|()
argument_list|)
expr_stmt|;
name|iLookupDialog
operator|.
name|setOptions
argument_list|(
literal|"mustHaveExternalId,source=students"
argument_list|)
expr_stmt|;
name|iLookupDialog
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|PersonInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|PersonInterface
argument_list|>
name|event
parameter_list|)
block|{
name|studentSelected
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|Location
operator|.
name|getParameter
argument_list|(
literal|"student"
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|iStudentExternalId
operator|.
name|setText
argument_list|(
name|Location
operator|.
name|getParameter
argument_list|(
literal|"student"
argument_list|)
argument_list|)
expr_stmt|;
name|iSession
operator|.
name|selectSession
argument_list|(
operator|new
name|AcademicSessionMatcher
argument_list|()
block|{
specifier|protected
name|boolean
name|matchCampus
parameter_list|(
name|AcademicSessionInfo
name|info
parameter_list|,
name|String
name|campus
parameter_list|)
block|{
if|if
condition|(
name|info
operator|.
name|hasExternalCampus
argument_list|()
operator|&&
name|campus
operator|.
name|equalsIgnoreCase
argument_list|(
name|info
operator|.
name|getExternalCampus
argument_list|()
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
name|campus
operator|.
name|equalsIgnoreCase
argument_list|(
name|info
operator|.
name|getCampus
argument_list|()
argument_list|)
return|;
block|}
specifier|protected
name|boolean
name|matchTerm
parameter_list|(
name|AcademicSessionInfo
name|info
parameter_list|,
name|String
name|term
parameter_list|)
block|{
if|if
condition|(
name|info
operator|.
name|hasExternalTerm
argument_list|()
operator|&&
name|term
operator|.
name|equalsIgnoreCase
argument_list|(
name|info
operator|.
name|getExternalTerm
argument_list|()
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
name|term
operator|.
name|equalsIgnoreCase
argument_list|(
name|info
operator|.
name|getTerm
argument_list|()
operator|+
name|info
operator|.
name|getYear
argument_list|()
argument_list|)
operator|||
name|term
operator|.
name|equalsIgnoreCase
argument_list|(
name|info
operator|.
name|getYear
argument_list|()
operator|+
name|info
operator|.
name|getTerm
argument_list|()
argument_list|)
operator|||
name|term
operator|.
name|equalsIgnoreCase
argument_list|(
name|info
operator|.
name|getTerm
argument_list|()
operator|+
name|info
operator|.
name|getYear
argument_list|()
operator|+
name|info
operator|.
name|getCampus
argument_list|()
argument_list|)
return|;
block|}
specifier|protected
name|boolean
name|matchSession
parameter_list|(
name|AcademicSessionInfo
name|info
parameter_list|,
name|String
name|session
parameter_list|)
block|{
if|if
condition|(
name|info
operator|.
name|hasExternalTerm
argument_list|()
operator|&&
name|info
operator|.
name|hasExternalCampus
argument_list|()
operator|&&
name|session
operator|.
name|equalsIgnoreCase
argument_list|(
name|info
operator|.
name|getExternalTerm
argument_list|()
operator|+
name|info
operator|.
name|hasExternalCampus
argument_list|()
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
name|session
operator|.
name|equalsIgnoreCase
argument_list|(
name|info
operator|.
name|getTerm
argument_list|()
operator|+
name|info
operator|.
name|getYear
argument_list|()
operator|+
name|info
operator|.
name|getCampus
argument_list|()
argument_list|)
operator|||
name|session
operator|.
name|equalsIgnoreCase
argument_list|(
name|info
operator|.
name|getTerm
argument_list|()
operator|+
name|info
operator|.
name|getYear
argument_list|()
argument_list|)
operator|||
name|session
operator|.
name|equals
argument_list|(
name|info
operator|.
name|getSessionId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|match
parameter_list|(
name|AcademicSessionInfo
name|info
parameter_list|)
block|{
name|String
name|campus
init|=
name|Location
operator|.
name|getParameter
argument_list|(
literal|"campus"
argument_list|)
decl_stmt|;
if|if
condition|(
name|campus
operator|!=
literal|null
operator|&&
operator|!
name|matchCampus
argument_list|(
name|info
argument_list|,
name|campus
argument_list|)
condition|)
return|return
literal|false
return|;
name|String
name|term
init|=
name|Location
operator|.
name|getParameter
argument_list|(
literal|"term"
argument_list|)
decl_stmt|;
if|if
condition|(
name|term
operator|!=
literal|null
operator|&&
operator|!
name|matchTerm
argument_list|(
name|info
argument_list|,
name|term
argument_list|)
condition|)
return|return
literal|false
return|;
name|String
name|session
init|=
name|Location
operator|.
name|getParameter
argument_list|(
literal|"session"
argument_list|)
decl_stmt|;
if|if
condition|(
name|session
operator|!=
literal|null
operator|&&
operator|!
name|matchSession
argument_list|(
name|info
argument_list|,
name|session
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
block|}
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|lookupStudent
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|updateTotalCredits
parameter_list|()
block|{
name|float
name|min
init|=
literal|0
decl_stmt|,
name|max
init|=
literal|0
decl_stmt|;
for|for
control|(
name|AdvisorCourseRequestLine
name|line
range|:
name|iCourses
control|)
block|{
name|min
operator|+=
name|line
operator|.
name|getCreditMin
argument_list|()
expr_stmt|;
name|max
operator|+=
name|line
operator|.
name|getCreditMax
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|min
operator|<
name|max
condition|)
name|iTotalCredit
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|creditRange
argument_list|(
name|min
argument_list|,
name|max
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|iTotalCredit
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|credit
argument_list|(
name|min
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|clearRequests
parameter_list|()
block|{
for|for
control|(
name|AdvisorCourseRequestLine
name|line
range|:
name|iCourses
control|)
name|line
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
for|for
control|(
name|AdvisorCourseRequestLine
name|line
range|:
name|iAlternatives
control|)
name|line
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|updateTotalCredits
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|addCourseLine
parameter_list|()
block|{
name|int
name|i
init|=
name|iCourses
operator|.
name|size
argument_list|()
decl_stmt|;
specifier|final
name|AdvisorCourseRequestLine
name|line
init|=
operator|new
name|AdvisorCourseRequestLine
argument_list|(
name|iSession
argument_list|,
name|i
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|,
name|iSpecRegCx
argument_list|)
decl_stmt|;
name|iCourses
operator|.
name|add
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|AdvisorCourseRequestLine
name|prev
init|=
name|iCourses
operator|.
name|get
argument_list|(
name|i
operator|-
literal|1
argument_list|)
decl_stmt|;
name|prev
operator|.
name|getCourses
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|setHint
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|line
operator|.
name|getCourses
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|setHint
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsHint8
argument_list|()
argument_list|)
expr_stmt|;
name|AdvisorCourseRequestLine
name|next
init|=
operator|(
name|iAlternatives
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
name|iAlternatives
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
decl_stmt|;
name|line
operator|.
name|setPrevious
argument_list|(
name|prev
argument_list|)
expr_stmt|;
name|prev
operator|.
name|setNext
argument_list|(
name|line
argument_list|)
expr_stmt|;
if|if
condition|(
name|next
operator|!=
literal|null
condition|)
block|{
name|line
operator|.
name|setNext
argument_list|(
name|next
argument_list|)
expr_stmt|;
name|next
operator|.
name|setPrevious
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
name|line
operator|.
name|insert
argument_list|(
name|this
argument_list|,
name|insertRow
argument_list|(
literal|4
operator|+
name|iCourses
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|CourseRequestInterface
operator|.
name|Request
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Request
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
operator|&&
name|iCourses
operator|.
name|indexOf
argument_list|(
name|line
argument_list|)
operator|+
literal|1
operator|==
name|iCourses
operator|.
name|size
argument_list|()
condition|)
name|addCourseLine
argument_list|()
expr_stmt|;
name|updateTotalCredits
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|addAlternativeLine
parameter_list|()
block|{
name|int
name|i
init|=
name|iAlternatives
operator|.
name|size
argument_list|()
decl_stmt|;
specifier|final
name|AdvisorCourseRequestLine
name|line
init|=
operator|new
name|AdvisorCourseRequestLine
argument_list|(
name|iSession
argument_list|,
name|i
argument_list|,
literal|true
argument_list|,
literal|null
argument_list|,
name|iSpecRegCx
argument_list|)
decl_stmt|;
name|iAlternatives
operator|.
name|add
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|AdvisorCourseRequestLine
name|prev
init|=
operator|(
name|i
operator|==
literal|0
condition|?
name|iCourses
operator|.
name|get
argument_list|(
name|iCourses
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
else|:
name|iAlternatives
operator|.
name|get
argument_list|(
name|i
operator|-
literal|1
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|prev
operator|!=
literal|null
condition|)
block|{
name|line
operator|.
name|setPrevious
argument_list|(
name|prev
argument_list|)
expr_stmt|;
name|prev
operator|.
name|setNext
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
name|line
operator|.
name|insert
argument_list|(
name|this
argument_list|,
name|insertRow
argument_list|(
literal|4
operator|+
name|iCourses
operator|.
name|size
argument_list|()
operator|+
literal|2
operator|+
name|iAlternatives
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|CourseRequestInterface
operator|.
name|Request
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Request
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
operator|&&
name|iAlternatives
operator|.
name|indexOf
argument_list|(
name|line
argument_list|)
operator|+
literal|1
operator|==
name|iAlternatives
operator|.
name|size
argument_list|()
condition|)
name|addAlternativeLine
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|boolean
name|isPageChanged
parameter_list|()
block|{
if|if
condition|(
name|iDetails
operator|==
literal|null
operator|||
name|iDetails
operator|.
name|getRequest
argument_list|()
operator|==
literal|null
condition|)
return|return
operator|!
name|getRequest
argument_list|()
operator|.
name|isEmpty
argument_list|()
return|;
else|else
block|{
return|return
operator|!
name|iDetails
operator|.
name|getRequest
argument_list|()
operator|.
name|equals
argument_list|(
name|getRequest
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|protected
name|void
name|lookupStudent
parameter_list|()
block|{
name|iLookupDialog
operator|.
name|center
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|studentSelected
parameter_list|(
name|PersonInterface
name|person
parameter_list|)
block|{
if|if
condition|(
name|person
operator|==
literal|null
operator|||
name|person
operator|.
name|getId
argument_list|()
operator|==
literal|null
operator|||
name|person
operator|.
name|getId
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iStudentName
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iStudentExternalId
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iTerm
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"submit"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"print"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|clearRequests
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|iStudentName
operator|.
name|setText
argument_list|(
name|person
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|iStudentExternalId
operator|.
name|setText
argument_list|(
name|person
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|clearRequests
argument_list|()
expr_stmt|;
name|iSession
operator|.
name|selectSessionNoCheck
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
class|class
name|AdvisorAcademicSessionSelector
extends|extends
name|AcademicSessionSelector
block|{
specifier|public
name|AdvisorAcademicSessionSelector
parameter_list|()
block|{
name|super
argument_list|(
name|UniTimePageHeader
operator|.
name|getInstance
argument_list|()
operator|.
name|getRight
argument_list|()
argument_list|,
name|StudentSectioningPage
operator|.
name|Mode
operator|.
name|REQUESTS
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|selectSession
parameter_list|()
block|{
if|if
condition|(
name|isPageChanged
argument_list|()
condition|)
block|{
name|UniTimeConfirmationDialog
operator|.
name|confirm
argument_list|(
name|MESSAGES
operator|.
name|queryLeaveAdvisorsCourseRequestsNotSave
argument_list|()
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|selectSessionNoCheck
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|selectSessionNoCheck
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|listAcademicSessions
parameter_list|(
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|AcademicSessionInfo
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
name|sSectioningService
operator|.
name|getStudentSessions
argument_list|(
name|iStudentExternalId
operator|.
name|getText
argument_list|()
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|selectSessionNoCheck
parameter_list|()
block|{
name|header
operator|.
name|setEnabled
argument_list|(
literal|"submit"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"print"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|super
operator|.
name|selectSession
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|fillInCourses
parameter_list|(
name|CourseRequestInterface
name|cr
parameter_list|)
block|{
for|for
control|(
name|AdvisorCourseRequestLine
name|line
range|:
name|iCourses
control|)
block|{
name|CourseRequestInterface
operator|.
name|Request
name|req
init|=
name|line
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|req
operator|!=
literal|null
condition|)
name|cr
operator|.
name|getCourses
argument_list|()
operator|.
name|add
argument_list|(
name|req
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|fillInAlternatives
parameter_list|(
name|CourseRequestInterface
name|cr
parameter_list|)
block|{
for|for
control|(
name|AdvisorCourseRequestLine
name|line
range|:
name|iAlternatives
control|)
block|{
name|CourseRequestInterface
operator|.
name|Request
name|req
init|=
name|line
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|req
operator|!=
literal|null
condition|)
name|cr
operator|.
name|getAlternatives
argument_list|()
operator|.
name|add
argument_list|(
name|req
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|CourseRequestInterface
name|getRequest
parameter_list|()
block|{
name|CourseRequestInterface
name|cr
init|=
operator|new
name|CourseRequestInterface
argument_list|()
decl_stmt|;
name|cr
operator|.
name|setAcademicSessionId
argument_list|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|)
expr_stmt|;
name|fillInCourses
argument_list|(
name|cr
argument_list|)
expr_stmt|;
name|fillInAlternatives
argument_list|(
name|cr
argument_list|)
expr_stmt|;
return|return
name|cr
return|;
block|}
specifier|public
name|void
name|setRequest
parameter_list|(
name|CourseRequestInterface
name|request
parameter_list|)
block|{
name|clearRequests
argument_list|()
expr_stmt|;
if|if
condition|(
name|request
operator|!=
literal|null
condition|)
block|{
while|while
condition|(
name|iCourses
operator|.
name|size
argument_list|()
operator|<
name|request
operator|.
name|getCourses
argument_list|()
operator|.
name|size
argument_list|()
condition|)
name|addCourseLine
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
name|request
operator|.
name|getCourses
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|idx
operator|++
control|)
name|iCourses
operator|.
name|get
argument_list|(
name|idx
argument_list|)
operator|.
name|setValue
argument_list|(
name|request
operator|.
name|getCourses
argument_list|()
operator|.
name|get
argument_list|(
name|idx
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
while|while
condition|(
name|iAlternatives
operator|.
name|size
argument_list|()
operator|<
name|request
operator|.
name|getAlternatives
argument_list|()
operator|.
name|size
argument_list|()
condition|)
name|addAlternativeLine
argument_list|()
expr_stmt|;
empty_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
name|request
operator|.
name|getAlternatives
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|idx
operator|++
control|)
name|iAlternatives
operator|.
name|get
argument_list|(
name|idx
argument_list|)
operator|.
name|setValue
argument_list|(
name|request
operator|.
name|getAlternatives
argument_list|()
operator|.
name|get
argument_list|(
name|idx
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|updateTotalCredits
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
specifier|final
specifier|native
name|String
name|download
parameter_list|(
name|byte
index|[]
name|bytes
parameter_list|,
name|String
name|name
parameter_list|)
comment|/*-{ 		var data = new Uint8Array(bytes); 		var blob = new Blob([data], {type: "application/pdf"}); 		var link = $doc.createElement("a"); 		link.href = $wnd.URL.createObjectURL(blob); 		link.download = name + ".pdf"; 		link.click(); 	}-*/
function_decl|;
specifier|protected
name|void
name|submit
parameter_list|()
block|{
name|AdvisingStudentDetails
name|details
init|=
operator|new
name|AdvisingStudentDetails
argument_list|(
name|iDetails
argument_list|)
decl_stmt|;
name|details
operator|.
name|setRequest
argument_list|(
name|getRequest
argument_list|()
argument_list|)
expr_stmt|;
name|details
operator|.
name|setStatus
argument_list|(
name|iDetails
operator|.
name|getStatus
argument_list|(
name|iStatus
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|advisorCourseRequestsSaving
argument_list|()
argument_list|)
expr_stmt|;
name|sSectioningService
operator|.
name|submitAdvisingDetails
argument_list|(
name|details
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|AdvisorCourseRequestSubmission
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|AdvisorCourseRequestSubmission
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|download
argument_list|(
name|result
operator|.
name|getPdf
argument_list|()
argument_list|,
literal|"crf-"
operator|+
name|iStudentExternalId
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

