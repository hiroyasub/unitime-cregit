begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|sectioning
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|Lookup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimePageHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|CourseFinderClasses
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|CourseFinderDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|DataProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|SimpleForm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeConfirmationDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|WebTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|services
operator|.
name|SectioningService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|services
operator|.
name|SectioningServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|DegreePlanInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|PersonInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SectioningException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|AcademicSessionProvider
operator|.
name|AcademicSessionChangeEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|AcademicSessionProvider
operator|.
name|AcademicSessionChangeHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|AcademicSessionProvider
operator|.
name|AcademicSessionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|AcademicSessionProvider
operator|.
name|AcademicSessionMatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|CheckCoursesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|FreeTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|Preference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|RequestedCourse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|RequestedCourseStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|AdvisingStudentDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|AdvisorCourseRequestSubmission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|StudentInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|StudentStatusInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SpecialRegistrationInterface
operator|.
name|SpecialRegistrationContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
operator|.
name|ScheduledCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|i18n
operator|.
name|client
operator|.
name|DateTimeFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|i18n
operator|.
name|client
operator|.
name|NumberFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|resources
operator|.
name|client
operator|.
name|ImageResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|History
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|TakesValue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
operator|.
name|ClosingEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
operator|.
name|Location
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHorizontalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextArea
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|AdvisorCourseRequestsPage
extends|extends
name|SimpleForm
implements|implements
name|TakesValue
argument_list|<
name|CourseRequestInterface
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|SectioningServiceAsync
name|sSectioningService
init|=
name|GWT
operator|.
name|create
argument_list|(
name|SectioningService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StudentSectioningMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StudentSectioningResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StudentSectioningConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|DateTimeFormat
name|sDF
init|=
name|DateTimeFormat
operator|.
name|getFormat
argument_list|(
name|CONSTANTS
operator|.
name|requestDateFormat
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|UniTimeHeaderPanel
name|header
decl_stmt|,
name|footer
decl_stmt|;
specifier|private
name|Lookup
name|iLookupDialog
init|=
literal|null
decl_stmt|;
specifier|private
name|Label
name|iStudentName
decl_stmt|,
name|iStudentExternalId
decl_stmt|,
name|iTerm
decl_stmt|;
specifier|private
name|Label
name|iAdvisorEmail
init|=
literal|null
decl_stmt|;
specifier|private
name|AdvisorAcademicSessionSelector
name|iSession
init|=
literal|null
decl_stmt|;
specifier|private
name|SpecialRegistrationContext
name|iSpecRegCx
init|=
literal|null
decl_stmt|;
specifier|private
name|Label
name|iTotalCredit
init|=
literal|null
decl_stmt|;
specifier|private
name|ListBox
name|iStatus
init|=
literal|null
decl_stmt|;
specifier|private
name|TextArea
name|iNotes
init|=
literal|null
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|AdvisorCourseRequestLine
argument_list|>
name|iCourses
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|AdvisorCourseRequestLine
argument_list|>
name|iAlternatives
decl_stmt|;
specifier|private
name|AdvisingStudentDetails
name|iDetails
decl_stmt|;
specifier|private
name|DegreePlansSelectionDialog
name|iDegreePlansSelectionDialog
init|=
literal|null
decl_stmt|;
specifier|private
name|DegreePlanDialog
name|iDegreePlanDialog
init|=
literal|null
decl_stmt|;
specifier|private
name|AriaMultiButton
name|iDegreePlan
init|=
literal|null
decl_stmt|;
specifier|private
name|int
name|iStudentRequestHeaderLine
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|iAdisorRequestsHeaderLine
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|iStatusLine
init|=
literal|0
decl_stmt|;
specifier|private
name|ScheduleStatus
name|iStatusBox
init|=
literal|null
decl_stmt|;
specifier|private
name|WebTable
name|iRequests
decl_stmt|;
specifier|private
name|AdvisorCourseRequestsTable
name|iAdvisorRequests
decl_stmt|;
specifier|private
name|CheckBox
name|iEmailConfirmationHeader
decl_stmt|,
name|iEmailConfirmationFooter
decl_stmt|;
specifier|public
name|AdvisorCourseRequestsPage
parameter_list|()
block|{
name|super
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|UniTimePageHeader
operator|.
name|getInstance
argument_list|()
operator|.
name|getLeft
argument_list|()
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|UniTimePageHeader
operator|.
name|getInstance
argument_list|()
operator|.
name|getLeft
argument_list|()
operator|.
name|setPreventDefault
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
literal|"unitime-AdvisorCourseRequests"
argument_list|)
expr_stmt|;
name|header
operator|=
operator|new
name|UniTimeHeaderPanel
argument_list|()
expr_stmt|;
name|header
operator|.
name|addStyleName
argument_list|(
literal|"unitime-PageHeaderFooter"
argument_list|)
expr_stmt|;
name|header
operator|.
name|addButton
argument_list|(
literal|"lookup"
argument_list|,
name|MESSAGES
operator|.
name|buttonLookupStudent
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|isPageChanged
argument_list|()
condition|)
block|{
name|UniTimeConfirmationDialog
operator|.
name|confirm
argument_list|(
name|MESSAGES
operator|.
name|queryLeaveAdvisorsCourseRequestsNotSave
argument_list|()
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|lookupStudent
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|lookupStudent
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|header
operator|.
name|addButton
argument_list|(
literal|"print"
argument_list|,
name|MESSAGES
operator|.
name|buttonPrint
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|submit
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"print"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|header
operator|.
name|addButton
argument_list|(
literal|"submit"
argument_list|,
name|MESSAGES
operator|.
name|buttonSubmitPrint
argument_list|()
argument_list|,
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|submit
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"submit"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|addHeaderRow
argument_list|(
name|header
argument_list|)
expr_stmt|;
name|iStudentName
operator|=
operator|new
name|Label
argument_list|()
expr_stmt|;
name|iStudentName
operator|.
name|addStyleName
argument_list|(
literal|"student-name"
argument_list|)
expr_stmt|;
name|iStudentExternalId
operator|=
operator|new
name|Label
argument_list|()
expr_stmt|;
name|iStudentExternalId
operator|.
name|addStyleName
argument_list|(
literal|"student-id"
argument_list|)
expr_stmt|;
name|addDoubleRow
argument_list|(
name|MESSAGES
operator|.
name|propStudentName
argument_list|()
argument_list|,
name|iStudentName
argument_list|,
literal|1
argument_list|,
name|MESSAGES
operator|.
name|propStudentExternalId
argument_list|()
argument_list|,
name|iStudentExternalId
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|iSession
operator|=
operator|new
name|AdvisorAcademicSessionSelector
argument_list|()
expr_stmt|;
name|iAdvisorEmail
operator|=
operator|new
name|Label
argument_list|()
expr_stmt|;
name|iAdvisorEmail
operator|.
name|addStyleName
argument_list|(
literal|"advisor-email"
argument_list|)
expr_stmt|;
name|iTerm
operator|=
operator|new
name|Label
argument_list|()
expr_stmt|;
name|iTerm
operator|.
name|addStyleName
argument_list|(
literal|"term"
argument_list|)
expr_stmt|;
name|addDoubleRow
argument_list|(
name|MESSAGES
operator|.
name|propAdvisorEmail
argument_list|()
argument_list|,
name|iAdvisorEmail
argument_list|,
literal|1
argument_list|,
name|MESSAGES
operator|.
name|propAcademicSession
argument_list|()
argument_list|,
name|iTerm
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|iSession
operator|.
name|addAcademicSessionChangeHandler
argument_list|(
operator|new
name|AcademicSessionChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onAcademicSessionChange
parameter_list|(
name|AcademicSessionChangeEvent
name|event
parameter_list|)
block|{
name|iTerm
operator|.
name|setText
argument_list|(
name|iSession
operator|.
name|getAcademicSessionName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|iSession
operator|.
name|getAcademicSessionName
argument_list|()
argument_list|)
expr_stmt|;
name|iLookupDialog
operator|.
name|setOptions
argument_list|(
literal|"mustHaveExternalId,source=students,session="
operator|+
name|event
operator|.
name|getNewAcademicSessionId
argument_list|()
argument_list|)
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"submit"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"print"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iDegreePlan
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iDegreePlan
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iEmailConfirmationHeader
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iEmailConfirmationFooter
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iStatusBox
operator|.
name|clear
argument_list|()
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|loadingAdvisorRequests
argument_list|(
name|iStudentName
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|sSectioningService
operator|.
name|getStudentAdvisingDetails
argument_list|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|,
name|iStudentExternalId
operator|.
name|getText
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|AdvisingStudentDetails
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|AdvisingStudentDetails
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iDetails
operator|=
name|result
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"submit"
argument_list|,
name|result
operator|.
name|isCanUpdate
argument_list|()
argument_list|)
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"print"
argument_list|,
operator|!
name|result
operator|.
name|isCanUpdate
argument_list|()
argument_list|)
expr_stmt|;
name|iDegreePlan
operator|.
name|setVisible
argument_list|(
name|result
operator|.
name|isDegreePlan
argument_list|()
argument_list|)
expr_stmt|;
name|iDegreePlan
operator|.
name|setEnabled
argument_list|(
name|result
operator|.
name|isDegreePlan
argument_list|()
argument_list|)
expr_stmt|;
name|iEmailConfirmationHeader
operator|.
name|setVisible
argument_list|(
name|result
operator|.
name|isCanUpdate
argument_list|()
operator|&&
name|result
operator|.
name|isCanEmail
argument_list|()
argument_list|)
expr_stmt|;
name|iEmailConfirmationFooter
operator|.
name|setVisible
argument_list|(
name|result
operator|.
name|isCanUpdate
argument_list|()
operator|&&
name|result
operator|.
name|isCanEmail
argument_list|()
argument_list|)
expr_stmt|;
name|iAdvisorEmail
operator|.
name|setText
argument_list|(
name|result
operator|.
name|getAdvisorEmail
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|result
operator|.
name|getAdvisorEmail
argument_list|()
argument_list|)
expr_stmt|;
name|iStudentName
operator|.
name|setText
argument_list|(
name|result
operator|.
name|getStudentName
argument_list|()
argument_list|)
expr_stmt|;
name|iStudentExternalId
operator|.
name|setText
argument_list|(
name|result
operator|.
name|getStudentExternalId
argument_list|()
argument_list|)
expr_stmt|;
name|fillInStudentRequests
argument_list|()
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|isCanUpdate
argument_list|()
condition|)
block|{
name|clearAdvisorRequests
argument_list|()
expr_stmt|;
name|setRequest
argument_list|(
name|result
operator|.
name|getRequest
argument_list|()
argument_list|)
expr_stmt|;
name|iStatus
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|iStatus
operator|.
name|addItem
argument_list|(
name|result
operator|.
name|getStatus
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|,
name|result
operator|.
name|getStatus
argument_list|()
operator|.
name|getReference
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iStatus
operator|.
name|addItem
argument_list|(
literal|""
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
name|iStatus
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|hasStatuses
argument_list|()
condition|)
for|for
control|(
name|StudentStatusInfo
name|status
range|:
name|result
operator|.
name|getStatuses
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|status
operator|.
name|equals
argument_list|(
name|result
operator|.
name|getStatus
argument_list|()
argument_list|)
condition|)
name|iStatus
operator|.
name|addItem
argument_list|(
name|status
operator|.
name|getLabel
argument_list|()
argument_list|,
name|status
operator|.
name|getReference
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iStatusLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setAdvisorRequests
argument_list|(
name|result
operator|.
name|getRequest
argument_list|()
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iStatusLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|History
operator|.
name|newItem
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|result
operator|.
name|getStudentId
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iStatusBox
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|advisorRequestsLoadFailed
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iTerm
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iSession
operator|.
name|selectSession
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iStudentName
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|isPageChanged
argument_list|()
condition|)
block|{
name|UniTimeConfirmationDialog
operator|.
name|confirm
argument_list|(
name|MESSAGES
operator|.
name|queryLeaveAdvisorsCourseRequestsNotSave
argument_list|()
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|lookupStudent
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|lookupStudent
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iStudentExternalId
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|isPageChanged
argument_list|()
condition|)
block|{
name|UniTimeConfirmationDialog
operator|.
name|confirm
argument_list|(
name|MESSAGES
operator|.
name|queryLeaveAdvisorsCourseRequestsNotSave
argument_list|()
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|lookupStudent
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|lookupStudent
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iStatus
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
name|iStatus
operator|.
name|addStyleName
argument_list|(
literal|"status"
argument_list|)
expr_stmt|;
name|iStatusLine
operator|=
name|addDoubleRow
argument_list|(
literal|""
argument_list|,
operator|new
name|Label
argument_list|()
argument_list|,
literal|1
argument_list|,
name|MESSAGES
operator|.
name|propStudentStatus
argument_list|()
argument_list|,
name|iStatus
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|UniTimeHeaderPanel
name|studentReqs
init|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|studentCourseRequests
argument_list|()
argument_list|)
decl_stmt|;
name|iStudentRequestHeaderLine
operator|=
name|addHeaderRow
argument_list|(
name|studentReqs
argument_list|)
expr_stmt|;
name|iRequests
operator|=
operator|new
name|WebTable
argument_list|()
expr_stmt|;
name|iRequests
operator|.
name|setEmptyMessage
argument_list|(
name|MESSAGES
operator|.
name|emptyRequests
argument_list|()
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setHeader
argument_list|(
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colPriority
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"25px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCourse
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colTitle
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"200px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCredit
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"20px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colPreferences
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"100px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colWarnings
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"200px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colStatus
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"20px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCritical
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"20px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colWaitList
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"20px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colRequestTimeStamp
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"50px"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|iRequests
argument_list|)
expr_stmt|;
name|UniTimeHeaderPanel
name|advisorReqs
init|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|advisorCourseRequests
argument_list|()
argument_list|)
decl_stmt|;
name|iAdisorRequestsHeaderLine
operator|=
name|addHeaderRow
argument_list|(
name|advisorReqs
argument_list|)
expr_stmt|;
name|iAdvisorRequests
operator|=
operator|new
name|AdvisorCourseRequestsTable
argument_list|()
expr_stmt|;
name|addRow
argument_list|(
name|iAdvisorRequests
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iAdisorRequestsHeaderLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iAdisorRequestsHeaderLine
operator|+
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iSpecRegCx
operator|=
operator|new
name|SpecialRegistrationContext
argument_list|()
expr_stmt|;
name|iCourses
operator|=
operator|new
name|ArrayList
argument_list|<
name|AdvisorCourseRequestLine
argument_list|>
argument_list|()
expr_stmt|;
name|iAlternatives
operator|=
operator|new
name|ArrayList
argument_list|<
name|AdvisorCourseRequestLine
argument_list|>
argument_list|()
expr_stmt|;
name|UniTimeHeaderPanel
name|requests
init|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|advisorRequestsCourses
argument_list|()
argument_list|)
decl_stmt|;
name|requests
operator|.
name|setMessage
argument_list|(
name|MESSAGES
operator|.
name|headCreditHoursNotes
argument_list|()
argument_list|)
expr_stmt|;
name|requests
operator|.
name|addStyleName
argument_list|(
literal|"requests-header"
argument_list|)
expr_stmt|;
name|addHeaderRow
argument_list|(
name|requests
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|9
condition|;
name|i
operator|++
control|)
block|{
specifier|final
name|AdvisorCourseRequestLine
name|line
init|=
operator|new
name|AdvisorCourseRequestLine
argument_list|(
name|iSession
argument_list|,
name|i
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|,
name|iSpecRegCx
argument_list|)
decl_stmt|;
name|line
operator|.
name|insert
argument_list|(
name|this
argument_list|,
name|getRowCount
argument_list|()
argument_list|)
expr_stmt|;
name|iCourses
operator|.
name|add
argument_list|(
name|line
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|>
literal|0
condition|)
block|{
name|AdvisorCourseRequestLine
name|prev
init|=
name|iCourses
operator|.
name|get
argument_list|(
name|i
operator|-
literal|1
argument_list|)
decl_stmt|;
name|line
operator|.
name|setPrevious
argument_list|(
name|prev
argument_list|)
expr_stmt|;
name|prev
operator|.
name|setNext
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
name|line
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|CourseRequestInterface
operator|.
name|Request
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Request
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
operator|&&
name|iCourses
operator|.
name|indexOf
argument_list|(
name|line
argument_list|)
operator|+
literal|1
operator|==
name|iCourses
operator|.
name|size
argument_list|()
condition|)
name|addCourseLine
argument_list|()
expr_stmt|;
name|updateTotalCredits
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|Label
name|l
init|=
operator|new
name|Label
argument_list|(
name|MESSAGES
operator|.
name|labelTotalPriorityCreditHours
argument_list|()
argument_list|)
decl_stmt|;
name|l
operator|.
name|addStyleName
argument_list|(
literal|"total-credit-label"
argument_list|)
expr_stmt|;
name|int
name|row
init|=
name|getRowCount
argument_list|()
decl_stmt|;
name|setWidget
argument_list|(
name|row
argument_list|,
literal|0
argument_list|,
name|l
argument_list|)
expr_stmt|;
name|getFlexCellFormatter
argument_list|()
operator|.
name|setColSpan
argument_list|(
name|row
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|iTotalCredit
operator|=
operator|new
name|Label
argument_list|(
name|MESSAGES
operator|.
name|credit
argument_list|(
literal|0f
argument_list|)
argument_list|)
expr_stmt|;
name|iTotalCredit
operator|.
name|addStyleName
argument_list|(
literal|"total-credit-value"
argument_list|)
expr_stmt|;
name|setWidget
argument_list|(
name|row
argument_list|,
literal|1
argument_list|,
name|iTotalCredit
argument_list|)
expr_stmt|;
name|UniTimeHeaderPanel
name|alternatives
init|=
operator|new
name|UniTimeHeaderPanel
argument_list|(
name|MESSAGES
operator|.
name|advisorRequestsAlternatives
argument_list|()
argument_list|)
decl_stmt|;
name|alternatives
operator|.
name|setMessage
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsAlternativesNote
argument_list|()
argument_list|)
expr_stmt|;
name|addHeaderRow
argument_list|(
name|alternatives
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
name|i
operator|++
control|)
block|{
specifier|final
name|AdvisorCourseRequestLine
name|line
init|=
operator|new
name|AdvisorCourseRequestLine
argument_list|(
name|iSession
argument_list|,
name|i
argument_list|,
literal|true
argument_list|,
literal|null
argument_list|,
name|iSpecRegCx
argument_list|)
decl_stmt|;
name|line
operator|.
name|insert
argument_list|(
name|this
argument_list|,
name|getRowCount
argument_list|()
argument_list|)
expr_stmt|;
name|iAlternatives
operator|.
name|add
argument_list|(
name|line
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|==
literal|0
condition|)
block|{
name|AdvisorCourseRequestLine
name|prev
init|=
name|iCourses
operator|.
name|get
argument_list|(
name|iCourses
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
name|line
operator|.
name|setPrevious
argument_list|(
name|prev
argument_list|)
expr_stmt|;
name|prev
operator|.
name|setNext
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|AdvisorCourseRequestLine
name|prev
init|=
name|iAlternatives
operator|.
name|get
argument_list|(
name|i
operator|-
literal|1
argument_list|)
decl_stmt|;
name|line
operator|.
name|setPrevious
argument_list|(
name|prev
argument_list|)
expr_stmt|;
name|prev
operator|.
name|setNext
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
name|line
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|CourseRequestInterface
operator|.
name|Request
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Request
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
operator|&&
name|iAlternatives
operator|.
name|indexOf
argument_list|(
name|line
argument_list|)
operator|+
literal|1
operator|==
name|iAlternatives
operator|.
name|size
argument_list|()
condition|)
name|addAlternativeLine
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|iCourses
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getCourses
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|setHint
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsHint1
argument_list|()
argument_list|)
expr_stmt|;
name|iCourses
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getCourses
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|setHint
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsHint3
argument_list|()
argument_list|)
expr_stmt|;
name|iCourses
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|getCourses
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|setHint
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsHint4
argument_list|()
argument_list|)
expr_stmt|;
name|iCourses
operator|.
name|get
argument_list|(
name|iCourses
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
operator|.
name|getCourses
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|setHint
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsHint8
argument_list|()
argument_list|)
expr_stmt|;
name|iAlternatives
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getCourses
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|setHint
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsHintA0
argument_list|()
argument_list|)
expr_stmt|;
name|iNotes
operator|=
operator|new
name|TextArea
argument_list|()
expr_stmt|;
name|iNotes
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|iNotes
operator|.
name|addStyleName
argument_list|(
literal|"advisor-notes"
argument_list|)
expr_stmt|;
name|iNotes
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|int
name|notesRow
init|=
name|addRow
argument_list|(
name|MESSAGES
operator|.
name|propAdvisorNotes
argument_list|()
argument_list|,
name|iNotes
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getCellCount
argument_list|(
name|notesRow
argument_list|)
condition|;
name|i
operator|++
control|)
name|getCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|notesRow
argument_list|,
name|i
argument_list|,
literal|"advisor-notes-line"
argument_list|)
expr_stmt|;
specifier|final
name|Timer
name|timer
init|=
operator|new
name|Timer
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|resizeNotes
argument_list|()
expr_stmt|;
block|}
block|}
decl_stmt|;
name|iNotes
operator|.
name|addKeyPressHandler
argument_list|(
operator|new
name|KeyPressHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
name|KeyPressEvent
name|event
parameter_list|)
block|{
name|timer
operator|.
name|schedule
argument_list|(
literal|10
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iNotes
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|timer
operator|.
name|schedule
argument_list|(
literal|10
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|footer
operator|=
name|header
operator|.
name|clonePanel
argument_list|()
expr_stmt|;
name|footer
operator|.
name|addStyleName
argument_list|(
literal|"unitime-PageHeaderFooter"
argument_list|)
expr_stmt|;
name|addBottomRow
argument_list|(
name|footer
argument_list|)
expr_stmt|;
name|iEmailConfirmationHeader
operator|=
operator|new
name|CheckBox
argument_list|(
name|MESSAGES
operator|.
name|checkSendEmailConfirmation
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iEmailConfirmationHeader
operator|.
name|addStyleName
argument_list|(
literal|"toggle"
argument_list|)
expr_stmt|;
name|header
operator|.
name|insertRight
argument_list|(
name|iEmailConfirmationHeader
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iEmailConfirmationHeader
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iEmailConfirmationFooter
operator|=
operator|new
name|CheckBox
argument_list|(
name|MESSAGES
operator|.
name|checkSendEmailConfirmation
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iEmailConfirmationFooter
operator|.
name|addStyleName
argument_list|(
literal|"toggle"
argument_list|)
expr_stmt|;
name|footer
operator|.
name|insertRight
argument_list|(
name|iEmailConfirmationFooter
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iEmailConfirmationFooter
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iEmailConfirmationHeader
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
name|iEmailConfirmationFooter
operator|.
name|setValue
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|SectioningStatusCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|setAdvisorRequestsEmailStudent
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iEmailConfirmationFooter
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
name|iEmailConfirmationHeader
operator|.
name|setValue
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|SectioningStatusCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|setAdvisorRequestsEmailStudent
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iEmailConfirmationHeader
operator|.
name|setValue
argument_list|(
name|SectioningStatusCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|isAdvisorRequestsEmailStudent
argument_list|()
argument_list|)
expr_stmt|;
name|iEmailConfirmationFooter
operator|.
name|setValue
argument_list|(
name|iEmailConfirmationHeader
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|iStatusBox
operator|=
operator|new
name|ScheduleStatus
argument_list|()
expr_stmt|;
name|addRow
argument_list|(
name|iStatusBox
argument_list|)
expr_stmt|;
name|iDegreePlan
operator|=
operator|new
name|AriaMultiButton
argument_list|(
name|MESSAGES
operator|.
name|buttonDegreePlan
argument_list|()
argument_list|)
expr_stmt|;
name|iDegreePlan
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|hintDegreePlan
argument_list|()
argument_list|)
expr_stmt|;
name|iDegreePlan
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iDegreePlan
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|header
operator|.
name|insertLeft
argument_list|(
name|iDegreePlan
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|footer
operator|.
name|insertLeft
argument_list|(
name|iDegreePlan
operator|.
name|createClone
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Window
operator|.
name|addWindowClosingHandler
argument_list|(
operator|new
name|Window
operator|.
name|ClosingHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onWindowClosing
parameter_list|(
name|ClosingEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|isPageChanged
argument_list|()
condition|)
block|{
if|if
condition|(
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|isShowing
argument_list|()
condition|)
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|event
operator|.
name|setMessage
argument_list|(
name|MESSAGES
operator|.
name|queryLeaveAdvisorsCourseRequestsNotSave
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iLookupDialog
operator|=
operator|new
name|Lookup
argument_list|()
expr_stmt|;
name|iLookupDialog
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|dialogStudentLookup
argument_list|()
argument_list|)
expr_stmt|;
name|iLookupDialog
operator|.
name|setOptions
argument_list|(
literal|"mustHaveExternalId,source=students"
argument_list|)
expr_stmt|;
name|iLookupDialog
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|PersonInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|PersonInterface
argument_list|>
name|event
parameter_list|)
block|{
name|studentSelected
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|Location
operator|.
name|getParameter
argument_list|(
literal|"student"
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|iStudentExternalId
operator|.
name|setText
argument_list|(
name|Location
operator|.
name|getParameter
argument_list|(
literal|"student"
argument_list|)
argument_list|)
expr_stmt|;
name|iSession
operator|.
name|selectSession
argument_list|(
operator|new
name|AcademicSessionMatcher
argument_list|()
block|{
specifier|protected
name|boolean
name|matchCampus
parameter_list|(
name|AcademicSessionInfo
name|info
parameter_list|,
name|String
name|campus
parameter_list|)
block|{
if|if
condition|(
name|info
operator|.
name|hasExternalCampus
argument_list|()
operator|&&
name|campus
operator|.
name|equalsIgnoreCase
argument_list|(
name|info
operator|.
name|getExternalCampus
argument_list|()
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
name|campus
operator|.
name|equalsIgnoreCase
argument_list|(
name|info
operator|.
name|getCampus
argument_list|()
argument_list|)
return|;
block|}
specifier|protected
name|boolean
name|matchTerm
parameter_list|(
name|AcademicSessionInfo
name|info
parameter_list|,
name|String
name|term
parameter_list|)
block|{
if|if
condition|(
name|info
operator|.
name|hasExternalTerm
argument_list|()
operator|&&
name|term
operator|.
name|equalsIgnoreCase
argument_list|(
name|info
operator|.
name|getExternalTerm
argument_list|()
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
name|term
operator|.
name|equalsIgnoreCase
argument_list|(
name|info
operator|.
name|getTerm
argument_list|()
operator|+
name|info
operator|.
name|getYear
argument_list|()
argument_list|)
operator|||
name|term
operator|.
name|equalsIgnoreCase
argument_list|(
name|info
operator|.
name|getYear
argument_list|()
operator|+
name|info
operator|.
name|getTerm
argument_list|()
argument_list|)
operator|||
name|term
operator|.
name|equalsIgnoreCase
argument_list|(
name|info
operator|.
name|getTerm
argument_list|()
operator|+
name|info
operator|.
name|getYear
argument_list|()
operator|+
name|info
operator|.
name|getCampus
argument_list|()
argument_list|)
return|;
block|}
specifier|protected
name|boolean
name|matchSession
parameter_list|(
name|AcademicSessionInfo
name|info
parameter_list|,
name|String
name|session
parameter_list|)
block|{
if|if
condition|(
name|info
operator|.
name|hasExternalTerm
argument_list|()
operator|&&
name|info
operator|.
name|hasExternalCampus
argument_list|()
operator|&&
name|session
operator|.
name|equalsIgnoreCase
argument_list|(
name|info
operator|.
name|getExternalTerm
argument_list|()
operator|+
name|info
operator|.
name|hasExternalCampus
argument_list|()
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
name|session
operator|.
name|equalsIgnoreCase
argument_list|(
name|info
operator|.
name|getTerm
argument_list|()
operator|+
name|info
operator|.
name|getYear
argument_list|()
operator|+
name|info
operator|.
name|getCampus
argument_list|()
argument_list|)
operator|||
name|session
operator|.
name|equalsIgnoreCase
argument_list|(
name|info
operator|.
name|getTerm
argument_list|()
operator|+
name|info
operator|.
name|getYear
argument_list|()
argument_list|)
operator|||
name|session
operator|.
name|equals
argument_list|(
name|info
operator|.
name|getSessionId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|match
parameter_list|(
name|AcademicSessionInfo
name|info
parameter_list|)
block|{
name|String
name|campus
init|=
name|Location
operator|.
name|getParameter
argument_list|(
literal|"campus"
argument_list|)
decl_stmt|;
if|if
condition|(
name|campus
operator|!=
literal|null
operator|&&
operator|!
name|matchCampus
argument_list|(
name|info
argument_list|,
name|campus
argument_list|)
condition|)
return|return
literal|false
return|;
name|String
name|term
init|=
name|Location
operator|.
name|getParameter
argument_list|(
literal|"term"
argument_list|)
decl_stmt|;
if|if
condition|(
name|term
operator|!=
literal|null
operator|&&
operator|!
name|matchTerm
argument_list|(
name|info
argument_list|,
name|term
argument_list|)
condition|)
return|return
literal|false
return|;
name|String
name|session
init|=
name|Location
operator|.
name|getParameter
argument_list|(
literal|"session"
argument_list|)
decl_stmt|;
if|if
condition|(
name|session
operator|!=
literal|null
operator|&&
operator|!
name|matchSession
argument_list|(
name|info
argument_list|,
name|session
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
block|}
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
block|}
block|}
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|Window
operator|.
name|Location
operator|.
name|getHash
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|Window
operator|.
name|Location
operator|.
name|getHash
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|loadStudent
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getHash
argument_list|()
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|lookupStudent
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|iDegreePlan
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|waitListDegreePlans
argument_list|()
argument_list|)
expr_stmt|;
name|sSectioningService
operator|.
name|listDegreePlans
argument_list|(
literal|true
argument_list|,
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|,
name|iDetails
operator|.
name|getStudentId
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|DegreePlanInterface
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
if|if
condition|(
name|caught
operator|instanceof
name|SectioningException
condition|)
block|{
name|SectioningException
name|s
init|=
operator|(
name|SectioningException
operator|)
name|caught
decl_stmt|;
if|if
condition|(
name|s
operator|.
name|isInfo
argument_list|()
condition|)
name|iStatusBox
operator|.
name|info
argument_list|(
name|s
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
if|else if
condition|(
name|s
operator|.
name|isWarning
argument_list|()
condition|)
name|iStatusBox
operator|.
name|warning
argument_list|(
name|s
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
if|else if
condition|(
name|s
operator|.
name|isError
argument_list|()
condition|)
name|iStatusBox
operator|.
name|error
argument_list|(
name|s
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|iStatusBox
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedListDegreePlans
argument_list|(
name|s
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iStatusBox
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedListDegreePlans
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|List
argument_list|<
name|DegreePlanInterface
argument_list|>
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
if|if
condition|(
name|result
operator|==
literal|null
operator|||
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iStatusBox
operator|.
name|info
argument_list|(
name|MESSAGES
operator|.
name|failedNoDegreePlans
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|CourseFinderDetails
name|details
init|=
operator|new
name|CourseFinderDetails
argument_list|()
decl_stmt|;
name|details
operator|.
name|setDataProvider
argument_list|(
operator|new
name|DataProvider
argument_list|<
name|CourseAssignment
argument_list|,
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|getData
parameter_list|(
name|CourseAssignment
name|source
parameter_list|,
name|AsyncCallback
argument_list|<
name|String
argument_list|>
name|callback
parameter_list|)
block|{
name|sSectioningService
operator|.
name|retrieveCourseDetails
argument_list|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|,
name|source
operator|.
name|hasUniqueName
argument_list|()
condition|?
name|source
operator|.
name|getCourseName
argument_list|()
else|:
name|source
operator|.
name|getCourseNameWithTitle
argument_list|()
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|CourseFinderClasses
name|classes
init|=
operator|new
name|CourseFinderClasses
argument_list|(
literal|false
argument_list|,
name|iSpecRegCx
argument_list|)
decl_stmt|;
name|classes
operator|.
name|setDataProvider
argument_list|(
operator|new
name|DataProvider
argument_list|<
name|CourseAssignment
argument_list|,
name|Collection
argument_list|<
name|ClassAssignment
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|getData
parameter_list|(
name|CourseAssignment
name|source
parameter_list|,
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|ClassAssignment
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
name|sSectioningService
operator|.
name|listClasses
argument_list|(
literal|true
argument_list|,
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|,
name|source
operator|.
name|hasUniqueName
argument_list|()
condition|?
name|source
operator|.
name|getCourseName
argument_list|()
else|:
name|source
operator|.
name|getCourseNameWithTitle
argument_list|()
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|iDegreePlanDialog
operator|==
literal|null
condition|)
block|{
name|iDegreePlanDialog
operator|=
operator|new
name|DegreePlanDialog
argument_list|(
name|StudentSectioningPage
operator|.
name|Mode
operator|.
name|REQUESTS
argument_list|,
name|AdvisorCourseRequestsPage
operator|.
name|this
argument_list|,
literal|null
argument_list|,
name|details
argument_list|,
name|classes
argument_list|)
block|{
specifier|protected
name|void
name|doBack
parameter_list|()
block|{
name|super
operator|.
name|doBack
argument_list|()
expr_stmt|;
name|iDegreePlansSelectionDialog
operator|.
name|show
argument_list|()
expr_stmt|;
block|}
block|}
expr_stmt|;
block|}
if|if
condition|(
name|iDegreePlansSelectionDialog
operator|==
literal|null
condition|)
block|{
name|iDegreePlansSelectionDialog
operator|=
operator|new
name|DegreePlansSelectionDialog
argument_list|()
block|{
specifier|public
name|void
name|doSubmit
parameter_list|(
name|DegreePlanInterface
name|plan
parameter_list|)
block|{
name|super
operator|.
name|doSubmit
argument_list|(
name|plan
argument_list|)
expr_stmt|;
name|iDegreePlanDialog
operator|.
name|open
argument_list|(
name|plan
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
block|}
if|if
condition|(
name|result
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
name|iDegreePlanDialog
operator|.
name|open
argument_list|(
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
else|else
name|iDegreePlansSelectionDialog
operator|.
name|open
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|History
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
specifier|final
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|isPageChanged
argument_list|()
condition|)
block|{
name|UniTimeConfirmationDialog
operator|.
name|confirm
argument_list|(
name|MESSAGES
operator|.
name|queryLeaveAdvisorsCourseRequestsNotSave
argument_list|()
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|loadStudent
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|loadStudent
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|loadStudent
parameter_list|(
name|String
name|studentId
parameter_list|)
block|{
name|header
operator|.
name|setEnabled
argument_list|(
literal|"submit"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"print"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iDegreePlan
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iDegreePlan
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iEmailConfirmationHeader
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iEmailConfirmationFooter
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iStatusBox
operator|.
name|clear
argument_list|()
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|loadingData
argument_list|()
argument_list|)
expr_stmt|;
name|sSectioningService
operator|.
name|getStudentInfo
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|studentId
argument_list|)
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|StudentInfo
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|StudentInfo
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iTerm
operator|.
name|setText
argument_list|(
name|result
operator|.
name|getSessionName
argument_list|()
argument_list|)
expr_stmt|;
name|iLookupDialog
operator|.
name|setOptions
argument_list|(
literal|"mustHaveExternalId,source=students,session="
operator|+
name|result
operator|.
name|getSessionId
argument_list|()
argument_list|)
expr_stmt|;
name|iStudentName
operator|.
name|setText
argument_list|(
name|result
operator|.
name|getStudentName
argument_list|()
argument_list|)
expr_stmt|;
name|iStudentExternalId
operator|.
name|setText
argument_list|(
name|result
operator|.
name|getStudentExternalId
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|getSessionId
argument_list|()
operator|.
name|equals
argument_list|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|)
condition|)
block|{
name|iSession
operator|.
name|selectSession
argument_list|(
name|iSession
operator|.
name|getAcademicSessionInfo
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iSession
operator|.
name|selectSession
argument_list|(
name|result
operator|.
name|getSessionId
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iStatusBox
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|advisorRequestsLoadFailed
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|resizeNotes
parameter_list|()
block|{
name|iNotes
operator|.
name|setHeight
argument_list|(
literal|"50px"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|iNotes
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iNotes
operator|.
name|setHeight
argument_list|(
name|Math
operator|.
name|max
argument_list|(
literal|50
argument_list|,
name|iNotes
operator|.
name|getElement
argument_list|()
operator|.
name|getScrollHeight
argument_list|()
argument_list|)
operator|+
literal|"px"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|updateTotalCredits
parameter_list|()
block|{
name|float
name|min
init|=
literal|0
decl_stmt|,
name|max
init|=
literal|0
decl_stmt|;
for|for
control|(
name|AdvisorCourseRequestLine
name|line
range|:
name|iCourses
control|)
block|{
name|min
operator|+=
name|line
operator|.
name|getCreditMin
argument_list|()
expr_stmt|;
name|max
operator|+=
name|line
operator|.
name|getCreditMax
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|min
operator|<
name|max
condition|)
name|iTotalCredit
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|creditRange
argument_list|(
name|min
argument_list|,
name|max
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|iTotalCredit
operator|.
name|setText
argument_list|(
name|MESSAGES
operator|.
name|credit
argument_list|(
name|min
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|clearRequests
parameter_list|()
block|{
for|for
control|(
name|AdvisorCourseRequestLine
name|line
range|:
name|iCourses
control|)
name|line
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
for|for
control|(
name|AdvisorCourseRequestLine
name|line
range|:
name|iAlternatives
control|)
name|line
operator|.
name|setValue
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|iStatusBox
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iNotes
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|resizeNotes
argument_list|()
expr_stmt|;
name|updateTotalCredits
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|addCourseLine
parameter_list|()
block|{
name|int
name|i
init|=
name|iCourses
operator|.
name|size
argument_list|()
decl_stmt|;
specifier|final
name|AdvisorCourseRequestLine
name|line
init|=
operator|new
name|AdvisorCourseRequestLine
argument_list|(
name|iSession
argument_list|,
name|i
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|,
name|iSpecRegCx
argument_list|)
decl_stmt|;
name|iCourses
operator|.
name|add
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|AdvisorCourseRequestLine
name|prev
init|=
name|iCourses
operator|.
name|get
argument_list|(
name|i
operator|-
literal|1
argument_list|)
decl_stmt|;
name|prev
operator|.
name|getCourses
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|setHint
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|line
operator|.
name|getCourses
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|setHint
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsHint8
argument_list|()
argument_list|)
expr_stmt|;
name|AdvisorCourseRequestLine
name|next
init|=
operator|(
name|iAlternatives
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
name|iAlternatives
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
decl_stmt|;
name|line
operator|.
name|setPrevious
argument_list|(
name|prev
argument_list|)
expr_stmt|;
name|prev
operator|.
name|setNext
argument_list|(
name|line
argument_list|)
expr_stmt|;
if|if
condition|(
name|next
operator|!=
literal|null
condition|)
block|{
name|line
operator|.
name|setNext
argument_list|(
name|next
argument_list|)
expr_stmt|;
name|next
operator|.
name|setPrevious
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
name|line
operator|.
name|insert
argument_list|(
name|this
argument_list|,
name|insertRow
argument_list|(
literal|8
operator|+
name|iCourses
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|CourseRequestInterface
operator|.
name|Request
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Request
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
operator|&&
name|iCourses
operator|.
name|indexOf
argument_list|(
name|line
argument_list|)
operator|+
literal|1
operator|==
name|iCourses
operator|.
name|size
argument_list|()
condition|)
name|addCourseLine
argument_list|()
expr_stmt|;
name|updateTotalCredits
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|addAlternativeLine
parameter_list|()
block|{
name|int
name|i
init|=
name|iAlternatives
operator|.
name|size
argument_list|()
decl_stmt|;
specifier|final
name|AdvisorCourseRequestLine
name|line
init|=
operator|new
name|AdvisorCourseRequestLine
argument_list|(
name|iSession
argument_list|,
name|i
argument_list|,
literal|true
argument_list|,
literal|null
argument_list|,
name|iSpecRegCx
argument_list|)
decl_stmt|;
name|iAlternatives
operator|.
name|add
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|AdvisorCourseRequestLine
name|prev
init|=
operator|(
name|i
operator|==
literal|0
condition|?
name|iCourses
operator|.
name|get
argument_list|(
name|iCourses
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
else|:
name|iAlternatives
operator|.
name|get
argument_list|(
name|i
operator|-
literal|1
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|prev
operator|!=
literal|null
condition|)
block|{
name|line
operator|.
name|setPrevious
argument_list|(
name|prev
argument_list|)
expr_stmt|;
name|prev
operator|.
name|setNext
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
name|line
operator|.
name|insert
argument_list|(
name|this
argument_list|,
name|insertRow
argument_list|(
literal|8
operator|+
name|iCourses
operator|.
name|size
argument_list|()
operator|+
literal|2
operator|+
name|iAlternatives
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|line
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|CourseRequestInterface
operator|.
name|Request
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Request
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
operator|&&
name|iAlternatives
operator|.
name|indexOf
argument_list|(
name|line
argument_list|)
operator|+
literal|1
operator|==
name|iAlternatives
operator|.
name|size
argument_list|()
condition|)
name|addAlternativeLine
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|boolean
name|isPageChanged
parameter_list|()
block|{
if|if
condition|(
name|iDetails
operator|!=
literal|null
operator|&&
operator|!
name|iDetails
operator|.
name|isCanUpdate
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|iDetails
operator|==
literal|null
operator|||
name|iDetails
operator|.
name|getRequest
argument_list|()
operator|==
literal|null
condition|)
return|return
operator|!
name|getRequest
argument_list|()
operator|.
name|isEmpty
argument_list|()
return|;
else|else
block|{
return|return
operator|!
name|iDetails
operator|.
name|getRequest
argument_list|()
operator|.
name|equals
argument_list|(
name|getRequest
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|protected
name|void
name|lookupStudent
parameter_list|()
block|{
name|iLookupDialog
operator|.
name|center
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|studentSelected
parameter_list|(
name|PersonInterface
name|person
parameter_list|)
block|{
if|if
condition|(
name|person
operator|==
literal|null
operator|||
name|person
operator|.
name|getId
argument_list|()
operator|==
literal|null
operator|||
name|person
operator|.
name|getId
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iStudentName
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iStudentExternalId
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iTerm
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"submit"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"print"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iDegreePlan
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iDegreePlan
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iEmailConfirmationHeader
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iEmailConfirmationFooter
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|clearRequests
argument_list|()
expr_stmt|;
name|clearStudentRequests
argument_list|()
expr_stmt|;
name|clearAdvisorRequests
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|iStudentName
operator|.
name|setText
argument_list|(
name|person
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|iStudentExternalId
operator|.
name|setText
argument_list|(
name|person
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|clearRequests
argument_list|()
expr_stmt|;
name|iSession
operator|.
name|selectSessionNoCheck
argument_list|()
expr_stmt|;
name|clearStudentRequests
argument_list|()
expr_stmt|;
name|clearAdvisorRequests
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
class|class
name|AdvisorAcademicSessionSelector
extends|extends
name|AcademicSessionSelector
block|{
specifier|public
name|AdvisorAcademicSessionSelector
parameter_list|()
block|{
name|super
argument_list|(
name|UniTimePageHeader
operator|.
name|getInstance
argument_list|()
operator|.
name|getRight
argument_list|()
argument_list|,
name|StudentSectioningPage
operator|.
name|Mode
operator|.
name|REQUESTS
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|selectSession
parameter_list|()
block|{
if|if
condition|(
name|isPageChanged
argument_list|()
condition|)
block|{
name|UniTimeConfirmationDialog
operator|.
name|confirm
argument_list|(
name|MESSAGES
operator|.
name|queryLeaveAdvisorsCourseRequestsNotSave
argument_list|()
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|selectSessionNoCheck
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|selectSessionNoCheck
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|listAcademicSessions
parameter_list|(
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|AcademicSessionInfo
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
name|sSectioningService
operator|.
name|getStudentSessions
argument_list|(
name|iStudentExternalId
operator|.
name|getText
argument_list|()
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|selectSessionNoCheck
parameter_list|()
block|{
name|header
operator|.
name|setEnabled
argument_list|(
literal|"submit"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|header
operator|.
name|setEnabled
argument_list|(
literal|"print"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iDegreePlan
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iDegreePlan
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iEmailConfirmationHeader
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iEmailConfirmationFooter
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|super
operator|.
name|selectSession
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|fillInCourses
parameter_list|(
name|CourseRequestInterface
name|cr
parameter_list|)
block|{
for|for
control|(
name|AdvisorCourseRequestLine
name|line
range|:
name|iCourses
control|)
block|{
name|CourseRequestInterface
operator|.
name|Request
name|req
init|=
name|line
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|req
operator|!=
literal|null
condition|)
name|cr
operator|.
name|getCourses
argument_list|()
operator|.
name|add
argument_list|(
name|req
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|fillInAlternatives
parameter_list|(
name|CourseRequestInterface
name|cr
parameter_list|)
block|{
for|for
control|(
name|AdvisorCourseRequestLine
name|line
range|:
name|iAlternatives
control|)
block|{
name|CourseRequestInterface
operator|.
name|Request
name|req
init|=
name|line
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|req
operator|!=
literal|null
condition|)
name|cr
operator|.
name|getAlternatives
argument_list|()
operator|.
name|add
argument_list|(
name|req
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|CourseRequestInterface
name|getRequest
parameter_list|()
block|{
name|CourseRequestInterface
name|cr
init|=
operator|new
name|CourseRequestInterface
argument_list|()
decl_stmt|;
name|cr
operator|.
name|setAcademicSessionId
argument_list|(
name|iSession
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|)
expr_stmt|;
name|fillInCourses
argument_list|(
name|cr
argument_list|)
expr_stmt|;
name|fillInAlternatives
argument_list|(
name|cr
argument_list|)
expr_stmt|;
name|cr
operator|.
name|setCreditNote
argument_list|(
name|iNotes
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|cr
return|;
block|}
specifier|public
name|void
name|setRequest
parameter_list|(
name|CourseRequestInterface
name|request
parameter_list|)
block|{
name|clearRequests
argument_list|()
expr_stmt|;
if|if
condition|(
name|request
operator|!=
literal|null
condition|)
block|{
while|while
condition|(
name|iCourses
operator|.
name|size
argument_list|()
operator|<
name|request
operator|.
name|getCourses
argument_list|()
operator|.
name|size
argument_list|()
condition|)
name|addCourseLine
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
name|request
operator|.
name|getCourses
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|idx
operator|++
control|)
name|iCourses
operator|.
name|get
argument_list|(
name|idx
argument_list|)
operator|.
name|setValue
argument_list|(
name|request
operator|.
name|getCourses
argument_list|()
operator|.
name|get
argument_list|(
name|idx
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
while|while
condition|(
name|iAlternatives
operator|.
name|size
argument_list|()
operator|<
name|request
operator|.
name|getAlternatives
argument_list|()
operator|.
name|size
argument_list|()
condition|)
name|addAlternativeLine
argument_list|()
expr_stmt|;
empty_stmt|;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
name|request
operator|.
name|getAlternatives
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|idx
operator|++
control|)
name|iAlternatives
operator|.
name|get
argument_list|(
name|idx
argument_list|)
operator|.
name|setValue
argument_list|(
name|request
operator|.
name|getAlternatives
argument_list|()
operator|.
name|get
argument_list|(
name|idx
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|hasCreditNote
argument_list|()
condition|)
block|{
name|iNotes
operator|.
name|setText
argument_list|(
name|request
operator|.
name|getCreditNote
argument_list|()
argument_list|)
expr_stmt|;
name|resizeNotes
argument_list|()
expr_stmt|;
block|}
block|}
name|updateTotalCredits
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
specifier|final
specifier|native
name|String
name|download
parameter_list|(
name|byte
index|[]
name|bytes
parameter_list|,
name|String
name|name
parameter_list|)
comment|/*-{ 		var data = new Uint8Array(bytes); 		var blob = new Blob([data], {type: "application/pdf"}); 		if ($wnd.navigator&& $wnd.navigator.msSaveOrOpenBlob) { 			$wnd.navigator.msSaveOrOpenBlob(blob, name + ".pdf"); 		} else { 			var link = $doc.createElement("a"); 			link.href = $wnd.URL.createObjectURL(blob); 			link.download = name + ".pdf"; 			link.target = "_blank"; 			$doc.body.appendChild(link); 			link.click(); 			$doc.body.removeChild(link); 			$wnd.URL.revokeObjectURL(link.href); 		} 	}-*/
function_decl|;
specifier|protected
name|void
name|submit
parameter_list|()
block|{
specifier|final
name|AdvisingStudentDetails
name|details
init|=
operator|new
name|AdvisingStudentDetails
argument_list|(
name|iDetails
argument_list|)
decl_stmt|;
name|details
operator|.
name|setRequest
argument_list|(
name|details
operator|.
name|isCanUpdate
argument_list|()
condition|?
name|getRequest
argument_list|()
else|:
name|iAdvisorRequests
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|details
operator|.
name|setStatus
argument_list|(
name|iDetails
operator|.
name|getStatus
argument_list|(
name|iStatus
operator|.
name|getSelectedValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|details
operator|.
name|isCanUpdate
argument_list|()
condition|?
name|MESSAGES
operator|.
name|advisorCourseRequestsSaving
argument_list|()
else|:
name|MESSAGES
operator|.
name|advisorCourseRequestsExporting
argument_list|()
argument_list|)
expr_stmt|;
name|sSectioningService
operator|.
name|submitAdvisingDetails
argument_list|(
name|details
argument_list|,
literal|false
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|AdvisorCourseRequestSubmission
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|AdvisorCourseRequestSubmission
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iDetails
operator|=
name|details
expr_stmt|;
name|download
argument_list|(
name|result
operator|.
name|getPdf
argument_list|()
argument_list|,
name|result
operator|.
name|hasName
argument_list|()
condition|?
name|result
operator|.
name|getName
argument_list|()
else|:
literal|"crf-"
operator|+
name|iTerm
operator|.
name|getText
argument_list|()
operator|+
literal|"-"
operator|+
name|iStudentName
operator|.
name|getText
argument_list|()
operator|+
literal|"-"
operator|+
name|iStudentExternalId
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|isUpdated
argument_list|()
condition|)
block|{
name|iStatusBox
operator|.
name|info
argument_list|(
name|MESSAGES
operator|.
name|advisorRequestsSubmitOK
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|isSendEmailConformation
argument_list|()
condition|)
block|{
specifier|final
name|StudentStatusDialog
name|dialog
init|=
operator|new
name|StudentStatusDialog
argument_list|(
operator|new
name|HashSet
argument_list|<
name|StudentStatusInfo
argument_list|>
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|setCC
argument_list|(
name|iDetails
operator|.
name|hasAdvisorEmail
argument_list|()
condition|?
name|iDetails
operator|.
name|getAdvisorEmail
argument_list|()
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|", "
argument_list|)
else|:
literal|""
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|setSubject
argument_list|(
name|MESSAGES
operator|.
name|defaulSubjectAdvisorRequests
argument_list|()
operator|.
name|replace
argument_list|(
literal|"%session%"
argument_list|,
name|iTerm
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|setIncludeAdvisorRequests
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|setIncludeClassSchedule
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|setIncludeCourseRequests
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|sendStudentEmail
argument_list|(
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|sSectioningService
operator|.
name|sendEmail
argument_list|(
name|iDetails
operator|.
name|getStudentId
argument_list|()
argument_list|,
name|dialog
operator|.
name|getSubject
argument_list|()
argument_list|,
name|dialog
operator|.
name|getMessage
argument_list|()
argument_list|,
name|dialog
operator|.
name|getCC
argument_list|()
argument_list|,
name|dialog
operator|.
name|getIncludeCourseRequests
argument_list|()
argument_list|,
name|dialog
operator|.
name|getIncludeClassSchedule
argument_list|()
argument_list|,
name|dialog
operator|.
name|getIncludeAdvisorRequests
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iStatusBox
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|advisorRequestsEmailFailed
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
name|iStatusBox
operator|.
name|info
argument_list|(
name|MESSAGES
operator|.
name|advisorRequestsEmailSent
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iStatusBox
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|advisorRequestsSubmitFailed
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|CourseRequestInterface
name|value
parameter_list|)
block|{
name|setRequest
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|CourseRequestInterface
name|getValue
parameter_list|()
block|{
return|return
name|getRequest
argument_list|()
return|;
block|}
specifier|protected
name|void
name|clearStudentRequests
parameter_list|()
block|{
name|iRequests
operator|.
name|setData
argument_list|(
operator|new
name|WebTable
operator|.
name|Row
index|[]
block|{}
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iStudentRequestHeaderLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iStudentRequestHeaderLine
operator|+
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|clearAdvisorRequests
parameter_list|()
block|{
name|iAdvisorRequests
operator|.
name|setValue
argument_list|(
operator|new
name|CourseRequestInterface
argument_list|()
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iAdisorRequestsHeaderLine
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iAdisorRequestsHeaderLine
operator|+
literal|1
argument_list|,
literal|false
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
name|iAdisorRequestsHeaderLine
operator|+
literal|2
init|;
name|i
operator|<
name|getRowCount
argument_list|()
operator|-
literal|2
condition|;
name|i
operator|++
control|)
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|i
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|setAdvisorRequests
parameter_list|(
name|CourseRequestInterface
name|requests
parameter_list|)
block|{
name|iAdvisorRequests
operator|.
name|setValue
argument_list|(
name|requests
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iAdisorRequestsHeaderLine
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iAdisorRequestsHeaderLine
operator|+
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
name|iAdisorRequestsHeaderLine
operator|+
literal|2
init|;
name|i
operator|<
name|getRowCount
argument_list|()
operator|-
literal|2
condition|;
name|i
operator|++
control|)
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|i
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|fillInStudentRequests
parameter_list|()
block|{
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
name|rows
init|=
operator|new
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
argument_list|()
decl_stmt|;
name|boolean
name|hasPref
init|=
literal|false
decl_stmt|,
name|hasWarn
init|=
literal|false
decl_stmt|,
name|hasWait
init|=
literal|false
decl_stmt|,
name|hasStat
init|=
literal|false
decl_stmt|,
name|hasCrit
init|=
literal|false
decl_stmt|;
name|NumberFormat
name|df
init|=
name|NumberFormat
operator|.
name|getFormat
argument_list|(
literal|"0.#"
argument_list|)
decl_stmt|;
if|if
condition|(
name|iDetails
operator|!=
literal|null
operator|&&
name|iDetails
operator|.
name|hasStudentRequest
argument_list|()
condition|)
block|{
name|CheckCoursesResponse
name|check
init|=
operator|new
name|CheckCoursesResponse
argument_list|(
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|getConfirmations
argument_list|()
argument_list|)
decl_stmt|;
name|hasWarn
operator|=
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|hasConfirmations
argument_list|()
expr_stmt|;
name|int
name|priority
init|=
literal|1
decl_stmt|;
for|for
control|(
name|Request
name|request
range|:
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|getCourses
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|request
operator|.
name|hasRequestedCourse
argument_list|()
condition|)
continue|continue;
name|boolean
name|first
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|isWaitList
argument_list|()
condition|)
name|hasWait
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|isCritical
argument_list|()
operator|||
name|request
operator|.
name|isImportant
argument_list|()
condition|)
name|hasCrit
operator|=
literal|true
expr_stmt|;
for|for
control|(
name|RequestedCourse
name|rc
range|:
name|request
operator|.
name|getRequestedCourse
argument_list|()
control|)
block|{
if|if
condition|(
name|rc
operator|.
name|isCourse
argument_list|()
condition|)
block|{
name|ImageResource
name|icon
init|=
literal|null
decl_stmt|;
name|String
name|iconText
init|=
literal|null
decl_stmt|;
name|String
name|msg
init|=
name|check
operator|.
name|getMessage
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"\n"
argument_list|)
decl_stmt|;
if|if
condition|(
name|check
operator|.
name|isError
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|&&
operator|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|==
literal|null
operator|||
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
name|RequestedCourseStatus
operator|.
name|OVERRIDE_REJECTED
operator|)
condition|)
block|{
name|icon
operator|=
name|RESOURCES
operator|.
name|requestError
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|msg
operator|)
expr_stmt|;
block|}
if|else if
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
condition|)
block|{
case|case
name|ENROLLED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestEnrolled
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|MESSAGES
operator|.
name|enrolled
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_NEEDED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestNeeded
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|MESSAGES
operator|.
name|overrideNeeded
argument_list|(
name|msg
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|SAVED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|requested
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_REJECTED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestRejected
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideRejected
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_PENDING
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestPending
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overridePending
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_CANCELLED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestCancelled
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideCancelled
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_APPROVED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideApproved
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
default|default:
if|if
condition|(
name|check
operator|.
name|isError
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
condition|)
name|icon
operator|=
name|RESOURCES
operator|.
name|requestError
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|msg
operator|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|rc
operator|.
name|hasRequestorNote
argument_list|()
condition|)
name|iconText
operator|+=
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|requestNote
argument_list|(
name|rc
operator|.
name|getRequestorNote
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|rc
operator|.
name|hasStatusNote
argument_list|()
condition|)
name|iconText
operator|+=
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|overrideNote
argument_list|(
name|rc
operator|.
name|getStatusNote
argument_list|()
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|Preference
argument_list|>
name|prefs
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|hasSelectedIntructionalMethods
argument_list|()
condition|)
block|{
if|if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|ArrayList
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
operator|.
name|size
argument_list|()
operator|+
name|rc
operator|.
name|getSelectedClasses
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|status
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
condition|)
block|{
case|case
name|ENROLLED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusEnrolled
argument_list|()
expr_stmt|;
break|break;
case|case
name|OVERRIDE_APPROVED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusApproved
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|OVERRIDE_CANCELLED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusCancelled
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|OVERRIDE_PENDING
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusPending
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|OVERRIDE_REJECTED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusRejected
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|status
operator|.
name|isEmpty
argument_list|()
condition|)
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusRegistered
argument_list|()
expr_stmt|;
if|if
condition|(
name|prefs
operator|!=
literal|null
condition|)
name|hasPref
operator|=
literal|true
expr_stmt|;
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCredit
argument_list|()
condition|?
operator|(
name|rc
operator|.
name|getCreditMin
argument_list|()
operator|.
name|equals
argument_list|(
name|rc
operator|.
name|getCreditMax
argument_list|()
argument_list|)
condition|?
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMin
argument_list|()
argument_list|)
else|:
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMin
argument_list|()
argument_list|)
operator|+
literal|" - "
operator|+
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMax
argument_list|()
argument_list|)
operator|)
else|:
literal|""
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|String
name|note
init|=
literal|null
decl_stmt|,
name|noteTitle
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|check
operator|!=
literal|null
condition|)
block|{
name|note
operator|=
name|check
operator|.
name|getMessageWithColor
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"<br>"
argument_list|,
literal|"CREDIT"
argument_list|)
expr_stmt|;
name|noteTitle
operator|=
name|check
operator|.
name|getMessage
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"\n"
argument_list|,
literal|"CREDIT"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|rc
operator|.
name|hasRequestorNote
argument_list|()
condition|)
block|{
name|note
operator|=
operator|(
name|note
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|+
literal|"<br>"
operator|)
operator|+
name|rc
operator|.
name|getRequestorNote
argument_list|()
expr_stmt|;
name|noteTitle
operator|=
operator|(
name|noteTitle
operator|==
literal|null
condition|?
literal|""
else|:
name|noteTitle
operator|+
literal|"\n"
operator|)
operator|+
name|rc
operator|.
name|getRequestorNote
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|rc
operator|.
name|hasStatusNote
argument_list|()
condition|)
block|{
name|note
operator|=
operator|(
name|note
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|+
literal|"<br>"
operator|)
operator|+
name|rc
operator|.
name|getStatusNote
argument_list|()
expr_stmt|;
name|noteTitle
operator|=
operator|(
name|noteTitle
operator|==
literal|null
condition|?
literal|""
else|:
name|noteTitle
operator|+
literal|"\n"
operator|)
operator|+
name|rc
operator|.
name|getStatusNote
argument_list|()
expr_stmt|;
block|}
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
condition|?
name|MESSAGES
operator|.
name|courseRequestsPriority
argument_list|(
name|priority
argument_list|)
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCourseTitle
argument_list|()
condition|?
name|rc
operator|.
name|getCourseTitle
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
name|credit
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|ToolBox
operator|.
name|toString
argument_list|(
name|prefs
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|note
argument_list|,
name|noteTitle
argument_list|)
argument_list|,
operator|(
name|icon
operator|==
literal|null
condition|?
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|status
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|icon
argument_list|,
name|iconText
argument_list|,
name|status
argument_list|)
operator|)
argument_list|,
operator|(
name|first
operator|&&
name|request
operator|.
name|isCritical
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsCritical
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestCritical
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
name|first
operator|&&
name|request
operator|.
name|isImportant
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsImportant
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestImportant
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
operator|)
argument_list|,
operator|(
name|first
operator|&&
name|request
operator|.
name|isWaitList
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsWaitList
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestWaitListed
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
operator|&&
name|request
operator|.
name|hasTimeStamp
argument_list|()
condition|?
name|sDF
operator|.
name|format
argument_list|(
name|request
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
else|:
literal|""
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|priority
operator|>
literal|1
operator|&&
name|first
condition|)
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|rc
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
name|String
name|free
init|=
literal|""
decl_stmt|;
for|for
control|(
name|FreeTime
name|ft
range|:
name|rc
operator|.
name|getFreeTime
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|free
operator|.
name|isEmpty
argument_list|()
condition|)
name|free
operator|+=
literal|", "
expr_stmt|;
name|free
operator|+=
name|ft
operator|.
name|toString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
condition|?
name|MESSAGES
operator|.
name|courseRequestsPriority
argument_list|(
name|priority
argument_list|)
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|CONSTANTS
operator|.
name|freePrefix
argument_list|()
operator|+
name|free
argument_list|,
literal|3
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|requested
argument_list|(
name|free
argument_list|)
argument_list|,
name|MESSAGES
operator|.
name|reqStatusRegistered
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
operator|&&
name|request
operator|.
name|hasTimeStamp
argument_list|()
condition|?
name|sDF
operator|.
name|format
argument_list|(
name|request
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
else|:
literal|""
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|priority
operator|>
literal|1
operator|&&
name|first
condition|)
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
name|first
operator|=
literal|false
expr_stmt|;
block|}
name|priority
operator|++
expr_stmt|;
block|}
name|priority
operator|=
literal|1
expr_stmt|;
for|for
control|(
name|Request
name|request
range|:
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|getAlternatives
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|request
operator|.
name|hasRequestedCourse
argument_list|()
condition|)
continue|continue;
name|boolean
name|first
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|isWaitList
argument_list|()
condition|)
name|hasWait
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|isCritical
argument_list|()
operator|||
name|request
operator|.
name|isImportant
argument_list|()
condition|)
name|hasCrit
operator|=
literal|true
expr_stmt|;
for|for
control|(
name|RequestedCourse
name|rc
range|:
name|request
operator|.
name|getRequestedCourse
argument_list|()
control|)
block|{
if|if
condition|(
name|rc
operator|.
name|isCourse
argument_list|()
condition|)
block|{
name|ImageResource
name|icon
init|=
literal|null
decl_stmt|;
name|String
name|iconText
init|=
literal|null
decl_stmt|;
name|String
name|msg
init|=
name|check
operator|.
name|getMessage
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"\n"
argument_list|)
decl_stmt|;
if|if
condition|(
name|check
operator|.
name|isError
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|&&
operator|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|==
literal|null
operator|||
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
name|RequestedCourseStatus
operator|.
name|OVERRIDE_REJECTED
operator|)
condition|)
block|{
name|icon
operator|=
name|RESOURCES
operator|.
name|requestError
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|msg
operator|)
expr_stmt|;
block|}
if|else if
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
condition|)
block|{
case|case
name|ENROLLED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestEnrolled
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|MESSAGES
operator|.
name|enrolled
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_NEEDED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestNeeded
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|MESSAGES
operator|.
name|overrideNeeded
argument_list|(
name|msg
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|SAVED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|requested
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_REJECTED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestRejected
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideRejected
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_PENDING
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestPending
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overridePending
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_CANCELLED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestCancelled
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideCancelled
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_APPROVED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideApproved
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
default|default:
if|if
condition|(
name|check
operator|.
name|isError
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
condition|)
name|icon
operator|=
name|RESOURCES
operator|.
name|requestError
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|msg
operator|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|rc
operator|.
name|hasRequestorNote
argument_list|()
condition|)
name|iconText
operator|+=
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|requestNote
argument_list|(
name|rc
operator|.
name|getRequestorNote
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|rc
operator|.
name|hasStatusNote
argument_list|()
condition|)
name|iconText
operator|+=
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|overrideNote
argument_list|(
name|rc
operator|.
name|getStatusNote
argument_list|()
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|Preference
argument_list|>
name|prefs
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|hasSelectedIntructionalMethods
argument_list|()
condition|)
block|{
if|if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|ArrayList
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
operator|.
name|size
argument_list|()
operator|+
name|rc
operator|.
name|getSelectedClasses
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|prefs
operator|!=
literal|null
condition|)
name|hasPref
operator|=
literal|true
expr_stmt|;
name|String
name|status
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
condition|)
block|{
case|case
name|ENROLLED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusEnrolled
argument_list|()
expr_stmt|;
break|break;
case|case
name|OVERRIDE_APPROVED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusApproved
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|OVERRIDE_CANCELLED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusCancelled
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|OVERRIDE_PENDING
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusPending
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|OVERRIDE_REJECTED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusRejected
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|status
operator|.
name|isEmpty
argument_list|()
condition|)
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusRegistered
argument_list|()
expr_stmt|;
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCredit
argument_list|()
condition|?
operator|(
name|rc
operator|.
name|getCreditMin
argument_list|()
operator|.
name|equals
argument_list|(
name|rc
operator|.
name|getCreditMax
argument_list|()
argument_list|)
condition|?
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMin
argument_list|()
argument_list|)
else|:
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMin
argument_list|()
argument_list|)
operator|+
literal|" - "
operator|+
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMax
argument_list|()
argument_list|)
operator|)
else|:
literal|""
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|String
name|note
init|=
literal|null
decl_stmt|,
name|noteTitle
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|check
operator|!=
literal|null
condition|)
block|{
name|note
operator|=
name|check
operator|.
name|getMessageWithColor
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"<br>"
argument_list|,
literal|"CREDIT"
argument_list|)
expr_stmt|;
name|noteTitle
operator|=
name|check
operator|.
name|getMessage
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"\n"
argument_list|,
literal|"CREDIT"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|rc
operator|.
name|hasRequestorNote
argument_list|()
condition|)
block|{
name|note
operator|=
operator|(
name|note
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|+
literal|"<br>"
operator|)
operator|+
name|rc
operator|.
name|getRequestorNote
argument_list|()
expr_stmt|;
name|noteTitle
operator|=
operator|(
name|noteTitle
operator|==
literal|null
condition|?
literal|""
else|:
name|noteTitle
operator|+
literal|"\n"
operator|)
operator|+
name|rc
operator|.
name|getRequestorNote
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|rc
operator|.
name|hasStatusNote
argument_list|()
condition|)
block|{
name|note
operator|=
operator|(
name|note
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|+
literal|"<br>"
operator|)
operator|+
name|rc
operator|.
name|getStatusNote
argument_list|()
expr_stmt|;
name|noteTitle
operator|=
operator|(
name|noteTitle
operator|==
literal|null
condition|?
literal|""
else|:
name|noteTitle
operator|+
literal|"\n"
operator|)
operator|+
name|rc
operator|.
name|getStatusNote
argument_list|()
expr_stmt|;
block|}
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
condition|?
name|MESSAGES
operator|.
name|courseRequestsAlternate
argument_list|(
name|priority
argument_list|)
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCourseTitle
argument_list|()
condition|?
name|rc
operator|.
name|getCourseTitle
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
name|credit
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|ToolBox
operator|.
name|toString
argument_list|(
name|prefs
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|note
argument_list|,
name|noteTitle
argument_list|)
argument_list|,
operator|(
name|icon
operator|==
literal|null
condition|?
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|status
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|icon
argument_list|,
name|iconText
argument_list|,
name|status
argument_list|)
operator|)
argument_list|,
operator|(
name|first
operator|&&
name|request
operator|.
name|isCritical
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsCritical
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestCritical
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
name|first
operator|&&
name|request
operator|.
name|isImportant
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsImportant
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestImportant
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
operator|)
argument_list|,
operator|(
name|first
operator|&&
name|request
operator|.
name|isWaitList
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsWaitList
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestWaitListed
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
operator|&&
name|request
operator|.
name|hasTimeStamp
argument_list|()
condition|?
name|sDF
operator|.
name|format
argument_list|(
name|request
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
else|:
literal|""
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|first
condition|)
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|priority
operator|==
literal|1
condition|?
literal|"top-border-solid"
else|:
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|rc
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
name|String
name|free
init|=
literal|""
decl_stmt|;
for|for
control|(
name|FreeTime
name|ft
range|:
name|rc
operator|.
name|getFreeTime
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|free
operator|.
name|isEmpty
argument_list|()
condition|)
name|free
operator|+=
literal|", "
expr_stmt|;
name|free
operator|+=
name|ft
operator|.
name|toString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
condition|?
name|MESSAGES
operator|.
name|courseRequestsAlternate
argument_list|(
name|priority
argument_list|)
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|CONSTANTS
operator|.
name|freePrefix
argument_list|()
operator|+
name|free
argument_list|,
literal|3
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|requested
argument_list|(
name|free
argument_list|)
argument_list|,
name|MESSAGES
operator|.
name|reqStatusRegistered
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
operator|&&
name|request
operator|.
name|hasTimeStamp
argument_list|()
condition|?
name|sDF
operator|.
name|format
argument_list|(
name|request
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
else|:
literal|""
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|first
condition|)
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|priority
operator|==
literal|1
condition|?
literal|"top-border-solid"
else|:
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
name|first
operator|=
literal|false
expr_stmt|;
block|}
name|priority
operator|++
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iDetails
operator|!=
literal|null
operator|&&
name|iDetails
operator|.
name|hasStudentRequest
argument_list|()
operator|&&
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|getMaxCreditOverrideStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|ImageResource
name|icon
init|=
literal|null
decl_stmt|;
name|String
name|status
init|=
literal|""
decl_stmt|;
name|String
name|note
init|=
literal|null
decl_stmt|,
name|noteTitle
init|=
literal|null
decl_stmt|;
name|String
name|iconText
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|hasCreditWarning
argument_list|()
condition|)
block|{
name|note
operator|=
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|getCreditWarning
argument_list|()
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|"<br>"
argument_list|)
expr_stmt|;
name|noteTitle
operator|=
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|getCreditWarning
argument_list|()
expr_stmt|;
name|iconText
operator|=
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|getCreditWarning
argument_list|()
expr_stmt|;
name|hasWarn
operator|=
literal|true
expr_stmt|;
block|}
if|else if
condition|(
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|getMaxCreditOverrideStatus
argument_list|()
operator|!=
name|RequestedCourseStatus
operator|.
name|SAVED
condition|)
block|{
name|note
operator|=
name|noteTitle
operator|=
name|iconText
operator|=
name|MESSAGES
operator|.
name|creditWarning
argument_list|(
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|getCredit
argument_list|()
argument_list|)
expr_stmt|;
block|}
switch|switch
condition|(
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|getMaxCreditOverrideStatus
argument_list|()
condition|)
block|{
case|case
name|CREDIT_HIGH
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestError
argument_list|()
expr_stmt|;
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusRejected
argument_list|()
expr_stmt|;
name|note
operator|=
literal|"<span class='text-red'>"
operator|+
name|note
operator|+
literal|"</span>"
expr_stmt|;
name|iconText
operator|+=
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|creditStatusTooHigh
argument_list|()
expr_stmt|;
break|break;
case|case
name|OVERRIDE_REJECTED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestError
argument_list|()
expr_stmt|;
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusRejected
argument_list|()
expr_stmt|;
name|note
operator|=
literal|"<span class='text-red'>"
operator|+
name|note
operator|+
literal|"</span>"
expr_stmt|;
name|iconText
operator|+=
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|creditStatusDenied
argument_list|()
expr_stmt|;
break|break;
case|case
name|CREDIT_LOW
case|:
case|case
name|OVERRIDE_NEEDED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestNeeded
argument_list|()
expr_stmt|;
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusWarning
argument_list|()
expr_stmt|;
name|note
operator|=
literal|"<span class='text-orange'>"
operator|+
name|note
operator|+
literal|"</span>"
expr_stmt|;
break|break;
case|case
name|OVERRIDE_CANCELLED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestNeeded
argument_list|()
expr_stmt|;
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusCancelled
argument_list|()
expr_stmt|;
name|iconText
operator|+=
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|creditStatusCancelled
argument_list|()
expr_stmt|;
name|note
operator|=
literal|"<span class='text-orange'>"
operator|+
name|note
operator|+
literal|"</span>"
expr_stmt|;
break|break;
case|case
name|OVERRIDE_PENDING
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestPending
argument_list|()
expr_stmt|;
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusPending
argument_list|()
expr_stmt|;
name|iconText
operator|+=
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|creditStatusPending
argument_list|()
expr_stmt|;
name|note
operator|=
literal|"<span class='text-orange'>"
operator|+
name|note
operator|+
literal|"</span>"
expr_stmt|;
break|break;
case|case
name|OVERRIDE_APPROVED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
expr_stmt|;
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusApproved
argument_list|()
expr_stmt|;
name|iconText
operator|+=
operator|(
name|iconText
operator|==
literal|null
condition|?
literal|""
else|:
name|iconText
operator|+
literal|"\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|creditStatusApproved
argument_list|()
expr_stmt|;
break|break;
case|case
name|SAVED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
expr_stmt|;
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusRegistered
argument_list|()
expr_stmt|;
break|break;
block|}
if|if
condition|(
operator|!
name|status
operator|.
name|isEmpty
argument_list|()
condition|)
name|hasStat
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|hasRequestorNote
argument_list|()
condition|)
block|{
name|note
operator|=
operator|(
name|note
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|+
literal|"<br>"
operator|)
operator|+
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|getRequestorNote
argument_list|()
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|"<br>"
argument_list|)
expr_stmt|;
name|noteTitle
operator|=
operator|(
name|noteTitle
operator|==
literal|null
condition|?
literal|""
else|:
name|noteTitle
operator|+
literal|"\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|requestNote
argument_list|(
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|getRequestorNote
argument_list|()
argument_list|)
expr_stmt|;
name|iconText
operator|=
operator|(
name|iconText
operator|==
literal|null
condition|?
literal|""
else|:
name|iconText
operator|+
literal|"\n"
operator|)
operator|+
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|getRequestorNote
argument_list|()
expr_stmt|;
name|hasWarn
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|hasCreditNote
argument_list|()
condition|)
block|{
name|note
operator|=
operator|(
name|note
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|+
literal|"<br>"
operator|)
operator|+
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|getCreditNote
argument_list|()
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|"<br>"
argument_list|)
expr_stmt|;
name|noteTitle
operator|=
operator|(
name|noteTitle
operator|==
literal|null
condition|?
literal|""
else|:
name|noteTitle
operator|+
literal|"\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideNote
argument_list|(
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|getCreditNote
argument_list|()
argument_list|)
expr_stmt|;
name|iconText
operator|=
operator|(
name|iconText
operator|==
literal|null
condition|?
literal|""
else|:
name|iconText
operator|+
literal|"\n"
operator|)
operator|+
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|getCreditNote
argument_list|()
expr_stmt|;
name|hasWarn
operator|=
literal|true
expr_stmt|;
block|}
name|float
index|[]
name|range
init|=
name|iDetails
operator|.
name|getStudentRequest
argument_list|()
operator|.
name|getCreditRange
argument_list|()
decl_stmt|;
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|range
operator|!=
literal|null
condition|?
name|range
index|[
literal|0
index|]
operator|<
name|range
index|[
literal|1
index|]
condition|?
name|df
operator|.
name|format
argument_list|(
name|range
index|[
literal|0
index|]
argument_list|)
operator|+
literal|" - "
operator|+
name|df
operator|.
name|format
argument_list|(
name|range
index|[
literal|1
index|]
argument_list|)
else|:
name|df
operator|.
name|format
argument_list|(
name|range
index|[
literal|0
index|]
argument_list|)
else|:
literal|""
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|rowRequestedCredit
argument_list|()
argument_list|,
literal|2
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
name|credit
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|note
argument_list|,
name|noteTitle
argument_list|)
argument_list|,
operator|(
name|icon
operator|==
literal|null
condition|?
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|status
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|icon
argument_list|,
name|iconText
argument_list|,
name|status
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
literal|"top-border-solid"
argument_list|)
expr_stmt|;
name|row
operator|.
name|getCell
argument_list|(
literal|0
argument_list|)
operator|.
name|setStyleName
argument_list|(
literal|"top-border-solid text-bold"
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
name|WebTable
operator|.
name|Row
index|[]
name|rowArray
init|=
operator|new
name|WebTable
operator|.
name|Row
index|[
name|rows
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Row
name|row
range|:
name|rows
control|)
name|rowArray
index|[
name|idx
operator|++
index|]
operator|=
name|row
expr_stmt|;
name|iRequests
operator|.
name|setData
argument_list|(
name|rowArray
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setColumnVisible
argument_list|(
literal|4
argument_list|,
name|hasPref
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setColumnVisible
argument_list|(
literal|5
argument_list|,
name|hasWarn
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setColumnVisible
argument_list|(
literal|6
argument_list|,
name|hasStat
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setColumnVisible
argument_list|(
literal|7
argument_list|,
name|hasCrit
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setColumnVisible
argument_list|(
literal|8
argument_list|,
name|hasWait
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iStudentRequestHeaderLine
argument_list|,
name|iDetails
operator|!=
literal|null
operator|&&
name|iDetails
operator|.
name|hasStudentRequest
argument_list|()
argument_list|)
expr_stmt|;
name|getRowFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|iStudentRequestHeaderLine
operator|+
literal|1
argument_list|,
name|iDetails
operator|!=
literal|null
operator|&&
name|iDetails
operator|.
name|hasStudentRequest
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isSendEmailConformation
parameter_list|()
block|{
return|return
name|iEmailConfirmationHeader
operator|.
name|isVisible
argument_list|()
operator|&&
name|iEmailConfirmationHeader
operator|.
name|getValue
argument_list|()
return|;
block|}
block|}
end_class

end_unit

