begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|sectioning
package|;
end_package

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaButton
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|P
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeDialogBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|CheckCoursesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|CourseMessage
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
operator|.
name|ScheduledCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|CloseEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|CloseHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|PopupPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|TextArea
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|CourseRequestsConfirmationDialog
extends|extends
name|UniTimeDialogBox
block|{
specifier|protected
specifier|static
name|StudentSectioningConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
name|StudentSectioningResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|AriaButton
name|iYes
decl_stmt|,
name|iNo
decl_stmt|;
specifier|private
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
name|iCommand
decl_stmt|;
specifier|private
name|String
name|iMessage
decl_stmt|;
specifier|private
name|boolean
name|iValue
init|=
literal|false
decl_stmt|;
specifier|private
name|TextArea
name|iNote
init|=
literal|null
decl_stmt|;
specifier|public
name|CourseRequestsConfirmationDialog
parameter_list|(
name|CheckCoursesResponse
name|response
parameter_list|,
name|int
name|confirm
parameter_list|,
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
name|callback
parameter_list|)
block|{
name|super
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
literal|"unitime-CourseRequestsConfirmationDialog"
argument_list|)
expr_stmt|;
name|setText
argument_list|(
name|response
operator|.
name|getConfirmationTitle
argument_list|(
name|confirm
argument_list|,
name|MESSAGES
operator|.
name|dialogConfirmation
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iMessage
operator|=
name|response
operator|.
name|getConfirmations
argument_list|(
name|confirm
argument_list|,
literal|" \n"
argument_list|)
expr_stmt|;
name|iCommand
operator|=
name|callback
expr_stmt|;
name|P
name|panel
init|=
operator|new
name|P
argument_list|(
literal|"unitime-ConfirmationPanel"
argument_list|)
decl_stmt|;
name|setEscapeToHide
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|P
name|bd
init|=
operator|new
name|P
argument_list|(
literal|"body-panel"
argument_list|)
decl_stmt|;
name|panel
operator|.
name|add
argument_list|(
name|bd
argument_list|)
expr_stmt|;
name|P
name|ic
init|=
operator|new
name|P
argument_list|(
literal|"icon-panel"
argument_list|)
decl_stmt|;
name|bd
operator|.
name|add
argument_list|(
name|ic
argument_list|)
expr_stmt|;
name|ic
operator|.
name|add
argument_list|(
operator|new
name|Image
argument_list|(
name|RESOURCES
operator|.
name|statusWarning
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|P
name|cp
init|=
operator|new
name|P
argument_list|(
literal|"content-panel"
argument_list|)
decl_stmt|;
name|bd
operator|.
name|add
argument_list|(
name|cp
argument_list|)
expr_stmt|;
name|P
name|mp
init|=
operator|new
name|P
argument_list|(
literal|"message-panel"
argument_list|)
decl_stmt|;
name|cp
operator|.
name|add
argument_list|(
name|mp
argument_list|)
expr_stmt|;
name|P
name|ctab
init|=
literal|null
decl_stmt|;
name|String
name|last
init|=
literal|null
decl_stmt|;
for|for
control|(
specifier|final
name|CourseMessage
name|cm
range|:
name|response
operator|.
name|getMessages
argument_list|()
control|)
block|{
if|if
condition|(
name|confirm
operator|!=
name|cm
operator|.
name|getConfirm
argument_list|()
condition|)
continue|continue;
if|if
condition|(
name|cm
operator|.
name|hasCourse
argument_list|()
condition|)
block|{
if|if
condition|(
name|ctab
operator|==
literal|null
condition|)
block|{
name|ctab
operator|=
operator|new
name|P
argument_list|(
literal|"course-table"
argument_list|)
expr_stmt|;
name|last
operator|=
literal|null
expr_stmt|;
block|}
name|P
name|cn
init|=
operator|new
name|P
argument_list|(
literal|"course-name"
argument_list|)
decl_stmt|;
if|if
condition|(
name|last
operator|==
literal|null
operator|||
operator|!
name|last
operator|.
name|equals
argument_list|(
name|cm
operator|.
name|getCourse
argument_list|()
argument_list|)
condition|)
name|cn
operator|.
name|setText
argument_list|(
name|cm
operator|.
name|getCourse
argument_list|()
argument_list|)
expr_stmt|;
name|P
name|m
init|=
operator|new
name|P
argument_list|(
literal|"course-message"
argument_list|)
decl_stmt|;
name|m
operator|.
name|setText
argument_list|(
name|cm
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|P
name|crow
init|=
operator|new
name|P
argument_list|(
literal|"course-row"
argument_list|)
decl_stmt|;
if|if
condition|(
name|last
operator|==
literal|null
operator|||
operator|!
name|last
operator|.
name|equals
argument_list|(
name|cm
operator|.
name|getCourse
argument_list|()
argument_list|)
condition|)
name|crow
operator|.
name|addStyleName
argument_list|(
literal|"first-course-line"
argument_list|)
expr_stmt|;
name|crow
operator|.
name|add
argument_list|(
name|cn
argument_list|)
expr_stmt|;
name|crow
operator|.
name|add
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|ctab
operator|.
name|add
argument_list|(
name|crow
argument_list|)
expr_stmt|;
name|last
operator|=
name|cm
operator|.
name|getCourse
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
literal|"REQUEST_NOTE"
operator|.
name|equals
argument_list|(
name|cm
operator|.
name|getCode
argument_list|()
argument_list|)
condition|)
block|{
name|iNote
operator|=
operator|new
name|TextArea
argument_list|()
expr_stmt|;
name|iNote
operator|.
name|setStyleName
argument_list|(
literal|"unitime-TextArea"
argument_list|)
expr_stmt|;
name|iNote
operator|.
name|addStyleName
argument_list|(
literal|"request-note"
argument_list|)
expr_stmt|;
name|iNote
operator|.
name|setVisibleLines
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|iNote
operator|.
name|setCharacterWidth
argument_list|(
literal|80
argument_list|)
expr_stmt|;
if|if
condition|(
name|cm
operator|.
name|getMessage
argument_list|()
operator|!=
literal|null
condition|)
name|iNote
operator|.
name|setText
argument_list|(
name|cm
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|iNote
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
name|cm
operator|.
name|setMessage
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|mp
operator|.
name|add
argument_list|(
name|iNote
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|ctab
operator|!=
literal|null
condition|)
block|{
name|mp
operator|.
name|add
argument_list|(
name|ctab
argument_list|)
expr_stmt|;
name|ctab
operator|=
literal|null
expr_stmt|;
block|}
name|P
name|m
init|=
operator|new
name|P
argument_list|(
literal|"message"
argument_list|)
decl_stmt|;
name|m
operator|.
name|setHTML
argument_list|(
name|cm
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|mp
operator|.
name|add
argument_list|(
name|m
argument_list|)
expr_stmt|;
block|}
block|}
name|P
name|bp
init|=
operator|new
name|P
argument_list|(
literal|"buttons-panel"
argument_list|)
decl_stmt|;
name|panel
operator|.
name|add
argument_list|(
name|bp
argument_list|)
expr_stmt|;
name|iYes
operator|=
operator|new
name|AriaButton
argument_list|(
name|response
operator|.
name|getConfirmationYesButton
argument_list|(
name|confirm
argument_list|,
name|MESSAGES
operator|.
name|buttonConfirmYes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iYes
operator|.
name|addStyleName
argument_list|(
literal|"yes"
argument_list|)
expr_stmt|;
name|String
name|yesTitle
init|=
name|response
operator|.
name|getConfirmationYesButtonTitle
argument_list|(
name|confirm
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|yesTitle
operator|!=
literal|null
operator|&&
operator|!
name|yesTitle
operator|.
name|isEmpty
argument_list|()
condition|)
name|iYes
operator|.
name|setTitle
argument_list|(
name|yesTitle
argument_list|)
expr_stmt|;
name|bp
operator|.
name|add
argument_list|(
name|iYes
argument_list|)
expr_stmt|;
name|iYes
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|submit
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iNo
operator|=
operator|new
name|AriaButton
argument_list|(
name|response
operator|.
name|getConfirmationNoButton
argument_list|(
name|confirm
argument_list|,
name|MESSAGES
operator|.
name|buttonConfirmNo
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iNo
operator|.
name|addStyleName
argument_list|(
literal|"no"
argument_list|)
expr_stmt|;
name|String
name|noTitle
init|=
name|response
operator|.
name|getConfirmationNoButtonTitle
argument_list|(
name|confirm
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|noTitle
operator|!=
literal|null
operator|&&
operator|!
name|noTitle
operator|.
name|isEmpty
argument_list|()
condition|)
name|iNo
operator|.
name|setTitle
argument_list|(
name|noTitle
argument_list|)
expr_stmt|;
name|bp
operator|.
name|add
argument_list|(
name|iNo
argument_list|)
expr_stmt|;
name|iNo
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|addCloseHandler
argument_list|(
operator|new
name|CloseHandler
argument_list|<
name|PopupPanel
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClose
parameter_list|(
name|CloseEvent
argument_list|<
name|PopupPanel
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|iCommand
operator|!=
literal|null
condition|)
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|iCommand
operator|.
name|onSuccess
argument_list|(
name|iValue
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|setWidget
argument_list|(
name|panel
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|center
parameter_list|()
block|{
name|super
operator|.
name|center
argument_list|()
expr_stmt|;
if|if
condition|(
name|iMessage
operator|!=
literal|null
operator|&&
operator|!
name|iMessage
operator|.
name|isEmpty
argument_list|()
condition|)
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setText
argument_list|(
name|ARIA
operator|.
name|dialogOpened
argument_list|(
name|getText
argument_list|()
argument_list|)
operator|+
literal|" "
operator|+
name|iMessage
operator|+
literal|" "
operator|+
name|ARIA
operator|.
name|confirmationEnterToAcceptEscapeToReject
argument_list|()
argument_list|)
expr_stmt|;
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
if|if
condition|(
name|iNote
operator|!=
literal|null
condition|)
name|iNote
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
else|else
name|iYes
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|submit
parameter_list|()
block|{
name|iValue
operator|=
literal|true
expr_stmt|;
name|hide
argument_list|()
expr_stmt|;
block|}
specifier|public
name|String
name|getNote
parameter_list|()
block|{
return|return
name|iNote
operator|==
literal|null
condition|?
literal|null
else|:
name|iNote
operator|.
name|getText
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|void
name|confirm
parameter_list|(
name|CheckCoursesResponse
name|response
parameter_list|,
name|int
name|confirm
parameter_list|,
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
name|callback
parameter_list|)
block|{
operator|new
name|CourseRequestsConfirmationDialog
argument_list|(
name|response
argument_list|,
name|confirm
argument_list|,
name|callback
argument_list|)
operator|.
name|center
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

