begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|sectioning
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaTextBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|HorizontalPanelWithHint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeDialogBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|WebTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|WebTable
operator|.
name|RowClickEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtAriaMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|services
operator|.
name|SectioningService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|services
operator|.
name|SectioningServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|aria
operator|.
name|client
operator|.
name|Id
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|aria
operator|.
name|client
operator|.
name|Roles
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
operator|.
name|ScheduledCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Overflow
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Unit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyCodes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyDownEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyDownHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|CloseEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|CloseHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|DOM
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Event
operator|.
name|NativePreviewEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHorizontalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasVerticalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|PopupPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|RootPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ScrollPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SimplePanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|VerticalPanel
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|SuggestionsBox
extends|extends
name|UniTimeDialogBox
block|{
specifier|public
specifier|static
specifier|final
name|StudentSectioningResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StudentSectioningMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StudentSectioningConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|GwtAriaMessages
name|ARIA
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtAriaMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|SectioningServiceAsync
name|iSectioningService
init|=
name|GWT
operator|.
name|create
argument_list|(
name|SectioningService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|iAssignment
decl_stmt|;
specifier|private
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|ClassAssignmentInterface
argument_list|>
argument_list|>
name|iCallback
init|=
literal|null
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
name|iCurrent
init|=
literal|null
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|ClassAssignmentInterface
argument_list|>
name|iResult
init|=
literal|null
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|SuggestionSelectedHandler
argument_list|>
name|iSuggestionSelectedHandlers
init|=
operator|new
name|ArrayList
argument_list|<
name|SuggestionSelectedHandler
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|WebTable
name|iSuggestions
decl_stmt|;
specifier|private
name|HTML
name|iMessages
decl_stmt|;
specifier|private
name|HTML
name|iLegend
decl_stmt|;
specifier|private
name|ScrollPanel
name|iSuggestionsScroll
decl_stmt|;
specifier|private
name|String
name|iSource
decl_stmt|;
specifier|private
name|AriaTextBox
name|iFilter
decl_stmt|;
specifier|private
name|int
name|iIndex
decl_stmt|;
specifier|private
name|CourseRequestInterface
name|iRequest
decl_stmt|;
specifier|private
name|HorizontalPanelWithHint
name|iFilterPanel
decl_stmt|;
specifier|private
name|Button
name|iSearch
decl_stmt|;
specifier|private
name|boolean
name|iOnline
decl_stmt|;
specifier|private
name|TimeGrid
name|iGrid
decl_stmt|;
specifier|private
name|PopupPanel
name|iHint
decl_stmt|;
specifier|private
name|String
name|iHintId
init|=
literal|null
decl_stmt|;
specifier|private
name|Timer
name|iHideHint
decl_stmt|;
specifier|public
name|SuggestionsBox
parameter_list|(
name|TimeGrid
operator|.
name|ColorProvider
name|color
parameter_list|,
name|boolean
name|online
parameter_list|)
block|{
name|super
argument_list|(
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|iOnline
operator|=
name|online
expr_stmt|;
name|setText
argument_list|(
literal|"Alternatives"
argument_list|)
expr_stmt|;
name|setAnimationEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setAutoHideEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setGlassEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setModal
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|VerticalPanel
name|suggestionPanel
init|=
operator|new
name|VerticalPanel
argument_list|()
decl_stmt|;
name|suggestionPanel
operator|.
name|setSpacing
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|iFilterPanel
operator|=
operator|new
name|HorizontalPanelWithHint
argument_list|(
operator|new
name|HTML
argument_list|(
name|MESSAGES
operator|.
name|suggestionsFilterHint
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|iFilterPanel
operator|.
name|setSpacing
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|Label
name|filterLabel
init|=
operator|new
name|Label
argument_list|(
literal|"Filter:"
argument_list|)
decl_stmt|;
name|iFilterPanel
operator|.
name|add
argument_list|(
name|filterLabel
argument_list|)
expr_stmt|;
name|iFilterPanel
operator|.
name|setCellVerticalAlignment
argument_list|(
name|filterLabel
argument_list|,
name|HasVerticalAlignment
operator|.
name|ALIGN_MIDDLE
argument_list|)
expr_stmt|;
name|iFilter
operator|=
operator|new
name|AriaTextBox
argument_list|()
expr_stmt|;
name|iFilter
operator|.
name|setStyleName
argument_list|(
literal|"gwt-SuggestBox"
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setWidth
argument_list|(
literal|600
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setHeight
argument_list|(
literal|26
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|iFilterPanel
operator|.
name|add
argument_list|(
name|iFilter
argument_list|)
expr_stmt|;
name|HTML
name|ariaDescription
init|=
operator|new
name|HTML
argument_list|(
name|MESSAGES
operator|.
name|suggestionsFilterHint
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|ariaDescription
operator|.
name|setStyleName
argument_list|(
literal|"unitime-AriaHiddenLabel"
argument_list|)
expr_stmt|;
name|ariaDescription
operator|.
name|getElement
argument_list|()
operator|.
name|setId
argument_list|(
name|DOM
operator|.
name|createUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|iFilterPanel
operator|.
name|add
argument_list|(
name|ariaDescription
argument_list|)
expr_stmt|;
name|Roles
operator|.
name|getTextboxRole
argument_list|()
operator|.
name|setAriaDescribedbyProperty
argument_list|(
name|iFilter
operator|.
name|getElement
argument_list|()
argument_list|,
name|Id
operator|.
name|of
argument_list|(
name|ariaDescription
operator|.
name|getElement
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iSearch
operator|=
operator|new
name|Button
argument_list|(
name|MESSAGES
operator|.
name|buttonSearch
argument_list|()
argument_list|)
expr_stmt|;
name|iSearch
operator|.
name|setAccessKey
argument_list|(
literal|'s'
argument_list|)
expr_stmt|;
name|iSearch
operator|.
name|addStyleName
argument_list|(
literal|"unitime-NoPrint"
argument_list|)
expr_stmt|;
name|iFilterPanel
operator|.
name|add
argument_list|(
name|iSearch
argument_list|)
expr_stmt|;
name|iFilterPanel
operator|.
name|setCellVerticalAlignment
argument_list|(
name|iSearch
argument_list|,
name|HasVerticalAlignment
operator|.
name|ALIGN_MIDDLE
argument_list|)
expr_stmt|;
name|suggestionPanel
operator|.
name|add
argument_list|(
name|iFilterPanel
argument_list|)
expr_stmt|;
name|suggestionPanel
operator|.
name|setCellHorizontalAlignment
argument_list|(
name|iFilter
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_CENTER
argument_list|)
expr_stmt|;
name|iSuggestions
operator|=
operator|new
name|WebTable
argument_list|()
expr_stmt|;
name|iSuggestions
operator|.
name|setHeader
argument_list|(
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|,
literal|1
argument_list|,
literal|"10px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colSubject
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"50px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCourse
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"50px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colSubpart
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"40px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colClass
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"40px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colTime
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
operator|.
name|aria
argument_list|(
name|ARIA
operator|.
name|colTimeCurrent
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|,
literal|1
argument_list|,
literal|"1px"
argument_list|)
operator|.
name|aria
argument_list|(
name|ARIA
operator|.
name|colTimeNew
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colDate
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"50px"
argument_list|)
operator|.
name|aria
argument_list|(
name|ARIA
operator|.
name|colDateCurrent
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|,
literal|1
argument_list|,
literal|"1px"
argument_list|)
operator|.
name|aria
argument_list|(
name|ARIA
operator|.
name|colDateNew
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colRoom
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"50px"
argument_list|)
operator|.
name|aria
argument_list|(
name|ARIA
operator|.
name|colRoomCurrent
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|,
literal|1
argument_list|,
literal|"1px"
argument_list|)
operator|.
name|aria
argument_list|(
name|ARIA
operator|.
name|colRoomNew
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colInstructor
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"100px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colParent
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"50px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colIcons
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"10px"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iSuggestions
operator|.
name|setSelectSameIdRows
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iSuggestions
operator|.
name|setEmptyMessage
argument_list|(
name|MESSAGES
operator|.
name|suggestionsLoading
argument_list|()
argument_list|)
expr_stmt|;
name|iSuggestionsScroll
operator|=
operator|new
name|ScrollPanel
argument_list|(
name|iSuggestions
argument_list|)
expr_stmt|;
name|iSuggestionsScroll
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setHeight
argument_list|(
literal|400
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|iSuggestionsScroll
operator|.
name|setStyleName
argument_list|(
literal|"unitime-ScrollPanel"
argument_list|)
expr_stmt|;
name|suggestionPanel
operator|.
name|add
argument_list|(
name|iSuggestionsScroll
argument_list|)
expr_stmt|;
name|iLegend
operator|=
operator|new
name|HTML
argument_list|()
expr_stmt|;
name|iLegend
operator|.
name|setStyleName
argument_list|(
literal|"unitime-SuggestionsLegend"
argument_list|)
expr_stmt|;
name|suggestionPanel
operator|.
name|add
argument_list|(
name|iLegend
argument_list|)
expr_stmt|;
name|iMessages
operator|=
operator|new
name|HTML
argument_list|()
expr_stmt|;
name|iMessages
operator|.
name|setStyleName
argument_list|(
literal|"unitime-SuggestionsMessage"
argument_list|)
expr_stmt|;
name|suggestionPanel
operator|.
name|add
argument_list|(
name|iMessages
argument_list|)
expr_stmt|;
name|iCallback
operator|=
operator|new
name|AsyncCallback
argument_list|<
name|Collection
argument_list|<
name|ClassAssignmentInterface
argument_list|>
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iSuggestions
operator|.
name|clearData
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iSuggestions
operator|.
name|setEmptyMessage
argument_list|(
literal|"<font color='red'>"
operator|+
name|caught
operator|.
name|getMessage
argument_list|()
operator|+
literal|"</font>"
argument_list|)
expr_stmt|;
name|iMessages
operator|.
name|setHTML
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|center
argument_list|()
expr_stmt|;
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setHTML
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Collection
argument_list|<
name|ClassAssignmentInterface
argument_list|>
name|result
parameter_list|)
block|{
name|iResult
operator|=
operator|(
name|ArrayList
argument_list|<
name|ClassAssignmentInterface
argument_list|>
operator|)
name|result
expr_stmt|;
name|iMessages
operator|.
name|setHTML
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|String
name|ariaStatus
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iSuggestions
operator|.
name|clearData
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|iFilter
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iSuggestions
operator|.
name|setEmptyMessage
argument_list|(
name|MESSAGES
operator|.
name|suggestionsNoAlternative
argument_list|(
name|iSource
argument_list|)
argument_list|)
expr_stmt|;
name|ariaStatus
operator|=
name|ARIA
operator|.
name|suggestionsNoAlternative
argument_list|(
name|iSource
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iSuggestions
operator|.
name|setEmptyMessage
argument_list|(
name|MESSAGES
operator|.
name|suggestionsNoAlternativeWithFilter
argument_list|(
name|iSource
argument_list|,
name|iFilter
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ariaStatus
operator|=
name|ARIA
operator|.
name|suggestionsNoAlternativeWithFilter
argument_list|(
name|iSource
argument_list|,
name|iFilter
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|center
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
name|rows
init|=
operator|new
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
argument_list|()
decl_stmt|;
name|int
name|lastSize
init|=
literal|0
decl_stmt|;
name|int
name|suggestionId
init|=
literal|0
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
name|suggestion
range|:
name|result
control|)
block|{
if|if
condition|(
name|suggestion
operator|.
name|hasMessages
argument_list|()
condition|)
name|iMessages
operator|.
name|setHTML
argument_list|(
name|suggestion
operator|.
name|getMessages
argument_list|(
literal|"<br>"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|suggestion
operator|.
name|getCourseAssignments
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|suggestionId
operator|++
expr_stmt|;
continue|continue;
block|}
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|course
range|:
name|suggestion
operator|.
name|getCourseAssignments
argument_list|()
control|)
block|{
name|ArrayList
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
name|sameCourse
init|=
operator|new
name|ArrayList
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|course
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|x
range|:
name|iCurrent
control|)
block|{
if|if
condition|(
name|x
operator|==
literal|null
condition|)
continue|continue;
if|if
condition|(
name|course
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|x
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
name|sameCourse
operator|.
name|add
argument_list|(
name|x
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
init|=
name|course
operator|.
name|getClassAssignments
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|x
range|:
name|iCurrent
control|)
block|{
if|if
condition|(
name|x
operator|==
literal|null
condition|)
continue|continue;
if|if
condition|(
name|x
operator|.
name|isFreeTime
argument_list|()
operator|&&
name|x
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
operator|.
name|equals
argument_list|(
name|clazz
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
argument_list|)
operator|&&
name|x
operator|.
name|getStart
argument_list|()
operator|==
name|clazz
operator|.
name|getStart
argument_list|()
operator|&&
name|x
operator|.
name|getLength
argument_list|()
operator|==
name|clazz
operator|.
name|getLength
argument_list|()
condition|)
name|sameCourse
operator|.
name|add
argument_list|(
name|x
argument_list|)
expr_stmt|;
block|}
block|}
name|boolean
name|selected
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|iAssignment
operator|.
name|isFreeTime
argument_list|()
operator|&&
name|course
operator|.
name|isFreeTime
argument_list|()
operator|&&
name|course
operator|.
name|getClassAssignments
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
operator|.
name|equals
argument_list|(
name|iAssignment
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
argument_list|)
operator|&&
name|course
operator|.
name|getClassAssignments
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getStart
argument_list|()
operator|==
name|iAssignment
operator|.
name|getStart
argument_list|()
operator|&&
name|course
operator|.
name|getClassAssignments
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLength
argument_list|()
operator|==
name|iAssignment
operator|.
name|getLength
argument_list|()
condition|)
name|selected
operator|=
literal|true
expr_stmt|;
if|if
condition|(
operator|!
name|iAssignment
operator|.
name|isFreeTime
argument_list|()
operator|&&
operator|!
name|iAssignment
operator|.
name|isAssigned
argument_list|()
operator|&&
name|iAssignment
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|course
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
name|selected
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|course
operator|.
name|isAssigned
argument_list|()
condition|)
block|{
name|int
name|clazzIdx
init|=
literal|0
decl_stmt|;
name|Long
name|selectClassId
init|=
literal|null
decl_stmt|;
name|String
name|selectSubpart
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|iAssignment
operator|.
name|getSubpartId
argument_list|()
operator|!=
literal|null
operator|&&
name|iAssignment
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|course
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
block|{
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
range|:
name|course
operator|.
name|getClassAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|iAssignment
operator|.
name|getSubpartId
argument_list|()
operator|.
name|equals
argument_list|(
name|clazz
operator|.
name|getSubpartId
argument_list|()
argument_list|)
condition|)
name|selectClassId
operator|=
name|clazz
operator|.
name|getClassId
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|selectClassId
operator|==
literal|null
condition|)
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
range|:
name|course
operator|.
name|getClassAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|iAssignment
operator|.
name|getSubpart
argument_list|()
operator|.
name|equals
argument_list|(
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|)
condition|)
name|selectSubpart
operator|=
name|clazz
operator|.
name|getSubpart
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|selectClassId
operator|==
literal|null
operator|&&
name|selectSubpart
operator|==
literal|null
condition|)
name|selected
operator|=
literal|true
expr_stmt|;
block|}
name|clazz
label|:
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
range|:
name|course
operator|.
name|getClassAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|selectClassId
operator|!=
literal|null
condition|)
name|selected
operator|=
name|selectClassId
operator|.
name|equals
argument_list|(
name|clazz
operator|.
name|getClassId
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|selectSubpart
operator|!=
literal|null
condition|)
name|selected
operator|=
name|selectSubpart
operator|.
name|equals
argument_list|(
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|)
expr_stmt|;
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|old
init|=
literal|null
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|x
range|:
name|iCurrent
control|)
block|{
if|if
condition|(
name|x
operator|==
literal|null
condition|)
continue|continue;
if|if
condition|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
if|if
condition|(
name|x
operator|.
name|isFreeTime
argument_list|()
operator|&&
name|x
operator|.
name|isCourseAssigned
argument_list|()
operator|&&
name|x
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
operator|.
name|equals
argument_list|(
name|clazz
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
argument_list|)
operator|&&
name|x
operator|.
name|getStart
argument_list|()
operator|==
name|clazz
operator|.
name|getStart
argument_list|()
operator|&&
name|x
operator|.
name|getLength
argument_list|()
operator|==
name|clazz
operator|.
name|getLength
argument_list|()
condition|)
continue|continue
name|clazz
continue|;
block|}
else|else
block|{
if|if
condition|(
name|clazz
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|x
operator|.
name|getCourseId
argument_list|()
argument_list|)
operator|&&
name|clazz
operator|.
name|getClassId
argument_list|()
operator|.
name|equals
argument_list|(
name|x
operator|.
name|getClassId
argument_list|()
argument_list|)
condition|)
continue|continue
name|clazz
continue|;
comment|// the exact same assignment
if|if
condition|(
name|clazz
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|x
operator|.
name|getCourseId
argument_list|()
argument_list|)
operator|&&
name|clazz
operator|.
name|getSubpartId
argument_list|()
operator|.
name|equals
argument_list|(
name|x
operator|.
name|getSubpartId
argument_list|()
argument_list|)
condition|)
block|{
name|old
operator|=
name|x
expr_stmt|;
break|break;
block|}
block|}
block|}
if|if
condition|(
name|old
operator|==
literal|null
operator|&&
name|clazzIdx
operator|<
name|sameCourse
operator|.
name|size
argument_list|()
condition|)
name|old
operator|=
name|sameCourse
operator|.
name|get
argument_list|(
name|clazzIdx
argument_list|)
expr_stmt|;
if|if
condition|(
name|old
operator|==
literal|null
operator|&&
name|sameCourse
operator|.
name|size
argument_list|()
operator|==
literal|1
operator|&&
operator|!
name|sameCourse
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isAssigned
argument_list|()
condition|)
name|old
operator|=
name|sameCourse
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|IconsCell
name|icons
init|=
operator|new
name|WebTable
operator|.
name|IconsCell
argument_list|()
decl_stmt|;
if|if
condition|(
name|clazz
operator|!=
literal|null
operator|&&
name|clazz
operator|.
name|isSaved
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|saved
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|saved
argument_list|(
name|MESSAGES
operator|.
name|clazz
argument_list|(
name|clazz
operator|.
name|getSubject
argument_list|()
argument_list|,
name|clazz
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|course
operator|.
name|isLocked
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|courseLocked
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|courseLocked
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
operator|+
literal|" "
operator|+
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|clazz
operator|!=
literal|null
operator|&&
name|clazz
operator|.
name|isOfHighDemand
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|highDemand
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|highDemand
argument_list|(
name|clazz
operator|.
name|getExpected
argument_list|()
argument_list|,
name|clazz
operator|.
name|getAvailableLimit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|clazz
operator|!=
literal|null
operator|&&
name|clazz
operator|.
name|hasNote
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|note
argument_list|()
argument_list|,
name|clazz
operator|.
name|getNote
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rows
operator|.
name|size
argument_list|()
operator|==
name|lastSize
condition|?
name|suggestionId
operator|+
literal|"."
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazzIdx
operator|>
literal|0
condition|?
literal|""
else|:
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
else|:
name|course
operator|.
name|getSubject
argument_list|()
argument_list|)
operator|.
name|aria
argument_list|(
name|clazzIdx
operator|==
literal|0
condition|?
literal|""
else|:
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
else|:
name|course
operator|.
name|getSubject
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazzIdx
operator|>
literal|0
condition|?
literal|""
else|:
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
else|:
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
operator|.
name|aria
argument_list|(
name|clazzIdx
operator|==
literal|0
condition|?
literal|""
else|:
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
else|:
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|CmpMode
operator|.
name|SINGLE
argument_list|,
name|selected
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getSection
argument_list|()
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|,
name|CmpMode
operator|.
name|SINGLE
argument_list|,
name|selected
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getTimeString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getTimeString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|,
name|CmpMode
operator|.
name|BOTH_OLD
argument_list|,
name|selected
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getTimeString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getTimeString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|,
name|CmpMode
operator|.
name|BOTH_NEW
argument_list|,
name|selected
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getDatePattern
argument_list|()
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getDatePattern
argument_list|()
argument_list|,
name|CmpMode
operator|.
name|BOTH_OLD
argument_list|,
name|selected
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getDatePattern
argument_list|()
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getDatePattern
argument_list|()
argument_list|,
name|CmpMode
operator|.
name|BOTH_NEW
argument_list|,
name|selected
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
operator|(
name|clazz
operator|!=
literal|null
operator|&&
name|clazz
operator|.
name|hasDistanceConflict
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|distantConflict
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|backToBackDistance
argument_list|(
name|clazz
operator|.
name|getBackToBackRooms
argument_list|()
argument_list|,
name|clazz
operator|.
name|getBackToBackDistance
argument_list|()
argument_list|)
argument_list|,
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|,
name|CmpMode
operator|.
name|BOTH_OLD
argument_list|,
name|selected
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|,
name|CmpMode
operator|.
name|BOTH_OLD
argument_list|,
name|selected
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|,
name|CmpMode
operator|.
name|BOTH_NEW
argument_list|,
name|selected
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|InstructorCell
argument_list|(
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getInstructors
argument_list|()
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getInstructorEmails
argument_list|()
argument_list|,
literal|", "
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getParentSection
argument_list|()
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getParentSection
argument_list|()
argument_list|,
name|CmpMode
operator|.
name|SINGLE
argument_list|,
name|selected
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
name|icons
argument_list|)
decl_stmt|;
name|String
name|style
init|=
operator|(
name|selected
condition|?
literal|"text-blue"
else|:
literal|""
operator|)
operator|+
operator|(
name|lastSize
operator|>
literal|0
operator|&&
name|rows
operator|.
name|size
argument_list|()
operator|==
name|lastSize
condition|?
literal|" top-border-solid"
else|:
name|clazzIdx
operator|==
literal|0
operator|&&
operator|!
name|rows
operator|.
name|isEmpty
argument_list|()
condition|?
literal|" top-border-dashed"
else|:
literal|""
operator|)
decl_stmt|;
name|row
operator|.
name|setId
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|suggestionId
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|style
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|getCell
argument_list|(
literal|0
argument_list|)
operator|.
name|setStyleName
argument_list|(
operator|(
name|lastSize
operator|>
literal|0
operator|&&
name|rows
operator|.
name|size
argument_list|()
operator|==
name|lastSize
condition|?
literal|"top-border-solid"
else|:
literal|""
operator|)
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|row
operator|.
name|setAriaLabel
argument_list|(
name|ARIA
operator|.
name|assigned
argument_list|(
operator|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|course
argument_list|(
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
argument_list|)
else|:
name|MESSAGES
operator|.
name|clazz
argument_list|(
name|clazz
operator|.
name|getSubject
argument_list|()
argument_list|,
name|clazz
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
operator|)
operator|+
literal|" "
operator|+
name|clazz
operator|.
name|getTimeStringAria
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|ARIA
operator|.
name|arrangeHours
argument_list|()
argument_list|)
operator|+
literal|" "
operator|+
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|clazzIdx
operator|++
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|sameCourse
operator|.
name|isEmpty
argument_list|()
operator|||
operator|!
name|sameCourse
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isCourseAssigned
argument_list|()
condition|)
continue|continue;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
name|sameCourse
operator|.
name|size
argument_list|()
condition|;
name|idx
operator|++
control|)
block|{
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|old
init|=
name|sameCourse
operator|.
name|get
argument_list|(
name|idx
argument_list|)
decl_stmt|;
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
init|=
literal|null
decl_stmt|;
name|WebTable
operator|.
name|IconsCell
name|icons
init|=
operator|new
name|WebTable
operator|.
name|IconsCell
argument_list|()
decl_stmt|;
if|if
condition|(
name|old
operator|!=
literal|null
operator|&&
name|old
operator|.
name|isSaved
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|saved
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|saved
argument_list|(
name|MESSAGES
operator|.
name|clazz
argument_list|(
name|old
operator|.
name|getSubject
argument_list|()
argument_list|,
name|old
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|old
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|old
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|course
operator|.
name|isLocked
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|courseLocked
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|courseLocked
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
operator|+
literal|" "
operator|+
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|old
operator|!=
literal|null
operator|&&
name|old
operator|.
name|isOfHighDemand
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|highDemand
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|highDemand
argument_list|(
name|old
operator|.
name|getExpected
argument_list|()
argument_list|,
name|old
operator|.
name|getAvailableLimit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|old
operator|!=
literal|null
operator|&&
name|old
operator|.
name|hasNote
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|note
argument_list|()
argument_list|,
name|old
operator|.
name|getNote
argument_list|()
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rows
operator|.
name|size
argument_list|()
operator|==
name|lastSize
condition|?
name|suggestionId
operator|+
literal|"."
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|idx
operator|>
literal|0
condition|?
literal|""
else|:
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
else|:
name|course
operator|.
name|getSubject
argument_list|()
argument_list|)
operator|.
name|aria
argument_list|(
name|idx
operator|==
literal|0
condition|?
literal|""
else|:
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
else|:
name|course
operator|.
name|getSubject
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|idx
operator|>
literal|0
condition|?
literal|""
else|:
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
else|:
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
operator|.
name|aria
argument_list|(
name|idx
operator|==
literal|0
condition|?
literal|""
else|:
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
else|:
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|CmpMode
operator|.
name|SINGLE
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getSection
argument_list|()
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|,
name|CmpMode
operator|.
name|SINGLE
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
comment|//new WebTable.Cell(compare(old == null ? null : old.getLimitString(), clazz == null ? null : clazz.getLimitString(), false)),
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getTimeString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getTimeString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|,
name|CmpMode
operator|.
name|BOTH_OLD
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getTimeString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getTimeString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|,
name|CmpMode
operator|.
name|BOTH_NEW
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getDatePattern
argument_list|()
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getDatePattern
argument_list|()
argument_list|,
name|CmpMode
operator|.
name|BOTH_OLD
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getDatePattern
argument_list|()
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getDatePattern
argument_list|()
argument_list|,
name|CmpMode
operator|.
name|BOTH_NEW
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
operator|(
name|old
operator|!=
literal|null
operator|&&
name|old
operator|.
name|hasDistanceConflict
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|distantConflict
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|backToBackDistance
argument_list|(
name|old
operator|.
name|getBackToBackRooms
argument_list|()
argument_list|,
name|old
operator|.
name|getBackToBackDistance
argument_list|()
argument_list|)
argument_list|,
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|,
name|CmpMode
operator|.
name|BOTH_OLD
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|,
name|CmpMode
operator|.
name|BOTH_OLD
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|,
name|CmpMode
operator|.
name|BOTH_NEW
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
comment|//new WebTable.Cell(compare(old == null ? null : old.getInstructors(", "), clazz == null ? null : clazz.getInstructors(", "), true)),
operator|new
name|WebTable
operator|.
name|InstructorCell
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getInstructors
argument_list|()
argument_list|,
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getInstructorEmails
argument_list|()
argument_list|,
literal|", "
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getParentSection
argument_list|()
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getParentSection
argument_list|()
argument_list|,
name|CmpMode
operator|.
name|SINGLE
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
name|icons
argument_list|)
decl_stmt|;
name|row
operator|.
name|setId
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|suggestionId
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|style
init|=
literal|"text-red"
operator|+
operator|(
name|lastSize
operator|>
literal|0
operator|&&
name|rows
operator|.
name|size
argument_list|()
operator|==
name|lastSize
condition|?
literal|" top-border-solid"
else|:
name|idx
operator|==
literal|0
operator|&&
operator|!
name|rows
operator|.
name|isEmpty
argument_list|()
condition|?
literal|" top-border-dashed"
else|:
literal|""
operator|)
decl_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|row
operator|.
name|getCell
argument_list|(
literal|0
argument_list|)
operator|.
name|setStyleName
argument_list|(
operator|(
name|lastSize
operator|>
literal|0
operator|&&
name|rows
operator|.
name|size
argument_list|()
operator|==
name|lastSize
condition|?
literal|"top-border-solid"
else|:
literal|""
operator|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|setAriaLabel
argument_list|(
name|ARIA
operator|.
name|unassigned
argument_list|(
operator|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|course
argument_list|(
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
argument_list|)
else|:
name|MESSAGES
operator|.
name|clazz
argument_list|(
name|old
operator|.
name|getSubject
argument_list|()
argument_list|,
name|old
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|old
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|old
operator|.
name|getSection
argument_list|()
argument_list|)
operator|)
operator|+
literal|" "
operator|+
name|old
operator|.
name|getTimeStringAria
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|ARIA
operator|.
name|arrangeHours
argument_list|()
argument_list|)
operator|+
literal|" "
operator|+
name|old
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|Long
name|lastCourseId
init|=
literal|null
decl_stmt|;
name|current
label|:
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|old
range|:
name|iCurrent
control|)
block|{
if|if
condition|(
name|old
operator|==
literal|null
operator|||
name|old
operator|.
name|isFreeTime
argument_list|()
condition|)
continue|continue;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|course
range|:
name|suggestion
operator|.
name|getCourseAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|old
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|course
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
continue|continue
name|current
continue|;
block|}
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
init|=
literal|null
decl_stmt|;
name|WebTable
operator|.
name|IconsCell
name|icons
init|=
operator|new
name|WebTable
operator|.
name|IconsCell
argument_list|()
decl_stmt|;
if|if
condition|(
name|old
operator|!=
literal|null
operator|&&
name|old
operator|.
name|isSaved
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|saved
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|saved
argument_list|(
name|MESSAGES
operator|.
name|clazz
argument_list|(
name|old
operator|.
name|getSubject
argument_list|()
argument_list|,
name|old
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|old
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|old
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|old
operator|!=
literal|null
operator|&&
name|old
operator|.
name|isOfHighDemand
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|highDemand
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|highDemand
argument_list|(
name|old
operator|.
name|getExpected
argument_list|()
argument_list|,
name|old
operator|.
name|getAvailableLimit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|old
operator|!=
literal|null
operator|&&
name|old
operator|.
name|hasNote
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|note
argument_list|()
argument_list|,
name|old
operator|.
name|getNote
argument_list|()
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rows
operator|.
name|size
argument_list|()
operator|==
name|lastSize
condition|?
name|suggestionId
operator|+
literal|"."
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|old
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|lastCourseId
argument_list|)
condition|?
literal|""
else|:
name|old
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
else|:
name|old
operator|.
name|getSubject
argument_list|()
argument_list|)
operator|.
name|aria
argument_list|(
operator|!
name|old
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|lastCourseId
argument_list|)
condition|?
literal|""
else|:
name|old
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
else|:
name|old
operator|.
name|getSubject
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|old
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|lastCourseId
argument_list|)
condition|?
literal|""
else|:
name|old
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
else|:
name|old
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
operator|.
name|aria
argument_list|(
operator|!
name|old
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|lastCourseId
argument_list|)
condition|?
literal|""
else|:
name|old
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
else|:
name|old
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|CmpMode
operator|.
name|SINGLE
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getSection
argument_list|()
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|,
name|CmpMode
operator|.
name|SINGLE
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
comment|//new WebTable.Cell(compare(old == null ? null : old.getLimitString(), clazz == null ? null : clazz.getLimitString(), false)),
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getTimeString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getTimeString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|,
name|CmpMode
operator|.
name|BOTH_OLD
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getTimeString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getTimeString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|,
name|CmpMode
operator|.
name|BOTH_NEW
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getDatePattern
argument_list|()
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getDatePattern
argument_list|()
argument_list|,
name|CmpMode
operator|.
name|BOTH_OLD
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getDatePattern
argument_list|()
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getDatePattern
argument_list|()
argument_list|,
name|CmpMode
operator|.
name|BOTH_NEW
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
operator|(
name|old
operator|!=
literal|null
operator|&&
name|old
operator|.
name|hasDistanceConflict
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|distantConflict
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|backToBackDistance
argument_list|(
name|old
operator|.
name|getBackToBackRooms
argument_list|()
argument_list|,
name|old
operator|.
name|getBackToBackDistance
argument_list|()
argument_list|)
argument_list|,
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|,
name|CmpMode
operator|.
name|BOTH_OLD
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|,
name|CmpMode
operator|.
name|BOTH_OLD
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|,
name|CmpMode
operator|.
name|BOTH_NEW
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
comment|//new WebTable.Cell(compare(old == null ? null : old.getInstructors(", "), clazz == null ? null : clazz.getInstructors(", "), true)),
operator|new
name|WebTable
operator|.
name|InstructorCell
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getInstructors
argument_list|()
argument_list|,
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getInstructorEmails
argument_list|()
argument_list|,
literal|", "
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|compare
argument_list|(
name|old
operator|==
literal|null
condition|?
literal|null
else|:
name|old
operator|.
name|getParentSection
argument_list|()
argument_list|,
name|clazz
operator|==
literal|null
condition|?
literal|null
else|:
name|clazz
operator|.
name|getParentSection
argument_list|()
argument_list|,
name|CmpMode
operator|.
name|SINGLE
argument_list|,
literal|false
argument_list|,
name|clazz
operator|==
literal|null
argument_list|)
argument_list|)
argument_list|,
name|icons
argument_list|)
decl_stmt|;
name|row
operator|.
name|setId
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|suggestionId
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|style
init|=
literal|"text-red"
operator|+
operator|(
name|lastSize
operator|>
literal|0
operator|&&
name|rows
operator|.
name|size
argument_list|()
operator|==
name|lastSize
condition|?
literal|" top-border-solid"
else|:
operator|!
name|old
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|lastCourseId
argument_list|)
operator|&&
operator|!
name|rows
operator|.
name|isEmpty
argument_list|()
condition|?
literal|" top-border-dashed"
else|:
literal|""
operator|)
decl_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|row
operator|.
name|getCell
argument_list|(
literal|0
argument_list|)
operator|.
name|setStyleName
argument_list|(
operator|(
name|lastSize
operator|>
literal|0
operator|&&
name|rows
operator|.
name|size
argument_list|()
operator|==
name|lastSize
condition|?
literal|" top-border-solid"
else|:
literal|""
operator|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|setAriaLabel
argument_list|(
name|ARIA
operator|.
name|unassigned
argument_list|(
operator|(
name|old
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|course
argument_list|(
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
argument_list|)
else|:
name|MESSAGES
operator|.
name|clazz
argument_list|(
name|old
operator|.
name|getSubject
argument_list|()
argument_list|,
name|old
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|old
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|old
operator|.
name|getSection
argument_list|()
argument_list|)
operator|)
operator|+
literal|" "
operator|+
name|old
operator|.
name|getTimeStringAria
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|ARIA
operator|.
name|arrangeHours
argument_list|()
argument_list|)
operator|+
literal|" "
operator|+
name|old
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|lastCourseId
operator|=
name|old
operator|.
name|getCourseId
argument_list|()
expr_stmt|;
block|}
name|lastSize
operator|=
name|rows
operator|.
name|size
argument_list|()
expr_stmt|;
name|suggestionId
operator|++
expr_stmt|;
block|}
name|WebTable
operator|.
name|Row
index|[]
name|rowArray
init|=
operator|new
name|WebTable
operator|.
name|Row
index|[
name|rows
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Row
name|row
range|:
name|rows
control|)
name|rowArray
index|[
name|idx
operator|++
index|]
operator|=
name|row
expr_stmt|;
name|iSuggestions
operator|.
name|setData
argument_list|(
name|rowArray
argument_list|)
expr_stmt|;
if|if
condition|(
name|rows
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|iFilter
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iSuggestions
operator|.
name|setEmptyMessage
argument_list|(
name|MESSAGES
operator|.
name|suggestionsNoAlternative
argument_list|(
name|iSource
argument_list|)
argument_list|)
expr_stmt|;
name|ariaStatus
operator|=
name|ARIA
operator|.
name|suggestionsNoAlternative
argument_list|(
name|iSource
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iSuggestions
operator|.
name|setEmptyMessage
argument_list|(
name|MESSAGES
operator|.
name|suggestionsNoAlternativeWithFilter
argument_list|(
name|iSource
argument_list|,
name|iFilter
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ariaStatus
operator|=
name|ARIA
operator|.
name|suggestionsNoAlternativeWithFilter
argument_list|(
name|iSource
argument_list|,
name|iFilter
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|ariaStatus
operator|=
name|ARIA
operator|.
name|showingAlternatives
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|rows
operator|.
name|get
argument_list|(
name|rows
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
name|iSource
argument_list|)
expr_stmt|;
block|}
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|center
argument_list|()
expr_stmt|;
if|if
condition|(
name|ariaStatus
operator|!=
literal|null
condition|)
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setHTML
argument_list|(
name|ariaStatus
argument_list|)
expr_stmt|;
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|iFilter
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
expr_stmt|;
name|iSuggestions
operator|.
name|addRowClickHandler
argument_list|(
operator|new
name|WebTable
operator|.
name|RowClickHandler
argument_list|()
block|{
specifier|public
name|void
name|onRowClick
parameter_list|(
name|RowClickEvent
name|event
parameter_list|)
block|{
name|ClassAssignmentInterface
name|suggestion
init|=
name|iResult
operator|.
name|get
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|event
operator|.
name|getRow
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|SuggestionSelectedEvent
name|e
init|=
operator|new
name|SuggestionSelectedEvent
argument_list|(
name|suggestion
argument_list|)
decl_stmt|;
for|for
control|(
name|SuggestionSelectedHandler
name|h
range|:
name|iSuggestionSelectedHandlers
control|)
name|h
operator|.
name|onSuggestionSelected
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|addKeyDownHandler
argument_list|(
operator|new
name|KeyDownHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyDown
parameter_list|(
name|KeyDownEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_ENTER
condition|)
block|{
if|if
condition|(
name|iSuggestions
operator|.
name|getSelectedRow
argument_list|()
operator|>=
literal|0
condition|)
block|{
name|ClassAssignmentInterface
name|suggestion
init|=
name|iResult
operator|.
name|get
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|iSuggestions
operator|.
name|getRows
argument_list|()
index|[
name|iSuggestions
operator|.
name|getSelectedRow
argument_list|()
index|]
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|SuggestionSelectedEvent
name|e
init|=
operator|new
name|SuggestionSelectedEvent
argument_list|(
name|suggestion
argument_list|)
decl_stmt|;
for|for
control|(
name|SuggestionSelectedHandler
name|h
range|:
name|iSuggestionSelectedHandlers
control|)
name|h
operator|.
name|onSuggestionSelected
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|hide
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|suggestionsLoading
argument_list|()
argument_list|)
expr_stmt|;
name|iSectioningService
operator|.
name|computeSuggestions
argument_list|(
name|iOnline
argument_list|,
name|iRequest
argument_list|,
name|iCurrent
argument_list|,
name|iIndex
argument_list|,
name|iFilter
operator|.
name|getText
argument_list|()
argument_list|,
name|iCallback
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iSearch
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|suggestionsLoading
argument_list|()
argument_list|)
expr_stmt|;
name|iSectioningService
operator|.
name|computeSuggestions
argument_list|(
name|iOnline
argument_list|,
name|iRequest
argument_list|,
name|iCurrent
argument_list|,
name|iIndex
argument_list|,
name|iFilter
operator|.
name|getText
argument_list|()
argument_list|,
name|iCallback
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iGrid
operator|=
operator|new
name|TimeGrid
argument_list|(
name|color
argument_list|)
expr_stmt|;
name|iHint
operator|=
operator|new
name|PopupPanel
argument_list|()
expr_stmt|;
name|iHint
operator|.
name|setStyleName
argument_list|(
literal|"unitime-SuggestionsHint"
argument_list|)
expr_stmt|;
name|iHideHint
operator|=
operator|new
name|Timer
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
if|if
condition|(
name|iHint
operator|.
name|isShowing
argument_list|()
condition|)
name|iHint
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
expr_stmt|;
name|iSuggestions
operator|.
name|addRowOverHandler
argument_list|(
operator|new
name|WebTable
operator|.
name|RowOverHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onRowOver
parameter_list|(
specifier|final
name|WebTable
operator|.
name|RowOverEvent
name|event
parameter_list|)
block|{
name|iHideHint
operator|.
name|cancel
argument_list|()
expr_stmt|;
if|if
condition|(
name|iHint
operator|.
name|isShowing
argument_list|()
operator|&&
name|event
operator|.
name|getRow
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|iHintId
argument_list|)
condition|)
return|return;
if|if
condition|(
operator|!
name|event
operator|.
name|getRow
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|iHintId
argument_list|)
condition|)
block|{
name|ClassAssignmentInterface
name|suggestion
init|=
name|iResult
operator|.
name|get
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|event
operator|.
name|getRow
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|index
init|=
literal|0
decl_stmt|;
name|iGrid
operator|.
name|clear
argument_list|(
literal|false
argument_list|)
expr_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|course
range|:
name|suggestion
operator|.
name|getCourseAssignments
argument_list|()
control|)
block|{
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
range|:
name|course
operator|.
name|getClassAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|clazz
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
name|CourseRequestInterface
operator|.
name|FreeTime
name|ft
init|=
operator|new
name|CourseRequestInterface
operator|.
name|FreeTime
argument_list|()
decl_stmt|;
name|ft
operator|.
name|setLength
argument_list|(
name|clazz
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|ft
operator|.
name|setStart
argument_list|(
name|clazz
operator|.
name|getStart
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|d
range|:
name|clazz
operator|.
name|getDays
argument_list|()
control|)
name|ft
operator|.
name|addDay
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|iGrid
operator|.
name|addFreeTime
argument_list|(
name|ft
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|clazz
operator|.
name|isAssigned
argument_list|()
condition|)
block|{
name|iGrid
operator|.
name|addClass
argument_list|(
name|clazz
argument_list|,
name|index
operator|++
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|TimeGrid
name|w
init|=
operator|(
name|TimeGrid
operator|)
name|iGrid
operator|.
name|getPrintWidget
argument_list|()
decl_stmt|;
name|w
operator|.
name|addStyleName
argument_list|(
literal|"unitime-SuggestionsHintWidget"
argument_list|)
expr_stmt|;
name|iHint
operator|.
name|setWidget
argument_list|(
operator|new
name|SimplePanel
argument_list|(
name|w
argument_list|)
argument_list|)
expr_stmt|;
name|iHint
operator|.
name|setSize
argument_list|(
operator|(
name|w
operator|.
name|getWidth
argument_list|()
operator|/
literal|2
operator|)
operator|+
literal|"px"
argument_list|,
operator|(
name|w
operator|.
name|getHeight
argument_list|()
operator|/
literal|2
operator|)
operator|+
literal|"px"
argument_list|)
expr_stmt|;
name|iHintId
operator|=
name|event
operator|.
name|getRow
argument_list|()
operator|.
name|getId
argument_list|()
expr_stmt|;
block|}
name|iHint
operator|.
name|setPopupPositionAndShow
argument_list|(
operator|new
name|PopupPanel
operator|.
name|PositionCallback
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|setPosition
parameter_list|(
name|int
name|offsetWidth
parameter_list|,
name|int
name|offsetHeight
parameter_list|)
block|{
name|Element
name|tr
init|=
name|iSuggestions
operator|.
name|getTable
argument_list|()
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|getElement
argument_list|(
name|event
operator|.
name|getRowIdx
argument_list|()
argument_list|)
decl_stmt|;
name|boolean
name|top
init|=
operator|(
name|tr
operator|.
name|getAbsoluteBottom
argument_list|()
operator|-
name|Window
operator|.
name|getScrollTop
argument_list|()
operator|+
literal|30
operator|+
name|offsetHeight
operator|>
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|)
decl_stmt|;
name|iHint
operator|.
name|setPopupPosition
argument_list|(
name|Math
operator|.
name|max
argument_list|(
name|Math
operator|.
name|min
argument_list|(
name|event
operator|.
name|getEvent
argument_list|()
operator|.
name|getClientX
argument_list|()
operator|+
literal|15
argument_list|,
name|tr
operator|.
name|getAbsoluteRight
argument_list|()
operator|-
name|offsetWidth
operator|-
literal|15
argument_list|)
argument_list|,
name|tr
operator|.
name|getAbsoluteLeft
argument_list|()
operator|+
literal|15
argument_list|)
argument_list|,
name|top
condition|?
name|tr
operator|.
name|getAbsoluteTop
argument_list|()
operator|-
name|offsetHeight
operator|-
literal|30
else|:
name|tr
operator|.
name|getAbsoluteBottom
argument_list|()
operator|+
literal|30
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iSuggestions
operator|.
name|addRowOutHandler
argument_list|(
operator|new
name|WebTable
operator|.
name|RowOutHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onRowOut
parameter_list|(
name|WebTable
operator|.
name|RowOutEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iHint
operator|.
name|isShowing
argument_list|()
condition|)
name|iHideHint
operator|.
name|schedule
argument_list|(
literal|500
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iSuggestions
operator|.
name|addRowMoveHandler
argument_list|(
operator|new
name|WebTable
operator|.
name|RowMoveHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onRowMove
parameter_list|(
name|WebTable
operator|.
name|RowMoveEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iHint
operator|.
name|isShowing
argument_list|()
condition|)
block|{
if|if
condition|(
name|event
operator|.
name|getRowIdx
argument_list|()
operator|<
literal|0
condition|)
block|{
name|iHint
operator|.
name|hide
argument_list|()
expr_stmt|;
return|return;
block|}
name|Element
name|tr
init|=
name|iSuggestions
operator|.
name|getTable
argument_list|()
operator|.
name|getRowFormatter
argument_list|()
operator|.
name|getElement
argument_list|(
name|event
operator|.
name|getRowIdx
argument_list|()
argument_list|)
decl_stmt|;
name|boolean
name|top
init|=
operator|(
name|tr
operator|.
name|getAbsoluteBottom
argument_list|()
operator|-
name|Window
operator|.
name|getScrollTop
argument_list|()
operator|+
literal|30
operator|+
name|iHint
operator|.
name|getOffsetHeight
argument_list|()
operator|>
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|)
decl_stmt|;
name|iHint
operator|.
name|setPopupPosition
argument_list|(
name|Math
operator|.
name|max
argument_list|(
name|Math
operator|.
name|min
argument_list|(
name|event
operator|.
name|getEvent
argument_list|()
operator|.
name|getClientX
argument_list|()
operator|+
literal|15
argument_list|,
name|tr
operator|.
name|getAbsoluteRight
argument_list|()
operator|-
name|iHint
operator|.
name|getOffsetWidth
argument_list|()
operator|-
literal|15
argument_list|)
argument_list|,
name|tr
operator|.
name|getAbsoluteLeft
argument_list|()
operator|+
literal|15
argument_list|)
argument_list|,
name|top
condition|?
name|tr
operator|.
name|getAbsoluteTop
argument_list|()
operator|-
name|iHint
operator|.
name|getOffsetHeight
argument_list|()
operator|-
literal|30
else|:
name|tr
operator|.
name|getAbsoluteBottom
argument_list|()
operator|+
literal|30
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|addCloseHandler
argument_list|(
operator|new
name|CloseHandler
argument_list|<
name|PopupPanel
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClose
parameter_list|(
name|CloseEvent
argument_list|<
name|PopupPanel
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|iHint
operator|.
name|isShowing
argument_list|()
condition|)
name|iHint
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iHideHint
operator|.
name|cancel
argument_list|()
expr_stmt|;
name|RootPanel
operator|.
name|getBodyElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setOverflow
argument_list|(
name|Overflow
operator|.
name|AUTO
argument_list|)
expr_stmt|;
name|iFilterPanel
operator|.
name|hideHint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|setWidget
argument_list|(
name|suggestionPanel
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|center
parameter_list|()
block|{
name|super
operator|.
name|center
argument_list|()
expr_stmt|;
name|RootPanel
operator|.
name|getBodyElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setOverflow
argument_list|(
name|Overflow
operator|.
name|HIDDEN
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
enum|enum
name|CmpMode
block|{
name|SINGLE
block|,
name|BOTH_OLD
block|,
name|BOTH_NEW
block|,
name|ARIA
block|}
empty_stmt|;
specifier|private
name|String
name|compare
parameter_list|(
name|String
name|oldVal
parameter_list|,
name|String
name|newVal
parameter_list|,
name|CmpMode
name|mode
parameter_list|,
name|boolean
name|selected
parameter_list|,
name|boolean
name|conflict
parameter_list|)
block|{
switch|switch
condition|(
name|mode
condition|)
block|{
case|case
name|ARIA
case|:
return|return
operator|(
name|newVal
operator|!=
literal|null
operator|&&
operator|!
name|newVal
operator|.
name|isEmpty
argument_list|()
condition|?
name|newVal
else|:
name|oldVal
operator|!=
literal|null
condition|?
name|oldVal
else|:
literal|""
operator|)
return|;
case|case
name|SINGLE
case|:
return|return
operator|(
name|newVal
operator|!=
literal|null
operator|&&
operator|!
name|newVal
operator|.
name|isEmpty
argument_list|()
condition|?
name|newVal
else|:
name|oldVal
operator|!=
literal|null
condition|?
literal|"<font color='"
operator|+
operator|(
name|conflict
condition|?
literal|"red"
else|:
name|selected
condition|?
literal|"#9999FF"
else|:
literal|"#999999"
operator|)
operator|+
literal|"'>"
operator|+
name|oldVal
operator|+
literal|"</font>"
else|:
literal|null
operator|)
return|;
case|case
name|BOTH_OLD
case|:
return|return
operator|(
name|oldVal
operator|==
literal|null
operator|||
name|oldVal
operator|.
name|isEmpty
argument_list|()
condition|?
name|newVal
else|:
name|newVal
operator|==
literal|null
operator|||
name|newVal
operator|.
name|isEmpty
argument_list|()
condition|?
literal|"<font color='"
operator|+
operator|(
name|conflict
condition|?
literal|"red"
else|:
name|selected
condition|?
literal|"#9999FF"
else|:
literal|"#999999"
operator|)
operator|+
literal|"'>"
operator|+
name|oldVal
operator|+
literal|"</font>"
else|:
name|oldVal
operator|.
name|equals
argument_list|(
name|newVal
argument_list|)
condition|?
name|oldVal
else|:
literal|"<font color='"
operator|+
operator|(
name|selected
condition|?
literal|"#9999FF"
else|:
literal|"#999999"
operator|)
operator|+
literal|"'>"
operator|+
name|oldVal
operator|+
literal|"</font>"
operator|)
return|;
case|case
name|BOTH_NEW
case|:
return|return
operator|(
name|oldVal
operator|!=
literal|null
operator|&&
operator|!
name|oldVal
operator|.
name|isEmpty
argument_list|()
operator|&&
name|newVal
operator|!=
literal|null
operator|&&
operator|!
name|newVal
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
name|newVal
operator|.
name|equals
argument_list|(
name|oldVal
argument_list|)
condition|?
literal|"<font color='#"
operator|+
operator|(
name|selected
condition|?
literal|"#9999FF"
else|:
literal|"#999999"
operator|)
operator|+
literal|"'>&rarr;</font> "
operator|+
name|newVal
else|:
literal|null
operator|)
return|;
default|default:
return|return
name|newVal
return|;
block|}
block|}
specifier|public
name|void
name|open
parameter_list|(
name|CourseRequestInterface
name|request
parameter_list|,
name|ArrayList
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
name|rows
parameter_list|,
name|int
name|index
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|suggestionsLoading
argument_list|()
argument_list|)
expr_stmt|;
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|row
init|=
name|rows
operator|.
name|get
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|iAssignment
operator|=
name|row
expr_stmt|;
name|iCurrent
operator|=
name|rows
expr_stmt|;
name|iSource
operator|=
literal|null
expr_stmt|;
name|iRequest
operator|=
name|request
expr_stmt|;
name|iIndex
operator|=
name|index
expr_stmt|;
name|iHintId
operator|=
literal|null
expr_stmt|;
if|if
condition|(
name|row
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
name|iSource
operator|=
name|MESSAGES
operator|.
name|freeTime
argument_list|(
name|row
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
argument_list|,
name|row
operator|.
name|getStartString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|,
name|row
operator|.
name|getEndString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|row
operator|.
name|getSubpart
argument_list|()
operator|==
literal|null
condition|)
name|iSource
operator|=
name|MESSAGES
operator|.
name|course
argument_list|(
name|row
operator|.
name|getSubject
argument_list|()
argument_list|,
name|row
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|iSource
operator|=
name|MESSAGES
operator|.
name|clazz
argument_list|(
name|row
operator|.
name|getSubject
argument_list|()
argument_list|,
name|row
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|row
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|row
operator|.
name|getSection
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|setText
argument_list|(
name|MESSAGES
operator|.
name|suggestionsAlternatives
argument_list|(
name|iSource
argument_list|)
argument_list|)
expr_stmt|;
name|iSuggestions
operator|.
name|setSelectedRow
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|iSuggestions
operator|.
name|clearData
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iSuggestions
operator|.
name|setEmptyMessage
argument_list|(
name|MESSAGES
operator|.
name|suggestionsLoading
argument_list|()
argument_list|)
expr_stmt|;
name|iLegend
operator|.
name|setHTML
argument_list|(
name|row
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|suggestionsLegendOnFreeTime
argument_list|(
name|row
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
operator|+
literal|" "
operator|+
name|row
operator|.
name|getStartString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
operator|+
literal|" - "
operator|+
name|row
operator|.
name|getEndString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
else|:
name|row
operator|.
name|isAssigned
argument_list|()
condition|?
name|MESSAGES
operator|.
name|suggestionsLegendOnClass
argument_list|(
name|MESSAGES
operator|.
name|clazz
argument_list|(
name|row
operator|.
name|getSubject
argument_list|()
argument_list|,
name|row
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|row
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|row
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|)
else|:
name|MESSAGES
operator|.
name|suggestionsLegendOnCourse
argument_list|(
name|MESSAGES
operator|.
name|course
argument_list|(
name|row
operator|.
name|getSubject
argument_list|()
argument_list|,
name|row
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iMessages
operator|.
name|setHTML
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iFilter
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iSectioningService
operator|.
name|computeSuggestions
argument_list|(
name|iOnline
argument_list|,
name|request
argument_list|,
name|rows
argument_list|,
name|index
argument_list|,
name|iFilter
operator|.
name|getText
argument_list|()
argument_list|,
name|iCallback
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|onPreviewNativeEvent
parameter_list|(
name|NativePreviewEvent
name|event
parameter_list|)
block|{
name|super
operator|.
name|onPreviewNativeEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|DOM
operator|.
name|eventGetType
argument_list|(
operator|(
name|Event
operator|)
name|event
operator|.
name|getNativeEvent
argument_list|()
argument_list|)
condition|)
block|{
case|case
name|Event
operator|.
name|ONKEYUP
case|:
if|if
condition|(
name|DOM
operator|.
name|eventGetKeyCode
argument_list|(
operator|(
name|Event
operator|)
name|event
operator|.
name|getNativeEvent
argument_list|()
argument_list|)
operator|==
name|KeyCodes
operator|.
name|KEY_ESCAPE
condition|)
block|{
name|hide
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|DOM
operator|.
name|eventGetKeyCode
argument_list|(
operator|(
name|Event
operator|)
name|event
operator|.
name|getNativeEvent
argument_list|()
argument_list|)
operator|==
name|KeyCodes
operator|.
name|KEY_DOWN
condition|)
block|{
if|if
condition|(
name|iSuggestions
operator|.
name|getRowsCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|String
name|id
init|=
operator|(
name|iSuggestions
operator|.
name|getSelectedRow
argument_list|()
operator|<
literal|0
condition|?
literal|null
else|:
name|iSuggestions
operator|.
name|getRows
argument_list|()
index|[
name|iSuggestions
operator|.
name|getSelectedRow
argument_list|()
index|]
operator|.
name|getId
argument_list|()
operator|)
decl_stmt|;
name|int
name|row
init|=
name|iSuggestions
operator|.
name|getSelectedRow
argument_list|()
operator|+
literal|1
decl_stmt|;
while|while
condition|(
name|id
operator|!=
literal|null
operator|&&
name|id
operator|.
name|equals
argument_list|(
name|iSuggestions
operator|.
name|getRows
argument_list|()
index|[
name|row
operator|%
name|iSuggestions
operator|.
name|getRowsCount
argument_list|()
index|]
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
name|row
operator|++
expr_stmt|;
name|iSuggestions
operator|.
name|setSelectedRow
argument_list|(
name|row
operator|%
name|iSuggestions
operator|.
name|getRowsCount
argument_list|()
argument_list|)
expr_stmt|;
name|ClassAssignmentInterface
name|suggestion
init|=
name|iResult
operator|.
name|get
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|iSuggestions
operator|.
name|getRows
argument_list|()
index|[
name|iSuggestions
operator|.
name|getSelectedRow
argument_list|()
index|]
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setText
argument_list|(
name|ARIA
operator|.
name|showingAlternative
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|iSuggestions
operator|.
name|getRows
argument_list|()
index|[
name|iSuggestions
operator|.
name|getSelectedRow
argument_list|()
index|]
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
name|Integer
operator|.
name|parseInt
argument_list|(
name|iSuggestions
operator|.
name|getRows
argument_list|()
index|[
name|iSuggestions
operator|.
name|getRows
argument_list|()
operator|.
name|length
operator|-
literal|1
index|]
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
name|toString
argument_list|(
name|suggestion
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|DOM
operator|.
name|eventGetKeyCode
argument_list|(
operator|(
name|Event
operator|)
name|event
operator|.
name|getNativeEvent
argument_list|()
argument_list|)
operator|==
name|KeyCodes
operator|.
name|KEY_UP
condition|)
block|{
if|if
condition|(
name|iSuggestions
operator|.
name|getRowsCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|int
name|row
init|=
name|iSuggestions
operator|.
name|getSelectedRow
argument_list|()
operator|<=
literal|0
condition|?
name|iSuggestions
operator|.
name|getRowsCount
argument_list|()
operator|-
literal|1
else|:
name|iSuggestions
operator|.
name|getSelectedRow
argument_list|()
operator|-
literal|1
decl_stmt|;
name|String
name|id
init|=
name|iSuggestions
operator|.
name|getRows
argument_list|()
index|[
name|row
operator|%
name|iSuggestions
operator|.
name|getRowsCount
argument_list|()
index|]
operator|.
name|getId
argument_list|()
decl_stmt|;
while|while
condition|(
name|id
operator|.
name|equals
argument_list|(
name|iSuggestions
operator|.
name|getRows
argument_list|()
index|[
operator|(
name|iSuggestions
operator|.
name|getRowsCount
argument_list|()
operator|+
name|row
operator|-
literal|1
operator|)
operator|%
name|iSuggestions
operator|.
name|getRowsCount
argument_list|()
index|]
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
name|row
operator|--
expr_stmt|;
name|iSuggestions
operator|.
name|setSelectedRow
argument_list|(
operator|(
name|iSuggestions
operator|.
name|getRowsCount
argument_list|()
operator|+
name|row
operator|)
operator|%
name|iSuggestions
operator|.
name|getRowsCount
argument_list|()
argument_list|)
expr_stmt|;
name|ClassAssignmentInterface
name|suggestion
init|=
name|iResult
operator|.
name|get
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|iSuggestions
operator|.
name|getRows
argument_list|()
index|[
name|iSuggestions
operator|.
name|getSelectedRow
argument_list|()
index|]
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setText
argument_list|(
name|ARIA
operator|.
name|showingAlternative
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|iSuggestions
operator|.
name|getRows
argument_list|()
index|[
name|iSuggestions
operator|.
name|getSelectedRow
argument_list|()
index|]
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
name|Integer
operator|.
name|parseInt
argument_list|(
name|iSuggestions
operator|.
name|getRows
argument_list|()
index|[
name|iSuggestions
operator|.
name|getRows
argument_list|()
operator|.
name|length
operator|-
literal|1
index|]
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
name|toString
argument_list|(
name|suggestion
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|DOM
operator|.
name|eventGetKeyCode
argument_list|(
operator|(
name|Event
operator|)
name|event
operator|.
name|getNativeEvent
argument_list|()
argument_list|)
operator|==
name|KeyCodes
operator|.
name|KEY_ENTER
condition|)
block|{
if|if
condition|(
name|iSuggestions
operator|.
name|getSelectedRow
argument_list|()
operator|>=
literal|0
condition|)
block|{
name|ClassAssignmentInterface
name|suggestion
init|=
name|iResult
operator|.
name|get
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|iSuggestions
operator|.
name|getRows
argument_list|()
index|[
name|iSuggestions
operator|.
name|getSelectedRow
argument_list|()
index|]
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setText
argument_list|(
name|ARIA
operator|.
name|selectedAlternative
argument_list|(
name|toString
argument_list|(
name|suggestion
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|SuggestionSelectedEvent
name|e
init|=
operator|new
name|SuggestionSelectedEvent
argument_list|(
name|suggestion
argument_list|)
decl_stmt|;
for|for
control|(
name|SuggestionSelectedHandler
name|h
range|:
name|iSuggestionSelectedHandlers
control|)
name|h
operator|.
name|onSuggestionSelected
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
break|break;
block|}
block|}
specifier|private
name|String
name|toString
parameter_list|(
name|ClassAssignmentInterface
name|suggestion
parameter_list|)
block|{
name|String
name|ret
init|=
literal|""
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|course
range|:
name|suggestion
operator|.
name|getCourseAssignments
argument_list|()
control|)
block|{
name|ArrayList
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
name|sameCourse
init|=
operator|new
name|ArrayList
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|course
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|x
range|:
name|iCurrent
control|)
block|{
if|if
condition|(
name|x
operator|==
literal|null
condition|)
continue|continue;
if|if
condition|(
name|course
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|x
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
name|sameCourse
operator|.
name|add
argument_list|(
name|x
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
init|=
name|course
operator|.
name|getClassAssignments
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|x
range|:
name|iCurrent
control|)
block|{
if|if
condition|(
name|x
operator|==
literal|null
condition|)
continue|continue;
if|if
condition|(
name|x
operator|.
name|isFreeTime
argument_list|()
operator|&&
name|x
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
operator|.
name|equals
argument_list|(
name|clazz
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
argument_list|)
operator|&&
name|x
operator|.
name|getStart
argument_list|()
operator|==
name|clazz
operator|.
name|getStart
argument_list|()
operator|&&
name|x
operator|.
name|getLength
argument_list|()
operator|==
name|clazz
operator|.
name|getLength
argument_list|()
condition|)
name|sameCourse
operator|.
name|add
argument_list|(
name|x
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|course
operator|.
name|isAssigned
argument_list|()
condition|)
block|{
name|clazz
label|:
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
range|:
name|course
operator|.
name|getClassAssignments
argument_list|()
control|)
block|{
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|x
range|:
name|iCurrent
control|)
block|{
if|if
condition|(
name|x
operator|==
literal|null
condition|)
continue|continue;
if|if
condition|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
if|if
condition|(
name|x
operator|.
name|isFreeTime
argument_list|()
operator|&&
name|x
operator|.
name|isCourseAssigned
argument_list|()
operator|&&
name|x
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
operator|.
name|equals
argument_list|(
name|clazz
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
argument_list|)
operator|&&
name|x
operator|.
name|getStart
argument_list|()
operator|==
name|clazz
operator|.
name|getStart
argument_list|()
operator|&&
name|x
operator|.
name|getLength
argument_list|()
operator|==
name|clazz
operator|.
name|getLength
argument_list|()
condition|)
continue|continue
name|clazz
continue|;
block|}
else|else
block|{
if|if
condition|(
name|clazz
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|x
operator|.
name|getCourseId
argument_list|()
argument_list|)
operator|&&
name|clazz
operator|.
name|getClassId
argument_list|()
operator|.
name|equals
argument_list|(
name|x
operator|.
name|getClassId
argument_list|()
argument_list|)
condition|)
continue|continue
name|clazz
continue|;
comment|// the exact same assignment
if|if
condition|(
name|clazz
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|x
operator|.
name|getCourseId
argument_list|()
argument_list|)
operator|&&
name|clazz
operator|.
name|getSubpartId
argument_list|()
operator|.
name|equals
argument_list|(
name|x
operator|.
name|getSubpartId
argument_list|()
argument_list|)
condition|)
block|{
break|break;
block|}
block|}
block|}
name|ret
operator|+=
name|ARIA
operator|.
name|assigned
argument_list|(
operator|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|course
argument_list|(
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
argument_list|)
else|:
name|MESSAGES
operator|.
name|clazz
argument_list|(
name|clazz
operator|.
name|getSubject
argument_list|()
argument_list|,
name|clazz
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
operator|)
operator|+
literal|" "
operator|+
name|clazz
operator|.
name|getTimeStringAria
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|ARIA
operator|.
name|arrangeHours
argument_list|()
argument_list|)
operator|+
literal|" "
operator|+
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|sameCourse
operator|.
name|isEmpty
argument_list|()
operator|||
operator|!
name|sameCourse
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|isCourseAssigned
argument_list|()
condition|)
continue|continue;
for|for
control|(
name|int
name|idx
init|=
literal|0
init|;
name|idx
operator|<
name|sameCourse
operator|.
name|size
argument_list|()
condition|;
name|idx
operator|++
control|)
block|{
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|old
init|=
name|sameCourse
operator|.
name|get
argument_list|(
name|idx
argument_list|)
decl_stmt|;
name|ret
operator|+=
name|ARIA
operator|.
name|unassigned
argument_list|(
operator|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|course
argument_list|(
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
argument_list|)
else|:
name|MESSAGES
operator|.
name|clazz
argument_list|(
name|old
operator|.
name|getSubject
argument_list|()
argument_list|,
name|old
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|old
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|old
operator|.
name|getSection
argument_list|()
argument_list|)
operator|)
operator|+
literal|" "
operator|+
name|old
operator|.
name|getTimeStringAria
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|ARIA
operator|.
name|arrangeHours
argument_list|()
argument_list|)
operator|+
literal|" "
operator|+
name|old
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|current
label|:
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|old
range|:
name|iCurrent
control|)
block|{
if|if
condition|(
name|old
operator|==
literal|null
operator|||
name|old
operator|.
name|isFreeTime
argument_list|()
condition|)
continue|continue;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|course
range|:
name|suggestion
operator|.
name|getCourseAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|old
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|course
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
continue|continue
name|current
continue|;
block|}
name|ret
operator|+=
name|ARIA
operator|.
name|unassigned
argument_list|(
operator|(
name|old
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|course
argument_list|(
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
argument_list|)
else|:
name|MESSAGES
operator|.
name|clazz
argument_list|(
name|old
operator|.
name|getSubject
argument_list|()
argument_list|,
name|old
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|old
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|old
operator|.
name|getSection
argument_list|()
argument_list|)
operator|)
operator|+
literal|" "
operator|+
name|old
operator|.
name|getTimeStringAria
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|ARIA
operator|.
name|arrangeHours
argument_list|()
argument_list|)
operator|+
literal|" "
operator|+
name|old
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
specifier|public
interface|interface
name|SuggestionSelectedHandler
block|{
specifier|public
name|void
name|onSuggestionSelected
parameter_list|(
name|SuggestionSelectedEvent
name|event
parameter_list|)
function_decl|;
block|}
specifier|public
class|class
name|SuggestionSelectedEvent
block|{
specifier|private
name|ClassAssignmentInterface
name|iSuggestion
decl_stmt|;
specifier|private
name|SuggestionSelectedEvent
parameter_list|(
name|ClassAssignmentInterface
name|suggestion
parameter_list|)
block|{
name|iSuggestion
operator|=
name|suggestion
expr_stmt|;
block|}
specifier|public
name|ClassAssignmentInterface
name|getSuggestion
parameter_list|()
block|{
return|return
name|iSuggestion
return|;
block|}
block|}
specifier|public
name|void
name|addSuggestionSelectedHandler
parameter_list|(
name|SuggestionSelectedHandler
name|h
parameter_list|)
block|{
name|iSuggestionSelectedHandlers
operator|.
name|add
argument_list|(
name|h
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

