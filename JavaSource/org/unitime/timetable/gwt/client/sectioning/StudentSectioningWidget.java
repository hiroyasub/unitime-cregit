begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 - 3.5 (University Timetabling Application)  * Copyright (C) 2010 - 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|sectioning
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaButton
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|aria
operator|.
name|AriaStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|sectioning
operator|.
name|TimeGrid
operator|.
name|Meeting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|ImageLink
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTabPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|WebTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtAriaMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|services
operator|.
name|SectioningService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|services
operator|.
name|SectioningServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|AcademicSessionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|AcademicSessionProvider
operator|.
name|AcademicSessionChangeEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|UserAuthenticationProvider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|RunAsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
operator|.
name|ScheduledCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Unit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyCodes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyUpEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyUpHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|CloseEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|CloseHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|HasResizeHandlers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ResizeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ResizeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Cookies
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|History
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FocusPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHorizontalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HorizontalPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|PopupPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|VerticalPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|StudentSectioningWidget
extends|extends
name|Composite
implements|implements
name|HasResizeHandlers
block|{
specifier|public
specifier|static
specifier|final
name|StudentSectioningResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StudentSectioningMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StudentSectioningConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|GwtAriaMessages
name|ARIA
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtAriaMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|SectioningServiceAsync
name|iSectioningService
init|=
name|GWT
operator|.
name|create
argument_list|(
name|SectioningService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|AcademicSessionProvider
name|iSessionSelector
decl_stmt|;
specifier|private
name|UserAuthenticationProvider
name|iUserAuthentication
decl_stmt|;
specifier|private
name|VerticalPanel
name|iPanel
decl_stmt|;
specifier|private
name|HorizontalPanel
name|iFooter
decl_stmt|;
specifier|private
name|AriaButton
name|iRequests
decl_stmt|,
name|iReset
decl_stmt|,
name|iSchedule
decl_stmt|,
name|iEnroll
decl_stmt|,
name|iPrint
decl_stmt|,
name|iExport
decl_stmt|,
name|iSave
decl_stmt|;
specifier|private
name|HTML
name|iErrorMessage
decl_stmt|;
specifier|private
name|UniTimeTabPanel
name|iAssignmentPanel
decl_stmt|;
specifier|private
name|FocusPanel
name|iAssignmentPanelWithFocus
decl_stmt|;
specifier|private
name|ImageLink
name|iCalendar
decl_stmt|;
specifier|private
name|CourseRequestsTable
name|iCourseRequests
decl_stmt|;
specifier|private
name|WebTable
name|iAssignments
decl_stmt|;
specifier|private
name|TimeGrid
name|iAssignmentGrid
decl_stmt|;
specifier|private
name|SuggestionsBox
name|iSuggestionsBox
decl_stmt|;
specifier|private
name|CheckBox
name|iShowUnassignments
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
name|iLastResult
decl_stmt|;
specifier|private
name|ClassAssignmentInterface
name|iLastAssignment
decl_stmt|,
name|iSavedAssignment
init|=
literal|null
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|HistoryItem
argument_list|>
name|iHistory
init|=
operator|new
name|ArrayList
argument_list|<
name|HistoryItem
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|int
name|iAssignmentTab
init|=
literal|0
decl_stmt|;
specifier|private
name|boolean
name|iInRestore
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|iTrackHistory
init|=
literal|true
decl_stmt|;
specifier|private
name|boolean
name|iOnline
decl_stmt|;
specifier|public
name|StudentSectioningWidget
parameter_list|(
name|boolean
name|online
parameter_list|,
name|AcademicSessionProvider
name|sessionSelector
parameter_list|,
name|UserAuthenticationProvider
name|userAuthentication
parameter_list|,
name|StudentSectioningPage
operator|.
name|Mode
name|mode
parameter_list|,
name|boolean
name|history
parameter_list|)
block|{
name|iOnline
operator|=
name|online
expr_stmt|;
name|iSessionSelector
operator|=
name|sessionSelector
expr_stmt|;
name|iUserAuthentication
operator|=
name|userAuthentication
expr_stmt|;
name|iTrackHistory
operator|=
name|history
expr_stmt|;
name|iPanel
operator|=
operator|new
name|VerticalPanel
argument_list|()
expr_stmt|;
name|iCourseRequests
operator|=
operator|new
name|CourseRequestsTable
argument_list|(
name|iSessionSelector
argument_list|,
name|iOnline
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|add
argument_list|(
name|iCourseRequests
argument_list|)
expr_stmt|;
name|iFooter
operator|=
operator|new
name|HorizontalPanel
argument_list|()
expr_stmt|;
name|iFooter
operator|.
name|setStyleName
argument_list|(
literal|"unitime-MainTableBottomHeader"
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|setWidth
argument_list|(
literal|"100%"
argument_list|)
expr_stmt|;
name|HorizontalPanel
name|leftFooterPanel
init|=
operator|new
name|HorizontalPanel
argument_list|()
decl_stmt|;
name|iRequests
operator|=
operator|new
name|AriaButton
argument_list|(
name|MESSAGES
operator|.
name|buttonRequests
argument_list|()
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|leftFooterPanel
operator|.
name|add
argument_list|(
name|iRequests
argument_list|)
expr_stmt|;
name|iReset
operator|=
operator|new
name|AriaButton
argument_list|(
name|MESSAGES
operator|.
name|buttonReset
argument_list|()
argument_list|)
expr_stmt|;
name|iReset
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iReset
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setMarginLeft
argument_list|(
literal|4
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|leftFooterPanel
operator|.
name|add
argument_list|(
name|iReset
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|add
argument_list|(
name|leftFooterPanel
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|=
operator|new
name|HTML
argument_list|()
expr_stmt|;
name|iErrorMessage
operator|.
name|setWidth
argument_list|(
literal|"100%"
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|.
name|setStyleName
argument_list|(
literal|"unitime-ErrorMessage"
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|add
argument_list|(
name|iErrorMessage
argument_list|)
expr_stmt|;
name|HorizontalPanel
name|rightFooterPanel
init|=
operator|new
name|HorizontalPanel
argument_list|()
decl_stmt|;
name|iFooter
operator|.
name|add
argument_list|(
name|rightFooterPanel
argument_list|)
expr_stmt|;
name|iFooter
operator|.
name|setCellHorizontalAlignment
argument_list|(
name|rightFooterPanel
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|iSchedule
operator|=
operator|new
name|AriaButton
argument_list|(
name|MESSAGES
operator|.
name|buttonSchedule
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|mode
operator|.
name|isSectioning
argument_list|()
condition|)
name|rightFooterPanel
operator|.
name|add
argument_list|(
name|iSchedule
argument_list|)
expr_stmt|;
name|iSchedule
operator|.
name|setVisible
argument_list|(
name|mode
operator|.
name|isSectioning
argument_list|()
argument_list|)
expr_stmt|;
name|iSave
operator|=
operator|new
name|AriaButton
argument_list|(
name|MESSAGES
operator|.
name|buttonSave
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|mode
operator|.
name|isSectioning
argument_list|()
condition|)
name|rightFooterPanel
operator|.
name|add
argument_list|(
name|iSave
argument_list|)
expr_stmt|;
name|iSave
operator|.
name|setVisible
argument_list|(
operator|!
name|mode
operator|.
name|isSectioning
argument_list|()
argument_list|)
expr_stmt|;
name|iEnroll
operator|=
operator|new
name|AriaButton
argument_list|(
name|MESSAGES
operator|.
name|buttonEnroll
argument_list|()
argument_list|)
expr_stmt|;
name|iEnroll
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|rightFooterPanel
operator|.
name|add
argument_list|(
name|iEnroll
argument_list|)
expr_stmt|;
name|iPrint
operator|=
operator|new
name|AriaButton
argument_list|(
name|MESSAGES
operator|.
name|buttonPrint
argument_list|()
argument_list|)
expr_stmt|;
name|iPrint
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iPrint
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setMarginLeft
argument_list|(
literal|4
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|rightFooterPanel
operator|.
name|add
argument_list|(
name|iPrint
argument_list|)
expr_stmt|;
name|iExport
operator|=
operator|new
name|AriaButton
argument_list|(
name|MESSAGES
operator|.
name|buttonExport
argument_list|()
argument_list|)
expr_stmt|;
name|iExport
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iExport
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setMarginLeft
argument_list|(
literal|4
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|rightFooterPanel
operator|.
name|add
argument_list|(
name|iExport
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|add
argument_list|(
name|iFooter
argument_list|)
expr_stmt|;
name|iLastResult
operator|=
operator|new
name|ArrayList
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
argument_list|()
expr_stmt|;
name|initWidget
argument_list|(
name|iPanel
argument_list|)
expr_stmt|;
name|init
argument_list|()
expr_stmt|;
block|}
comment|/* 	private void initAsync() { 		GWT.runAsync(new RunAsyncCallback() { 			public void onSuccess() { 				init(); 			} 			public void onFailure(Throwable reason) { 				Label error = new Label(MESSAGES.failedToLoadTheApp(reason.getMessage())); 				error.setStyleName("unitime-ErrorMessage"); 				RootPanel.get("loading").setVisible(false); 				RootPanel.get("body").add(error); 			} 		}); 	} 	*/
specifier|private
name|void
name|addHistory
parameter_list|()
block|{
if|if
condition|(
name|iInRestore
operator|||
operator|!
name|iTrackHistory
condition|)
return|return;
name|iHistory
operator|.
name|add
argument_list|(
operator|new
name|HistoryItem
argument_list|()
argument_list|)
expr_stmt|;
name|History
operator|.
name|newItem
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|iHistory
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|updateHistory
parameter_list|()
block|{
if|if
condition|(
name|iInRestore
operator|||
operator|!
name|iTrackHistory
condition|)
return|return;
if|if
condition|(
operator|!
name|iHistory
operator|.
name|isEmpty
argument_list|()
condition|)
name|iHistory
operator|.
name|remove
argument_list|(
name|iHistory
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|addHistory
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|init
parameter_list|()
block|{
name|iCalendar
operator|=
operator|new
name|ImageLink
argument_list|()
expr_stmt|;
name|iCalendar
operator|.
name|setImage
argument_list|(
operator|new
name|Image
argument_list|(
name|RESOURCES
operator|.
name|calendar
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iCalendar
operator|.
name|setTarget
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|iCalendar
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|exportICalendar
argument_list|()
argument_list|)
expr_stmt|;
name|iCalendar
operator|.
name|setAriaLabel
argument_list|(
name|MESSAGES
operator|.
name|exportICalendar
argument_list|()
argument_list|)
expr_stmt|;
name|iAssignments
operator|=
operator|new
name|WebTable
argument_list|()
expr_stmt|;
name|iAssignments
operator|.
name|setHeader
argument_list|(
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colLock
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"15px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colSubject
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"40px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCourse
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"40px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colSubpart
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"30px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colClass
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"50px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colLimit
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"30px"
argument_list|)
operator|.
name|aria
argument_list|(
name|ARIA
operator|.
name|colLimit
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colDays
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"30px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colStart
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"40px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colEnd
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"40px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colDate
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"50px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colRoom
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"80px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colInstructor
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"80px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colParent
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"80px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colNote
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"50px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCredit
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"30px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|WidgetCell
argument_list|(
name|iCalendar
argument_list|,
name|MESSAGES
operator|.
name|colIcons
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"1px"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iAssignments
operator|.
name|setWidth
argument_list|(
literal|"100%"
argument_list|)
expr_stmt|;
name|VerticalPanel
name|vp
init|=
operator|new
name|VerticalPanel
argument_list|()
decl_stmt|;
name|vp
operator|.
name|add
argument_list|(
name|iAssignments
argument_list|)
expr_stmt|;
name|iShowUnassignments
operator|=
operator|new
name|CheckBox
argument_list|(
name|MESSAGES
operator|.
name|showUnassignments
argument_list|()
argument_list|)
expr_stmt|;
name|iShowUnassignments
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setMarginTop
argument_list|(
literal|2
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|vp
operator|.
name|add
argument_list|(
name|iShowUnassignments
argument_list|)
expr_stmt|;
name|vp
operator|.
name|setCellHorizontalAlignment
argument_list|(
name|iShowUnassignments
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|iShowUnassignments
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|String
name|showUnassignments
init|=
name|Cookies
operator|.
name|getCookie
argument_list|(
literal|"UniTime:Unassignments"
argument_list|)
decl_stmt|;
name|iShowUnassignments
operator|.
name|setValue
argument_list|(
name|showUnassignments
operator|==
literal|null
operator|||
literal|"1"
operator|.
name|equals
argument_list|(
name|showUnassignments
argument_list|)
argument_list|)
expr_stmt|;
name|iAssignmentPanel
operator|=
operator|new
name|UniTimeTabPanel
argument_list|()
expr_stmt|;
name|iAssignmentPanel
operator|.
name|add
argument_list|(
name|vp
argument_list|,
name|MESSAGES
operator|.
name|tabClasses
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iAssignmentPanel
operator|.
name|selectTab
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|iAssignmentGrid
operator|=
operator|new
name|TimeGrid
argument_list|()
expr_stmt|;
name|iAssignmentPanel
operator|.
name|add
argument_list|(
name|iAssignmentGrid
argument_list|,
name|MESSAGES
operator|.
name|tabTimetable
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|iAssignmentPanel
operator|.
name|addSelectionHandler
argument_list|(
operator|new
name|SelectionHandler
argument_list|<
name|Integer
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSelection
parameter_list|(
name|SelectionEvent
argument_list|<
name|Integer
argument_list|>
name|event
parameter_list|)
block|{
name|iAssignmentTab
operator|=
name|event
operator|.
name|getSelectedItem
argument_list|()
expr_stmt|;
if|if
condition|(
name|event
operator|.
name|getSelectedItem
argument_list|()
operator|==
literal|1
condition|)
name|iAssignmentGrid
operator|.
name|scrollDown
argument_list|()
expr_stmt|;
name|addHistory
argument_list|()
expr_stmt|;
if|if
condition|(
name|iAssignmentTab
operator|==
literal|0
condition|)
block|{
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setHTML
argument_list|(
name|ARIA
operator|.
name|listOfClasses
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setHTML
argument_list|(
name|ARIA
operator|.
name|timetable
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ResizeEvent
operator|.
name|fire
argument_list|(
name|StudentSectioningWidget
operator|.
name|this
argument_list|,
name|StudentSectioningWidget
operator|.
name|this
operator|.
name|getOffsetWidth
argument_list|()
argument_list|,
name|StudentSectioningWidget
operator|.
name|this
operator|.
name|getOffsetHeight
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iAssignmentPanelWithFocus
operator|=
operator|new
name|FocusPanel
argument_list|(
name|iAssignmentPanel
argument_list|)
expr_stmt|;
name|iAssignmentPanelWithFocus
operator|.
name|setStyleName
argument_list|(
literal|"unitime-FocusPanel"
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|prev
argument_list|()
expr_stmt|;
name|addHistory
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iReset
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iErrorMessage
operator|.
name|setHTML
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsScheduling
argument_list|()
argument_list|)
expr_stmt|;
name|iSectioningService
operator|.
name|section
argument_list|(
name|iOnline
argument_list|,
name|iCourseRequests
operator|.
name|getRequest
argument_list|()
argument_list|,
literal|null
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|ClassAssignmentInterface
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iErrorMessage
operator|.
name|setHTML
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|updateHistory
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onSuccess
parameter_list|(
name|ClassAssignmentInterface
name|result
parameter_list|)
block|{
name|fillIn
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|addHistory
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iSchedule
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iCourseRequests
operator|.
name|changeTip
argument_list|()
expr_stmt|;
name|iErrorMessage
operator|.
name|setHTML
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iCourseRequests
operator|.
name|validate
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
name|updateHistory
argument_list|()
expr_stmt|;
if|if
condition|(
name|result
condition|)
block|{
if|if
condition|(
name|iOnline
condition|)
block|{
name|iSectioningService
operator|.
name|saveRequest
argument_list|(
name|iCourseRequests
operator|.
name|getRequest
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
condition|)
block|{
name|iErrorMessage
operator|.
name|setHTML
argument_list|(
literal|"<font color='blue'>"
operator|+
name|MESSAGES
operator|.
name|saveRequestsOK
argument_list|()
operator|+
literal|"</font>"
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|info
argument_list|(
name|MESSAGES
operator|.
name|saveRequestsOK
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iErrorMessage
operator|.
name|setHTML
argument_list|(
name|MESSAGES
operator|.
name|saveRequestsFail
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|saveRequestsFail
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsScheduling
argument_list|()
argument_list|)
expr_stmt|;
name|iSectioningService
operator|.
name|section
argument_list|(
name|iOnline
argument_list|,
name|iCourseRequests
operator|.
name|getRequest
argument_list|()
argument_list|,
name|iLastResult
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|ClassAssignmentInterface
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iErrorMessage
operator|.
name|setHTML
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|updateHistory
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onSuccess
parameter_list|(
name|ClassAssignmentInterface
name|result
parameter_list|)
block|{
name|fillIn
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|addHistory
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|String
name|error
init|=
name|iCourseRequests
operator|.
name|getFirstError
argument_list|()
decl_stmt|;
name|iErrorMessage
operator|.
name|setHTML
argument_list|(
name|error
operator|==
literal|null
condition|?
name|MESSAGES
operator|.
name|validationFailed
argument_list|()
else|:
name|MESSAGES
operator|.
name|validationFailedWithMessage
argument_list|(
name|error
argument_list|)
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|updateHistory
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|error
operator|==
literal|null
condition|?
name|MESSAGES
operator|.
name|validationFailed
argument_list|()
else|:
name|MESSAGES
operator|.
name|validationFailedWithMessage
argument_list|(
name|error
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iErrorMessage
operator|.
name|setHTML
argument_list|(
name|MESSAGES
operator|.
name|validationFailedWithMessage
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|updateHistory
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|validationFailedWithMessage
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iAssignmentPanelWithFocus
operator|.
name|addKeyUpHandler
argument_list|(
operator|new
name|KeyUpHandler
argument_list|()
block|{
specifier|public
name|void
name|onKeyUp
parameter_list|(
name|KeyUpEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_DOWN
condition|)
block|{
do|do
block|{
name|iAssignments
operator|.
name|setSelectedRow
argument_list|(
name|iAssignments
operator|.
name|getSelectedRow
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
do|while
condition|(
name|iAssignments
operator|.
name|getRows
argument_list|()
index|[
name|iAssignments
operator|.
name|getSelectedRow
argument_list|()
index|]
operator|!=
literal|null
operator|&&
operator|!
name|iAssignments
operator|.
name|getRows
argument_list|()
index|[
name|iAssignments
operator|.
name|getSelectedRow
argument_list|()
index|]
operator|.
name|isSelectable
argument_list|()
condition|)
do|;
if|if
condition|(
name|iAssignments
operator|.
name|getSelectedRow
argument_list|()
operator|>=
literal|0
operator|&&
name|iAssignments
operator|.
name|getSelectedRow
argument_list|()
operator|<
name|iAssignments
operator|.
name|getRows
argument_list|()
operator|.
name|length
operator|&&
name|iAssignments
operator|.
name|getRows
argument_list|()
index|[
name|iAssignments
operator|.
name|getSelectedRow
argument_list|()
index|]
operator|!=
literal|null
condition|)
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setHTML
argument_list|(
name|ARIA
operator|.
name|classSelected
argument_list|(
literal|1
operator|+
name|iAssignments
operator|.
name|getSelectedRow
argument_list|()
argument_list|,
name|iAssignments
operator|.
name|getRowsCount
argument_list|()
argument_list|,
name|iAssignments
operator|.
name|getRows
argument_list|()
index|[
name|iAssignments
operator|.
name|getSelectedRow
argument_list|()
index|]
operator|.
name|getAriaLabel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_UP
condition|)
block|{
do|do
block|{
name|iAssignments
operator|.
name|setSelectedRow
argument_list|(
name|iAssignments
operator|.
name|getSelectedRow
argument_list|()
operator|==
literal|0
condition|?
name|iAssignments
operator|.
name|getRowsCount
argument_list|()
operator|-
literal|1
else|:
name|iAssignments
operator|.
name|getSelectedRow
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
do|while
condition|(
name|iAssignments
operator|.
name|getRows
argument_list|()
index|[
name|iAssignments
operator|.
name|getSelectedRow
argument_list|()
index|]
operator|!=
literal|null
operator|&&
operator|!
name|iAssignments
operator|.
name|getRows
argument_list|()
index|[
name|iAssignments
operator|.
name|getSelectedRow
argument_list|()
index|]
operator|.
name|isSelectable
argument_list|()
condition|)
do|;
if|if
condition|(
name|iAssignments
operator|.
name|getSelectedRow
argument_list|()
operator|>=
literal|0
operator|&&
name|iAssignments
operator|.
name|getSelectedRow
argument_list|()
operator|<
name|iAssignments
operator|.
name|getRows
argument_list|()
operator|.
name|length
operator|&&
name|iAssignments
operator|.
name|getRows
argument_list|()
index|[
name|iAssignments
operator|.
name|getSelectedRow
argument_list|()
index|]
operator|!=
literal|null
condition|)
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setHTML
argument_list|(
name|ARIA
operator|.
name|classSelected
argument_list|(
literal|1
operator|+
name|iAssignments
operator|.
name|getSelectedRow
argument_list|()
argument_list|,
name|iAssignments
operator|.
name|getRowsCount
argument_list|()
argument_list|,
name|iAssignments
operator|.
name|getRows
argument_list|()
index|[
name|iAssignments
operator|.
name|getSelectedRow
argument_list|()
index|]
operator|.
name|getAriaLabel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_ENTER
condition|)
block|{
name|updateHistory
argument_list|()
expr_stmt|;
name|showSuggestionsAsync
argument_list|(
name|iAssignments
operator|.
name|getSelectedRow
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getCtrlKey
argument_list|()
operator|&&
operator|(
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
literal|'l'
operator|||
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
literal|'L'
operator|)
condition|)
block|{
name|iAssignmentPanel
operator|.
name|selectTab
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|event
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getCtrlKey
argument_list|()
operator|&&
operator|(
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
literal|'t'
operator|||
name|event
operator|.
name|getNativeKeyCode
argument_list|()
operator|==
literal|'T'
operator|)
condition|)
block|{
name|iAssignmentPanel
operator|.
name|selectTab
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|event
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iAssignments
operator|.
name|addRowClickHandler
argument_list|(
operator|new
name|WebTable
operator|.
name|RowClickHandler
argument_list|()
block|{
specifier|public
name|void
name|onRowClick
parameter_list|(
name|WebTable
operator|.
name|RowClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|iLastResult
operator|.
name|get
argument_list|(
name|event
operator|.
name|getRowIdx
argument_list|()
argument_list|)
operator|==
literal|null
condition|)
return|return;
name|updateHistory
argument_list|()
expr_stmt|;
name|showSuggestionsAsync
argument_list|(
name|event
operator|.
name|getRowIdx
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iAssignmentGrid
operator|.
name|addMeetingClickHandler
argument_list|(
operator|new
name|TimeGrid
operator|.
name|MeetingClickHandler
argument_list|()
block|{
specifier|public
name|void
name|onMeetingClick
parameter_list|(
name|TimeGrid
operator|.
name|MeetingClickEvent
name|event
parameter_list|)
block|{
name|updateHistory
argument_list|()
expr_stmt|;
name|showSuggestionsAsync
argument_list|(
name|event
operator|.
name|getRowIndex
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iAssignmentGrid
operator|.
name|addPinClickHandler
argument_list|(
operator|new
name|TimeGrid
operator|.
name|PinClickHandler
argument_list|()
block|{
specifier|public
name|void
name|onPinClick
parameter_list|(
name|TimeGrid
operator|.
name|PinClickEvent
name|event
parameter_list|)
block|{
operator|(
operator|(
name|CheckBox
operator|)
name|iAssignments
operator|.
name|getRows
argument_list|()
index|[
name|event
operator|.
name|getRowIndex
argument_list|()
index|]
operator|.
name|getCell
argument_list|(
literal|0
argument_list|)
operator|.
name|getWidget
argument_list|()
operator|)
operator|.
name|setValue
argument_list|(
name|event
operator|.
name|isPinChecked
argument_list|()
argument_list|)
expr_stmt|;
name|iLastResult
operator|.
name|get
argument_list|(
name|event
operator|.
name|getRowIndex
argument_list|()
argument_list|)
operator|.
name|setPinned
argument_list|(
name|event
operator|.
name|isPinChecked
argument_list|()
argument_list|)
expr_stmt|;
name|updateHistory
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iEnroll
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
literal|"Enrolling..."
argument_list|)
expr_stmt|;
name|iSectioningService
operator|.
name|enroll
argument_list|(
name|iCourseRequests
operator|.
name|getRequest
argument_list|()
argument_list|,
name|iLastResult
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|ClassAssignmentInterface
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|(
name|ClassAssignmentInterface
name|result
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iSavedAssignment
operator|=
name|result
expr_stmt|;
name|fillIn
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|.
name|setHTML
argument_list|(
literal|"<font color='blue'>"
operator|+
name|MESSAGES
operator|.
name|enrollOK
argument_list|()
operator|+
literal|"</font>"
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|updateHistory
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|info
argument_list|(
name|MESSAGES
operator|.
name|enrollOK
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iErrorMessage
operator|.
name|setHTML
argument_list|(
name|MESSAGES
operator|.
name|enrollFailed
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|updateHistory
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|enrollFailed
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iPrint
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|boolean
name|allSaved
init|=
literal|true
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
range|:
name|iLastResult
control|)
block|{
if|if
condition|(
name|clazz
operator|!=
literal|null
operator|&&
operator|!
name|clazz
operator|.
name|isFreeTime
argument_list|()
operator|&&
name|clazz
operator|.
name|isAssigned
argument_list|()
operator|&&
operator|!
name|clazz
operator|.
name|isSaved
argument_list|()
condition|)
name|allSaved
operator|=
literal|false
expr_stmt|;
block|}
name|Widget
name|w
init|=
name|iAssignments
operator|.
name|getPrintWidget
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|,
literal|15
argument_list|)
decl_stmt|;
name|w
operator|.
name|setWidth
argument_list|(
literal|"100%"
argument_list|)
expr_stmt|;
name|ToolBox
operator|.
name|print
argument_list|(
operator|(
name|allSaved
condition|?
name|MESSAGES
operator|.
name|studentSchedule
argument_list|()
else|:
name|MESSAGES
operator|.
name|studentScheduleNotEnrolled
argument_list|()
operator|)
argument_list|,
operator|(
name|CONSTANTS
operator|.
name|printReportShowUserName
argument_list|()
condition|?
name|iUserAuthentication
operator|.
name|getUser
argument_list|()
else|:
literal|""
operator|)
argument_list|,
name|iSessionSelector
operator|.
name|getAcademicSessionName
argument_list|()
argument_list|,
name|iAssignmentGrid
operator|.
name|getPrintWidget
argument_list|()
argument_list|,
name|w
argument_list|,
name|iErrorMessage
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iExport
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|ToolBox
operator|.
name|open
argument_list|(
name|iCalendar
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|iTrackHistory
condition|)
block|{
name|History
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|String
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|event
operator|.
name|getValue
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|int
name|item
init|=
name|iHistory
operator|.
name|size
argument_list|()
operator|-
literal|1
decl_stmt|;
try|try
block|{
name|item
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
block|}
if|if
condition|(
name|item
operator|<
literal|0
condition|)
name|item
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|item
operator|>=
name|iHistory
operator|.
name|size
argument_list|()
condition|)
name|item
operator|=
name|iHistory
operator|.
name|size
argument_list|()
operator|-
literal|1
expr_stmt|;
if|if
condition|(
name|item
operator|>=
literal|0
condition|)
name|iHistory
operator|.
name|get
argument_list|(
name|item
argument_list|)
operator|.
name|restore
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|iCourseRequests
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|iSchedule
operator|.
name|isVisible
argument_list|()
condition|)
name|prev
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|addHistory
argument_list|()
expr_stmt|;
block|}
name|iSessionSelector
operator|.
name|addAcademicSessionChangeHandler
argument_list|(
operator|new
name|AcademicSessionSelector
operator|.
name|AcademicSessionChangeHandler
argument_list|()
block|{
specifier|public
name|void
name|onAcademicSessionChange
parameter_list|(
name|AcademicSessionChangeEvent
name|event
parameter_list|)
block|{
name|addHistory
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iSave
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iCourseRequests
operator|.
name|changeTip
argument_list|()
expr_stmt|;
name|iErrorMessage
operator|.
name|setHTML
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|iCourseRequests
operator|.
name|validate
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
name|updateHistory
argument_list|()
expr_stmt|;
if|if
condition|(
name|result
condition|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsSaving
argument_list|()
argument_list|)
expr_stmt|;
name|iSectioningService
operator|.
name|saveRequest
argument_list|(
name|iCourseRequests
operator|.
name|getRequest
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
condition|)
block|{
name|iErrorMessage
operator|.
name|setHTML
argument_list|(
literal|"<font color='blue'>"
operator|+
name|MESSAGES
operator|.
name|saveRequestsOK
argument_list|()
operator|+
literal|"</font>"
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|info
argument_list|(
name|MESSAGES
operator|.
name|saveRequestsOK
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iErrorMessage
operator|.
name|setHTML
argument_list|(
name|MESSAGES
operator|.
name|saveRequestsFail
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|saveRequestsFail
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|caught
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|String
name|error
init|=
name|iCourseRequests
operator|.
name|getFirstError
argument_list|()
decl_stmt|;
name|iErrorMessage
operator|.
name|setHTML
argument_list|(
name|error
operator|==
literal|null
condition|?
name|MESSAGES
operator|.
name|validationFailed
argument_list|()
else|:
name|MESSAGES
operator|.
name|validationFailedWithMessage
argument_list|(
name|error
argument_list|)
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|updateHistory
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|error
operator|==
literal|null
condition|?
name|MESSAGES
operator|.
name|validationFailed
argument_list|()
else|:
name|MESSAGES
operator|.
name|validationFailedWithMessage
argument_list|(
name|error
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iErrorMessage
operator|.
name|setHTML
argument_list|(
name|MESSAGES
operator|.
name|validationFailedWithMessage
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|updateHistory
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|validationFailedWithMessage
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iShowUnassignments
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
name|Cookies
operator|.
name|setCookie
argument_list|(
literal|"UniTime:Unassignments"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|fillIn
argument_list|(
name|iLastAssignment
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|openSuggestionsBox
parameter_list|(
name|int
name|rowIndex
parameter_list|)
block|{
if|if
condition|(
name|iSuggestionsBox
operator|==
literal|null
condition|)
block|{
name|iSuggestionsBox
operator|=
operator|new
name|SuggestionsBox
argument_list|(
name|iAssignmentGrid
operator|.
name|getColorProvider
argument_list|()
argument_list|,
name|iOnline
argument_list|)
expr_stmt|;
name|iSuggestionsBox
operator|.
name|addCloseHandler
argument_list|(
operator|new
name|CloseHandler
argument_list|<
name|PopupPanel
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onClose
parameter_list|(
name|CloseEvent
argument_list|<
name|PopupPanel
argument_list|>
name|event
parameter_list|)
block|{
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|iAssignmentPanelWithFocus
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iSuggestionsBox
operator|.
name|addSuggestionSelectedHandler
argument_list|(
operator|new
name|SuggestionsBox
operator|.
name|SuggestionSelectedHandler
argument_list|()
block|{
specifier|public
name|void
name|onSuggestionSelected
parameter_list|(
name|SuggestionsBox
operator|.
name|SuggestionSelectedEvent
name|event
parameter_list|)
block|{
name|ClassAssignmentInterface
name|result
init|=
name|event
operator|.
name|getSuggestion
argument_list|()
decl_stmt|;
name|fillIn
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|addHistory
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|iAssignments
operator|.
name|setSelectedRow
argument_list|(
name|rowIndex
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iSuggestionsBox
operator|.
name|open
argument_list|(
name|iCourseRequests
operator|.
name|getRequest
argument_list|()
argument_list|,
name|iLastResult
argument_list|,
name|rowIndex
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|fillIn
parameter_list|(
name|ClassAssignmentInterface
name|result
parameter_list|)
block|{
name|iLastResult
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iLastAssignment
operator|=
name|result
expr_stmt|;
name|String
name|calendarUrl
init|=
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
literal|"calendar?sid="
operator|+
name|iSessionSelector
operator|.
name|getAcademicSessionId
argument_list|()
operator|+
literal|"&cid="
decl_stmt|;
name|String
name|ftParam
init|=
literal|"&ft="
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|getCourseAssignments
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
name|rows
init|=
operator|new
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
argument_list|()
decl_stmt|;
name|iAssignmentGrid
operator|.
name|clear
argument_list|(
literal|true
argument_list|)
expr_stmt|;
for|for
control|(
specifier|final
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|course
range|:
name|result
operator|.
name|getCourseAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|course
operator|.
name|isAssigned
argument_list|()
condition|)
block|{
name|boolean
name|firstClazz
init|=
literal|true
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
range|:
name|course
operator|.
name|getClassAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|clazz
operator|.
name|getClassId
argument_list|()
operator|!=
literal|null
condition|)
name|calendarUrl
operator|+=
name|clazz
operator|.
name|getCourseId
argument_list|()
operator|+
literal|"-"
operator|+
name|clazz
operator|.
name|getClassId
argument_list|()
operator|+
literal|","
expr_stmt|;
if|else if
condition|(
name|clazz
operator|.
name|isFreeTime
argument_list|()
condition|)
name|ftParam
operator|+=
name|clazz
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
operator|+
literal|"-"
operator|+
name|clazz
operator|.
name|getStart
argument_list|()
operator|+
literal|"-"
operator|+
name|clazz
operator|.
name|getLength
argument_list|()
operator|+
literal|","
expr_stmt|;
name|String
name|style
init|=
operator|(
name|firstClazz
operator|&&
operator|!
name|rows
operator|.
name|isEmpty
argument_list|()
condition|?
literal|"top-border-dashed"
else|:
literal|""
operator|)
decl_stmt|;
name|WebTable
operator|.
name|Row
name|row
init|=
literal|null
decl_stmt|;
name|WebTable
operator|.
name|IconsCell
name|icons
init|=
operator|new
name|WebTable
operator|.
name|IconsCell
argument_list|()
decl_stmt|;
if|if
condition|(
name|clazz
operator|.
name|isSaved
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|saved
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|saved
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
operator|+
literal|" "
operator|+
name|course
operator|.
name|getCourseNbr
argument_list|()
operator|+
literal|" "
operator|+
name|clazz
operator|.
name|getSubpart
argument_list|()
operator|+
literal|" "
operator|+
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|else if
condition|(
operator|!
name|clazz
operator|.
name|isFreeTime
argument_list|()
operator|&&
name|result
operator|.
name|isCanEnroll
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|assignment
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|assignment
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
operator|+
literal|" "
operator|+
name|course
operator|.
name|getCourseNbr
argument_list|()
operator|+
literal|" "
operator|+
name|clazz
operator|.
name|getSubpart
argument_list|()
operator|+
literal|" "
operator|+
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|course
operator|.
name|isLocked
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|courseLocked
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|courseLocked
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
operator|+
literal|" "
operator|+
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|clazz
operator|.
name|isOfHighDemand
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|highDemand
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|highDemand
argument_list|(
name|clazz
operator|.
name|getExpected
argument_list|()
argument_list|,
name|clazz
operator|.
name|getAvailableLimit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|clazz
operator|.
name|isAssigned
argument_list|()
condition|)
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|CheckboxCell
argument_list|(
name|clazz
operator|.
name|isPinned
argument_list|()
argument_list|,
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|ARIA
operator|.
name|freeTimePin
argument_list|(
name|clazz
operator|.
name|getTimeStringAria
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|ARIA
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|)
else|:
name|ARIA
operator|.
name|classPin
argument_list|(
name|MESSAGES
operator|.
name|clazz
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
argument_list|,
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|firstClazz
condition|?
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
else|:
name|course
operator|.
name|getSubject
argument_list|()
else|:
literal|""
argument_list|)
operator|.
name|aria
argument_list|(
name|firstClazz
condition|?
literal|""
else|:
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
else|:
name|course
operator|.
name|getSubject
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|firstClazz
condition|?
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
else|:
name|course
operator|.
name|getCourseNbr
argument_list|()
else|:
literal|""
argument_list|)
operator|.
name|aria
argument_list|(
name|firstClazz
condition|?
literal|""
else|:
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
else|:
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getLimitString
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
argument_list|)
operator|.
name|aria
argument_list|(
name|clazz
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
literal|" "
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getStartString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
operator|.
name|aria
argument_list|(
name|clazz
operator|.
name|getStartStringAria
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getEndString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
operator|.
name|aria
argument_list|(
name|clazz
operator|.
name|getEndStringAria
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getDatePattern
argument_list|()
argument_list|)
argument_list|,
operator|(
name|clazz
operator|.
name|hasDistanceConflict
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|distantConflict
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|backToBackDistance
argument_list|(
name|clazz
operator|.
name|getBackToBackRooms
argument_list|()
argument_list|,
name|clazz
operator|.
name|getBackToBackDistance
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|InstructorCell
argument_list|(
name|clazz
operator|.
name|getInstructors
argument_list|()
argument_list|,
name|clazz
operator|.
name|getInstructorEmails
argument_list|()
argument_list|,
literal|", "
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getParentSection
argument_list|()
argument_list|,
name|clazz
operator|.
name|getParentSection
argument_list|()
operator|==
literal|null
operator|||
name|clazz
operator|.
name|getParentSection
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|10
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|clazz
operator|.
name|getNote
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|AbbvTextCell
argument_list|(
name|clazz
operator|.
name|getCredit
argument_list|()
argument_list|)
argument_list|,
name|icons
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|CheckboxCell
argument_list|(
name|clazz
operator|.
name|isPinned
argument_list|()
argument_list|,
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|ARIA
operator|.
name|freeTimePin
argument_list|(
name|clazz
operator|.
name|getTimeStringAria
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|ARIA
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|)
else|:
name|ARIA
operator|.
name|classPin
argument_list|(
name|MESSAGES
operator|.
name|clazz
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
argument_list|,
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|firstClazz
condition|?
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
else|:
name|course
operator|.
name|getSubject
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|firstClazz
condition|?
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
else|:
name|course
operator|.
name|getCourseNbr
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getLimitString
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|arrangeHours
argument_list|()
argument_list|,
literal|4
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|(
name|clazz
operator|.
name|hasDistanceConflict
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|distantConflict
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|backToBackDistance
argument_list|(
name|clazz
operator|.
name|getBackToBackRooms
argument_list|()
argument_list|,
name|clazz
operator|.
name|getBackToBackDistance
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|InstructorCell
argument_list|(
name|clazz
operator|.
name|getInstructors
argument_list|()
argument_list|,
name|clazz
operator|.
name|getInstructorEmails
argument_list|()
argument_list|,
literal|", "
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getParentSection
argument_list|()
argument_list|,
name|clazz
operator|.
name|getParentSection
argument_list|()
operator|==
literal|null
operator|||
name|clazz
operator|.
name|getParentSection
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|10
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|clazz
operator|.
name|getNote
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|AbbvTextCell
argument_list|(
name|clazz
operator|.
name|getCredit
argument_list|()
argument_list|)
argument_list|,
name|icons
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|)
name|row
operator|.
name|setAriaLabel
argument_list|(
name|ARIA
operator|.
name|freeTimeAssignment
argument_list|(
name|clazz
operator|.
name|getTimeStringAria
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|ARIA
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|row
operator|.
name|setAriaLabel
argument_list|(
name|ARIA
operator|.
name|classAssignment
argument_list|(
name|MESSAGES
operator|.
name|clazz
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
argument_list|,
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|.
name|isAssigned
argument_list|()
condition|?
name|clazz
operator|.
name|getTimeStringAria
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|ARIA
operator|.
name|arrangeHours
argument_list|()
argument_list|)
operator|+
literal|" "
operator|+
name|clazz
operator|.
name|getRooms
argument_list|(
literal|","
argument_list|)
else|:
name|ARIA
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|WebTable
operator|.
name|Row
name|finalRow
init|=
name|row
decl_stmt|;
specifier|final
name|ArrayList
argument_list|<
name|TimeGrid
operator|.
name|Meeting
argument_list|>
name|meetings
init|=
operator|(
name|clazz
operator|.
name|isFreeTime
argument_list|()
condition|?
literal|null
else|:
name|iAssignmentGrid
operator|.
name|addClass
argument_list|(
name|clazz
argument_list|,
name|rows
operator|.
name|size
argument_list|()
argument_list|)
operator|)
decl_stmt|;
comment|// row.setId(course.isFreeTime() ? "Free " + clazz.getDaysString() + " " +clazz.getStartString() + " - " + clazz.getEndString() : course.getCourseId() + ":" + clazz.getClassId());
specifier|final
name|int
name|index
init|=
name|rows
operator|.
name|size
argument_list|()
decl_stmt|;
operator|(
operator|(
name|CheckBox
operator|)
name|row
operator|.
name|getCell
argument_list|(
literal|0
argument_list|)
operator|.
name|getWidget
argument_list|()
operator|)
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|Boolean
name|checked
init|=
name|Boolean
operator|.
name|valueOf
argument_list|(
name|finalRow
operator|.
name|getCell
argument_list|(
literal|0
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|meetings
operator|==
literal|null
condition|)
block|{
name|iLastResult
operator|.
name|get
argument_list|(
name|index
argument_list|)
operator|.
name|setPinned
argument_list|(
name|checked
argument_list|)
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|Meeting
name|m
range|:
name|meetings
control|)
block|{
name|m
operator|.
name|setPinned
argument_list|(
name|checked
argument_list|)
expr_stmt|;
name|iLastResult
operator|.
name|get
argument_list|(
name|m
operator|.
name|getIndex
argument_list|()
argument_list|)
operator|.
name|setPinned
argument_list|(
name|checked
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|iLastResult
operator|.
name|add
argument_list|(
name|clazz
argument_list|)
expr_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|firstClazz
operator|=
literal|false
expr_stmt|;
block|}
block|}
else|else
block|{
name|String
name|style
init|=
literal|"text-red"
operator|+
operator|(
operator|!
name|rows
operator|.
name|isEmpty
argument_list|()
condition|?
literal|" top-border-dashed"
else|:
literal|""
operator|)
decl_stmt|;
name|WebTable
operator|.
name|Row
name|row
init|=
literal|null
decl_stmt|;
name|String
name|unassignedMessage
init|=
name|MESSAGES
operator|.
name|courseNotAssigned
argument_list|()
decl_stmt|;
if|if
condition|(
name|course
operator|.
name|getOverlaps
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|course
operator|.
name|getOverlaps
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|unassignedMessage
operator|=
literal|""
expr_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|String
argument_list|>
name|i
init|=
name|course
operator|.
name|getOverlaps
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|x
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|unassignedMessage
operator|.
name|isEmpty
argument_list|()
condition|)
name|unassignedMessage
operator|+=
name|MESSAGES
operator|.
name|conflictWithFirst
argument_list|(
name|x
argument_list|)
expr_stmt|;
if|else if
condition|(
operator|!
name|i
operator|.
name|hasNext
argument_list|()
condition|)
name|unassignedMessage
operator|+=
name|MESSAGES
operator|.
name|conflictWithLast
argument_list|(
name|x
argument_list|)
expr_stmt|;
else|else
name|unassignedMessage
operator|+=
name|MESSAGES
operator|.
name|conflictWithMiddle
argument_list|(
name|x
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|course
operator|.
name|getInstead
argument_list|()
operator|!=
literal|null
condition|)
name|unassignedMessage
operator|+=
name|MESSAGES
operator|.
name|conflictAssignedAlternative
argument_list|(
name|course
operator|.
name|getInstead
argument_list|()
argument_list|)
expr_stmt|;
name|unassignedMessage
operator|+=
literal|"."
expr_stmt|;
block|}
if|else if
condition|(
name|course
operator|.
name|isNotAvailable
argument_list|()
condition|)
block|{
name|unassignedMessage
operator|=
name|MESSAGES
operator|.
name|classNotAvailable
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|course
operator|.
name|isLocked
argument_list|()
condition|)
block|{
name|unassignedMessage
operator|=
name|MESSAGES
operator|.
name|courseLocked
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
operator|+
literal|" "
operator|+
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|WebTable
operator|.
name|IconsCell
name|icons
init|=
operator|new
name|WebTable
operator|.
name|IconsCell
argument_list|()
decl_stmt|;
if|if
condition|(
name|course
operator|.
name|isLocked
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|courseLocked
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|courseLocked
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
operator|+
literal|" "
operator|+
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|CheckboxCell
name|waitList
init|=
literal|null
decl_stmt|;
name|Boolean
name|w
init|=
name|iCourseRequests
operator|.
name|getWaitList
argument_list|(
name|course
operator|.
name|getCourseName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|w
operator|!=
literal|null
condition|)
block|{
name|waitList
operator|=
operator|new
name|WebTable
operator|.
name|CheckboxCell
argument_list|(
name|w
argument_list|,
name|MESSAGES
operator|.
name|toggleWaitList
argument_list|()
argument_list|,
name|ARIA
operator|.
name|titleRequestedWaitListForCourse
argument_list|(
name|MESSAGES
operator|.
name|course
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
argument_list|,
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|waitList
operator|.
name|getWidget
argument_list|()
operator|.
name|setStyleName
argument_list|(
literal|"toggle"
argument_list|)
expr_stmt|;
operator|(
operator|(
name|CheckBox
operator|)
name|waitList
operator|.
name|getWidget
argument_list|()
operator|)
operator|.
name|addValueChangeHandler
argument_list|(
operator|new
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|event
parameter_list|)
block|{
name|iCourseRequests
operator|.
name|setWaitList
argument_list|(
name|course
operator|.
name|getCourseName
argument_list|()
argument_list|,
name|event
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsScheduling
argument_list|()
argument_list|)
expr_stmt|;
name|CourseRequestInterface
name|r
init|=
name|iCourseRequests
operator|.
name|getRequest
argument_list|()
decl_stmt|;
name|r
operator|.
name|setNoChange
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iSectioningService
operator|.
name|section
argument_list|(
name|iOnline
argument_list|,
name|r
argument_list|,
name|iLastResult
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|ClassAssignmentInterface
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|iErrorMessage
operator|.
name|setHTML
argument_list|(
name|caught
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|updateHistory
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onSuccess
parameter_list|(
name|ClassAssignmentInterface
name|result
parameter_list|)
block|{
name|fillIn
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|addHistory
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
range|:
name|course
operator|.
name|getClassAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|clazz
operator|.
name|isAssigned
argument_list|()
condition|)
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
else|:
name|course
operator|.
name|getSubject
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
else|:
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getLimitString
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
argument_list|)
operator|.
name|aria
argument_list|(
name|clazz
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
literal|" "
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getStartString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
operator|.
name|aria
argument_list|(
name|clazz
operator|.
name|getStartStringAria
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getEndString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
operator|.
name|aria
argument_list|(
name|clazz
operator|.
name|getEndStringAria
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getDatePattern
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|unassignedMessage
argument_list|,
literal|3
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|clazz
operator|.
name|getNote
argument_list|()
argument_list|)
argument_list|,
operator|(
name|waitList
operator|!=
literal|null
condition|?
name|waitList
else|:
operator|new
name|WebTable
operator|.
name|AbbvTextCell
argument_list|(
name|clazz
operator|.
name|getCredit
argument_list|()
argument_list|)
operator|)
argument_list|,
name|icons
argument_list|)
expr_stmt|;
if|if
condition|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|)
name|row
operator|.
name|setAriaLabel
argument_list|(
name|ARIA
operator|.
name|freeTimeUnassignment
argument_list|(
name|clazz
operator|.
name|getTimeStringAria
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|ARIA
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|,
name|unassignedMessage
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|row
operator|.
name|setAriaLabel
argument_list|(
name|ARIA
operator|.
name|courseUnassginment
argument_list|(
name|MESSAGES
operator|.
name|course
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
argument_list|,
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
name|unassignedMessage
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|clazz
operator|.
name|getClassId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
else|:
name|course
operator|.
name|getSubject
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
else|:
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getLimitString
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|arrangeHours
argument_list|()
argument_list|,
literal|4
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|unassignedMessage
argument_list|,
literal|3
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|clazz
operator|.
name|getNote
argument_list|()
argument_list|)
argument_list|,
operator|(
name|waitList
operator|!=
literal|null
condition|?
name|waitList
else|:
operator|new
name|WebTable
operator|.
name|AbbvTextCell
argument_list|(
name|clazz
operator|.
name|getCredit
argument_list|()
argument_list|)
operator|)
argument_list|,
name|icons
argument_list|)
expr_stmt|;
if|if
condition|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|)
name|row
operator|.
name|setAriaLabel
argument_list|(
name|ARIA
operator|.
name|freeTimeUnassignment
argument_list|(
literal|""
argument_list|,
name|unassignedMessage
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|row
operator|.
name|setAriaLabel
argument_list|(
name|ARIA
operator|.
name|courseUnassginment
argument_list|(
name|MESSAGES
operator|.
name|course
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
argument_list|,
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
name|unassignedMessage
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
else|:
name|course
operator|.
name|getSubject
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
else|:
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getLimitString
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|unassignedMessage
argument_list|,
literal|7
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|clazz
operator|.
name|getNote
argument_list|()
argument_list|)
argument_list|,
operator|(
name|waitList
operator|!=
literal|null
condition|?
name|waitList
else|:
operator|new
name|WebTable
operator|.
name|AbbvTextCell
argument_list|(
name|clazz
operator|.
name|getCredit
argument_list|()
argument_list|)
operator|)
argument_list|,
name|icons
argument_list|)
expr_stmt|;
if|if
condition|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|)
name|row
operator|.
name|setAriaLabel
argument_list|(
name|ARIA
operator|.
name|freeTimeUnassignment
argument_list|(
literal|""
argument_list|,
name|unassignedMessage
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|row
operator|.
name|setAriaLabel
argument_list|(
name|ARIA
operator|.
name|courseUnassginment
argument_list|(
name|MESSAGES
operator|.
name|course
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
argument_list|,
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
name|unassignedMessage
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|row
operator|.
name|setId
argument_list|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|CONSTANTS
operator|.
name|freePrefix
argument_list|()
operator|+
name|clazz
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
operator|+
literal|" "
operator|+
name|clazz
operator|.
name|getStartString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
operator|+
literal|" - "
operator|+
name|clazz
operator|.
name|getEndString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
else|:
name|course
operator|.
name|getCourseId
argument_list|()
operator|+
literal|":"
operator|+
name|clazz
operator|.
name|getClassId
argument_list|()
argument_list|)
expr_stmt|;
name|iLastResult
operator|.
name|add
argument_list|(
name|clazz
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|row
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|waitList
operator|!=
literal|null
condition|)
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|unassignedMessage
argument_list|,
literal|11
argument_list|,
literal|null
argument_list|)
argument_list|,
name|waitList
argument_list|,
name|icons
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|unassignedMessage
argument_list|,
literal|12
argument_list|,
literal|null
argument_list|)
argument_list|,
name|icons
argument_list|)
expr_stmt|;
block|}
name|row
operator|.
name|setId
argument_list|(
name|course
operator|.
name|getCourseId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|setAriaLabel
argument_list|(
name|ARIA
operator|.
name|courseUnassginment
argument_list|(
name|MESSAGES
operator|.
name|course
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
argument_list|,
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
name|unassignedMessage
argument_list|)
argument_list|)
expr_stmt|;
name|iLastResult
operator|.
name|add
argument_list|(
name|course
operator|.
name|addClassAssignment
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|row
operator|.
name|getCell
argument_list|(
name|row
operator|.
name|getNrCells
argument_list|()
operator|-
literal|1
argument_list|)
operator|.
name|setStyleName
argument_list|(
literal|"text-red-centered"
operator|+
operator|(
operator|!
name|rows
operator|.
name|isEmpty
argument_list|()
condition|?
literal|" top-border-dashed"
else|:
literal|""
operator|)
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iSavedAssignment
operator|!=
literal|null
operator|&&
operator|!
name|course
operator|.
name|isFreeTime
argument_list|()
operator|&&
name|iShowUnassignments
operator|.
name|getValue
argument_list|()
condition|)
block|{
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|saved
range|:
name|iSavedAssignment
operator|.
name|getCourseAssignments
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|saved
operator|.
name|isAssigned
argument_list|()
operator|||
name|saved
operator|.
name|isFreeTime
argument_list|()
operator|||
operator|!
name|course
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|saved
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
continue|continue;
name|classes
label|:
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
range|:
name|saved
operator|.
name|getClassAssignments
argument_list|()
control|)
block|{
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|x
range|:
name|course
operator|.
name|getClassAssignments
argument_list|()
control|)
if|if
condition|(
name|clazz
operator|.
name|getClassId
argument_list|()
operator|.
name|equals
argument_list|(
name|x
operator|.
name|getClassId
argument_list|()
argument_list|)
condition|)
continue|continue
name|classes
continue|;
name|String
name|style
init|=
literal|"text-gray"
decl_stmt|;
name|WebTable
operator|.
name|Row
name|row
init|=
literal|null
decl_stmt|;
name|WebTable
operator|.
name|IconsCell
name|icons
init|=
operator|new
name|WebTable
operator|.
name|IconsCell
argument_list|()
decl_stmt|;
if|if
condition|(
name|clazz
operator|.
name|isSaved
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|unassignment
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|unassignment
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
operator|+
literal|" "
operator|+
name|course
operator|.
name|getCourseNbr
argument_list|()
operator|+
literal|" "
operator|+
name|clazz
operator|.
name|getSubpart
argument_list|()
operator|+
literal|" "
operator|+
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|clazz
operator|.
name|isOfHighDemand
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|highDemand
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|highDemand
argument_list|(
name|clazz
operator|.
name|getExpected
argument_list|()
argument_list|,
name|clazz
operator|.
name|getAvailableLimit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|clazz
operator|.
name|isAssigned
argument_list|()
condition|)
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
operator|.
name|aria
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
operator|.
name|aria
argument_list|(
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getLimitString
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
argument_list|)
operator|.
name|aria
argument_list|(
name|clazz
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
literal|" "
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getStartString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
operator|.
name|aria
argument_list|(
name|clazz
operator|.
name|getStartStringAria
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getEndString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
operator|.
name|aria
argument_list|(
name|clazz
operator|.
name|getEndStringAria
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getDatePattern
argument_list|()
argument_list|)
argument_list|,
operator|(
name|clazz
operator|.
name|hasDistanceConflict
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|distantConflict
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|backToBackDistance
argument_list|(
name|clazz
operator|.
name|getBackToBackRooms
argument_list|()
argument_list|,
name|clazz
operator|.
name|getBackToBackDistance
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|InstructorCell
argument_list|(
name|clazz
operator|.
name|getInstructors
argument_list|()
argument_list|,
name|clazz
operator|.
name|getInstructorEmails
argument_list|()
argument_list|,
literal|", "
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getParentSection
argument_list|()
argument_list|,
name|clazz
operator|.
name|getParentSection
argument_list|()
operator|==
literal|null
operator|||
name|clazz
operator|.
name|getParentSection
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|10
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|clazz
operator|.
name|getNote
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|AbbvTextCell
argument_list|(
name|clazz
operator|.
name|getCredit
argument_list|()
argument_list|)
argument_list|,
name|icons
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
operator|.
name|aria
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
operator|.
name|aria
argument_list|(
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getLimitString
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|arrangeHours
argument_list|()
argument_list|,
literal|4
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|(
name|clazz
operator|.
name|hasDistanceConflict
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|distantConflict
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|backToBackDistance
argument_list|(
name|clazz
operator|.
name|getBackToBackRooms
argument_list|()
argument_list|,
name|clazz
operator|.
name|getBackToBackDistance
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|InstructorCell
argument_list|(
name|clazz
operator|.
name|getInstructors
argument_list|()
argument_list|,
name|clazz
operator|.
name|getInstructorEmails
argument_list|()
argument_list|,
literal|", "
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getParentSection
argument_list|()
argument_list|,
name|clazz
operator|.
name|getParentSection
argument_list|()
operator|==
literal|null
operator|||
name|clazz
operator|.
name|getParentSection
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|10
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|clazz
operator|.
name|getNote
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|AbbvTextCell
argument_list|(
name|clazz
operator|.
name|getCredit
argument_list|()
argument_list|)
argument_list|,
name|icons
argument_list|)
expr_stmt|;
block|}
name|row
operator|.
name|setAriaLabel
argument_list|(
name|ARIA
operator|.
name|previousAssignment
argument_list|(
name|MESSAGES
operator|.
name|clazz
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
argument_list|,
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|.
name|isAssigned
argument_list|()
condition|?
name|clazz
operator|.
name|getTimeStringAria
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|ARIA
operator|.
name|arrangeHours
argument_list|()
argument_list|)
operator|+
literal|" "
operator|+
name|clazz
operator|.
name|getRooms
argument_list|(
literal|","
argument_list|)
else|:
name|ARIA
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|row
operator|.
name|setSelectable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iLastResult
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|style
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
if|if
condition|(
name|iSavedAssignment
operator|!=
literal|null
operator|&&
name|iShowUnassignments
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|courses
label|:
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|course
range|:
name|iSavedAssignment
operator|.
name|getCourseAssignments
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|course
operator|.
name|isAssigned
argument_list|()
operator|||
name|course
operator|.
name|isFreeTime
argument_list|()
condition|)
continue|continue;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|x
range|:
name|result
operator|.
name|getCourseAssignments
argument_list|()
control|)
if|if
condition|(
name|course
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|x
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
continue|continue
name|courses
continue|;
name|boolean
name|firstClazz
init|=
literal|true
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
range|:
name|course
operator|.
name|getClassAssignments
argument_list|()
control|)
block|{
name|String
name|style
init|=
literal|"text-gray"
operator|+
operator|(
name|firstClazz
operator|&&
operator|!
name|rows
operator|.
name|isEmpty
argument_list|()
condition|?
literal|" top-border-dashed"
else|:
literal|""
operator|)
decl_stmt|;
name|WebTable
operator|.
name|Row
name|row
init|=
literal|null
decl_stmt|;
name|WebTable
operator|.
name|IconsCell
name|icons
init|=
operator|new
name|WebTable
operator|.
name|IconsCell
argument_list|()
decl_stmt|;
if|if
condition|(
name|clazz
operator|.
name|isSaved
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|unassignment
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|unassignment
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
operator|+
literal|" "
operator|+
name|course
operator|.
name|getCourseNbr
argument_list|()
operator|+
literal|" "
operator|+
name|clazz
operator|.
name|getSubpart
argument_list|()
operator|+
literal|" "
operator|+
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|clazz
operator|.
name|isOfHighDemand
argument_list|()
condition|)
name|icons
operator|.
name|add
argument_list|(
name|RESOURCES
operator|.
name|highDemand
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|highDemand
argument_list|(
name|clazz
operator|.
name|getExpected
argument_list|()
argument_list|,
name|clazz
operator|.
name|getAvailableLimit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|clazz
operator|.
name|isAssigned
argument_list|()
condition|)
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|firstClazz
condition|?
name|course
operator|.
name|getSubject
argument_list|()
else|:
literal|""
argument_list|)
operator|.
name|aria
argument_list|(
name|firstClazz
condition|?
literal|""
else|:
name|course
operator|.
name|getSubject
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|firstClazz
condition|?
name|course
operator|.
name|getCourseNbr
argument_list|()
else|:
literal|""
argument_list|)
operator|.
name|aria
argument_list|(
name|firstClazz
condition|?
literal|""
else|:
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getLimitString
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
argument_list|)
operator|.
name|aria
argument_list|(
name|clazz
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
literal|" "
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getStartString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
operator|.
name|aria
argument_list|(
name|clazz
operator|.
name|getStartStringAria
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getEndString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
operator|.
name|aria
argument_list|(
name|clazz
operator|.
name|getEndStringAria
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getDatePattern
argument_list|()
argument_list|)
argument_list|,
operator|(
name|clazz
operator|.
name|hasDistanceConflict
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|distantConflict
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|backToBackDistance
argument_list|(
name|clazz
operator|.
name|getBackToBackRooms
argument_list|()
argument_list|,
name|clazz
operator|.
name|getBackToBackDistance
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|InstructorCell
argument_list|(
name|clazz
operator|.
name|getInstructors
argument_list|()
argument_list|,
name|clazz
operator|.
name|getInstructorEmails
argument_list|()
argument_list|,
literal|", "
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getParentSection
argument_list|()
argument_list|,
name|clazz
operator|.
name|getParentSection
argument_list|()
operator|==
literal|null
operator|||
name|clazz
operator|.
name|getParentSection
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|10
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|clazz
operator|.
name|getNote
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|AbbvTextCell
argument_list|(
name|clazz
operator|.
name|getCredit
argument_list|()
argument_list|)
argument_list|,
name|icons
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|firstClazz
condition|?
name|course
operator|.
name|getSubject
argument_list|()
else|:
literal|""
argument_list|)
operator|.
name|aria
argument_list|(
name|firstClazz
condition|?
literal|""
else|:
name|course
operator|.
name|getSubject
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|firstClazz
condition|?
name|course
operator|.
name|getCourseNbr
argument_list|()
else|:
literal|""
argument_list|)
operator|.
name|aria
argument_list|(
name|firstClazz
condition|?
literal|""
else|:
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getLimitString
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|arrangeHours
argument_list|()
argument_list|,
literal|4
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|(
name|clazz
operator|.
name|hasDistanceConflict
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|distantConflict
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|backToBackDistance
argument_list|(
name|clazz
operator|.
name|getBackToBackRooms
argument_list|()
argument_list|,
name|clazz
operator|.
name|getBackToBackDistance
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getRooms
argument_list|(
literal|", "
argument_list|)
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|InstructorCell
argument_list|(
name|clazz
operator|.
name|getInstructors
argument_list|()
argument_list|,
name|clazz
operator|.
name|getInstructorEmails
argument_list|()
argument_list|,
literal|", "
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getParentSection
argument_list|()
argument_list|,
name|clazz
operator|.
name|getParentSection
argument_list|()
operator|==
literal|null
operator|||
name|clazz
operator|.
name|getParentSection
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|10
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|clazz
operator|.
name|getNote
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|AbbvTextCell
argument_list|(
name|clazz
operator|.
name|getCredit
argument_list|()
argument_list|)
argument_list|,
name|icons
argument_list|)
expr_stmt|;
block|}
name|row
operator|.
name|setAriaLabel
argument_list|(
name|ARIA
operator|.
name|previousAssignment
argument_list|(
name|MESSAGES
operator|.
name|clazz
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
argument_list|,
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|,
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|.
name|isAssigned
argument_list|()
condition|?
name|clazz
operator|.
name|getTimeStringAria
argument_list|(
name|CONSTANTS
operator|.
name|longDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|,
name|ARIA
operator|.
name|arrangeHours
argument_list|()
argument_list|)
operator|+
literal|" "
operator|+
name|clazz
operator|.
name|getRooms
argument_list|(
literal|","
argument_list|)
else|:
name|ARIA
operator|.
name|arrangeHours
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|row
operator|.
name|setSelectable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iLastResult
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|firstClazz
operator|=
literal|false
expr_stmt|;
block|}
block|}
block|}
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|course
range|:
name|result
operator|.
name|getCourseAssignments
argument_list|()
control|)
block|{
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
range|:
name|course
operator|.
name|getClassAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|clazz
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
name|CourseRequestInterface
operator|.
name|FreeTime
name|ft
init|=
operator|new
name|CourseRequestInterface
operator|.
name|FreeTime
argument_list|()
decl_stmt|;
name|ft
operator|.
name|setLength
argument_list|(
name|clazz
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|ft
operator|.
name|setStart
argument_list|(
name|clazz
operator|.
name|getStart
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|d
range|:
name|clazz
operator|.
name|getDays
argument_list|()
control|)
name|ft
operator|.
name|addDay
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|iAssignmentGrid
operator|.
name|addFreeTime
argument_list|(
name|ft
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|WebTable
operator|.
name|Row
index|[]
name|rowArray
init|=
operator|new
name|WebTable
operator|.
name|Row
index|[
name|rows
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Row
name|row
range|:
name|rows
control|)
name|rowArray
index|[
name|idx
operator|++
index|]
operator|=
name|row
expr_stmt|;
name|iAssignmentGrid
operator|.
name|shrink
argument_list|()
expr_stmt|;
name|iAssignmentPanel
operator|.
name|setWidth
argument_list|(
name|iAssignmentGrid
operator|.
name|getWidth
argument_list|()
operator|+
literal|"px"
argument_list|)
expr_stmt|;
name|iAssignments
operator|.
name|setData
argument_list|(
name|rowArray
argument_list|)
expr_stmt|;
if|if
condition|(
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|isShowing
argument_list|()
condition|)
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|iPanel
operator|.
name|remove
argument_list|(
name|iCourseRequests
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|insert
argument_list|(
name|iAssignmentPanelWithFocus
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iReset
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iEnroll
operator|.
name|setVisible
argument_list|(
name|result
operator|.
name|isCanEnroll
argument_list|()
argument_list|)
expr_stmt|;
name|iPrint
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iExport
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iSchedule
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iAssignmentGrid
operator|.
name|scrollDown
argument_list|()
expr_stmt|;
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|iAssignmentPanelWithFocus
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|calendarUrl
operator|.
name|endsWith
argument_list|(
literal|","
argument_list|)
condition|)
name|calendarUrl
operator|=
name|calendarUrl
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|calendarUrl
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|calendarUrl
operator|+=
name|ftParam
expr_stmt|;
if|if
condition|(
name|calendarUrl
operator|.
name|endsWith
argument_list|(
literal|","
argument_list|)
condition|)
name|calendarUrl
operator|=
name|calendarUrl
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|calendarUrl
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|iAssignmentGrid
operator|.
name|setCalendarUrl
argument_list|(
name|calendarUrl
argument_list|)
expr_stmt|;
name|iCalendar
operator|.
name|setUrl
argument_list|(
name|calendarUrl
argument_list|)
expr_stmt|;
name|ResizeEvent
operator|.
name|fire
argument_list|(
name|this
argument_list|,
name|getOffsetWidth
argument_list|()
argument_list|,
name|getOffsetHeight
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iAssignmentTab
operator|==
literal|0
condition|)
block|{
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setHTML
argument_list|(
name|ARIA
operator|.
name|listOfClasses
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setHTML
argument_list|(
name|ARIA
operator|.
name|timetable
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|iErrorMessage
operator|.
name|setHTML
argument_list|(
name|MESSAGES
operator|.
name|noSchedule
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|isShowing
argument_list|()
condition|)
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|noSchedule
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|prev
parameter_list|()
block|{
name|iPanel
operator|.
name|remove
argument_list|(
name|iAssignmentPanelWithFocus
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|insert
argument_list|(
name|iCourseRequests
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iReset
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iEnroll
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iPrint
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iExport
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iSchedule
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|ResizeEvent
operator|.
name|fire
argument_list|(
name|this
argument_list|,
name|getOffsetWidth
argument_list|()
argument_list|,
name|getOffsetHeight
argument_list|()
argument_list|)
expr_stmt|;
name|AriaStatus
operator|.
name|getInstance
argument_list|()
operator|.
name|setHTML
argument_list|(
name|ARIA
operator|.
name|courseRequests
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|clear
parameter_list|()
block|{
if|if
condition|(
name|iShowUnassignments
operator|!=
literal|null
condition|)
name|iShowUnassignments
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iSavedAssignment
operator|=
literal|null
expr_stmt|;
name|iCourseRequests
operator|.
name|clear
argument_list|()
expr_stmt|;
name|iLastResult
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|iRequests
operator|.
name|isVisible
argument_list|()
condition|)
block|{
name|prev
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|lastRequest
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsLoading
argument_list|()
argument_list|)
expr_stmt|;
name|iSectioningService
operator|.
name|lastRequest
argument_list|(
name|iOnline
argument_list|,
name|sessionId
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|CourseRequestInterface
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|onSuccess
parameter_list|(
specifier|final
name|CourseRequestInterface
name|request
parameter_list|)
block|{
if|if
condition|(
name|request
operator|.
name|isSaved
argument_list|()
operator|&&
name|request
operator|.
name|getCourses
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
return|return;
block|}
name|clear
argument_list|()
expr_stmt|;
name|iCourseRequests
operator|.
name|setRequest
argument_list|(
name|request
argument_list|)
expr_stmt|;
if|if
condition|(
name|iSchedule
operator|.
name|isVisible
argument_list|()
condition|)
block|{
name|iSectioningService
operator|.
name|lastResult
argument_list|(
name|iOnline
argument_list|,
name|request
operator|.
name|getAcademicSessionId
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|ClassAssignmentInterface
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|onSuccess
parameter_list|(
specifier|final
name|ClassAssignmentInterface
name|saved
parameter_list|)
block|{
name|iSavedAssignment
operator|=
name|saved
expr_stmt|;
name|iShowUnassignments
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|isSaved
argument_list|()
condition|)
block|{
name|fillIn
argument_list|(
name|saved
argument_list|)
expr_stmt|;
name|addHistory
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|iCourseRequests
operator|.
name|validate
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
condition|)
block|{
name|ArrayList
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
name|classes
init|=
operator|new
name|ArrayList
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|course
range|:
name|saved
operator|.
name|getCourseAssignments
argument_list|()
control|)
name|classes
operator|.
name|addAll
argument_list|(
name|course
operator|.
name|getClassAssignments
argument_list|()
argument_list|)
expr_stmt|;
name|iSectioningService
operator|.
name|section
argument_list|(
name|iOnline
argument_list|,
name|request
argument_list|,
name|classes
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|ClassAssignmentInterface
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|onSuccess
parameter_list|(
name|ClassAssignmentInterface
name|result
parameter_list|)
block|{
name|fillIn
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|addHistory
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|showSuggestionsAsync
parameter_list|(
specifier|final
name|int
name|rowIndex
parameter_list|)
block|{
if|if
condition|(
name|rowIndex
operator|<
literal|0
condition|)
return|return;
name|GWT
operator|.
name|runAsync
argument_list|(
operator|new
name|RunAsyncCallback
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|()
block|{
name|openSuggestionsBox
argument_list|(
name|rowIndex
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
class|class
name|HistoryItem
block|{
specifier|private
name|CourseRequestInterface
name|iRequest
decl_stmt|;
specifier|private
name|ClassAssignmentInterface
name|iAssignment
decl_stmt|;
specifier|private
name|boolean
name|iFirstPage
decl_stmt|;
specifier|private
name|Long
name|iSessionId
decl_stmt|;
specifier|private
name|String
name|iUser
decl_stmt|;
specifier|private
name|String
name|iError
init|=
literal|null
decl_stmt|;
specifier|private
name|int
name|iTab
init|=
literal|0
decl_stmt|;
specifier|private
name|HistoryItem
parameter_list|()
block|{
name|iRequest
operator|=
name|iCourseRequests
operator|.
name|getRequest
argument_list|()
expr_stmt|;
name|iAssignment
operator|=
name|iLastAssignment
expr_stmt|;
name|iFirstPage
operator|=
name|iSchedule
operator|.
name|isVisible
argument_list|()
expr_stmt|;
name|iSessionId
operator|=
name|iSessionSelector
operator|.
name|getAcademicSessionId
argument_list|()
expr_stmt|;
name|iUser
operator|=
name|iUserAuthentication
operator|.
name|getUser
argument_list|()
expr_stmt|;
if|if
condition|(
name|iErrorMessage
operator|.
name|isVisible
argument_list|()
condition|)
name|iError
operator|=
name|iErrorMessage
operator|.
name|getHTML
argument_list|()
expr_stmt|;
name|iTab
operator|=
name|iAssignmentTab
expr_stmt|;
block|}
specifier|public
name|void
name|restore
parameter_list|()
block|{
name|iInRestore
operator|=
literal|true
expr_stmt|;
name|iUserAuthentication
operator|.
name|setUser
argument_list|(
name|iUser
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
condition|)
block|{
name|iSessionSelector
operator|.
name|selectSession
argument_list|(
name|iSessionId
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Boolean
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
condition|)
block|{
name|iCourseRequests
operator|.
name|setRequest
argument_list|(
name|iRequest
argument_list|)
expr_stmt|;
if|if
condition|(
name|iTab
operator|!=
name|iAssignmentTab
condition|)
name|iAssignmentPanel
operator|.
name|selectTab
argument_list|(
name|iTab
argument_list|)
expr_stmt|;
if|if
condition|(
name|iFirstPage
condition|)
block|{
if|if
condition|(
operator|!
name|iSchedule
operator|.
name|isVisible
argument_list|()
condition|)
name|prev
argument_list|()
expr_stmt|;
name|iCourseRequests
operator|.
name|changeTip
argument_list|()
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|iAssignment
operator|!=
literal|null
condition|)
name|fillIn
argument_list|(
name|iAssignment
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iError
operator|!=
literal|null
operator|&&
operator|!
name|iError
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|iErrorMessage
operator|.
name|setHTML
argument_list|(
name|iError
argument_list|)
expr_stmt|;
name|iErrorMessage
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|iError
argument_list|)
expr_stmt|;
block|}
block|}
name|iInRestore
operator|=
literal|false
expr_stmt|;
name|ResizeEvent
operator|.
name|fire
argument_list|(
name|StudentSectioningWidget
operator|.
name|this
argument_list|,
name|getOffsetWidth
argument_list|()
argument_list|,
name|getOffsetHeight
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|reason
parameter_list|)
block|{
name|iInRestore
operator|=
literal|false
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iInRestore
operator|=
literal|false
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|reason
parameter_list|)
block|{
name|iInRestore
operator|=
literal|false
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setData
parameter_list|(
name|CourseRequestInterface
name|request
parameter_list|,
name|ClassAssignmentInterface
name|response
parameter_list|)
block|{
name|clear
argument_list|()
expr_stmt|;
name|iCourseRequests
operator|.
name|setRequest
argument_list|(
name|request
argument_list|)
expr_stmt|;
if|if
condition|(
name|response
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|request
operator|.
name|isSaved
argument_list|()
condition|)
block|{
name|iSavedAssignment
operator|=
name|response
expr_stmt|;
name|iShowUnassignments
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|fillIn
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|HandlerRegistration
name|addResizeHandler
parameter_list|(
name|ResizeHandler
name|handler
parameter_list|)
block|{
return|return
name|addHandler
argument_list|(
name|handler
argument_list|,
name|ResizeEvent
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

