begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|sectioning
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|P
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeConfirmationDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTabPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTableHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|WebTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTableHeader
operator|.
name|MenuBarWithAccessKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
operator|.
name|ErrorMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
operator|.
name|Note
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|CheckCoursesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|CourseMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|FreeTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|Preference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|RequestPriority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|RequestedCourse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|RequestedCourseStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|WaitListMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SpecialRegistrationInterface
operator|.
name|RetrieveSpecialRegistrationResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|SpecialRegistrationInterface
operator|.
name|SpecialRegistrationStatus
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Cursor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|i18n
operator|.
name|client
operator|.
name|DateTimeFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|i18n
operator|.
name|client
operator|.
name|NumberFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|resources
operator|.
name|client
operator|.
name|ImageResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|TakesValue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Event
operator|.
name|NativePreviewEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHorizontalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|MenuBar
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|MenuItem
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|PopupPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|StudentSchedule
extends|extends
name|Composite
implements|implements
name|TakesValue
argument_list|<
name|ClassAssignmentInterface
argument_list|>
block|{
specifier|public
specifier|static
specifier|final
name|StudentSectioningMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StudentSectioningResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StudentSectioningConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|DateTimeFormat
name|sDF
init|=
name|DateTimeFormat
operator|.
name|getFormat
argument_list|(
name|CONSTANTS
operator|.
name|requestDateFormat
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|DateTimeFormat
name|sTSF
init|=
name|DateTimeFormat
operator|.
name|getFormat
argument_list|(
name|CONSTANTS
operator|.
name|timeStampFormat
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|DateTimeFormat
name|sWLF
init|=
name|DateTimeFormat
operator|.
name|getFormat
argument_list|(
name|CONSTANTS
operator|.
name|requestWaitListedDateFormat
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|ClassAssignmentInterface
name|iAssignment
decl_stmt|;
specifier|private
name|UniTimeTabPanel
name|iTabs
decl_stmt|;
specifier|private
name|TimeGrid
name|iGrid
decl_stmt|;
specifier|private
name|WebTable
name|iAssignments
decl_stmt|,
name|iRequests
decl_stmt|,
name|iAdvReqs
decl_stmt|,
name|iNotes
decl_stmt|;
specifier|private
name|UniTimeTable
argument_list|<
name|RetrieveSpecialRegistrationResponse
argument_list|>
name|iSpecialRegistrations
decl_stmt|;
specifier|private
name|UniTimeTable
argument_list|<
name|RequestedCourse
argument_list|>
name|iWaitLists
decl_stmt|;
specifier|private
name|boolean
name|iOnline
init|=
literal|false
decl_stmt|;
specifier|private
name|float
name|iTotalCredit
init|=
literal|0f
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Character
argument_list|,
name|Integer
argument_list|>
name|iTabAccessKeys
init|=
operator|new
name|HashMap
argument_list|<
name|Character
argument_list|,
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|SelectionHandler
argument_list|<
name|Integer
argument_list|>
name|iHandler
decl_stmt|;
specifier|private
specifier|static
name|DateTimeFormat
name|sModifiedDateFormat
init|=
name|DateTimeFormat
operator|.
name|getFormat
argument_list|(
name|CONSTANTS
operator|.
name|timeStampFormat
argument_list|()
argument_list|)
decl_stmt|;
specifier|public
name|StudentSchedule
parameter_list|(
name|boolean
name|online
parameter_list|)
block|{
name|iOnline
operator|=
name|online
expr_stmt|;
name|iTabs
operator|=
operator|new
name|UniTimeTabPanel
argument_list|()
expr_stmt|;
name|iTabs
operator|.
name|setDeckStyleName
argument_list|(
literal|"unitime-TabPanel"
argument_list|)
expr_stmt|;
name|iAdvReqs
operator|=
operator|new
name|WebTable
argument_list|()
expr_stmt|;
name|iAdvReqs
operator|.
name|setEmptyMessage
argument_list|(
name|MESSAGES
operator|.
name|emptyRequests
argument_list|()
argument_list|)
expr_stmt|;
name|iAdvReqs
operator|.
name|setHeader
argument_list|(
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colPriority
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"25px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCourse
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colTitle
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"200px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCredit
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"20px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colPreferences
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"100px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCritical
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"20px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colWaitList
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"20px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colNotes
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"300px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colChanges
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"100px"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iAdvReqs
operator|.
name|setSelectSameIdRows
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|iAdvReqs
operator|.
name|addStyleName
argument_list|(
literal|"unitime-AdvisorCourseRequestsTable"
argument_list|)
expr_stmt|;
name|iTabs
operator|.
name|add
argument_list|(
name|iAdvReqs
argument_list|,
name|MESSAGES
operator|.
name|tabAdvisorRequests
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Character
name|cha
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|MESSAGES
operator|.
name|tabAdvisorRequests
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cha
operator|!=
literal|null
condition|)
name|iTabAccessKeys
operator|.
name|put
argument_list|(
name|cha
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|iRequests
operator|=
operator|new
name|WebTable
argument_list|()
expr_stmt|;
name|iRequests
operator|.
name|setEmptyMessage
argument_list|(
name|MESSAGES
operator|.
name|emptyRequests
argument_list|()
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setHeader
argument_list|(
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colPriority
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"25px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCourse
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colTitle
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"200px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCredit
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"20px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colPreferences
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"100px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colWarnings
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"200px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colStatus
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"20px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCritical
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"20px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colWaitList
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"20px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colRequestTimeStamp
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"50px"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iTabs
operator|.
name|add
argument_list|(
name|iRequests
argument_list|,
name|MESSAGES
operator|.
name|tabRequests
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Character
name|ch0
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|MESSAGES
operator|.
name|tabRequests
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|ch0
operator|!=
literal|null
condition|)
name|iTabAccessKeys
operator|.
name|put
argument_list|(
name|ch0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iAssignments
operator|=
operator|new
name|WebTable
argument_list|()
expr_stmt|;
name|iAssignments
operator|.
name|setHeader
argument_list|(
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colSubject
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCourse
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colSubpart
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"50px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colClass
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colLimit
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"60px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colDays
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"50px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colStart
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colEnd
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colDate
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colRoom
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"100px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colInstructor
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"100px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colParent
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colNoteIcon
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"10px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCredit
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colEnrollmentTimeStamp
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iAssignments
operator|.
name|setEmptyMessage
argument_list|(
name|MESSAGES
operator|.
name|emptySchedule
argument_list|()
argument_list|)
expr_stmt|;
name|iNotes
operator|=
operator|new
name|WebTable
argument_list|()
expr_stmt|;
name|iNotes
operator|.
name|setHeader
argument_list|(
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colTimeStamp
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colNote
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"400x"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colNoteAuthor
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75x"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iNotes
operator|.
name|setEmptyMessage
argument_list|(
name|MESSAGES
operator|.
name|emptyNotes
argument_list|()
argument_list|)
expr_stmt|;
name|iSpecialRegistrations
operator|=
operator|new
name|UniTimeTable
argument_list|<
name|RetrieveSpecialRegistrationResponse
argument_list|>
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|UniTimeTableHeader
argument_list|>
name|header
init|=
operator|new
name|ArrayList
argument_list|<
name|UniTimeTableHeader
argument_list|>
argument_list|()
decl_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colSpecRegSubmitted
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colSubject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colCourse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colSubpart
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colClass
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colLimit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colCredit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colGradeMode
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colSpecRegErrors
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|iSpecialRegistrations
operator|.
name|addStyleName
argument_list|(
literal|"unitime-SpecialRegistrationsPanel"
argument_list|)
expr_stmt|;
name|iSpecialRegistrations
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|header
argument_list|)
expr_stmt|;
name|iWaitLists
operator|=
operator|new
name|UniTimeTable
argument_list|<
name|RequestedCourse
argument_list|>
argument_list|()
expr_stmt|;
name|header
operator|=
operator|new
name|ArrayList
argument_list|<
name|UniTimeTableHeader
argument_list|>
argument_list|()
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colWaitListedTimeStamp
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colCourse
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colTitle
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colCredit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colWaitListPosition
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colRequirements
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|.
name|add
argument_list|(
operator|new
name|UniTimeTableHeader
argument_list|(
name|MESSAGES
operator|.
name|colWaitListErrors
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|iWaitLists
operator|.
name|addStyleName
argument_list|(
literal|"unitime-WaitListsPanel"
argument_list|)
expr_stmt|;
name|iWaitLists
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|header
argument_list|)
expr_stmt|;
name|iTabs
operator|.
name|add
argument_list|(
name|iAssignments
argument_list|,
name|MESSAGES
operator|.
name|tabClasses
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Character
name|ch1
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|MESSAGES
operator|.
name|tabClasses
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|ch1
operator|!=
literal|null
condition|)
name|iTabAccessKeys
operator|.
name|put
argument_list|(
name|ch1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|iGrid
operator|=
operator|new
name|TimeGrid
argument_list|()
expr_stmt|;
name|iTabs
operator|.
name|add
argument_list|(
name|iGrid
argument_list|,
name|MESSAGES
operator|.
name|tabTimetable
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Character
name|ch2
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|MESSAGES
operator|.
name|tabTimetable
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|ch2
operator|!=
literal|null
condition|)
name|iTabAccessKeys
operator|.
name|put
argument_list|(
name|ch2
argument_list|,
literal|3
argument_list|)
expr_stmt|;
if|if
condition|(
name|iOnline
condition|)
block|{
name|iTabs
operator|.
name|add
argument_list|(
name|iSpecialRegistrations
argument_list|,
name|MESSAGES
operator|.
name|tabSpecialRegistrations
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Character
name|ch4
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|MESSAGES
operator|.
name|tabSpecialRegistrations
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|ch4
operator|!=
literal|null
condition|)
name|iTabAccessKeys
operator|.
name|put
argument_list|(
name|ch4
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iOnline
condition|)
block|{
name|iTabs
operator|.
name|add
argument_list|(
name|iWaitLists
argument_list|,
name|MESSAGES
operator|.
name|tabWaitListedCourses
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Character
name|ch5
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|MESSAGES
operator|.
name|tabWaitListedCourses
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|ch5
operator|!=
literal|null
condition|)
name|iTabAccessKeys
operator|.
name|put
argument_list|(
name|ch5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|iOnline
condition|)
block|{
name|iTabs
operator|.
name|add
argument_list|(
name|iNotes
argument_list|,
name|MESSAGES
operator|.
name|tabNotes
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Character
name|ch3
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|MESSAGES
operator|.
name|tabNotes
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|ch3
operator|!=
literal|null
condition|)
name|iTabAccessKeys
operator|.
name|put
argument_list|(
name|ch3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|iOnline
operator|&&
name|SectioningStatusCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|getStudentTab
argument_list|()
operator|>=
literal|4
condition|)
name|iTabs
operator|.
name|selectTab
argument_list|(
literal|2
argument_list|)
expr_stmt|;
else|else
name|iTabs
operator|.
name|selectTab
argument_list|(
name|SectioningStatusCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|getStudentTab
argument_list|()
argument_list|)
expr_stmt|;
name|iTabs
operator|.
name|addSelectionHandler
argument_list|(
operator|new
name|SelectionHandler
argument_list|<
name|Integer
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSelection
parameter_list|(
name|SelectionEvent
argument_list|<
name|Integer
argument_list|>
name|event
parameter_list|)
block|{
name|SectioningStatusCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|setStudentTab
argument_list|(
name|event
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iHandler
operator|!=
literal|null
condition|)
name|iHandler
operator|.
name|onSelection
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iTabs
operator|.
name|addStyleName
argument_list|(
literal|"unitime-StudentSchedule"
argument_list|)
expr_stmt|;
name|initWidget
argument_list|(
name|iTabs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setWaitListMode
parameter_list|(
name|WaitListMode
name|mode
parameter_list|,
name|boolean
name|advisorRequests
parameter_list|,
name|boolean
name|studentRequests
parameter_list|)
block|{
switch|switch
condition|(
name|mode
condition|)
block|{
case|case
name|WaitList
case|:
if|if
condition|(
name|studentRequests
condition|)
name|iRequests
operator|.
name|getTable
argument_list|()
operator|.
name|setHTML
argument_list|(
literal|0
argument_list|,
literal|8
argument_list|,
name|MESSAGES
operator|.
name|colWaitList
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|advisorRequests
condition|)
name|iAdvReqs
operator|.
name|getTable
argument_list|()
operator|.
name|setHTML
argument_list|(
literal|0
argument_list|,
literal|6
argument_list|,
name|MESSAGES
operator|.
name|colWaitList
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|NoSubs
case|:
default|default:
if|if
condition|(
name|studentRequests
condition|)
name|iRequests
operator|.
name|getTable
argument_list|()
operator|.
name|setHTML
argument_list|(
literal|0
argument_list|,
literal|8
argument_list|,
name|MESSAGES
operator|.
name|colNoSubs
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|advisorRequests
condition|)
name|iAdvReqs
operator|.
name|getTable
argument_list|()
operator|.
name|setHTML
argument_list|(
literal|0
argument_list|,
literal|6
argument_list|,
name|MESSAGES
operator|.
name|colNoSubs
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
annotation|@
name|Override
specifier|public
name|ClassAssignmentInterface
name|getValue
parameter_list|()
block|{
return|return
name|iAssignment
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|ClassAssignmentInterface
name|result
parameter_list|)
block|{
name|iAssignment
operator|=
name|result
expr_stmt|;
name|fillInAdvisorRequests
argument_list|()
expr_stmt|;
name|fillInRequests
argument_list|()
expr_stmt|;
name|fillInAssignments
argument_list|()
expr_stmt|;
name|fillInTimeGrid
argument_list|()
expr_stmt|;
if|if
condition|(
name|iOnline
condition|)
name|fillInNotes
argument_list|()
expr_stmt|;
if|if
condition|(
name|iOnline
condition|)
name|fillInSpecialRegistrations
argument_list|()
expr_stmt|;
if|if
condition|(
name|iOnline
condition|)
name|fillInWaitLists
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|String
name|getChanges
parameter_list|(
name|Request
name|request
parameter_list|,
name|RequestedCourse
name|rc
parameter_list|)
block|{
if|if
condition|(
operator|!
name|rc
operator|.
name|hasCourseId
argument_list|()
condition|)
return|return
literal|null
return|;
name|RequestPriority
name|arp
init|=
name|iAssignment
operator|.
name|getAdvisorRequest
argument_list|()
operator|.
name|getRequestPriority
argument_list|(
name|rc
argument_list|)
decl_stmt|;
name|RequestPriority
name|rp
init|=
operator|(
name|iAssignment
operator|.
name|hasRequest
argument_list|()
condition|?
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getRequestPriority
argument_list|(
name|rc
argument_list|)
else|:
literal|null
operator|)
decl_stmt|;
if|if
condition|(
name|arp
operator|.
name|getChoice
argument_list|()
operator|==
literal|0
condition|)
block|{
if|if
condition|(
name|rp
operator|==
literal|null
condition|)
block|{
comment|// not present among student's CR
if|if
condition|(
name|request
operator|.
name|getRequestedCourse
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|1
condition|)
block|{
name|RequestPriority
name|top
init|=
literal|null
decl_stmt|;
name|RequestedCourse
name|other
init|=
literal|null
decl_stmt|;
for|for
control|(
name|RequestedCourse
name|x
range|:
name|request
operator|.
name|getRequestedCourse
argument_list|()
control|)
block|{
name|RequestPriority
name|p
init|=
operator|(
name|iAssignment
operator|.
name|hasRequest
argument_list|()
condition|?
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getRequestPriority
argument_list|(
name|x
argument_list|)
else|:
literal|null
operator|)
decl_stmt|;
if|if
condition|(
name|p
operator|!=
literal|null
operator|&&
operator|(
name|top
operator|==
literal|null
operator|||
name|top
operator|.
name|compareTo
argument_list|(
name|p
argument_list|)
operator|>=
literal|0
operator|)
condition|)
block|{
name|top
operator|=
name|p
expr_stmt|;
name|other
operator|=
name|x
expr_stmt|;
block|}
block|}
if|if
condition|(
name|top
operator|!=
literal|null
condition|)
block|{
name|String
name|prio
init|=
literal|"&rarr; "
decl_stmt|;
if|if
condition|(
name|top
operator|.
name|getPriority
argument_list|()
operator|!=
name|arp
operator|.
name|getPriority
argument_list|()
condition|)
block|{
name|prio
operator|=
name|top
operator|.
name|getPriority
argument_list|()
operator|<
name|arp
operator|.
name|getPriority
argument_list|()
condition|?
literal|"&uarr; "
else|:
literal|"&darr; "
expr_stmt|;
block|}
return|return
name|prio
operator|+
name|MESSAGES
operator|.
name|advChangesMissingCourseButHasAlt
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
name|other
operator|.
name|getCourseName
argument_list|()
argument_list|)
return|;
block|}
return|return
name|MESSAGES
operator|.
name|advChangesMissingCourseWithAllAlts
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
return|;
block|}
return|return
name|MESSAGES
operator|.
name|advChangesMissingCourse
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
return|;
block|}
if|if
condition|(
name|rp
operator|.
name|isAlternative
argument_list|()
operator|!=
name|arp
operator|.
name|isAlternative
argument_list|()
condition|)
block|{
if|if
condition|(
name|rp
operator|.
name|isAlternative
argument_list|()
condition|)
return|return
name|MESSAGES
operator|.
name|advChangesPrimaryToSubstitute
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
name|rp
operator|.
name|getPriority
argument_list|()
argument_list|)
return|;
return|return
name|MESSAGES
operator|.
name|advChangesSubstituteToPrimary
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
name|rp
operator|.
name|getPriority
argument_list|()
argument_list|)
return|;
block|}
name|String
name|prio
init|=
literal|"&rarr; "
decl_stmt|;
if|if
condition|(
name|rp
operator|.
name|getPriority
argument_list|()
operator|!=
name|arp
operator|.
name|getPriority
argument_list|()
condition|)
block|{
name|prio
operator|=
name|rp
operator|.
name|getPriority
argument_list|()
operator|<
name|arp
operator|.
name|getPriority
argument_list|()
condition|?
literal|"&uarr; "
else|:
literal|"&darr; "
expr_stmt|;
block|}
if|if
condition|(
name|rp
operator|.
name|getChoice
argument_list|()
operator|!=
name|arp
operator|.
name|getChoice
argument_list|()
condition|)
block|{
name|RequestedCourse
name|ch1
init|=
operator|(
name|rp
operator|.
name|isAlternative
argument_list|()
condition|?
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getAlternatives
argument_list|()
else|:
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getCourses
argument_list|()
operator|)
operator|.
name|get
argument_list|(
name|rp
operator|.
name|getPriority
argument_list|()
operator|-
literal|1
argument_list|)
operator|.
name|getRequestedCourse
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|RequestPriority
name|p
init|=
name|iAssignment
operator|.
name|getAdvisorRequest
argument_list|()
operator|.
name|getRequestPriority
argument_list|(
name|ch1
argument_list|)
decl_stmt|;
if|if
condition|(
name|p
operator|!=
literal|null
operator|&&
name|p
operator|.
name|getPriority
argument_list|()
operator|==
name|arp
operator|.
name|getPriority
argument_list|()
condition|)
block|{
return|return
name|prio
operator|+
name|MESSAGES
operator|.
name|advChanges1stChoiceChanged
argument_list|(
name|ch1
operator|.
name|getCourseName
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|prio
operator|+
name|MESSAGES
operator|.
name|advChangesDifferent1stChoice
argument_list|(
name|ch1
operator|.
name|getCourseName
argument_list|()
argument_list|)
return|;
block|}
block|}
if|if
condition|(
name|rp
operator|.
name|getPriority
argument_list|()
operator|!=
name|arp
operator|.
name|getPriority
argument_list|()
condition|)
block|{
return|return
name|prio
operator|+
operator|(
name|rp
operator|.
name|isAlternative
argument_list|()
condition|?
name|MESSAGES
operator|.
name|advChangesMovedToSubstitute
argument_list|(
name|rp
operator|.
name|getPriority
argument_list|()
argument_list|)
else|:
name|MESSAGES
operator|.
name|advChangesMovedToPriority
argument_list|(
name|rp
operator|.
name|getPriority
argument_list|()
argument_list|)
operator|)
return|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|rp
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getRequestPriority
argument_list|(
name|request
operator|.
name|getRequestedCourse
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|!=
literal|null
condition|)
return|return
name|MESSAGES
operator|.
name|advChangesMissingCourse
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
return|;
name|int
name|nrContains
init|=
literal|0
decl_stmt|;
for|for
control|(
name|RequestedCourse
name|x
range|:
name|request
operator|.
name|getRequestedCourse
argument_list|()
control|)
if|if
condition|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getRequestPriority
argument_list|(
name|x
argument_list|)
operator|!=
literal|null
condition|)
name|nrContains
operator|++
expr_stmt|;
if|if
condition|(
name|nrContains
operator|>
literal|1
condition|)
return|return
name|MESSAGES
operator|.
name|advChangesMissingCourse
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
return|;
return|return
literal|null
return|;
block|}
if|if
condition|(
name|rp
operator|.
name|isAlternative
argument_list|()
operator|!=
name|arp
operator|.
name|isAlternative
argument_list|()
condition|)
block|{
if|if
condition|(
name|rp
operator|.
name|isAlternative
argument_list|()
condition|)
return|return
name|MESSAGES
operator|.
name|advChangesPrimaryToSubstitute
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
name|rp
operator|.
name|getPriority
argument_list|()
argument_list|)
return|;
return|return
name|MESSAGES
operator|.
name|advChangesSubstituteToPrimary
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
name|rp
operator|.
name|getPriority
argument_list|()
argument_list|)
return|;
block|}
name|RequestPriority
name|top
init|=
literal|null
decl_stmt|;
for|for
control|(
name|RequestedCourse
name|x
range|:
name|request
operator|.
name|getRequestedCourse
argument_list|()
control|)
block|{
name|RequestPriority
name|p
init|=
operator|(
name|iAssignment
operator|.
name|hasRequest
argument_list|()
condition|?
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getRequestPriority
argument_list|(
name|x
argument_list|)
else|:
literal|null
operator|)
decl_stmt|;
if|if
condition|(
name|p
operator|!=
literal|null
operator|&&
operator|(
name|top
operator|==
literal|null
operator|||
name|top
operator|.
name|compareTo
argument_list|(
name|p
argument_list|)
operator|>=
literal|0
operator|)
condition|)
block|{
name|top
operator|=
name|p
expr_stmt|;
block|}
block|}
if|if
condition|(
name|rp
operator|.
name|getChoice
argument_list|()
operator|!=
name|arp
operator|.
name|getChoice
argument_list|()
condition|)
block|{
if|if
condition|(
name|rp
operator|.
name|getChoice
argument_list|()
operator|==
literal|0
condition|)
block|{
if|if
condition|(
name|top
operator|.
name|getPriority
argument_list|()
operator|==
name|rp
operator|.
name|getPriority
argument_list|()
operator|&&
name|top
operator|.
name|getChoice
argument_list|()
operator|==
name|rp
operator|.
name|getChoice
argument_list|()
condition|)
return|return
literal|null
return|;
if|if
condition|(
name|top
operator|.
name|getPriority
argument_list|()
operator|!=
name|rp
operator|.
name|getPriority
argument_list|()
operator|&&
name|rp
operator|.
name|getPriority
argument_list|()
operator|!=
name|arp
operator|.
name|getPriority
argument_list|()
condition|)
block|{
name|String
name|prio
init|=
name|rp
operator|.
name|getPriority
argument_list|()
operator|<
name|arp
operator|.
name|getPriority
argument_list|()
condition|?
literal|"&uarr; "
else|:
literal|"&darr; "
decl_stmt|;
return|return
name|prio
operator|+
operator|(
name|rp
operator|.
name|isAlternative
argument_list|()
condition|?
name|MESSAGES
operator|.
name|advChangesMovedToSubstitute
argument_list|(
name|rp
operator|.
name|getPriority
argument_list|()
argument_list|)
else|:
name|MESSAGES
operator|.
name|advChangesMovedToPriority
argument_list|(
name|rp
operator|.
name|getPriority
argument_list|()
argument_list|)
operator|)
return|;
block|}
return|return
name|MESSAGES
operator|.
name|advChangesMoved1stChoice
argument_list|()
return|;
block|}
name|RequestedCourse
name|ch1
init|=
operator|(
name|rp
operator|.
name|isAlternative
argument_list|()
condition|?
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getAlternatives
argument_list|()
else|:
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getCourses
argument_list|()
operator|)
operator|.
name|get
argument_list|(
name|rp
operator|.
name|getPriority
argument_list|()
operator|-
literal|1
argument_list|)
operator|.
name|getRequestedCourse
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|RequestPriority
name|p
init|=
name|iAssignment
operator|.
name|getAdvisorRequest
argument_list|()
operator|.
name|getRequestPriority
argument_list|(
name|ch1
argument_list|)
decl_stmt|;
if|if
condition|(
name|p
operator|==
literal|null
operator|||
name|p
operator|.
name|getPriority
argument_list|()
operator|!=
name|arp
operator|.
name|getPriority
argument_list|()
condition|)
block|{
name|String
name|prio
init|=
literal|"&rarr; "
decl_stmt|;
if|if
condition|(
name|rp
operator|.
name|getPriority
argument_list|()
operator|!=
name|arp
operator|.
name|getPriority
argument_list|()
condition|)
block|{
name|prio
operator|=
name|rp
operator|.
name|getPriority
argument_list|()
operator|<
name|arp
operator|.
name|getPriority
argument_list|()
condition|?
literal|"&uarr; "
else|:
literal|"&darr; "
expr_stmt|;
block|}
return|return
name|prio
operator|+
name|MESSAGES
operator|.
name|advChangesDifferent1stChoice
argument_list|(
name|ch1
operator|.
name|getCourseName
argument_list|()
argument_list|)
return|;
block|}
if|if
condition|(
name|rp
operator|.
name|getChoice
argument_list|()
operator|==
literal|1
condition|)
return|return
name|MESSAGES
operator|.
name|advChangesMoved2ndChoice
argument_list|()
return|;
if|if
condition|(
name|rp
operator|.
name|getChoice
argument_list|()
operator|==
literal|2
condition|)
return|return
name|MESSAGES
operator|.
name|advChangesMoved3rdChoice
argument_list|()
return|;
block|}
if|else if
condition|(
name|top
operator|.
name|getPriority
argument_list|()
operator|!=
name|rp
operator|.
name|getPriority
argument_list|()
operator|&&
name|rp
operator|.
name|getPriority
argument_list|()
operator|!=
name|arp
operator|.
name|getPriority
argument_list|()
condition|)
block|{
name|String
name|prio
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|top
operator|.
name|getPriority
argument_list|()
operator|!=
name|rp
operator|.
name|getPriority
argument_list|()
operator|&&
name|rp
operator|.
name|getPriority
argument_list|()
operator|!=
name|arp
operator|.
name|getPriority
argument_list|()
condition|)
block|{
name|prio
operator|=
name|rp
operator|.
name|getPriority
argument_list|()
operator|<
name|arp
operator|.
name|getPriority
argument_list|()
condition|?
literal|"&uarr; "
else|:
literal|"&darr; "
expr_stmt|;
block|}
return|return
name|prio
operator|+
operator|(
name|rp
operator|.
name|isAlternative
argument_list|()
condition|?
name|MESSAGES
operator|.
name|advChangesMovedToSubstitute
argument_list|(
name|rp
operator|.
name|getPriority
argument_list|()
argument_list|)
else|:
name|MESSAGES
operator|.
name|advChangesMovedToPriority
argument_list|(
name|rp
operator|.
name|getPriority
argument_list|()
argument_list|)
operator|)
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|protected
name|void
name|fillInAdvisorRequests
parameter_list|()
block|{
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
name|rows
init|=
operator|new
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
argument_list|()
decl_stmt|;
name|boolean
name|hasPref
init|=
literal|false
decl_stmt|;
name|boolean
name|hasCrit
init|=
literal|false
decl_stmt|;
name|boolean
name|hasWL
init|=
literal|false
decl_stmt|;
name|boolean
name|hasChanges
init|=
literal|false
decl_stmt|;
name|iTabs
operator|.
name|getTabBar
argument_list|()
operator|.
name|setTabEnabled
argument_list|(
literal|0
argument_list|,
name|iAssignment
operator|.
name|hasAdvisorRequest
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iAssignment
operator|.
name|hasAdvisorRequest
argument_list|()
condition|)
block|{
name|setWaitListMode
argument_list|(
name|iAssignment
operator|.
name|getAdvisorRequest
argument_list|()
operator|.
name|getWaitListMode
argument_list|()
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|int
name|priority
init|=
literal|1
decl_stmt|;
for|for
control|(
name|Request
name|request
range|:
name|iAssignment
operator|.
name|getAdvisorRequest
argument_list|()
operator|.
name|getCourses
argument_list|()
control|)
block|{
if|if
condition|(
name|request
operator|.
name|hasRequestedCourse
argument_list|()
condition|)
block|{
if|if
condition|(
name|request
operator|.
name|isCritical
argument_list|()
operator|||
name|request
operator|.
name|isImportant
argument_list|()
condition|)
name|hasCrit
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|iAssignment
operator|.
name|getAdvisorRequest
argument_list|()
operator|.
name|getWaitListMode
argument_list|()
operator|==
name|WaitListMode
operator|.
name|WaitList
condition|)
block|{
if|if
condition|(
name|request
operator|.
name|isWaitList
argument_list|()
condition|)
name|hasWL
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|request
operator|.
name|isNoSub
argument_list|()
condition|)
name|hasWL
operator|=
literal|true
expr_stmt|;
block|}
name|boolean
name|first
init|=
literal|true
decl_stmt|;
for|for
control|(
name|RequestedCourse
name|rc
range|:
name|request
operator|.
name|getRequestedCourse
argument_list|()
control|)
block|{
name|WebTable
operator|.
name|Row
name|row
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|isCourse
argument_list|()
condition|)
block|{
name|Collection
argument_list|<
name|Preference
argument_list|>
name|prefs
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|hasSelectedIntructionalMethods
argument_list|()
condition|)
block|{
if|if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|ArrayList
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
operator|.
name|size
argument_list|()
operator|+
name|rc
operator|.
name|getSelectedClasses
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|prefs
operator|!=
literal|null
condition|)
name|hasPref
operator|=
literal|true
expr_stmt|;
name|String
name|changes
init|=
name|getChanges
argument_list|(
name|request
argument_list|,
name|rc
argument_list|)
decl_stmt|;
if|if
condition|(
name|changes
operator|!=
literal|null
condition|)
name|hasChanges
operator|=
literal|true
expr_stmt|;
name|boolean
name|enrolled
init|=
literal|false
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|course
range|:
name|iAssignment
operator|.
name|getCourseAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|course
operator|.
name|isAssigned
argument_list|()
operator|&&
operator|!
name|course
operator|.
name|isTeachingAssignment
argument_list|()
operator|&&
operator|!
name|course
operator|.
name|isFreeTime
argument_list|()
operator|&&
name|course
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|rc
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
block|{
name|enrolled
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|first
condition|)
block|{
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|request
operator|.
name|hasAdvisorCredit
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorCredit
argument_list|()
else|:
literal|""
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|NoteCell
name|note
init|=
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|request
operator|.
name|hasAdvisorNote
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorNote
argument_list|()
else|:
literal|""
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|note
operator|.
name|setRowSpan
argument_list|(
name|request
operator|.
name|getRequestedCourse
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsPriority
argument_list|(
name|priority
argument_list|)
argument_list|)
argument_list|,
operator|(
name|enrolled
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|courseEnrolled
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|titleCourseEnrolled
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
argument_list|,
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|true
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCourseTitle
argument_list|()
condition|?
name|rc
operator|.
name|getCourseTitle
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
name|credit
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|ToolBox
operator|.
name|toString
argument_list|(
name|prefs
argument_list|)
argument_list|,
literal|true
argument_list|)
argument_list|,
name|request
operator|.
name|isCritical
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsCritical
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestCritical
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
name|request
operator|.
name|isImportant
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsImportant
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestImportant
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|(
name|iAssignment
operator|.
name|getAdvisorRequest
argument_list|()
operator|.
name|getWaitListMode
argument_list|()
operator|==
name|WaitListMode
operator|.
name|WaitList
condition|?
operator|(
name|request
operator|.
name|isWaitList
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsWaitList
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestWaitListed
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
operator|)
else|:
operator|(
name|request
operator|.
name|isNoSub
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsWaitList
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestNoSubs
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
operator|)
operator|)
argument_list|,
name|note
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|changes
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|(
name|enrolled
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|courseEnrolled
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|titleCourseEnrolled
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
argument_list|,
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|true
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCourseTitle
argument_list|()
condition|?
name|rc
operator|.
name|getCourseTitle
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|ToolBox
operator|.
name|toString
argument_list|(
name|prefs
argument_list|)
argument_list|,
literal|true
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|changes
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|rc
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
name|String
name|free
init|=
literal|""
decl_stmt|;
for|for
control|(
name|FreeTime
name|ft
range|:
name|rc
operator|.
name|getFreeTime
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|free
operator|.
name|isEmpty
argument_list|()
condition|)
name|free
operator|+=
literal|", "
expr_stmt|;
name|free
operator|+=
name|ft
operator|.
name|toString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|first
condition|)
block|{
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
operator|&&
name|request
operator|.
name|hasAdvisorCredit
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorCredit
argument_list|()
else|:
literal|""
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|NoteCell
name|note
init|=
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|request
operator|.
name|hasAdvisorNote
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorNote
argument_list|()
else|:
literal|""
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|note
operator|.
name|setRowSpan
argument_list|(
name|request
operator|.
name|getRequestedCourse
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsPriority
argument_list|(
name|priority
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|CONSTANTS
operator|.
name|freePrefix
argument_list|()
operator|+
name|free
argument_list|,
literal|2
argument_list|,
literal|null
argument_list|)
argument_list|,
name|credit
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
name|note
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|CONSTANTS
operator|.
name|freePrefix
argument_list|()
operator|+
name|free
argument_list|,
literal|2
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|priority
operator|>
literal|1
operator|&&
name|first
condition|)
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|row
operator|.
name|setId
argument_list|(
literal|"P"
operator|+
name|priority
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|first
operator|=
literal|false
expr_stmt|;
block|}
name|priority
operator|++
expr_stmt|;
block|}
else|else
block|{
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|request
operator|.
name|hasAdvisorCredit
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorCredit
argument_list|()
else|:
literal|""
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|NoteCell
name|note
init|=
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|request
operator|.
name|hasAdvisorNote
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorNote
argument_list|()
else|:
literal|""
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsPriority
argument_list|(
name|priority
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
name|credit
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
name|note
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|priority
operator|>
literal|1
condition|)
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|row
operator|.
name|setId
argument_list|(
literal|"P"
operator|+
name|priority
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
block|}
name|priority
operator|=
literal|1
expr_stmt|;
for|for
control|(
name|Request
name|request
range|:
name|iAssignment
operator|.
name|getAdvisorRequest
argument_list|()
operator|.
name|getAlternatives
argument_list|()
control|)
block|{
if|if
condition|(
name|request
operator|.
name|hasRequestedCourse
argument_list|()
condition|)
block|{
name|boolean
name|first
init|=
literal|true
decl_stmt|;
for|for
control|(
name|RequestedCourse
name|rc
range|:
name|request
operator|.
name|getRequestedCourse
argument_list|()
control|)
block|{
name|WebTable
operator|.
name|Row
name|row
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|isCourse
argument_list|()
condition|)
block|{
name|Collection
argument_list|<
name|Preference
argument_list|>
name|prefs
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|hasSelectedIntructionalMethods
argument_list|()
condition|)
block|{
if|if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|ArrayList
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
operator|.
name|size
argument_list|()
operator|+
name|rc
operator|.
name|getSelectedClasses
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|prefs
operator|!=
literal|null
condition|)
name|hasPref
operator|=
literal|true
expr_stmt|;
name|String
name|changes
init|=
name|getChanges
argument_list|(
name|request
argument_list|,
name|rc
argument_list|)
decl_stmt|;
if|if
condition|(
name|changes
operator|!=
literal|null
condition|)
name|hasChanges
operator|=
literal|true
expr_stmt|;
name|boolean
name|enrolled
init|=
literal|false
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|course
range|:
name|iAssignment
operator|.
name|getCourseAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|course
operator|.
name|isAssigned
argument_list|()
operator|&&
operator|!
name|course
operator|.
name|isTeachingAssignment
argument_list|()
operator|&&
operator|!
name|course
operator|.
name|isFreeTime
argument_list|()
operator|&&
name|course
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|rc
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
block|{
name|enrolled
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|first
condition|)
block|{
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|request
operator|.
name|hasAdvisorCredit
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorCredit
argument_list|()
else|:
literal|""
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|NoteCell
name|note
init|=
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|request
operator|.
name|hasAdvisorNote
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorNote
argument_list|()
else|:
literal|""
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|note
operator|.
name|setRowSpan
argument_list|(
name|request
operator|.
name|getRequestedCourse
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsAlternate
argument_list|(
name|priority
argument_list|)
argument_list|)
argument_list|,
operator|(
name|enrolled
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|courseEnrolled
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|titleCourseEnrolled
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
argument_list|,
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|true
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCourseTitle
argument_list|()
condition|?
name|rc
operator|.
name|getCourseTitle
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
name|credit
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|ToolBox
operator|.
name|toString
argument_list|(
name|prefs
argument_list|)
argument_list|,
literal|true
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
name|note
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|changes
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|(
name|enrolled
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|courseEnrolled
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|titleCourseEnrolled
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
argument_list|,
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|true
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCourseTitle
argument_list|()
condition|?
name|rc
operator|.
name|getCourseTitle
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|ToolBox
operator|.
name|toString
argument_list|(
name|prefs
argument_list|)
argument_list|,
literal|true
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|changes
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|first
condition|)
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|priority
operator|==
literal|1
condition|?
literal|"top-border-solid"
else|:
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|row
operator|.
name|setId
argument_list|(
literal|"A"
operator|+
name|priority
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|first
operator|=
literal|false
expr_stmt|;
block|}
name|priority
operator|++
expr_stmt|;
block|}
else|else
block|{
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|request
operator|.
name|hasAdvisorCredit
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorCredit
argument_list|()
else|:
literal|""
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|NoteCell
name|note
init|=
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|request
operator|.
name|hasAdvisorNote
argument_list|()
condition|?
name|request
operator|.
name|getAdvisorNote
argument_list|()
else|:
literal|""
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|courseRequestsAlternate
argument_list|(
name|priority
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
name|credit
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
name|note
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|priority
operator|==
literal|1
condition|?
literal|"top-border-solid"
else|:
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|row
operator|.
name|setId
argument_list|(
literal|"A"
operator|+
name|priority
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
block|}
name|float
name|min
init|=
literal|0
decl_stmt|,
name|max
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Request
name|request
range|:
name|iAssignment
operator|.
name|getAdvisorRequest
argument_list|()
operator|.
name|getCourses
argument_list|()
control|)
block|{
name|min
operator|+=
name|request
operator|.
name|getAdvisorCreditMin
argument_list|()
expr_stmt|;
name|max
operator|+=
name|request
operator|.
name|getAdvisorCreditMax
argument_list|()
expr_stmt|;
block|}
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|min
operator|<
name|max
condition|?
name|MESSAGES
operator|.
name|creditRange
argument_list|(
name|min
argument_list|,
name|max
argument_list|)
else|:
name|MESSAGES
operator|.
name|credit
argument_list|(
name|min
argument_list|)
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|String
name|noteMessage
init|=
operator|(
name|iAssignment
operator|.
name|getAdvisorRequest
argument_list|()
operator|.
name|hasCreditNote
argument_list|()
condition|?
name|iAssignment
operator|.
name|getAdvisorRequest
argument_list|()
operator|.
name|getCreditNote
argument_list|()
else|:
literal|""
operator|)
decl_stmt|;
if|if
condition|(
name|iAssignment
operator|.
name|getAdvisorRequest
argument_list|()
operator|.
name|hasReleasedPin
argument_list|()
operator|&&
operator|!
name|noteMessage
operator|.
name|contains
argument_list|(
name|iAssignment
operator|.
name|getAdvisorRequest
argument_list|()
operator|.
name|getPin
argument_list|()
argument_list|)
condition|)
name|noteMessage
operator|+=
operator|(
name|noteMessage
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|"\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|advisorNotePin
argument_list|(
name|iAssignment
operator|.
name|getAdvisorRequest
argument_list|()
operator|.
name|getPin
argument_list|()
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|NoteCell
name|note
init|=
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|noteMessage
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|note
operator|.
name|setColSpan
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|Row
name|crow
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|rowTotalPriorityCreditHours
argument_list|()
argument_list|,
literal|2
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
name|credit
argument_list|,
name|note
argument_list|)
decl_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|crow
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
literal|"top-border-solid"
argument_list|)
expr_stmt|;
name|crow
operator|.
name|getCell
argument_list|(
literal|0
argument_list|)
operator|.
name|setStyleName
argument_list|(
literal|"top-border-solid text-bold"
argument_list|)
expr_stmt|;
name|crow
operator|.
name|setId
argument_list|(
literal|"C"
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|crow
argument_list|)
expr_stmt|;
block|}
name|WebTable
operator|.
name|Row
index|[]
name|rowArray
init|=
operator|new
name|WebTable
operator|.
name|Row
index|[
name|rows
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Row
name|row
range|:
name|rows
control|)
name|rowArray
index|[
name|idx
operator|++
index|]
operator|=
name|row
expr_stmt|;
name|iAdvReqs
operator|.
name|setData
argument_list|(
name|rowArray
argument_list|)
expr_stmt|;
name|iAdvReqs
operator|.
name|setColumnVisible
argument_list|(
literal|4
argument_list|,
name|hasPref
argument_list|)
expr_stmt|;
name|iAdvReqs
operator|.
name|setColumnVisible
argument_list|(
literal|5
argument_list|,
name|hasCrit
argument_list|)
expr_stmt|;
name|iAdvReqs
operator|.
name|setColumnVisible
argument_list|(
literal|6
argument_list|,
name|hasWL
argument_list|)
expr_stmt|;
name|iAdvReqs
operator|.
name|setColumnVisible
argument_list|(
literal|8
argument_list|,
name|hasChanges
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|fillInRequests
parameter_list|()
block|{
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
name|rows
init|=
operator|new
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
argument_list|()
decl_stmt|;
name|boolean
name|hasPref
init|=
literal|false
decl_stmt|,
name|hasWarn
init|=
literal|false
decl_stmt|,
name|hasWait
init|=
literal|false
decl_stmt|,
name|hasCrit
init|=
name|iAssignment
operator|.
name|isCanSetCriticalOverrides
argument_list|()
decl_stmt|;
name|NumberFormat
name|df
init|=
name|NumberFormat
operator|.
name|getFormat
argument_list|(
literal|"0.#"
argument_list|)
decl_stmt|;
if|if
condition|(
name|iAssignment
operator|.
name|hasRequest
argument_list|()
condition|)
block|{
name|setWaitListMode
argument_list|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getWaitListMode
argument_list|()
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|CheckCoursesResponse
name|check
init|=
operator|new
name|CheckCoursesResponse
argument_list|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getConfirmations
argument_list|()
argument_list|)
decl_stmt|;
name|hasWarn
operator|=
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|hasConfirmations
argument_list|()
expr_stmt|;
name|int
name|priority
init|=
literal|1
decl_stmt|;
for|for
control|(
name|Request
name|request
range|:
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getCourses
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|request
operator|.
name|hasRequestedCourse
argument_list|()
condition|)
continue|continue;
name|boolean
name|first
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getWaitListMode
argument_list|()
operator|==
name|WaitListMode
operator|.
name|WaitList
condition|)
block|{
if|if
condition|(
name|request
operator|.
name|isWaitList
argument_list|()
condition|)
name|hasWait
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|request
operator|.
name|isNoSub
argument_list|()
condition|)
name|hasWait
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|request
operator|.
name|isCritical
argument_list|()
operator|||
name|request
operator|.
name|isImportant
argument_list|()
condition|)
name|hasCrit
operator|=
literal|true
expr_stmt|;
for|for
control|(
name|RequestedCourse
name|rc
range|:
name|request
operator|.
name|getRequestedCourse
argument_list|()
control|)
block|{
if|if
condition|(
name|rc
operator|.
name|isCourse
argument_list|()
condition|)
block|{
name|ImageResource
name|icon
init|=
literal|null
decl_stmt|;
name|String
name|iconText
init|=
literal|null
decl_stmt|;
name|String
name|msg
init|=
name|check
operator|.
name|getMessage
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"\n"
argument_list|)
decl_stmt|;
if|if
condition|(
name|check
operator|.
name|isError
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|&&
operator|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|==
literal|null
operator|||
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
name|RequestedCourseStatus
operator|.
name|OVERRIDE_REJECTED
operator|)
condition|)
block|{
name|icon
operator|=
name|RESOURCES
operator|.
name|requestError
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|msg
operator|)
expr_stmt|;
block|}
if|else if
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
condition|)
block|{
case|case
name|ENROLLED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestEnrolled
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|MESSAGES
operator|.
name|enrolled
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_NEEDED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestNeeded
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|msg
operator|==
literal|null
condition|?
name|MESSAGES
operator|.
name|overrideNotRequested
argument_list|()
else|:
name|MESSAGES
operator|.
name|overrideNeeded
argument_list|(
name|msg
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|SAVED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|requested
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_REJECTED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestRejected
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideRejected
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_PENDING
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestPending
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overridePending
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_CANCELLED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestCancelled
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideCancelled
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_APPROVED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideApproved
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_NOT_NEEDED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestNotNeeded
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideNotNeeded
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
default|default:
if|if
condition|(
name|check
operator|.
name|isError
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
condition|)
name|icon
operator|=
name|RESOURCES
operator|.
name|requestError
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|msg
operator|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|rc
operator|.
name|hasRequestorNote
argument_list|()
condition|)
name|iconText
operator|+=
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|requestNote
argument_list|(
name|rc
operator|.
name|getRequestorNote
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|rc
operator|.
name|hasStatusNote
argument_list|()
condition|)
name|iconText
operator|+=
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|overrideNote
argument_list|(
name|rc
operator|.
name|getStatusNote
argument_list|()
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|Preference
argument_list|>
name|prefs
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|hasSelectedIntructionalMethods
argument_list|()
condition|)
block|{
if|if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|ArrayList
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
operator|.
name|size
argument_list|()
operator|+
name|rc
operator|.
name|getSelectedClasses
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|status
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
condition|)
block|{
case|case
name|ENROLLED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusEnrolled
argument_list|()
expr_stmt|;
break|break;
case|case
name|OVERRIDE_APPROVED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusApproved
argument_list|()
expr_stmt|;
break|break;
case|case
name|OVERRIDE_CANCELLED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusCancelled
argument_list|()
expr_stmt|;
break|break;
case|case
name|OVERRIDE_PENDING
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusPending
argument_list|()
expr_stmt|;
break|break;
case|case
name|OVERRIDE_REJECTED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusRejected
argument_list|()
expr_stmt|;
break|break;
case|case
name|OVERRIDE_NEEDED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusNeeded
argument_list|()
expr_stmt|;
break|break;
case|case
name|OVERRIDE_NOT_NEEDED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusNotNeeded
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|status
operator|.
name|isEmpty
argument_list|()
condition|)
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusRegistered
argument_list|()
expr_stmt|;
if|if
condition|(
name|prefs
operator|!=
literal|null
condition|)
name|hasPref
operator|=
literal|true
expr_stmt|;
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCredit
argument_list|()
condition|?
operator|(
name|rc
operator|.
name|getCreditMin
argument_list|()
operator|.
name|equals
argument_list|(
name|rc
operator|.
name|getCreditMax
argument_list|()
argument_list|)
condition|?
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMin
argument_list|()
argument_list|)
else|:
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMin
argument_list|()
argument_list|)
operator|+
literal|" - "
operator|+
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMax
argument_list|()
argument_list|)
operator|)
else|:
literal|""
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|String
name|note
init|=
literal|null
decl_stmt|,
name|noteTitle
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|check
operator|!=
literal|null
condition|)
block|{
name|note
operator|=
name|check
operator|.
name|getMessageWithColor
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"<br>"
argument_list|,
literal|"CREDIT"
argument_list|)
expr_stmt|;
name|noteTitle
operator|=
name|check
operator|.
name|getMessage
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"\n"
argument_list|,
literal|"CREDIT"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|rc
operator|.
name|hasRequestorNote
argument_list|()
condition|)
block|{
name|note
operator|=
operator|(
name|note
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|+
literal|"<br>"
operator|)
operator|+
name|rc
operator|.
name|getRequestorNote
argument_list|()
expr_stmt|;
name|noteTitle
operator|=
operator|(
name|noteTitle
operator|==
literal|null
condition|?
literal|""
else|:
name|noteTitle
operator|+
literal|"\n"
operator|)
operator|+
name|rc
operator|.
name|getRequestorNote
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|rc
operator|.
name|hasStatusNote
argument_list|()
condition|)
block|{
name|note
operator|=
operator|(
name|note
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|+
literal|"<br>"
operator|)
operator|+
name|rc
operator|.
name|getStatusNote
argument_list|()
expr_stmt|;
name|noteTitle
operator|=
operator|(
name|noteTitle
operator|==
literal|null
condition|?
literal|""
else|:
name|noteTitle
operator|+
literal|"\n"
operator|)
operator|+
name|rc
operator|.
name|getStatusNote
argument_list|()
expr_stmt|;
block|}
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
condition|?
name|MESSAGES
operator|.
name|courseRequestsPriority
argument_list|(
name|priority
argument_list|)
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCourseTitle
argument_list|()
condition|?
name|rc
operator|.
name|getCourseTitle
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
name|credit
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|ToolBox
operator|.
name|toString
argument_list|(
name|prefs
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|note
argument_list|,
name|noteTitle
argument_list|)
argument_list|,
operator|(
name|icon
operator|==
literal|null
condition|?
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|status
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|icon
argument_list|,
name|iconText
argument_list|,
name|status
argument_list|)
operator|)
argument_list|,
operator|(
name|first
operator|&&
name|iAssignment
operator|.
name|isCanSetCriticalOverrides
argument_list|()
condition|?
operator|new
name|CriticalCell
argument_list|(
name|request
argument_list|)
else|:
name|first
operator|&&
name|request
operator|.
name|isCritical
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsCritical
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestCritical
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
name|first
operator|&&
name|request
operator|.
name|isImportant
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsImportant
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestImportant
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
operator|)
argument_list|,
operator|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getWaitListMode
argument_list|()
operator|==
name|WaitListMode
operator|.
name|WaitList
condition|?
operator|(
name|first
operator|&&
name|request
operator|.
name|isWaitList
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsWaitList
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestWaitListed
argument_list|()
argument_list|,
operator|(
name|request
operator|.
name|hasWaitListedTimeStamp
argument_list|()
condition|?
name|sWLF
operator|.
name|format
argument_list|(
name|request
operator|.
name|getWaitListedTimeStamp
argument_list|()
argument_list|)
else|:
literal|""
operator|)
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
operator|)
else|:
operator|(
name|first
operator|&&
name|request
operator|.
name|isNoSub
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsWaitList
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestNoSubs
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
operator|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
operator|&&
name|request
operator|.
name|hasTimeStamp
argument_list|()
condition|?
name|sDF
operator|.
name|format
argument_list|(
name|request
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
else|:
literal|""
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|priority
operator|>
literal|1
operator|&&
name|first
condition|)
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|rc
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
name|String
name|free
init|=
literal|""
decl_stmt|;
for|for
control|(
name|FreeTime
name|ft
range|:
name|rc
operator|.
name|getFreeTime
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|free
operator|.
name|isEmpty
argument_list|()
condition|)
name|free
operator|+=
literal|", "
expr_stmt|;
name|free
operator|+=
name|ft
operator|.
name|toString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|note
init|=
literal|null
decl_stmt|,
name|noteTitle
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|check
operator|!=
literal|null
condition|)
block|{
name|note
operator|=
name|check
operator|.
name|getMessageWithColor
argument_list|(
name|CONSTANTS
operator|.
name|freePrefix
argument_list|()
operator|+
name|free
argument_list|,
literal|"<br>"
argument_list|)
expr_stmt|;
name|noteTitle
operator|=
name|check
operator|.
name|getMessage
argument_list|(
name|CONSTANTS
operator|.
name|freePrefix
argument_list|()
operator|+
name|free
argument_list|,
literal|"\n"
argument_list|,
literal|"CREDIT"
argument_list|)
expr_stmt|;
block|}
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
condition|?
name|MESSAGES
operator|.
name|courseRequestsPriority
argument_list|(
name|priority
argument_list|)
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|CONSTANTS
operator|.
name|freePrefix
argument_list|()
operator|+
name|free
argument_list|,
literal|3
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|note
argument_list|,
name|noteTitle
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|requested
argument_list|(
name|free
argument_list|)
argument_list|,
name|MESSAGES
operator|.
name|reqStatusRegistered
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
operator|&&
name|request
operator|.
name|hasTimeStamp
argument_list|()
condition|?
name|sDF
operator|.
name|format
argument_list|(
name|request
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
else|:
literal|""
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|priority
operator|>
literal|1
operator|&&
name|first
condition|)
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
name|first
operator|=
literal|false
expr_stmt|;
block|}
name|priority
operator|++
expr_stmt|;
block|}
name|priority
operator|=
literal|1
expr_stmt|;
for|for
control|(
name|Request
name|request
range|:
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getAlternatives
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|request
operator|.
name|hasRequestedCourse
argument_list|()
condition|)
continue|continue;
name|boolean
name|first
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|isWaitList
argument_list|()
condition|)
name|hasWait
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|isCritical
argument_list|()
operator|||
name|request
operator|.
name|isImportant
argument_list|()
condition|)
name|hasCrit
operator|=
literal|true
expr_stmt|;
for|for
control|(
name|RequestedCourse
name|rc
range|:
name|request
operator|.
name|getRequestedCourse
argument_list|()
control|)
block|{
if|if
condition|(
name|rc
operator|.
name|isCourse
argument_list|()
condition|)
block|{
name|ImageResource
name|icon
init|=
literal|null
decl_stmt|;
name|String
name|iconText
init|=
literal|null
decl_stmt|;
name|String
name|msg
init|=
name|check
operator|.
name|getMessage
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"\n"
argument_list|)
decl_stmt|;
if|if
condition|(
name|check
operator|.
name|isError
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|&&
operator|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|==
literal|null
operator|||
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
name|RequestedCourseStatus
operator|.
name|OVERRIDE_REJECTED
operator|)
condition|)
block|{
name|icon
operator|=
name|RESOURCES
operator|.
name|requestError
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|msg
operator|)
expr_stmt|;
block|}
if|else if
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
condition|)
block|{
case|case
name|ENROLLED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestEnrolled
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|MESSAGES
operator|.
name|enrolled
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_NEEDED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestNeeded
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|msg
operator|==
literal|null
condition|?
name|MESSAGES
operator|.
name|overrideNotRequested
argument_list|()
else|:
name|MESSAGES
operator|.
name|overrideNeeded
argument_list|(
name|msg
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|SAVED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|requested
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_REJECTED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestRejected
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideRejected
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_PENDING
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestPending
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overridePending
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_CANCELLED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestCancelled
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideCancelled
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_APPROVED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideApproved
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_NOT_NEEDED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestNotNeeded
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideNotNeeded
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
default|default:
if|if
condition|(
name|check
operator|.
name|isError
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
condition|)
name|icon
operator|=
name|RESOURCES
operator|.
name|requestError
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|msg
operator|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|rc
operator|.
name|hasRequestorNote
argument_list|()
condition|)
name|iconText
operator|+=
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|requestNote
argument_list|(
name|rc
operator|.
name|getRequestorNote
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|rc
operator|.
name|hasStatusNote
argument_list|()
condition|)
name|iconText
operator|+=
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|overrideNote
argument_list|(
name|rc
operator|.
name|getStatusNote
argument_list|()
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|Preference
argument_list|>
name|prefs
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|hasSelectedIntructionalMethods
argument_list|()
condition|)
block|{
if|if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|ArrayList
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
operator|.
name|size
argument_list|()
operator|+
name|rc
operator|.
name|getSelectedClasses
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|prefs
operator|!=
literal|null
condition|)
name|hasPref
operator|=
literal|true
expr_stmt|;
name|String
name|status
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
condition|)
block|{
case|case
name|ENROLLED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusEnrolled
argument_list|()
expr_stmt|;
break|break;
case|case
name|OVERRIDE_APPROVED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusApproved
argument_list|()
expr_stmt|;
break|break;
case|case
name|OVERRIDE_CANCELLED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusCancelled
argument_list|()
expr_stmt|;
break|break;
case|case
name|OVERRIDE_PENDING
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusPending
argument_list|()
expr_stmt|;
break|break;
case|case
name|OVERRIDE_REJECTED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusRejected
argument_list|()
expr_stmt|;
break|break;
case|case
name|OVERRIDE_NEEDED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusNeeded
argument_list|()
expr_stmt|;
break|break;
case|case
name|OVERRIDE_NOT_NEEDED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusNotNeeded
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|status
operator|.
name|isEmpty
argument_list|()
condition|)
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusRegistered
argument_list|()
expr_stmt|;
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCredit
argument_list|()
condition|?
operator|(
name|rc
operator|.
name|getCreditMin
argument_list|()
operator|.
name|equals
argument_list|(
name|rc
operator|.
name|getCreditMax
argument_list|()
argument_list|)
condition|?
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMin
argument_list|()
argument_list|)
else|:
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMin
argument_list|()
argument_list|)
operator|+
literal|" - "
operator|+
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMax
argument_list|()
argument_list|)
operator|)
else|:
literal|""
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|String
name|note
init|=
literal|null
decl_stmt|,
name|noteTitle
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|check
operator|!=
literal|null
condition|)
block|{
name|note
operator|=
name|check
operator|.
name|getMessageWithColor
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"<br>"
argument_list|,
literal|"CREDIT"
argument_list|)
expr_stmt|;
name|noteTitle
operator|=
name|check
operator|.
name|getMessage
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"\n"
argument_list|,
literal|"CREDIT"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|rc
operator|.
name|hasRequestorNote
argument_list|()
condition|)
block|{
name|note
operator|=
operator|(
name|note
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|+
literal|"<br>"
operator|)
operator|+
name|rc
operator|.
name|getRequestorNote
argument_list|()
expr_stmt|;
name|noteTitle
operator|=
operator|(
name|noteTitle
operator|==
literal|null
condition|?
literal|""
else|:
name|noteTitle
operator|+
literal|"\n"
operator|)
operator|+
name|rc
operator|.
name|getRequestorNote
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|rc
operator|.
name|hasStatusNote
argument_list|()
condition|)
block|{
name|note
operator|=
operator|(
name|note
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|+
literal|"<br>"
operator|)
operator|+
name|rc
operator|.
name|getStatusNote
argument_list|()
expr_stmt|;
name|noteTitle
operator|=
operator|(
name|noteTitle
operator|==
literal|null
condition|?
literal|""
else|:
name|noteTitle
operator|+
literal|"\n"
operator|)
operator|+
name|rc
operator|.
name|getStatusNote
argument_list|()
expr_stmt|;
block|}
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
condition|?
name|MESSAGES
operator|.
name|courseRequestsAlternate
argument_list|(
name|priority
argument_list|)
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCourseTitle
argument_list|()
condition|?
name|rc
operator|.
name|getCourseTitle
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
name|credit
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|ToolBox
operator|.
name|toString
argument_list|(
name|prefs
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|note
argument_list|,
name|noteTitle
argument_list|)
argument_list|,
operator|(
name|icon
operator|==
literal|null
condition|?
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|status
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|icon
argument_list|,
name|iconText
argument_list|,
name|status
argument_list|)
operator|)
argument_list|,
operator|(
name|first
operator|&&
name|iAssignment
operator|.
name|isCanSetCriticalOverrides
argument_list|()
condition|?
operator|new
name|CriticalCell
argument_list|(
name|request
argument_list|)
else|:
name|first
operator|&&
name|request
operator|.
name|isCritical
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsCritical
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestCritical
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
name|first
operator|&&
name|request
operator|.
name|isImportant
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsImportant
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestImportant
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
operator|)
argument_list|,
operator|(
name|first
operator|&&
name|request
operator|.
name|isWaitList
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsWaitList
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestWaitListed
argument_list|()
argument_list|,
operator|(
name|request
operator|.
name|hasWaitListedTimeStamp
argument_list|()
condition|?
name|sWLF
operator|.
name|format
argument_list|(
name|request
operator|.
name|getWaitListedTimeStamp
argument_list|()
argument_list|)
else|:
literal|""
operator|)
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
operator|&&
name|request
operator|.
name|hasTimeStamp
argument_list|()
condition|?
name|sDF
operator|.
name|format
argument_list|(
name|request
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
else|:
literal|""
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|first
condition|)
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|priority
operator|==
literal|1
condition|?
literal|"top-border-solid"
else|:
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|rc
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
name|String
name|free
init|=
literal|""
decl_stmt|;
for|for
control|(
name|FreeTime
name|ft
range|:
name|rc
operator|.
name|getFreeTime
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|free
operator|.
name|isEmpty
argument_list|()
condition|)
name|free
operator|+=
literal|", "
expr_stmt|;
name|free
operator|+=
name|ft
operator|.
name|toString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
condition|?
name|MESSAGES
operator|.
name|courseRequestsAlternate
argument_list|(
name|priority
argument_list|)
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|CONSTANTS
operator|.
name|freePrefix
argument_list|()
operator|+
name|free
argument_list|,
literal|3
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|requested
argument_list|(
name|free
argument_list|)
argument_list|,
name|MESSAGES
operator|.
name|reqStatusRegistered
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
operator|&&
name|request
operator|.
name|hasTimeStamp
argument_list|()
condition|?
name|sDF
operator|.
name|format
argument_list|(
name|request
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
else|:
literal|""
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|first
condition|)
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|priority
operator|==
literal|1
condition|?
literal|"top-border-solid"
else|:
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
name|first
operator|=
literal|false
expr_stmt|;
block|}
name|priority
operator|++
expr_stmt|;
block|}
block|}
if|if
condition|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getMaxCreditOverrideStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|ImageResource
name|icon
init|=
literal|null
decl_stmt|;
name|String
name|status
init|=
literal|""
decl_stmt|;
name|String
name|note
init|=
literal|null
decl_stmt|,
name|noteTitle
init|=
literal|null
decl_stmt|;
name|String
name|iconText
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|hasCreditWarning
argument_list|()
condition|)
block|{
name|note
operator|=
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getCreditWarning
argument_list|()
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|"<br>"
argument_list|)
expr_stmt|;
name|noteTitle
operator|=
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getCreditWarning
argument_list|()
expr_stmt|;
name|iconText
operator|=
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getCreditWarning
argument_list|()
expr_stmt|;
name|hasWarn
operator|=
literal|true
expr_stmt|;
block|}
if|else if
condition|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getMaxCreditOverrideStatus
argument_list|()
operator|!=
name|RequestedCourseStatus
operator|.
name|SAVED
condition|)
block|{
name|note
operator|=
name|noteTitle
operator|=
name|iconText
operator|=
name|MESSAGES
operator|.
name|creditWarning
argument_list|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getMaxCredit
argument_list|()
argument_list|)
expr_stmt|;
block|}
switch|switch
condition|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getMaxCreditOverrideStatus
argument_list|()
condition|)
block|{
case|case
name|CREDIT_HIGH
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestNeeded
argument_list|()
expr_stmt|;
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusWarning
argument_list|()
expr_stmt|;
name|note
operator|=
literal|"<span class='text-red'>"
operator|+
name|note
operator|+
literal|"</span>"
expr_stmt|;
name|iconText
operator|+=
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|creditStatusTooHigh
argument_list|()
expr_stmt|;
break|break;
case|case
name|OVERRIDE_REJECTED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestError
argument_list|()
expr_stmt|;
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusRejected
argument_list|()
expr_stmt|;
name|note
operator|=
literal|"<span class='text-red'>"
operator|+
name|note
operator|+
literal|"</span>"
expr_stmt|;
name|iconText
operator|+=
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|creditStatusDenied
argument_list|()
expr_stmt|;
break|break;
case|case
name|CREDIT_LOW
case|:
case|case
name|OVERRIDE_NEEDED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestNeeded
argument_list|()
expr_stmt|;
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusWarning
argument_list|()
expr_stmt|;
name|note
operator|=
literal|"<span class='text-orange'>"
operator|+
name|note
operator|+
literal|"</span>"
expr_stmt|;
break|break;
case|case
name|OVERRIDE_CANCELLED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestNeeded
argument_list|()
expr_stmt|;
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusCancelled
argument_list|()
expr_stmt|;
name|iconText
operator|+=
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|creditStatusCancelled
argument_list|()
expr_stmt|;
name|note
operator|=
literal|"<span class='text-orange'>"
operator|+
name|note
operator|+
literal|"</span>"
expr_stmt|;
break|break;
case|case
name|OVERRIDE_PENDING
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestPending
argument_list|()
expr_stmt|;
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusPending
argument_list|()
expr_stmt|;
name|iconText
operator|+=
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|creditStatusPending
argument_list|()
expr_stmt|;
name|note
operator|=
literal|"<span class='text-orange'>"
operator|+
name|note
operator|+
literal|"</span>"
expr_stmt|;
break|break;
case|case
name|OVERRIDE_APPROVED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
expr_stmt|;
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusApproved
argument_list|()
expr_stmt|;
name|iconText
operator|+=
operator|(
name|iconText
operator|==
literal|null
condition|?
literal|""
else|:
name|iconText
operator|+
literal|"\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|creditStatusApproved
argument_list|()
expr_stmt|;
break|break;
case|case
name|SAVED
case|:
name|icon
operator|=
literal|null
expr_stmt|;
name|status
operator|=
literal|""
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|hasRequestorNote
argument_list|()
condition|)
block|{
name|note
operator|=
operator|(
name|note
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|+
literal|"<br>"
operator|)
operator|+
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getRequestorNote
argument_list|()
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|"<br>"
argument_list|)
expr_stmt|;
name|noteTitle
operator|=
operator|(
name|noteTitle
operator|==
literal|null
condition|?
literal|""
else|:
name|noteTitle
operator|+
literal|"\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|requestNote
argument_list|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getRequestorNote
argument_list|()
argument_list|)
expr_stmt|;
name|iconText
operator|=
operator|(
name|iconText
operator|==
literal|null
condition|?
literal|""
else|:
name|iconText
operator|+
literal|"\n"
operator|)
operator|+
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getRequestorNote
argument_list|()
expr_stmt|;
name|hasWarn
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|hasCreditNote
argument_list|()
condition|)
block|{
name|note
operator|=
operator|(
name|note
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|+
literal|"<br>"
operator|)
operator|+
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getCreditNote
argument_list|()
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|"<br>"
argument_list|)
expr_stmt|;
name|noteTitle
operator|=
operator|(
name|noteTitle
operator|==
literal|null
condition|?
literal|""
else|:
name|noteTitle
operator|+
literal|"\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideNote
argument_list|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getCreditNote
argument_list|()
argument_list|)
expr_stmt|;
name|iconText
operator|=
operator|(
name|iconText
operator|==
literal|null
condition|?
literal|""
else|:
name|iconText
operator|+
literal|"\n"
operator|)
operator|+
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getCreditNote
argument_list|()
expr_stmt|;
name|hasWarn
operator|=
literal|true
expr_stmt|;
block|}
name|float
index|[]
name|range
init|=
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getCreditRange
argument_list|(
name|iAssignment
operator|.
name|getAdvisorWaitListedCourseIds
argument_list|()
argument_list|)
decl_stmt|;
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|range
operator|!=
literal|null
condition|?
name|range
index|[
literal|0
index|]
operator|<
name|range
index|[
literal|1
index|]
condition|?
name|df
operator|.
name|format
argument_list|(
name|range
index|[
literal|0
index|]
argument_list|)
operator|+
literal|" - "
operator|+
name|df
operator|.
name|format
argument_list|(
name|range
index|[
literal|1
index|]
argument_list|)
else|:
name|df
operator|.
name|format
argument_list|(
name|range
index|[
literal|0
index|]
argument_list|)
else|:
literal|""
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|rowRequestedCredit
argument_list|()
argument_list|,
literal|2
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
name|credit
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|note
argument_list|,
name|noteTitle
argument_list|)
argument_list|,
operator|(
name|icon
operator|==
literal|null
condition|?
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|status
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|icon
argument_list|,
name|iconText
argument_list|,
name|status
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
literal|"top-border-solid"
argument_list|)
expr_stmt|;
name|row
operator|.
name|getCell
argument_list|(
literal|0
argument_list|)
operator|.
name|setStyleName
argument_list|(
literal|"top-border-solid text-bold"
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
name|WebTable
operator|.
name|Row
index|[]
name|rowArray
init|=
operator|new
name|WebTable
operator|.
name|Row
index|[
name|rows
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Row
name|row
range|:
name|rows
control|)
name|rowArray
index|[
name|idx
operator|++
index|]
operator|=
name|row
expr_stmt|;
name|iRequests
operator|.
name|setData
argument_list|(
name|rowArray
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setColumnVisible
argument_list|(
literal|4
argument_list|,
name|hasPref
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setColumnVisible
argument_list|(
literal|5
argument_list|,
name|hasWarn
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setColumnVisible
argument_list|(
literal|7
argument_list|,
name|hasCrit
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setColumnVisible
argument_list|(
literal|8
argument_list|,
name|hasWait
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|fillInAssignments
parameter_list|()
block|{
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
name|rows
init|=
operator|new
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
argument_list|()
decl_stmt|;
name|iTotalCredit
operator|=
literal|0f
expr_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|course
range|:
name|iAssignment
operator|.
name|getCourseAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|course
operator|.
name|isAssigned
argument_list|()
condition|)
block|{
name|boolean
name|firstClazz
init|=
literal|true
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
range|:
name|course
operator|.
name|getClassAssignments
argument_list|()
control|)
block|{
name|String
name|style
init|=
operator|(
name|firstClazz
operator|&&
operator|!
name|rows
operator|.
name|isEmpty
argument_list|()
condition|?
literal|"top-border-dashed"
else|:
literal|""
operator|)
decl_stmt|;
if|if
condition|(
name|clazz
operator|.
name|isTeachingAssignment
argument_list|()
condition|)
name|style
operator|+=
operator|(
name|clazz
operator|.
name|isInstructing
argument_list|()
condition|?
literal|" text-steelblue"
else|:
literal|" text-steelblue-italic"
operator|)
expr_stmt|;
specifier|final
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|firstClazz
condition|?
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
else|:
name|course
operator|.
name|getSubject
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|firstClazz
condition|?
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
else|:
name|course
operator|.
name|getCourseNbr
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getLimitString
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getStartString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getEndString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getDatePattern
argument_list|()
argument_list|)
argument_list|,
operator|(
name|clazz
operator|.
name|hasDistanceConflict
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|RoomCell
argument_list|(
name|RESOURCES
operator|.
name|distantConflict
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|backToBackDistance
argument_list|(
name|clazz
operator|.
name|getBackToBackRooms
argument_list|()
argument_list|,
name|clazz
operator|.
name|getBackToBackDistance
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|.
name|getRooms
argument_list|()
argument_list|,
literal|", "
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|RoomCell
argument_list|(
name|clazz
operator|.
name|getRooms
argument_list|()
argument_list|,
literal|", "
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|InstructorCell
argument_list|(
name|clazz
operator|.
name|getInstructors
argument_list|()
argument_list|,
name|clazz
operator|.
name|getInstructorEmails
argument_list|()
argument_list|,
literal|", "
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getParentSection
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|.
name|hasNote
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|note
argument_list|()
argument_list|,
name|clazz
operator|.
name|getNote
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|AbbvTextCell
argument_list|(
name|clazz
operator|.
name|getCredit
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getEnrolledDate
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|sDF
operator|.
name|format
argument_list|(
name|clazz
operator|.
name|getEnrolledDate
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|clazz
operator|.
name|isTeachingAssignment
argument_list|()
condition|)
name|row
operator|.
name|setStyleName
argument_list|(
literal|"teaching-assignment"
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|firstClazz
operator|=
literal|false
expr_stmt|;
if|if
condition|(
operator|!
name|clazz
operator|.
name|isTeachingAssignment
argument_list|()
condition|)
name|iTotalCredit
operator|+=
name|clazz
operator|.
name|guessCreditCount
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
name|String
name|style
init|=
literal|"text-red"
operator|+
operator|(
operator|!
name|rows
operator|.
name|isEmpty
argument_list|()
condition|?
literal|" top-border-dashed"
else|:
literal|""
operator|)
decl_stmt|;
name|WebTable
operator|.
name|Row
name|row
init|=
literal|null
decl_stmt|;
name|String
name|unassignedMessage
init|=
name|MESSAGES
operator|.
name|courseNotAssigned
argument_list|()
decl_stmt|;
if|if
condition|(
name|course
operator|.
name|hasEnrollmentMessage
argument_list|()
condition|)
name|unassignedMessage
operator|=
name|course
operator|.
name|getEnrollmentMessage
argument_list|()
expr_stmt|;
if|else if
condition|(
name|course
operator|.
name|getOverlaps
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|course
operator|.
name|getOverlaps
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|unassignedMessage
operator|=
literal|""
expr_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|String
argument_list|>
name|i
init|=
name|course
operator|.
name|getOverlaps
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|x
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|unassignedMessage
operator|.
name|isEmpty
argument_list|()
condition|)
name|unassignedMessage
operator|+=
name|MESSAGES
operator|.
name|conflictWithFirst
argument_list|(
name|x
argument_list|)
expr_stmt|;
if|else if
condition|(
operator|!
name|i
operator|.
name|hasNext
argument_list|()
condition|)
name|unassignedMessage
operator|+=
name|MESSAGES
operator|.
name|conflictWithLast
argument_list|(
name|x
argument_list|)
expr_stmt|;
else|else
name|unassignedMessage
operator|+=
name|MESSAGES
operator|.
name|conflictWithMiddle
argument_list|(
name|x
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|course
operator|.
name|getInstead
argument_list|()
operator|!=
literal|null
condition|)
name|unassignedMessage
operator|+=
name|MESSAGES
operator|.
name|conflictAssignedAlternative
argument_list|(
name|course
operator|.
name|getInstead
argument_list|()
argument_list|)
expr_stmt|;
name|unassignedMessage
operator|+=
literal|"."
expr_stmt|;
block|}
if|else if
condition|(
name|course
operator|.
name|isNotAvailable
argument_list|()
condition|)
block|{
if|if
condition|(
name|course
operator|.
name|isFull
argument_list|()
condition|)
name|unassignedMessage
operator|=
name|MESSAGES
operator|.
name|courseIsFull
argument_list|()
expr_stmt|;
else|else
name|unassignedMessage
operator|=
name|MESSAGES
operator|.
name|classNotAvailable
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|course
operator|.
name|isLocked
argument_list|()
condition|)
block|{
name|unassignedMessage
operator|=
name|MESSAGES
operator|.
name|courseLocked
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
operator|+
literal|" "
operator|+
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|course
operator|.
name|isOverMaxCredit
argument_list|()
condition|)
name|unassignedMessage
operator|=
name|MESSAGES
operator|.
name|conflictOverMaxCredit
argument_list|(
name|course
operator|.
name|getOverMaxCredit
argument_list|()
argument_list|)
operator|+
operator|(
name|MESSAGES
operator|.
name|courseNotAssigned
argument_list|()
operator|.
name|equals
argument_list|(
name|unassignedMessage
argument_list|)
condition|?
literal|""
else|:
literal|"\n"
operator|+
name|unassignedMessage
operator|)
expr_stmt|;
if|if
condition|(
name|course
operator|.
name|getWaitListedDate
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|unassignedMessage
operator|=
name|MESSAGES
operator|.
name|conflictWaitListed
argument_list|(
name|sWLF
operator|.
name|format
argument_list|(
name|course
operator|.
name|getWaitListedDate
argument_list|()
argument_list|)
argument_list|)
operator|+
operator|(
name|unassignedMessage
operator|==
literal|null
operator|||
name|unassignedMessage
operator|.
name|isEmpty
argument_list|()
operator|||
name|MESSAGES
operator|.
name|courseNotAssigned
argument_list|()
operator|.
name|equals
argument_list|(
name|unassignedMessage
argument_list|)
condition|?
literal|""
else|:
literal|"\n"
operator|+
name|unassignedMessage
operator|)
expr_stmt|;
block|}
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
range|:
name|course
operator|.
name|getClassAssignments
argument_list|()
control|)
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
else|:
name|course
operator|.
name|getSubject
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
else|:
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getLimitString
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getStartString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getEndString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getDatePattern
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|PreCell
argument_list|(
name|unassignedMessage
argument_list|,
literal|3
argument_list|)
argument_list|,
name|clazz
operator|.
name|getNote
argument_list|()
operator|==
literal|null
condition|?
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|note
argument_list|()
argument_list|,
name|clazz
operator|.
name|getNote
argument_list|()
argument_list|,
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|AbbvTextCell
argument_list|(
name|clazz
operator|.
name|getCredit
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getEnrolledDate
argument_list|()
operator|!=
literal|null
condition|?
name|sDF
operator|.
name|format
argument_list|(
name|clazz
operator|.
name|getEnrolledDate
argument_list|()
argument_list|)
else|:
name|course
operator|.
name|getRequestedDate
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|sDF
operator|.
name|format
argument_list|(
name|course
operator|.
name|getRequestedDate
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|row
operator|==
literal|null
condition|)
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|PreCell
argument_list|(
name|unassignedMessage
argument_list|,
literal|12
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|getRequestedDate
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|sDF
operator|.
name|format
argument_list|(
name|course
operator|.
name|getRequestedDate
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|row
operator|.
name|getCell
argument_list|(
name|row
operator|.
name|getNrCells
argument_list|()
operator|-
literal|2
argument_list|)
operator|.
name|setStyleName
argument_list|(
literal|"text-gray"
operator|+
operator|(
operator|!
name|rows
operator|.
name|isEmpty
argument_list|()
condition|?
literal|" top-border-dashed"
else|:
literal|""
operator|)
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
block|}
name|WebTable
operator|.
name|Row
index|[]
name|rowArray
init|=
operator|new
name|WebTable
operator|.
name|Row
index|[
name|rows
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Row
name|row
range|:
name|rows
control|)
name|rowArray
index|[
name|idx
operator|++
index|]
operator|=
name|row
expr_stmt|;
name|iAssignments
operator|.
name|setData
argument_list|(
name|rowArray
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|iOnline
condition|)
block|{
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
name|iAssignments
operator|.
name|getTable
argument_list|()
operator|.
name|getRowCount
argument_list|()
condition|;
name|row
operator|++
control|)
block|{
if|if
condition|(
name|iAssignments
operator|.
name|getTable
argument_list|()
operator|.
name|getCellCount
argument_list|(
name|row
argument_list|)
operator|>
literal|2
condition|)
name|iAssignments
operator|.
name|getTable
argument_list|()
operator|.
name|getFlexCellFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|row
argument_list|,
name|iAssignments
operator|.
name|getTable
argument_list|()
operator|.
name|getCellCount
argument_list|(
name|row
argument_list|)
operator|-
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|fillInNotes
parameter_list|()
block|{
name|iTabs
operator|.
name|getTabBar
argument_list|()
operator|.
name|setTabEnabled
argument_list|(
literal|6
argument_list|,
name|iAssignment
operator|.
name|hasNotes
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iTabs
operator|.
name|getSelectedTab
argument_list|()
operator|!=
literal|6
condition|)
operator|(
operator|(
name|Widget
operator|)
name|iTabs
operator|.
name|getTabBar
argument_list|()
operator|.
name|getTab
argument_list|(
literal|6
argument_list|)
operator|)
operator|.
name|setVisible
argument_list|(
name|iAssignment
operator|.
name|hasNotes
argument_list|()
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
name|rows
init|=
operator|new
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|iAssignment
operator|.
name|hasNotes
argument_list|()
condition|)
block|{
for|for
control|(
name|Note
name|note
range|:
name|iAssignment
operator|.
name|getNotes
argument_list|()
control|)
block|{
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|sTSF
operator|.
name|format
argument_list|(
name|note
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|note
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|note
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
block|}
name|WebTable
operator|.
name|Row
index|[]
name|rowArray
init|=
operator|new
name|WebTable
operator|.
name|Row
index|[
name|rows
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Row
name|row
range|:
name|rows
control|)
name|rowArray
index|[
name|idx
operator|++
index|]
operator|=
name|row
expr_stmt|;
name|iNotes
operator|.
name|setData
argument_list|(
name|rowArray
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|fillInSpecialRegistrations
parameter_list|()
block|{
name|iTabs
operator|.
name|getTabBar
argument_list|()
operator|.
name|setTabEnabled
argument_list|(
literal|4
argument_list|,
name|iAssignment
operator|.
name|hasSpecialRegistrations
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iTabs
operator|.
name|getSelectedTab
argument_list|()
operator|!=
literal|4
condition|)
operator|(
operator|(
name|Widget
operator|)
name|iTabs
operator|.
name|getTabBar
argument_list|()
operator|.
name|getTab
argument_list|(
literal|4
argument_list|)
operator|)
operator|.
name|setVisible
argument_list|(
name|iAssignment
operator|.
name|hasSpecialRegistrations
argument_list|()
argument_list|)
expr_stmt|;
name|iSpecialRegistrations
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|iAssignment
operator|.
name|hasSpecialRegistrations
argument_list|()
condition|)
for|for
control|(
specifier|final
name|RetrieveSpecialRegistrationResponse
name|reg
range|:
name|iAssignment
operator|.
name|getSpecialRegistrations
argument_list|()
control|)
block|{
name|P
name|p
init|=
operator|new
name|P
argument_list|(
literal|"icons"
argument_list|)
decl_stmt|;
if|if
condition|(
name|reg
operator|.
name|isFullyApplied
argument_list|(
name|iAssignment
argument_list|)
condition|)
block|{
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|specRegApplied
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|hintSpecRegApplied
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|reg
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|reg
operator|.
name|getStatus
argument_list|()
condition|)
block|{
case|case
name|Approved
case|:
if|if
condition|(
name|reg
operator|.
name|isGradeModeChange
argument_list|()
operator|||
name|reg
operator|.
name|isVariableTitleCourseChange
argument_list|()
operator|||
name|reg
operator|.
name|isExtended
argument_list|()
condition|)
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|specRegApproved
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|hintSpecRegApproved
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|specRegApproved
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|hintSpecRegApprovedNoteApply
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|Cancelled
case|:
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|specRegCancelled
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|hintSpecRegCancelled
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|Pending
case|:
if|if
condition|(
name|reg
operator|.
name|isHonorsGradeModeNotFullyMatching
argument_list|(
name|iAssignment
argument_list|)
condition|)
block|{
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|specRegCancelled
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|hintSpecRegHonorsGradeModeNotMatchingSchedule
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|specRegPending
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|hintSpecRegPending
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|Rejected
case|:
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|specRegRejected
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|hintSpecRegRejected
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|Draft
case|:
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|specRegDraft
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|hintSpecRegDraft
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|reg
operator|.
name|hasChanges
argument_list|()
condition|)
block|{
name|Long
name|lastCourseId
init|=
literal|null
decl_stmt|;
name|String
index|[]
name|dateAndNote
init|=
operator|(
name|reg
operator|.
name|getSubmitDate
argument_list|()
operator|==
literal|null
condition|?
name|reg
operator|.
name|getNote
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|reg
operator|.
name|getNote
argument_list|()
else|:
name|sModifiedDateFormat
operator|.
name|format
argument_list|(
name|reg
operator|.
name|getSubmitDate
argument_list|()
argument_list|)
operator|+
operator|(
name|reg
operator|.
name|getNote
argument_list|()
operator|==
literal|null
operator|||
name|reg
operator|.
name|getNote
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|"\n"
operator|+
name|reg
operator|.
name|getNote
argument_list|()
operator|)
operator|)
operator|.
name|split
argument_list|(
literal|"\n"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ClassAssignment
argument_list|>
name|rows
init|=
operator|new
name|ArrayList
argument_list|<
name|ClassAssignment
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|ClassAssignment
name|ca
range|:
name|reg
operator|.
name|getChanges
argument_list|()
control|)
block|{
if|if
condition|(
name|ca
operator|.
name|getParentSection
argument_list|()
operator|!=
literal|null
operator|&&
name|ca
operator|.
name|getParentSection
argument_list|()
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getSection
argument_list|()
argument_list|)
condition|)
continue|continue;
name|rows
operator|.
name|add
argument_list|(
name|ca
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|rows
operator|.
name|size
argument_list|()
condition|;
name|r
operator|++
control|)
block|{
name|ClassAssignment
name|ca
init|=
name|rows
operator|.
name|get
argument_list|(
name|r
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Widget
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|lastCourseId
operator|==
literal|null
condition|)
block|{
name|row
operator|.
name|add
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|.
name|add
argument_list|(
operator|new
name|P
argument_list|(
literal|"icons"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|r
operator|<
name|dateAndNote
operator|.
name|length
condition|)
block|{
name|Label
name|label
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|r
operator|+
literal|1
operator|==
name|rows
operator|.
name|size
argument_list|()
condition|)
block|{
name|String
name|text
init|=
name|dateAndNote
index|[
name|r
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|r
operator|+
literal|1
init|;
name|i
operator|<
name|dateAndNote
operator|.
name|length
condition|;
name|i
operator|++
control|)
name|text
operator|+=
literal|"\n"
operator|+
name|dateAndNote
index|[
name|i
index|]
expr_stmt|;
name|label
operator|=
operator|new
name|Label
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|label
operator|.
name|addStyleName
argument_list|(
literal|"date-and-note"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|label
operator|=
operator|new
name|Label
argument_list|(
name|dateAndNote
index|[
name|r
index|]
argument_list|)
expr_stmt|;
name|label
operator|.
name|addStyleName
argument_list|(
literal|"date-and-note"
argument_list|)
expr_stmt|;
block|}
name|row
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|lastCourseId
operator|==
literal|null
operator|||
operator|!
name|lastCourseId
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
block|{
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|ca
operator|.
name|getSubject
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|ca
operator|.
name|getCourseNbr
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|ca
operator|.
name|getSubpart
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|ca
operator|.
name|getSection
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|HTML
argument_list|(
name|ca
operator|.
name|getLimitString
argument_list|()
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|ca
operator|.
name|getCreditHour
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|MESSAGES
operator|.
name|credit
argument_list|(
name|ca
operator|.
name|getCreditHour
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|.
name|add
argument_list|(
operator|new
name|CreditCell
argument_list|(
name|ca
operator|.
name|getCredit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ca
operator|.
name|getGradeMode
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|Label
name|gm
init|=
operator|new
name|Label
argument_list|(
name|ca
operator|.
name|getGradeMode
argument_list|()
operator|.
name|getCode
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|ca
operator|.
name|getGradeMode
argument_list|()
operator|.
name|getLabel
argument_list|()
operator|!=
literal|null
condition|)
name|gm
operator|.
name|setTitle
argument_list|(
name|ca
operator|.
name|getGradeMode
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|gm
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|HTML
name|errorsLabel
init|=
operator|new
name|HTML
argument_list|(
name|ca
operator|.
name|hasError
argument_list|()
condition|?
name|ca
operator|.
name|getError
argument_list|()
else|:
literal|""
argument_list|)
decl_stmt|;
name|errorsLabel
operator|.
name|addStyleName
argument_list|(
literal|"registration-errors"
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|errorsLabel
argument_list|)
expr_stmt|;
name|P
name|s
init|=
operator|new
name|P
argument_list|(
literal|"icons"
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|ca
operator|.
name|getSpecRegOperation
argument_list|()
condition|)
block|{
case|case
name|Add
case|:
name|s
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|assignment
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|specRegAssignment
argument_list|(
name|ca
operator|.
name|getSubject
argument_list|()
operator|+
literal|" "
operator|+
name|ca
operator|.
name|getCourseNbr
argument_list|()
operator|+
literal|" "
operator|+
name|ca
operator|.
name|getSubpart
argument_list|()
operator|+
literal|" "
operator|+
name|ca
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|Drop
case|:
name|s
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|unassignment
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|specRegRemoved
argument_list|(
name|ca
operator|.
name|getSubject
argument_list|()
operator|+
literal|" "
operator|+
name|ca
operator|.
name|getCourseNbr
argument_list|()
operator|+
literal|" "
operator|+
name|ca
operator|.
name|getSubpart
argument_list|()
operator|+
literal|" "
operator|+
name|ca
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|Keep
case|:
if|if
condition|(
name|ca
operator|.
name|getGradeMode
argument_list|()
operator|!=
literal|null
operator|&&
name|ca
operator|.
name|getGradeMode
argument_list|()
operator|.
name|isHonor
argument_list|()
condition|)
block|{
name|boolean
name|found
init|=
literal|false
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|x
range|:
name|iAssignment
operator|.
name|getClassAssignments
argument_list|()
control|)
if|if
condition|(
name|x
operator|.
name|isSaved
argument_list|()
operator|&&
name|ca
operator|.
name|getClassId
argument_list|()
operator|.
name|equals
argument_list|(
name|x
operator|.
name|getClassId
argument_list|()
argument_list|)
condition|)
block|{
name|found
operator|=
literal|true
expr_stmt|;
break|break;
block|}
if|if
condition|(
operator|!
name|found
condition|)
name|s
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|unassignment
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|specRegRemoved
argument_list|(
name|ca
operator|.
name|getSubject
argument_list|()
operator|+
literal|" "
operator|+
name|ca
operator|.
name|getCourseNbr
argument_list|()
operator|+
literal|" "
operator|+
name|ca
operator|.
name|getSubpart
argument_list|()
operator|+
literal|" "
operator|+
name|ca
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// s.add(new Icon(RESOURCES.saved(), MESSAGES.saved(ca.getSubject() + " " + ca.getCourseNbr() + " " + ca.getSubpart() + " " + ca.getSection())));
comment|// break;
default|default:
name|s
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|row
operator|.
name|add
argument_list|(
name|s
argument_list|)
expr_stmt|;
name|int
name|idx
init|=
name|iSpecialRegistrations
operator|.
name|addRow
argument_list|(
name|reg
argument_list|,
name|row
argument_list|)
decl_stmt|;
if|if
condition|(
name|reg
operator|.
name|getStatus
argument_list|()
operator|==
name|SpecialRegistrationStatus
operator|.
name|Approved
condition|)
name|iSpecialRegistrations
operator|.
name|setBackGroundColor
argument_list|(
name|idx
argument_list|,
literal|"#D7FFD7"
argument_list|)
expr_stmt|;
if|if
condition|(
name|idx
operator|>
literal|1
operator|&&
name|lastCourseId
operator|==
literal|null
condition|)
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|iSpecialRegistrations
operator|.
name|getCellCount
argument_list|(
name|idx
argument_list|)
condition|;
name|c
operator|++
control|)
name|iSpecialRegistrations
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|idx
argument_list|,
name|c
argument_list|,
literal|"top-border-solid"
argument_list|)
expr_stmt|;
if|if
condition|(
name|lastCourseId
operator|!=
literal|null
operator|&&
operator|!
name|lastCourseId
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
for|for
control|(
name|int
name|c
init|=
literal|2
init|;
name|c
operator|<
name|iSpecialRegistrations
operator|.
name|getCellCount
argument_list|(
name|idx
argument_list|)
operator|-
literal|1
condition|;
name|c
operator|++
control|)
name|iSpecialRegistrations
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|idx
argument_list|,
name|c
argument_list|,
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|ca
operator|.
name|isCourseAssigned
argument_list|()
condition|)
block|{
for|for
control|(
name|int
name|c
init|=
literal|2
init|;
name|c
operator|<
name|iSpecialRegistrations
operator|.
name|getCellCount
argument_list|(
name|idx
argument_list|)
operator|-
literal|1
condition|;
name|c
operator|++
control|)
name|iSpecialRegistrations
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|idx
argument_list|,
name|c
argument_list|,
name|ca
operator|.
name|hasError
argument_list|()
condition|?
literal|"change-drop-with-errors"
else|:
literal|"change-drop"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|int
name|c
init|=
literal|2
init|;
name|c
operator|<
name|iSpecialRegistrations
operator|.
name|getCellCount
argument_list|(
name|idx
argument_list|)
operator|-
literal|1
condition|;
name|c
operator|++
control|)
name|iSpecialRegistrations
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|idx
argument_list|,
name|c
argument_list|,
literal|"change-add"
argument_list|)
expr_stmt|;
block|}
name|lastCourseId
operator|=
name|ca
operator|.
name|getCourseId
argument_list|()
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|reg
operator|.
name|hasErrors
argument_list|()
condition|)
block|{
name|List
argument_list|<
name|Widget
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|DateAndNoteCell
argument_list|(
name|reg
operator|.
name|getSubmitDate
argument_list|()
argument_list|,
name|reg
operator|.
name|getNote
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|DescriptionCell
argument_list|(
name|reg
operator|.
name|getDescription
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|errors
init|=
literal|""
decl_stmt|;
for|for
control|(
name|ErrorMessage
name|e
range|:
name|reg
operator|.
name|getErrors
argument_list|()
control|)
name|errors
operator|+=
operator|(
name|errors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|"\n"
operator|)
operator|+
name|e
operator|.
name|getMessage
argument_list|()
expr_stmt|;
name|HTML
name|errorsLabel
init|=
operator|new
name|HTML
argument_list|(
name|errors
argument_list|)
decl_stmt|;
name|errorsLabel
operator|.
name|addStyleName
argument_list|(
literal|"registration-errors"
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|errorsLabel
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|idx
init|=
name|iSpecialRegistrations
operator|.
name|addRow
argument_list|(
name|reg
argument_list|,
name|row
argument_list|)
decl_stmt|;
if|if
condition|(
name|idx
operator|>
literal|1
condition|)
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|iSpecialRegistrations
operator|.
name|getCellCount
argument_list|(
name|idx
argument_list|)
condition|;
name|c
operator|++
control|)
name|iSpecialRegistrations
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|idx
argument_list|,
name|c
argument_list|,
literal|"top-border-solid"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|fillInWaitLists
parameter_list|()
block|{
name|iWaitLists
operator|.
name|clearTable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|iAssignment
operator|!=
literal|null
operator|&&
name|iAssignment
operator|.
name|hasRequest
argument_list|()
condition|)
block|{
name|NumberFormat
name|df
init|=
name|NumberFormat
operator|.
name|getFormat
argument_list|(
literal|"0.#"
argument_list|)
decl_stmt|;
name|boolean
name|hasPosition
init|=
literal|false
decl_stmt|;
name|boolean
name|hasPrefs
init|=
literal|false
decl_stmt|;
name|request
label|:
for|for
control|(
name|Request
name|request
range|:
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getCourses
argument_list|()
control|)
block|{
if|if
condition|(
name|request
operator|.
name|isWaitList
argument_list|()
operator|&&
name|request
operator|.
name|hasRequestedCourse
argument_list|()
condition|)
block|{
for|for
control|(
name|RequestedCourse
name|rc
range|:
name|request
operator|.
name|getRequestedCourse
argument_list|()
control|)
if|if
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|==
name|RequestedCourseStatus
operator|.
name|ENROLLED
condition|)
continue|continue
name|request
continue|;
name|boolean
name|firstLine
init|=
literal|true
decl_stmt|;
for|for
control|(
name|RequestedCourse
name|rc
range|:
name|request
operator|.
name|getRequestedCourse
argument_list|()
control|)
block|{
if|if
condition|(
name|rc
operator|.
name|hasCourseId
argument_list|()
operator|&&
name|rc
operator|.
name|isCanWaitList
argument_list|()
operator|&&
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
name|RequestedCourseStatus
operator|.
name|ENROLLED
condition|)
block|{
name|P
name|p
init|=
operator|new
name|P
argument_list|(
literal|"icons"
argument_list|)
decl_stmt|;
name|String
name|style
init|=
literal|"pending"
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
condition|)
block|{
case|case
name|OVERRIDE_APPROVED
case|:
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|specRegApproved
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|hintSpecRegApproved
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|style
operator|=
literal|"approved"
expr_stmt|;
break|break;
case|case
name|OVERRIDE_CANCELLED
case|:
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|specRegCancelled
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|hintSpecRegCancelled
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|style
operator|=
literal|"cancelled"
expr_stmt|;
break|break;
case|case
name|OVERRIDE_PENDING
case|:
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|specRegPending
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|hintSpecRegPending
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|style
operator|=
literal|"pending"
expr_stmt|;
break|break;
case|case
name|OVERRIDE_REJECTED
case|:
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|specRegRejected
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|hintSpecRegRejected
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|style
operator|=
literal|"rejected"
expr_stmt|;
break|break;
case|case
name|OVERRIDE_NEEDED
case|:
case|case
name|NEW_REQUEST
case|:
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|requestNeeded
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|reqStatusNeeded
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|style
operator|=
literal|"needed"
expr_stmt|;
break|break;
case|case
name|SAVED
case|:
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|requestsWaitList
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestWaitListed
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|style
operator|=
literal|"saved"
expr_stmt|;
break|break;
block|}
block|}
else|else
block|{
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|requestsWaitList
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestWaitListed
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|style
operator|=
literal|"saved"
expr_stmt|;
block|}
name|List
argument_list|<
name|Widget
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|DateAndNoteCell
argument_list|(
name|firstLine
condition|?
name|request
operator|.
name|getWaitListedTimeStamp
argument_list|()
else|:
literal|null
argument_list|,
name|rc
operator|.
name|getRequestorNote
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|rc
operator|.
name|hasCourseTitle
argument_list|()
condition|?
name|rc
operator|.
name|getCourseTitle
argument_list|()
else|:
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|rc
operator|.
name|hasCredit
argument_list|()
condition|?
operator|(
name|rc
operator|.
name|getCreditMin
argument_list|()
operator|.
name|equals
argument_list|(
name|rc
operator|.
name|getCreditMax
argument_list|()
argument_list|)
condition|?
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMin
argument_list|()
argument_list|)
else|:
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMin
argument_list|()
argument_list|)
operator|+
literal|" - "
operator|+
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMax
argument_list|()
argument_list|)
operator|)
else|:
literal|""
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|rc
operator|.
name|hasWaitListPosition
argument_list|()
operator|&&
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
name|RequestedCourseStatus
operator|.
name|NEW_REQUEST
operator|&&
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
name|RequestedCourseStatus
operator|.
name|OVERRIDE_NEEDED
condition|)
block|{
name|hasPosition
operator|=
literal|true
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|rc
operator|.
name|getWaitListPosition
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Collection
argument_list|<
name|Preference
argument_list|>
name|prefs
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|hasSelectedIntructionalMethods
argument_list|()
condition|)
block|{
if|if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|ArrayList
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
operator|.
name|size
argument_list|()
operator|+
name|rc
operator|.
name|getSelectedClasses
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|Preference
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|prefs
operator|!=
literal|null
operator|&&
operator|!
name|prefs
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
for|for
control|(
name|Iterator
argument_list|<
name|Preference
argument_list|>
name|i
init|=
name|prefs
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Preference
name|pr
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|pr
operator|.
name|isRequired
argument_list|()
condition|)
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|ToolBox
operator|.
name|toString
argument_list|(
name|prefs
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|prefs
operator|!=
literal|null
operator|&&
operator|!
name|prefs
operator|.
name|isEmpty
argument_list|()
condition|)
name|hasPrefs
operator|=
literal|true
expr_stmt|;
name|String
name|note
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|hasConfirmations
argument_list|()
condition|)
block|{
for|for
control|(
name|CourseMessage
name|m
range|:
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getConfirmations
argument_list|()
control|)
block|{
if|if
condition|(
literal|"NO_ALT"
operator|.
name|equals
argument_list|(
name|m
operator|.
name|getCode
argument_list|()
argument_list|)
condition|)
continue|continue;
if|if
condition|(
literal|"CREDIT"
operator|.
name|equals
argument_list|(
name|m
operator|.
name|getCode
argument_list|()
argument_list|)
condition|)
continue|continue;
if|if
condition|(
name|m
operator|.
name|hasCourse
argument_list|()
operator|&&
name|rc
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|m
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
block|{
if|if
condition|(
name|note
operator|==
literal|null
condition|)
block|{
name|note
operator|=
operator|(
name|m
operator|.
name|isError
argument_list|()
condition|?
literal|"<span class='error'>"
else|:
literal|"<span class='"
operator|+
name|style
operator|+
literal|"'>"
operator|)
operator|+
name|m
operator|.
name|getMessage
argument_list|()
operator|+
literal|"</span>"
expr_stmt|;
block|}
else|else
block|{
name|note
operator|+=
literal|"\n"
operator|+
operator|(
name|m
operator|.
name|isError
argument_list|()
condition|?
literal|"<span class='error'>"
else|:
literal|"<span class='"
operator|+
name|style
operator|+
literal|"'>"
operator|)
operator|+
name|m
operator|.
name|getMessage
argument_list|()
operator|+
literal|"</span>"
expr_stmt|;
block|}
block|}
block|}
block|}
if|if
condition|(
name|rc
operator|.
name|hasStatusNote
argument_list|()
condition|)
block|{
name|note
operator|=
operator|(
name|note
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|+
literal|"<br>"
operator|)
operator|+
literal|"<span class='note'>"
operator|+
name|rc
operator|.
name|getStatusNote
argument_list|()
operator|+
literal|"</span>"
expr_stmt|;
block|}
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|course
range|:
name|iAssignment
operator|.
name|getCourseAssignments
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|course
operator|.
name|isAssigned
argument_list|()
operator|&&
name|rc
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|course
operator|.
name|getCourseId
argument_list|()
argument_list|)
operator|&&
name|course
operator|.
name|hasEnrollmentMessage
argument_list|()
condition|)
block|{
name|note
operator|=
operator|(
name|note
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|+
literal|"<br>"
operator|)
operator|+
literal|"<span class='error'>"
operator|+
name|course
operator|.
name|getEnrollmentMessage
argument_list|()
operator|+
literal|"</span>"
expr_stmt|;
block|}
block|}
name|HTML
name|errorsLabel
init|=
operator|new
name|HTML
argument_list|(
name|note
operator|==
literal|null
condition|?
literal|""
else|:
name|note
argument_list|)
decl_stmt|;
name|errorsLabel
operator|.
name|addStyleName
argument_list|(
literal|"waitlists-errors"
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|errorsLabel
argument_list|)
expr_stmt|;
name|int
name|idx
init|=
name|iWaitLists
operator|.
name|addRow
argument_list|(
name|rc
argument_list|,
name|row
argument_list|)
decl_stmt|;
if|if
condition|(
name|firstLine
operator|&&
name|idx
operator|>
literal|1
condition|)
block|{
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|iWaitLists
operator|.
name|getCellCount
argument_list|(
name|idx
argument_list|)
condition|;
name|c
operator|++
control|)
name|iWaitLists
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|idx
argument_list|,
name|c
argument_list|,
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
block|}
name|firstLine
operator|=
literal|false
expr_stmt|;
block|}
block|}
block|}
block|}
if|if
condition|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|hasMaxCreditOverride
argument_list|()
condition|)
block|{
name|P
name|p
init|=
operator|new
name|P
argument_list|(
literal|"icons"
argument_list|)
decl_stmt|;
name|String
name|style
init|=
literal|"pending"
decl_stmt|;
if|if
condition|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getMaxCreditOverrideStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getMaxCreditOverrideStatus
argument_list|()
condition|)
block|{
case|case
name|OVERRIDE_APPROVED
case|:
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|specRegApproved
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|hintSpecRegApproved
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|style
operator|=
literal|"approved"
expr_stmt|;
break|break;
case|case
name|OVERRIDE_CANCELLED
case|:
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|specRegCancelled
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|hintSpecRegCancelled
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|style
operator|=
literal|"cancelled"
expr_stmt|;
break|break;
case|case
name|OVERRIDE_PENDING
case|:
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|specRegPending
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|hintSpecRegPending
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|style
operator|=
literal|"pending"
expr_stmt|;
break|break;
case|case
name|OVERRIDE_REJECTED
case|:
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|specRegRejected
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|hintSpecRegRejected
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|style
operator|=
literal|"rejected"
expr_stmt|;
break|break;
case|case
name|OVERRIDE_NEEDED
case|:
case|case
name|NEW_REQUEST
case|:
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|requestNeeded
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|reqStatusNeeded
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|style
operator|=
literal|"needed"
expr_stmt|;
break|break;
case|case
name|SAVED
case|:
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|requestsWaitList
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestWaitListed
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|style
operator|=
literal|"saved"
expr_stmt|;
break|break;
block|}
block|}
else|else
block|{
name|p
operator|.
name|add
argument_list|(
operator|new
name|Icon
argument_list|(
name|RESOURCES
operator|.
name|requestsWaitList
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestWaitListed
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|style
operator|=
literal|"saved"
expr_stmt|;
block|}
name|List
argument_list|<
name|Widget
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|Widget
argument_list|>
argument_list|()
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|DateAndNoteCell
name|date
init|=
operator|new
name|DateAndNoteCell
argument_list|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getMaxCreditOverrideTimeStamp
argument_list|()
argument_list|,
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getRequestorNote
argument_list|()
argument_list|)
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
name|date
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|df
operator|.
name|format
argument_list|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getMaxCreditOverride
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|note
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|hasCreditWarning
argument_list|()
condition|)
name|note
operator|=
literal|"<span class='"
operator|+
name|style
operator|+
literal|"'>"
operator|+
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getCreditWarning
argument_list|()
operator|+
literal|"</span>"
expr_stmt|;
else|else
name|note
operator|=
literal|"<span class='"
operator|+
name|style
operator|+
literal|"'>"
operator|+
name|MESSAGES
operator|.
name|creditWarning
argument_list|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getMaxCredit
argument_list|()
argument_list|)
operator|+
literal|"</span>"
expr_stmt|;
if|if
condition|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|hasCreditNote
argument_list|()
condition|)
name|note
operator|+=
literal|"\n<span class='note'>"
operator|+
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getCreditNote
argument_list|()
operator|+
literal|"</span>"
expr_stmt|;
name|HTML
name|errorsLabel
init|=
operator|new
name|HTML
argument_list|(
name|note
argument_list|)
decl_stmt|;
name|errorsLabel
operator|.
name|addStyleName
argument_list|(
literal|"waitlists-errors"
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|errorsLabel
argument_list|)
expr_stmt|;
name|int
name|idx
init|=
name|iWaitLists
operator|.
name|addRow
argument_list|(
literal|null
argument_list|,
name|row
argument_list|)
decl_stmt|;
if|if
condition|(
name|idx
operator|>
literal|1
condition|)
block|{
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|iWaitLists
operator|.
name|getCellCount
argument_list|(
name|idx
argument_list|)
condition|;
name|c
operator|++
control|)
name|iWaitLists
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|idx
argument_list|,
name|c
argument_list|,
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
block|}
block|}
name|iWaitLists
operator|.
name|setColumnVisible
argument_list|(
literal|5
argument_list|,
name|hasPosition
argument_list|)
expr_stmt|;
name|iWaitLists
operator|.
name|setColumnVisible
argument_list|(
literal|6
argument_list|,
name|hasPrefs
argument_list|)
expr_stmt|;
block|}
name|iTabs
operator|.
name|getTabBar
argument_list|()
operator|.
name|setTabEnabled
argument_list|(
literal|5
argument_list|,
name|iWaitLists
operator|.
name|getRowCount
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|iTabs
operator|.
name|getSelectedTab
argument_list|()
operator|!=
literal|5
condition|)
operator|(
operator|(
name|Widget
operator|)
name|iTabs
operator|.
name|getTabBar
argument_list|()
operator|.
name|getTab
argument_list|(
literal|5
argument_list|)
operator|)
operator|.
name|setVisible
argument_list|(
name|iWaitLists
operator|.
name|getRowCount
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|fillInTimeGrid
parameter_list|()
block|{
name|iGrid
operator|.
name|clear
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|int
name|index
init|=
literal|0
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|course
range|:
name|iAssignment
operator|.
name|getCourseAssignments
argument_list|()
control|)
block|{
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
range|:
name|course
operator|.
name|getClassAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|clazz
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
name|CourseRequestInterface
operator|.
name|FreeTime
name|ft
init|=
operator|new
name|CourseRequestInterface
operator|.
name|FreeTime
argument_list|()
decl_stmt|;
name|ft
operator|.
name|setLength
argument_list|(
name|clazz
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|ft
operator|.
name|setStart
argument_list|(
name|clazz
operator|.
name|getStart
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|d
range|:
name|clazz
operator|.
name|getDays
argument_list|()
control|)
name|ft
operator|.
name|addDay
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|iGrid
operator|.
name|addFreeTime
argument_list|(
name|ft
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|clazz
operator|.
name|isAssigned
argument_list|()
condition|)
block|{
name|iGrid
operator|.
name|addClass
argument_list|(
name|clazz
argument_list|,
name|index
operator|++
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|iGrid
operator|.
name|shrink
argument_list|()
expr_stmt|;
block|}
specifier|public
name|float
name|getTotalCredit
parameter_list|()
block|{
return|return
name|iTotalCredit
return|;
block|}
specifier|public
name|float
index|[]
name|getCreditRange
parameter_list|()
block|{
return|return
name|iAssignment
operator|==
literal|null
operator|||
operator|!
name|iAssignment
operator|.
name|hasRequest
argument_list|()
condition|?
literal|null
else|:
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getCreditRange
argument_list|(
name|iAssignment
operator|.
name|getAdvisorWaitListedCourseIds
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|String
name|getCreditMessage
parameter_list|()
block|{
if|if
condition|(
name|iTabs
operator|.
name|getSelectedTab
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return
literal|""
return|;
block|}
if|else if
condition|(
name|iTabs
operator|.
name|getSelectedTab
argument_list|()
operator|==
literal|1
condition|)
block|{
name|float
index|[]
name|range
init|=
name|getCreditRange
argument_list|()
decl_stmt|;
if|if
condition|(
name|range
operator|!=
literal|null
operator|&&
name|range
index|[
literal|1
index|]
operator|>
literal|0f
condition|)
block|{
if|if
condition|(
name|range
index|[
literal|0
index|]
operator|==
name|range
index|[
literal|1
index|]
condition|)
return|return
name|MESSAGES
operator|.
name|requestedCredit
argument_list|(
name|range
index|[
literal|0
index|]
argument_list|)
return|;
else|else
return|return
name|MESSAGES
operator|.
name|requestedCreditRange
argument_list|(
name|range
index|[
literal|0
index|]
argument_list|,
name|range
index|[
literal|1
index|]
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|""
return|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|iTotalCredit
operator|>
literal|0f
condition|)
return|return
name|MESSAGES
operator|.
name|totalCredit
argument_list|(
name|iTotalCredit
argument_list|)
return|;
else|else
return|return
literal|""
return|;
block|}
block|}
specifier|public
name|String
name|getErrorMessage
parameter_list|()
block|{
return|return
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getErrorMessaeg
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|hasErrorMessage
parameter_list|()
block|{
return|return
name|iAssignment
operator|!=
literal|null
operator|&&
name|iAssignment
operator|.
name|hasRequest
argument_list|()
operator|&&
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|hasErrorMessage
argument_list|()
return|;
block|}
specifier|public
name|void
name|checkAccessKeys
parameter_list|(
name|NativePreviewEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getTypeInt
argument_list|()
operator|==
name|Event
operator|.
name|ONKEYUP
operator|&&
operator|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getAltKey
argument_list|()
operator|||
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getCtrlKey
argument_list|()
operator|)
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Character
argument_list|,
name|Integer
argument_list|>
name|entry
range|:
name|iTabAccessKeys
operator|.
name|entrySet
argument_list|()
control|)
if|if
condition|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
name|Character
operator|.
name|toLowerCase
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
operator|||
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
name|Character
operator|.
name|toUpperCase
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
condition|)
block|{
if|if
condition|(
name|entry
operator|.
name|getValue
argument_list|()
operator|>=
literal|4
operator|&&
operator|!
operator|(
operator|(
name|Widget
operator|)
name|iTabs
operator|.
name|getTabBar
argument_list|()
operator|.
name|getTab
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
operator|)
operator|.
name|isVisible
argument_list|()
condition|)
return|return;
name|iTabs
operator|.
name|selectTab
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|setSelectionHandler
parameter_list|(
name|SelectionHandler
argument_list|<
name|Integer
argument_list|>
name|handler
parameter_list|)
block|{
name|iHandler
operator|=
name|handler
expr_stmt|;
block|}
specifier|protected
name|void
name|setCritical
parameter_list|(
name|Long
name|studentId
parameter_list|,
name|Request
name|request
parameter_list|,
name|Integer
name|critical
parameter_list|,
name|AsyncCallback
argument_list|<
name|Integer
argument_list|>
name|callback
parameter_list|)
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
name|request
operator|.
name|getCritical
argument_list|()
argument_list|)
expr_stmt|;
block|}
class|class
name|CriticalCell
extends|extends
name|WebTable
operator|.
name|IconCell
block|{
specifier|private
name|Request
name|iRequest
decl_stmt|;
name|CriticalCell
parameter_list|(
name|Request
name|request
parameter_list|)
block|{
name|super
argument_list|(
name|request
operator|.
name|isCritical
argument_list|()
condition|?
name|RESOURCES
operator|.
name|requestsCritical
argument_list|()
else|:
name|request
operator|.
name|isImportant
argument_list|()
condition|?
name|RESOURCES
operator|.
name|requestsImportant
argument_list|()
else|:
name|RESOURCES
operator|.
name|requestsNotCritical
argument_list|()
argument_list|,
literal|""
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|getIcon
argument_list|()
operator|.
name|setTitle
argument_list|(
name|request
operator|.
name|isCritical
argument_list|()
condition|?
name|MESSAGES
operator|.
name|descriptionRequestCritical
argument_list|()
else|:
name|request
operator|.
name|isImportant
argument_list|()
condition|?
name|MESSAGES
operator|.
name|descriptionRequestImportant
argument_list|()
else|:
name|MESSAGES
operator|.
name|descriptionRequestNotCritical
argument_list|()
argument_list|)
expr_stmt|;
name|getIcon
argument_list|()
operator|.
name|setAltText
argument_list|(
name|request
operator|.
name|isCritical
argument_list|()
condition|?
name|MESSAGES
operator|.
name|descriptionRequestCritical
argument_list|()
else|:
name|request
operator|.
name|isImportant
argument_list|()
condition|?
name|MESSAGES
operator|.
name|descriptionRequestImportant
argument_list|()
else|:
name|MESSAGES
operator|.
name|descriptionRequestNotCritical
argument_list|()
argument_list|)
expr_stmt|;
name|iRequest
operator|=
name|request
expr_stmt|;
name|getIcon
argument_list|()
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setCursor
argument_list|(
name|Cursor
operator|.
name|POINTER
argument_list|)
expr_stmt|;
name|getIcon
argument_list|()
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
specifier|final
name|PopupPanel
name|popup
init|=
operator|new
name|PopupPanel
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|popup
operator|.
name|addStyleName
argument_list|(
literal|"unitime-Menu"
argument_list|)
expr_stmt|;
name|MenuBar
name|menu
init|=
operator|new
name|MenuBarWithAccessKeys
argument_list|()
decl_stmt|;
name|MenuItem
name|item1
init|=
operator|new
name|MenuItem
argument_list|(
name|MESSAGES
operator|.
name|opSetCritical
argument_list|()
argument_list|,
literal|true
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|popup
operator|.
name|hide
argument_list|()
expr_stmt|;
name|change
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|menu
operator|.
name|addItem
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|MenuItem
name|item2
init|=
operator|new
name|MenuItem
argument_list|(
name|MESSAGES
operator|.
name|opSetImportant
argument_list|()
argument_list|,
literal|true
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|popup
operator|.
name|hide
argument_list|()
expr_stmt|;
name|change
argument_list|(
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|menu
operator|.
name|addItem
argument_list|(
name|item2
argument_list|)
expr_stmt|;
name|MenuItem
name|item3
init|=
operator|new
name|MenuItem
argument_list|(
name|MESSAGES
operator|.
name|opSetNotCritical
argument_list|()
argument_list|,
literal|true
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|popup
operator|.
name|hide
argument_list|()
expr_stmt|;
name|change
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|menu
operator|.
name|addItem
argument_list|(
name|item3
argument_list|)
expr_stmt|;
name|MenuItem
name|item4
init|=
operator|new
name|MenuItem
argument_list|(
name|MESSAGES
operator|.
name|opSetCriticalNotSet
argument_list|()
argument_list|,
literal|true
argument_list|,
operator|new
name|Command
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|popup
operator|.
name|hide
argument_list|()
expr_stmt|;
name|change
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|menu
operator|.
name|addItem
argument_list|(
name|item4
argument_list|)
expr_stmt|;
name|menu
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|popup
operator|.
name|add
argument_list|(
name|menu
argument_list|)
expr_stmt|;
name|popup
operator|.
name|showRelativeTo
argument_list|(
operator|(
name|Widget
operator|)
name|event
operator|.
name|getSource
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|MenuBar
operator|)
name|popup
operator|.
name|getWidget
argument_list|()
operator|)
operator|.
name|focus
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|void
name|change
parameter_list|(
name|Integer
name|value
parameter_list|)
block|{
name|setCritical
argument_list|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getStudentId
argument_list|()
argument_list|,
name|iRequest
argument_list|,
name|value
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|Integer
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|UniTimeNotifications
operator|.
name|error
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Integer
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|==
literal|null
condition|)
return|return;
if|if
condition|(
name|result
operator|==
literal|1
condition|)
block|{
name|getIcon
argument_list|()
operator|.
name|setResource
argument_list|(
name|RESOURCES
operator|.
name|requestsCritical
argument_list|()
argument_list|)
expr_stmt|;
name|getIcon
argument_list|()
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|descriptionRequestCritical
argument_list|()
argument_list|)
expr_stmt|;
name|getIcon
argument_list|()
operator|.
name|setAltText
argument_list|(
name|MESSAGES
operator|.
name|descriptionRequestCritical
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|result
operator|==
literal|2
condition|)
block|{
name|getIcon
argument_list|()
operator|.
name|setResource
argument_list|(
name|RESOURCES
operator|.
name|requestsImportant
argument_list|()
argument_list|)
expr_stmt|;
name|getIcon
argument_list|()
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|descriptionRequestImportant
argument_list|()
argument_list|)
expr_stmt|;
name|getIcon
argument_list|()
operator|.
name|setAltText
argument_list|(
name|MESSAGES
operator|.
name|descriptionRequestImportant
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|getIcon
argument_list|()
operator|.
name|setResource
argument_list|(
name|RESOURCES
operator|.
name|requestsNotCritical
argument_list|()
argument_list|)
expr_stmt|;
name|getIcon
argument_list|()
operator|.
name|setTitle
argument_list|(
name|MESSAGES
operator|.
name|descriptionRequestNotCritical
argument_list|()
argument_list|)
expr_stmt|;
name|getIcon
argument_list|()
operator|.
name|setAltText
argument_list|(
name|MESSAGES
operator|.
name|descriptionRequestNotCritical
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
class|class
name|Icon
extends|extends
name|Image
block|{
specifier|public
name|Icon
parameter_list|(
name|ImageResource
name|image
parameter_list|,
specifier|final
name|String
name|text
parameter_list|)
block|{
name|super
argument_list|(
name|image
argument_list|)
expr_stmt|;
if|if
condition|(
name|text
operator|!=
literal|null
operator|&&
operator|!
name|text
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|setAltText
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|setTitle
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|event
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
name|event
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
name|UniTimeConfirmationDialog
operator|.
name|info
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|protected
class|class
name|CreditCell
extends|extends
name|HTML
block|{
specifier|public
name|CreditCell
parameter_list|(
name|String
name|text
parameter_list|)
block|{
if|if
condition|(
name|text
operator|!=
literal|null
operator|&&
name|text
operator|.
name|indexOf
argument_list|(
literal|'|'
argument_list|)
operator|>=
literal|0
condition|)
block|{
name|setHTML
argument_list|(
name|text
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|text
operator|.
name|indexOf
argument_list|(
literal|'|'
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|setTitle
argument_list|(
name|text
operator|.
name|substring
argument_list|(
name|text
operator|.
name|indexOf
argument_list|(
literal|'|'
argument_list|)
operator|+
literal|1
argument_list|)
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|"<br>"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setHTML
argument_list|(
name|text
operator|==
literal|null
condition|?
literal|""
else|:
name|text
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|"<br>"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|text
operator|!=
literal|null
condition|)
name|setTitle
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|protected
class|class
name|DateAndNoteCell
extends|extends
name|Label
block|{
specifier|public
name|DateAndNoteCell
parameter_list|(
name|Date
name|date
parameter_list|,
name|String
name|note
parameter_list|)
block|{
name|super
argument_list|(
name|date
operator|==
literal|null
condition|?
name|note
operator|==
literal|null
condition|?
literal|""
else|:
name|note
else|:
name|sModifiedDateFormat
operator|.
name|format
argument_list|(
name|date
argument_list|)
operator|+
operator|(
name|note
operator|==
literal|null
operator|||
name|note
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|"\n"
operator|+
name|note
operator|)
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
literal|"date-and-note"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
class|class
name|DescriptionCell
extends|extends
name|Label
implements|implements
name|UniTimeTable
operator|.
name|HasColSpan
block|{
specifier|public
name|DescriptionCell
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|super
argument_list|(
name|text
operator|==
literal|null
condition|?
literal|""
else|:
name|text
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getColSpan
parameter_list|()
block|{
return|return
literal|7
return|;
block|}
block|}
block|}
end_class

end_unit

