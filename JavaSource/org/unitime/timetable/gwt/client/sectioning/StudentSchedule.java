begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|sectioning
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeHeaderPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTabPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|WebTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|StudentSectioningResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|CheckCoursesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|FreeTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|RequestedCourse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|RequestedCourseStatus
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|i18n
operator|.
name|client
operator|.
name|DateTimeFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|i18n
operator|.
name|client
operator|.
name|NumberFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|resources
operator|.
name|client
operator|.
name|ImageResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|TakesValue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Event
operator|.
name|NativePreviewEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHorizontalAlignment
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|StudentSchedule
extends|extends
name|Composite
implements|implements
name|TakesValue
argument_list|<
name|ClassAssignmentInterface
argument_list|>
block|{
specifier|public
specifier|static
specifier|final
name|StudentSectioningMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StudentSectioningResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|StudentSectioningConstants
name|CONSTANTS
init|=
name|GWT
operator|.
name|create
argument_list|(
name|StudentSectioningConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|DateTimeFormat
name|sDF
init|=
name|DateTimeFormat
operator|.
name|getFormat
argument_list|(
name|CONSTANTS
operator|.
name|requestDateFormat
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|ClassAssignmentInterface
name|iAssignment
decl_stmt|;
specifier|private
name|UniTimeTabPanel
name|iTabs
decl_stmt|;
specifier|private
name|TimeGrid
name|iGrid
decl_stmt|;
specifier|private
name|WebTable
name|iAssignments
decl_stmt|,
name|iRequests
decl_stmt|;
specifier|private
name|boolean
name|iOnline
init|=
literal|false
decl_stmt|;
specifier|private
name|float
name|iTotalCredit
init|=
literal|0f
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Character
argument_list|,
name|Integer
argument_list|>
name|iTabAccessKeys
init|=
operator|new
name|HashMap
argument_list|<
name|Character
argument_list|,
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|SelectionHandler
argument_list|<
name|Integer
argument_list|>
name|iHandler
decl_stmt|;
specifier|public
name|StudentSchedule
parameter_list|(
name|boolean
name|online
parameter_list|)
block|{
name|iOnline
operator|=
name|online
expr_stmt|;
name|iTabs
operator|=
operator|new
name|UniTimeTabPanel
argument_list|()
expr_stmt|;
name|iTabs
operator|.
name|setDeckStyleName
argument_list|(
literal|"unitime-TabPanel"
argument_list|)
expr_stmt|;
name|iRequests
operator|=
operator|new
name|WebTable
argument_list|()
expr_stmt|;
name|iRequests
operator|.
name|setEmptyMessage
argument_list|(
name|MESSAGES
operator|.
name|emptyRequests
argument_list|()
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setHeader
argument_list|(
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colPriority
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"25px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCourse
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colTitle
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"200px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCredit
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"20px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colPreferences
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"100px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colWarnings
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"200px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colStatus
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"20px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colWaitList
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"20px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colRequestTimeStamp
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"50px"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iTabs
operator|.
name|add
argument_list|(
name|iRequests
argument_list|,
name|MESSAGES
operator|.
name|tabRequests
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Character
name|ch0
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|MESSAGES
operator|.
name|tabRequests
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|ch0
operator|!=
literal|null
condition|)
name|iTabAccessKeys
operator|.
name|put
argument_list|(
name|ch0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|iAssignments
operator|=
operator|new
name|WebTable
argument_list|()
expr_stmt|;
name|iAssignments
operator|.
name|setHeader
argument_list|(
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colSubject
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCourse
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colSubpart
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"50px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colClass
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colLimit
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"60px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colDays
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"50px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colStart
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colEnd
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colDate
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colRoom
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"100px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colInstructor
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"100px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colParent
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colNoteIcon
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"10px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colCredit
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|MESSAGES
operator|.
name|colEnrollmentTimeStamp
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|"75px"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iAssignments
operator|.
name|setEmptyMessage
argument_list|(
name|MESSAGES
operator|.
name|emptySchedule
argument_list|()
argument_list|)
expr_stmt|;
name|iTabs
operator|.
name|add
argument_list|(
name|iAssignments
argument_list|,
name|MESSAGES
operator|.
name|tabClasses
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Character
name|ch1
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|MESSAGES
operator|.
name|tabClasses
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|ch1
operator|!=
literal|null
condition|)
name|iTabAccessKeys
operator|.
name|put
argument_list|(
name|ch1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iGrid
operator|=
operator|new
name|TimeGrid
argument_list|()
expr_stmt|;
name|iTabs
operator|.
name|add
argument_list|(
name|iGrid
argument_list|,
name|MESSAGES
operator|.
name|tabTimetable
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Character
name|ch2
init|=
name|UniTimeHeaderPanel
operator|.
name|guessAccessKey
argument_list|(
name|MESSAGES
operator|.
name|tabTimetable
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|ch2
operator|!=
literal|null
condition|)
name|iTabAccessKeys
operator|.
name|put
argument_list|(
name|ch2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|iTabs
operator|.
name|selectTab
argument_list|(
name|SectioningStatusCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|getStudentTab
argument_list|()
argument_list|)
expr_stmt|;
name|iTabs
operator|.
name|addSelectionHandler
argument_list|(
operator|new
name|SelectionHandler
argument_list|<
name|Integer
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSelection
parameter_list|(
name|SelectionEvent
argument_list|<
name|Integer
argument_list|>
name|event
parameter_list|)
block|{
name|SectioningStatusCookie
operator|.
name|getInstance
argument_list|()
operator|.
name|setStudentTab
argument_list|(
name|event
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|iHandler
operator|!=
literal|null
condition|)
name|iHandler
operator|.
name|onSelection
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|initWidget
argument_list|(
name|iTabs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|ClassAssignmentInterface
name|getValue
parameter_list|()
block|{
return|return
name|iAssignment
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setValue
parameter_list|(
name|ClassAssignmentInterface
name|result
parameter_list|)
block|{
name|iAssignment
operator|=
name|result
expr_stmt|;
name|fillInRequests
argument_list|()
expr_stmt|;
name|fillInAssignments
argument_list|()
expr_stmt|;
name|fillInTimeGrid
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|fillInRequests
parameter_list|()
block|{
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
name|rows
init|=
operator|new
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
argument_list|()
decl_stmt|;
name|boolean
name|hasPref
init|=
literal|false
decl_stmt|,
name|hasWarn
init|=
literal|false
decl_stmt|,
name|hasWait
init|=
literal|false
decl_stmt|,
name|hasStat
init|=
literal|false
decl_stmt|;
name|NumberFormat
name|df
init|=
name|NumberFormat
operator|.
name|getFormat
argument_list|(
literal|"0.#"
argument_list|)
decl_stmt|;
if|if
condition|(
name|iAssignment
operator|.
name|hasRequest
argument_list|()
condition|)
block|{
name|CheckCoursesResponse
name|check
init|=
operator|new
name|CheckCoursesResponse
argument_list|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getConfirmations
argument_list|()
argument_list|)
decl_stmt|;
name|hasWarn
operator|=
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|hasConfirmations
argument_list|()
expr_stmt|;
name|int
name|priority
init|=
literal|1
decl_stmt|;
for|for
control|(
name|Request
name|request
range|:
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getCourses
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|request
operator|.
name|hasRequestedCourse
argument_list|()
condition|)
continue|continue;
name|boolean
name|first
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|isWaitList
argument_list|()
condition|)
name|hasWait
operator|=
literal|true
expr_stmt|;
for|for
control|(
name|RequestedCourse
name|rc
range|:
name|request
operator|.
name|getRequestedCourse
argument_list|()
control|)
block|{
if|if
condition|(
name|rc
operator|.
name|isCourse
argument_list|()
condition|)
block|{
name|ImageResource
name|icon
init|=
literal|null
decl_stmt|;
name|String
name|iconText
init|=
literal|null
decl_stmt|;
name|String
name|msg
init|=
name|check
operator|.
name|getMessage
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"\n"
argument_list|)
decl_stmt|;
if|if
condition|(
name|check
operator|.
name|isError
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|&&
operator|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|==
literal|null
operator|||
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
name|RequestedCourseStatus
operator|.
name|OVERRIDE_REJECTED
operator|)
condition|)
block|{
name|icon
operator|=
name|RESOURCES
operator|.
name|requestError
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|msg
operator|)
expr_stmt|;
block|}
if|else if
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
condition|)
block|{
case|case
name|ENROLLED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestEnrolled
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|MESSAGES
operator|.
name|enrolled
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_NEEDED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestNeeded
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|MESSAGES
operator|.
name|overrideNeeded
argument_list|(
name|msg
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|SAVED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|requested
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_REJECTED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestRejected
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideRejected
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_PENDING
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestPending
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overridePending
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_CANCELLED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestCancelled
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideCancelled
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_APPROVED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideApproved
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
default|default:
if|if
condition|(
name|check
operator|.
name|isError
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
condition|)
name|icon
operator|=
name|RESOURCES
operator|.
name|requestError
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|msg
operator|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|rc
operator|.
name|hasStatusNote
argument_list|()
condition|)
name|iconText
operator|+=
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|overrideNote
argument_list|(
name|rc
operator|.
name|getStatusNote
argument_list|()
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|String
argument_list|>
name|prefs
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|hasSelectedIntructionalMethods
argument_list|()
condition|)
block|{
if|if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
operator|.
name|size
argument_list|()
operator|+
name|rc
operator|.
name|getSelectedClasses
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|status
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
condition|)
block|{
case|case
name|ENROLLED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusEnrolled
argument_list|()
expr_stmt|;
break|break;
case|case
name|OVERRIDE_APPROVED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusApproved
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|OVERRIDE_CANCELLED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusCancelled
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|OVERRIDE_PENDING
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusPending
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|OVERRIDE_REJECTED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusRejected
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|status
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getMaxCreditOverrideStatus
argument_list|()
operator|!=
literal|null
operator|&&
name|check
operator|.
name|hasMessage
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"CREDIT"
argument_list|)
condition|)
block|{
switch|switch
condition|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getMaxCreditOverrideStatus
argument_list|()
condition|)
block|{
case|case
name|OVERRIDE_APPROVED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusApproved
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|OVERRIDE_CANCELLED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusCancelled
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|OVERRIDE_PENDING
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusPending
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|OVERRIDE_REJECTED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusRejected
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|status
operator|.
name|isEmpty
argument_list|()
condition|)
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusRegistered
argument_list|()
expr_stmt|;
if|if
condition|(
name|prefs
operator|!=
literal|null
condition|)
name|hasPref
operator|=
literal|true
expr_stmt|;
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCredit
argument_list|()
condition|?
operator|(
name|rc
operator|.
name|getCreditMin
argument_list|()
operator|.
name|equals
argument_list|(
name|rc
operator|.
name|getCreditMax
argument_list|()
argument_list|)
condition|?
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMin
argument_list|()
argument_list|)
else|:
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMin
argument_list|()
argument_list|)
operator|+
literal|" - "
operator|+
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMax
argument_list|()
argument_list|)
operator|)
else|:
literal|""
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|String
name|note
init|=
literal|null
decl_stmt|,
name|noteTitle
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|check
operator|!=
literal|null
condition|)
block|{
name|note
operator|=
name|check
operator|.
name|getMessageWithColor
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"<br>"
argument_list|)
expr_stmt|;
name|noteTitle
operator|=
name|check
operator|.
name|getMessage
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"\n"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|rc
operator|.
name|hasStatusNote
argument_list|()
condition|)
block|{
name|note
operator|=
operator|(
name|note
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|+
literal|"<br>"
operator|)
operator|+
name|rc
operator|.
name|getStatusNote
argument_list|()
expr_stmt|;
name|noteTitle
operator|=
operator|(
name|noteTitle
operator|==
literal|null
condition|?
literal|""
else|:
name|noteTitle
operator|+
literal|"\n"
operator|)
operator|+
name|rc
operator|.
name|getStatusNote
argument_list|()
expr_stmt|;
block|}
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
condition|?
name|MESSAGES
operator|.
name|courseRequestsPriority
argument_list|(
name|priority
argument_list|)
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCourseTitle
argument_list|()
condition|?
name|rc
operator|.
name|getCourseTitle
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
name|credit
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|ToolBox
operator|.
name|toString
argument_list|(
name|prefs
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|note
argument_list|,
name|noteTitle
argument_list|)
argument_list|,
operator|(
name|icon
operator|==
literal|null
condition|?
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|status
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|icon
argument_list|,
name|iconText
argument_list|,
name|status
argument_list|)
operator|)
argument_list|,
operator|(
name|first
operator|&&
name|request
operator|.
name|isWaitList
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsWaitList
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestWaitListed
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
operator|&&
name|request
operator|.
name|hasTimeStamp
argument_list|()
condition|?
name|sDF
operator|.
name|format
argument_list|(
name|request
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
else|:
literal|""
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|priority
operator|>
literal|1
operator|&&
name|first
condition|)
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|rc
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
name|String
name|free
init|=
literal|""
decl_stmt|;
for|for
control|(
name|FreeTime
name|ft
range|:
name|rc
operator|.
name|getFreeTime
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|free
operator|.
name|isEmpty
argument_list|()
condition|)
name|free
operator|+=
literal|", "
expr_stmt|;
name|free
operator|+=
name|ft
operator|.
name|toString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
condition|?
name|MESSAGES
operator|.
name|courseRequestsPriority
argument_list|(
name|priority
argument_list|)
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|CONSTANTS
operator|.
name|freePrefix
argument_list|()
operator|+
name|free
argument_list|,
literal|3
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|requested
argument_list|(
name|free
argument_list|)
argument_list|,
name|MESSAGES
operator|.
name|reqStatusRegistered
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
operator|&&
name|request
operator|.
name|hasTimeStamp
argument_list|()
condition|?
name|sDF
operator|.
name|format
argument_list|(
name|request
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
else|:
literal|""
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|priority
operator|>
literal|1
operator|&&
name|first
condition|)
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
name|first
operator|=
literal|false
expr_stmt|;
block|}
name|priority
operator|++
expr_stmt|;
block|}
name|priority
operator|=
literal|1
expr_stmt|;
for|for
control|(
name|Request
name|request
range|:
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getAlternatives
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|request
operator|.
name|hasRequestedCourse
argument_list|()
condition|)
continue|continue;
name|boolean
name|first
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|isWaitList
argument_list|()
condition|)
name|hasWait
operator|=
literal|true
expr_stmt|;
for|for
control|(
name|RequestedCourse
name|rc
range|:
name|request
operator|.
name|getRequestedCourse
argument_list|()
control|)
block|{
if|if
condition|(
name|rc
operator|.
name|isCourse
argument_list|()
condition|)
block|{
name|ImageResource
name|icon
init|=
literal|null
decl_stmt|;
name|String
name|iconText
init|=
literal|null
decl_stmt|;
name|String
name|msg
init|=
name|check
operator|.
name|getMessage
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"\n"
argument_list|)
decl_stmt|;
if|if
condition|(
name|check
operator|.
name|isError
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|&&
operator|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|==
literal|null
operator|||
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
name|RequestedCourseStatus
operator|.
name|OVERRIDE_REJECTED
operator|)
condition|)
block|{
name|icon
operator|=
name|RESOURCES
operator|.
name|requestError
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|msg
operator|)
expr_stmt|;
block|}
if|else if
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
condition|)
block|{
case|case
name|ENROLLED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestEnrolled
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|MESSAGES
operator|.
name|enrolled
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_NEEDED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestNeeded
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|MESSAGES
operator|.
name|overrideNeeded
argument_list|(
name|msg
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|SAVED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|requested
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_REJECTED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestRejected
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideRejected
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_PENDING
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestPending
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overridePending
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_CANCELLED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestCancelled
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideCancelled
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|OVERRIDE_APPROVED
case|:
name|icon
operator|=
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
operator|(
name|msg
operator|==
literal|null
condition|?
literal|""
else|:
name|MESSAGES
operator|.
name|requestWarnings
argument_list|(
name|msg
argument_list|)
operator|+
literal|"\n\n"
operator|)
operator|+
name|MESSAGES
operator|.
name|overrideApproved
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
default|default:
if|if
condition|(
name|check
operator|.
name|isError
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
condition|)
name|icon
operator|=
name|RESOURCES
operator|.
name|requestError
argument_list|()
expr_stmt|;
name|iconText
operator|=
operator|(
name|msg
operator|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|rc
operator|.
name|hasStatusNote
argument_list|()
condition|)
name|iconText
operator|+=
literal|"\n"
operator|+
name|MESSAGES
operator|.
name|overrideNote
argument_list|(
name|rc
operator|.
name|getStatusNote
argument_list|()
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|String
argument_list|>
name|prefs
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|hasSelectedIntructionalMethods
argument_list|()
condition|)
block|{
if|if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
operator|.
name|size
argument_list|()
operator|+
name|rc
operator|.
name|getSelectedClasses
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|addAll
argument_list|(
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedIntructionalMethods
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|rc
operator|.
name|hasSelectedClasses
argument_list|()
condition|)
block|{
name|prefs
operator|=
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|rc
operator|.
name|getSelectedClasses
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|prefs
operator|!=
literal|null
condition|)
name|hasPref
operator|=
literal|true
expr_stmt|;
name|String
name|status
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|rc
operator|.
name|getStatus
argument_list|()
condition|)
block|{
case|case
name|ENROLLED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusEnrolled
argument_list|()
expr_stmt|;
break|break;
case|case
name|OVERRIDE_APPROVED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusApproved
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|OVERRIDE_CANCELLED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusCancelled
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|OVERRIDE_PENDING
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusPending
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|OVERRIDE_REJECTED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusRejected
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|status
operator|.
name|isEmpty
argument_list|()
operator|&&
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getMaxCreditOverrideStatus
argument_list|()
operator|!=
literal|null
operator|&&
name|check
operator|.
name|hasMessage
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"CREDIT"
argument_list|)
condition|)
block|{
switch|switch
condition|(
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getMaxCreditOverrideStatus
argument_list|()
condition|)
block|{
case|case
name|OVERRIDE_APPROVED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusApproved
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|OVERRIDE_CANCELLED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusCancelled
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|OVERRIDE_PENDING
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusPending
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|OVERRIDE_REJECTED
case|:
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusRejected
argument_list|()
expr_stmt|;
name|hasStat
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|status
operator|.
name|isEmpty
argument_list|()
condition|)
name|status
operator|=
name|MESSAGES
operator|.
name|reqStatusRegistered
argument_list|()
expr_stmt|;
name|WebTable
operator|.
name|Cell
name|credit
init|=
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCredit
argument_list|()
condition|?
operator|(
name|rc
operator|.
name|getCreditMin
argument_list|()
operator|.
name|equals
argument_list|(
name|rc
operator|.
name|getCreditMax
argument_list|()
argument_list|)
condition|?
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMin
argument_list|()
argument_list|)
else|:
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMin
argument_list|()
argument_list|)
operator|+
literal|" - "
operator|+
name|df
operator|.
name|format
argument_list|(
name|rc
operator|.
name|getCreditMax
argument_list|()
argument_list|)
operator|)
else|:
literal|""
argument_list|)
decl_stmt|;
name|credit
operator|.
name|setHorizontalAlignment
argument_list|(
name|HasHorizontalAlignment
operator|.
name|ALIGN_RIGHT
argument_list|)
expr_stmt|;
name|String
name|note
init|=
literal|null
decl_stmt|,
name|noteTitle
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|check
operator|!=
literal|null
condition|)
block|{
name|note
operator|=
name|check
operator|.
name|getMessageWithColor
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"<br>"
argument_list|)
expr_stmt|;
name|noteTitle
operator|=
name|check
operator|.
name|getMessage
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|,
literal|"\n"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|rc
operator|.
name|hasStatusNote
argument_list|()
condition|)
block|{
name|note
operator|=
operator|(
name|note
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|+
literal|"<br>"
operator|)
operator|+
name|rc
operator|.
name|getStatusNote
argument_list|()
expr_stmt|;
name|noteTitle
operator|=
operator|(
name|noteTitle
operator|==
literal|null
condition|?
literal|""
else|:
name|noteTitle
operator|+
literal|"\n"
operator|)
operator|+
name|rc
operator|.
name|getStatusNote
argument_list|()
expr_stmt|;
block|}
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
condition|?
name|MESSAGES
operator|.
name|courseRequestsAlternative
argument_list|(
name|priority
argument_list|)
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|getCourseName
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|rc
operator|.
name|hasCourseTitle
argument_list|()
condition|?
name|rc
operator|.
name|getCourseTitle
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
name|credit
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|ToolBox
operator|.
name|toString
argument_list|(
name|prefs
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|NoteCell
argument_list|(
name|note
argument_list|,
name|noteTitle
argument_list|)
argument_list|,
operator|(
name|icon
operator|==
literal|null
condition|?
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|status
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|icon
argument_list|,
name|iconText
argument_list|,
name|status
argument_list|)
operator|)
argument_list|,
operator|(
name|first
operator|&&
name|request
operator|.
name|isWaitList
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestsWaitList
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|descriptionRequestWaitListed
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
operator|&&
name|request
operator|.
name|hasTimeStamp
argument_list|()
condition|?
name|sDF
operator|.
name|format
argument_list|(
name|request
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
else|:
literal|""
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|first
condition|)
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|priority
operator|==
literal|1
condition|?
literal|"top-border-solid"
else|:
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|rc
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
name|String
name|free
init|=
literal|""
decl_stmt|;
for|for
control|(
name|FreeTime
name|ft
range|:
name|rc
operator|.
name|getFreeTime
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|free
operator|.
name|isEmpty
argument_list|()
condition|)
name|free
operator|+=
literal|", "
expr_stmt|;
name|free
operator|+=
name|ft
operator|.
name|toString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|,
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
condition|?
name|MESSAGES
operator|.
name|courseRequestsPriority
argument_list|(
name|priority
argument_list|)
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|CONSTANTS
operator|.
name|freePrefix
argument_list|()
operator|+
name|free
argument_list|,
literal|3
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|requestSaved
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|requested
argument_list|(
name|free
argument_list|)
argument_list|,
name|MESSAGES
operator|.
name|reqStatusRegistered
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|first
operator|&&
name|request
operator|.
name|hasTimeStamp
argument_list|()
condition|?
name|sDF
operator|.
name|format
argument_list|(
name|request
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
else|:
literal|""
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|first
condition|)
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|priority
operator|==
literal|1
condition|?
literal|"top-border-solid"
else|:
literal|"top-border-dashed"
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
name|first
operator|=
literal|false
expr_stmt|;
block|}
name|priority
operator|++
expr_stmt|;
block|}
block|}
name|WebTable
operator|.
name|Row
index|[]
name|rowArray
init|=
operator|new
name|WebTable
operator|.
name|Row
index|[
name|rows
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Row
name|row
range|:
name|rows
control|)
name|rowArray
index|[
name|idx
operator|++
index|]
operator|=
name|row
expr_stmt|;
name|iRequests
operator|.
name|setData
argument_list|(
name|rowArray
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setColumnVisible
argument_list|(
literal|4
argument_list|,
name|hasPref
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setColumnVisible
argument_list|(
literal|5
argument_list|,
name|hasWarn
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setColumnVisible
argument_list|(
literal|6
argument_list|,
name|hasStat
argument_list|)
expr_stmt|;
name|iRequests
operator|.
name|setColumnVisible
argument_list|(
literal|7
argument_list|,
name|hasWait
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|fillInAssignments
parameter_list|()
block|{
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
name|rows
init|=
operator|new
name|ArrayList
argument_list|<
name|WebTable
operator|.
name|Row
argument_list|>
argument_list|()
decl_stmt|;
name|iTotalCredit
operator|=
literal|0f
expr_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|course
range|:
name|iAssignment
operator|.
name|getCourseAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|course
operator|.
name|isAssigned
argument_list|()
condition|)
block|{
name|boolean
name|firstClazz
init|=
literal|true
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
range|:
name|course
operator|.
name|getClassAssignments
argument_list|()
control|)
block|{
name|String
name|style
init|=
operator|(
name|firstClazz
operator|&&
operator|!
name|rows
operator|.
name|isEmpty
argument_list|()
condition|?
literal|"top-border-dashed"
else|:
literal|""
operator|)
decl_stmt|;
if|if
condition|(
name|clazz
operator|.
name|isTeachingAssignment
argument_list|()
condition|)
name|style
operator|+=
operator|(
name|clazz
operator|.
name|isInstructing
argument_list|()
condition|?
literal|" text-steelblue"
else|:
literal|" text-steelblue-italic"
operator|)
expr_stmt|;
specifier|final
name|WebTable
operator|.
name|Row
name|row
init|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|firstClazz
condition|?
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
else|:
name|course
operator|.
name|getSubject
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|firstClazz
condition|?
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
else|:
name|course
operator|.
name|getCourseNbr
argument_list|()
else|:
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getLimitString
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getStartString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getEndString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getDatePattern
argument_list|()
argument_list|)
argument_list|,
operator|(
name|clazz
operator|.
name|hasDistanceConflict
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|RoomCell
argument_list|(
name|RESOURCES
operator|.
name|distantConflict
argument_list|()
argument_list|,
name|MESSAGES
operator|.
name|backToBackDistance
argument_list|(
name|clazz
operator|.
name|getBackToBackRooms
argument_list|()
argument_list|,
name|clazz
operator|.
name|getBackToBackDistance
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|.
name|getRooms
argument_list|()
argument_list|,
literal|", "
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|RoomCell
argument_list|(
name|clazz
operator|.
name|getRooms
argument_list|()
argument_list|,
literal|", "
argument_list|)
operator|)
argument_list|,
operator|new
name|WebTable
operator|.
name|InstructorCell
argument_list|(
name|clazz
operator|.
name|getInstructors
argument_list|()
argument_list|,
name|clazz
operator|.
name|getInstructorEmails
argument_list|()
argument_list|,
literal|", "
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getParentSection
argument_list|()
argument_list|)
argument_list|,
name|clazz
operator|.
name|hasNote
argument_list|()
condition|?
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|note
argument_list|()
argument_list|,
name|clazz
operator|.
name|getNote
argument_list|()
argument_list|,
literal|""
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|AbbvTextCell
argument_list|(
name|clazz
operator|.
name|getCredit
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getEnrolledDate
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|sDF
operator|.
name|format
argument_list|(
name|clazz
operator|.
name|getEnrolledDate
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|clazz
operator|.
name|isTeachingAssignment
argument_list|()
condition|)
name|row
operator|.
name|setStyleName
argument_list|(
literal|"teaching-assignment"
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|firstClazz
operator|=
literal|false
expr_stmt|;
if|if
condition|(
operator|!
name|clazz
operator|.
name|isTeachingAssignment
argument_list|()
condition|)
name|iTotalCredit
operator|+=
name|clazz
operator|.
name|guessCreditCount
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
name|String
name|style
init|=
literal|"text-red"
operator|+
operator|(
operator|!
name|rows
operator|.
name|isEmpty
argument_list|()
condition|?
literal|" top-border-dashed"
else|:
literal|""
operator|)
decl_stmt|;
name|WebTable
operator|.
name|Row
name|row
init|=
literal|null
decl_stmt|;
name|String
name|unassignedMessage
init|=
name|MESSAGES
operator|.
name|courseNotAssigned
argument_list|()
decl_stmt|;
if|if
condition|(
name|course
operator|.
name|hasEnrollmentMessage
argument_list|()
condition|)
name|unassignedMessage
operator|=
name|course
operator|.
name|getEnrollmentMessage
argument_list|()
expr_stmt|;
if|else if
condition|(
name|course
operator|.
name|getOverlaps
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|course
operator|.
name|getOverlaps
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|unassignedMessage
operator|=
literal|""
expr_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|String
argument_list|>
name|i
init|=
name|course
operator|.
name|getOverlaps
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|x
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|unassignedMessage
operator|.
name|isEmpty
argument_list|()
condition|)
name|unassignedMessage
operator|+=
name|MESSAGES
operator|.
name|conflictWithFirst
argument_list|(
name|x
argument_list|)
expr_stmt|;
if|else if
condition|(
operator|!
name|i
operator|.
name|hasNext
argument_list|()
condition|)
name|unassignedMessage
operator|+=
name|MESSAGES
operator|.
name|conflictWithLast
argument_list|(
name|x
argument_list|)
expr_stmt|;
else|else
name|unassignedMessage
operator|+=
name|MESSAGES
operator|.
name|conflictWithMiddle
argument_list|(
name|x
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
name|unassignedMessage
operator|+=
literal|", "
expr_stmt|;
block|}
if|if
condition|(
name|course
operator|.
name|getInstead
argument_list|()
operator|!=
literal|null
condition|)
name|unassignedMessage
operator|+=
name|MESSAGES
operator|.
name|conflictAssignedAlternative
argument_list|(
name|course
operator|.
name|getInstead
argument_list|()
argument_list|)
expr_stmt|;
name|unassignedMessage
operator|+=
literal|"."
expr_stmt|;
block|}
if|else if
condition|(
name|course
operator|.
name|isNotAvailable
argument_list|()
condition|)
block|{
if|if
condition|(
name|course
operator|.
name|isFull
argument_list|()
condition|)
name|unassignedMessage
operator|=
name|MESSAGES
operator|.
name|courseIsFull
argument_list|()
expr_stmt|;
else|else
name|unassignedMessage
operator|=
name|MESSAGES
operator|.
name|classNotAvailable
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|course
operator|.
name|isLocked
argument_list|()
condition|)
block|{
name|unassignedMessage
operator|=
name|MESSAGES
operator|.
name|courseLocked
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
operator|+
literal|" "
operator|+
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
range|:
name|course
operator|.
name|getClassAssignments
argument_list|()
control|)
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeSubject
argument_list|()
else|:
name|course
operator|.
name|getSubject
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|isFreeTime
argument_list|()
condition|?
name|MESSAGES
operator|.
name|freeTimeCourse
argument_list|()
else|:
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSubpart
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getSection
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getLimitString
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getDaysString
argument_list|(
name|CONSTANTS
operator|.
name|shortDays
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getStartString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getEndString
argument_list|(
name|CONSTANTS
operator|.
name|useAmPm
argument_list|()
argument_list|)
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getDatePattern
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|unassignedMessage
argument_list|,
literal|3
argument_list|,
literal|null
argument_list|)
argument_list|,
name|clazz
operator|.
name|getNote
argument_list|()
operator|==
literal|null
condition|?
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
literal|""
argument_list|)
else|:
operator|new
name|WebTable
operator|.
name|IconCell
argument_list|(
name|RESOURCES
operator|.
name|note
argument_list|()
argument_list|,
name|clazz
operator|.
name|getNote
argument_list|()
argument_list|,
literal|""
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|AbbvTextCell
argument_list|(
name|clazz
operator|.
name|getCredit
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|clazz
operator|.
name|getEnrolledDate
argument_list|()
operator|!=
literal|null
condition|?
name|sDF
operator|.
name|format
argument_list|(
name|clazz
operator|.
name|getEnrolledDate
argument_list|()
argument_list|)
else|:
name|course
operator|.
name|getRequestedDate
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|sDF
operator|.
name|format
argument_list|(
name|course
operator|.
name|getRequestedDate
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|row
operator|==
literal|null
condition|)
block|{
name|row
operator|=
operator|new
name|WebTable
operator|.
name|Row
argument_list|(
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|getSubject
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|unassignedMessage
argument_list|,
literal|12
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|WebTable
operator|.
name|Cell
argument_list|(
name|course
operator|.
name|getRequestedDate
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|sDF
operator|.
name|format
argument_list|(
name|course
operator|.
name|getRequestedDate
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|WebTable
operator|.
name|Cell
name|cell
range|:
name|row
operator|.
name|getCells
argument_list|()
control|)
name|cell
operator|.
name|setStyleName
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|row
operator|.
name|getCell
argument_list|(
name|row
operator|.
name|getNrCells
argument_list|()
operator|-
literal|2
argument_list|)
operator|.
name|setStyleName
argument_list|(
literal|"text-gray"
operator|+
operator|(
operator|!
name|rows
operator|.
name|isEmpty
argument_list|()
condition|?
literal|" top-border-dashed"
else|:
literal|""
operator|)
argument_list|)
expr_stmt|;
name|rows
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
block|}
name|WebTable
operator|.
name|Row
index|[]
name|rowArray
init|=
operator|new
name|WebTable
operator|.
name|Row
index|[
name|rows
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
for|for
control|(
name|WebTable
operator|.
name|Row
name|row
range|:
name|rows
control|)
name|rowArray
index|[
name|idx
operator|++
index|]
operator|=
name|row
expr_stmt|;
name|iAssignments
operator|.
name|setData
argument_list|(
name|rowArray
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|iOnline
condition|)
block|{
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
name|iAssignments
operator|.
name|getTable
argument_list|()
operator|.
name|getRowCount
argument_list|()
condition|;
name|row
operator|++
control|)
block|{
if|if
condition|(
name|iAssignments
operator|.
name|getTable
argument_list|()
operator|.
name|getCellCount
argument_list|(
name|row
argument_list|)
operator|>
literal|2
condition|)
name|iAssignments
operator|.
name|getTable
argument_list|()
operator|.
name|getFlexCellFormatter
argument_list|()
operator|.
name|setVisible
argument_list|(
name|row
argument_list|,
name|iAssignments
operator|.
name|getTable
argument_list|()
operator|.
name|getCellCount
argument_list|(
name|row
argument_list|)
operator|-
literal|2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|protected
name|void
name|fillInTimeGrid
parameter_list|()
block|{
name|iGrid
operator|.
name|clear
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|int
name|index
init|=
literal|0
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
name|course
range|:
name|iAssignment
operator|.
name|getCourseAssignments
argument_list|()
control|)
block|{
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|clazz
range|:
name|course
operator|.
name|getClassAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|clazz
operator|.
name|isFreeTime
argument_list|()
condition|)
block|{
name|CourseRequestInterface
operator|.
name|FreeTime
name|ft
init|=
operator|new
name|CourseRequestInterface
operator|.
name|FreeTime
argument_list|()
decl_stmt|;
name|ft
operator|.
name|setLength
argument_list|(
name|clazz
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|ft
operator|.
name|setStart
argument_list|(
name|clazz
operator|.
name|getStart
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|d
range|:
name|clazz
operator|.
name|getDays
argument_list|()
control|)
name|ft
operator|.
name|addDay
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|iGrid
operator|.
name|addFreeTime
argument_list|(
name|ft
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|clazz
operator|.
name|isAssigned
argument_list|()
condition|)
block|{
name|iGrid
operator|.
name|addClass
argument_list|(
name|clazz
argument_list|,
name|index
operator|++
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|iGrid
operator|.
name|shrink
argument_list|()
expr_stmt|;
block|}
specifier|public
name|float
name|getTotalCredit
parameter_list|()
block|{
return|return
name|iTotalCredit
return|;
block|}
specifier|public
name|float
index|[]
name|getCreditRange
parameter_list|()
block|{
return|return
name|iAssignment
operator|==
literal|null
operator|||
operator|!
name|iAssignment
operator|.
name|hasRequest
argument_list|()
condition|?
literal|null
else|:
name|iAssignment
operator|.
name|getRequest
argument_list|()
operator|.
name|getCreditRange
argument_list|()
return|;
block|}
specifier|public
name|String
name|getCreditMessage
parameter_list|()
block|{
if|if
condition|(
name|iTabs
operator|.
name|getSelectedTab
argument_list|()
operator|==
literal|0
condition|)
block|{
name|float
index|[]
name|range
init|=
name|getCreditRange
argument_list|()
decl_stmt|;
if|if
condition|(
name|range
operator|!=
literal|null
operator|&&
name|range
index|[
literal|1
index|]
operator|>
literal|0f
condition|)
block|{
if|if
condition|(
name|range
index|[
literal|0
index|]
operator|==
name|range
index|[
literal|1
index|]
condition|)
return|return
name|MESSAGES
operator|.
name|requestedCredit
argument_list|(
name|range
index|[
literal|0
index|]
argument_list|)
return|;
else|else
return|return
name|MESSAGES
operator|.
name|requestedCreditRange
argument_list|(
name|range
index|[
literal|0
index|]
argument_list|,
name|range
index|[
literal|1
index|]
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|""
return|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|iTotalCredit
operator|>
literal|0f
condition|)
return|return
name|MESSAGES
operator|.
name|totalCredit
argument_list|(
name|iTotalCredit
argument_list|)
return|;
else|else
return|return
literal|""
return|;
block|}
block|}
specifier|public
name|void
name|checkAccessKeys
parameter_list|(
name|NativePreviewEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getTypeInt
argument_list|()
operator|==
name|Event
operator|.
name|ONKEYUP
operator|&&
operator|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getAltKey
argument_list|()
operator|||
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getCtrlKey
argument_list|()
operator|)
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Character
argument_list|,
name|Integer
argument_list|>
name|entry
range|:
name|iTabAccessKeys
operator|.
name|entrySet
argument_list|()
control|)
if|if
condition|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
name|Character
operator|.
name|toLowerCase
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
operator|||
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
name|Character
operator|.
name|toUpperCase
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
condition|)
block|{
name|iTabs
operator|.
name|selectTab
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|setSelectionHandler
parameter_list|(
name|SelectionHandler
argument_list|<
name|Integer
argument_list|>
name|handler
parameter_list|)
block|{
name|iHandler
operator|=
name|handler
expr_stmt|;
block|}
block|}
end_class

end_unit

