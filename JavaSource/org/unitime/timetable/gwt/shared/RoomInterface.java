begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|FilterRpcResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|IsSerializable
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|RoomInterface
implements|implements
name|IsSerializable
block|{
specifier|public
specifier|static
class|class
name|RoomSharingDisplayMode
implements|implements
name|IsSerializable
block|{
specifier|private
name|String
name|iName
decl_stmt|;
specifier|private
name|int
name|iFirstDay
init|=
literal|0
decl_stmt|,
name|iLastDay
init|=
literal|4
decl_stmt|,
name|iFirstSlot
init|=
literal|90
decl_stmt|,
name|iLastSlot
init|=
literal|210
decl_stmt|,
name|iStep
init|=
literal|6
decl_stmt|;
specifier|public
name|RoomSharingDisplayMode
parameter_list|()
block|{
block|}
specifier|public
name|RoomSharingDisplayMode
parameter_list|(
name|String
name|m
parameter_list|)
block|{
name|String
index|[]
name|model
init|=
name|m
operator|.
name|split
argument_list|(
literal|"\\|"
argument_list|)
decl_stmt|;
name|iName
operator|=
name|model
index|[
literal|0
index|]
expr_stmt|;
name|iFirstDay
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|model
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|iLastDay
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|model
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|iFirstSlot
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|model
index|[
literal|3
index|]
argument_list|)
expr_stmt|;
name|iLastSlot
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|model
index|[
literal|4
index|]
argument_list|)
expr_stmt|;
name|iStep
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|model
index|[
literal|5
index|]
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getFirstDay
parameter_list|()
block|{
return|return
name|iFirstDay
return|;
block|}
specifier|public
name|void
name|setFirstDay
parameter_list|(
name|int
name|firstDay
parameter_list|)
block|{
name|iFirstDay
operator|=
name|firstDay
expr_stmt|;
block|}
specifier|public
name|int
name|getLastDay
parameter_list|()
block|{
return|return
name|iLastDay
return|;
block|}
specifier|public
name|void
name|setLastDay
parameter_list|(
name|int
name|lastDay
parameter_list|)
block|{
name|iLastDay
operator|=
name|lastDay
expr_stmt|;
block|}
specifier|public
name|int
name|getFirstSlot
parameter_list|()
block|{
return|return
name|iFirstSlot
return|;
block|}
specifier|public
name|void
name|setFirstSlot
parameter_list|(
name|int
name|firstSlot
parameter_list|)
block|{
name|iFirstSlot
operator|=
name|firstSlot
expr_stmt|;
block|}
specifier|public
name|int
name|getLastSlot
parameter_list|()
block|{
return|return
name|iLastSlot
return|;
block|}
specifier|public
name|void
name|setLastSlot
parameter_list|(
name|int
name|lastSlot
parameter_list|)
block|{
name|iLastSlot
operator|=
name|lastSlot
expr_stmt|;
block|}
specifier|public
name|int
name|getStep
parameter_list|()
block|{
return|return
name|iStep
return|;
block|}
specifier|public
name|void
name|setStep
parameter_list|(
name|int
name|step
parameter_list|)
block|{
name|iStep
operator|=
name|step
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getFirstDay
argument_list|()
operator|+
literal|"|"
operator|+
name|getLastDay
argument_list|()
operator|+
literal|"|"
operator|+
name|getFirstSlot
argument_list|()
operator|+
literal|"|"
operator|+
name|getLastSlot
argument_list|()
operator|+
literal|"|"
operator|+
name|getStep
argument_list|()
return|;
block|}
specifier|public
name|String
name|toHex
parameter_list|()
block|{
return|return
name|Integer
operator|.
name|toHexString
argument_list|(
name|getStep
argument_list|()
operator|*
literal|4064256
operator|+
name|getFirstDay
argument_list|()
operator|*
literal|580608
operator|+
name|getLastDay
argument_list|()
operator|*
literal|82944
operator|+
name|getFirstSlot
argument_list|()
operator|*
literal|288
operator|+
operator|(
name|getLastSlot
argument_list|()
operator|%
literal|288
operator|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|RoomSharingDisplayMode
name|fromHex
parameter_list|(
name|String
name|hexMode
parameter_list|)
block|{
name|int
name|mode
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|hexMode
argument_list|,
literal|16
argument_list|)
decl_stmt|;
name|RoomSharingDisplayMode
name|m
init|=
operator|new
name|RoomSharingDisplayMode
argument_list|()
decl_stmt|;
name|m
operator|.
name|setStep
argument_list|(
name|mode
operator|/
literal|4064256
argument_list|)
expr_stmt|;
name|m
operator|.
name|setFirstDay
argument_list|(
operator|(
name|mode
operator|%
literal|4064256
operator|)
operator|/
literal|580608
argument_list|)
expr_stmt|;
name|m
operator|.
name|setLastDay
argument_list|(
operator|(
name|mode
operator|%
literal|580608
operator|)
operator|/
literal|82944
argument_list|)
expr_stmt|;
name|m
operator|.
name|setFirstSlot
argument_list|(
operator|(
name|mode
operator|%
literal|82944
operator|)
operator|/
literal|288
argument_list|)
expr_stmt|;
name|m
operator|.
name|setLastSlot
argument_list|(
name|mode
operator|%
literal|288
operator|==
literal|0
condition|?
literal|288
else|:
name|mode
operator|%
literal|288
argument_list|)
expr_stmt|;
return|return
name|m
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomSharingOption
implements|implements
name|IsSerializable
block|{
specifier|private
name|String
name|iCode
decl_stmt|,
name|iName
decl_stmt|;
specifier|private
name|String
name|iColor
decl_stmt|;
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|boolean
name|iEditable
decl_stmt|;
specifier|private
name|Long
name|iPreferenceId
init|=
literal|null
decl_stmt|;
specifier|public
name|RoomSharingOption
parameter_list|()
block|{
block|}
specifier|public
name|RoomSharingOption
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|color
parameter_list|,
name|String
name|code
parameter_list|,
name|String
name|name
parameter_list|,
name|boolean
name|editable
parameter_list|,
name|Long
name|preferenceId
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
name|iColor
operator|=
name|color
expr_stmt|;
name|iCode
operator|=
name|code
expr_stmt|;
name|iName
operator|=
name|name
expr_stmt|;
name|iEditable
operator|=
name|editable
expr_stmt|;
name|iPreferenceId
operator|=
name|preferenceId
expr_stmt|;
block|}
specifier|public
name|RoomSharingOption
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|color
parameter_list|,
name|String
name|code
parameter_list|,
name|String
name|name
parameter_list|,
name|boolean
name|editable
parameter_list|)
block|{
name|this
argument_list|(
name|id
argument_list|,
name|color
argument_list|,
name|code
argument_list|,
name|name
argument_list|,
name|editable
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getColor
parameter_list|()
block|{
return|return
name|iColor
return|;
block|}
specifier|public
name|void
name|setColor
parameter_list|(
name|String
name|color
parameter_list|)
block|{
name|iColor
operator|=
name|color
expr_stmt|;
block|}
specifier|public
name|String
name|getCode
parameter_list|()
block|{
return|return
name|iCode
return|;
block|}
specifier|public
name|void
name|setCode
parameter_list|(
name|String
name|code
parameter_list|)
block|{
name|iCode
operator|=
name|code
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|void
name|setEditable
parameter_list|(
name|boolean
name|editable
parameter_list|)
block|{
name|iEditable
operator|=
name|editable
expr_stmt|;
block|}
specifier|public
name|boolean
name|isEditable
parameter_list|()
block|{
return|return
name|iEditable
return|;
block|}
specifier|public
name|boolean
name|hasPreference
parameter_list|()
block|{
return|return
name|iPreferenceId
operator|!=
literal|null
return|;
block|}
specifier|public
name|void
name|setPreference
parameter_list|(
name|Long
name|preferenceId
parameter_list|)
block|{
name|iPreferenceId
operator|=
name|preferenceId
expr_stmt|;
block|}
specifier|public
name|Long
name|getPreference
parameter_list|()
block|{
return|return
name|iPreferenceId
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|RoomSharingOption
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|RoomSharingOption
operator|)
name|o
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomSharingModel
implements|implements
name|IsSerializable
implements|,
name|GwtRpcResponse
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iName
decl_stmt|;
specifier|private
name|Long
name|iDefaultOption
decl_stmt|;
specifier|private
name|boolean
name|iDefaultHorizontal
decl_stmt|;
specifier|private
name|List
argument_list|<
name|RoomSharingDisplayMode
argument_list|>
name|iModes
decl_stmt|;
specifier|private
name|List
argument_list|<
name|RoomSharingOption
argument_list|>
name|iOptions
decl_stmt|;
specifier|private
name|List
argument_list|<
name|RoomSharingOption
argument_list|>
name|iOtherOptions
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Integer
argument_list|,
name|Map
argument_list|<
name|Integer
argument_list|,
name|Long
argument_list|>
argument_list|>
name|iModel
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Integer
argument_list|,
name|Map
argument_list|<
name|Integer
argument_list|,
name|Boolean
argument_list|>
argument_list|>
name|iEditable
decl_stmt|;
specifier|private
name|int
name|iDefaultMode
init|=
literal|0
decl_stmt|;
specifier|private
name|boolean
name|iDefaultEditable
init|=
literal|true
decl_stmt|;
specifier|private
name|String
name|iNote
init|=
literal|null
decl_stmt|;
specifier|private
name|boolean
name|iNoteEditable
init|=
literal|false
decl_stmt|;
specifier|private
name|List
argument_list|<
name|PreferenceInterface
argument_list|>
name|iPreferences
init|=
literal|null
decl_stmt|;
specifier|private
name|Long
name|iDefaultPreference
init|=
literal|null
decl_stmt|;
specifier|public
name|RoomSharingModel
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|void
name|addMode
parameter_list|(
name|RoomSharingDisplayMode
name|mode
parameter_list|)
block|{
if|if
condition|(
name|iModes
operator|==
literal|null
condition|)
name|iModes
operator|=
operator|new
name|ArrayList
argument_list|<
name|RoomSharingDisplayMode
argument_list|>
argument_list|()
expr_stmt|;
name|iModes
operator|.
name|add
argument_list|(
name|mode
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|RoomSharingDisplayMode
argument_list|>
name|getModes
parameter_list|()
block|{
return|return
name|iModes
return|;
block|}
specifier|public
name|void
name|setDefaultOption
parameter_list|(
name|RoomSharingOption
name|option
parameter_list|)
block|{
name|iDefaultOption
operator|=
operator|(
name|option
operator|==
literal|null
condition|?
literal|null
else|:
name|option
operator|.
name|getId
argument_list|()
operator|)
expr_stmt|;
block|}
specifier|public
name|RoomSharingOption
name|getDefaultOption
parameter_list|()
block|{
return|return
name|getOption
argument_list|(
name|iDefaultOption
argument_list|)
return|;
block|}
specifier|public
name|RoomSharingOption
name|getOption
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
if|if
condition|(
name|id
operator|==
literal|null
condition|)
name|id
operator|=
name|iDefaultOption
expr_stmt|;
if|if
condition|(
name|iOptions
operator|==
literal|null
operator|||
name|id
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|RoomSharingOption
name|option
range|:
name|iOptions
control|)
if|if
condition|(
name|option
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
return|return
name|option
return|;
return|return
operator|(
operator|!
name|id
operator|.
name|equals
argument_list|(
name|iDefaultOption
argument_list|)
condition|?
name|getOption
argument_list|(
name|iDefaultOption
argument_list|)
else|:
literal|null
operator|)
return|;
block|}
specifier|public
name|void
name|addOption
parameter_list|(
name|RoomSharingOption
name|option
parameter_list|)
block|{
if|if
condition|(
name|iOptions
operator|==
literal|null
condition|)
name|iOptions
operator|=
operator|new
name|ArrayList
argument_list|<
name|RoomSharingOption
argument_list|>
argument_list|()
expr_stmt|;
name|iOptions
operator|.
name|add
argument_list|(
name|option
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addOther
parameter_list|(
name|RoomSharingOption
name|option
parameter_list|)
block|{
if|if
condition|(
name|iOtherOptions
operator|==
literal|null
condition|)
name|iOtherOptions
operator|=
operator|new
name|ArrayList
argument_list|<
name|RoomSharingOption
argument_list|>
argument_list|()
expr_stmt|;
name|iOtherOptions
operator|.
name|add
argument_list|(
name|option
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|RoomSharingOption
argument_list|>
name|getAdditionalOptions
parameter_list|()
block|{
name|List
argument_list|<
name|RoomSharingOption
argument_list|>
name|other
init|=
operator|new
name|ArrayList
argument_list|<
name|RoomSharingOption
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|iOtherOptions
operator|==
literal|null
operator|||
name|iOtherOptions
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
name|other
return|;
for|for
control|(
name|RoomSharingOption
name|option
range|:
name|iOtherOptions
control|)
if|if
condition|(
operator|!
name|iOptions
operator|.
name|contains
argument_list|(
name|option
argument_list|)
condition|)
name|other
operator|.
name|add
argument_list|(
name|option
argument_list|)
expr_stmt|;
return|return
name|other
return|;
block|}
specifier|public
name|List
argument_list|<
name|RoomSharingOption
argument_list|>
name|getOptions
parameter_list|()
block|{
return|return
name|iOptions
return|;
block|}
specifier|public
name|List
argument_list|<
name|RoomSharingOption
argument_list|>
name|getRemovableOptions
parameter_list|()
block|{
name|List
argument_list|<
name|RoomSharingOption
argument_list|>
name|options
init|=
operator|new
name|ArrayList
argument_list|<
name|RoomSharingOption
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|iOptions
operator|==
literal|null
condition|)
return|return
name|options
return|;
for|for
control|(
name|RoomSharingOption
name|option
range|:
name|iOptions
control|)
if|if
condition|(
name|option
operator|.
name|isEditable
argument_list|()
operator|&&
name|option
operator|.
name|getId
argument_list|()
operator|>=
literal|0
condition|)
name|options
operator|.
name|add
argument_list|(
name|option
argument_list|)
expr_stmt|;
return|return
name|options
return|;
block|}
specifier|public
name|boolean
name|isEditable
parameter_list|()
block|{
if|if
condition|(
name|iOptions
operator|==
literal|null
condition|)
return|return
literal|false
return|;
for|for
control|(
name|RoomSharingOption
name|option
range|:
name|iOptions
control|)
if|if
condition|(
name|option
operator|.
name|isEditable
argument_list|()
condition|)
block|{
if|if
condition|(
name|iDefaultEditable
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|iEditable
operator|==
literal|null
operator|||
name|iEditable
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|false
return|;
for|for
control|(
name|Map
argument_list|<
name|Integer
argument_list|,
name|Boolean
argument_list|>
name|slot2ed
range|:
name|iEditable
operator|.
name|values
argument_list|()
control|)
for|for
control|(
name|Boolean
name|ed
range|:
name|slot2ed
operator|.
name|values
argument_list|()
control|)
if|if
condition|(
name|ed
condition|)
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|RoomSharingOption
name|getOption
parameter_list|(
name|int
name|day
parameter_list|,
name|int
name|slot
parameter_list|)
block|{
if|if
condition|(
name|iModel
operator|==
literal|null
condition|)
return|return
name|getOption
argument_list|(
name|iDefaultOption
argument_list|)
return|;
name|Map
argument_list|<
name|Integer
argument_list|,
name|Long
argument_list|>
name|slot2id
init|=
name|iModel
operator|.
name|get
argument_list|(
name|day
argument_list|)
decl_stmt|;
return|return
name|getOption
argument_list|(
name|slot2id
operator|==
literal|null
condition|?
literal|null
else|:
name|slot2id
operator|.
name|get
argument_list|(
name|slot
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|void
name|setOption
parameter_list|(
name|int
name|day
parameter_list|,
name|int
name|slot
parameter_list|,
name|Long
name|optionId
parameter_list|)
block|{
if|if
condition|(
name|iModel
operator|==
literal|null
condition|)
name|iModel
operator|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|Map
argument_list|<
name|Integer
argument_list|,
name|Long
argument_list|>
argument_list|>
argument_list|()
expr_stmt|;
name|Map
argument_list|<
name|Integer
argument_list|,
name|Long
argument_list|>
name|slot2id
init|=
name|iModel
operator|.
name|get
argument_list|(
name|day
argument_list|)
decl_stmt|;
if|if
condition|(
name|slot2id
operator|==
literal|null
condition|)
block|{
name|slot2id
operator|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|Long
argument_list|>
argument_list|()
expr_stmt|;
name|iModel
operator|.
name|put
argument_list|(
name|day
argument_list|,
name|slot2id
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|optionId
operator|==
literal|null
condition|)
name|slot2id
operator|.
name|remove
argument_list|(
name|slot
argument_list|)
expr_stmt|;
else|else
name|slot2id
operator|.
name|put
argument_list|(
name|slot
argument_list|,
name|optionId
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setOption
parameter_list|(
name|int
name|day
parameter_list|,
name|int
name|slot
parameter_list|,
name|int
name|step
parameter_list|,
name|RoomSharingOption
name|option
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|step
condition|;
name|i
operator|++
control|)
name|setOption
argument_list|(
name|day
argument_list|,
name|slot
operator|+
name|i
argument_list|,
name|option
operator|==
literal|null
condition|?
literal|null
else|:
name|option
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isEditable
parameter_list|(
name|int
name|day
parameter_list|,
name|int
name|slot
parameter_list|)
block|{
if|if
condition|(
name|iEditable
operator|==
literal|null
condition|)
return|return
name|iDefaultEditable
return|;
name|Map
argument_list|<
name|Integer
argument_list|,
name|Boolean
argument_list|>
name|slot2ed
init|=
name|iEditable
operator|.
name|get
argument_list|(
name|day
argument_list|)
decl_stmt|;
if|if
condition|(
name|slot2ed
operator|==
literal|null
condition|)
return|return
name|iDefaultEditable
return|;
name|Boolean
name|ed
init|=
name|slot2ed
operator|.
name|get
argument_list|(
name|slot
argument_list|)
decl_stmt|;
return|return
operator|(
name|ed
operator|==
literal|null
condition|?
name|iDefaultEditable
else|:
name|ed
operator|)
return|;
block|}
specifier|public
name|boolean
name|isEditable
parameter_list|(
name|int
name|day
parameter_list|,
name|int
name|slot
parameter_list|,
name|int
name|step
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|step
condition|;
name|i
operator|++
control|)
if|if
condition|(
operator|!
name|isEditable
argument_list|(
name|day
argument_list|,
name|slot
operator|+
name|i
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|setEditable
parameter_list|(
name|int
name|day
parameter_list|,
name|int
name|slot
parameter_list|,
name|boolean
name|editable
parameter_list|)
block|{
if|if
condition|(
name|iEditable
operator|==
literal|null
condition|)
name|iEditable
operator|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|Map
argument_list|<
name|Integer
argument_list|,
name|Boolean
argument_list|>
argument_list|>
argument_list|()
expr_stmt|;
name|Map
argument_list|<
name|Integer
argument_list|,
name|Boolean
argument_list|>
name|slot2ed
init|=
name|iEditable
operator|.
name|get
argument_list|(
name|day
argument_list|)
decl_stmt|;
if|if
condition|(
name|slot2ed
operator|==
literal|null
condition|)
block|{
name|slot2ed
operator|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|Boolean
argument_list|>
argument_list|()
expr_stmt|;
name|iEditable
operator|.
name|put
argument_list|(
name|day
argument_list|,
name|slot2ed
argument_list|)
expr_stmt|;
block|}
name|slot2ed
operator|.
name|put
argument_list|(
name|slot
argument_list|,
name|editable
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDefaultEditable
parameter_list|(
name|boolean
name|editable
parameter_list|)
block|{
name|iDefaultEditable
operator|=
name|editable
expr_stmt|;
block|}
specifier|public
name|boolean
name|isDefaultHorizontal
parameter_list|()
block|{
return|return
name|iDefaultHorizontal
return|;
block|}
specifier|public
name|void
name|setDefaultHorizontal
parameter_list|(
name|boolean
name|horizontal
parameter_list|)
block|{
name|iDefaultHorizontal
operator|=
name|horizontal
expr_stmt|;
block|}
specifier|public
name|int
name|getDefaultMode
parameter_list|()
block|{
return|return
name|iDefaultMode
return|;
block|}
specifier|public
name|void
name|setDefaultMode
parameter_list|(
name|int
name|mode
parameter_list|)
block|{
name|iDefaultMode
operator|=
name|mode
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasNote
parameter_list|()
block|{
return|return
name|iNote
operator|!=
literal|null
operator|&&
operator|!
name|iNote
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getNote
parameter_list|()
block|{
return|return
name|iNote
return|;
block|}
specifier|public
name|void
name|setNote
parameter_list|(
name|String
name|note
parameter_list|)
block|{
name|iNote
operator|=
name|note
expr_stmt|;
block|}
specifier|public
name|boolean
name|isNoteEditable
parameter_list|()
block|{
return|return
name|iNoteEditable
return|;
block|}
specifier|public
name|void
name|setNoteEditable
parameter_list|(
name|boolean
name|noteEditable
parameter_list|)
block|{
name|iNoteEditable
operator|=
name|noteEditable
expr_stmt|;
block|}
specifier|public
name|void
name|setDefaultPreference
parameter_list|(
name|PreferenceInterface
name|preference
parameter_list|)
block|{
name|iDefaultPreference
operator|=
operator|(
name|preference
operator|==
literal|null
condition|?
literal|null
else|:
name|preference
operator|.
name|getId
argument_list|()
operator|)
expr_stmt|;
block|}
specifier|public
name|PreferenceInterface
name|getDefaultPreference
parameter_list|()
block|{
return|return
name|getPreference
argument_list|(
name|iDefaultPreference
argument_list|)
return|;
block|}
specifier|public
name|PreferenceInterface
name|getPreference
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
if|if
condition|(
name|id
operator|==
literal|null
condition|)
name|id
operator|=
name|iDefaultPreference
expr_stmt|;
if|if
condition|(
name|iPreferences
operator|==
literal|null
operator|||
name|id
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|PreferenceInterface
name|preference
range|:
name|iPreferences
control|)
if|if
condition|(
name|preference
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
return|return
name|preference
return|;
return|return
operator|(
operator|!
name|id
operator|.
name|equals
argument_list|(
name|iDefaultPreference
argument_list|)
condition|?
name|getPreference
argument_list|(
name|iDefaultPreference
argument_list|)
else|:
literal|null
operator|)
return|;
block|}
specifier|public
name|void
name|addPreference
parameter_list|(
name|PreferenceInterface
name|preference
parameter_list|)
block|{
if|if
condition|(
name|iPreferences
operator|==
literal|null
condition|)
name|iPreferences
operator|=
operator|new
name|ArrayList
argument_list|<
name|PreferenceInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iPreferences
operator|.
name|add
argument_list|(
name|preference
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|PreferenceInterface
argument_list|>
name|getPreferences
parameter_list|()
block|{
return|return
name|iPreferences
return|;
block|}
specifier|public
name|int
name|countOptions
parameter_list|(
name|Long
name|optionId
parameter_list|)
block|{
if|if
condition|(
name|iModel
operator|==
literal|null
operator|||
name|optionId
operator|==
literal|null
condition|)
return|return
literal|0
return|;
name|int
name|ret
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Map
argument_list|<
name|Integer
argument_list|,
name|Long
argument_list|>
name|slot2id
range|:
name|iModel
operator|.
name|values
argument_list|()
control|)
for|for
control|(
name|Long
name|id
range|:
name|slot2id
operator|.
name|values
argument_list|()
control|)
if|if
condition|(
name|optionId
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
name|ret
operator|++
expr_stmt|;
return|return
name|ret
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomSharingRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|RoomSharingModel
argument_list|>
block|{
specifier|public
specifier|static
enum|enum
name|Operation
implements|implements
name|IsSerializable
block|{
name|LOAD
block|,
name|SAVE
block|}
specifier|private
name|Operation
name|iOperation
decl_stmt|;
specifier|private
name|Long
name|iLocationId
decl_stmt|;
specifier|private
name|RoomSharingModel
name|iModel
decl_stmt|;
specifier|private
name|boolean
name|iEventAvailability
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|iIncludeRoomPreferences
init|=
literal|false
decl_stmt|;
specifier|public
name|RoomSharingRequest
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getLocationId
parameter_list|()
block|{
return|return
name|iLocationId
return|;
block|}
specifier|public
name|void
name|setLocationId
parameter_list|(
name|Long
name|locationId
parameter_list|)
block|{
name|iLocationId
operator|=
name|locationId
expr_stmt|;
block|}
specifier|public
name|RoomSharingModel
name|getModel
parameter_list|()
block|{
return|return
name|iModel
return|;
block|}
specifier|public
name|void
name|setModel
parameter_list|(
name|RoomSharingModel
name|model
parameter_list|)
block|{
name|iModel
operator|=
name|model
expr_stmt|;
block|}
specifier|public
name|Operation
name|getOperation
parameter_list|()
block|{
return|return
name|iOperation
return|;
block|}
specifier|public
name|void
name|setOperation
parameter_list|(
name|Operation
name|operation
parameter_list|)
block|{
name|iOperation
operator|=
name|operation
expr_stmt|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getOperation
argument_list|()
operator|.
name|name
argument_list|()
operator|+
literal|"["
operator|+
name|getLocationId
argument_list|()
operator|+
literal|"]"
return|;
block|}
specifier|public
name|boolean
name|isEventAvailability
parameter_list|()
block|{
return|return
name|iEventAvailability
return|;
block|}
specifier|public
name|void
name|setEventAvailability
parameter_list|(
name|boolean
name|availability
parameter_list|)
block|{
name|iEventAvailability
operator|=
name|availability
expr_stmt|;
block|}
specifier|public
name|boolean
name|isIncludeRoomPreferences
parameter_list|()
block|{
return|return
name|iIncludeRoomPreferences
return|;
block|}
specifier|public
name|void
name|setIncludeRoomPreferences
parameter_list|(
name|boolean
name|includeRoomPreferences
parameter_list|)
block|{
name|iIncludeRoomPreferences
operator|=
name|includeRoomPreferences
expr_stmt|;
block|}
specifier|public
specifier|static
name|RoomSharingRequest
name|load
parameter_list|(
name|Long
name|locationId
parameter_list|,
name|boolean
name|eventAvailability
parameter_list|,
name|boolean
name|includeRoomPreferences
parameter_list|)
block|{
name|RoomSharingRequest
name|request
init|=
operator|new
name|RoomSharingRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setOperation
argument_list|(
name|Operation
operator|.
name|LOAD
argument_list|)
expr_stmt|;
name|request
operator|.
name|setLocationId
argument_list|(
name|locationId
argument_list|)
expr_stmt|;
name|request
operator|.
name|setEventAvailability
argument_list|(
name|eventAvailability
argument_list|)
expr_stmt|;
name|request
operator|.
name|setIncludeRoomPreferences
argument_list|(
name|includeRoomPreferences
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
specifier|public
specifier|static
name|RoomSharingRequest
name|load
parameter_list|(
name|Long
name|locationId
parameter_list|,
name|boolean
name|eventAvailability
parameter_list|)
block|{
return|return
name|load
argument_list|(
name|locationId
argument_list|,
name|eventAvailability
argument_list|,
literal|false
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|RoomSharingRequest
name|save
parameter_list|(
name|Long
name|locationId
parameter_list|,
name|RoomSharingModel
name|model
parameter_list|,
name|boolean
name|eventAvailability
parameter_list|,
name|boolean
name|includeRoomPreferences
parameter_list|)
block|{
name|RoomSharingRequest
name|request
init|=
operator|new
name|RoomSharingRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setOperation
argument_list|(
name|Operation
operator|.
name|SAVE
argument_list|)
expr_stmt|;
name|request
operator|.
name|setLocationId
argument_list|(
name|locationId
argument_list|)
expr_stmt|;
name|request
operator|.
name|setModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|request
operator|.
name|setEventAvailability
argument_list|(
name|eventAvailability
argument_list|)
expr_stmt|;
name|request
operator|.
name|setIncludeRoomPreferences
argument_list|(
name|includeRoomPreferences
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
specifier|public
specifier|static
name|RoomSharingRequest
name|save
parameter_list|(
name|Long
name|locationId
parameter_list|,
name|RoomSharingModel
name|model
parameter_list|,
name|boolean
name|eventAvailability
parameter_list|)
block|{
return|return
name|save
argument_list|(
name|locationId
argument_list|,
name|model
argument_list|,
name|eventAvailability
argument_list|,
literal|false
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomHintResponse
implements|implements
name|GwtRpcResponse
block|{
specifier|private
name|Long
name|iId
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iLabel
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iDisplayName
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iRoomTypeLabel
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iMiniMapUrl
init|=
literal|null
decl_stmt|;
specifier|private
name|Integer
name|iCapacity
init|=
literal|null
decl_stmt|,
name|iExamCapacity
init|=
literal|null
decl_stmt|,
name|iBreakTime
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iExamType
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iArea
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iGroups
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iEventStatus
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iEventDepartment
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iNote
init|=
literal|null
decl_stmt|;
specifier|private
name|boolean
name|iIgnoreRoomCheck
init|=
literal|false
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|iFeatures
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|RoomPictureInterface
argument_list|>
name|iPictures
init|=
literal|null
decl_stmt|;
specifier|public
name|RoomHintResponse
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
name|iLabel
return|;
block|}
specifier|public
name|void
name|setLabel
parameter_list|(
name|String
name|label
parameter_list|)
block|{
name|iLabel
operator|=
name|label
expr_stmt|;
block|}
specifier|public
name|String
name|getDisplayName
parameter_list|()
block|{
return|return
name|iDisplayName
return|;
block|}
specifier|public
name|void
name|setDisplayName
parameter_list|(
name|String
name|displayName
parameter_list|)
block|{
name|iDisplayName
operator|=
name|displayName
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasDisplayName
parameter_list|()
block|{
return|return
name|iDisplayName
operator|!=
literal|null
operator|&&
operator|!
name|iDisplayName
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getRoomTypeLabel
parameter_list|()
block|{
return|return
name|iRoomTypeLabel
return|;
block|}
specifier|public
name|void
name|setRoomTypeLabel
parameter_list|(
name|String
name|roomTypeLabel
parameter_list|)
block|{
name|iRoomTypeLabel
operator|=
name|roomTypeLabel
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasRoomTypeLabel
parameter_list|()
block|{
return|return
name|iRoomTypeLabel
operator|!=
literal|null
operator|&&
operator|!
name|iRoomTypeLabel
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getMiniMapUrl
parameter_list|()
block|{
return|return
name|iMiniMapUrl
return|;
block|}
specifier|public
name|void
name|setMiniMapUrl
parameter_list|(
name|String
name|miniMapUrl
parameter_list|)
block|{
name|iMiniMapUrl
operator|=
name|miniMapUrl
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasMiniMapUrl
parameter_list|()
block|{
return|return
name|iMiniMapUrl
operator|!=
literal|null
operator|&&
operator|!
name|iMiniMapUrl
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|Integer
name|getCapacity
parameter_list|()
block|{
return|return
name|iCapacity
return|;
block|}
specifier|public
name|void
name|setCapacity
parameter_list|(
name|Integer
name|capacity
parameter_list|)
block|{
name|iCapacity
operator|=
name|capacity
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasCapacity
parameter_list|()
block|{
return|return
name|iCapacity
operator|!=
literal|null
operator|&&
name|iCapacity
operator|!=
literal|0
return|;
block|}
specifier|public
name|Integer
name|getExamCapacity
parameter_list|()
block|{
return|return
name|iExamCapacity
return|;
block|}
specifier|public
name|void
name|setExamCapacity
parameter_list|(
name|Integer
name|examCapacity
parameter_list|)
block|{
name|iExamCapacity
operator|=
name|examCapacity
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasExamCapacity
parameter_list|()
block|{
return|return
name|iExamCapacity
operator|!=
literal|null
operator|&&
name|iExamCapacity
operator|!=
literal|0
return|;
block|}
specifier|public
name|String
name|getExamType
parameter_list|()
block|{
return|return
name|iExamType
return|;
block|}
specifier|public
name|void
name|setExamType
parameter_list|(
name|String
name|examType
parameter_list|)
block|{
name|iExamType
operator|=
name|examType
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasExamType
parameter_list|()
block|{
return|return
name|iExamType
operator|!=
literal|null
operator|&&
operator|!
name|iExamType
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getArea
parameter_list|()
block|{
return|return
name|iArea
return|;
block|}
specifier|public
name|void
name|setArea
parameter_list|(
name|String
name|area
parameter_list|)
block|{
name|iArea
operator|=
name|area
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasArea
parameter_list|()
block|{
return|return
name|iArea
operator|!=
literal|null
operator|&&
operator|!
name|iArea
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|hasFeatures
parameter_list|()
block|{
return|return
name|iFeatures
operator|!=
literal|null
operator|&&
operator|!
name|iFeatures
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addFeature
parameter_list|(
name|String
name|type
parameter_list|,
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|iFeatures
operator|==
literal|null
condition|)
name|iFeatures
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|String
name|featuresThisType
init|=
name|iFeatures
operator|.
name|get
argument_list|(
name|type
argument_list|)
decl_stmt|;
if|if
condition|(
name|featuresThisType
operator|==
literal|null
condition|)
block|{
name|featuresThisType
operator|=
literal|""
expr_stmt|;
block|}
else|else
block|{
name|featuresThisType
operator|+=
literal|", "
expr_stmt|;
block|}
name|featuresThisType
operator|+=
name|name
expr_stmt|;
name|iFeatures
operator|.
name|put
argument_list|(
name|type
argument_list|,
name|featuresThisType
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getFeatureNames
parameter_list|()
block|{
return|return
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|iFeatures
operator|.
name|keySet
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|String
name|getFeatures
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|iFeatures
operator|.
name|get
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|public
name|String
name|getGroups
parameter_list|()
block|{
return|return
name|iGroups
return|;
block|}
specifier|public
name|void
name|setGroups
parameter_list|(
name|String
name|groups
parameter_list|)
block|{
name|iGroups
operator|=
name|groups
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasGroups
parameter_list|()
block|{
return|return
name|iGroups
operator|!=
literal|null
operator|&&
operator|!
name|iGroups
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getEventStatus
parameter_list|()
block|{
return|return
name|iEventStatus
return|;
block|}
specifier|public
name|void
name|setEventStatus
parameter_list|(
name|String
name|eventStatus
parameter_list|)
block|{
name|iEventStatus
operator|=
name|eventStatus
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasEventStatus
parameter_list|()
block|{
return|return
name|iEventStatus
operator|!=
literal|null
operator|&&
operator|!
name|iEventStatus
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getEventDepartment
parameter_list|()
block|{
return|return
name|iEventDepartment
return|;
block|}
specifier|public
name|void
name|setEventDepartment
parameter_list|(
name|String
name|eventDepartment
parameter_list|)
block|{
name|iEventDepartment
operator|=
name|eventDepartment
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasEventDepartment
parameter_list|()
block|{
return|return
name|iEventDepartment
operator|!=
literal|null
operator|&&
operator|!
name|iEventDepartment
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getNote
parameter_list|()
block|{
return|return
name|iNote
return|;
block|}
specifier|public
name|void
name|setNote
parameter_list|(
name|String
name|note
parameter_list|)
block|{
name|iNote
operator|=
name|note
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasNote
parameter_list|()
block|{
return|return
name|iNote
operator|!=
literal|null
operator|&&
operator|!
name|iNote
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|Integer
name|getBreakTime
parameter_list|()
block|{
return|return
name|iBreakTime
return|;
block|}
specifier|public
name|void
name|setBreakTime
parameter_list|(
name|Integer
name|breakTime
parameter_list|)
block|{
name|iBreakTime
operator|=
name|breakTime
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasBreakTime
parameter_list|()
block|{
return|return
name|iBreakTime
operator|!=
literal|null
operator|&&
name|iBreakTime
operator|!=
literal|0
return|;
block|}
specifier|public
name|boolean
name|isIgnoreRoomCheck
parameter_list|()
block|{
return|return
name|iIgnoreRoomCheck
return|;
block|}
specifier|public
name|void
name|setIgnoreRoomCheck
parameter_list|(
name|boolean
name|ignoreRoomCheck
parameter_list|)
block|{
name|iIgnoreRoomCheck
operator|=
name|ignoreRoomCheck
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasPictures
parameter_list|()
block|{
return|return
name|iPictures
operator|!=
literal|null
operator|&&
operator|!
name|iPictures
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addPicture
parameter_list|(
name|RoomPictureInterface
name|picture
parameter_list|)
block|{
if|if
condition|(
name|iPictures
operator|==
literal|null
condition|)
name|iPictures
operator|=
operator|new
name|ArrayList
argument_list|<
name|RoomPictureInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iPictures
operator|.
name|add
argument_list|(
name|picture
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|RoomPictureInterface
argument_list|>
name|getPictures
parameter_list|()
block|{
return|return
name|iPictures
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomHintRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|RoomHintResponse
argument_list|>
block|{
specifier|private
name|Long
name|iLocationId
decl_stmt|;
specifier|public
name|Long
name|getLocationId
parameter_list|()
block|{
return|return
name|iLocationId
return|;
block|}
specifier|public
name|void
name|setLocationId
parameter_list|(
name|Long
name|locationId
parameter_list|)
block|{
name|iLocationId
operator|=
name|locationId
expr_stmt|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|""
operator|+
name|getLocationId
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|RoomHintRequest
name|load
parameter_list|(
name|Long
name|locationId
parameter_list|)
block|{
name|RoomHintRequest
name|request
init|=
operator|new
name|RoomHintRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setLocationId
argument_list|(
name|locationId
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomPictureInterface
implements|implements
name|IsSerializable
block|{
specifier|private
name|Long
name|iUniqueId
decl_stmt|;
specifier|private
name|String
name|iName
decl_stmt|;
specifier|private
name|String
name|iType
decl_stmt|;
specifier|private
name|Long
name|iTimeStamp
decl_stmt|;
specifier|public
name|RoomPictureInterface
parameter_list|()
block|{
block|}
specifier|public
name|RoomPictureInterface
parameter_list|(
name|Long
name|uniqueId
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|type
parameter_list|,
name|Long
name|timeStamp
parameter_list|)
block|{
name|setUniqueId
argument_list|(
name|uniqueId
argument_list|)
expr_stmt|;
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|setTimeStamp
argument_list|(
name|timeStamp
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Long
name|getUniqueId
parameter_list|()
block|{
return|return
name|iUniqueId
return|;
block|}
specifier|public
name|void
name|setUniqueId
parameter_list|(
name|Long
name|uniqueId
parameter_list|)
block|{
name|iUniqueId
operator|=
name|uniqueId
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|iType
return|;
block|}
specifier|public
name|void
name|setType
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|iType
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|Long
name|getTimeStamp
parameter_list|()
block|{
return|return
name|iTimeStamp
return|;
block|}
specifier|public
name|void
name|setTimeStamp
parameter_list|(
name|Long
name|timeStamp
parameter_list|)
block|{
name|iTimeStamp
operator|=
name|timeStamp
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomPictureRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|RoomPictureResponse
argument_list|>
block|{
specifier|public
specifier|static
enum|enum
name|Operation
implements|implements
name|IsSerializable
block|{
name|LOAD
block|,
name|SAVE
block|,
name|UPLOAD
block|, 		}
specifier|public
specifier|static
enum|enum
name|Apply
implements|implements
name|IsSerializable
block|{
name|THIS_SESSION_ONLY
block|,
name|ALL_FUTURE_SESSIONS
block|,
name|ALL_SESSIONS
block|, 		}
specifier|private
name|Operation
name|iOperation
decl_stmt|;
specifier|private
name|Apply
name|iApply
decl_stmt|;
specifier|private
name|Long
name|iLocationId
decl_stmt|;
specifier|private
name|List
argument_list|<
name|RoomPictureInterface
argument_list|>
name|iPictures
decl_stmt|;
specifier|public
name|RoomPictureRequest
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getLocationId
parameter_list|()
block|{
return|return
name|iLocationId
return|;
block|}
specifier|public
name|void
name|setLocationId
parameter_list|(
name|Long
name|locationId
parameter_list|)
block|{
name|iLocationId
operator|=
name|locationId
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|RoomPictureInterface
argument_list|>
name|getPictures
parameter_list|()
block|{
return|return
name|iPictures
return|;
block|}
specifier|public
name|void
name|setPictures
parameter_list|(
name|List
argument_list|<
name|RoomPictureInterface
argument_list|>
name|pictures
parameter_list|)
block|{
name|iPictures
operator|=
name|pictures
expr_stmt|;
block|}
specifier|public
name|Operation
name|getOperation
parameter_list|()
block|{
return|return
name|iOperation
return|;
block|}
specifier|public
name|void
name|setOperation
parameter_list|(
name|Operation
name|operation
parameter_list|)
block|{
name|iOperation
operator|=
name|operation
expr_stmt|;
block|}
specifier|public
name|Apply
name|getApply
parameter_list|()
block|{
return|return
name|iApply
return|;
block|}
specifier|public
name|void
name|setApply
parameter_list|(
name|Apply
name|apply
parameter_list|)
block|{
name|iApply
operator|=
name|apply
expr_stmt|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getOperation
argument_list|()
operator|.
name|name
argument_list|()
operator|+
literal|"["
operator|+
name|getLocationId
argument_list|()
operator|+
literal|"]"
return|;
block|}
specifier|public
specifier|static
name|RoomPictureRequest
name|load
parameter_list|(
name|Long
name|locationId
parameter_list|)
block|{
name|RoomPictureRequest
name|request
init|=
operator|new
name|RoomPictureRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setOperation
argument_list|(
name|Operation
operator|.
name|LOAD
argument_list|)
expr_stmt|;
name|request
operator|.
name|setLocationId
argument_list|(
name|locationId
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
specifier|public
specifier|static
name|RoomPictureRequest
name|save
parameter_list|(
name|Long
name|locationId
parameter_list|,
name|Apply
name|apply
parameter_list|,
name|List
argument_list|<
name|RoomPictureInterface
argument_list|>
name|pictures
parameter_list|)
block|{
name|RoomPictureRequest
name|request
init|=
operator|new
name|RoomPictureRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setOperation
argument_list|(
name|Operation
operator|.
name|SAVE
argument_list|)
expr_stmt|;
name|request
operator|.
name|setLocationId
argument_list|(
name|locationId
argument_list|)
expr_stmt|;
name|request
operator|.
name|setPictures
argument_list|(
name|pictures
argument_list|)
expr_stmt|;
name|request
operator|.
name|setApply
argument_list|(
name|apply
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
specifier|public
specifier|static
name|RoomPictureRequest
name|upload
parameter_list|(
name|Long
name|locationId
parameter_list|)
block|{
name|RoomPictureRequest
name|request
init|=
operator|new
name|RoomPictureRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setOperation
argument_list|(
name|Operation
operator|.
name|UPLOAD
argument_list|)
expr_stmt|;
name|request
operator|.
name|setLocationId
argument_list|(
name|locationId
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomPictureResponse
implements|implements
name|GwtRpcResponse
block|{
specifier|private
name|String
name|iName
decl_stmt|;
specifier|private
name|List
argument_list|<
name|RoomPictureInterface
argument_list|>
name|iPictures
decl_stmt|;
specifier|private
name|RoomPictureRequest
operator|.
name|Apply
name|iApply
decl_stmt|;
specifier|public
name|RoomPictureResponse
parameter_list|()
block|{
block|}
specifier|public
name|boolean
name|hasPictures
parameter_list|()
block|{
return|return
name|iPictures
operator|!=
literal|null
operator|&&
operator|!
name|iPictures
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addPicture
parameter_list|(
name|RoomPictureInterface
name|picture
parameter_list|)
block|{
if|if
condition|(
name|iPictures
operator|==
literal|null
condition|)
name|iPictures
operator|=
operator|new
name|ArrayList
argument_list|<
name|RoomPictureInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iPictures
operator|.
name|add
argument_list|(
name|picture
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|RoomPictureInterface
argument_list|>
name|getPictures
parameter_list|()
block|{
return|return
name|iPictures
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|RoomPictureRequest
operator|.
name|Apply
name|getApply
parameter_list|()
block|{
return|return
name|iApply
return|;
block|}
specifier|public
name|void
name|setApply
parameter_list|(
name|RoomPictureRequest
operator|.
name|Apply
name|apply
parameter_list|)
block|{
name|iApply
operator|=
name|apply
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomTypeInterface
implements|implements
name|GwtRpcResponse
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iLabel
decl_stmt|;
specifier|private
name|boolean
name|iRoom
init|=
literal|false
decl_stmt|;
specifier|public
name|RoomTypeInterface
parameter_list|()
block|{
block|}
specifier|public
name|RoomTypeInterface
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|label
parameter_list|,
name|boolean
name|room
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
name|iLabel
operator|=
name|label
expr_stmt|;
name|iRoom
operator|=
name|room
expr_stmt|;
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
name|iLabel
return|;
block|}
specifier|public
name|void
name|setLabel
parameter_list|(
name|String
name|label
parameter_list|)
block|{
name|iLabel
operator|=
name|label
expr_stmt|;
block|}
specifier|public
name|boolean
name|isRoom
parameter_list|()
block|{
return|return
name|iRoom
return|;
block|}
specifier|public
name|void
name|setRoom
parameter_list|(
name|boolean
name|room
parameter_list|)
block|{
name|iRoom
operator|=
name|room
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
if|if
condition|(
name|object
operator|==
literal|null
operator|||
operator|!
operator|(
name|object
operator|instanceof
name|RoomTypeInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|RoomTypeInterface
operator|)
name|object
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|FeatureTypeInterface
implements|implements
name|GwtRpcResponse
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iAbbv
decl_stmt|;
specifier|private
name|String
name|iLabel
decl_stmt|;
specifier|private
name|boolean
name|iEvents
init|=
literal|false
decl_stmt|;
specifier|public
name|FeatureTypeInterface
parameter_list|()
block|{
block|}
specifier|public
name|FeatureTypeInterface
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|abbv
parameter_list|,
name|String
name|label
parameter_list|,
name|boolean
name|events
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
name|iAbbv
operator|=
name|abbv
expr_stmt|;
name|iLabel
operator|=
name|label
expr_stmt|;
name|iEvents
operator|=
name|events
expr_stmt|;
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getAbbreviation
parameter_list|()
block|{
return|return
name|iAbbv
return|;
block|}
specifier|public
name|void
name|setAbbreviation
parameter_list|(
name|String
name|abbv
parameter_list|)
block|{
name|iAbbv
operator|=
name|abbv
expr_stmt|;
block|}
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
name|iLabel
return|;
block|}
specifier|public
name|void
name|setLabel
parameter_list|(
name|String
name|label
parameter_list|)
block|{
name|iLabel
operator|=
name|label
expr_stmt|;
block|}
specifier|public
name|boolean
name|isEvents
parameter_list|()
block|{
return|return
name|iEvents
return|;
block|}
specifier|public
name|void
name|setEvents
parameter_list|(
name|boolean
name|events
parameter_list|)
block|{
name|iEvents
operator|=
name|events
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
if|if
condition|(
name|object
operator|==
literal|null
operator|||
operator|!
operator|(
name|object
operator|instanceof
name|FeatureTypeInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|FeatureTypeInterface
operator|)
name|object
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomPropertyInterface
implements|implements
name|GwtRpcResponse
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iAbbv
decl_stmt|;
specifier|private
name|String
name|iLabel
decl_stmt|;
specifier|private
name|String
name|iColor
decl_stmt|;
specifier|private
name|String
name|iTitle
decl_stmt|;
specifier|public
name|RoomPropertyInterface
parameter_list|()
block|{
block|}
specifier|public
name|RoomPropertyInterface
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|label
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
name|iLabel
operator|=
name|label
expr_stmt|;
block|}
specifier|public
name|RoomPropertyInterface
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|abbv
parameter_list|,
name|String
name|label
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
name|iAbbv
operator|=
name|abbv
expr_stmt|;
name|iLabel
operator|=
name|label
expr_stmt|;
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getAbbreviation
parameter_list|()
block|{
return|return
name|iAbbv
return|;
block|}
specifier|public
name|void
name|setAbbreviation
parameter_list|(
name|String
name|abbv
parameter_list|)
block|{
name|iAbbv
operator|=
name|abbv
expr_stmt|;
block|}
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
name|iLabel
return|;
block|}
specifier|public
name|void
name|setLabel
parameter_list|(
name|String
name|label
parameter_list|)
block|{
name|iLabel
operator|=
name|label
expr_stmt|;
block|}
specifier|public
name|String
name|getColor
parameter_list|()
block|{
return|return
name|iColor
return|;
block|}
specifier|public
name|void
name|setColor
parameter_list|(
name|String
name|color
parameter_list|)
block|{
name|iColor
operator|=
name|color
expr_stmt|;
block|}
specifier|public
name|String
name|getTitle
parameter_list|()
block|{
return|return
name|iTitle
return|;
block|}
specifier|public
name|void
name|setTitle
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|iTitle
operator|=
name|title
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
if|if
condition|(
name|object
operator|==
literal|null
operator|||
operator|!
operator|(
name|object
operator|instanceof
name|RoomPropertyInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|RoomPropertyInterface
operator|)
name|object
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|BuildingInterface
implements|implements
name|GwtRpcResponse
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iAbbreviation
decl_stmt|;
specifier|private
name|String
name|iName
decl_stmt|;
specifier|private
name|Double
name|iX
decl_stmt|,
name|iY
decl_stmt|;
specifier|public
name|BuildingInterface
parameter_list|()
block|{
block|}
specifier|public
name|BuildingInterface
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|abbreviation
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
name|iAbbreviation
operator|=
name|abbreviation
expr_stmt|;
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getAbbreviation
parameter_list|()
block|{
return|return
name|iAbbreviation
return|;
block|}
specifier|public
name|void
name|setAbbreviation
parameter_list|(
name|String
name|abbreviation
parameter_list|)
block|{
name|iAbbreviation
operator|=
name|abbreviation
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasCoordinates
parameter_list|()
block|{
return|return
name|iX
operator|!=
literal|null
operator|&&
name|iY
operator|!=
literal|null
return|;
block|}
specifier|public
name|Double
name|getX
parameter_list|()
block|{
return|return
name|iX
return|;
block|}
specifier|public
name|void
name|setX
parameter_list|(
name|Double
name|x
parameter_list|)
block|{
name|iX
operator|=
name|x
expr_stmt|;
block|}
specifier|public
name|Double
name|getY
parameter_list|()
block|{
return|return
name|iY
return|;
block|}
specifier|public
name|void
name|setY
parameter_list|(
name|Double
name|y
parameter_list|)
block|{
name|iY
operator|=
name|y
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
if|if
condition|(
name|object
operator|==
literal|null
operator|||
operator|!
operator|(
name|object
operator|instanceof
name|BuildingInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|BuildingInterface
operator|)
name|object
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|ExamTypeInterface
implements|implements
name|GwtRpcResponse
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iReference
decl_stmt|;
specifier|private
name|String
name|iLabel
decl_stmt|;
specifier|private
name|boolean
name|iFinal
init|=
literal|false
decl_stmt|;
specifier|public
name|ExamTypeInterface
parameter_list|()
block|{
block|}
specifier|public
name|ExamTypeInterface
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|reference
parameter_list|,
name|String
name|label
parameter_list|,
name|boolean
name|finalExams
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
name|iReference
operator|=
name|reference
expr_stmt|;
name|iLabel
operator|=
name|label
expr_stmt|;
name|iFinal
operator|=
name|finalExams
expr_stmt|;
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getReference
parameter_list|()
block|{
return|return
name|iReference
return|;
block|}
specifier|public
name|void
name|setReference
parameter_list|(
name|String
name|reference
parameter_list|)
block|{
name|iReference
operator|=
name|reference
expr_stmt|;
block|}
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
name|iLabel
return|;
block|}
specifier|public
name|void
name|setLabel
parameter_list|(
name|String
name|label
parameter_list|)
block|{
name|iLabel
operator|=
name|label
expr_stmt|;
block|}
specifier|public
name|boolean
name|isFinal
parameter_list|()
block|{
return|return
name|iFinal
return|;
block|}
specifier|public
name|void
name|setFinal
parameter_list|(
name|boolean
name|finalExams
parameter_list|)
block|{
name|iFinal
operator|=
name|finalExams
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
if|if
condition|(
name|object
operator|==
literal|null
operator|||
operator|!
operator|(
name|object
operator|instanceof
name|ExamTypeInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|ExamTypeInterface
operator|)
name|object
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|DepartmentInterface
extends|extends
name|RoomPropertyInterface
block|{
specifier|private
name|String
name|iCode
decl_stmt|;
specifier|private
name|boolean
name|iExternal
init|=
literal|false
decl_stmt|,
name|iEvent
init|=
literal|false
decl_stmt|;
specifier|private
name|String
name|iExternalAbbv
decl_stmt|,
name|iExternalLabel
decl_stmt|;
specifier|private
name|PreferenceInterface
name|iPreference
decl_stmt|;
specifier|public
name|DepartmentInterface
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|String
name|getDeptCode
parameter_list|()
block|{
return|return
name|iCode
return|;
block|}
specifier|public
name|void
name|setDeptCode
parameter_list|(
name|String
name|code
parameter_list|)
block|{
name|iCode
operator|=
name|code
expr_stmt|;
block|}
specifier|public
name|String
name|getAbbreviationOrCode
parameter_list|()
block|{
return|return
name|getAbbreviation
argument_list|()
operator|==
literal|null
operator|||
name|getAbbreviation
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
name|getDeptCode
argument_list|()
else|:
name|getAbbreviation
argument_list|()
return|;
block|}
specifier|public
name|String
name|getExtAbbreviationOrCode
parameter_list|()
block|{
return|return
name|getExtAbbreviation
argument_list|()
operator|==
literal|null
operator|||
name|getExtAbbreviation
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
name|getDeptCode
argument_list|()
else|:
name|getExtAbbreviation
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isExternal
parameter_list|()
block|{
return|return
name|iExternal
return|;
block|}
specifier|public
name|void
name|setExternal
parameter_list|(
name|boolean
name|external
parameter_list|)
block|{
name|iExternal
operator|=
name|external
expr_stmt|;
block|}
specifier|public
name|boolean
name|isEvent
parameter_list|()
block|{
return|return
name|iEvent
return|;
block|}
specifier|public
name|void
name|setEvent
parameter_list|(
name|boolean
name|event
parameter_list|)
block|{
name|iEvent
operator|=
name|event
expr_stmt|;
block|}
specifier|public
name|String
name|getExtAbbreviation
parameter_list|()
block|{
return|return
name|iExternalAbbv
return|;
block|}
specifier|public
name|void
name|setExtAbbreviation
parameter_list|(
name|String
name|abbv
parameter_list|)
block|{
name|iExternalAbbv
operator|=
name|abbv
expr_stmt|;
block|}
specifier|public
name|String
name|getExtAbbreviationWhenExist
parameter_list|()
block|{
return|return
name|getExtAbbreviation
argument_list|()
operator|==
literal|null
operator|||
name|getExtAbbreviation
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
name|getAbbreviationOrCode
argument_list|()
else|:
name|getExtAbbreviation
argument_list|()
return|;
block|}
specifier|public
name|String
name|getExtLabel
parameter_list|()
block|{
return|return
name|iExternalLabel
return|;
block|}
specifier|public
name|void
name|setExtLabel
parameter_list|(
name|String
name|label
parameter_list|)
block|{
name|iExternalLabel
operator|=
name|label
expr_stmt|;
block|}
specifier|public
name|String
name|getExtLabelWhenExist
parameter_list|()
block|{
return|return
name|getExtLabel
argument_list|()
operator|==
literal|null
operator|||
name|getExtLabel
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
name|getLabel
argument_list|()
else|:
name|getExtLabel
argument_list|()
return|;
block|}
specifier|public
name|PreferenceInterface
name|getPreference
parameter_list|()
block|{
return|return
name|iPreference
return|;
block|}
specifier|public
name|void
name|setPreference
parameter_list|(
name|PreferenceInterface
name|preference
parameter_list|)
block|{
name|iPreference
operator|=
name|preference
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|FeatureInterface
extends|extends
name|RoomPropertyInterface
block|{
specifier|private
name|DepartmentInterface
name|iDepartment
init|=
literal|null
decl_stmt|;
specifier|private
name|FeatureTypeInterface
name|iType
decl_stmt|;
specifier|public
name|FeatureInterface
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|FeatureInterface
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|abbv
parameter_list|,
name|String
name|label
parameter_list|)
block|{
name|super
argument_list|(
name|id
argument_list|,
name|abbv
argument_list|,
name|label
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isDepartmental
parameter_list|()
block|{
return|return
name|iDepartment
operator|!=
literal|null
return|;
block|}
specifier|public
name|DepartmentInterface
name|getDepartment
parameter_list|()
block|{
return|return
name|iDepartment
return|;
block|}
specifier|public
name|void
name|setDepartment
parameter_list|(
name|DepartmentInterface
name|department
parameter_list|)
block|{
name|iDepartment
operator|=
name|department
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasType
parameter_list|()
block|{
return|return
name|iType
operator|!=
literal|null
return|;
block|}
specifier|public
name|FeatureTypeInterface
name|getType
parameter_list|()
block|{
return|return
name|iType
return|;
block|}
specifier|public
name|void
name|setType
parameter_list|(
name|FeatureTypeInterface
name|type
parameter_list|)
block|{
name|iType
operator|=
name|type
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|GroupInterface
extends|extends
name|RoomPropertyInterface
block|{
specifier|private
name|DepartmentInterface
name|iDepartment
init|=
literal|null
decl_stmt|;
specifier|public
name|GroupInterface
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|GroupInterface
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|abbv
parameter_list|,
name|String
name|label
parameter_list|)
block|{
name|super
argument_list|(
name|id
argument_list|,
name|abbv
argument_list|,
name|label
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isDepartmental
parameter_list|()
block|{
return|return
name|iDepartment
operator|!=
literal|null
return|;
block|}
specifier|public
name|DepartmentInterface
name|getDepartment
parameter_list|()
block|{
return|return
name|iDepartment
return|;
block|}
specifier|public
name|void
name|setDepartment
parameter_list|(
name|DepartmentInterface
name|department
parameter_list|)
block|{
name|iDepartment
operator|=
name|department
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|AcademicSessionInterface
implements|implements
name|GwtRpcResponse
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iLabel
decl_stmt|;
specifier|private
name|boolean
name|iCanAddRoom
init|=
literal|false
decl_stmt|,
name|iCanAddNonUniversity
init|=
literal|false
decl_stmt|;
specifier|public
name|AcademicSessionInterface
parameter_list|()
block|{
block|}
specifier|public
name|AcademicSessionInterface
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|label
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
name|iLabel
operator|=
name|label
expr_stmt|;
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
name|iLabel
return|;
block|}
specifier|public
name|void
name|setLabel
parameter_list|(
name|String
name|label
parameter_list|)
block|{
name|iLabel
operator|=
name|label
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isCanAddRoom
parameter_list|()
block|{
return|return
name|iCanAddRoom
return|;
block|}
specifier|public
name|void
name|setCanAddRoom
parameter_list|(
name|boolean
name|canAddRoom
parameter_list|)
block|{
name|iCanAddRoom
operator|=
name|canAddRoom
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanAddNonUniversity
parameter_list|()
block|{
return|return
name|iCanAddNonUniversity
return|;
block|}
specifier|public
name|void
name|setCanAddNonUniversity
parameter_list|(
name|boolean
name|canAddNonUniv
parameter_list|)
block|{
name|iCanAddNonUniversity
operator|=
name|canAddNonUniv
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
if|if
condition|(
name|object
operator|==
literal|null
operator|||
operator|!
operator|(
name|object
operator|instanceof
name|AcademicSessionInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|AcademicSessionInterface
operator|)
name|object
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|FutureRoomInterface
implements|implements
name|GwtRpcResponse
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iLabel
decl_stmt|;
specifier|private
name|AcademicSessionInterface
name|iSession
decl_stmt|;
specifier|private
name|boolean
name|iCanChange
init|=
literal|false
decl_stmt|,
name|iCanDelete
init|=
literal|false
decl_stmt|;
specifier|public
name|FutureRoomInterface
parameter_list|()
block|{
block|}
specifier|public
name|FutureRoomInterface
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|label
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
name|iLabel
operator|=
name|label
expr_stmt|;
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
name|iLabel
return|;
block|}
specifier|public
name|void
name|setLabel
parameter_list|(
name|String
name|label
parameter_list|)
block|{
name|iLabel
operator|=
name|label
expr_stmt|;
block|}
specifier|public
name|AcademicSessionInterface
name|getSession
parameter_list|()
block|{
return|return
name|iSession
return|;
block|}
specifier|public
name|void
name|setSession
parameter_list|(
name|AcademicSessionInterface
name|session
parameter_list|)
block|{
name|iSession
operator|=
name|session
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChange
parameter_list|()
block|{
return|return
name|iCanChange
return|;
block|}
specifier|public
name|void
name|setCanChange
parameter_list|(
name|boolean
name|canChange
parameter_list|)
block|{
name|iCanChange
operator|=
name|canChange
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanDelete
parameter_list|()
block|{
return|return
name|iCanDelete
return|;
block|}
specifier|public
name|void
name|setCanDelete
parameter_list|(
name|boolean
name|canDelete
parameter_list|)
block|{
name|iCanDelete
operator|=
name|canDelete
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
if|if
condition|(
name|object
operator|==
literal|null
operator|||
operator|!
operator|(
name|object
operator|instanceof
name|AcademicSessionInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|AcademicSessionInterface
operator|)
name|object
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomDetailInterface
extends|extends
name|FilterRpcResponse
operator|.
name|Entity
implements|implements
name|GwtRpcResponse
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|String
name|iExternalId
decl_stmt|;
specifier|private
name|BuildingInterface
name|iBuilding
decl_stmt|;
specifier|private
name|RoomTypeInterface
name|iRoomType
decl_stmt|;
specifier|private
name|Integer
name|iCapacity
decl_stmt|,
name|iExamCapacity
decl_stmt|;
specifier|private
name|Double
name|iX
decl_stmt|,
name|iY
decl_stmt|,
name|iArea
decl_stmt|;
specifier|private
name|DepartmentInterface
name|iControlDepartment
decl_stmt|,
name|iEventDepartment
decl_stmt|;
specifier|private
name|List
argument_list|<
name|DepartmentInterface
argument_list|>
name|iDepartments
init|=
operator|new
name|ArrayList
argument_list|<
name|DepartmentInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|GroupInterface
argument_list|>
name|iGroups
init|=
operator|new
name|ArrayList
argument_list|<
name|GroupInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|FeatureInterface
argument_list|>
name|iFeatures
init|=
operator|new
name|ArrayList
argument_list|<
name|FeatureInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|ExamTypeInterface
argument_list|>
name|iExamTypes
init|=
operator|new
name|ArrayList
argument_list|<
name|ExamTypeInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|boolean
name|iIgnoreTooFar
init|=
literal|false
decl_stmt|,
name|iIgnoreRoomCheck
init|=
literal|false
decl_stmt|;
specifier|private
name|String
name|iPeriodPreference
init|=
literal|null
decl_stmt|,
name|iAvailability
init|=
literal|null
decl_stmt|,
name|iEventAvailability
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iRoomSharingNote
init|=
literal|null
decl_stmt|,
name|iEventNote
init|=
literal|null
decl_stmt|,
name|iDefaultEventNote
init|=
literal|null
decl_stmt|;
specifier|private
name|Integer
name|iEventStatus
init|=
literal|null
decl_stmt|,
name|iBreakTime
init|=
literal|null
decl_stmt|,
name|iDefaultEventStatus
init|=
literal|null
decl_stmt|,
name|iDefaultBreakTime
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iPrefix
init|=
literal|null
decl_stmt|;
specifier|private
name|boolean
name|iCanShowDetail
init|=
literal|false
decl_stmt|,
name|iCanSeeAvailability
init|=
literal|false
decl_stmt|,
name|iCanSeePeriodPreferences
init|=
literal|false
decl_stmt|,
name|iCanSeeEventAvailability
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|iCanChange
init|=
literal|false
decl_stmt|,
name|iCanChangeAvailability
init|=
literal|false
decl_stmt|,
name|iCanChangeControll
init|=
literal|false
decl_stmt|,
name|iCanChangeExternalId
init|=
literal|false
decl_stmt|,
name|iCanChangeType
init|=
literal|false
decl_stmt|,
name|iCanChangeCapacity
init|=
literal|false
decl_stmt|,
name|iCanChangeExamStatus
init|=
literal|false
decl_stmt|,
name|iCanChangeRoomProperties
init|=
literal|false
decl_stmt|,
name|iCanChangeEventProperties
init|=
literal|false
decl_stmt|,
name|iCanChangePicture
init|=
literal|false
decl_stmt|,
name|iCanChangePreferences
init|=
literal|false
decl_stmt|,
name|iCanChangeGroups
init|=
literal|false
decl_stmt|,
name|iCanChangeFeatures
init|=
literal|false
decl_stmt|,
name|iCanChangeEventAvailability
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|iCanDelete
init|=
literal|false
decl_stmt|;
specifier|private
name|String
name|iMiniMapUrl
init|=
literal|null
decl_stmt|,
name|iMapUrl
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|RoomPictureInterface
argument_list|>
name|iPictures
init|=
operator|new
name|ArrayList
argument_list|<
name|RoomPictureInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|String
name|iLastChange
init|=
literal|null
decl_stmt|;
specifier|private
name|RoomSharingModel
name|iRoomSharingModel
init|=
literal|null
decl_stmt|,
name|iEventAvailabilityModel
init|=
literal|null
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Long
argument_list|,
name|PeriodPreferenceModel
argument_list|>
name|iPeriodPreferenceModels
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|FutureRoomInterface
argument_list|>
name|iFutureRooms
init|=
literal|null
decl_stmt|;
specifier|public
name|RoomDetailInterface
parameter_list|()
block|{
block|}
specifier|public
name|RoomDetailInterface
parameter_list|(
name|Long
name|uniqueId
parameter_list|,
name|String
name|displayName
parameter_list|,
name|String
name|label
parameter_list|,
name|String
modifier|...
name|properties
parameter_list|)
block|{
name|super
argument_list|(
name|uniqueId
argument_list|,
name|displayName
argument_list|,
name|label
argument_list|,
name|properties
argument_list|)
expr_stmt|;
block|}
specifier|public
name|RoomDetailInterface
parameter_list|(
name|FilterRpcResponse
operator|.
name|Entity
name|entity
parameter_list|)
block|{
name|setUniqueId
argument_list|(
name|entity
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|setAbbreviation
argument_list|(
name|entity
operator|.
name|getAbbreviation
argument_list|()
argument_list|)
expr_stmt|;
name|setName
argument_list|(
name|entity
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|roomType
init|=
name|entity
operator|.
name|getProperty
argument_list|(
literal|"type"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|roomType
operator|!=
literal|null
condition|)
name|setRoomType
argument_list|(
operator|new
name|RoomTypeInterface
argument_list|(
operator|-
literal|1l
argument_list|,
name|roomType
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|capacity
init|=
name|entity
operator|.
name|getProperty
argument_list|(
literal|"capacity"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|capacity
operator|!=
literal|null
condition|)
name|setCapacity
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|capacity
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getExternalId
parameter_list|()
block|{
return|return
name|iExternalId
return|;
block|}
specifier|public
name|boolean
name|hasExternalId
parameter_list|()
block|{
return|return
name|iExternalId
operator|!=
literal|null
operator|&&
operator|!
name|iExternalId
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|setExternalId
parameter_list|(
name|String
name|externalId
parameter_list|)
block|{
name|iExternalId
operator|=
name|externalId
expr_stmt|;
block|}
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
if|if
condition|(
name|iBuilding
operator|!=
literal|null
condition|)
return|return
name|iBuilding
operator|.
name|getAbbreviation
argument_list|()
operator|+
literal|" "
operator|+
name|getName
argument_list|()
return|;
else|else
return|return
name|getName
argument_list|()
return|;
block|}
specifier|public
name|String
name|getDisplayName
parameter_list|()
block|{
return|return
name|getAbbreviation
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|hasDisplayName
parameter_list|()
block|{
return|return
name|getAbbreviation
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|getAbbreviation
argument_list|()
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|setDisplayName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|setAbbreviation
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
specifier|public
name|RoomTypeInterface
name|getRoomType
parameter_list|()
block|{
return|return
name|iRoomType
return|;
block|}
specifier|public
name|void
name|setRoomType
parameter_list|(
name|RoomTypeInterface
name|roomType
parameter_list|)
block|{
name|iRoomType
operator|=
name|roomType
expr_stmt|;
block|}
specifier|public
name|Integer
name|getCapacity
parameter_list|()
block|{
return|return
name|iCapacity
return|;
block|}
specifier|public
name|void
name|setCapacity
parameter_list|(
name|Integer
name|capacity
parameter_list|)
block|{
name|iCapacity
operator|=
name|capacity
expr_stmt|;
block|}
specifier|public
name|Integer
name|getExamCapacity
parameter_list|()
block|{
return|return
name|iExamCapacity
return|;
block|}
specifier|public
name|void
name|setExamCapacity
parameter_list|(
name|Integer
name|capacity
parameter_list|)
block|{
name|iExamCapacity
operator|=
name|capacity
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|GroupInterface
argument_list|>
name|getGroups
parameter_list|()
block|{
return|return
name|iGroups
return|;
block|}
specifier|public
name|void
name|addGroup
parameter_list|(
name|GroupInterface
name|group
parameter_list|)
block|{
name|iGroups
operator|.
name|add
argument_list|(
name|group
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeGroup
parameter_list|(
name|GroupInterface
name|group
parameter_list|)
block|{
name|iGroups
operator|.
name|remove
argument_list|(
name|group
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasGroups
parameter_list|()
block|{
return|return
name|iGroups
operator|!=
literal|null
operator|&&
operator|!
name|iGroups
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|GroupInterface
argument_list|>
name|getGlobalGroups
parameter_list|()
block|{
name|List
argument_list|<
name|GroupInterface
argument_list|>
name|groups
init|=
operator|new
name|ArrayList
argument_list|<
name|GroupInterface
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|iGroups
operator|!=
literal|null
condition|)
for|for
control|(
name|GroupInterface
name|group
range|:
name|iGroups
control|)
if|if
condition|(
name|group
operator|.
name|getDepartment
argument_list|()
operator|==
literal|null
condition|)
name|groups
operator|.
name|add
argument_list|(
name|group
argument_list|)
expr_stmt|;
return|return
name|groups
return|;
block|}
specifier|public
name|List
argument_list|<
name|GroupInterface
argument_list|>
name|getDepartmentalGroups
parameter_list|(
name|Long
name|departmentId
parameter_list|)
block|{
name|List
argument_list|<
name|GroupInterface
argument_list|>
name|groups
init|=
operator|new
name|ArrayList
argument_list|<
name|GroupInterface
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|iGroups
operator|!=
literal|null
condition|)
for|for
control|(
name|GroupInterface
name|group
range|:
name|iGroups
control|)
if|if
condition|(
name|group
operator|.
name|getDepartment
argument_list|()
operator|!=
literal|null
operator|&&
operator|(
name|departmentId
operator|==
literal|null
operator|||
name|departmentId
operator|.
name|equals
argument_list|(
name|group
operator|.
name|getDepartment
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
operator|)
condition|)
name|groups
operator|.
name|add
argument_list|(
name|group
argument_list|)
expr_stmt|;
return|return
name|groups
return|;
block|}
specifier|public
name|boolean
name|hasGroup
parameter_list|(
name|Long
name|groupId
parameter_list|)
block|{
if|if
condition|(
name|iGroups
operator|==
literal|null
condition|)
return|return
literal|false
return|;
for|for
control|(
name|GroupInterface
name|group
range|:
name|iGroups
control|)
if|if
condition|(
name|groupId
operator|.
name|equals
argument_list|(
name|group
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|hasControlDepartment
parameter_list|()
block|{
return|return
name|iControlDepartment
operator|!=
literal|null
return|;
block|}
specifier|public
name|DepartmentInterface
name|getControlDepartment
parameter_list|()
block|{
return|return
name|iControlDepartment
return|;
block|}
specifier|public
name|void
name|setControlDepartment
parameter_list|(
name|DepartmentInterface
name|controlDepartment
parameter_list|)
block|{
name|iControlDepartment
operator|=
name|controlDepartment
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasEventDepartment
parameter_list|()
block|{
return|return
name|iEventDepartment
operator|!=
literal|null
return|;
block|}
specifier|public
name|DepartmentInterface
name|getEventDepartment
parameter_list|()
block|{
return|return
name|iEventDepartment
return|;
block|}
specifier|public
name|void
name|setEventDepartment
parameter_list|(
name|DepartmentInterface
name|eventDepartment
parameter_list|)
block|{
name|iEventDepartment
operator|=
name|eventDepartment
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|FeatureInterface
argument_list|>
name|getFeatures
parameter_list|()
block|{
return|return
name|iFeatures
return|;
block|}
specifier|public
name|void
name|addFeature
parameter_list|(
name|FeatureInterface
name|feature
parameter_list|)
block|{
name|iFeatures
operator|.
name|add
argument_list|(
name|feature
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeFeature
parameter_list|(
name|FeatureInterface
name|feature
parameter_list|)
block|{
name|iFeatures
operator|.
name|remove
argument_list|(
name|feature
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasFeatures
parameter_list|()
block|{
return|return
name|iFeatures
operator|!=
literal|null
operator|&&
operator|!
name|iFeatures
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|FeatureInterface
argument_list|>
name|getFeatures
parameter_list|(
name|FeatureTypeInterface
name|type
parameter_list|)
block|{
name|List
argument_list|<
name|FeatureInterface
argument_list|>
name|ret
init|=
operator|new
name|ArrayList
argument_list|<
name|FeatureInterface
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|FeatureInterface
name|f
range|:
name|iFeatures
control|)
block|{
if|if
condition|(
operator|(
name|type
operator|==
literal|null
operator|&&
name|f
operator|.
name|getType
argument_list|()
operator|==
literal|null
operator|)
operator|||
operator|(
name|type
operator|!=
literal|null
operator|&&
name|type
operator|.
name|equals
argument_list|(
name|f
operator|.
name|getType
argument_list|()
argument_list|)
operator|)
condition|)
name|ret
operator|.
name|add
argument_list|(
name|f
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
specifier|public
name|List
argument_list|<
name|FeatureInterface
argument_list|>
name|getFeatures
parameter_list|(
name|Long
name|typeId
parameter_list|)
block|{
name|List
argument_list|<
name|FeatureInterface
argument_list|>
name|ret
init|=
operator|new
name|ArrayList
argument_list|<
name|FeatureInterface
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|FeatureInterface
name|f
range|:
name|iFeatures
control|)
block|{
if|if
condition|(
operator|(
name|typeId
operator|==
literal|null
operator|&&
name|f
operator|.
name|getType
argument_list|()
operator|==
literal|null
operator|)
operator|||
operator|(
name|typeId
operator|!=
literal|null
operator|&&
name|f
operator|.
name|getType
argument_list|()
operator|!=
literal|null
operator|&&
name|typeId
operator|.
name|equals
argument_list|(
name|f
operator|.
name|getType
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
operator|)
condition|)
name|ret
operator|.
name|add
argument_list|(
name|f
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
specifier|public
name|boolean
name|hasFeature
parameter_list|(
name|Long
name|featureId
parameter_list|)
block|{
if|if
condition|(
name|iFeatures
operator|==
literal|null
condition|)
return|return
literal|false
return|;
for|for
control|(
name|FeatureInterface
name|feature
range|:
name|iFeatures
control|)
if|if
condition|(
name|featureId
operator|.
name|equals
argument_list|(
name|feature
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
specifier|public
name|List
argument_list|<
name|DepartmentInterface
argument_list|>
name|getDepartments
parameter_list|()
block|{
return|return
name|iDepartments
return|;
block|}
specifier|public
name|void
name|addDepartment
parameter_list|(
name|DepartmentInterface
name|department
parameter_list|)
block|{
name|iDepartments
operator|.
name|add
argument_list|(
name|department
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasDepartments
parameter_list|()
block|{
return|return
name|iDepartments
operator|!=
literal|null
operator|&&
operator|!
name|iDepartments
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|DepartmentInterface
name|getDepartment
parameter_list|(
name|Long
name|deptId
parameter_list|)
block|{
if|if
condition|(
name|iDepartments
operator|==
literal|null
operator|||
name|deptId
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|DepartmentInterface
name|d
range|:
name|iDepartments
control|)
if|if
condition|(
name|deptId
operator|.
name|equals
argument_list|(
name|d
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
return|return
name|d
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|BuildingInterface
name|getBuilding
parameter_list|()
block|{
return|return
name|iBuilding
return|;
block|}
specifier|public
name|void
name|setBuilding
parameter_list|(
name|BuildingInterface
name|building
parameter_list|)
block|{
name|iBuilding
operator|=
name|building
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasCoordinates
parameter_list|()
block|{
return|return
name|iX
operator|!=
literal|null
operator|&&
name|iY
operator|!=
literal|null
return|;
block|}
specifier|public
name|Double
name|getX
parameter_list|()
block|{
return|return
name|iX
return|;
block|}
specifier|public
name|void
name|setX
parameter_list|(
name|Double
name|x
parameter_list|)
block|{
name|iX
operator|=
name|x
expr_stmt|;
block|}
specifier|public
name|Double
name|getY
parameter_list|()
block|{
return|return
name|iY
return|;
block|}
specifier|public
name|void
name|setY
parameter_list|(
name|Double
name|y
parameter_list|)
block|{
name|iY
operator|=
name|y
expr_stmt|;
block|}
specifier|public
name|Double
name|getArea
parameter_list|()
block|{
return|return
name|iArea
return|;
block|}
specifier|public
name|void
name|setArea
parameter_list|(
name|Double
name|area
parameter_list|)
block|{
name|iArea
operator|=
name|area
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasPreference
parameter_list|(
name|String
name|deptCode
parameter_list|)
block|{
for|for
control|(
name|DepartmentInterface
name|d
range|:
name|getDepartments
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|d
operator|.
name|getDeptCode
argument_list|()
operator|.
name|equals
argument_list|(
name|deptCode
argument_list|)
operator|&&
name|d
operator|.
name|getPreference
argument_list|()
operator|!=
literal|null
condition|)
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|hasPreference
parameter_list|()
block|{
for|for
control|(
name|DepartmentInterface
name|d
range|:
name|getDepartments
argument_list|()
control|)
if|if
condition|(
name|d
operator|.
name|getPreference
argument_list|()
operator|!=
literal|null
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isIgnoreRoomCheck
parameter_list|()
block|{
return|return
name|iIgnoreRoomCheck
return|;
block|}
specifier|public
name|void
name|setIgnoreRoomCheck
parameter_list|(
name|boolean
name|ignoreRoomCheck
parameter_list|)
block|{
name|iIgnoreRoomCheck
operator|=
name|ignoreRoomCheck
expr_stmt|;
block|}
specifier|public
name|boolean
name|isIgnoreTooFar
parameter_list|()
block|{
return|return
name|iIgnoreTooFar
return|;
block|}
specifier|public
name|void
name|setIgnoreTooFar
parameter_list|(
name|boolean
name|ignoreTooFar
parameter_list|)
block|{
name|iIgnoreTooFar
operator|=
name|ignoreTooFar
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasExamTypes
parameter_list|()
block|{
return|return
name|iExamTypes
operator|!=
literal|null
operator|&&
operator|!
name|iExamTypes
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|ExamTypeInterface
argument_list|>
name|getExamTypes
parameter_list|()
block|{
return|return
name|iExamTypes
return|;
block|}
specifier|public
name|void
name|addExamRype
parameter_list|(
name|ExamTypeInterface
name|type
parameter_list|)
block|{
name|iExamTypes
operator|.
name|add
argument_list|(
name|type
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ExamTypeInterface
name|getExamType
parameter_list|(
name|Long
name|typeId
parameter_list|)
block|{
if|if
condition|(
name|iExamTypes
operator|==
literal|null
operator|||
name|typeId
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|ExamTypeInterface
name|type
range|:
name|iExamTypes
control|)
block|{
if|if
condition|(
name|typeId
operator|.
name|equals
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
return|return
name|type
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getPeriodPreference
parameter_list|()
block|{
return|return
name|iPeriodPreference
return|;
block|}
specifier|public
name|void
name|setPeriodPreference
parameter_list|(
name|String
name|pref
parameter_list|)
block|{
name|iPeriodPreference
operator|=
name|pref
expr_stmt|;
block|}
specifier|public
name|String
name|getAvailability
parameter_list|()
block|{
return|return
name|iAvailability
return|;
block|}
specifier|public
name|void
name|setAvailability
parameter_list|(
name|String
name|availability
parameter_list|)
block|{
name|iAvailability
operator|=
name|availability
expr_stmt|;
block|}
specifier|public
name|String
name|getEventAvailability
parameter_list|()
block|{
return|return
name|iEventAvailability
return|;
block|}
specifier|public
name|void
name|setEventAvailability
parameter_list|(
name|String
name|availability
parameter_list|)
block|{
name|iEventAvailability
operator|=
name|availability
expr_stmt|;
block|}
specifier|public
name|String
name|getRoomSharingNote
parameter_list|()
block|{
return|return
name|iRoomSharingNote
return|;
block|}
specifier|public
name|void
name|setRoomSharingNote
parameter_list|(
name|String
name|note
parameter_list|)
block|{
name|iRoomSharingNote
operator|=
name|note
expr_stmt|;
block|}
specifier|public
name|String
name|getEventNote
parameter_list|()
block|{
return|return
name|iEventNote
return|;
block|}
specifier|public
name|void
name|setEventNote
parameter_list|(
name|String
name|note
parameter_list|)
block|{
name|iEventNote
operator|=
name|note
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasEventNote
parameter_list|()
block|{
return|return
name|iEventNote
operator|!=
literal|null
operator|&&
operator|!
name|iEventNote
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|Integer
name|getEventStatus
parameter_list|()
block|{
return|return
name|iEventStatus
return|;
block|}
specifier|public
name|void
name|setEventStatus
parameter_list|(
name|Integer
name|eventStatus
parameter_list|)
block|{
name|iEventStatus
operator|=
name|eventStatus
expr_stmt|;
block|}
specifier|public
name|Integer
name|getBreakTime
parameter_list|()
block|{
return|return
name|iBreakTime
return|;
block|}
specifier|public
name|void
name|setBreakTime
parameter_list|(
name|Integer
name|breakTime
parameter_list|)
block|{
name|iBreakTime
operator|=
name|breakTime
expr_stmt|;
block|}
specifier|public
name|String
name|getDefaultEventNote
parameter_list|()
block|{
return|return
name|iDefaultEventNote
return|;
block|}
specifier|public
name|void
name|setDefaultEventNote
parameter_list|(
name|String
name|note
parameter_list|)
block|{
name|iDefaultEventNote
operator|=
name|note
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasDefaultEventNote
parameter_list|()
block|{
return|return
name|iDefaultEventNote
operator|!=
literal|null
operator|&&
operator|!
name|iDefaultEventNote
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|Integer
name|getDefaultEventStatus
parameter_list|()
block|{
return|return
name|iDefaultEventStatus
return|;
block|}
specifier|public
name|void
name|setDefaultEventStatus
parameter_list|(
name|Integer
name|eventStatus
parameter_list|)
block|{
name|iDefaultEventStatus
operator|=
name|eventStatus
expr_stmt|;
block|}
specifier|public
name|Integer
name|getDefaultBreakTime
parameter_list|()
block|{
return|return
name|iDefaultBreakTime
return|;
block|}
specifier|public
name|void
name|setDefaultBreakTime
parameter_list|(
name|Integer
name|breakTime
parameter_list|)
block|{
name|iDefaultBreakTime
operator|=
name|breakTime
expr_stmt|;
block|}
specifier|public
name|String
name|getPrefix
parameter_list|()
block|{
return|return
name|iPrefix
return|;
block|}
specifier|public
name|void
name|setPrefix
parameter_list|(
name|String
name|prefix
parameter_list|)
block|{
name|iPrefix
operator|=
name|prefix
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanShowDetail
parameter_list|()
block|{
return|return
name|iCanShowDetail
return|;
block|}
specifier|public
name|void
name|setCanShowDetail
parameter_list|(
name|boolean
name|canShowDetail
parameter_list|)
block|{
name|iCanShowDetail
operator|=
name|canShowDetail
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanSeeAvailability
parameter_list|()
block|{
return|return
name|iCanSeeAvailability
return|;
block|}
specifier|public
name|void
name|setCanSeeAvailability
parameter_list|(
name|boolean
name|canSeeAvailability
parameter_list|)
block|{
name|iCanSeeAvailability
operator|=
name|canSeeAvailability
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanSeePeriodPreferences
parameter_list|()
block|{
return|return
name|iCanSeePeriodPreferences
return|;
block|}
specifier|public
name|void
name|setCanSeePeriodPreferences
parameter_list|(
name|boolean
name|canSeePeriodPreferences
parameter_list|)
block|{
name|iCanSeePeriodPreferences
operator|=
name|canSeePeriodPreferences
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanSeeEventAvailability
parameter_list|()
block|{
return|return
name|iCanSeeEventAvailability
return|;
block|}
specifier|public
name|void
name|setCanSeeEventAvailability
parameter_list|(
name|boolean
name|canSeeEventAvailability
parameter_list|)
block|{
name|iCanSeeEventAvailability
operator|=
name|canSeeEventAvailability
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChange
parameter_list|()
block|{
return|return
name|iCanChange
return|;
block|}
specifier|public
name|void
name|setCanChange
parameter_list|(
name|boolean
name|canChange
parameter_list|)
block|{
name|iCanChange
operator|=
name|canChange
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangeAvailability
parameter_list|()
block|{
return|return
name|iCanChangeAvailability
return|;
block|}
specifier|public
name|void
name|setCanChangeAvailability
parameter_list|(
name|boolean
name|canChangeAvailability
parameter_list|)
block|{
name|iCanChangeAvailability
operator|=
name|canChangeAvailability
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangeControll
parameter_list|()
block|{
return|return
name|iCanChangeControll
return|;
block|}
specifier|public
name|void
name|setCanChangeControll
parameter_list|(
name|boolean
name|canChangeControll
parameter_list|)
block|{
name|iCanChangeControll
operator|=
name|canChangeControll
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangeExternalId
parameter_list|()
block|{
return|return
name|iCanChangeExternalId
return|;
block|}
specifier|public
name|void
name|setCanChangeExternalId
parameter_list|(
name|boolean
name|canChangeExternalId
parameter_list|)
block|{
name|iCanChangeExternalId
operator|=
name|canChangeExternalId
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangeType
parameter_list|()
block|{
return|return
name|iCanChangeType
return|;
block|}
specifier|public
name|void
name|setCanChangeType
parameter_list|(
name|boolean
name|canChangeType
parameter_list|)
block|{
name|iCanChangeType
operator|=
name|canChangeType
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangeCapacity
parameter_list|()
block|{
return|return
name|iCanChangeCapacity
return|;
block|}
specifier|public
name|void
name|setCanChangeCapacity
parameter_list|(
name|boolean
name|canChangeCapacity
parameter_list|)
block|{
name|iCanChangeCapacity
operator|=
name|canChangeCapacity
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangeExamStatus
parameter_list|()
block|{
return|return
name|iCanChangeExamStatus
return|;
block|}
specifier|public
name|void
name|setCanChangeExamStatus
parameter_list|(
name|boolean
name|canChangeExamStatus
parameter_list|)
block|{
name|iCanChangeExamStatus
operator|=
name|canChangeExamStatus
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangeRoomProperties
parameter_list|()
block|{
return|return
name|iCanChangeRoomProperties
return|;
block|}
specifier|public
name|void
name|setCanChangeRoomProperties
parameter_list|(
name|boolean
name|canChangeRoomProperties
parameter_list|)
block|{
name|iCanChangeRoomProperties
operator|=
name|canChangeRoomProperties
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangeEventProperties
parameter_list|()
block|{
return|return
name|iCanChangeEventProperties
return|;
block|}
specifier|public
name|void
name|setCanChangeEventProperties
parameter_list|(
name|boolean
name|canChangeEventProperties
parameter_list|)
block|{
name|iCanChangeEventProperties
operator|=
name|canChangeEventProperties
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangePicture
parameter_list|()
block|{
return|return
name|iCanChangePicture
return|;
block|}
specifier|public
name|void
name|setCanChangePicture
parameter_list|(
name|boolean
name|canChangePicture
parameter_list|)
block|{
name|iCanChangePicture
operator|=
name|canChangePicture
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangePreferences
parameter_list|()
block|{
return|return
name|iCanChangePreferences
return|;
block|}
specifier|public
name|void
name|setCanChangePreferences
parameter_list|(
name|boolean
name|canChangePreferences
parameter_list|)
block|{
name|iCanChangePreferences
operator|=
name|canChangePreferences
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangeGroups
parameter_list|()
block|{
return|return
name|iCanChangeGroups
return|;
block|}
specifier|public
name|void
name|setCanChangeGroups
parameter_list|(
name|boolean
name|canChangeGroups
parameter_list|)
block|{
name|iCanChangeGroups
operator|=
name|canChangeGroups
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangeFeatures
parameter_list|()
block|{
return|return
name|iCanChangeFeatures
return|;
block|}
specifier|public
name|void
name|setCanChangeFeatures
parameter_list|(
name|boolean
name|canChangeFeatures
parameter_list|)
block|{
name|iCanChangeFeatures
operator|=
name|canChangeFeatures
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangeEventAvailability
parameter_list|()
block|{
return|return
name|iCanChangeEventAvailability
return|;
block|}
specifier|public
name|void
name|setCanChangeEventAvailability
parameter_list|(
name|boolean
name|canChangeEventAvailability
parameter_list|)
block|{
name|iCanChangeEventAvailability
operator|=
name|canChangeEventAvailability
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanDelete
parameter_list|()
block|{
return|return
name|iCanDelete
return|;
block|}
specifier|public
name|void
name|setCanDelete
parameter_list|(
name|boolean
name|canDelete
parameter_list|)
block|{
name|iCanDelete
operator|=
name|canDelete
expr_stmt|;
block|}
specifier|public
name|String
name|getMiniMapUrl
parameter_list|()
block|{
return|return
name|iMiniMapUrl
return|;
block|}
specifier|public
name|void
name|setMiniMapUrl
parameter_list|(
name|String
name|miniMapUrl
parameter_list|)
block|{
name|iMiniMapUrl
operator|=
name|miniMapUrl
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasMiniMapUrl
parameter_list|()
block|{
return|return
name|iMiniMapUrl
operator|!=
literal|null
operator|&&
operator|!
name|iMiniMapUrl
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getMapUrl
parameter_list|()
block|{
return|return
name|iMapUrl
return|;
block|}
specifier|public
name|void
name|setMapUrl
parameter_list|(
name|String
name|MapUrl
parameter_list|)
block|{
name|iMapUrl
operator|=
name|MapUrl
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasMapUrl
parameter_list|()
block|{
return|return
name|iMapUrl
operator|!=
literal|null
operator|&&
operator|!
name|iMapUrl
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|hasPictures
parameter_list|()
block|{
return|return
name|iPictures
operator|!=
literal|null
operator|&&
operator|!
name|iPictures
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addPicture
parameter_list|(
name|RoomPictureInterface
name|picture
parameter_list|)
block|{
name|iPictures
operator|.
name|add
argument_list|(
name|picture
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|RoomPictureInterface
argument_list|>
name|getPictures
parameter_list|()
block|{
return|return
name|iPictures
return|;
block|}
specifier|public
name|String
name|getLastChange
parameter_list|()
block|{
return|return
name|iLastChange
return|;
block|}
specifier|public
name|boolean
name|hasLastChange
parameter_list|()
block|{
return|return
name|iLastChange
operator|!=
literal|null
operator|&&
operator|!
name|iLastChange
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|setLastChange
parameter_list|(
name|String
name|lastChange
parameter_list|)
block|{
name|iLastChange
operator|=
name|lastChange
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasRoomSharingModel
parameter_list|()
block|{
return|return
name|iRoomSharingModel
operator|!=
literal|null
return|;
block|}
specifier|public
name|void
name|setRoomSharingModel
parameter_list|(
name|RoomSharingModel
name|model
parameter_list|)
block|{
name|iRoomSharingModel
operator|=
name|model
expr_stmt|;
block|}
specifier|public
name|RoomSharingModel
name|getRoomSharingModel
parameter_list|()
block|{
return|return
name|iRoomSharingModel
return|;
block|}
specifier|public
name|boolean
name|hasEventAvailabilityModel
parameter_list|()
block|{
return|return
name|iEventAvailabilityModel
operator|!=
literal|null
return|;
block|}
specifier|public
name|void
name|setEventAvailabilityModel
parameter_list|(
name|RoomSharingModel
name|model
parameter_list|)
block|{
name|iEventAvailabilityModel
operator|=
name|model
expr_stmt|;
block|}
specifier|public
name|RoomSharingModel
name|getEventAvailabilityModel
parameter_list|()
block|{
return|return
name|iEventAvailabilityModel
return|;
block|}
specifier|public
name|boolean
name|hasPeriodPreferenceModel
parameter_list|(
name|Long
name|examTypeId
parameter_list|)
block|{
return|return
name|iPeriodPreferenceModels
operator|!=
literal|null
operator|&&
name|iPeriodPreferenceModels
operator|.
name|containsKey
argument_list|(
name|examTypeId
argument_list|)
return|;
block|}
specifier|public
name|PeriodPreferenceModel
name|getPeriodPreferenceModel
parameter_list|(
name|Long
name|examTypeId
parameter_list|)
block|{
return|return
operator|(
name|iPeriodPreferenceModels
operator|==
literal|null
condition|?
literal|null
else|:
name|iPeriodPreferenceModels
operator|.
name|get
argument_list|(
name|examTypeId
argument_list|)
operator|)
return|;
block|}
specifier|public
name|void
name|setPeriodPreferenceModel
parameter_list|(
name|PeriodPreferenceModel
name|model
parameter_list|)
block|{
if|if
condition|(
name|model
operator|==
literal|null
operator|||
name|model
operator|.
name|getExamType
argument_list|()
operator|==
literal|null
condition|)
return|return;
if|if
condition|(
name|iPeriodPreferenceModels
operator|==
literal|null
condition|)
name|iPeriodPreferenceModels
operator|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|PeriodPreferenceModel
argument_list|>
argument_list|()
expr_stmt|;
name|iPeriodPreferenceModels
operator|.
name|put
argument_list|(
name|model
operator|.
name|getExamType
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|model
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasFutureRooms
parameter_list|()
block|{
return|return
name|iFutureRooms
operator|!=
literal|null
operator|&&
operator|!
name|iFutureRooms
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|FutureRoomInterface
argument_list|>
name|getFutureRooms
parameter_list|()
block|{
return|return
name|iFutureRooms
return|;
block|}
specifier|public
name|void
name|addFutureRoom
parameter_list|(
name|FutureRoomInterface
name|futureRoom
parameter_list|)
block|{
if|if
condition|(
name|iFutureRooms
operator|==
literal|null
condition|)
name|iFutureRooms
operator|=
operator|new
name|ArrayList
argument_list|<
name|FutureRoomInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iFutureRooms
operator|.
name|add
argument_list|(
name|futureRoom
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomDetailsRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|RoomDetailInterface
argument_list|>
argument_list|>
block|{
specifier|private
name|List
argument_list|<
name|Long
argument_list|>
name|iLocationIds
init|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|String
name|iDepartment
init|=
literal|null
decl_stmt|;
specifier|public
name|RoomDetailsRequest
parameter_list|()
block|{
block|}
specifier|public
name|void
name|setDepartment
parameter_list|(
name|String
name|department
parameter_list|)
block|{
name|iDepartment
operator|=
name|department
expr_stmt|;
block|}
specifier|public
name|String
name|getDepartment
parameter_list|()
block|{
return|return
name|iDepartment
return|;
block|}
specifier|public
name|boolean
name|hasLocationIds
parameter_list|()
block|{
return|return
name|iLocationIds
operator|!=
literal|null
operator|&&
operator|!
name|iLocationIds
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|Long
argument_list|>
name|getLocationIds
parameter_list|()
block|{
return|return
name|iLocationIds
return|;
block|}
specifier|public
name|void
name|addLocationId
parameter_list|(
name|Long
name|locationId
parameter_list|)
block|{
name|iLocationIds
operator|.
name|add
argument_list|(
name|locationId
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|iLocationIds
operator|==
literal|null
condition|?
literal|0
else|:
name|iLocationIds
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|""
operator|+
name|getLocationIds
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|RoomDetailsRequest
name|load
parameter_list|(
name|Long
modifier|...
name|locationId
parameter_list|)
block|{
name|RoomDetailsRequest
name|request
init|=
operator|new
name|RoomDetailsRequest
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|id
range|:
name|locationId
control|)
name|request
operator|.
name|addLocationId
argument_list|(
name|id
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|PreferenceInterface
implements|implements
name|IsSerializable
block|{
specifier|private
name|String
name|iCode
decl_stmt|,
name|iName
decl_stmt|;
specifier|private
name|String
name|iColor
decl_stmt|;
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|boolean
name|iEditable
decl_stmt|;
specifier|public
name|PreferenceInterface
parameter_list|()
block|{
block|}
specifier|public
name|PreferenceInterface
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|color
parameter_list|,
name|String
name|code
parameter_list|,
name|String
name|name
parameter_list|,
name|boolean
name|editable
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
name|iColor
operator|=
name|color
expr_stmt|;
name|iCode
operator|=
name|code
expr_stmt|;
name|iName
operator|=
name|name
expr_stmt|;
name|iEditable
operator|=
name|editable
expr_stmt|;
block|}
specifier|public
name|String
name|getColor
parameter_list|()
block|{
return|return
name|iColor
return|;
block|}
specifier|public
name|void
name|setColor
parameter_list|(
name|String
name|color
parameter_list|)
block|{
name|iColor
operator|=
name|color
expr_stmt|;
block|}
specifier|public
name|String
name|getCode
parameter_list|()
block|{
return|return
name|iCode
return|;
block|}
specifier|public
name|void
name|setCode
parameter_list|(
name|String
name|code
parameter_list|)
block|{
name|iCode
operator|=
name|code
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|void
name|setEditable
parameter_list|(
name|boolean
name|editable
parameter_list|)
block|{
name|iEditable
operator|=
name|editable
expr_stmt|;
block|}
specifier|public
name|boolean
name|isEditable
parameter_list|()
block|{
return|return
name|iEditable
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|PreferenceInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|PreferenceInterface
operator|)
name|o
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|PeriodInterface
implements|implements
name|IsSerializable
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|int
name|iDay
decl_stmt|,
name|iStart
decl_stmt|,
name|iLength
decl_stmt|;
specifier|public
name|PeriodInterface
parameter_list|()
block|{
block|}
specifier|public
name|PeriodInterface
parameter_list|(
name|Long
name|id
parameter_list|,
name|int
name|day
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|length
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
name|iDay
operator|=
name|day
expr_stmt|;
name|iStart
operator|=
name|start
expr_stmt|;
name|iLength
operator|=
name|length
expr_stmt|;
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|int
name|getDay
parameter_list|()
block|{
return|return
name|iDay
return|;
block|}
specifier|public
name|void
name|setDay
parameter_list|(
name|int
name|day
parameter_list|)
block|{
name|iDay
operator|=
name|day
expr_stmt|;
block|}
specifier|public
name|int
name|getStartSlot
parameter_list|()
block|{
return|return
name|iStart
return|;
block|}
specifier|public
name|void
name|setStartSlot
parameter_list|(
name|int
name|start
parameter_list|)
block|{
name|iStart
operator|=
name|start
expr_stmt|;
block|}
specifier|public
name|int
name|getLength
parameter_list|()
block|{
return|return
name|iLength
return|;
block|}
specifier|public
name|void
name|setLength
parameter_list|(
name|int
name|length
parameter_list|)
block|{
name|iLength
operator|=
name|length
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|PeriodPreferenceModel
implements|implements
name|IsSerializable
implements|,
name|GwtRpcResponse
block|{
specifier|private
name|ExamTypeInterface
name|iExamType
decl_stmt|;
specifier|private
name|Long
name|iLocationId
decl_stmt|;
specifier|private
name|Long
name|iDefaultPreference
decl_stmt|;
specifier|private
name|Date
name|iFirstDate
decl_stmt|;
specifier|private
name|TreeSet
argument_list|<
name|Integer
argument_list|>
name|iStarts
init|=
operator|new
name|TreeSet
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|TreeSet
argument_list|<
name|Integer
argument_list|>
name|iDays
init|=
operator|new
name|TreeSet
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|PreferenceInterface
argument_list|>
name|iPreferences
init|=
operator|new
name|ArrayList
argument_list|<
name|PreferenceInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|PeriodInterface
argument_list|>
name|iPeriods
init|=
operator|new
name|ArrayList
argument_list|<
name|PeriodInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Integer
argument_list|,
name|Map
argument_list|<
name|Integer
argument_list|,
name|Long
argument_list|>
argument_list|>
name|iModel
decl_stmt|;
specifier|public
name|PeriodPreferenceModel
parameter_list|()
block|{
block|}
specifier|public
name|ExamTypeInterface
name|getExamType
parameter_list|()
block|{
return|return
name|iExamType
return|;
block|}
specifier|public
name|void
name|setExamType
parameter_list|(
name|ExamTypeInterface
name|examType
parameter_list|)
block|{
name|iExamType
operator|=
name|examType
expr_stmt|;
block|}
specifier|public
name|void
name|setLocationId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iLocationId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|Long
name|getLocationId
parameter_list|()
block|{
return|return
name|iLocationId
return|;
block|}
specifier|public
name|Date
name|getFirstDate
parameter_list|()
block|{
return|return
name|iFirstDate
return|;
block|}
specifier|public
name|void
name|setFirstDate
parameter_list|(
name|Date
name|date
parameter_list|)
block|{
name|iFirstDate
operator|=
name|date
expr_stmt|;
block|}
specifier|public
name|TreeSet
argument_list|<
name|Integer
argument_list|>
name|getDays
parameter_list|()
block|{
return|return
name|iDays
return|;
block|}
specifier|public
name|TreeSet
argument_list|<
name|Integer
argument_list|>
name|getSlots
parameter_list|()
block|{
return|return
name|iStarts
return|;
block|}
specifier|public
name|int
name|getLength
parameter_list|(
name|int
name|slot
parameter_list|)
block|{
for|for
control|(
name|PeriodInterface
name|p
range|:
name|iPeriods
control|)
if|if
condition|(
name|p
operator|.
name|getStartSlot
argument_list|()
operator|==
name|slot
condition|)
return|return
name|p
operator|.
name|getLength
argument_list|()
return|;
return|return
literal|12
return|;
block|}
specifier|public
name|void
name|setDefaultPreference
parameter_list|(
name|PreferenceInterface
name|preference
parameter_list|)
block|{
name|iDefaultPreference
operator|=
operator|(
name|preference
operator|==
literal|null
condition|?
literal|null
else|:
name|preference
operator|.
name|getId
argument_list|()
operator|)
expr_stmt|;
block|}
specifier|public
name|PreferenceInterface
name|getDefaultPreference
parameter_list|()
block|{
return|return
name|getPreference
argument_list|(
name|iDefaultPreference
argument_list|)
return|;
block|}
specifier|public
name|PreferenceInterface
name|getPreference
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
if|if
condition|(
name|id
operator|==
literal|null
condition|)
name|id
operator|=
name|iDefaultPreference
expr_stmt|;
if|if
condition|(
name|iPreferences
operator|==
literal|null
operator|||
name|id
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|PreferenceInterface
name|preference
range|:
name|iPreferences
control|)
if|if
condition|(
name|preference
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
return|return
name|preference
return|;
return|return
operator|(
operator|!
name|id
operator|.
name|equals
argument_list|(
name|iDefaultPreference
argument_list|)
condition|?
name|getPreference
argument_list|(
name|iDefaultPreference
argument_list|)
else|:
literal|null
operator|)
return|;
block|}
specifier|public
name|void
name|addPreference
parameter_list|(
name|PreferenceInterface
name|preference
parameter_list|)
block|{
if|if
condition|(
name|iPreferences
operator|==
literal|null
condition|)
name|iPreferences
operator|=
operator|new
name|ArrayList
argument_list|<
name|PreferenceInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iPreferences
operator|.
name|add
argument_list|(
name|preference
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|PreferenceInterface
argument_list|>
name|getPreferences
parameter_list|()
block|{
return|return
name|iPreferences
return|;
block|}
specifier|public
name|void
name|addPeriod
parameter_list|(
name|PeriodInterface
name|period
parameter_list|)
block|{
name|iPeriods
operator|.
name|add
argument_list|(
name|period
argument_list|)
expr_stmt|;
name|iDays
operator|.
name|add
argument_list|(
name|period
operator|.
name|getDay
argument_list|()
argument_list|)
expr_stmt|;
name|iStarts
operator|.
name|add
argument_list|(
name|period
operator|.
name|getStartSlot
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|PeriodInterface
argument_list|>
name|getPeriods
parameter_list|()
block|{
return|return
name|iPeriods
return|;
block|}
specifier|public
name|PeriodInterface
name|getPeriod
parameter_list|(
name|int
name|day
parameter_list|,
name|int
name|slot
parameter_list|)
block|{
for|for
control|(
name|PeriodInterface
name|p
range|:
name|iPeriods
control|)
if|if
condition|(
name|p
operator|.
name|getDay
argument_list|()
operator|==
name|day
operator|&&
name|p
operator|.
name|getStartSlot
argument_list|()
operator|==
name|slot
condition|)
return|return
name|p
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|PreferenceInterface
name|getPreference
parameter_list|(
name|int
name|day
parameter_list|,
name|int
name|slot
parameter_list|)
block|{
if|if
condition|(
name|iModel
operator|==
literal|null
condition|)
return|return
name|getPreference
argument_list|(
name|iDefaultPreference
argument_list|)
return|;
name|Map
argument_list|<
name|Integer
argument_list|,
name|Long
argument_list|>
name|slot2id
init|=
name|iModel
operator|.
name|get
argument_list|(
name|day
argument_list|)
decl_stmt|;
return|return
name|getPreference
argument_list|(
name|slot2id
operator|==
literal|null
condition|?
literal|null
else|:
name|slot2id
operator|.
name|get
argument_list|(
name|slot
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|void
name|setPreference
parameter_list|(
name|int
name|day
parameter_list|,
name|int
name|slot
parameter_list|,
name|Long
name|optionId
parameter_list|)
block|{
if|if
condition|(
name|iModel
operator|==
literal|null
condition|)
name|iModel
operator|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|Map
argument_list|<
name|Integer
argument_list|,
name|Long
argument_list|>
argument_list|>
argument_list|()
expr_stmt|;
name|Map
argument_list|<
name|Integer
argument_list|,
name|Long
argument_list|>
name|slot2id
init|=
name|iModel
operator|.
name|get
argument_list|(
name|day
argument_list|)
decl_stmt|;
if|if
condition|(
name|slot2id
operator|==
literal|null
condition|)
block|{
name|slot2id
operator|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|Long
argument_list|>
argument_list|()
expr_stmt|;
name|iModel
operator|.
name|put
argument_list|(
name|day
argument_list|,
name|slot2id
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|optionId
operator|==
literal|null
condition|)
name|slot2id
operator|.
name|remove
argument_list|(
name|slot
argument_list|)
expr_stmt|;
else|else
name|slot2id
operator|.
name|put
argument_list|(
name|slot
argument_list|,
name|optionId
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setPreference
parameter_list|(
name|int
name|day
parameter_list|,
name|int
name|slot
parameter_list|,
name|PreferenceInterface
name|preference
parameter_list|)
block|{
name|setPreference
argument_list|(
name|day
argument_list|,
name|slot
argument_list|,
name|preference
operator|==
literal|null
condition|?
literal|null
else|:
name|preference
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|PeriodPreferenceRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|PeriodPreferenceModel
argument_list|>
block|{
specifier|public
specifier|static
enum|enum
name|Operation
implements|implements
name|IsSerializable
block|{
name|LOAD
block|,
name|SAVE
block|}
specifier|private
name|Operation
name|iOperation
decl_stmt|;
specifier|private
name|Long
name|iLocationId
decl_stmt|;
specifier|private
name|PeriodPreferenceModel
name|iModel
decl_stmt|;
specifier|private
name|Long
name|iExamTypeId
init|=
literal|null
decl_stmt|;
specifier|public
name|PeriodPreferenceRequest
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getLocationId
parameter_list|()
block|{
return|return
name|iLocationId
return|;
block|}
specifier|public
name|void
name|setLocationId
parameter_list|(
name|Long
name|locationId
parameter_list|)
block|{
name|iLocationId
operator|=
name|locationId
expr_stmt|;
block|}
specifier|public
name|PeriodPreferenceModel
name|getModel
parameter_list|()
block|{
return|return
name|iModel
return|;
block|}
specifier|public
name|void
name|setModel
parameter_list|(
name|PeriodPreferenceModel
name|model
parameter_list|)
block|{
name|iModel
operator|=
name|model
expr_stmt|;
block|}
specifier|public
name|Operation
name|getOperation
parameter_list|()
block|{
return|return
name|iOperation
return|;
block|}
specifier|public
name|void
name|setOperation
parameter_list|(
name|Operation
name|operation
parameter_list|)
block|{
name|iOperation
operator|=
name|operation
expr_stmt|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getOperation
argument_list|()
operator|.
name|name
argument_list|()
operator|+
literal|"["
operator|+
name|getLocationId
argument_list|()
operator|+
literal|","
operator|+
name|getExamTypeId
argument_list|()
operator|+
literal|"]"
return|;
block|}
specifier|public
name|Long
name|getExamTypeId
parameter_list|()
block|{
return|return
name|iExamTypeId
return|;
block|}
specifier|public
name|void
name|setExamTypeId
parameter_list|(
name|Long
name|examTypeId
parameter_list|)
block|{
name|iExamTypeId
operator|=
name|examTypeId
expr_stmt|;
block|}
specifier|public
specifier|static
name|PeriodPreferenceRequest
name|load
parameter_list|(
name|Long
name|locationId
parameter_list|,
name|Long
name|examTypeId
parameter_list|)
block|{
name|PeriodPreferenceRequest
name|request
init|=
operator|new
name|PeriodPreferenceRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setOperation
argument_list|(
name|Operation
operator|.
name|LOAD
argument_list|)
expr_stmt|;
name|request
operator|.
name|setLocationId
argument_list|(
name|locationId
argument_list|)
expr_stmt|;
name|request
operator|.
name|setExamTypeId
argument_list|(
name|examTypeId
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
specifier|public
specifier|static
name|PeriodPreferenceRequest
name|save
parameter_list|(
name|Long
name|locationId
parameter_list|,
name|Long
name|examTypeId
parameter_list|,
name|PeriodPreferenceModel
name|model
parameter_list|)
block|{
name|PeriodPreferenceRequest
name|request
init|=
operator|new
name|PeriodPreferenceRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setOperation
argument_list|(
name|Operation
operator|.
name|SAVE
argument_list|)
expr_stmt|;
name|request
operator|.
name|setLocationId
argument_list|(
name|locationId
argument_list|)
expr_stmt|;
name|request
operator|.
name|setModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|request
operator|.
name|setExamTypeId
argument_list|(
name|examTypeId
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomPropertiesRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|RoomPropertiesInterface
argument_list|>
block|{
specifier|public
name|RoomPropertiesRequest
parameter_list|()
block|{
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|""
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomPropertiesInterface
implements|implements
name|GwtRpcResponse
block|{
specifier|private
name|AcademicSessionInterface
name|iSession
init|=
literal|null
decl_stmt|;
specifier|private
name|boolean
name|iCanExportPdf
init|=
literal|false
decl_stmt|,
name|iCanExportCsv
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|iCanEditDepartments
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|iCanEditRoomExams
init|=
literal|false
decl_stmt|;
specifier|private
name|List
argument_list|<
name|RoomTypeInterface
argument_list|>
name|iRoomTypes
init|=
operator|new
name|ArrayList
argument_list|<
name|RoomTypeInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|BuildingInterface
argument_list|>
name|iBuildings
init|=
operator|new
name|ArrayList
argument_list|<
name|BuildingInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|FeatureTypeInterface
argument_list|>
name|iFeatureTypes
init|=
operator|new
name|ArrayList
argument_list|<
name|FeatureTypeInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|DepartmentInterface
argument_list|>
name|iDepartments
init|=
operator|new
name|ArrayList
argument_list|<
name|DepartmentInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|ExamTypeInterface
argument_list|>
name|iExamTypes
init|=
operator|new
name|ArrayList
argument_list|<
name|ExamTypeInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|GroupInterface
argument_list|>
name|iGroups
init|=
operator|new
name|ArrayList
argument_list|<
name|GroupInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|FeatureInterface
argument_list|>
name|iFeatures
init|=
operator|new
name|ArrayList
argument_list|<
name|FeatureInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|PreferenceInterface
argument_list|>
name|iPreferences
init|=
operator|new
name|ArrayList
argument_list|<
name|PreferenceInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|boolean
name|iCanSeeCourses
init|=
literal|false
decl_stmt|,
name|iCanSeeExams
init|=
literal|false
decl_stmt|,
name|iCanSeeEvents
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|iGridAsText
init|=
literal|false
decl_stmt|,
name|iHorizontal
init|=
literal|false
decl_stmt|,
name|iGoogleMap
init|=
literal|false
decl_stmt|;
specifier|private
name|List
argument_list|<
name|RoomSharingDisplayMode
argument_list|>
name|iModes
decl_stmt|;
specifier|private
name|String
name|iEllipsoid
init|=
literal|null
decl_stmt|;
specifier|private
name|boolean
name|iCanChangeAvailability
init|=
literal|false
decl_stmt|,
name|iCanChangeControll
init|=
literal|false
decl_stmt|,
name|iCanChangeExternalId
init|=
literal|false
decl_stmt|,
name|iCanChangeExamStatus
init|=
literal|false
decl_stmt|,
name|iCanChangeEventProperties
init|=
literal|false
decl_stmt|,
name|iCanChangePicture
init|=
literal|false
decl_stmt|,
name|iCanChangePreferences
init|=
literal|false
decl_stmt|,
name|iCanChangeGroups
init|=
literal|false
decl_stmt|,
name|iCanChangeFeatures
init|=
literal|false
decl_stmt|,
name|iCanChangeEventAvailability
init|=
literal|false
decl_stmt|;
specifier|private
name|List
argument_list|<
name|AcademicSessionInterface
argument_list|>
name|iFutureSessions
init|=
literal|null
decl_stmt|;
specifier|public
name|RoomPropertiesInterface
parameter_list|()
block|{
block|}
specifier|public
name|AcademicSessionInterface
name|getAcademicSession
parameter_list|()
block|{
return|return
name|iSession
return|;
block|}
specifier|public
name|void
name|setAcademicSession
parameter_list|(
name|AcademicSessionInterface
name|session
parameter_list|)
block|{
name|iSession
operator|=
name|session
expr_stmt|;
block|}
specifier|public
name|Long
name|getAcademicSessionId
parameter_list|()
block|{
return|return
operator|(
name|iSession
operator|==
literal|null
condition|?
literal|null
else|:
name|iSession
operator|.
name|getId
argument_list|()
operator|)
return|;
block|}
specifier|public
name|String
name|getAcademicSessionName
parameter_list|()
block|{
return|return
operator|(
name|iSession
operator|==
literal|null
condition|?
literal|null
else|:
name|iSession
operator|.
name|getLabel
argument_list|()
operator|)
return|;
block|}
specifier|public
name|boolean
name|isCanEditDepartments
parameter_list|()
block|{
return|return
name|iCanEditDepartments
return|;
block|}
specifier|public
name|void
name|setCanEditDepartments
parameter_list|(
name|boolean
name|canEditDepartments
parameter_list|)
block|{
name|iCanEditDepartments
operator|=
name|canEditDepartments
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanExportPdf
parameter_list|()
block|{
return|return
name|iCanExportPdf
return|;
block|}
specifier|public
name|void
name|setCanExportPdf
parameter_list|(
name|boolean
name|canExportPdf
parameter_list|)
block|{
name|iCanExportPdf
operator|=
name|canExportPdf
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanExportCsv
parameter_list|()
block|{
return|return
name|iCanExportCsv
return|;
block|}
specifier|public
name|void
name|setCanExportCsv
parameter_list|(
name|boolean
name|canExportCsv
parameter_list|)
block|{
name|iCanExportCsv
operator|=
name|canExportCsv
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanEditRoomExams
parameter_list|()
block|{
return|return
name|iCanEditRoomExams
return|;
block|}
specifier|public
name|void
name|setCanEditRoomExams
parameter_list|(
name|boolean
name|canEditRoomExams
parameter_list|)
block|{
name|iCanEditRoomExams
operator|=
name|canEditRoomExams
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanAddRoom
parameter_list|()
block|{
return|return
operator|(
name|iSession
operator|==
literal|null
condition|?
literal|false
else|:
name|iSession
operator|.
name|isCanAddRoom
argument_list|()
operator|)
return|;
block|}
specifier|public
name|void
name|setCanAddRoom
parameter_list|(
name|boolean
name|canAddRoom
parameter_list|)
block|{
if|if
condition|(
name|iSession
operator|!=
literal|null
condition|)
name|iSession
operator|.
name|setCanAddRoom
argument_list|(
name|canAddRoom
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanAddNonUniversity
parameter_list|()
block|{
return|return
operator|(
name|iSession
operator|==
literal|null
condition|?
literal|false
else|:
name|iSession
operator|.
name|isCanAddNonUniversity
argument_list|()
operator|)
return|;
block|}
specifier|public
name|void
name|setCanAddNonUniversity
parameter_list|(
name|boolean
name|canAddNonUniv
parameter_list|)
block|{
if|if
condition|(
name|iSession
operator|!=
literal|null
condition|)
name|iSession
operator|.
name|setCanAddNonUniversity
argument_list|(
name|canAddNonUniv
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addRoomType
parameter_list|(
name|RoomTypeInterface
name|roomType
parameter_list|)
block|{
name|iRoomTypes
operator|.
name|add
argument_list|(
name|roomType
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|RoomTypeInterface
argument_list|>
name|getRoomTypes
parameter_list|()
block|{
return|return
name|iRoomTypes
return|;
block|}
specifier|public
name|RoomTypeInterface
name|getRoomType
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
for|for
control|(
name|RoomTypeInterface
name|type
range|:
name|iRoomTypes
control|)
if|if
condition|(
name|id
operator|.
name|equals
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
return|return
name|type
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|addBuilding
parameter_list|(
name|BuildingInterface
name|building
parameter_list|)
block|{
name|iBuildings
operator|.
name|add
argument_list|(
name|building
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|BuildingInterface
argument_list|>
name|getBuildings
parameter_list|()
block|{
return|return
name|iBuildings
return|;
block|}
specifier|public
name|BuildingInterface
name|getBuilding
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
for|for
control|(
name|BuildingInterface
name|building
range|:
name|iBuildings
control|)
if|if
condition|(
name|id
operator|.
name|equals
argument_list|(
name|building
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
return|return
name|building
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|addFeatureType
parameter_list|(
name|FeatureTypeInterface
name|featureType
parameter_list|)
block|{
name|iFeatureTypes
operator|.
name|add
argument_list|(
name|featureType
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|FeatureTypeInterface
argument_list|>
name|getFeatureTypes
parameter_list|()
block|{
return|return
name|iFeatureTypes
return|;
block|}
specifier|public
name|FeatureTypeInterface
name|getFeatureType
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
for|for
control|(
name|FeatureTypeInterface
name|type
range|:
name|iFeatureTypes
control|)
if|if
condition|(
name|id
operator|.
name|equals
argument_list|(
name|type
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
return|return
name|type
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|addDepartment
parameter_list|(
name|DepartmentInterface
name|department
parameter_list|)
block|{
name|iDepartments
operator|.
name|add
argument_list|(
name|department
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|DepartmentInterface
argument_list|>
name|getDepartments
parameter_list|()
block|{
return|return
name|iDepartments
return|;
block|}
specifier|public
name|DepartmentInterface
name|getDepartment
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
for|for
control|(
name|DepartmentInterface
name|department
range|:
name|iDepartments
control|)
if|if
condition|(
name|id
operator|.
name|equals
argument_list|(
name|department
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
return|return
name|department
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|addExamType
parameter_list|(
name|ExamTypeInterface
name|examType
parameter_list|)
block|{
name|iExamTypes
operator|.
name|add
argument_list|(
name|examType
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|ExamTypeInterface
argument_list|>
name|getExamTypes
parameter_list|()
block|{
return|return
name|iExamTypes
return|;
block|}
specifier|public
name|boolean
name|isCanSeeCourses
parameter_list|()
block|{
return|return
name|iCanSeeCourses
return|;
block|}
specifier|public
name|void
name|setCanSeeCourses
parameter_list|(
name|boolean
name|canSeeCourses
parameter_list|)
block|{
name|iCanSeeCourses
operator|=
name|canSeeCourses
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanSeeExams
parameter_list|()
block|{
return|return
name|iCanSeeExams
return|;
block|}
specifier|public
name|void
name|setCanSeeExams
parameter_list|(
name|boolean
name|canSeeExams
parameter_list|)
block|{
name|iCanSeeExams
operator|=
name|canSeeExams
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanSeeEvents
parameter_list|()
block|{
return|return
name|iCanSeeEvents
return|;
block|}
specifier|public
name|void
name|setCanSeeEvents
parameter_list|(
name|boolean
name|canSeeEvents
parameter_list|)
block|{
name|iCanSeeEvents
operator|=
name|canSeeEvents
expr_stmt|;
block|}
specifier|public
name|boolean
name|isGridAsText
parameter_list|()
block|{
return|return
name|iGridAsText
return|;
block|}
specifier|public
name|void
name|setGridAsText
parameter_list|(
name|boolean
name|gridAsText
parameter_list|)
block|{
name|iGridAsText
operator|=
name|gridAsText
expr_stmt|;
block|}
specifier|public
name|boolean
name|isHorizontal
parameter_list|()
block|{
return|return
name|iHorizontal
return|;
block|}
specifier|public
name|void
name|setHorizontal
parameter_list|(
name|boolean
name|horizontal
parameter_list|)
block|{
name|iHorizontal
operator|=
name|horizontal
expr_stmt|;
block|}
specifier|public
name|void
name|addGroup
parameter_list|(
name|GroupInterface
name|group
parameter_list|)
block|{
name|iGroups
operator|.
name|add
argument_list|(
name|group
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|GroupInterface
argument_list|>
name|getGroups
parameter_list|()
block|{
return|return
name|iGroups
return|;
block|}
specifier|public
name|void
name|addFeature
parameter_list|(
name|FeatureInterface
name|feature
parameter_list|)
block|{
name|iFeatures
operator|.
name|add
argument_list|(
name|feature
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|FeatureInterface
argument_list|>
name|getFeatures
parameter_list|()
block|{
return|return
name|iFeatures
return|;
block|}
specifier|public
name|void
name|addPreference
parameter_list|(
name|PreferenceInterface
name|preference
parameter_list|)
block|{
name|iPreferences
operator|.
name|add
argument_list|(
name|preference
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|PreferenceInterface
argument_list|>
name|getPreferences
parameter_list|()
block|{
return|return
name|iPreferences
return|;
block|}
specifier|public
name|void
name|addMode
parameter_list|(
name|RoomSharingDisplayMode
name|mode
parameter_list|)
block|{
if|if
condition|(
name|iModes
operator|==
literal|null
condition|)
name|iModes
operator|=
operator|new
name|ArrayList
argument_list|<
name|RoomSharingDisplayMode
argument_list|>
argument_list|()
expr_stmt|;
name|iModes
operator|.
name|add
argument_list|(
name|mode
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|RoomSharingDisplayMode
argument_list|>
name|getModes
parameter_list|()
block|{
return|return
name|iModes
return|;
block|}
specifier|public
name|boolean
name|hasModes
parameter_list|()
block|{
return|return
name|iModes
operator|!=
literal|null
operator|&&
operator|!
name|iModes
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getEllipsoid
parameter_list|()
block|{
return|return
name|iEllipsoid
return|;
block|}
specifier|public
name|boolean
name|hasEllipsoid
parameter_list|()
block|{
return|return
name|iEllipsoid
operator|!=
literal|null
operator|&
operator|!
name|iEllipsoid
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|setEllipsoid
parameter_list|(
name|String
name|ellipsoid
parameter_list|)
block|{
name|iEllipsoid
operator|=
name|ellipsoid
expr_stmt|;
block|}
specifier|public
name|void
name|setGoogleMap
parameter_list|(
name|boolean
name|map
parameter_list|)
block|{
name|iGoogleMap
operator|=
name|map
expr_stmt|;
block|}
specifier|public
name|boolean
name|isGoogleMap
parameter_list|()
block|{
return|return
name|iGoogleMap
return|;
block|}
specifier|public
name|boolean
name|isCanChangeAvailability
parameter_list|()
block|{
return|return
name|iCanChangeAvailability
return|;
block|}
specifier|public
name|void
name|setCanChangeAvailability
parameter_list|(
name|boolean
name|canChangeAvailability
parameter_list|)
block|{
name|iCanChangeAvailability
operator|=
name|canChangeAvailability
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangeControll
parameter_list|()
block|{
return|return
name|iCanChangeControll
return|;
block|}
specifier|public
name|void
name|setCanChangeControll
parameter_list|(
name|boolean
name|canChangeControll
parameter_list|)
block|{
name|iCanChangeControll
operator|=
name|canChangeControll
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangeExternalId
parameter_list|()
block|{
return|return
name|iCanChangeExternalId
return|;
block|}
specifier|public
name|void
name|setCanChangeExternalId
parameter_list|(
name|boolean
name|canChangeExternalId
parameter_list|)
block|{
name|iCanChangeExternalId
operator|=
name|canChangeExternalId
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangeExamStatus
parameter_list|()
block|{
return|return
name|iCanChangeExamStatus
return|;
block|}
specifier|public
name|void
name|setCanChangeExamStatus
parameter_list|(
name|boolean
name|canChangeExamStatus
parameter_list|)
block|{
name|iCanChangeExamStatus
operator|=
name|canChangeExamStatus
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangeEventProperties
parameter_list|()
block|{
return|return
name|iCanChangeEventProperties
return|;
block|}
specifier|public
name|void
name|setCanChangeEventProperties
parameter_list|(
name|boolean
name|canChangeEventProperties
parameter_list|)
block|{
name|iCanChangeEventProperties
operator|=
name|canChangeEventProperties
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangePicture
parameter_list|()
block|{
return|return
name|iCanChangePicture
return|;
block|}
specifier|public
name|void
name|setCanChangePicture
parameter_list|(
name|boolean
name|canChangePicture
parameter_list|)
block|{
name|iCanChangePicture
operator|=
name|canChangePicture
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangePreferences
parameter_list|()
block|{
return|return
name|iCanChangePreferences
return|;
block|}
specifier|public
name|void
name|setCanChangePreferences
parameter_list|(
name|boolean
name|canChangePreferences
parameter_list|)
block|{
name|iCanChangePreferences
operator|=
name|canChangePreferences
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangeGroups
parameter_list|()
block|{
return|return
name|iCanChangeGroups
return|;
block|}
specifier|public
name|void
name|setCanChangeGroups
parameter_list|(
name|boolean
name|canChangeGroups
parameter_list|)
block|{
name|iCanChangeGroups
operator|=
name|canChangeGroups
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangeFeatures
parameter_list|()
block|{
return|return
name|iCanChangeFeatures
return|;
block|}
specifier|public
name|void
name|setCanChangeFeatures
parameter_list|(
name|boolean
name|canChangeFeatures
parameter_list|)
block|{
name|iCanChangeFeatures
operator|=
name|canChangeFeatures
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanChangeEventAvailability
parameter_list|()
block|{
return|return
name|iCanChangeEventAvailability
return|;
block|}
specifier|public
name|void
name|setCanChangeEventAvailability
parameter_list|(
name|boolean
name|canChangeEventAvailability
parameter_list|)
block|{
name|iCanChangeEventAvailability
operator|=
name|canChangeEventAvailability
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasFutureSessions
parameter_list|()
block|{
return|return
name|iFutureSessions
operator|!=
literal|null
operator|&&
operator|!
name|iFutureSessions
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addFutureSession
parameter_list|(
name|AcademicSessionInterface
name|session
parameter_list|)
block|{
if|if
condition|(
name|iFutureSessions
operator|==
literal|null
condition|)
name|iFutureSessions
operator|=
operator|new
name|ArrayList
argument_list|<
name|AcademicSessionInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iFutureSessions
operator|.
name|add
argument_list|(
name|session
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|AcademicSessionInterface
argument_list|>
name|getFutureSessions
parameter_list|()
block|{
return|return
name|iFutureSessions
return|;
block|}
specifier|public
name|AcademicSessionInterface
name|getFutureSession
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
for|for
control|(
name|AcademicSessionInterface
name|session
range|:
name|iFutureSessions
control|)
if|if
condition|(
name|id
operator|.
name|equals
argument_list|(
name|session
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
return|return
name|session
return|;
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
enum|enum
name|RoomsColumn
block|{
name|NAME
block|,
name|EXTERNAL_ID
block|,
name|TYPE
block|,
name|CAPACITY
block|,
name|EXAM_CAPACITY
block|,
name|AREA
block|,
name|COORDINATES
block|,
name|DISTANCE_CHECK
block|,
name|ROOM_CHECK
block|,
name|MAP
block|,
name|PICTURES
block|,
name|PREFERENCE
block|,
name|AVAILABILITY
block|,
name|DEPARTMENTS
block|,
name|CONTROL_DEPT
block|,
name|EXAM_TYPES
block|,
name|PERIOD_PREF
block|,
name|EVENT_DEPARTMENT
block|,
name|EVENT_STATUS
block|,
name|EVENT_AVAILABILITY
block|,
name|EVENT_MESSAGE
block|,
name|BREAK_TIME
block|,
name|GROUPS
block|,
name|FEATURES
block|, 		;
specifier|public
name|int
name|flag
parameter_list|()
block|{
return|return
literal|1
operator|<<
name|ordinal
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|in
parameter_list|(
name|int
name|flags
parameter_list|)
block|{
return|return
operator|(
name|flags
operator|&
name|flag
argument_list|()
operator|)
operator|!=
literal|0
return|;
block|}
specifier|public
name|int
name|set
parameter_list|(
name|int
name|flags
parameter_list|)
block|{
return|return
operator|(
name|in
argument_list|(
name|flags
argument_list|)
condition|?
name|flags
else|:
name|flags
operator|+
name|flag
argument_list|()
operator|)
return|;
block|}
specifier|public
name|int
name|clear
parameter_list|(
name|int
name|flags
parameter_list|)
block|{
return|return
operator|(
name|in
argument_list|(
name|flags
argument_list|)
condition|?
name|flags
operator|-
name|flag
argument_list|()
else|:
name|flags
operator|)
return|;
block|}
block|}
specifier|public
specifier|static
enum|enum
name|RoomsPageMode
implements|implements
name|IsSerializable
block|{
name|COURSES
argument_list|(
literal|"department:Managed"
argument_list|,
name|RoomsColumn
operator|.
name|NAME
argument_list|,
name|RoomsColumn
operator|.
name|TYPE
argument_list|,
name|RoomsColumn
operator|.
name|CAPACITY
argument_list|,
name|RoomsColumn
operator|.
name|AREA
argument_list|,
name|RoomsColumn
operator|.
name|AVAILABILITY
argument_list|,
name|RoomsColumn
operator|.
name|DEPARTMENTS
argument_list|,
name|RoomsColumn
operator|.
name|FEATURES
argument_list|,
name|RoomsColumn
operator|.
name|GROUPS
argument_list|)
block|,
name|EXAMS
argument_list|(
literal|"department:Managed"
argument_list|,
name|RoomsColumn
operator|.
name|NAME
argument_list|,
name|RoomsColumn
operator|.
name|TYPE
argument_list|,
name|RoomsColumn
operator|.
name|CAPACITY
argument_list|,
name|RoomsColumn
operator|.
name|EXAM_CAPACITY
argument_list|,
name|RoomsColumn
operator|.
name|AREA
argument_list|,
name|RoomsColumn
operator|.
name|EXAM_TYPES
argument_list|,
name|RoomsColumn
operator|.
name|PERIOD_PREF
argument_list|,
name|RoomsColumn
operator|.
name|FEATURES
argument_list|,
name|RoomsColumn
operator|.
name|GROUPS
argument_list|)
block|,
name|EVENTS
argument_list|(
literal|"flag:Events department:Managed"
argument_list|,
name|RoomsColumn
operator|.
name|NAME
argument_list|,
name|RoomsColumn
operator|.
name|TYPE
argument_list|,
name|RoomsColumn
operator|.
name|CAPACITY
argument_list|,
name|RoomsColumn
operator|.
name|AREA
argument_list|,
name|RoomsColumn
operator|.
name|EVENT_DEPARTMENT
argument_list|,
name|RoomsColumn
operator|.
name|EVENT_AVAILABILITY
argument_list|,
name|RoomsColumn
operator|.
name|EVENT_STATUS
argument_list|,
name|RoomsColumn
operator|.
name|EVENT_MESSAGE
argument_list|,
name|RoomsColumn
operator|.
name|BREAK_TIME
argument_list|,
name|RoomsColumn
operator|.
name|FEATURES
argument_list|,
name|RoomsColumn
operator|.
name|GROUPS
argument_list|)
block|,  		;
specifier|private
name|String
name|iQuery
decl_stmt|;
specifier|private
name|int
name|iColumns
decl_stmt|;
name|RoomsPageMode
parameter_list|(
name|String
name|query
parameter_list|,
name|RoomsColumn
modifier|...
name|column
parameter_list|)
block|{
name|iQuery
operator|=
name|query
expr_stmt|;
name|iColumns
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|RoomsColumn
name|f
range|:
name|column
control|)
name|iColumns
operator|+=
name|f
operator|.
name|flag
argument_list|()
expr_stmt|;
block|}
specifier|public
name|String
name|getQuery
parameter_list|()
block|{
return|return
name|iQuery
return|;
block|}
specifier|public
name|int
name|getColumns
parameter_list|()
block|{
return|return
name|iColumns
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomFilterRpcRequest
extends|extends
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|RoomFilterRpcRequest
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|public
name|RoomFilterRpcRequest
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomUpdateRpcRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|RoomDetailInterface
argument_list|>
block|{
specifier|private
name|Operation
name|iOperation
decl_stmt|;
specifier|private
name|Long
name|iLocationId
decl_stmt|;
specifier|private
name|RoomDetailInterface
name|iRoom
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Long
argument_list|,
name|Integer
argument_list|>
name|iFutureFlags
decl_stmt|;
specifier|public
specifier|static
enum|enum
name|Operation
implements|implements
name|IsSerializable
block|{
name|CREATE
block|,
name|UPDATE
block|,
name|DELETE
block|}
specifier|public
name|RoomUpdateRpcRequest
parameter_list|()
block|{
block|}
specifier|public
name|boolean
name|hasRoom
parameter_list|()
block|{
return|return
name|iRoom
operator|!=
literal|null
return|;
block|}
specifier|public
name|RoomDetailInterface
name|getRoom
parameter_list|()
block|{
return|return
name|iRoom
return|;
block|}
specifier|public
name|void
name|setRoom
parameter_list|(
name|RoomDetailInterface
name|room
parameter_list|)
block|{
name|iRoom
operator|=
name|room
expr_stmt|;
block|}
specifier|public
name|Operation
name|getOperation
parameter_list|()
block|{
return|return
name|iOperation
return|;
block|}
specifier|public
name|void
name|setOperation
parameter_list|(
name|Operation
name|operation
parameter_list|)
block|{
name|iOperation
operator|=
name|operation
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasLocationId
parameter_list|()
block|{
return|return
name|getLocationId
argument_list|()
operator|!=
literal|null
return|;
block|}
specifier|public
name|Long
name|getLocationId
parameter_list|()
block|{
return|return
name|iLocationId
operator|!=
literal|null
condition|?
name|iLocationId
else|:
name|iRoom
operator|!=
literal|null
condition|?
name|iRoom
operator|.
name|getUniqueId
argument_list|()
else|:
literal|null
return|;
block|}
specifier|public
name|void
name|setLocationId
parameter_list|(
name|Long
name|locationId
parameter_list|)
block|{
name|iLocationId
operator|=
name|locationId
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasLabel
parameter_list|()
block|{
return|return
name|getLabel
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|getLabel
argument_list|()
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
name|iRoom
operator|!=
literal|null
condition|?
name|iRoom
operator|.
name|getLabel
argument_list|()
else|:
literal|null
return|;
block|}
specifier|public
name|boolean
name|hasFutureFlags
parameter_list|()
block|{
return|return
name|iFutureFlags
operator|!=
literal|null
operator|&&
operator|!
name|iFutureFlags
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|clearFutureFlags
parameter_list|()
block|{
if|if
condition|(
name|iFutureFlags
operator|!=
literal|null
condition|)
name|iFutureFlags
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setFutureFlag
parameter_list|(
name|Long
name|id
parameter_list|,
name|int
name|flags
parameter_list|)
block|{
if|if
condition|(
name|iFutureFlags
operator|==
literal|null
condition|)
name|iFutureFlags
operator|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Integer
argument_list|>
argument_list|()
expr_stmt|;
name|iFutureFlags
operator|.
name|put
argument_list|(
name|id
argument_list|,
name|flags
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Integer
name|getFutureFlag
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
return|return
operator|(
name|iFutureFlags
operator|==
literal|null
condition|?
literal|null
else|:
name|iFutureFlags
operator|.
name|get
argument_list|(
name|id
argument_list|)
operator|)
return|;
block|}
specifier|public
name|Map
argument_list|<
name|Long
argument_list|,
name|Integer
argument_list|>
name|getFutureFlags
parameter_list|()
block|{
return|return
name|iFutureFlags
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getOperation
argument_list|()
operator|.
name|name
argument_list|()
operator|+
literal|" "
operator|+
operator|(
name|hasLocationId
argument_list|()
condition|?
name|getLocationId
argument_list|()
operator|+
operator|(
name|hasLabel
argument_list|()
condition|?
literal|"/"
operator|+
name|getLabel
argument_list|()
else|:
literal|""
operator|)
else|:
name|hasLabel
argument_list|()
condition|?
name|getLabel
argument_list|()
else|:
literal|""
operator|)
return|;
block|}
specifier|public
specifier|static
name|RoomUpdateRpcRequest
name|createDeleteRequest
parameter_list|(
name|Long
name|locationId
parameter_list|)
block|{
name|RoomUpdateRpcRequest
name|request
init|=
operator|new
name|RoomUpdateRpcRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setOperation
argument_list|(
name|Operation
operator|.
name|DELETE
argument_list|)
expr_stmt|;
name|request
operator|.
name|setLocationId
argument_list|(
name|locationId
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
specifier|public
specifier|static
name|RoomUpdateRpcRequest
name|createSaveOrUpdateRequest
parameter_list|(
name|RoomDetailInterface
name|room
parameter_list|)
block|{
name|RoomUpdateRpcRequest
name|request
init|=
operator|new
name|RoomUpdateRpcRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setOperation
argument_list|(
name|room
operator|.
name|getUniqueId
argument_list|()
operator|==
literal|null
condition|?
name|Operation
operator|.
name|CREATE
else|:
name|Operation
operator|.
name|UPDATE
argument_list|)
expr_stmt|;
name|request
operator|.
name|setRoom
argument_list|(
name|room
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomException
extends|extends
name|GwtRpcException
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|RoomDetailInterface
name|iRoom
decl_stmt|;
specifier|public
name|RoomException
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|RoomException
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|super
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
specifier|public
name|RoomException
parameter_list|(
name|String
name|message
parameter_list|,
name|Throwable
name|cause
parameter_list|)
block|{
name|super
argument_list|(
name|message
argument_list|,
name|cause
argument_list|)
expr_stmt|;
block|}
specifier|public
name|RoomException
name|withRoom
parameter_list|(
name|RoomDetailInterface
name|room
parameter_list|)
block|{
name|iRoom
operator|=
name|room
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|boolean
name|hasRoom
parameter_list|()
block|{
return|return
name|iRoom
operator|!=
literal|null
return|;
block|}
specifier|public
name|RoomDetailInterface
name|getRoom
parameter_list|()
block|{
return|return
name|iRoom
return|;
block|}
block|}
specifier|public
specifier|static
enum|enum
name|FutureOperation
implements|implements
name|IsSerializable
block|{
name|ROOM_PROPERTIES
block|,
name|EXAM_PROPERTIES
block|,
name|EVENT_PROPERTIES
block|,
name|GROUPS
block|,
name|FEATURES
block|,
name|ROOM_SHARING
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|)
block|,
name|EXAM_PREFS
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|)
block|,
name|EVENT_AVAILABILITY
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|)
block|,
name|PICTURES
block|, 		;
specifier|private
name|boolean
name|iDefaultSelection
decl_stmt|,
name|iDefaultSelectionNewRoom
decl_stmt|;
name|FutureOperation
parameter_list|(
name|boolean
name|defaultSelection
parameter_list|,
name|boolean
name|defaultSelectionNewRoom
parameter_list|)
block|{
name|iDefaultSelection
operator|=
name|defaultSelection
expr_stmt|;
name|iDefaultSelectionNewRoom
operator|=
name|defaultSelectionNewRoom
expr_stmt|;
block|}
name|FutureOperation
parameter_list|(
name|boolean
name|defaultSelection
parameter_list|)
block|{
name|this
argument_list|(
name|defaultSelection
argument_list|,
name|defaultSelection
argument_list|)
expr_stmt|;
block|}
name|FutureOperation
parameter_list|()
block|{
name|this
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|flag
parameter_list|()
block|{
return|return
literal|1
operator|<<
name|ordinal
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|in
parameter_list|(
name|int
name|flags
parameter_list|)
block|{
return|return
operator|(
name|flags
operator|&
name|flag
argument_list|()
operator|)
operator|!=
literal|0
return|;
block|}
specifier|public
name|int
name|set
parameter_list|(
name|int
name|flags
parameter_list|)
block|{
return|return
operator|(
name|in
argument_list|(
name|flags
argument_list|)
condition|?
name|flags
else|:
name|flags
operator|+
name|flag
argument_list|()
operator|)
return|;
block|}
specifier|public
name|int
name|clear
parameter_list|(
name|int
name|flags
parameter_list|)
block|{
return|return
operator|(
name|in
argument_list|(
name|flags
argument_list|)
condition|?
name|flags
operator|-
name|flag
argument_list|()
else|:
name|flags
operator|)
return|;
block|}
specifier|public
name|boolean
name|getDefaultSelection
parameter_list|()
block|{
return|return
name|iDefaultSelection
return|;
block|}
specifier|public
name|boolean
name|getDefaultSelectionNewRoom
parameter_list|()
block|{
return|return
name|iDefaultSelectionNewRoom
return|;
block|}
specifier|public
specifier|static
name|int
name|getFlagAllEnabled
parameter_list|()
block|{
name|int
name|ret
init|=
literal|0
decl_stmt|;
for|for
control|(
name|FutureOperation
name|op
range|:
name|values
argument_list|()
control|)
name|ret
operator|=
name|op
operator|.
name|set
argument_list|(
name|ret
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
block|}
block|}
end_class

end_unit

