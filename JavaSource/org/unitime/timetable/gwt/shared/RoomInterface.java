begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 (University Timetabling Application)  * Copyright (C) 2012, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcImplementedBy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|IsSerializable
import|;
end_import

begin_class
specifier|public
class|class
name|RoomInterface
implements|implements
name|IsSerializable
block|{
specifier|public
specifier|static
class|class
name|RoomSharingDisplayMode
implements|implements
name|IsSerializable
block|{
specifier|private
name|String
name|iName
decl_stmt|;
specifier|private
name|int
name|iFirstDay
init|=
literal|0
decl_stmt|,
name|iLastDay
init|=
literal|4
decl_stmt|,
name|iFirstSlot
init|=
literal|90
decl_stmt|,
name|iLastSlot
init|=
literal|210
decl_stmt|,
name|iStep
init|=
literal|6
decl_stmt|;
specifier|public
name|RoomSharingDisplayMode
parameter_list|()
block|{
block|}
specifier|public
name|RoomSharingDisplayMode
parameter_list|(
name|String
name|m
parameter_list|)
block|{
name|String
index|[]
name|model
init|=
name|m
operator|.
name|split
argument_list|(
literal|"\\|"
argument_list|)
decl_stmt|;
name|iName
operator|=
name|model
index|[
literal|0
index|]
expr_stmt|;
name|iFirstDay
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|model
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|iLastDay
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|model
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|iFirstSlot
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|model
index|[
literal|3
index|]
argument_list|)
expr_stmt|;
name|iLastSlot
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|model
index|[
literal|4
index|]
argument_list|)
expr_stmt|;
name|iStep
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|model
index|[
literal|5
index|]
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getFirstDay
parameter_list|()
block|{
return|return
name|iFirstDay
return|;
block|}
specifier|public
name|void
name|setFirstDay
parameter_list|(
name|int
name|firstDay
parameter_list|)
block|{
name|iFirstDay
operator|=
name|firstDay
expr_stmt|;
block|}
specifier|public
name|int
name|getLastDay
parameter_list|()
block|{
return|return
name|iLastDay
return|;
block|}
specifier|public
name|void
name|setLastDay
parameter_list|(
name|int
name|lastDay
parameter_list|)
block|{
name|iLastDay
operator|=
name|lastDay
expr_stmt|;
block|}
specifier|public
name|int
name|getFirstSlot
parameter_list|()
block|{
return|return
name|iFirstSlot
return|;
block|}
specifier|public
name|void
name|setFirstSlot
parameter_list|(
name|int
name|firstSlot
parameter_list|)
block|{
name|iFirstSlot
operator|=
name|firstSlot
expr_stmt|;
block|}
specifier|public
name|int
name|getLastSlot
parameter_list|()
block|{
return|return
name|iLastSlot
return|;
block|}
specifier|public
name|void
name|setLastSlot
parameter_list|(
name|int
name|lastSlot
parameter_list|)
block|{
name|iLastSlot
operator|=
name|lastSlot
expr_stmt|;
block|}
specifier|public
name|int
name|getStep
parameter_list|()
block|{
return|return
name|iStep
return|;
block|}
specifier|public
name|void
name|setStep
parameter_list|(
name|int
name|step
parameter_list|)
block|{
name|iStep
operator|=
name|step
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getFirstDay
argument_list|()
operator|+
literal|"|"
operator|+
name|getLastDay
argument_list|()
operator|+
literal|"|"
operator|+
name|getFirstSlot
argument_list|()
operator|+
literal|"|"
operator|+
name|getLastSlot
argument_list|()
operator|+
literal|"|"
operator|+
name|getStep
argument_list|()
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomSharingOption
implements|implements
name|IsSerializable
block|{
specifier|private
name|String
name|iCode
decl_stmt|,
name|iName
decl_stmt|;
specifier|private
name|String
name|iColor
decl_stmt|;
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|boolean
name|iEditable
decl_stmt|;
specifier|public
name|RoomSharingOption
parameter_list|()
block|{
block|}
specifier|public
name|RoomSharingOption
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|color
parameter_list|,
name|String
name|code
parameter_list|,
name|String
name|name
parameter_list|,
name|boolean
name|editable
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
name|iColor
operator|=
name|color
expr_stmt|;
name|iCode
operator|=
name|code
expr_stmt|;
name|iName
operator|=
name|name
expr_stmt|;
name|iEditable
operator|=
name|editable
expr_stmt|;
block|}
specifier|public
name|String
name|getColor
parameter_list|()
block|{
return|return
name|iColor
return|;
block|}
specifier|public
name|void
name|setColor
parameter_list|(
name|String
name|color
parameter_list|)
block|{
name|iColor
operator|=
name|color
expr_stmt|;
block|}
specifier|public
name|String
name|getCode
parameter_list|()
block|{
return|return
name|iCode
return|;
block|}
specifier|public
name|void
name|setCode
parameter_list|(
name|String
name|code
parameter_list|)
block|{
name|iCode
operator|=
name|code
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|void
name|setEditable
parameter_list|(
name|boolean
name|editable
parameter_list|)
block|{
name|iEditable
operator|=
name|editable
expr_stmt|;
block|}
specifier|public
name|boolean
name|isEditable
parameter_list|()
block|{
return|return
name|iEditable
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|RoomSharingOption
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|RoomSharingOption
operator|)
name|o
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RoomSharingModel
implements|implements
name|IsSerializable
implements|,
name|GwtRpcResponse
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iName
decl_stmt|;
specifier|private
name|Long
name|iDefaultOption
decl_stmt|;
specifier|private
name|boolean
name|iDefaultHorizontal
decl_stmt|;
specifier|private
name|List
argument_list|<
name|RoomSharingDisplayMode
argument_list|>
name|iModes
decl_stmt|;
specifier|private
name|List
argument_list|<
name|RoomSharingOption
argument_list|>
name|iOptions
decl_stmt|;
specifier|private
name|List
argument_list|<
name|RoomSharingOption
argument_list|>
name|iOtherOptions
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Integer
argument_list|,
name|Map
argument_list|<
name|Integer
argument_list|,
name|Long
argument_list|>
argument_list|>
name|iModel
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Integer
argument_list|,
name|Map
argument_list|<
name|Integer
argument_list|,
name|Boolean
argument_list|>
argument_list|>
name|iEditable
decl_stmt|;
specifier|private
name|int
name|iDefaultMode
init|=
literal|0
decl_stmt|;
specifier|private
name|boolean
name|iDefaultEditable
init|=
literal|true
decl_stmt|;
specifier|public
name|RoomSharingModel
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|void
name|addMode
parameter_list|(
name|RoomSharingDisplayMode
name|mode
parameter_list|)
block|{
if|if
condition|(
name|iModes
operator|==
literal|null
condition|)
name|iModes
operator|=
operator|new
name|ArrayList
argument_list|<
name|RoomSharingDisplayMode
argument_list|>
argument_list|()
expr_stmt|;
name|iModes
operator|.
name|add
argument_list|(
name|mode
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|RoomSharingDisplayMode
argument_list|>
name|getModes
parameter_list|()
block|{
return|return
name|iModes
return|;
block|}
specifier|public
name|void
name|setDefaultOption
parameter_list|(
name|RoomSharingOption
name|option
parameter_list|)
block|{
name|iDefaultOption
operator|=
operator|(
name|option
operator|==
literal|null
condition|?
literal|null
else|:
name|option
operator|.
name|getId
argument_list|()
operator|)
expr_stmt|;
block|}
specifier|public
name|RoomSharingOption
name|getDefaultOption
parameter_list|()
block|{
return|return
name|getOption
argument_list|(
name|iDefaultOption
argument_list|)
return|;
block|}
specifier|public
name|RoomSharingOption
name|getOption
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
if|if
condition|(
name|id
operator|==
literal|null
condition|)
name|id
operator|=
name|iDefaultOption
expr_stmt|;
if|if
condition|(
name|iOptions
operator|==
literal|null
operator|||
name|id
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|RoomSharingOption
name|option
range|:
name|iOptions
control|)
if|if
condition|(
name|option
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
return|return
name|option
return|;
return|return
operator|(
operator|!
name|id
operator|.
name|equals
argument_list|(
name|iDefaultOption
argument_list|)
condition|?
name|getOption
argument_list|(
name|iDefaultOption
argument_list|)
else|:
literal|null
operator|)
return|;
block|}
specifier|public
name|void
name|addOption
parameter_list|(
name|RoomSharingOption
name|option
parameter_list|)
block|{
if|if
condition|(
name|iOptions
operator|==
literal|null
condition|)
name|iOptions
operator|=
operator|new
name|ArrayList
argument_list|<
name|RoomSharingOption
argument_list|>
argument_list|()
expr_stmt|;
name|iOptions
operator|.
name|add
argument_list|(
name|option
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addOther
parameter_list|(
name|RoomSharingOption
name|option
parameter_list|)
block|{
if|if
condition|(
name|iOtherOptions
operator|==
literal|null
condition|)
name|iOtherOptions
operator|=
operator|new
name|ArrayList
argument_list|<
name|RoomSharingOption
argument_list|>
argument_list|()
expr_stmt|;
name|iOtherOptions
operator|.
name|add
argument_list|(
name|option
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|RoomSharingOption
argument_list|>
name|getAdditionalOptions
parameter_list|()
block|{
name|List
argument_list|<
name|RoomSharingOption
argument_list|>
name|other
init|=
operator|new
name|ArrayList
argument_list|<
name|RoomSharingOption
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|iOtherOptions
operator|==
literal|null
operator|||
name|iOtherOptions
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
name|other
return|;
for|for
control|(
name|RoomSharingOption
name|option
range|:
name|iOtherOptions
control|)
if|if
condition|(
operator|!
name|iOptions
operator|.
name|contains
argument_list|(
name|option
argument_list|)
condition|)
name|other
operator|.
name|add
argument_list|(
name|option
argument_list|)
expr_stmt|;
return|return
name|other
return|;
block|}
specifier|public
name|List
argument_list|<
name|RoomSharingOption
argument_list|>
name|getOptions
parameter_list|()
block|{
return|return
name|iOptions
return|;
block|}
specifier|public
name|boolean
name|isEditable
parameter_list|()
block|{
if|if
condition|(
name|iOptions
operator|==
literal|null
condition|)
return|return
literal|false
return|;
for|for
control|(
name|RoomSharingOption
name|option
range|:
name|iOptions
control|)
if|if
condition|(
name|option
operator|.
name|isEditable
argument_list|()
condition|)
block|{
if|if
condition|(
name|iDefaultEditable
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|iEditable
operator|==
literal|null
operator|||
name|iEditable
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|false
return|;
for|for
control|(
name|Map
argument_list|<
name|Integer
argument_list|,
name|Boolean
argument_list|>
name|slot2ed
range|:
name|iEditable
operator|.
name|values
argument_list|()
control|)
for|for
control|(
name|Boolean
name|ed
range|:
name|slot2ed
operator|.
name|values
argument_list|()
control|)
if|if
condition|(
name|ed
condition|)
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|RoomSharingOption
name|getOption
parameter_list|(
name|int
name|day
parameter_list|,
name|int
name|slot
parameter_list|)
block|{
if|if
condition|(
name|iModel
operator|==
literal|null
condition|)
return|return
name|getOption
argument_list|(
name|iDefaultOption
argument_list|)
return|;
name|Map
argument_list|<
name|Integer
argument_list|,
name|Long
argument_list|>
name|slot2id
init|=
name|iModel
operator|.
name|get
argument_list|(
name|day
argument_list|)
decl_stmt|;
return|return
name|getOption
argument_list|(
name|slot2id
operator|==
literal|null
condition|?
literal|null
else|:
name|slot2id
operator|.
name|get
argument_list|(
name|slot
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|void
name|setOption
parameter_list|(
name|int
name|day
parameter_list|,
name|int
name|slot
parameter_list|,
name|Long
name|optionId
parameter_list|)
block|{
if|if
condition|(
name|iModel
operator|==
literal|null
condition|)
name|iModel
operator|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|Map
argument_list|<
name|Integer
argument_list|,
name|Long
argument_list|>
argument_list|>
argument_list|()
expr_stmt|;
name|Map
argument_list|<
name|Integer
argument_list|,
name|Long
argument_list|>
name|slot2id
init|=
name|iModel
operator|.
name|get
argument_list|(
name|day
argument_list|)
decl_stmt|;
if|if
condition|(
name|slot2id
operator|==
literal|null
condition|)
block|{
name|slot2id
operator|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|Long
argument_list|>
argument_list|()
expr_stmt|;
name|iModel
operator|.
name|put
argument_list|(
name|day
argument_list|,
name|slot2id
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|optionId
operator|==
literal|null
condition|)
name|slot2id
operator|.
name|remove
argument_list|(
name|slot
argument_list|)
expr_stmt|;
else|else
name|slot2id
operator|.
name|put
argument_list|(
name|slot
argument_list|,
name|optionId
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setOption
parameter_list|(
name|int
name|day
parameter_list|,
name|int
name|slot
parameter_list|,
name|int
name|step
parameter_list|,
name|RoomSharingOption
name|option
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|step
condition|;
name|i
operator|++
control|)
name|setOption
argument_list|(
name|day
argument_list|,
name|slot
operator|+
name|i
argument_list|,
name|option
operator|==
literal|null
condition|?
literal|null
else|:
name|option
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isEditable
parameter_list|(
name|int
name|day
parameter_list|,
name|int
name|slot
parameter_list|)
block|{
if|if
condition|(
name|iEditable
operator|==
literal|null
condition|)
return|return
name|iDefaultEditable
return|;
name|Map
argument_list|<
name|Integer
argument_list|,
name|Boolean
argument_list|>
name|slot2ed
init|=
name|iEditable
operator|.
name|get
argument_list|(
name|day
argument_list|)
decl_stmt|;
if|if
condition|(
name|slot2ed
operator|==
literal|null
condition|)
return|return
name|iDefaultEditable
return|;
name|Boolean
name|ed
init|=
name|slot2ed
operator|.
name|get
argument_list|(
name|slot
argument_list|)
decl_stmt|;
return|return
operator|(
name|ed
operator|==
literal|null
condition|?
name|iDefaultEditable
else|:
name|ed
operator|)
return|;
block|}
specifier|public
name|boolean
name|isEditable
parameter_list|(
name|int
name|day
parameter_list|,
name|int
name|slot
parameter_list|,
name|int
name|step
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|step
condition|;
name|i
operator|++
control|)
if|if
condition|(
operator|!
name|isEditable
argument_list|(
name|day
argument_list|,
name|slot
operator|+
name|i
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|setEditable
parameter_list|(
name|int
name|day
parameter_list|,
name|int
name|slot
parameter_list|,
name|boolean
name|editable
parameter_list|)
block|{
if|if
condition|(
name|iEditable
operator|==
literal|null
condition|)
name|iEditable
operator|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|Map
argument_list|<
name|Integer
argument_list|,
name|Boolean
argument_list|>
argument_list|>
argument_list|()
expr_stmt|;
name|Map
argument_list|<
name|Integer
argument_list|,
name|Boolean
argument_list|>
name|slot2ed
init|=
name|iEditable
operator|.
name|get
argument_list|(
name|day
argument_list|)
decl_stmt|;
if|if
condition|(
name|slot2ed
operator|==
literal|null
condition|)
block|{
name|slot2ed
operator|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|Boolean
argument_list|>
argument_list|()
expr_stmt|;
name|iEditable
operator|.
name|put
argument_list|(
name|day
argument_list|,
name|slot2ed
argument_list|)
expr_stmt|;
block|}
name|slot2ed
operator|.
name|put
argument_list|(
name|slot
argument_list|,
name|editable
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDefaultEditable
parameter_list|(
name|boolean
name|editable
parameter_list|)
block|{
name|iDefaultEditable
operator|=
name|editable
expr_stmt|;
block|}
specifier|public
name|boolean
name|isDefaultHorizontal
parameter_list|()
block|{
return|return
name|iDefaultHorizontal
return|;
block|}
specifier|public
name|void
name|setDefaultHorizontal
parameter_list|(
name|boolean
name|horizontal
parameter_list|)
block|{
name|iDefaultHorizontal
operator|=
name|horizontal
expr_stmt|;
block|}
specifier|public
name|int
name|getDefaultMode
parameter_list|()
block|{
return|return
name|iDefaultMode
return|;
block|}
specifier|public
name|void
name|setDefaultMode
parameter_list|(
name|int
name|mode
parameter_list|)
block|{
name|iDefaultMode
operator|=
name|mode
expr_stmt|;
block|}
block|}
annotation|@
name|GwtRpcImplementedBy
argument_list|(
literal|"org.unitime.timetable.server.rooms.RoomSharingBackend"
argument_list|)
specifier|public
specifier|static
class|class
name|RoomSharingRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|RoomSharingModel
argument_list|>
block|{
specifier|public
specifier|static
enum|enum
name|Operation
implements|implements
name|IsSerializable
block|{
name|LOAD
block|,
name|SAVE
block|}
specifier|private
name|Operation
name|iOperation
decl_stmt|;
specifier|private
name|Long
name|iLocationId
decl_stmt|;
specifier|private
name|RoomSharingModel
name|iModel
decl_stmt|;
specifier|public
name|RoomSharingRequest
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getLocationId
parameter_list|()
block|{
return|return
name|iLocationId
return|;
block|}
specifier|public
name|void
name|setLocationId
parameter_list|(
name|Long
name|locationId
parameter_list|)
block|{
name|iLocationId
operator|=
name|locationId
expr_stmt|;
block|}
specifier|public
name|RoomSharingModel
name|getModel
parameter_list|()
block|{
return|return
name|iModel
return|;
block|}
specifier|public
name|void
name|setModel
parameter_list|(
name|RoomSharingModel
name|model
parameter_list|)
block|{
name|iModel
operator|=
name|model
expr_stmt|;
block|}
specifier|public
name|Operation
name|getOperation
parameter_list|()
block|{
return|return
name|iOperation
return|;
block|}
specifier|public
name|void
name|setOperation
parameter_list|(
name|Operation
name|operation
parameter_list|)
block|{
name|iOperation
operator|=
name|operation
expr_stmt|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getOperation
argument_list|()
operator|.
name|name
argument_list|()
operator|+
literal|"["
operator|+
name|getLocationId
argument_list|()
operator|+
literal|"]"
return|;
block|}
specifier|public
specifier|static
name|RoomSharingRequest
name|load
parameter_list|(
name|Long
name|locationId
parameter_list|)
block|{
name|RoomSharingRequest
name|request
init|=
operator|new
name|RoomSharingRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setOperation
argument_list|(
name|Operation
operator|.
name|LOAD
argument_list|)
expr_stmt|;
name|request
operator|.
name|setLocationId
argument_list|(
name|locationId
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
specifier|public
specifier|static
name|RoomSharingRequest
name|save
parameter_list|(
name|Long
name|locationId
parameter_list|,
name|RoomSharingModel
name|model
parameter_list|)
block|{
name|RoomSharingRequest
name|request
init|=
operator|new
name|RoomSharingRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setOperation
argument_list|(
name|Operation
operator|.
name|SAVE
argument_list|)
expr_stmt|;
name|request
operator|.
name|setLocationId
argument_list|(
name|locationId
argument_list|)
expr_stmt|;
name|request
operator|.
name|setModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
return|return
name|request
return|;
block|}
block|}
block|}
end_class

end_unit

