begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
operator|.
name|ErrorMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|RequestedCourse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|EligibilityCheck
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|GradeMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|GradeModes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|StudentSectioningContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|EligibilityCheck
operator|.
name|EligibilityFlag
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|IsSerializable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestOracle
operator|.
name|Suggestion
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|SpecialRegistrationInterface
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|public
specifier|static
class|class
name|SpecialRegistrationContext
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|boolean
name|iSpecReg
init|=
literal|false
decl_stmt|;
specifier|private
name|String
name|iSpecRegRequestId
init|=
literal|null
decl_stmt|;
specifier|private
name|boolean
name|iSpecRegDisclaimerAccepted
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|iSpecRegTimeConfs
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|iSpecRegSpaceConfs
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|iSpecRegLinkedConfs
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|iSpecRegDeadlineConfs
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|iSpecRegChangeRequestNote
init|=
literal|false
decl_stmt|;
specifier|private
name|SpecialRegistrationStatus
name|iSpecRegStatus
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iNote
decl_stmt|;
specifier|private
name|String
name|iDisclaimer
decl_stmt|;
specifier|private
name|boolean
name|iCanRequire
init|=
literal|true
decl_stmt|;
specifier|private
name|ChangeRequestorNoteInterface
name|iChangeRequestorNote
init|=
literal|null
decl_stmt|;
specifier|public
name|SpecialRegistrationContext
parameter_list|()
block|{
block|}
specifier|public
name|SpecialRegistrationContext
parameter_list|(
name|SpecialRegistrationContext
name|cx
parameter_list|)
block|{
name|copy
argument_list|(
name|cx
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|copy
parameter_list|(
name|SpecialRegistrationContext
name|cx
parameter_list|)
block|{
name|iSpecReg
operator|=
name|cx
operator|.
name|iSpecReg
expr_stmt|;
name|iSpecRegRequestId
operator|=
name|cx
operator|.
name|iSpecRegRequestId
expr_stmt|;
name|iSpecRegDisclaimerAccepted
operator|=
name|cx
operator|.
name|iSpecRegDisclaimerAccepted
expr_stmt|;
name|iSpecRegTimeConfs
operator|=
name|cx
operator|.
name|iSpecRegTimeConfs
expr_stmt|;
name|iSpecRegSpaceConfs
operator|=
name|cx
operator|.
name|iSpecRegSpaceConfs
expr_stmt|;
name|iSpecRegLinkedConfs
operator|=
name|cx
operator|.
name|iSpecRegLinkedConfs
expr_stmt|;
name|iSpecRegDeadlineConfs
operator|=
name|cx
operator|.
name|iSpecRegDeadlineConfs
expr_stmt|;
name|iSpecRegStatus
operator|=
name|cx
operator|.
name|iSpecRegStatus
expr_stmt|;
name|iNote
operator|=
name|cx
operator|.
name|iNote
expr_stmt|;
name|iCanRequire
operator|=
name|cx
operator|.
name|iCanRequire
expr_stmt|;
name|iSpecRegChangeRequestNote
operator|=
name|cx
operator|.
name|iSpecRegChangeRequestNote
expr_stmt|;
block|}
specifier|public
name|boolean
name|isEnabled
parameter_list|()
block|{
return|return
name|iSpecReg
return|;
block|}
specifier|public
name|void
name|setEnabled
parameter_list|(
name|boolean
name|specReg
parameter_list|)
block|{
name|iSpecReg
operator|=
name|specReg
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasRequestId
parameter_list|()
block|{
return|return
name|iSpecRegRequestId
operator|!=
literal|null
return|;
block|}
specifier|public
name|String
name|getRequestId
parameter_list|()
block|{
return|return
name|iSpecRegRequestId
return|;
block|}
specifier|public
name|void
name|setRequestId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|iSpecRegRequestId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanSubmit
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|isDisclaimerAccepted
parameter_list|()
block|{
return|return
name|iSpecRegDisclaimerAccepted
return|;
block|}
specifier|public
name|void
name|setDisclaimerAccepted
parameter_list|(
name|boolean
name|accepted
parameter_list|)
block|{
name|iSpecRegDisclaimerAccepted
operator|=
name|accepted
expr_stmt|;
block|}
specifier|public
name|boolean
name|areTimeConflictsAllowed
parameter_list|()
block|{
return|return
name|iSpecRegTimeConfs
return|;
block|}
specifier|public
name|void
name|setTimeConflictsAllowed
parameter_list|(
name|boolean
name|allow
parameter_list|)
block|{
name|iSpecRegTimeConfs
operator|=
name|allow
expr_stmt|;
block|}
specifier|public
name|boolean
name|areSpaceConflictsAllowed
parameter_list|()
block|{
return|return
name|iSpecRegSpaceConfs
return|;
block|}
specifier|public
name|void
name|setSpaceConflictsAllowed
parameter_list|(
name|boolean
name|allow
parameter_list|)
block|{
name|iSpecRegSpaceConfs
operator|=
name|allow
expr_stmt|;
block|}
specifier|public
name|boolean
name|areLinkedConflictsAllowed
parameter_list|()
block|{
return|return
name|iSpecRegLinkedConfs
return|;
block|}
specifier|public
name|void
name|setLinkedConflictsAllowed
parameter_list|(
name|boolean
name|allow
parameter_list|)
block|{
name|iSpecRegLinkedConfs
operator|=
name|allow
expr_stmt|;
block|}
specifier|public
name|boolean
name|areDeadlineConflictsAllowed
parameter_list|()
block|{
return|return
name|iSpecRegDeadlineConfs
return|;
block|}
specifier|public
name|void
name|setDeadlineConflictsAllowed
parameter_list|(
name|boolean
name|allow
parameter_list|)
block|{
name|iSpecRegDeadlineConfs
operator|=
name|allow
expr_stmt|;
block|}
specifier|public
name|SpecialRegistrationStatus
name|getStatus
parameter_list|()
block|{
return|return
name|iSpecRegStatus
return|;
block|}
specifier|public
name|void
name|setStatus
parameter_list|(
name|SpecialRegistrationStatus
name|status
parameter_list|)
block|{
name|iSpecRegStatus
operator|=
name|status
expr_stmt|;
block|}
specifier|public
name|String
name|getNote
parameter_list|()
block|{
return|return
name|iNote
return|;
block|}
specifier|public
name|void
name|setNote
parameter_list|(
name|String
name|note
parameter_list|)
block|{
name|iNote
operator|=
name|note
expr_stmt|;
block|}
specifier|public
name|String
name|getDisclaimer
parameter_list|()
block|{
return|return
name|iDisclaimer
return|;
block|}
specifier|public
name|void
name|setDisclaimer
parameter_list|(
name|String
name|disclaimer
parameter_list|)
block|{
name|iDisclaimer
operator|=
name|disclaimer
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasDisclaimer
parameter_list|()
block|{
return|return
name|iDisclaimer
operator|!=
literal|null
operator|&&
operator|!
name|iDisclaimer
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isCanRequire
parameter_list|()
block|{
return|return
name|iCanRequire
return|;
block|}
specifier|public
name|void
name|setCanRequire
parameter_list|(
name|boolean
name|canRequire
parameter_list|)
block|{
name|iCanRequire
operator|=
name|canRequire
expr_stmt|;
block|}
specifier|public
name|boolean
name|isAllowChangeRequestNote
parameter_list|()
block|{
return|return
name|iSpecRegChangeRequestNote
return|;
block|}
specifier|public
name|void
name|setAllowChangeRequestNote
parameter_list|(
name|boolean
name|changeRequestNote
parameter_list|)
block|{
name|iSpecRegChangeRequestNote
operator|=
name|changeRequestNote
expr_stmt|;
block|}
specifier|public
name|void
name|update
parameter_list|(
name|EligibilityCheck
name|check
parameter_list|)
block|{
name|iSpecRegTimeConfs
operator|=
name|check
operator|!=
literal|null
operator|&&
name|check
operator|.
name|hasFlag
argument_list|(
name|EligibilityFlag
operator|.
name|SR_TIME_CONF
argument_list|)
expr_stmt|;
name|iSpecRegSpaceConfs
operator|=
name|check
operator|!=
literal|null
operator|&&
name|check
operator|.
name|hasFlag
argument_list|(
name|EligibilityFlag
operator|.
name|SR_LIMIT_CONF
argument_list|)
expr_stmt|;
name|iSpecRegLinkedConfs
operator|=
name|check
operator|!=
literal|null
operator|&&
name|check
operator|.
name|hasFlag
argument_list|(
name|EligibilityFlag
operator|.
name|SR_LINK_CONF
argument_list|)
expr_stmt|;
name|iSpecRegDeadlineConfs
operator|=
name|check
operator|!=
literal|null
operator|&&
name|check
operator|.
name|hasFlag
argument_list|(
name|EligibilityFlag
operator|.
name|SR_EXTENDED
argument_list|)
expr_stmt|;
name|iSpecReg
operator|=
name|check
operator|!=
literal|null
operator|&&
name|check
operator|.
name|hasFlag
argument_list|(
name|EligibilityFlag
operator|.
name|CAN_SPECREG
argument_list|)
expr_stmt|;
name|iDisclaimer
operator|=
operator|(
name|check
operator|!=
literal|null
condition|?
name|check
operator|.
name|getOverrideRequestDisclaimer
argument_list|()
else|:
literal|null
operator|)
expr_stmt|;
name|iCanRequire
operator|=
name|check
operator|==
literal|null
operator|||
name|check
operator|.
name|hasFlag
argument_list|(
name|EligibilityFlag
operator|.
name|CAN_REQUIRE
argument_list|)
expr_stmt|;
name|iSpecRegChangeRequestNote
operator|=
name|check
operator|!=
literal|null
operator|&&
name|check
operator|.
name|hasFlag
argument_list|(
name|EligibilityFlag
operator|.
name|SR_CHANGE_NOTE
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|reset
parameter_list|()
block|{
name|iNote
operator|=
literal|null
expr_stmt|;
name|iSpecReg
operator|=
literal|false
expr_stmt|;
name|iSpecRegRequestId
operator|=
literal|null
expr_stmt|;
name|iSpecRegDisclaimerAccepted
operator|=
literal|false
expr_stmt|;
name|iSpecRegTimeConfs
operator|=
literal|false
expr_stmt|;
name|iSpecRegSpaceConfs
operator|=
literal|false
expr_stmt|;
name|iSpecRegLinkedConfs
operator|=
literal|false
expr_stmt|;
name|iSpecRegDeadlineConfs
operator|=
literal|false
expr_stmt|;
name|iSpecRegStatus
operator|=
literal|null
expr_stmt|;
name|iDisclaimer
operator|=
literal|null
expr_stmt|;
name|iCanRequire
operator|=
literal|true
expr_stmt|;
name|iSpecRegChangeRequestNote
operator|=
literal|false
expr_stmt|;
block|}
specifier|public
name|void
name|reset
parameter_list|(
name|EligibilityCheck
name|check
parameter_list|)
block|{
name|reset
argument_list|()
expr_stmt|;
if|if
condition|(
name|check
operator|!=
literal|null
condition|)
name|update
argument_list|(
name|check
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setChangeRequestorNote
parameter_list|(
name|ChangeRequestorNoteInterface
name|changeRequestorNote
parameter_list|)
block|{
name|iChangeRequestorNote
operator|=
name|changeRequestorNote
expr_stmt|;
block|}
specifier|public
name|ChangeRequestorNoteInterface
name|getChangeRequestorNoteInterface
parameter_list|()
block|{
return|return
name|iChangeRequestorNote
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|SpecialRegistrationEligibilityRequest
extends|extends
name|StudentSectioningContext
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|String
name|iRequestId
decl_stmt|;
specifier|private
name|Collection
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
name|iClassAssignments
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
name|iErrors
init|=
literal|null
decl_stmt|;
specifier|public
name|SpecialRegistrationEligibilityRequest
parameter_list|()
block|{
block|}
specifier|public
name|SpecialRegistrationEligibilityRequest
parameter_list|(
name|StudentSectioningContext
name|cx
parameter_list|,
name|String
name|requestId
parameter_list|,
name|Collection
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
name|assignments
parameter_list|,
name|Collection
argument_list|<
name|ErrorMessage
argument_list|>
name|errors
parameter_list|)
block|{
name|super
argument_list|(
name|cx
argument_list|)
expr_stmt|;
name|iClassAssignments
operator|=
name|assignments
expr_stmt|;
name|iRequestId
operator|=
name|requestId
expr_stmt|;
if|if
condition|(
name|errors
operator|!=
literal|null
condition|)
name|iErrors
operator|=
operator|new
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
argument_list|(
name|errors
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getRequestId
parameter_list|()
block|{
return|return
name|iRequestId
return|;
block|}
specifier|public
name|boolean
name|hasRequestId
parameter_list|()
block|{
return|return
name|iRequestId
operator|!=
literal|null
operator|&&
operator|!
name|iRequestId
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|setRequestId
parameter_list|(
name|String
name|requestId
parameter_list|)
block|{
name|iRequestId
operator|=
name|requestId
expr_stmt|;
block|}
specifier|public
name|Collection
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
name|getClassAssignments
parameter_list|()
block|{
return|return
name|iClassAssignments
return|;
block|}
specifier|public
name|void
name|setClassAssignments
parameter_list|(
name|Collection
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
name|assignments
parameter_list|)
block|{
name|iClassAssignments
operator|=
name|assignments
expr_stmt|;
block|}
specifier|public
name|void
name|addError
parameter_list|(
name|ErrorMessage
name|error
parameter_list|)
block|{
if|if
condition|(
name|iErrors
operator|==
literal|null
condition|)
name|iErrors
operator|=
operator|new
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
argument_list|()
expr_stmt|;
name|iErrors
operator|.
name|add
argument_list|(
name|error
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasErrors
parameter_list|()
block|{
return|return
name|iErrors
operator|!=
literal|null
operator|&&
operator|!
name|iErrors
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
name|getErrors
parameter_list|()
block|{
return|return
name|iErrors
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|SpecialRegistrationEligibilityResponse
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|String
name|iMessage
decl_stmt|;
specifier|private
name|boolean
name|iCanSubmit
decl_stmt|;
specifier|private
name|List
argument_list|<
name|ErrorMessage
argument_list|>
name|iErrors
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|ErrorMessage
argument_list|>
name|iDeniedErrors
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|ErrorMessage
argument_list|>
name|iCancelErrors
init|=
literal|null
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|iCancelRequestIds
init|=
literal|null
decl_stmt|;
specifier|private
name|Float
name|iCredit
init|=
literal|null
decl_stmt|;
specifier|public
name|SpecialRegistrationEligibilityResponse
parameter_list|()
block|{
block|}
specifier|public
name|SpecialRegistrationEligibilityResponse
parameter_list|(
name|boolean
name|canSubmit
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|iCanSubmit
operator|=
name|canSubmit
expr_stmt|;
name|iMessage
operator|=
name|message
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanSubmit
parameter_list|()
block|{
return|return
name|iCanSubmit
return|;
block|}
specifier|public
name|void
name|setCanSubmit
parameter_list|(
name|boolean
name|canSubmit
parameter_list|)
block|{
name|iCanSubmit
operator|=
name|canSubmit
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasMessage
parameter_list|()
block|{
return|return
name|iMessage
operator|!=
literal|null
operator|&&
operator|!
name|iMessage
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getMessage
parameter_list|()
block|{
return|return
name|iMessage
return|;
block|}
specifier|public
name|void
name|setMessage
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|iMessage
operator|=
name|message
expr_stmt|;
block|}
specifier|public
name|void
name|addError
parameter_list|(
name|ErrorMessage
name|error
parameter_list|)
block|{
if|if
condition|(
name|iErrors
operator|==
literal|null
condition|)
name|iErrors
operator|=
operator|new
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
argument_list|()
expr_stmt|;
name|iErrors
operator|.
name|add
argument_list|(
name|error
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasErrors
parameter_list|()
block|{
return|return
name|iErrors
operator|!=
literal|null
operator|&&
operator|!
name|iErrors
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|ErrorMessage
argument_list|>
name|getErrors
parameter_list|()
block|{
return|return
name|iErrors
return|;
block|}
specifier|public
name|void
name|setErrors
parameter_list|(
name|Collection
argument_list|<
name|ErrorMessage
argument_list|>
name|messages
parameter_list|)
block|{
if|if
condition|(
name|messages
operator|==
literal|null
condition|)
name|iErrors
operator|=
literal|null
expr_stmt|;
else|else
name|iErrors
operator|=
operator|new
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
argument_list|(
name|messages
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addCancelError
parameter_list|(
name|ErrorMessage
name|error
parameter_list|)
block|{
if|if
condition|(
name|iCancelErrors
operator|==
literal|null
condition|)
name|iCancelErrors
operator|=
operator|new
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
argument_list|()
expr_stmt|;
name|iCancelErrors
operator|.
name|add
argument_list|(
name|error
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasCancelErrors
parameter_list|()
block|{
return|return
name|iCancelErrors
operator|!=
literal|null
operator|&&
operator|!
name|iCancelErrors
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|ErrorMessage
argument_list|>
name|getCancelErrors
parameter_list|()
block|{
return|return
name|iCancelErrors
return|;
block|}
specifier|public
name|void
name|setCancelErrors
parameter_list|(
name|Collection
argument_list|<
name|ErrorMessage
argument_list|>
name|messages
parameter_list|)
block|{
if|if
condition|(
name|messages
operator|==
literal|null
condition|)
name|iCancelErrors
operator|=
literal|null
expr_stmt|;
else|else
name|iCancelErrors
operator|=
operator|new
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
argument_list|(
name|messages
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addCancelRequestId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
if|if
condition|(
name|iCancelRequestIds
operator|==
literal|null
condition|)
name|iCancelRequestIds
operator|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|iCancelRequestIds
operator|.
name|add
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasCancelRequestIds
parameter_list|()
block|{
return|return
name|iCancelRequestIds
operator|!=
literal|null
operator|&&
operator|!
name|iCancelRequestIds
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getCancelRequestIds
parameter_list|()
block|{
return|return
name|iCancelRequestIds
return|;
block|}
specifier|public
name|boolean
name|isToBeCancelled
parameter_list|(
name|String
name|requestId
parameter_list|)
block|{
return|return
name|iCancelRequestIds
operator|!=
literal|null
operator|&&
name|iCancelRequestIds
operator|.
name|contains
argument_list|(
name|requestId
argument_list|)
return|;
block|}
specifier|public
name|void
name|addDeniedError
parameter_list|(
name|ErrorMessage
name|error
parameter_list|)
block|{
if|if
condition|(
name|iDeniedErrors
operator|==
literal|null
condition|)
name|iDeniedErrors
operator|=
operator|new
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
argument_list|()
expr_stmt|;
name|iDeniedErrors
operator|.
name|add
argument_list|(
name|error
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasDeniedErrors
parameter_list|()
block|{
return|return
name|iDeniedErrors
operator|!=
literal|null
operator|&&
operator|!
name|iDeniedErrors
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|ErrorMessage
argument_list|>
name|getDeniedErrors
parameter_list|()
block|{
return|return
name|iDeniedErrors
return|;
block|}
specifier|public
name|void
name|setDeniedErrors
parameter_list|(
name|Collection
argument_list|<
name|ErrorMessage
argument_list|>
name|messages
parameter_list|)
block|{
if|if
condition|(
name|messages
operator|==
literal|null
condition|)
name|iDeniedErrors
operator|=
literal|null
expr_stmt|;
else|else
name|iDeniedErrors
operator|=
operator|new
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
argument_list|(
name|messages
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCredit
parameter_list|(
name|Float
name|credit
parameter_list|)
block|{
name|iCredit
operator|=
name|credit
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasCredit
parameter_list|()
block|{
return|return
name|iCredit
operator|!=
literal|null
return|;
block|}
specifier|public
name|Float
name|getCredit
parameter_list|()
block|{
return|return
name|iCredit
return|;
block|}
block|}
specifier|public
specifier|static
enum|enum
name|SpecialRegistrationStatus
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
name|Draft
block|,
name|Pending
block|,
name|Approved
block|,
name|Rejected
block|,
name|Cancelled
block|, 		; 	}
specifier|public
specifier|static
enum|enum
name|SpecialRegistrationOperation
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
name|Add
block|,
name|Drop
block|,
name|Keep
block|, 		; 	}
specifier|public
specifier|static
class|class
name|RetrieveSpecialRegistrationResponse
implements|implements
name|IsSerializable
implements|,
name|Serializable
implements|,
name|Comparable
argument_list|<
name|RetrieveSpecialRegistrationResponse
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|SpecialRegistrationStatus
name|iStatus
decl_stmt|;
specifier|private
name|Date
name|iSubmitDate
decl_stmt|;
specifier|private
name|String
name|iRequestId
decl_stmt|;
specifier|private
name|String
name|iDescription
decl_stmt|;
specifier|private
name|String
name|iNote
decl_stmt|;
specifier|private
name|List
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
name|iChanges
decl_stmt|;
specifier|private
name|boolean
name|iCanCancel
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|iHasTimeConflict
decl_stmt|,
name|iHasSpaceConflict
decl_stmt|,
name|iExtended
decl_stmt|,
name|iHasLinkedConflict
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
name|iErrors
init|=
literal|null
decl_stmt|;
specifier|private
name|Float
name|iMaxCredit
init|=
literal|null
decl_stmt|;
specifier|public
name|RetrieveSpecialRegistrationResponse
parameter_list|()
block|{
block|}
specifier|public
name|Date
name|getSubmitDate
parameter_list|()
block|{
return|return
name|iSubmitDate
return|;
block|}
specifier|public
name|void
name|setSubmitDate
parameter_list|(
name|Date
name|date
parameter_list|)
block|{
name|iSubmitDate
operator|=
name|date
expr_stmt|;
block|}
specifier|public
name|String
name|getRequestId
parameter_list|()
block|{
return|return
name|iRequestId
return|;
block|}
specifier|public
name|void
name|setRequestId
parameter_list|(
name|String
name|requestId
parameter_list|)
block|{
name|iRequestId
operator|=
name|requestId
expr_stmt|;
block|}
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
name|iDescription
return|;
block|}
specifier|public
name|void
name|setDescription
parameter_list|(
name|String
name|description
parameter_list|)
block|{
name|iDescription
operator|=
name|description
expr_stmt|;
block|}
specifier|public
name|String
name|getNote
parameter_list|()
block|{
return|return
name|iNote
return|;
block|}
specifier|public
name|void
name|setNote
parameter_list|(
name|String
name|note
parameter_list|)
block|{
name|iNote
operator|=
name|note
expr_stmt|;
block|}
specifier|public
name|SpecialRegistrationStatus
name|getStatus
parameter_list|()
block|{
return|return
name|iStatus
return|;
block|}
specifier|public
name|void
name|setStatus
parameter_list|(
name|SpecialRegistrationStatus
name|status
parameter_list|)
block|{
name|iStatus
operator|=
name|status
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasChanges
parameter_list|()
block|{
return|return
name|iChanges
operator|!=
literal|null
operator|&&
operator|!
name|iChanges
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
name|getChanges
parameter_list|()
block|{
return|return
name|iChanges
return|;
block|}
specifier|public
name|void
name|addChange
parameter_list|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
parameter_list|)
block|{
if|if
condition|(
name|iChanges
operator|==
literal|null
condition|)
name|iChanges
operator|=
operator|new
name|ArrayList
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
argument_list|()
expr_stmt|;
name|iChanges
operator|.
name|add
argument_list|(
name|ca
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isGradeModeChange
parameter_list|()
block|{
if|if
condition|(
name|iChanges
operator|==
literal|null
condition|)
return|return
literal|false
return|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|iChanges
control|)
if|if
condition|(
name|ca
operator|.
name|getGradeMode
argument_list|()
operator|!=
literal|null
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isCreditChange
parameter_list|()
block|{
if|if
condition|(
name|iChanges
operator|==
literal|null
condition|)
return|return
literal|false
return|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|iChanges
control|)
if|if
condition|(
name|ca
operator|.
name|getCreditHour
argument_list|()
operator|!=
literal|null
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isAdd
parameter_list|(
name|Long
name|courseId
parameter_list|)
block|{
name|boolean
name|hasDrop
init|=
literal|false
decl_stmt|,
name|hasAdd
init|=
literal|false
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|iChanges
control|)
if|if
condition|(
name|courseId
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
block|{
switch|switch
condition|(
name|ca
operator|.
name|getSpecRegOperation
argument_list|()
condition|)
block|{
case|case
name|Add
case|:
name|hasAdd
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|Drop
case|:
name|hasDrop
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
return|return
name|hasAdd
operator|&&
operator|!
name|hasDrop
return|;
block|}
specifier|public
name|boolean
name|isDrop
parameter_list|(
name|Long
name|courseId
parameter_list|)
block|{
name|boolean
name|hasDrop
init|=
literal|false
decl_stmt|,
name|hasAdd
init|=
literal|false
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|iChanges
control|)
if|if
condition|(
name|courseId
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
block|{
switch|switch
condition|(
name|ca
operator|.
name|getSpecRegOperation
argument_list|()
condition|)
block|{
case|case
name|Add
case|:
name|hasAdd
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|Drop
case|:
name|hasDrop
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
return|return
name|hasDrop
operator|&&
operator|!
name|hasAdd
return|;
block|}
specifier|public
name|boolean
name|isChange
parameter_list|(
name|Long
name|courseId
parameter_list|)
block|{
name|boolean
name|hasDrop
init|=
literal|false
decl_stmt|,
name|hasAdd
init|=
literal|false
decl_stmt|,
name|hasKeep
init|=
literal|false
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|iChanges
control|)
if|if
condition|(
name|courseId
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
block|{
switch|switch
condition|(
name|ca
operator|.
name|getSpecRegOperation
argument_list|()
condition|)
block|{
case|case
name|Add
case|:
name|hasAdd
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|Drop
case|:
name|hasDrop
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|Keep
case|:
name|hasKeep
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
return|return
name|hasKeep
operator|||
operator|(
name|hasDrop
operator|&&
name|hasAdd
operator|)
return|;
block|}
specifier|public
name|boolean
name|hasErrors
parameter_list|(
name|Long
name|courseId
parameter_list|)
block|{
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|iChanges
control|)
if|if
condition|(
name|courseId
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getCourseId
argument_list|()
argument_list|)
operator|&&
name|ca
operator|.
name|hasError
argument_list|()
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isApproved
parameter_list|(
name|Long
name|courseId
parameter_list|)
block|{
name|boolean
name|approved
init|=
literal|false
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|iChanges
control|)
if|if
condition|(
operator|!
name|ca
operator|.
name|hasError
argument_list|()
condition|)
block|{
if|if
condition|(
name|ca
operator|.
name|getSpecRegStatus
argument_list|()
operator|==
name|SpecialRegistrationStatus
operator|.
name|Approved
condition|)
name|approved
operator|=
literal|true
expr_stmt|;
else|else
return|return
literal|false
return|;
block|}
return|return
name|approved
return|;
block|}
specifier|public
name|boolean
name|isHonorsGradeModeNotFullyMatching
parameter_list|(
name|ClassAssignmentInterface
name|saved
parameter_list|)
block|{
if|if
condition|(
operator|!
name|hasChanges
argument_list|()
condition|)
return|return
literal|false
return|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ch
range|:
name|iChanges
control|)
block|{
if|if
condition|(
name|ch
operator|.
name|getGradeMode
argument_list|()
operator|!=
literal|null
operator|&&
name|ch
operator|.
name|getGradeMode
argument_list|()
operator|.
name|isHonor
argument_list|()
condition|)
block|{
name|boolean
name|found
init|=
literal|false
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|saved
operator|.
name|getClassAssignments
argument_list|()
control|)
if|if
condition|(
name|ca
operator|.
name|isSaved
argument_list|()
operator|&&
name|ch
operator|.
name|getClassId
argument_list|()
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getClassId
argument_list|()
argument_list|)
condition|)
block|{
name|found
operator|=
literal|true
expr_stmt|;
break|break;
block|}
if|if
condition|(
operator|!
name|found
condition|)
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isFullyApplied
parameter_list|(
name|ClassAssignmentInterface
name|saved
parameter_list|)
block|{
if|if
condition|(
operator|!
name|hasChanges
argument_list|()
operator|||
name|isGradeModeChange
argument_list|()
operator|||
name|isCreditChange
argument_list|()
operator|||
name|isExtended
argument_list|()
condition|)
return|return
name|getStatus
argument_list|()
operator|==
name|SpecialRegistrationStatus
operator|.
name|Approved
return|;
if|if
condition|(
name|saved
operator|==
literal|null
condition|)
return|return
literal|false
return|;
name|Set
argument_list|<
name|Long
argument_list|>
name|courseIds
init|=
operator|new
name|HashSet
argument_list|<
name|Long
argument_list|>
argument_list|()
decl_stmt|;
name|boolean
name|enrolled
init|=
literal|true
decl_stmt|,
name|gmChange
init|=
literal|false
decl_stmt|;
name|changes
label|:
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ch
range|:
name|iChanges
control|)
block|{
if|if
condition|(
name|ch
operator|.
name|getSpecRegOperation
argument_list|()
operator|==
name|SpecialRegistrationOperation
operator|.
name|Keep
condition|)
block|{
if|if
condition|(
name|ch
operator|.
name|getGradeMode
argument_list|()
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|ch
operator|.
name|getGradeMode
argument_list|()
operator|.
name|isHonor
argument_list|()
condition|)
block|{
name|boolean
name|found
init|=
literal|false
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|saved
operator|.
name|getClassAssignments
argument_list|()
control|)
if|if
condition|(
name|ca
operator|.
name|isSaved
argument_list|()
operator|&&
name|ch
operator|.
name|getClassId
argument_list|()
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getClassId
argument_list|()
argument_list|)
condition|)
block|{
name|found
operator|=
literal|true
expr_stmt|;
break|break;
block|}
if|if
condition|(
operator|!
name|found
condition|)
name|enrolled
operator|=
literal|false
expr_stmt|;
block|}
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|saved
operator|.
name|getClassAssignments
argument_list|()
control|)
if|if
condition|(
name|ca
operator|.
name|isSaved
argument_list|()
operator|&&
name|ch
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getCourseId
argument_list|()
argument_list|)
operator|&&
operator|!
name|ch
operator|.
name|getGradeMode
argument_list|()
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getGradeMode
argument_list|()
argument_list|)
condition|)
block|{
name|gmChange
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|ch
operator|.
name|getCreditHour
argument_list|()
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|saved
operator|.
name|getClassAssignments
argument_list|()
control|)
if|if
condition|(
name|ca
operator|.
name|isSaved
argument_list|()
operator|&&
name|ch
operator|.
name|getCourseId
argument_list|()
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getCourseId
argument_list|()
argument_list|)
operator|&&
name|ca
operator|.
name|getCreditHour
argument_list|()
operator|!=
literal|null
operator|&&
name|ca
operator|.
name|getCreditHour
argument_list|()
operator|.
name|equals
argument_list|(
name|ch
operator|.
name|getCreditHour
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
continue|continue;
block|}
name|Long
name|courseId
init|=
name|ch
operator|.
name|getCourseId
argument_list|()
decl_stmt|;
if|if
condition|(
name|courseIds
operator|.
name|add
argument_list|(
name|courseId
argument_list|)
condition|)
block|{
name|boolean
name|hasDrop
init|=
literal|false
decl_stmt|,
name|hasAdd
init|=
literal|false
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|iChanges
control|)
if|if
condition|(
name|courseId
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
block|{
switch|switch
condition|(
name|ca
operator|.
name|getSpecRegOperation
argument_list|()
condition|)
block|{
case|case
name|Add
case|:
name|hasAdd
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|Drop
case|:
name|hasDrop
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|hasAdd
operator|&&
operator|!
name|hasDrop
condition|)
block|{
comment|// continue, if the course is already added (ignore sections)
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|saved
operator|.
name|getClassAssignments
argument_list|()
control|)
if|if
condition|(
name|ca
operator|.
name|isSaved
argument_list|()
operator|&&
name|courseId
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
continue|continue
name|changes
continue|;
return|return
literal|false
return|;
block|}
if|else if
condition|(
name|hasDrop
operator|&&
operator|!
name|hasAdd
condition|)
block|{
comment|// continue, if the course is already dropped (ignore sections)
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|saved
operator|.
name|getClassAssignments
argument_list|()
control|)
if|if
condition|(
name|ca
operator|.
name|isSaved
argument_list|()
operator|&&
name|courseId
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
else|else
block|{
comment|// check sections with an error
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|iChanges
control|)
block|{
if|if
condition|(
name|courseId
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getCourseId
argument_list|()
argument_list|)
operator|&&
name|ca
operator|.
name|hasError
argument_list|()
condition|)
block|{
name|boolean
name|match
init|=
literal|false
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|x
range|:
name|saved
operator|.
name|getClassAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|x
operator|.
name|isSaved
argument_list|()
operator|&&
name|ca
operator|.
name|getClassId
argument_list|()
operator|.
name|equals
argument_list|(
name|x
operator|.
name|getClassId
argument_list|()
argument_list|)
condition|)
block|{
name|match
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
comment|// drop operation but section was found
if|if
condition|(
name|match
operator|&&
name|ca
operator|.
name|getSpecRegOperation
argument_list|()
operator|==
name|SpecialRegistrationOperation
operator|.
name|Drop
condition|)
return|return
literal|false
return|;
comment|// add operation but section was NOT found
if|if
condition|(
operator|!
name|match
operator|&&
name|ca
operator|.
name|getSpecRegOperation
argument_list|()
operator|==
name|SpecialRegistrationOperation
operator|.
name|Add
condition|)
return|return
literal|false
return|;
block|}
block|}
block|}
block|}
block|}
if|if
condition|(
name|gmChange
operator|&&
name|enrolled
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|isApplied
parameter_list|(
name|Long
name|courseId
parameter_list|,
name|ClassAssignmentInterface
name|saved
parameter_list|)
block|{
if|if
condition|(
name|courseId
operator|==
literal|null
operator|||
name|saved
operator|==
literal|null
condition|)
return|return
literal|false
return|;
name|boolean
name|hasDrop
init|=
literal|false
decl_stmt|,
name|hasAdd
init|=
literal|false
decl_stmt|,
name|hasKeep
init|=
literal|false
decl_stmt|;
name|GradeMode
name|gm
init|=
literal|null
decl_stmt|;
name|Float
name|vc
init|=
literal|null
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|iChanges
control|)
if|if
condition|(
name|courseId
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
block|{
switch|switch
condition|(
name|ca
operator|.
name|getSpecRegOperation
argument_list|()
condition|)
block|{
case|case
name|Add
case|:
name|hasAdd
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|Drop
case|:
name|hasDrop
operator|=
literal|true
expr_stmt|;
break|break;
case|case
name|Keep
case|:
if|if
condition|(
name|ca
operator|.
name|getGradeMode
argument_list|()
operator|!=
literal|null
condition|)
name|gm
operator|=
name|ca
operator|.
name|getGradeMode
argument_list|()
expr_stmt|;
if|if
condition|(
name|ca
operator|.
name|getCreditHour
argument_list|()
operator|!=
literal|null
condition|)
name|vc
operator|=
name|ca
operator|.
name|getCreditHour
argument_list|()
expr_stmt|;
if|if
condition|(
name|ca
operator|.
name|getGradeMode
argument_list|()
operator|==
literal|null
operator|&&
name|ca
operator|.
name|getCreditHour
argument_list|()
operator|==
literal|null
condition|)
name|hasKeep
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|gm
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|saved
operator|.
name|getClassAssignments
argument_list|()
control|)
if|if
condition|(
name|ca
operator|.
name|isSaved
argument_list|()
operator|&&
name|courseId
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
block|{
if|if
condition|(
name|ca
operator|.
name|getGradeMode
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|ca
operator|.
name|getGradeMode
argument_list|()
operator|.
name|equals
argument_list|(
name|gm
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|vc
operator|!=
literal|null
operator|&&
name|ca
operator|.
name|getCreditHour
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|ca
operator|.
name|getCreditHour
argument_list|()
operator|.
name|equals
argument_list|(
name|vc
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
if|else if
condition|(
name|vc
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|saved
operator|.
name|getClassAssignments
argument_list|()
control|)
if|if
condition|(
name|ca
operator|.
name|isSaved
argument_list|()
operator|&&
name|courseId
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
block|{
if|if
condition|(
name|ca
operator|.
name|getCreditHour
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|ca
operator|.
name|getCreditHour
argument_list|()
operator|.
name|equals
argument_list|(
name|vc
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
if|else if
condition|(
name|hasKeep
condition|)
block|{
return|return
literal|false
return|;
block|}
if|else if
condition|(
name|hasAdd
operator|&&
operator|!
name|hasDrop
condition|)
block|{
comment|// course is already added (ignore sections)
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|saved
operator|.
name|getClassAssignments
argument_list|()
control|)
if|if
condition|(
name|ca
operator|.
name|isSaved
argument_list|()
operator|&&
name|courseId
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
if|else if
condition|(
name|hasDrop
operator|&&
operator|!
name|hasAdd
condition|)
block|{
comment|// course is already dropped (ignore sections)
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|saved
operator|.
name|getClassAssignments
argument_list|()
control|)
if|if
condition|(
name|ca
operator|.
name|isSaved
argument_list|()
operator|&&
name|courseId
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getCourseId
argument_list|()
argument_list|)
condition|)
return|return
literal|false
return|;
return|return
literal|true
return|;
block|}
else|else
block|{
comment|// course is changed, check sections with errors
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|ca
range|:
name|iChanges
control|)
if|if
condition|(
name|courseId
operator|.
name|equals
argument_list|(
name|ca
operator|.
name|getCourseId
argument_list|()
argument_list|)
operator|&&
name|ca
operator|.
name|hasError
argument_list|()
condition|)
block|{
name|boolean
name|match
init|=
literal|false
decl_stmt|;
for|for
control|(
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
name|x
range|:
name|saved
operator|.
name|getClassAssignments
argument_list|()
control|)
block|{
if|if
condition|(
name|x
operator|.
name|isSaved
argument_list|()
operator|&&
name|ca
operator|.
name|getClassId
argument_list|()
operator|.
name|equals
argument_list|(
name|x
operator|.
name|getClassId
argument_list|()
argument_list|)
condition|)
block|{
name|match
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|match
operator|&&
name|ca
operator|.
name|getSpecRegOperation
argument_list|()
operator|==
name|SpecialRegistrationOperation
operator|.
name|Drop
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|match
operator|&&
name|ca
operator|.
name|getSpecRegOperation
argument_list|()
operator|==
name|SpecialRegistrationOperation
operator|.
name|Add
condition|)
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
block|}
specifier|public
name|boolean
name|canCancel
parameter_list|()
block|{
return|return
name|iCanCancel
return|;
block|}
specifier|public
name|void
name|setCanCancel
parameter_list|(
name|boolean
name|canCancel
parameter_list|)
block|{
name|iCanCancel
operator|=
name|canCancel
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasTimeConflict
parameter_list|()
block|{
return|return
name|iHasTimeConflict
return|;
block|}
specifier|public
name|void
name|setHasTimeConflict
parameter_list|(
name|boolean
name|hasTimeConflict
parameter_list|)
block|{
name|iHasTimeConflict
operator|=
name|hasTimeConflict
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasSpaceConflict
parameter_list|()
block|{
return|return
name|iHasSpaceConflict
return|;
block|}
specifier|public
name|void
name|setHasSpaceConflict
parameter_list|(
name|boolean
name|hasSpaceConflict
parameter_list|)
block|{
name|iHasSpaceConflict
operator|=
name|hasSpaceConflict
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasLinkedConflict
parameter_list|()
block|{
return|return
name|iHasLinkedConflict
return|;
block|}
specifier|public
name|void
name|setHasLinkedConflict
parameter_list|(
name|boolean
name|hasLinkedConflict
parameter_list|)
block|{
name|iHasLinkedConflict
operator|=
name|hasLinkedConflict
expr_stmt|;
block|}
specifier|public
name|boolean
name|isExtended
parameter_list|()
block|{
return|return
name|iExtended
return|;
block|}
specifier|public
name|void
name|setExtended
parameter_list|(
name|boolean
name|extended
parameter_list|)
block|{
name|iExtended
operator|=
name|extended
expr_stmt|;
block|}
specifier|public
name|void
name|addError
parameter_list|(
name|ErrorMessage
name|error
parameter_list|)
block|{
if|if
condition|(
name|iErrors
operator|==
literal|null
condition|)
name|iErrors
operator|=
operator|new
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
argument_list|()
expr_stmt|;
name|iErrors
operator|.
name|add
argument_list|(
name|error
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasErrors
parameter_list|()
block|{
return|return
name|iErrors
operator|!=
literal|null
operator|&&
operator|!
name|iErrors
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
name|getErrors
parameter_list|()
block|{
return|return
name|iErrors
return|;
block|}
specifier|public
name|void
name|setMaxCredit
parameter_list|(
name|Float
name|maxCredit
parameter_list|)
block|{
name|iMaxCredit
operator|=
name|maxCredit
expr_stmt|;
block|}
specifier|public
name|Float
name|getMaxCredit
parameter_list|()
block|{
return|return
name|iMaxCredit
return|;
block|}
specifier|public
name|boolean
name|hasMaxCredit
parameter_list|()
block|{
return|return
name|iMaxCredit
operator|!=
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|RetrieveSpecialRegistrationResponse
name|o
parameter_list|)
block|{
name|int
name|cmp
init|=
name|getSubmitDate
argument_list|()
operator|.
name|compareTo
argument_list|(
name|o
operator|.
name|getSubmitDate
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
operator|-
name|cmp
return|;
return|return
name|getRequestId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|o
operator|.
name|getRequestId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getRequestId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|RetrieveSpecialRegistrationResponse
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getRequestId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|RetrieveSpecialRegistrationResponse
operator|)
name|o
operator|)
operator|.
name|getRequestId
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|SubmitSpecialRegistrationRequest
extends|extends
name|StudentSectioningContext
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|String
name|iRequestId
decl_stmt|;
specifier|private
name|CourseRequestInterface
name|iCourses
decl_stmt|;
specifier|private
name|Collection
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
name|iClassAssignments
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
name|iErrors
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iNote
decl_stmt|;
specifier|private
name|Float
name|iCredit
decl_stmt|;
specifier|public
name|SubmitSpecialRegistrationRequest
parameter_list|()
block|{
block|}
specifier|public
name|SubmitSpecialRegistrationRequest
parameter_list|(
name|StudentSectioningContext
name|cx
parameter_list|,
name|String
name|requestId
parameter_list|,
name|CourseRequestInterface
name|courses
parameter_list|,
name|Collection
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
name|assignments
parameter_list|,
name|Collection
argument_list|<
name|ErrorMessage
argument_list|>
name|errors
parameter_list|,
name|String
name|note
parameter_list|,
name|Float
name|credit
parameter_list|)
block|{
name|super
argument_list|(
name|cx
argument_list|)
expr_stmt|;
name|iRequestId
operator|=
name|requestId
expr_stmt|;
name|iCourses
operator|=
name|courses
expr_stmt|;
name|iClassAssignments
operator|=
name|assignments
expr_stmt|;
if|if
condition|(
name|errors
operator|!=
literal|null
condition|)
name|iErrors
operator|=
operator|new
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
argument_list|(
name|errors
argument_list|)
expr_stmt|;
name|iNote
operator|=
name|note
expr_stmt|;
name|iCredit
operator|=
name|credit
expr_stmt|;
block|}
specifier|public
name|Collection
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
name|getClassAssignments
parameter_list|()
block|{
return|return
name|iClassAssignments
return|;
block|}
specifier|public
name|void
name|setClassAssignments
parameter_list|(
name|Collection
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
name|assignments
parameter_list|)
block|{
name|iClassAssignments
operator|=
name|assignments
expr_stmt|;
block|}
specifier|public
name|CourseRequestInterface
name|getCourses
parameter_list|()
block|{
return|return
name|iCourses
return|;
block|}
specifier|public
name|void
name|setCourses
parameter_list|(
name|CourseRequestInterface
name|courses
parameter_list|)
block|{
name|iCourses
operator|=
name|courses
expr_stmt|;
block|}
specifier|public
name|String
name|getRequestId
parameter_list|()
block|{
return|return
name|iRequestId
return|;
block|}
specifier|public
name|void
name|setRequestId
parameter_list|(
name|String
name|requestId
parameter_list|)
block|{
name|iRequestId
operator|=
name|requestId
expr_stmt|;
block|}
specifier|public
name|void
name|addError
parameter_list|(
name|ErrorMessage
name|error
parameter_list|)
block|{
if|if
condition|(
name|iErrors
operator|==
literal|null
condition|)
name|iErrors
operator|=
operator|new
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
argument_list|()
expr_stmt|;
name|iErrors
operator|.
name|add
argument_list|(
name|error
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasErrors
parameter_list|()
block|{
return|return
name|iErrors
operator|!=
literal|null
operator|&&
operator|!
name|iErrors
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|ArrayList
argument_list|<
name|ErrorMessage
argument_list|>
name|getErrors
parameter_list|()
block|{
return|return
name|iErrors
return|;
block|}
specifier|public
name|String
name|getNote
parameter_list|()
block|{
return|return
name|iNote
return|;
block|}
specifier|public
name|void
name|setNote
parameter_list|(
name|String
name|note
parameter_list|)
block|{
name|iNote
operator|=
name|note
expr_stmt|;
block|}
specifier|public
name|void
name|setCredit
parameter_list|(
name|Float
name|credit
parameter_list|)
block|{
name|iCredit
operator|=
name|credit
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasCredit
parameter_list|()
block|{
return|return
name|iCredit
operator|!=
literal|null
return|;
block|}
specifier|public
name|Float
name|getCredit
parameter_list|()
block|{
return|return
name|iCredit
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|SubmitSpecialRegistrationResponse
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|String
name|iRequestId
decl_stmt|;
specifier|private
name|String
name|iMessage
decl_stmt|;
specifier|private
name|boolean
name|iSuccess
decl_stmt|;
specifier|private
name|SpecialRegistrationStatus
name|iStatus
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|RetrieveSpecialRegistrationResponse
argument_list|>
name|iRequests
init|=
literal|null
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|iCancelledRequestIds
decl_stmt|;
specifier|public
name|SubmitSpecialRegistrationResponse
parameter_list|()
block|{
block|}
specifier|public
name|String
name|getRequestId
parameter_list|()
block|{
return|return
name|iRequestId
return|;
block|}
specifier|public
name|void
name|setRequestId
parameter_list|(
name|String
name|requestId
parameter_list|)
block|{
name|iRequestId
operator|=
name|requestId
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasMessage
parameter_list|()
block|{
return|return
name|iMessage
operator|!=
literal|null
operator|&&
operator|!
name|iMessage
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getMessage
parameter_list|()
block|{
return|return
name|iMessage
return|;
block|}
specifier|public
name|void
name|setMessage
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|iMessage
operator|=
name|message
expr_stmt|;
block|}
specifier|public
name|boolean
name|isSuccess
parameter_list|()
block|{
return|return
name|iSuccess
return|;
block|}
specifier|public
name|boolean
name|isFailure
parameter_list|()
block|{
return|return
operator|!
name|iSuccess
return|;
block|}
specifier|public
name|void
name|setSuccess
parameter_list|(
name|boolean
name|success
parameter_list|)
block|{
name|iSuccess
operator|=
name|success
expr_stmt|;
block|}
specifier|public
name|SpecialRegistrationStatus
name|getStatus
parameter_list|()
block|{
return|return
name|iStatus
return|;
block|}
specifier|public
name|void
name|setStatus
parameter_list|(
name|SpecialRegistrationStatus
name|status
parameter_list|)
block|{
name|iStatus
operator|=
name|status
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|RetrieveSpecialRegistrationResponse
argument_list|>
name|getRequests
parameter_list|()
block|{
return|return
name|iRequests
return|;
block|}
specifier|public
name|void
name|addRequest
parameter_list|(
name|RetrieveSpecialRegistrationResponse
name|request
parameter_list|)
block|{
if|if
condition|(
name|iRequests
operator|==
literal|null
condition|)
name|iRequests
operator|=
operator|new
name|ArrayList
argument_list|<
name|RetrieveSpecialRegistrationResponse
argument_list|>
argument_list|()
expr_stmt|;
name|iRequests
operator|.
name|add
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasRequests
parameter_list|()
block|{
return|return
name|iRequests
operator|!=
literal|null
operator|&&
operator|!
name|iRequests
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|hasRequest
parameter_list|(
name|String
name|requestId
parameter_list|)
block|{
if|if
condition|(
name|iRequests
operator|==
literal|null
condition|)
return|return
literal|false
return|;
for|for
control|(
name|RetrieveSpecialRegistrationResponse
name|r
range|:
name|iRequests
control|)
if|if
condition|(
name|requestId
operator|.
name|equals
argument_list|(
name|r
operator|.
name|getRequestId
argument_list|()
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
specifier|public
name|void
name|addCancelledRequest
parameter_list|(
name|String
name|requestId
parameter_list|)
block|{
if|if
condition|(
name|iCancelledRequestIds
operator|==
literal|null
condition|)
name|iCancelledRequestIds
operator|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|iCancelledRequestIds
operator|.
name|add
argument_list|(
name|requestId
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasCancelledRequestIds
parameter_list|()
block|{
return|return
name|iCancelledRequestIds
operator|!=
literal|null
operator|&&
operator|!
name|iCancelledRequestIds
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getCancelledRequestIds
parameter_list|()
block|{
return|return
name|iCancelledRequestIds
return|;
block|}
specifier|public
name|boolean
name|isCancelledRequest
parameter_list|(
name|String
name|requestId
parameter_list|)
block|{
return|return
name|iCancelledRequestIds
operator|!=
literal|null
operator|&&
name|iCancelledRequestIds
operator|.
name|contains
argument_list|(
name|requestId
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RetrieveAllSpecialRegistrationsRequest
extends|extends
name|StudentSectioningContext
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|public
name|RetrieveAllSpecialRegistrationsRequest
parameter_list|()
block|{
block|}
specifier|public
name|RetrieveAllSpecialRegistrationsRequest
parameter_list|(
name|StudentSectioningContext
name|cx
parameter_list|)
block|{
name|super
argument_list|(
name|cx
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|CancelSpecialRegistrationRequest
extends|extends
name|StudentSectioningContext
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|String
name|iRequestId
decl_stmt|;
specifier|public
name|CancelSpecialRegistrationRequest
parameter_list|()
block|{
block|}
specifier|public
name|CancelSpecialRegistrationRequest
parameter_list|(
name|StudentSectioningContext
name|cx
parameter_list|)
block|{
name|super
argument_list|(
name|cx
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getRequestId
parameter_list|()
block|{
return|return
name|iRequestId
return|;
block|}
specifier|public
name|void
name|setRequestId
parameter_list|(
name|String
name|requestId
parameter_list|)
block|{
name|iRequestId
operator|=
name|requestId
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|CancelSpecialRegistrationResponse
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|boolean
name|iSuccess
decl_stmt|;
specifier|private
name|String
name|iMessage
decl_stmt|;
specifier|public
name|CancelSpecialRegistrationResponse
parameter_list|()
block|{
block|}
specifier|public
name|boolean
name|isSuccess
parameter_list|()
block|{
return|return
name|iSuccess
return|;
block|}
specifier|public
name|boolean
name|isFailure
parameter_list|()
block|{
return|return
operator|!
name|iSuccess
return|;
block|}
specifier|public
name|void
name|setSuccess
parameter_list|(
name|boolean
name|success
parameter_list|)
block|{
name|iSuccess
operator|=
name|success
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasMessage
parameter_list|()
block|{
return|return
name|iMessage
operator|!=
literal|null
operator|&&
operator|!
name|iMessage
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getMessage
parameter_list|()
block|{
return|return
name|iMessage
return|;
block|}
specifier|public
name|void
name|setMessage
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|iMessage
operator|=
name|message
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RetrieveAvailableGradeModesRequest
extends|extends
name|StudentSectioningContext
implements|implements
name|GwtRpcRequest
argument_list|<
name|RetrieveAvailableGradeModesResponse
argument_list|>
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|public
name|RetrieveAvailableGradeModesRequest
parameter_list|()
block|{
block|}
specifier|public
name|RetrieveAvailableGradeModesRequest
parameter_list|(
name|StudentSectioningContext
name|cx
parameter_list|)
block|{
name|super
argument_list|(
name|cx
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RetrieveAvailableGradeModesResponse
implements|implements
name|GwtRpcResponse
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|SpecialRegistrationGradeModeChanges
argument_list|>
name|iModes
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|SpecialRegistrationGradeModeChanges
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|SpecialRegistrationVariableCreditChange
argument_list|>
name|iVarCreds
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|SpecialRegistrationVariableCreditChange
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Float
name|iMaxCredit
decl_stmt|,
name|iCurrentCredit
decl_stmt|;
specifier|public
name|RetrieveAvailableGradeModesResponse
parameter_list|()
block|{
block|}
specifier|public
name|boolean
name|hasGradeModes
parameter_list|()
block|{
return|return
operator|!
name|iModes
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|add
parameter_list|(
name|String
name|sectionId
parameter_list|,
name|SpecialRegistrationGradeModeChanges
name|modes
parameter_list|)
block|{
name|iModes
operator|.
name|put
argument_list|(
name|sectionId
argument_list|,
name|modes
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasVariableCredits
parameter_list|()
block|{
return|return
operator|!
name|iVarCreds
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|add
parameter_list|(
name|String
name|sectionId
parameter_list|,
name|SpecialRegistrationVariableCreditChange
name|var
parameter_list|)
block|{
name|iVarCreds
operator|.
name|put
argument_list|(
name|sectionId
argument_list|,
name|var
argument_list|)
expr_stmt|;
block|}
specifier|public
name|SpecialRegistrationGradeModeChanges
name|get
parameter_list|(
name|ClassAssignment
name|a
parameter_list|)
block|{
if|if
condition|(
name|a
operator|.
name|getExternalId
argument_list|()
operator|==
literal|null
condition|)
return|return
literal|null
return|;
if|if
condition|(
name|a
operator|.
name|getParentSection
argument_list|()
operator|!=
literal|null
operator|&&
name|a
operator|.
name|getParentSection
argument_list|()
operator|.
name|equals
argument_list|(
name|a
operator|.
name|getSection
argument_list|()
argument_list|)
condition|)
return|return
literal|null
return|;
return|return
name|iModes
operator|.
name|get
argument_list|(
name|a
operator|.
name|getExternalId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|SpecialRegistrationVariableCreditChange
name|getVariableCredits
parameter_list|(
name|ClassAssignment
name|a
parameter_list|)
block|{
if|if
condition|(
name|a
operator|.
name|getExternalId
argument_list|()
operator|==
literal|null
condition|)
return|return
literal|null
return|;
if|if
condition|(
name|a
operator|.
name|getParentSection
argument_list|()
operator|!=
literal|null
operator|&&
name|a
operator|.
name|getParentSection
argument_list|()
operator|.
name|equals
argument_list|(
name|a
operator|.
name|getSection
argument_list|()
argument_list|)
condition|)
return|return
literal|null
return|;
return|return
name|iVarCreds
operator|.
name|get
argument_list|(
name|a
operator|.
name|getExternalId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|Float
name|getMaxCredit
parameter_list|()
block|{
return|return
name|iMaxCredit
return|;
block|}
specifier|public
name|void
name|setMaxCredit
parameter_list|(
name|Float
name|credit
parameter_list|)
block|{
name|iMaxCredit
operator|=
name|credit
expr_stmt|;
block|}
specifier|public
name|Float
name|getCurrentCredit
parameter_list|()
block|{
return|return
name|iCurrentCredit
return|;
block|}
specifier|public
name|void
name|setCurrentCredit
parameter_list|(
name|Float
name|credit
parameter_list|)
block|{
name|iCurrentCredit
operator|=
name|credit
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|SpecialRegistrationGradeMode
extends|extends
name|GradeMode
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|iApprovals
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iDisclaimer
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iOriginalGradeMode
init|=
literal|null
decl_stmt|;
specifier|public
name|SpecialRegistrationGradeMode
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|SpecialRegistrationGradeMode
parameter_list|(
name|String
name|code
parameter_list|,
name|String
name|label
parameter_list|,
name|boolean
name|honors
parameter_list|)
block|{
name|super
argument_list|(
name|code
argument_list|,
name|label
argument_list|,
name|honors
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasApprovals
parameter_list|()
block|{
return|return
name|iApprovals
operator|!=
literal|null
operator|&&
operator|!
name|iApprovals
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getApprovals
parameter_list|()
block|{
return|return
name|iApprovals
return|;
block|}
specifier|public
name|void
name|addApproval
parameter_list|(
name|String
name|approval
parameter_list|)
block|{
if|if
condition|(
name|iApprovals
operator|==
literal|null
condition|)
name|iApprovals
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|iApprovals
operator|.
name|add
argument_list|(
name|approval
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasDisclaimer
parameter_list|()
block|{
return|return
name|iDisclaimer
operator|!=
literal|null
operator|&&
operator|!
name|iDisclaimer
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getDisclaimer
parameter_list|()
block|{
return|return
name|iDisclaimer
return|;
block|}
specifier|public
name|void
name|setDisclaimer
parameter_list|(
name|String
name|disclaimer
parameter_list|)
block|{
name|iDisclaimer
operator|=
name|disclaimer
expr_stmt|;
block|}
specifier|public
name|String
name|getOriginalGradeMode
parameter_list|()
block|{
return|return
name|iOriginalGradeMode
return|;
block|}
specifier|public
name|void
name|setOriginalGradeMode
parameter_list|(
name|String
name|mode
parameter_list|)
block|{
name|iOriginalGradeMode
operator|=
name|mode
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|SpecialRegistrationVariableCredit
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|iApprovals
init|=
literal|null
decl_stmt|;
specifier|private
name|Float
name|iCredit
init|=
literal|null
decl_stmt|;
specifier|private
name|Float
name|iOriginalCredit
init|=
literal|null
decl_stmt|;
specifier|public
name|SpecialRegistrationVariableCredit
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|SpecialRegistrationVariableCredit
parameter_list|(
name|SpecialRegistrationVariableCreditChange
name|change
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
if|if
condition|(
name|change
operator|.
name|hasApprovals
argument_list|()
condition|)
name|iApprovals
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|(
name|change
operator|.
name|getApprovals
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasApprovals
parameter_list|()
block|{
return|return
name|iApprovals
operator|!=
literal|null
operator|&&
operator|!
name|iApprovals
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getApprovals
parameter_list|()
block|{
return|return
name|iApprovals
return|;
block|}
specifier|public
name|void
name|addApproval
parameter_list|(
name|String
name|approval
parameter_list|)
block|{
if|if
condition|(
name|iApprovals
operator|==
literal|null
condition|)
name|iApprovals
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|iApprovals
operator|.
name|add
argument_list|(
name|approval
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Float
name|getOriginalCredit
parameter_list|()
block|{
return|return
name|iOriginalCredit
return|;
block|}
specifier|public
name|void
name|setOriginalCredit
parameter_list|(
name|Float
name|credit
parameter_list|)
block|{
name|iOriginalCredit
operator|=
name|credit
expr_stmt|;
block|}
specifier|public
name|Float
name|getCredit
parameter_list|()
block|{
return|return
name|iCredit
return|;
block|}
specifier|public
name|void
name|setCredit
parameter_list|(
name|Float
name|credit
parameter_list|)
block|{
name|iCredit
operator|=
name|credit
expr_stmt|;
block|}
specifier|public
name|float
name|getCreditChange
parameter_list|()
block|{
return|return
operator|(
name|iCredit
operator|==
literal|null
condition|?
literal|0f
else|:
name|iCredit
operator|.
name|floatValue
argument_list|()
operator|)
operator|-
operator|(
name|iOriginalCredit
operator|==
literal|null
condition|?
literal|0f
else|:
name|iOriginalCredit
operator|.
name|floatValue
argument_list|()
operator|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|SpecialRegistrationGradeModeChanges
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|SpecialRegistrationGradeMode
name|iCurrentGradeMode
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|SpecialRegistrationGradeMode
argument_list|>
name|iAvailableChanges
decl_stmt|;
specifier|public
name|SpecialRegistrationGradeModeChanges
parameter_list|()
block|{
block|}
specifier|public
name|SpecialRegistrationGradeMode
name|getCurrentGradeMode
parameter_list|()
block|{
return|return
name|iCurrentGradeMode
return|;
block|}
specifier|public
name|void
name|setCurrentGradeMode
parameter_list|(
name|SpecialRegistrationGradeMode
name|mode
parameter_list|)
block|{
name|iCurrentGradeMode
operator|=
name|mode
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCurrentGradeMode
parameter_list|(
name|String
name|code
parameter_list|)
block|{
return|return
name|iCurrentGradeMode
operator|!=
literal|null
operator|&&
name|iCurrentGradeMode
operator|.
name|getCode
argument_list|()
operator|.
name|equals
argument_list|(
name|code
argument_list|)
return|;
block|}
specifier|public
name|void
name|addAvailableChange
parameter_list|(
name|SpecialRegistrationGradeMode
name|mode
parameter_list|)
block|{
if|if
condition|(
name|iAvailableChanges
operator|==
literal|null
condition|)
name|iAvailableChanges
operator|=
operator|new
name|TreeSet
argument_list|<
name|SpecialRegistrationGradeMode
argument_list|>
argument_list|()
expr_stmt|;
name|iAvailableChanges
operator|.
name|add
argument_list|(
name|mode
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasAvailableChanges
parameter_list|()
block|{
return|return
name|iAvailableChanges
operator|!=
literal|null
operator|&&
operator|!
name|iAvailableChanges
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|Set
argument_list|<
name|SpecialRegistrationGradeMode
argument_list|>
name|getAvailableChanges
parameter_list|()
block|{
return|return
name|iAvailableChanges
return|;
block|}
specifier|public
name|SpecialRegistrationGradeMode
name|getAvailableChange
parameter_list|(
name|String
name|code
parameter_list|)
block|{
if|if
condition|(
name|iAvailableChanges
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|SpecialRegistrationGradeMode
name|m
range|:
name|iAvailableChanges
control|)
if|if
condition|(
name|m
operator|.
name|getCode
argument_list|()
operator|.
name|equals
argument_list|(
name|code
argument_list|)
condition|)
return|return
name|m
return|;
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|SpecialRegistrationGradeModeChange
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|String
name|iSubject
decl_stmt|,
name|iCourse
decl_stmt|,
name|iCredit
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|iCrn
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|iApprovals
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iOriginalGradeMode
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iSelectedGradeMode
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iSelectedGradeModeDescription
init|=
literal|null
decl_stmt|;
specifier|public
name|SpecialRegistrationGradeModeChange
parameter_list|()
block|{
block|}
specifier|public
name|String
name|getSubject
parameter_list|()
block|{
return|return
name|iSubject
return|;
block|}
specifier|public
name|void
name|setSubject
parameter_list|(
name|String
name|subject
parameter_list|)
block|{
name|iSubject
operator|=
name|subject
expr_stmt|;
block|}
specifier|public
name|String
name|getCourse
parameter_list|()
block|{
return|return
name|iCourse
return|;
block|}
specifier|public
name|void
name|setCourse
parameter_list|(
name|String
name|course
parameter_list|)
block|{
name|iCourse
operator|=
name|course
expr_stmt|;
block|}
specifier|public
name|String
name|getCredit
parameter_list|()
block|{
return|return
name|iCredit
return|;
block|}
specifier|public
name|void
name|setCredit
parameter_list|(
name|String
name|credit
parameter_list|)
block|{
name|iCredit
operator|=
name|credit
expr_stmt|;
block|}
specifier|public
name|String
name|getOriginalGradeMode
parameter_list|()
block|{
return|return
name|iOriginalGradeMode
return|;
block|}
specifier|public
name|void
name|setOriginalGradeMode
parameter_list|(
name|String
name|gm
parameter_list|)
block|{
name|iOriginalGradeMode
operator|=
name|gm
expr_stmt|;
block|}
specifier|public
name|String
name|getSelectedGradeMode
parameter_list|()
block|{
return|return
name|iSelectedGradeMode
return|;
block|}
specifier|public
name|void
name|setSelectedGradeMode
parameter_list|(
name|String
name|gm
parameter_list|)
block|{
name|iSelectedGradeMode
operator|=
name|gm
expr_stmt|;
block|}
specifier|public
name|String
name|getSelectedGradeModeDescription
parameter_list|()
block|{
return|return
name|iSelectedGradeModeDescription
return|;
block|}
specifier|public
name|void
name|setSelectedGradeModeDescription
parameter_list|(
name|String
name|desc
parameter_list|)
block|{
name|iSelectedGradeModeDescription
operator|=
name|desc
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasCRNs
parameter_list|()
block|{
return|return
name|iCrn
operator|!=
literal|null
operator|&&
name|iCrn
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addCrn
parameter_list|(
name|String
name|crn
parameter_list|)
block|{
if|if
condition|(
name|iCrn
operator|==
literal|null
condition|)
name|iCrn
operator|=
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|iCrn
operator|.
name|add
argument_list|(
name|crn
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getCRNs
parameter_list|()
block|{
return|return
name|iCrn
return|;
block|}
specifier|public
name|boolean
name|hasCRN
parameter_list|(
name|String
name|extId
parameter_list|)
block|{
return|return
name|iCrn
operator|!=
literal|null
operator|&&
name|iCrn
operator|.
name|contains
argument_list|(
name|extId
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|hasApprovals
parameter_list|()
block|{
return|return
name|iApprovals
operator|!=
literal|null
operator|&&
operator|!
name|iApprovals
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addApproval
parameter_list|(
name|String
name|app
parameter_list|)
block|{
if|if
condition|(
name|iApprovals
operator|==
literal|null
condition|)
name|iApprovals
operator|=
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|iApprovals
operator|.
name|add
argument_list|(
name|app
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getApprovals
parameter_list|()
block|{
return|return
name|iApprovals
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|SpecialRegistrationCreditChange
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|String
name|iSubject
decl_stmt|,
name|iCourse
decl_stmt|,
name|iCrn
decl_stmt|;
specifier|private
name|Float
name|iCredit
decl_stmt|,
name|iOriginalCredit
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|iApprovals
init|=
literal|null
decl_stmt|;
specifier|public
name|SpecialRegistrationCreditChange
parameter_list|()
block|{
block|}
specifier|public
name|String
name|getSubject
parameter_list|()
block|{
return|return
name|iSubject
return|;
block|}
specifier|public
name|void
name|setSubject
parameter_list|(
name|String
name|subject
parameter_list|)
block|{
name|iSubject
operator|=
name|subject
expr_stmt|;
block|}
specifier|public
name|String
name|getCourse
parameter_list|()
block|{
return|return
name|iCourse
return|;
block|}
specifier|public
name|void
name|setCourse
parameter_list|(
name|String
name|course
parameter_list|)
block|{
name|iCourse
operator|=
name|course
expr_stmt|;
block|}
specifier|public
name|String
name|getCrn
parameter_list|()
block|{
return|return
name|iCrn
return|;
block|}
specifier|public
name|void
name|setCrn
parameter_list|(
name|String
name|crn
parameter_list|)
block|{
name|iCrn
operator|=
name|crn
expr_stmt|;
block|}
specifier|public
name|Float
name|getOriginalCredit
parameter_list|()
block|{
return|return
name|iOriginalCredit
return|;
block|}
specifier|public
name|void
name|setOriginalCredit
parameter_list|(
name|Float
name|credit
parameter_list|)
block|{
name|iOriginalCredit
operator|=
name|credit
expr_stmt|;
block|}
specifier|public
name|Float
name|getCredit
parameter_list|()
block|{
return|return
name|iCredit
return|;
block|}
specifier|public
name|void
name|setCredit
parameter_list|(
name|Float
name|credit
parameter_list|)
block|{
name|iCredit
operator|=
name|credit
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasApprovals
parameter_list|()
block|{
return|return
name|iApprovals
operator|!=
literal|null
operator|&&
operator|!
name|iApprovals
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addApproval
parameter_list|(
name|String
name|app
parameter_list|)
block|{
if|if
condition|(
name|iApprovals
operator|==
literal|null
condition|)
name|iApprovals
operator|=
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|iApprovals
operator|.
name|add
argument_list|(
name|app
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getApprovals
parameter_list|()
block|{
return|return
name|iApprovals
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|SpecialRegistrationVariableCreditChange
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|iApprovals
init|=
literal|null
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|Float
argument_list|>
name|iAvailableCredits
init|=
literal|null
decl_stmt|;
specifier|public
name|SpecialRegistrationVariableCreditChange
parameter_list|()
block|{
block|}
specifier|public
name|boolean
name|hasApprovals
parameter_list|()
block|{
return|return
name|iApprovals
operator|!=
literal|null
operator|&&
operator|!
name|iApprovals
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addApproval
parameter_list|(
name|String
name|app
parameter_list|)
block|{
if|if
condition|(
name|iApprovals
operator|==
literal|null
condition|)
name|iApprovals
operator|=
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|iApprovals
operator|.
name|add
argument_list|(
name|app
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getApprovals
parameter_list|()
block|{
return|return
name|iApprovals
return|;
block|}
specifier|public
name|boolean
name|hasAvailableCredits
parameter_list|()
block|{
return|return
name|iAvailableCredits
operator|!=
literal|null
operator|&&
operator|!
name|iAvailableCredits
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addAvailableCredit
parameter_list|(
name|Float
name|credit
parameter_list|)
block|{
if|if
condition|(
name|iAvailableCredits
operator|==
literal|null
condition|)
name|iAvailableCredits
operator|=
operator|new
name|TreeSet
argument_list|<
name|Float
argument_list|>
argument_list|()
expr_stmt|;
name|iAvailableCredits
operator|.
name|add
argument_list|(
name|credit
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|Float
argument_list|>
name|getAvailableCredits
parameter_list|()
block|{
return|return
name|iAvailableCredits
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|ChangeGradeModesRequest
extends|extends
name|StudentSectioningContext
implements|implements
name|GwtRpcRequest
argument_list|<
name|ChangeGradeModesResponse
argument_list|>
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
name|List
argument_list|<
name|SpecialRegistrationGradeModeChange
argument_list|>
name|iChanges
init|=
operator|new
name|ArrayList
argument_list|<
name|SpecialRegistrationGradeModeChange
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|SpecialRegistrationCreditChange
argument_list|>
name|iCreditChanges
init|=
operator|new
name|ArrayList
argument_list|<
name|SpecialRegistrationCreditChange
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|String
name|iNote
decl_stmt|;
specifier|private
name|Float
name|iMaxCredit
decl_stmt|,
name|iCurrentCredit
decl_stmt|;
specifier|public
name|ChangeGradeModesRequest
parameter_list|()
block|{
block|}
specifier|public
name|ChangeGradeModesRequest
parameter_list|(
name|StudentSectioningContext
name|cx
parameter_list|)
block|{
name|super
argument_list|(
name|cx
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasGradeModeChanges
parameter_list|()
block|{
return|return
operator|!
name|iChanges
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addChange
parameter_list|(
name|SpecialRegistrationGradeModeChange
name|change
parameter_list|)
block|{
name|iChanges
operator|.
name|add
argument_list|(
name|change
argument_list|)
expr_stmt|;
block|}
specifier|public
name|SpecialRegistrationGradeModeChange
name|getChange
parameter_list|(
name|String
name|sectionId
parameter_list|)
block|{
for|for
control|(
name|SpecialRegistrationGradeModeChange
name|ch
range|:
name|iChanges
control|)
if|if
condition|(
name|ch
operator|.
name|hasCRN
argument_list|(
name|sectionId
argument_list|)
condition|)
return|return
name|ch
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|List
argument_list|<
name|SpecialRegistrationGradeModeChange
argument_list|>
name|getChanges
parameter_list|()
block|{
return|return
name|iChanges
return|;
block|}
specifier|public
name|boolean
name|hasGradeModeChanges
parameter_list|(
name|boolean
name|approval
parameter_list|)
block|{
for|for
control|(
name|SpecialRegistrationGradeModeChange
name|change
range|:
name|iChanges
control|)
block|{
if|if
condition|(
name|approval
operator|&&
name|change
operator|.
name|hasApprovals
argument_list|()
condition|)
return|return
literal|true
return|;
if|if
condition|(
operator|!
name|approval
operator|&&
operator|!
name|change
operator|.
name|hasApprovals
argument_list|()
condition|)
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|hasCreditChanges
parameter_list|()
block|{
return|return
operator|!
name|iCreditChanges
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addChange
parameter_list|(
name|SpecialRegistrationCreditChange
name|change
parameter_list|)
block|{
name|iCreditChanges
operator|.
name|add
argument_list|(
name|change
argument_list|)
expr_stmt|;
block|}
specifier|public
name|SpecialRegistrationCreditChange
name|getCreditChange
parameter_list|(
name|String
name|sectionId
parameter_list|)
block|{
for|for
control|(
name|SpecialRegistrationCreditChange
name|ch
range|:
name|iCreditChanges
control|)
if|if
condition|(
name|ch
operator|.
name|getCrn
argument_list|()
operator|.
name|equals
argument_list|(
name|sectionId
argument_list|)
condition|)
return|return
name|ch
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|List
argument_list|<
name|SpecialRegistrationCreditChange
argument_list|>
name|getCreditChanges
parameter_list|()
block|{
return|return
name|iCreditChanges
return|;
block|}
specifier|public
name|boolean
name|hasCreditChanges
parameter_list|(
name|boolean
name|approval
parameter_list|)
block|{
for|for
control|(
name|SpecialRegistrationCreditChange
name|change
range|:
name|iCreditChanges
control|)
block|{
if|if
condition|(
name|approval
operator|&&
name|change
operator|.
name|hasApprovals
argument_list|()
condition|)
return|return
literal|true
return|;
if|if
condition|(
operator|!
name|approval
operator|&&
operator|!
name|change
operator|.
name|hasApprovals
argument_list|()
condition|)
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|void
name|setNote
parameter_list|(
name|String
name|note
parameter_list|)
block|{
name|iNote
operator|=
name|note
expr_stmt|;
block|}
specifier|public
name|String
name|getNote
parameter_list|()
block|{
return|return
name|iNote
return|;
block|}
specifier|public
name|boolean
name|hasNote
parameter_list|()
block|{
return|return
name|iNote
operator|!=
literal|null
operator|&&
operator|!
name|iNote
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|Float
name|getMaxCredit
parameter_list|()
block|{
return|return
name|iMaxCredit
return|;
block|}
specifier|public
name|void
name|setMaxCredit
parameter_list|(
name|Float
name|credit
parameter_list|)
block|{
name|iMaxCredit
operator|=
name|credit
expr_stmt|;
block|}
specifier|public
name|Float
name|getCurrentCredit
parameter_list|()
block|{
return|return
name|iCurrentCredit
return|;
block|}
specifier|public
name|void
name|setCurrentCredit
parameter_list|(
name|Float
name|credit
parameter_list|)
block|{
name|iCurrentCredit
operator|=
name|credit
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|ChangeGradeModesResponse
implements|implements
name|GwtRpcResponse
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|GradeModes
name|iGradeModes
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|RetrieveSpecialRegistrationResponse
argument_list|>
name|iRequests
init|=
literal|null
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|iCancelRequestIds
init|=
literal|null
decl_stmt|;
specifier|public
name|ChangeGradeModesResponse
parameter_list|()
block|{
block|}
specifier|public
name|boolean
name|hasGradeModes
parameter_list|()
block|{
return|return
name|iGradeModes
operator|!=
literal|null
operator|&&
name|iGradeModes
operator|.
name|hasGradeModes
argument_list|()
return|;
block|}
specifier|public
name|void
name|addGradeMode
parameter_list|(
name|String
name|sectionId
parameter_list|,
name|String
name|code
parameter_list|,
name|String
name|label
parameter_list|,
name|boolean
name|honors
parameter_list|)
block|{
if|if
condition|(
name|iGradeModes
operator|==
literal|null
condition|)
name|iGradeModes
operator|=
operator|new
name|GradeModes
argument_list|()
expr_stmt|;
name|iGradeModes
operator|.
name|addGradeMode
argument_list|(
name|sectionId
argument_list|,
operator|new
name|GradeMode
argument_list|(
name|code
argument_list|,
name|label
argument_list|,
name|honors
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|GradeMode
name|getGradeMode
parameter_list|(
name|ClassAssignment
name|section
parameter_list|)
block|{
if|if
condition|(
name|iGradeModes
operator|==
literal|null
condition|)
return|return
literal|null
return|;
return|return
name|iGradeModes
operator|.
name|getGradeMode
argument_list|(
name|section
argument_list|)
return|;
block|}
specifier|public
name|GradeModes
name|getGradeModes
parameter_list|()
block|{
return|return
name|iGradeModes
return|;
block|}
specifier|public
name|boolean
name|hasCreditHours
parameter_list|()
block|{
return|return
name|iGradeModes
operator|!=
literal|null
operator|&&
name|iGradeModes
operator|.
name|hasCreditHours
argument_list|()
return|;
block|}
specifier|public
name|void
name|addCreditHour
parameter_list|(
name|String
name|sectionId
parameter_list|,
name|Float
name|creditHour
parameter_list|)
block|{
if|if
condition|(
name|iGradeModes
operator|==
literal|null
condition|)
name|iGradeModes
operator|=
operator|new
name|GradeModes
argument_list|()
expr_stmt|;
name|iGradeModes
operator|.
name|addCreditHour
argument_list|(
name|sectionId
argument_list|,
name|creditHour
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Float
name|getCreditHour
parameter_list|(
name|ClassAssignment
name|section
parameter_list|)
block|{
if|if
condition|(
name|iGradeModes
operator|==
literal|null
condition|)
return|return
literal|null
return|;
return|return
name|iGradeModes
operator|.
name|getCreditHour
argument_list|(
name|section
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|hasRequests
parameter_list|()
block|{
return|return
name|iRequests
operator|!=
literal|null
operator|&&
operator|!
name|iRequests
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addRequest
parameter_list|(
name|RetrieveSpecialRegistrationResponse
name|request
parameter_list|)
block|{
if|if
condition|(
name|iRequests
operator|==
literal|null
condition|)
name|iRequests
operator|=
operator|new
name|ArrayList
argument_list|<
name|RetrieveSpecialRegistrationResponse
argument_list|>
argument_list|()
expr_stmt|;
name|iRequests
operator|.
name|add
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|RetrieveSpecialRegistrationResponse
argument_list|>
name|getRequests
parameter_list|()
block|{
return|return
name|iRequests
return|;
block|}
specifier|public
name|boolean
name|hasRequest
parameter_list|(
name|String
name|requestId
parameter_list|)
block|{
if|if
condition|(
name|iRequests
operator|==
literal|null
condition|)
return|return
literal|false
return|;
for|for
control|(
name|RetrieveSpecialRegistrationResponse
name|r
range|:
name|iRequests
control|)
if|if
condition|(
name|r
operator|.
name|getRequestId
argument_list|()
operator|.
name|equals
argument_list|(
name|requestId
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
specifier|public
name|void
name|addCancelRequestId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
if|if
condition|(
name|iCancelRequestIds
operator|==
literal|null
condition|)
name|iCancelRequestIds
operator|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|iCancelRequestIds
operator|.
name|add
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasCancelRequestIds
parameter_list|()
block|{
return|return
name|iCancelRequestIds
operator|!=
literal|null
operator|&&
operator|!
name|iCancelRequestIds
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getCancelRequestIds
parameter_list|()
block|{
return|return
name|iCancelRequestIds
return|;
block|}
specifier|public
name|boolean
name|isToBeCancelled
parameter_list|(
name|String
name|requestId
parameter_list|)
block|{
return|return
name|iCancelRequestIds
operator|!=
literal|null
operator|&&
name|iCancelRequestIds
operator|.
name|contains
argument_list|(
name|requestId
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
interface|interface
name|ChangeRequestorNoteInterface
block|{
specifier|public
name|boolean
name|changeRequestorNote
parameter_list|(
name|RequestedCourse
name|request
parameter_list|)
function_decl|;
specifier|public
name|boolean
name|changeRequestorCreditNote
parameter_list|(
name|CourseRequestInterface
name|request
parameter_list|)
function_decl|;
specifier|public
name|boolean
name|changeRequestorNote
parameter_list|(
name|RetrieveSpecialRegistrationResponse
name|registration
parameter_list|)
function_decl|;
block|}
specifier|public
specifier|static
class|class
name|UpdateSpecialRegistrationRequest
extends|extends
name|StudentSectioningContext
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|String
name|iRequestId
decl_stmt|;
specifier|private
name|String
name|iNote
decl_stmt|;
specifier|private
name|boolean
name|iPreReg
init|=
literal|false
decl_stmt|;
specifier|public
name|UpdateSpecialRegistrationRequest
parameter_list|()
block|{
block|}
specifier|public
name|UpdateSpecialRegistrationRequest
parameter_list|(
name|StudentSectioningContext
name|cx
parameter_list|,
name|String
name|requestId
parameter_list|,
name|String
name|note
parameter_list|,
name|boolean
name|preReg
parameter_list|)
block|{
name|super
argument_list|(
name|cx
argument_list|)
expr_stmt|;
name|iRequestId
operator|=
name|requestId
expr_stmt|;
name|iNote
operator|=
name|note
expr_stmt|;
name|iPreReg
operator|=
name|preReg
expr_stmt|;
block|}
specifier|public
name|String
name|getRequestId
parameter_list|()
block|{
return|return
name|iRequestId
return|;
block|}
specifier|public
name|void
name|setRequestId
parameter_list|(
name|String
name|requestId
parameter_list|)
block|{
name|iRequestId
operator|=
name|requestId
expr_stmt|;
block|}
specifier|public
name|String
name|getNote
parameter_list|()
block|{
return|return
name|iNote
return|;
block|}
specifier|public
name|void
name|setNote
parameter_list|(
name|String
name|note
parameter_list|)
block|{
name|iNote
operator|=
name|note
expr_stmt|;
block|}
specifier|public
name|boolean
name|isPreReg
parameter_list|()
block|{
return|return
name|iPreReg
return|;
block|}
specifier|public
name|void
name|setPreReg
parameter_list|(
name|boolean
name|preReg
parameter_list|)
block|{
name|iPreReg
operator|=
name|preReg
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|UpdateSpecialRegistrationResponse
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|boolean
name|iSuccess
decl_stmt|;
specifier|private
name|String
name|iMessage
decl_stmt|;
specifier|public
name|UpdateSpecialRegistrationResponse
parameter_list|()
block|{
block|}
specifier|public
name|boolean
name|isSuccess
parameter_list|()
block|{
return|return
name|iSuccess
return|;
block|}
specifier|public
name|boolean
name|isFailure
parameter_list|()
block|{
return|return
operator|!
name|iSuccess
return|;
block|}
specifier|public
name|void
name|setSuccess
parameter_list|(
name|boolean
name|success
parameter_list|)
block|{
name|iSuccess
operator|=
name|success
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasMessage
parameter_list|()
block|{
return|return
name|iMessage
operator|!=
literal|null
operator|&&
operator|!
name|iMessage
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getMessage
parameter_list|()
block|{
return|return
name|iMessage
return|;
block|}
specifier|public
name|void
name|setMessage
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|iMessage
operator|=
name|message
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|InstructorInfo
implements|implements
name|IsSerializable
implements|,
name|Serializable
implements|,
name|Comparable
argument_list|<
name|InstructorInfo
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|Long
name|iInstructorId
decl_stmt|;
specifier|private
name|String
name|iInstructorName
decl_stmt|;
specifier|public
name|InstructorInfo
parameter_list|()
block|{
block|}
specifier|public
name|InstructorInfo
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|iInstructorId
operator|=
name|id
expr_stmt|;
name|iInstructorName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iInstructorId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iInstructorId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iInstructorName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iInstructorName
operator|=
name|name
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|InstructorInfo
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|InstructorInfo
operator|)
name|o
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|InstructorInfo
name|i
parameter_list|)
block|{
name|int
name|cmp
init|=
name|getName
argument_list|()
operator|.
name|compareTo
argument_list|(
name|i
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
return|return
name|getId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|i
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getName
argument_list|()
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|VariableTitleCourseInfo
implements|implements
name|IsSerializable
implements|,
name|Serializable
implements|,
name|Suggestion
implements|,
name|Comparable
argument_list|<
name|VariableTitleCourseInfo
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|String
name|iTitle
decl_stmt|;
specifier|private
name|String
name|iSubject
decl_stmt|,
name|iCourseNbr
decl_stmt|;
specifier|private
name|String
name|iDefaultGradeModeCode
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|GradeMode
argument_list|>
name|iGradeModes
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|Float
argument_list|>
name|iAvailableCredits
decl_stmt|;
specifier|private
name|Date
name|iStartDate
decl_stmt|,
name|iEndDate
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|InstructorInfo
argument_list|>
name|iInstructors
decl_stmt|;
specifier|private
name|String
name|iDetails
decl_stmt|;
specifier|private
name|String
name|iDisclaimer
decl_stmt|;
specifier|public
name|VariableTitleCourseInfo
parameter_list|()
block|{
block|}
specifier|public
name|String
name|getTitle
parameter_list|()
block|{
return|return
name|iTitle
return|;
block|}
specifier|public
name|void
name|setTitle
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|iTitle
operator|=
name|title
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasTitle
parameter_list|()
block|{
return|return
name|iTitle
operator|!=
literal|null
operator|&&
operator|!
name|iTitle
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getSubject
parameter_list|()
block|{
return|return
name|iSubject
return|;
block|}
specifier|public
name|void
name|setSubject
parameter_list|(
name|String
name|subject
parameter_list|)
block|{
name|iSubject
operator|=
name|subject
expr_stmt|;
block|}
specifier|public
name|String
name|getCourseNbr
parameter_list|()
block|{
return|return
name|iCourseNbr
return|;
block|}
specifier|public
name|void
name|setCourseNbr
parameter_list|(
name|String
name|courseNbr
parameter_list|)
block|{
name|iCourseNbr
operator|=
name|courseNbr
expr_stmt|;
block|}
specifier|public
name|String
name|getCourseName
parameter_list|()
block|{
return|return
name|getSubject
argument_list|()
operator|+
literal|" "
operator|+
name|getCourseNbr
argument_list|()
return|;
block|}
specifier|public
name|String
name|getDefaultGradeModeCode
parameter_list|()
block|{
return|return
name|iDefaultGradeModeCode
return|;
block|}
specifier|public
name|void
name|setDefaultGradeModeCode
parameter_list|(
name|String
name|gmCode
parameter_list|)
block|{
name|iDefaultGradeModeCode
operator|=
name|gmCode
expr_stmt|;
block|}
specifier|public
name|GradeMode
name|getDefaultGradeMode
parameter_list|()
block|{
if|if
condition|(
name|iDefaultGradeModeCode
operator|==
literal|null
operator|||
operator|!
name|hasGradeModes
argument_list|()
condition|)
return|return
literal|null
return|;
for|for
control|(
name|GradeMode
name|gm
range|:
name|iGradeModes
control|)
if|if
condition|(
name|iDefaultGradeModeCode
operator|.
name|equals
argument_list|(
name|gm
operator|.
name|getCode
argument_list|()
argument_list|)
condition|)
return|return
name|gm
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|boolean
name|hasGradeModes
parameter_list|()
block|{
return|return
name|iGradeModes
operator|!=
literal|null
operator|&&
operator|!
name|iGradeModes
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addGradeMode
parameter_list|(
name|GradeMode
name|gradeMode
parameter_list|)
block|{
if|if
condition|(
name|iGradeModes
operator|==
literal|null
condition|)
name|iGradeModes
operator|=
operator|new
name|TreeSet
argument_list|<
name|GradeMode
argument_list|>
argument_list|()
expr_stmt|;
name|iGradeModes
operator|.
name|add
argument_list|(
name|gradeMode
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|GradeMode
argument_list|>
name|getGradeModes
parameter_list|()
block|{
return|return
name|iGradeModes
return|;
block|}
specifier|public
name|boolean
name|hasAvailableCredits
parameter_list|()
block|{
return|return
name|iAvailableCredits
operator|!=
literal|null
operator|&&
operator|!
name|iAvailableCredits
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addAvailableCredit
parameter_list|(
name|Float
name|credit
parameter_list|)
block|{
if|if
condition|(
name|iAvailableCredits
operator|==
literal|null
condition|)
name|iAvailableCredits
operator|=
operator|new
name|TreeSet
argument_list|<
name|Float
argument_list|>
argument_list|()
expr_stmt|;
name|iAvailableCredits
operator|.
name|add
argument_list|(
name|credit
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|Float
argument_list|>
name|getAvailableCredits
parameter_list|()
block|{
return|return
name|iAvailableCredits
return|;
block|}
specifier|public
name|Date
name|getStartDate
parameter_list|()
block|{
return|return
name|iStartDate
return|;
block|}
specifier|public
name|void
name|setStartDate
parameter_list|(
name|Date
name|date
parameter_list|)
block|{
name|iStartDate
operator|=
name|date
expr_stmt|;
block|}
specifier|public
name|Date
name|getEndDate
parameter_list|()
block|{
return|return
name|iEndDate
return|;
block|}
specifier|public
name|void
name|setEndDate
parameter_list|(
name|Date
name|date
parameter_list|)
block|{
name|iEndDate
operator|=
name|date
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasInstructors
parameter_list|()
block|{
return|return
name|iInstructors
operator|!=
literal|null
operator|&&
operator|!
name|iInstructors
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addInstructor
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|iInstructors
operator|==
literal|null
condition|)
name|iInstructors
operator|=
operator|new
name|TreeSet
argument_list|<
name|InstructorInfo
argument_list|>
argument_list|()
expr_stmt|;
name|iInstructors
operator|.
name|add
argument_list|(
operator|new
name|InstructorInfo
argument_list|(
name|id
argument_list|,
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|InstructorInfo
argument_list|>
name|getInstructors
parameter_list|()
block|{
return|return
name|iInstructors
return|;
block|}
specifier|public
name|void
name|setInstructors
parameter_list|(
name|Set
argument_list|<
name|InstructorInfo
argument_list|>
name|instructors
parameter_list|)
block|{
name|iInstructors
operator|=
name|instructors
expr_stmt|;
block|}
specifier|public
name|String
name|getDetails
parameter_list|()
block|{
return|return
name|iDetails
return|;
block|}
specifier|public
name|void
name|setDetails
parameter_list|(
name|String
name|details
parameter_list|)
block|{
name|iDetails
operator|=
name|details
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasDetails
parameter_list|()
block|{
return|return
name|iDetails
operator|!=
literal|null
operator|&&
operator|!
name|iDetails
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getDisclaimer
parameter_list|()
block|{
return|return
name|iDisclaimer
return|;
block|}
specifier|public
name|void
name|setDisclaimer
parameter_list|(
name|String
name|disclaimer
parameter_list|)
block|{
name|iDisclaimer
operator|=
name|disclaimer
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasDisclaimer
parameter_list|()
block|{
return|return
name|iDisclaimer
operator|!=
literal|null
operator|&&
operator|!
name|iDisclaimer
operator|.
name|isEmpty
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getCourseName
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|VariableTitleCourseInfo
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getCourseName
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|VariableTitleCourseInfo
operator|)
name|o
operator|)
operator|.
name|getCourseName
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|VariableTitleCourseInfo
name|c
parameter_list|)
block|{
return|return
name|getCourseName
argument_list|()
operator|.
name|compareTo
argument_list|(
name|c
operator|.
name|getCourseName
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getCourseName
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDisplayString
parameter_list|()
block|{
return|return
name|getCourseName
argument_list|()
operator|+
operator|(
name|hasTitle
argument_list|()
condition|?
literal|" - "
operator|+
name|getTitle
argument_list|()
else|:
literal|""
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getReplacementString
parameter_list|()
block|{
return|return
name|getCourseName
argument_list|()
operator|+
operator|(
name|hasTitle
argument_list|()
condition|?
literal|" - "
operator|+
name|getTitle
argument_list|()
else|:
literal|""
operator|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|VariableTitleCourseRequest
extends|extends
name|StudentSectioningContext
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|VariableTitleCourseInfo
name|iCourse
decl_stmt|;
specifier|private
name|String
name|iTitle
decl_stmt|;
specifier|private
name|InstructorInfo
name|iInstructor
decl_stmt|;
specifier|private
name|Float
name|iCredit
decl_stmt|;
specifier|private
name|String
name|iNote
decl_stmt|;
specifier|private
name|Date
name|iStartDate
decl_stmt|,
name|iEndDate
decl_stmt|;
specifier|private
name|boolean
name|iCheckIfExists
init|=
literal|true
decl_stmt|;
specifier|private
name|String
name|iGradeMode
decl_stmt|;
specifier|private
name|Float
name|iMaxCredit
decl_stmt|;
specifier|public
name|VariableTitleCourseRequest
parameter_list|()
block|{
block|}
specifier|public
name|VariableTitleCourseRequest
parameter_list|(
name|StudentSectioningContext
name|cx
parameter_list|)
block|{
name|super
argument_list|(
name|cx
argument_list|)
expr_stmt|;
block|}
specifier|public
name|VariableTitleCourseInfo
name|getCourse
parameter_list|()
block|{
return|return
name|iCourse
return|;
block|}
specifier|public
name|void
name|setCourse
parameter_list|(
name|VariableTitleCourseInfo
name|course
parameter_list|)
block|{
name|iCourse
operator|=
name|course
expr_stmt|;
block|}
specifier|public
name|String
name|getTitle
parameter_list|()
block|{
return|return
name|iTitle
return|;
block|}
specifier|public
name|void
name|setTitle
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|iTitle
operator|=
name|title
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasTitle
parameter_list|()
block|{
return|return
name|iTitle
operator|!=
literal|null
operator|&&
operator|!
name|iTitle
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|InstructorInfo
name|getInstructor
parameter_list|()
block|{
return|return
name|iInstructor
return|;
block|}
specifier|public
name|void
name|setInstructor
parameter_list|(
name|InstructorInfo
name|instructor
parameter_list|)
block|{
name|iInstructor
operator|=
name|instructor
expr_stmt|;
block|}
specifier|public
name|String
name|getGradeModeCode
parameter_list|()
block|{
return|return
name|iGradeMode
return|;
block|}
specifier|public
name|void
name|setGradeModeCode
parameter_list|(
name|String
name|code
parameter_list|)
block|{
name|iGradeMode
operator|=
name|code
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasGradeMode
parameter_list|()
block|{
return|return
name|iGradeMode
operator|!=
literal|null
operator|&&
operator|!
name|iGradeMode
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|String
name|getGradeModeLabel
parameter_list|()
block|{
if|if
condition|(
name|iGradeMode
operator|==
literal|null
condition|)
return|return
literal|null
return|;
if|if
condition|(
name|getCourse
argument_list|()
operator|.
name|hasGradeModes
argument_list|()
condition|)
for|for
control|(
name|GradeMode
name|gm
range|:
name|getCourse
argument_list|()
operator|.
name|getGradeModes
argument_list|()
control|)
if|if
condition|(
name|iGradeMode
operator|.
name|equals
argument_list|(
name|gm
operator|.
name|getCode
argument_list|()
argument_list|)
condition|)
return|return
name|gm
operator|.
name|getLabel
argument_list|()
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|Float
name|getCredit
parameter_list|()
block|{
return|return
name|iCredit
return|;
block|}
specifier|public
name|void
name|setCredit
parameter_list|(
name|Float
name|credit
parameter_list|)
block|{
name|iCredit
operator|=
name|credit
expr_stmt|;
block|}
specifier|public
name|Float
name|getMaxCredit
parameter_list|()
block|{
return|return
name|iMaxCredit
return|;
block|}
specifier|public
name|void
name|setMaxCredit
parameter_list|(
name|Float
name|maxCredit
parameter_list|)
block|{
name|iMaxCredit
operator|=
name|maxCredit
expr_stmt|;
block|}
specifier|public
name|String
name|getNote
parameter_list|()
block|{
return|return
name|iNote
return|;
block|}
specifier|public
name|void
name|setNote
parameter_list|(
name|String
name|note
parameter_list|)
block|{
name|iNote
operator|=
name|note
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasNote
parameter_list|()
block|{
return|return
name|iNote
operator|!=
literal|null
operator|&&
operator|!
name|iNote
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|Date
name|getStartDate
parameter_list|()
block|{
if|if
condition|(
name|iStartDate
operator|==
literal|null
condition|)
return|return
name|getCourse
argument_list|()
operator|.
name|getStartDate
argument_list|()
return|;
return|return
name|iStartDate
return|;
block|}
specifier|public
name|void
name|setStartDate
parameter_list|(
name|Date
name|date
parameter_list|)
block|{
name|iStartDate
operator|=
name|date
expr_stmt|;
block|}
specifier|public
name|Date
name|getEndDate
parameter_list|()
block|{
if|if
condition|(
name|iEndDate
operator|==
literal|null
condition|)
return|return
name|getCourse
argument_list|()
operator|.
name|getEndDate
argument_list|()
return|;
return|return
name|iEndDate
return|;
block|}
specifier|public
name|void
name|setEndDate
parameter_list|(
name|Date
name|date
parameter_list|)
block|{
name|iEndDate
operator|=
name|date
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCheckIfExists
parameter_list|()
block|{
return|return
name|iCheckIfExists
return|;
block|}
specifier|public
name|void
name|setCheckIfExists
parameter_list|(
name|boolean
name|check
parameter_list|)
block|{
name|iCheckIfExists
operator|=
name|check
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|VariableTitleCourseResponse
implements|implements
name|IsSerializable
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|RequestedCourse
name|iCourse
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|RetrieveSpecialRegistrationResponse
argument_list|>
name|iRequests
init|=
literal|null
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|iCancelRequestIds
init|=
literal|null
decl_stmt|;
specifier|public
name|VariableTitleCourseResponse
parameter_list|()
block|{
block|}
specifier|public
name|VariableTitleCourseResponse
parameter_list|(
name|RequestedCourse
name|rc
parameter_list|)
block|{
name|iCourse
operator|=
name|rc
expr_stmt|;
block|}
specifier|public
name|RequestedCourse
name|getCourse
parameter_list|()
block|{
return|return
name|iCourse
return|;
block|}
specifier|public
name|void
name|setCourse
parameter_list|(
name|RequestedCourse
name|course
parameter_list|)
block|{
name|iCourse
operator|=
name|course
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasRequests
parameter_list|()
block|{
return|return
name|iRequests
operator|!=
literal|null
operator|&&
operator|!
name|iRequests
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addRequest
parameter_list|(
name|RetrieveSpecialRegistrationResponse
name|request
parameter_list|)
block|{
if|if
condition|(
name|iRequests
operator|==
literal|null
condition|)
name|iRequests
operator|=
operator|new
name|ArrayList
argument_list|<
name|RetrieveSpecialRegistrationResponse
argument_list|>
argument_list|()
expr_stmt|;
name|iRequests
operator|.
name|add
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|RetrieveSpecialRegistrationResponse
argument_list|>
name|getRequests
parameter_list|()
block|{
return|return
name|iRequests
return|;
block|}
specifier|public
name|boolean
name|hasRequest
parameter_list|(
name|String
name|requestId
parameter_list|)
block|{
if|if
condition|(
name|iRequests
operator|==
literal|null
condition|)
return|return
literal|false
return|;
for|for
control|(
name|RetrieveSpecialRegistrationResponse
name|r
range|:
name|iRequests
control|)
if|if
condition|(
name|r
operator|.
name|getRequestId
argument_list|()
operator|.
name|equals
argument_list|(
name|requestId
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
specifier|public
name|void
name|addCancelRequestId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
if|if
condition|(
name|iCancelRequestIds
operator|==
literal|null
condition|)
name|iCancelRequestIds
operator|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|iCancelRequestIds
operator|.
name|add
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasCancelRequestIds
parameter_list|()
block|{
return|return
name|iCancelRequestIds
operator|!=
literal|null
operator|&&
operator|!
name|iCancelRequestIds
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getCancelRequestIds
parameter_list|()
block|{
return|return
name|iCancelRequestIds
return|;
block|}
specifier|public
name|boolean
name|isToBeCancelled
parameter_list|(
name|String
name|requestId
parameter_list|)
block|{
return|return
name|iCancelRequestIds
operator|!=
literal|null
operator|&&
name|iCancelRequestIds
operator|.
name|contains
argument_list|(
name|requestId
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

