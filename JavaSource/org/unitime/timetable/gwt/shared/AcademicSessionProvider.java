begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|IsSerializable
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_interface
specifier|public
interface|interface
name|AcademicSessionProvider
block|{
specifier|public
name|Long
name|getAcademicSessionId
parameter_list|()
function_decl|;
specifier|public
name|String
name|getAcademicSessionName
parameter_list|()
function_decl|;
specifier|public
name|AcademicSessionInfo
name|getAcademicSessionInfo
parameter_list|()
function_decl|;
specifier|public
name|void
name|addAcademicSessionChangeHandler
parameter_list|(
name|AcademicSessionChangeHandler
name|handler
parameter_list|)
function_decl|;
specifier|public
specifier|static
interface|interface
name|AcademicSessionChangeEvent
block|{
specifier|public
name|Long
name|getNewAcademicSessionId
parameter_list|()
function_decl|;
specifier|public
name|Long
name|getOldAcademicSessionId
parameter_list|()
function_decl|;
specifier|public
name|boolean
name|isChanged
parameter_list|()
function_decl|;
block|}
specifier|public
specifier|static
interface|interface
name|AcademicSessionChangeHandler
block|{
specifier|public
name|void
name|onAcademicSessionChange
parameter_list|(
name|AcademicSessionChangeEvent
name|event
parameter_list|)
function_decl|;
block|}
specifier|public
name|void
name|selectSession
parameter_list|(
name|Long
name|sessionId
parameter_list|,
name|AsyncCallback
argument_list|<
name|Boolean
argument_list|>
name|callback
parameter_list|)
function_decl|;
specifier|public
specifier|static
class|class
name|AcademicSessionInfo
implements|implements
name|IsSerializable
block|{
specifier|private
name|Long
name|iSessionId
decl_stmt|;
specifier|private
name|String
name|iYear
decl_stmt|,
name|iTerm
decl_stmt|,
name|iCampus
decl_stmt|,
name|iName
decl_stmt|;
specifier|private
name|String
name|iExternalTerm
decl_stmt|,
name|iExternalCampus
decl_stmt|;
specifier|public
name|AcademicSessionInfo
parameter_list|()
block|{
block|}
specifier|public
name|AcademicSessionInfo
parameter_list|(
name|Long
name|sessionId
parameter_list|,
name|String
name|year
parameter_list|,
name|String
name|term
parameter_list|,
name|String
name|campus
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|iSessionId
operator|=
name|sessionId
expr_stmt|;
name|iTerm
operator|=
name|term
expr_stmt|;
name|iYear
operator|=
name|year
expr_stmt|;
name|iCampus
operator|=
name|campus
expr_stmt|;
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|Long
name|getSessionId
parameter_list|()
block|{
return|return
name|iSessionId
return|;
block|}
specifier|public
name|void
name|setSessionId
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
name|iSessionId
operator|=
name|sessionId
expr_stmt|;
block|}
specifier|public
name|String
name|getYear
parameter_list|()
block|{
return|return
name|iYear
return|;
block|}
specifier|public
name|void
name|setYear
parameter_list|(
name|String
name|year
parameter_list|)
block|{
name|iYear
operator|=
name|year
expr_stmt|;
block|}
specifier|public
name|String
name|getCampus
parameter_list|()
block|{
return|return
name|iCampus
return|;
block|}
specifier|public
name|void
name|setCampus
parameter_list|(
name|String
name|campus
parameter_list|)
block|{
name|iCampus
operator|=
name|campus
expr_stmt|;
block|}
specifier|public
name|String
name|getTerm
parameter_list|()
block|{
return|return
name|iTerm
return|;
block|}
specifier|public
name|void
name|setTerm
parameter_list|(
name|String
name|term
parameter_list|)
block|{
name|iTerm
operator|=
name|term
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
operator|(
name|iName
operator|==
literal|null
operator|||
name|iName
operator|.
name|isEmpty
argument_list|()
condition|?
name|iTerm
operator|+
literal|" "
operator|+
name|iYear
operator|+
literal|" ("
operator|+
name|iCampus
operator|+
literal|")"
else|:
name|iName
operator|)
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getExternalCampus
parameter_list|()
block|{
return|return
name|iExternalCampus
return|;
block|}
specifier|public
name|boolean
name|hasExternalCampus
parameter_list|()
block|{
return|return
name|iExternalCampus
operator|!=
literal|null
operator|&&
operator|!
name|iExternalCampus
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|AcademicSessionInfo
name|setExternalCampus
parameter_list|(
name|String
name|extCampus
parameter_list|)
block|{
name|iExternalCampus
operator|=
name|extCampus
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|String
name|getExternalTerm
parameter_list|()
block|{
return|return
name|iExternalTerm
return|;
block|}
specifier|public
name|boolean
name|hasExternalTerm
parameter_list|()
block|{
return|return
name|iExternalTerm
operator|!=
literal|null
operator|&&
operator|!
name|iExternalTerm
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|AcademicSessionInfo
name|setExternalTerm
parameter_list|(
name|String
name|extTerm
parameter_list|)
block|{
name|iExternalTerm
operator|=
name|extTerm
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getName
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|AcademicSessionInfo
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getSessionId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|AcademicSessionInfo
operator|)
name|o
operator|)
operator|.
name|getSessionId
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
interface|interface
name|AcademicSessionMatcher
block|{
specifier|public
name|boolean
name|match
parameter_list|(
name|AcademicSessionInfo
name|session
parameter_list|)
function_decl|;
block|}
specifier|public
specifier|static
class|class
name|AcademicSessionMatchSessionId
implements|implements
name|AcademicSessionMatcher
block|{
name|Long
name|iSessionId
decl_stmt|;
specifier|public
name|AcademicSessionMatchSessionId
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
name|iSessionId
operator|=
name|sessionId
expr_stmt|;
block|}
specifier|public
name|boolean
name|match
parameter_list|(
name|AcademicSessionInfo
name|session
parameter_list|)
block|{
return|return
name|session
operator|.
name|getSessionId
argument_list|()
operator|.
name|equals
argument_list|(
name|iSessionId
argument_list|)
return|;
block|}
block|}
block|}
end_interface

end_unit

