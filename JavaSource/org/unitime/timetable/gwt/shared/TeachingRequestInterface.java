begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|AttributeInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|InstructorInterface
operator|.
name|PreferenceInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|IdName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ReservationInterface
operator|.
name|Offering
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|IsSerializable
import|;
end_import

begin_class
specifier|public
class|class
name|TeachingRequestInterface
implements|implements
name|IsSerializable
block|{
specifier|public
specifier|static
specifier|abstract
class|class
name|Request
implements|implements
name|IsSerializable
block|{
specifier|private
name|float
name|iTeachingLoad
decl_stmt|;
specifier|private
name|Long
name|iSameCoursePref
decl_stmt|,
name|iSameCommonPref
decl_stmt|;
specifier|private
name|Responsibility
name|iTeachingResponsibility
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Preference
argument_list|>
name|iInstructorPreferences
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Preference
argument_list|>
name|iAttributePreferences
decl_stmt|;
specifier|private
name|boolean
name|iAssignCoordinator
init|=
literal|false
decl_stmt|;
specifier|private
name|int
name|iPercentShare
init|=
literal|0
decl_stmt|;
specifier|public
name|Request
parameter_list|()
block|{
block|}
specifier|public
name|void
name|setTeachingLoad
parameter_list|(
name|float
name|teachingLoad
parameter_list|)
block|{
name|iTeachingLoad
operator|=
name|teachingLoad
expr_stmt|;
block|}
specifier|public
name|float
name|getTeachingLoad
parameter_list|()
block|{
return|return
name|iTeachingLoad
return|;
block|}
specifier|public
name|void
name|setSameCoursePreference
parameter_list|(
name|Long
name|prefId
parameter_list|)
block|{
name|iSameCoursePref
operator|=
name|prefId
expr_stmt|;
block|}
specifier|public
name|Long
name|getSameCoursePreference
parameter_list|()
block|{
return|return
name|iSameCoursePref
return|;
block|}
specifier|public
name|void
name|setSameCommonPreference
parameter_list|(
name|Long
name|prefId
parameter_list|)
block|{
name|iSameCommonPref
operator|=
name|prefId
expr_stmt|;
block|}
specifier|public
name|Long
name|getSameCommonPreference
parameter_list|()
block|{
return|return
name|iSameCommonPref
return|;
block|}
specifier|public
name|void
name|setTeachingResponsibility
parameter_list|(
name|Responsibility
name|responsibility
parameter_list|)
block|{
name|iTeachingResponsibility
operator|=
name|responsibility
expr_stmt|;
block|}
specifier|public
name|Responsibility
name|getTeachingResponsibility
parameter_list|()
block|{
return|return
name|iTeachingResponsibility
return|;
block|}
specifier|public
name|boolean
name|hasInstructorPrefernces
parameter_list|()
block|{
return|return
name|iInstructorPreferences
operator|!=
literal|null
operator|&&
operator|!
name|iInstructorPreferences
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addInstructorPreference
parameter_list|(
name|Preference
name|p
parameter_list|)
block|{
if|if
condition|(
name|iInstructorPreferences
operator|==
literal|null
condition|)
name|iInstructorPreferences
operator|=
operator|new
name|ArrayList
argument_list|<
name|Preference
argument_list|>
argument_list|()
expr_stmt|;
name|iInstructorPreferences
operator|.
name|add
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Preference
argument_list|>
name|getInstructorPreferences
parameter_list|()
block|{
return|return
name|iInstructorPreferences
return|;
block|}
specifier|public
name|boolean
name|hasAttributePrefernces
parameter_list|()
block|{
return|return
name|iAttributePreferences
operator|!=
literal|null
operator|&&
operator|!
name|iAttributePreferences
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addAttributePreference
parameter_list|(
name|Preference
name|p
parameter_list|)
block|{
if|if
condition|(
name|iAttributePreferences
operator|==
literal|null
condition|)
name|iAttributePreferences
operator|=
operator|new
name|ArrayList
argument_list|<
name|Preference
argument_list|>
argument_list|()
expr_stmt|;
name|iAttributePreferences
operator|.
name|add
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Preference
argument_list|>
name|getAttributePreferences
parameter_list|()
block|{
return|return
name|iAttributePreferences
return|;
block|}
specifier|public
name|boolean
name|isAssignCoordinator
parameter_list|()
block|{
return|return
name|iAssignCoordinator
return|;
block|}
specifier|public
name|void
name|setAssignCoordinator
parameter_list|(
name|boolean
name|assign
parameter_list|)
block|{
name|iAssignCoordinator
operator|=
name|assign
expr_stmt|;
block|}
specifier|public
name|int
name|getPercentShare
parameter_list|()
block|{
return|return
name|iPercentShare
return|;
block|}
specifier|public
name|void
name|setPercentShare
parameter_list|(
name|Integer
name|percentShare
parameter_list|)
block|{
name|iPercentShare
operator|=
operator|(
name|percentShare
operator|==
literal|null
condition|?
literal|0
else|:
name|percentShare
operator|.
name|intValue
argument_list|()
operator|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|MultiRequest
extends|extends
name|Request
block|{
specifier|private
name|List
argument_list|<
name|RequestedClass
argument_list|>
name|iClasses
init|=
operator|new
name|ArrayList
argument_list|<
name|RequestedClass
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|IncludeLine
argument_list|>
name|iSubparts
init|=
operator|new
name|ArrayList
argument_list|<
name|IncludeLine
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|MultiRequest
parameter_list|()
block|{
block|}
specifier|public
name|void
name|addClass
parameter_list|(
name|RequestedClass
name|clazz
parameter_list|)
block|{
name|iClasses
operator|.
name|add
argument_list|(
name|clazz
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|RequestedClass
argument_list|>
name|getClasses
parameter_list|()
block|{
return|return
name|iClasses
return|;
block|}
specifier|public
name|RequestedClass
name|getClass
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
if|if
condition|(
name|id
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|RequestedClass
name|r
range|:
name|iClasses
control|)
if|if
condition|(
name|id
operator|.
name|equals
argument_list|(
name|r
operator|.
name|getClassId
argument_list|()
argument_list|)
condition|)
return|return
name|r
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|addSubpart
parameter_list|(
name|IncludeLine
name|subpart
parameter_list|)
block|{
name|iSubparts
operator|.
name|add
argument_list|(
name|subpart
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|IncludeLine
argument_list|>
name|getSubparts
parameter_list|()
block|{
return|return
name|iSubparts
return|;
block|}
specifier|public
name|IncludeLine
name|getSubpart
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
if|if
condition|(
name|id
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|IncludeLine
name|l
range|:
name|iSubparts
control|)
if|if
condition|(
name|id
operator|.
name|equals
argument_list|(
name|l
operator|.
name|getOwnerId
argument_list|()
argument_list|)
condition|)
return|return
name|l
return|;
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|SingleRequest
extends|extends
name|Request
block|{
specifier|private
name|Long
name|iRequestId
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Long
argument_list|>
name|iInstructorIds
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|IncludeLine
argument_list|>
name|iClasses
init|=
operator|new
name|ArrayList
argument_list|<
name|IncludeLine
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|int
name|iNbrInstructors
init|=
literal|1
decl_stmt|;
specifier|public
name|Long
name|getRequestId
parameter_list|()
block|{
return|return
name|iRequestId
return|;
block|}
specifier|public
name|void
name|setRequestId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iRequestId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|void
name|addClass
parameter_list|(
name|IncludeLine
name|clazz
parameter_list|)
block|{
name|iClasses
operator|.
name|add
argument_list|(
name|clazz
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|IncludeLine
argument_list|>
name|getClasses
parameter_list|()
block|{
return|return
name|iClasses
return|;
block|}
specifier|public
name|IncludeLine
name|getClazz
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
if|if
condition|(
name|id
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|IncludeLine
name|l
range|:
name|iClasses
control|)
if|if
condition|(
name|id
operator|.
name|equals
argument_list|(
name|l
operator|.
name|getOwnerId
argument_list|()
argument_list|)
condition|)
return|return
name|l
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|boolean
name|hasInstructors
parameter_list|()
block|{
return|return
name|iInstructorIds
operator|!=
literal|null
operator|&&
operator|!
name|iInstructorIds
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addInstructorId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
if|if
condition|(
name|iInstructorIds
operator|==
literal|null
condition|)
name|iInstructorIds
operator|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
expr_stmt|;
name|iInstructorIds
operator|.
name|add
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Long
argument_list|>
name|getInstructorIds
parameter_list|()
block|{
return|return
name|iInstructorIds
return|;
block|}
specifier|public
name|void
name|setInstructorIds
parameter_list|(
name|List
argument_list|<
name|Long
argument_list|>
name|instructorIds
parameter_list|)
block|{
name|iInstructorIds
operator|=
name|instructorIds
expr_stmt|;
block|}
specifier|public
name|int
name|getNbrInstructors
parameter_list|()
block|{
return|return
name|iNbrInstructors
return|;
block|}
specifier|public
name|void
name|setNbrInstructors
parameter_list|(
name|int
name|nbrInstructors
parameter_list|)
block|{
name|iNbrInstructors
operator|=
name|nbrInstructors
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|RequestedClass
implements|implements
name|IsSerializable
block|{
specifier|private
name|Long
name|iClassId
decl_stmt|;
specifier|private
name|Long
name|iRequestId
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Long
argument_list|>
name|iInstructorIds
init|=
literal|null
decl_stmt|;
specifier|private
name|int
name|iNbrInstructors
init|=
literal|1
decl_stmt|;
specifier|public
name|RequestedClass
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getClassId
parameter_list|()
block|{
return|return
name|iClassId
return|;
block|}
specifier|public
name|void
name|setClassId
parameter_list|(
name|Long
name|classId
parameter_list|)
block|{
name|iClassId
operator|=
name|classId
expr_stmt|;
block|}
specifier|public
name|Long
name|getRequestId
parameter_list|()
block|{
return|return
name|iRequestId
return|;
block|}
specifier|public
name|void
name|setRequestId
parameter_list|(
name|Long
name|requestId
parameter_list|)
block|{
name|iRequestId
operator|=
name|requestId
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasInstructors
parameter_list|()
block|{
return|return
name|iInstructorIds
operator|!=
literal|null
operator|&&
operator|!
name|iInstructorIds
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addInstructorId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
if|if
condition|(
name|iInstructorIds
operator|==
literal|null
condition|)
name|iInstructorIds
operator|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
expr_stmt|;
name|iInstructorIds
operator|.
name|add
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Long
argument_list|>
name|getInstructorIds
parameter_list|()
block|{
return|return
name|iInstructorIds
return|;
block|}
specifier|public
name|void
name|setInstructorIds
parameter_list|(
name|List
argument_list|<
name|Long
argument_list|>
name|instructorIds
parameter_list|)
block|{
name|iInstructorIds
operator|=
name|instructorIds
expr_stmt|;
block|}
specifier|public
name|int
name|getNbrInstructors
parameter_list|()
block|{
return|return
name|iNbrInstructors
return|;
block|}
specifier|public
name|void
name|setNbrInstructors
parameter_list|(
name|int
name|nbrInstructors
parameter_list|)
block|{
name|iNbrInstructors
operator|=
name|nbrInstructors
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|IncludeLine
implements|implements
name|IsSerializable
block|{
specifier|private
name|Long
name|iOwnerId
decl_stmt|;
specifier|private
name|boolean
name|iAssign
decl_stmt|;
specifier|private
name|int
name|iShare
decl_stmt|;
specifier|private
name|boolean
name|iLead
decl_stmt|;
specifier|private
name|boolean
name|iCanOverlap
decl_stmt|;
specifier|private
name|boolean
name|iCommon
decl_stmt|;
specifier|public
name|IncludeLine
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getOwnerId
parameter_list|()
block|{
return|return
name|iOwnerId
return|;
block|}
specifier|public
name|void
name|setOwnerId
parameter_list|(
name|Long
name|ownerId
parameter_list|)
block|{
name|iOwnerId
operator|=
name|ownerId
expr_stmt|;
block|}
specifier|public
name|boolean
name|isAssign
parameter_list|()
block|{
return|return
name|iAssign
return|;
block|}
specifier|public
name|void
name|setAssign
parameter_list|(
name|boolean
name|assign
parameter_list|)
block|{
name|iAssign
operator|=
name|assign
expr_stmt|;
block|}
specifier|public
name|int
name|getShare
parameter_list|()
block|{
return|return
name|iShare
return|;
block|}
specifier|public
name|void
name|setShare
parameter_list|(
name|int
name|share
parameter_list|)
block|{
name|iShare
operator|=
name|share
expr_stmt|;
block|}
specifier|public
name|boolean
name|isLead
parameter_list|()
block|{
return|return
name|iLead
return|;
block|}
specifier|public
name|void
name|setLead
parameter_list|(
name|boolean
name|lead
parameter_list|)
block|{
name|iLead
operator|=
name|lead
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanOverlap
parameter_list|()
block|{
return|return
name|iCanOverlap
return|;
block|}
specifier|public
name|void
name|setCanOverlap
parameter_list|(
name|boolean
name|canOverlap
parameter_list|)
block|{
name|iCanOverlap
operator|=
name|canOverlap
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCommon
parameter_list|()
block|{
return|return
name|iCommon
return|;
block|}
specifier|public
name|void
name|setCommon
parameter_list|(
name|boolean
name|common
parameter_list|)
block|{
name|iCommon
operator|=
name|common
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|Preference
implements|implements
name|IsSerializable
block|{
specifier|private
name|Long
name|iOwnerId
decl_stmt|;
specifier|private
name|Long
name|iPreferenceId
decl_stmt|;
specifier|public
name|Preference
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getOwnerId
parameter_list|()
block|{
return|return
name|iOwnerId
return|;
block|}
specifier|public
name|void
name|setOwnerId
parameter_list|(
name|Long
name|ownerId
parameter_list|)
block|{
name|iOwnerId
operator|=
name|ownerId
expr_stmt|;
block|}
specifier|public
name|Long
name|getPreferenceId
parameter_list|()
block|{
return|return
name|iPreferenceId
return|;
block|}
specifier|public
name|void
name|setPreferenceId
parameter_list|(
name|Long
name|preferenceId
parameter_list|)
block|{
name|iPreferenceId
operator|=
name|preferenceId
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|Properties
implements|implements
name|IsSerializable
block|{
specifier|private
name|Offering
name|iOffering
decl_stmt|;
name|List
argument_list|<
name|PreferenceInterface
argument_list|>
name|iPreferences
init|=
operator|new
name|ArrayList
argument_list|<
name|PreferenceInterface
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|InstructorInterface
argument_list|>
name|iInstructors
init|=
operator|new
name|ArrayList
argument_list|<
name|InstructorInterface
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AttributeInterface
argument_list|>
name|iAttributes
init|=
operator|new
name|ArrayList
argument_list|<
name|AttributeInterface
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Responsibility
argument_list|>
name|iResponsibilities
init|=
operator|new
name|ArrayList
argument_list|<
name|Responsibility
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|Properties
parameter_list|()
block|{
block|}
specifier|public
name|Offering
name|getOffering
parameter_list|()
block|{
return|return
name|iOffering
return|;
block|}
specifier|public
name|void
name|setOffering
parameter_list|(
name|Offering
name|offering
parameter_list|)
block|{
name|iOffering
operator|=
name|offering
expr_stmt|;
block|}
specifier|public
name|void
name|addPreference
parameter_list|(
name|PreferenceInterface
name|preference
parameter_list|)
block|{
name|iPreferences
operator|.
name|add
argument_list|(
name|preference
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|PreferenceInterface
argument_list|>
name|getPreferences
parameter_list|()
block|{
return|return
name|iPreferences
return|;
block|}
specifier|public
name|PreferenceInterface
name|getPreference
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
if|if
condition|(
name|id
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|PreferenceInterface
name|p
range|:
name|iPreferences
control|)
if|if
condition|(
name|id
operator|.
name|equals
argument_list|(
name|p
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
return|return
name|p
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|addInstructor
parameter_list|(
name|InstructorInterface
name|instructor
parameter_list|)
block|{
name|iInstructors
operator|.
name|add
argument_list|(
name|instructor
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|InstructorInterface
argument_list|>
name|getInstructors
parameter_list|()
block|{
return|return
name|iInstructors
return|;
block|}
specifier|public
name|InstructorInterface
name|getInstructor
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
if|if
condition|(
name|id
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|InstructorInterface
name|i
range|:
name|iInstructors
control|)
if|if
condition|(
name|id
operator|.
name|equals
argument_list|(
name|i
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
return|return
name|i
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|addAttribute
parameter_list|(
name|AttributeInterface
name|attribute
parameter_list|)
block|{
name|iAttributes
operator|.
name|add
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|AttributeInterface
argument_list|>
name|getAttributes
parameter_list|()
block|{
return|return
name|iAttributes
return|;
block|}
specifier|public
name|AttributeInterface
name|getAttribute
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
if|if
condition|(
name|id
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|AttributeInterface
name|a
range|:
name|iAttributes
control|)
if|if
condition|(
name|id
operator|.
name|equals
argument_list|(
name|a
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
return|return
name|a
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|addResponsibility
parameter_list|(
name|Responsibility
name|responsibility
parameter_list|)
block|{
name|iResponsibilities
operator|.
name|add
argument_list|(
name|responsibility
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Responsibility
argument_list|>
name|getResponsibilities
parameter_list|()
block|{
return|return
name|iResponsibilities
return|;
block|}
specifier|public
name|Responsibility
name|getResponsibility
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
if|if
condition|(
name|id
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|Responsibility
name|r
range|:
name|iResponsibilities
control|)
if|if
condition|(
name|id
operator|.
name|equals
argument_list|(
name|r
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
return|return
name|r
return|;
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|Responsibility
extends|extends
name|IdName
block|{
specifier|private
name|boolean
name|iCoordinator
decl_stmt|,
name|iInstructor
decl_stmt|;
specifier|public
name|Responsibility
parameter_list|()
block|{
block|}
specifier|public
name|void
name|setCoordinator
parameter_list|(
name|boolean
name|coordinator
parameter_list|)
block|{
name|iCoordinator
operator|=
name|coordinator
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCoordinator
parameter_list|()
block|{
return|return
name|iCoordinator
return|;
block|}
specifier|public
name|void
name|setInstructor
parameter_list|(
name|boolean
name|instructor
parameter_list|)
block|{
name|iInstructor
operator|=
name|instructor
expr_stmt|;
block|}
specifier|public
name|boolean
name|isInstructor
parameter_list|()
block|{
return|return
name|iInstructor
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|GetRequestsRpcRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|GetRequestsRpcResponse
argument_list|>
block|{
specifier|private
name|Long
name|iOfferingId
decl_stmt|;
specifier|public
name|GetRequestsRpcRequest
parameter_list|()
block|{
block|}
specifier|public
name|void
name|setOfferingId
parameter_list|(
name|Long
name|offeringId
parameter_list|)
block|{
name|iOfferingId
operator|=
name|offeringId
expr_stmt|;
block|}
specifier|public
name|Long
name|getOfferingId
parameter_list|()
block|{
return|return
name|iOfferingId
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|GetRequestsRpcResponse
extends|extends
name|Properties
implements|implements
name|GwtRpcResponse
block|{
specifier|private
name|List
argument_list|<
name|Request
argument_list|>
name|iRequests
init|=
operator|new
name|ArrayList
argument_list|<
name|Request
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|GetRequestsRpcResponse
parameter_list|()
block|{
block|}
specifier|public
name|void
name|addRequest
parameter_list|(
name|Request
name|request
parameter_list|)
block|{
name|iRequests
operator|.
name|add
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Request
argument_list|>
name|getRequests
parameter_list|()
block|{
return|return
name|iRequests
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|SaveRequestsRpcRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|GwtRpcResponseNull
argument_list|>
block|{
specifier|private
name|Long
name|iOfferingId
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Request
argument_list|>
name|iRequests
init|=
operator|new
name|ArrayList
argument_list|<
name|Request
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|SaveRequestsRpcRequest
parameter_list|()
block|{
block|}
specifier|public
name|void
name|setOfferingId
parameter_list|(
name|Long
name|offeringId
parameter_list|)
block|{
name|iOfferingId
operator|=
name|offeringId
expr_stmt|;
block|}
specifier|public
name|Long
name|getOfferingId
parameter_list|()
block|{
return|return
name|iOfferingId
return|;
block|}
specifier|public
name|void
name|addRequest
parameter_list|(
name|Request
name|request
parameter_list|)
block|{
name|iRequests
operator|.
name|add
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Request
argument_list|>
name|getRequests
parameter_list|()
block|{
return|return
name|iRequests
return|;
block|}
block|}
block|}
end_class

end_unit

