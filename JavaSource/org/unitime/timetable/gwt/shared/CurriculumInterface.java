begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 - 3.5 (University Timetabling Application)  * Copyright (C) 2010 - 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|FilterRpcRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|IsSerializable
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|CurriculumInterface
implements|implements
name|IsSerializable
implements|,
name|Comparable
argument_list|<
name|CurriculumInterface
argument_list|>
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iAbbv
decl_stmt|,
name|iName
decl_stmt|;
specifier|private
name|boolean
name|iEditable
init|=
literal|false
decl_stmt|;
specifier|private
name|String
name|iLastChange
init|=
literal|null
decl_stmt|;
specifier|private
name|AcademicAreaInterface
name|iAcademicArea
decl_stmt|;
specifier|private
name|TreeSet
argument_list|<
name|MajorInterface
argument_list|>
name|iMajors
decl_stmt|;
specifier|private
name|DepartmentInterface
name|iDept
decl_stmt|;
specifier|private
name|TreeSet
argument_list|<
name|CurriculumClassificationInterface
argument_list|>
name|iClasf
decl_stmt|;
specifier|private
name|TreeSet
argument_list|<
name|CourseInterface
argument_list|>
name|iCourses
decl_stmt|;
specifier|public
name|CurriculumInterface
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getAbbv
parameter_list|()
block|{
return|return
name|iAbbv
return|;
block|}
specifier|public
name|void
name|setAbbv
parameter_list|(
name|String
name|abbv
parameter_list|)
block|{
name|iAbbv
operator|=
name|abbv
expr_stmt|;
block|}
specifier|public
name|String
name|getLastChange
parameter_list|()
block|{
return|return
name|iLastChange
return|;
block|}
specifier|public
name|void
name|setLastChange
parameter_list|(
name|String
name|lastChange
parameter_list|)
block|{
name|iLastChange
operator|=
name|lastChange
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasLastChange
parameter_list|()
block|{
return|return
name|iLastChange
operator|!=
literal|null
operator|&&
operator|!
name|iLastChange
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|AcademicAreaInterface
name|getAcademicArea
parameter_list|()
block|{
return|return
name|iAcademicArea
return|;
block|}
specifier|public
name|void
name|setAcademicArea
parameter_list|(
name|AcademicAreaInterface
name|area
parameter_list|)
block|{
name|iAcademicArea
operator|=
name|area
expr_stmt|;
block|}
specifier|public
name|TreeSet
argument_list|<
name|MajorInterface
argument_list|>
name|getMajors
parameter_list|()
block|{
return|return
name|iMajors
return|;
block|}
specifier|public
name|boolean
name|hasMajors
parameter_list|()
block|{
return|return
name|iMajors
operator|!=
literal|null
operator|&&
operator|!
name|iMajors
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addMajor
parameter_list|(
name|MajorInterface
name|major
parameter_list|)
block|{
if|if
condition|(
name|iMajors
operator|==
literal|null
condition|)
name|iMajors
operator|=
operator|new
name|TreeSet
argument_list|<
name|MajorInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iMajors
operator|.
name|add
argument_list|(
name|major
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getMajorNames
parameter_list|(
name|String
name|delim
parameter_list|)
block|{
name|String
name|ret
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|iMajors
operator|==
literal|null
condition|)
return|return
name|ret
return|;
for|for
control|(
name|MajorInterface
name|major
range|:
name|iMajors
control|)
block|{
if|if
condition|(
operator|!
name|ret
operator|.
name|isEmpty
argument_list|()
condition|)
name|ret
operator|+=
name|delim
expr_stmt|;
name|ret
operator|+=
name|major
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
specifier|public
name|String
name|getMajorCodes
parameter_list|(
name|String
name|delim
parameter_list|)
block|{
name|String
name|ret
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|iMajors
operator|==
literal|null
condition|)
return|return
name|ret
return|;
for|for
control|(
name|MajorInterface
name|major
range|:
name|iMajors
control|)
block|{
if|if
condition|(
operator|!
name|ret
operator|.
name|isEmpty
argument_list|()
condition|)
name|ret
operator|+=
name|delim
expr_stmt|;
name|ret
operator|+=
name|major
operator|.
name|getCode
argument_list|()
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
specifier|public
name|String
name|getCodeMajorNames
parameter_list|(
name|String
name|delim
parameter_list|)
block|{
name|String
name|ret
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|iMajors
operator|==
literal|null
condition|)
return|return
name|ret
return|;
for|for
control|(
name|MajorInterface
name|major
range|:
name|iMajors
control|)
block|{
if|if
condition|(
operator|!
name|ret
operator|.
name|isEmpty
argument_list|()
condition|)
name|ret
operator|+=
name|delim
expr_stmt|;
name|ret
operator|+=
name|major
operator|.
name|getCode
argument_list|()
operator|+
literal|" - "
operator|+
name|major
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
specifier|public
name|DepartmentInterface
name|getDepartment
parameter_list|()
block|{
return|return
name|iDept
return|;
block|}
specifier|public
name|void
name|setDepartment
parameter_list|(
name|DepartmentInterface
name|dept
parameter_list|)
block|{
name|iDept
operator|=
name|dept
expr_stmt|;
block|}
specifier|public
name|TreeSet
argument_list|<
name|CurriculumClassificationInterface
argument_list|>
name|getClassifications
parameter_list|()
block|{
return|return
name|iClasf
return|;
block|}
specifier|public
name|boolean
name|hasClassifications
parameter_list|()
block|{
return|return
name|iClasf
operator|!=
literal|null
return|;
block|}
specifier|public
name|void
name|addClassification
parameter_list|(
name|CurriculumClassificationInterface
name|clasf
parameter_list|)
block|{
if|if
condition|(
name|iClasf
operator|==
literal|null
condition|)
name|iClasf
operator|=
operator|new
name|TreeSet
argument_list|<
name|CurriculumClassificationInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iClasf
operator|.
name|add
argument_list|(
name|clasf
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TreeSet
argument_list|<
name|CourseInterface
argument_list|>
name|getCourses
parameter_list|()
block|{
return|return
name|iCourses
return|;
block|}
specifier|public
name|boolean
name|hasCourses
parameter_list|()
block|{
return|return
name|iCourses
operator|!=
literal|null
operator|&&
operator|!
name|iCourses
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addCourse
parameter_list|(
name|CourseInterface
name|course
parameter_list|)
block|{
if|if
condition|(
name|iCourses
operator|==
literal|null
condition|)
name|iCourses
operator|=
operator|new
name|TreeSet
argument_list|<
name|CourseInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iCourses
operator|.
name|add
argument_list|(
name|course
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Integer
name|getExpected
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasClassifications
argument_list|()
condition|)
return|return
literal|null
return|;
name|int
name|ret
init|=
literal|0
decl_stmt|;
for|for
control|(
name|CurriculumClassificationInterface
name|c
range|:
name|getClassifications
argument_list|()
control|)
name|ret
operator|+=
operator|(
name|c
operator|.
name|getExpected
argument_list|()
operator|==
literal|null
condition|?
literal|0
else|:
name|c
operator|.
name|getExpected
argument_list|()
operator|)
expr_stmt|;
return|return
name|ret
return|;
block|}
specifier|public
name|Integer
name|getEnrollment
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasClassifications
argument_list|()
condition|)
return|return
literal|null
return|;
name|int
name|ret
init|=
literal|0
decl_stmt|;
for|for
control|(
name|CurriculumClassificationInterface
name|c
range|:
name|getClassifications
argument_list|()
control|)
name|ret
operator|+=
operator|(
name|c
operator|.
name|getEnrollment
argument_list|()
operator|==
literal|null
condition|?
literal|0
else|:
name|c
operator|.
name|getEnrollment
argument_list|()
operator|)
expr_stmt|;
return|return
name|ret
return|;
block|}
specifier|public
name|Integer
name|getLastLike
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasClassifications
argument_list|()
condition|)
return|return
literal|null
return|;
name|int
name|ret
init|=
literal|0
decl_stmt|;
for|for
control|(
name|CurriculumClassificationInterface
name|c
range|:
name|getClassifications
argument_list|()
control|)
name|ret
operator|+=
operator|(
name|c
operator|.
name|getLastLike
argument_list|()
operator|==
literal|null
condition|?
literal|0
else|:
name|c
operator|.
name|getLastLike
argument_list|()
operator|)
expr_stmt|;
return|return
name|ret
return|;
block|}
specifier|public
name|Integer
name|getProjection
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasClassifications
argument_list|()
condition|)
return|return
literal|null
return|;
name|int
name|ret
init|=
literal|0
decl_stmt|;
for|for
control|(
name|CurriculumClassificationInterface
name|c
range|:
name|getClassifications
argument_list|()
control|)
name|ret
operator|+=
operator|(
name|c
operator|.
name|getProjection
argument_list|()
operator|==
literal|null
condition|?
literal|0
else|:
name|c
operator|.
name|getProjection
argument_list|()
operator|)
expr_stmt|;
return|return
name|ret
return|;
block|}
specifier|public
name|Integer
name|getRequested
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasClassifications
argument_list|()
condition|)
return|return
literal|null
return|;
name|int
name|ret
init|=
literal|0
decl_stmt|;
for|for
control|(
name|CurriculumClassificationInterface
name|c
range|:
name|getClassifications
argument_list|()
control|)
name|ret
operator|+=
operator|(
name|c
operator|.
name|getRequested
argument_list|()
operator|==
literal|null
condition|?
literal|0
else|:
name|c
operator|.
name|getRequested
argument_list|()
operator|)
expr_stmt|;
return|return
name|ret
return|;
block|}
specifier|public
name|String
name|getExpectedString
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasClassifications
argument_list|()
condition|)
return|return
literal|"?"
return|;
name|Integer
name|count
init|=
name|getExpected
argument_list|()
decl_stmt|;
return|return
operator|(
name|count
operator|==
literal|null
condition|?
literal|"N/A"
else|:
name|count
operator|.
name|toString
argument_list|()
operator|)
return|;
block|}
specifier|public
name|String
name|getLastLikeString
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasClassifications
argument_list|()
condition|)
return|return
literal|"?"
return|;
name|Integer
name|count
init|=
name|getLastLike
argument_list|()
decl_stmt|;
return|return
operator|(
name|count
operator|==
literal|null
condition|?
literal|"N/A"
else|:
name|count
operator|.
name|toString
argument_list|()
operator|)
return|;
block|}
specifier|public
name|String
name|getProjectionString
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasClassifications
argument_list|()
condition|)
return|return
literal|"?"
return|;
name|Integer
name|count
init|=
name|getProjection
argument_list|()
decl_stmt|;
return|return
operator|(
name|count
operator|==
literal|null
condition|?
literal|"N/A"
else|:
name|count
operator|.
name|toString
argument_list|()
operator|)
return|;
block|}
specifier|public
name|String
name|getEnrollmentString
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasClassifications
argument_list|()
condition|)
return|return
literal|"?"
return|;
name|Integer
name|count
init|=
name|getEnrollment
argument_list|()
decl_stmt|;
return|return
operator|(
name|count
operator|==
literal|null
condition|?
literal|"N/A"
else|:
name|count
operator|.
name|toString
argument_list|()
operator|)
return|;
block|}
specifier|public
name|String
name|getRequestedString
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasClassifications
argument_list|()
condition|)
return|return
literal|"?"
return|;
name|Integer
name|count
init|=
name|getRequested
argument_list|()
decl_stmt|;
return|return
operator|(
name|count
operator|==
literal|null
condition|?
literal|"N/A"
else|:
name|count
operator|.
name|toString
argument_list|()
operator|)
return|;
block|}
specifier|public
name|void
name|setEditable
parameter_list|(
name|boolean
name|editable
parameter_list|)
block|{
name|iEditable
operator|=
name|editable
expr_stmt|;
block|}
specifier|public
name|boolean
name|isEditable
parameter_list|()
block|{
return|return
name|iEditable
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|CurriculumInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|CurriculumInterface
operator|)
name|o
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
operator|(
name|getId
argument_list|()
operator|==
literal|null
condition|?
literal|0
else|:
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
operator|)
return|;
block|}
specifier|public
name|int
name|compareTo
parameter_list|(
name|CurriculumInterface
name|curriculum
parameter_list|)
block|{
name|int
name|cmp
init|=
name|getAbbv
argument_list|()
operator|.
name|compareTo
argument_list|(
name|curriculum
operator|.
name|getAbbv
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
return|return
name|getId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|curriculum
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
class|class
name|AcademicAreaInterface
implements|implements
name|IsSerializable
implements|,
name|Comparable
argument_list|<
name|AcademicAreaInterface
argument_list|>
block|{
specifier|private
name|Long
name|iAreaId
decl_stmt|;
specifier|private
name|String
name|iAreaAbbv
decl_stmt|,
name|iAreaName
decl_stmt|;
specifier|public
name|AcademicAreaInterface
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iAreaId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iAreaId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getAbbv
parameter_list|()
block|{
return|return
name|iAreaAbbv
return|;
block|}
specifier|public
name|void
name|setAbbv
parameter_list|(
name|String
name|abbv
parameter_list|)
block|{
name|iAreaAbbv
operator|=
name|abbv
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iAreaName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iAreaName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|AcademicAreaInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|AcademicAreaInterface
operator|)
name|o
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|int
name|compareTo
parameter_list|(
name|AcademicAreaInterface
name|area
parameter_list|)
block|{
name|int
name|cmp
init|=
name|getAbbv
argument_list|()
operator|.
name|compareTo
argument_list|(
name|area
operator|.
name|getAbbv
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
return|return
name|getId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|area
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|MajorInterface
implements|implements
name|IsSerializable
implements|,
name|Comparable
argument_list|<
name|MajorInterface
argument_list|>
block|{
specifier|private
name|Long
name|iMajorId
decl_stmt|;
specifier|private
name|String
name|iMajorCode
decl_stmt|,
name|iMajorName
decl_stmt|;
specifier|public
name|MajorInterface
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iMajorId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iMajorId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getCode
parameter_list|()
block|{
return|return
name|iMajorCode
return|;
block|}
specifier|public
name|void
name|setCode
parameter_list|(
name|String
name|code
parameter_list|)
block|{
name|iMajorCode
operator|=
name|code
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iMajorName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iMajorName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|MajorInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|MajorInterface
operator|)
name|o
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|int
name|compareTo
parameter_list|(
name|MajorInterface
name|major
parameter_list|)
block|{
if|if
condition|(
name|getCode
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|int
name|cmp
init|=
name|getCode
argument_list|()
operator|.
name|compareTo
argument_list|(
name|major
operator|.
name|getCode
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
block|}
return|return
name|getId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|major
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|DepartmentInterface
implements|implements
name|IsSerializable
implements|,
name|Comparable
argument_list|<
name|DepartmentInterface
argument_list|>
block|{
specifier|private
name|Long
name|iDeptId
decl_stmt|;
specifier|private
name|String
name|iDeptCode
decl_stmt|,
name|iDeptAbbv
decl_stmt|,
name|iDeptName
decl_stmt|;
specifier|public
name|DepartmentInterface
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iDeptId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iDeptId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getCode
parameter_list|()
block|{
return|return
name|iDeptCode
return|;
block|}
specifier|public
name|void
name|setCode
parameter_list|(
name|String
name|code
parameter_list|)
block|{
name|iDeptCode
operator|=
name|code
expr_stmt|;
block|}
specifier|public
name|String
name|getAbbv
parameter_list|()
block|{
return|return
name|iDeptAbbv
return|;
block|}
specifier|public
name|void
name|setAbbv
parameter_list|(
name|String
name|abbv
parameter_list|)
block|{
name|iDeptAbbv
operator|=
name|abbv
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iDeptName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iDeptName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
name|iDeptCode
operator|+
literal|" - "
operator|+
name|iDeptName
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|DepartmentInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|DepartmentInterface
operator|)
name|o
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|int
name|compareTo
parameter_list|(
name|DepartmentInterface
name|dept
parameter_list|)
block|{
name|int
name|cmp
init|=
name|getLabel
argument_list|()
operator|.
name|compareTo
argument_list|(
name|dept
operator|.
name|getLabel
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
return|return
name|getId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|dept
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|AcademicClassificationInterface
implements|implements
name|IsSerializable
implements|,
name|Comparable
argument_list|<
name|AcademicClassificationInterface
argument_list|>
block|{
specifier|private
name|Long
name|iClasfId
decl_stmt|;
specifier|private
name|String
name|iClasfCode
decl_stmt|,
name|iClasfName
decl_stmt|;
specifier|public
name|AcademicClassificationInterface
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iClasfId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iClasfId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getCode
parameter_list|()
block|{
return|return
name|iClasfCode
return|;
block|}
specifier|public
name|void
name|setCode
parameter_list|(
name|String
name|code
parameter_list|)
block|{
name|iClasfCode
operator|=
name|code
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iClasfName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iClasfName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|AcademicClassificationInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|AcademicClassificationInterface
operator|)
name|o
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|int
name|compareTo
parameter_list|(
name|AcademicClassificationInterface
name|clasf
parameter_list|)
block|{
name|int
name|cmp
init|=
name|getCode
argument_list|()
operator|.
name|compareTo
argument_list|(
name|clasf
operator|.
name|getCode
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
name|cmp
operator|=
name|getName
argument_list|()
operator|.
name|compareTo
argument_list|(
name|clasf
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
return|return
name|getId
argument_list|()
operator|.
name|compareTo
argument_list|(
name|clasf
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|CurriculumClassificationInterface
implements|implements
name|IsSerializable
implements|,
name|Comparable
argument_list|<
name|CurriculumClassificationInterface
argument_list|>
block|{
specifier|private
name|Long
name|iCurriculumId
decl_stmt|,
name|iClasfId
decl_stmt|;
specifier|private
name|String
name|iName
decl_stmt|;
specifier|private
name|Integer
name|iNrStudents
init|=
literal|null
decl_stmt|,
name|iEnrollment
init|=
literal|null
decl_stmt|,
name|iLastLike
init|=
literal|null
decl_stmt|,
name|iProjection
init|=
literal|null
decl_stmt|,
name|iRequested
init|=
literal|null
decl_stmt|;
specifier|private
name|AcademicClassificationInterface
name|iClasf
decl_stmt|;
specifier|private
name|TreeSet
argument_list|<
name|CurriculumCourseInterface
argument_list|>
name|iCourses
init|=
literal|null
decl_stmt|;
specifier|public
name|CurriculumClassificationInterface
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iClasfId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iClasfId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|Long
name|getCurriculumId
parameter_list|()
block|{
return|return
name|iCurriculumId
return|;
block|}
specifier|public
name|void
name|setCurriculumId
parameter_list|(
name|Long
name|curriculumId
parameter_list|)
block|{
name|iCurriculumId
operator|=
name|curriculumId
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|Integer
name|getExpected
parameter_list|()
block|{
return|return
name|iNrStudents
return|;
block|}
specifier|public
name|void
name|setExpected
parameter_list|(
name|Integer
name|nrStudents
parameter_list|)
block|{
name|iNrStudents
operator|=
name|nrStudents
expr_stmt|;
block|}
specifier|public
name|Integer
name|getEnrollment
parameter_list|()
block|{
return|return
name|iEnrollment
return|;
block|}
specifier|public
name|void
name|setEnrollment
parameter_list|(
name|Integer
name|enrollment
parameter_list|)
block|{
name|iEnrollment
operator|=
name|enrollment
expr_stmt|;
block|}
specifier|public
name|Integer
name|getRequested
parameter_list|()
block|{
return|return
name|iRequested
return|;
block|}
specifier|public
name|void
name|setRequested
parameter_list|(
name|Integer
name|requested
parameter_list|)
block|{
name|iRequested
operator|=
name|requested
expr_stmt|;
block|}
specifier|public
name|Integer
name|getLastLike
parameter_list|()
block|{
return|return
name|iLastLike
return|;
block|}
specifier|public
name|void
name|setLastLike
parameter_list|(
name|Integer
name|lastLike
parameter_list|)
block|{
name|iLastLike
operator|=
name|lastLike
expr_stmt|;
block|}
specifier|public
name|Integer
name|getProjection
parameter_list|()
block|{
return|return
name|iProjection
return|;
block|}
specifier|public
name|void
name|setProjection
parameter_list|(
name|Integer
name|projection
parameter_list|)
block|{
name|iProjection
operator|=
name|projection
expr_stmt|;
block|}
specifier|public
name|AcademicClassificationInterface
name|getAcademicClassification
parameter_list|()
block|{
return|return
name|iClasf
return|;
block|}
specifier|public
name|void
name|setAcademicClassification
parameter_list|(
name|AcademicClassificationInterface
name|clasf
parameter_list|)
block|{
name|iClasf
operator|=
name|clasf
expr_stmt|;
block|}
specifier|public
name|TreeSet
argument_list|<
name|CurriculumCourseInterface
argument_list|>
name|getCourses
parameter_list|()
block|{
return|return
name|iCourses
return|;
block|}
specifier|public
name|boolean
name|hasCourses
parameter_list|()
block|{
return|return
name|iCourses
operator|!=
literal|null
operator|&&
operator|!
name|iCourses
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addCourse
parameter_list|(
name|CurriculumCourseInterface
name|course
parameter_list|)
block|{
if|if
condition|(
name|iCourses
operator|==
literal|null
condition|)
name|iCourses
operator|=
operator|new
name|TreeSet
argument_list|<
name|CurriculumCourseInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iCourses
operator|.
name|add
argument_list|(
name|course
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|CurriculumClassificationInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|CurriculumClassificationInterface
operator|)
name|o
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|int
name|compareTo
parameter_list|(
name|CurriculumClassificationInterface
name|clasf
parameter_list|)
block|{
return|return
name|getAcademicClassification
argument_list|()
operator|.
name|compareTo
argument_list|(
name|clasf
operator|.
name|getAcademicClassification
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|CourseInterface
implements|implements
name|IsSerializable
implements|,
name|Comparable
argument_list|<
name|CourseInterface
argument_list|>
block|{
specifier|private
name|Long
name|iCourseId
decl_stmt|;
specifier|private
name|String
name|iCourseName
decl_stmt|;
specifier|private
name|List
argument_list|<
name|CurriculumCourseInterface
argument_list|>
name|iCurriculumCourses
decl_stmt|;
specifier|private
name|TreeSet
argument_list|<
name|CurriculumCourseGroupInterface
argument_list|>
name|iGroups
decl_stmt|;
specifier|public
name|CourseInterface
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iCourseId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iCourseId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getCourseName
parameter_list|()
block|{
return|return
name|iCourseName
return|;
block|}
specifier|public
name|void
name|setCourseName
parameter_list|(
name|String
name|courseName
parameter_list|)
block|{
name|iCourseName
operator|=
name|courseName
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasCurriculumCourses
parameter_list|()
block|{
return|return
name|iCurriculumCourses
operator|!=
literal|null
operator|&&
operator|!
name|iCurriculumCourses
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|setCurriculumCourse
parameter_list|(
name|int
name|idx
parameter_list|,
name|CurriculumCourseInterface
name|course
parameter_list|)
block|{
if|if
condition|(
name|iCurriculumCourses
operator|==
literal|null
condition|)
name|iCurriculumCourses
operator|=
operator|new
name|ArrayList
argument_list|<
name|CurriculumCourseInterface
argument_list|>
argument_list|()
expr_stmt|;
if|if
condition|(
name|idx
operator|<
name|iCurriculumCourses
operator|.
name|size
argument_list|()
condition|)
block|{
name|iCurriculumCourses
operator|.
name|set
argument_list|(
name|idx
argument_list|,
name|course
argument_list|)
expr_stmt|;
block|}
else|else
block|{
while|while
condition|(
name|iCurriculumCourses
operator|.
name|size
argument_list|()
operator|<
name|idx
condition|)
name|iCurriculumCourses
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|iCurriculumCourses
operator|.
name|add
argument_list|(
name|course
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|CurriculumCourseInterface
name|getCurriculumCourse
parameter_list|(
name|int
name|idx
parameter_list|)
block|{
if|if
condition|(
name|iCurriculumCourses
operator|==
literal|null
operator|||
name|idx
operator|>=
name|iCurriculumCourses
operator|.
name|size
argument_list|()
condition|)
return|return
literal|null
return|;
return|return
name|iCurriculumCourses
operator|.
name|get
argument_list|(
name|idx
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|CurriculumCourseInterface
argument_list|>
name|getCurriculumCourses
parameter_list|()
block|{
return|return
name|iCurriculumCourses
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|CourseInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|CourseInterface
operator|)
name|o
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|hasGroups
parameter_list|()
block|{
return|return
name|iGroups
operator|!=
literal|null
operator|&&
operator|!
name|iGroups
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addGroup
parameter_list|(
name|CurriculumCourseGroupInterface
name|group
parameter_list|)
block|{
if|if
condition|(
name|iGroups
operator|==
literal|null
condition|)
name|iGroups
operator|=
operator|new
name|TreeSet
argument_list|<
name|CurriculumCourseGroupInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iGroups
operator|.
name|add
argument_list|(
name|group
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TreeSet
argument_list|<
name|CurriculumCourseGroupInterface
argument_list|>
name|getGroups
parameter_list|()
block|{
return|return
name|iGroups
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|private
name|int
name|firstClassification
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasCurriculumCourses
argument_list|()
condition|)
return|return
operator|-
literal|1
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iCurriculumCourses
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|CurriculumCourseInterface
name|c
init|=
name|iCurriculumCourses
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|c
operator|==
literal|null
condition|)
continue|continue;
if|if
condition|(
name|c
operator|.
name|getShare
argument_list|()
operator|>
literal|0.0f
condition|)
return|return
name|i
return|;
block|}
return|return
name|iCurriculumCourses
operator|.
name|size
argument_list|()
return|;
block|}
specifier|private
name|int
name|highestClassification
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasCurriculumCourses
argument_list|()
condition|)
return|return
operator|-
literal|1
return|;
name|int
name|best
init|=
name|iCurriculumCourses
operator|.
name|size
argument_list|()
decl_stmt|;
name|double
name|bestShare
init|=
operator|-
literal|1.0f
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|iCurriculumCourses
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|CurriculumCourseInterface
name|c
init|=
name|iCurriculumCourses
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|c
operator|==
literal|null
condition|)
continue|continue;
if|if
condition|(
name|c
operator|.
name|getShare
argument_list|()
operator|>
name|bestShare
condition|)
block|{
name|bestShare
operator|=
name|c
operator|.
name|getShare
argument_list|()
expr_stmt|;
name|best
operator|=
name|i
expr_stmt|;
block|}
block|}
return|return
name|best
return|;
block|}
specifier|public
name|int
name|compareTo
parameter_list|(
name|CourseInterface
name|course
parameter_list|)
block|{
if|if
condition|(
name|hasCurriculumCourses
argument_list|()
condition|)
block|{
name|int
name|a
init|=
name|highestClassification
argument_list|()
decl_stmt|;
name|int
name|b
init|=
name|course
operator|.
name|highestClassification
argument_list|()
decl_stmt|;
if|if
condition|(
name|a
operator|<
name|b
condition|)
return|return
operator|-
literal|1
return|;
if|if
condition|(
name|a
operator|>
name|b
condition|)
return|return
literal|1
return|;
if|if
condition|(
name|a
operator|<=
name|iCurriculumCourses
operator|.
name|size
argument_list|()
condition|)
block|{
name|CurriculumCourseInterface
name|c
init|=
name|getCurriculumCourse
argument_list|(
name|a
argument_list|)
decl_stmt|;
name|CurriculumCourseInterface
name|d
init|=
name|course
operator|.
name|getCurriculumCourse
argument_list|(
name|a
argument_list|)
decl_stmt|;
name|int
name|cmp
init|=
name|Double
operator|.
name|compare
argument_list|(
name|d
operator|==
literal|null
condition|?
literal|0f
else|:
name|d
operator|.
name|getShare
argument_list|()
argument_list|,
name|c
operator|==
literal|null
condition|?
literal|0f
else|:
name|c
operator|.
name|getShare
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
block|}
name|a
operator|=
name|firstClassification
argument_list|()
expr_stmt|;
name|b
operator|=
name|course
operator|.
name|firstClassification
argument_list|()
expr_stmt|;
if|if
condition|(
name|a
operator|<
name|b
condition|)
return|return
operator|-
literal|1
return|;
if|if
condition|(
name|a
operator|>
name|b
condition|)
return|return
literal|1
return|;
while|while
condition|(
name|a
operator|<=
name|iCurriculumCourses
operator|.
name|size
argument_list|()
condition|)
block|{
name|CurriculumCourseInterface
name|c
init|=
name|getCurriculumCourse
argument_list|(
name|a
argument_list|)
decl_stmt|;
name|CurriculumCourseInterface
name|d
init|=
name|course
operator|.
name|getCurriculumCourse
argument_list|(
name|a
argument_list|)
decl_stmt|;
name|int
name|cmp
init|=
name|Double
operator|.
name|compare
argument_list|(
name|d
operator|==
literal|null
condition|?
literal|0f
else|:
name|d
operator|.
name|getShare
argument_list|()
argument_list|,
name|c
operator|==
literal|null
condition|?
literal|0f
else|:
name|c
operator|.
name|getShare
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
name|a
operator|++
expr_stmt|;
block|}
block|}
return|return
name|getCourseName
argument_list|()
operator|.
name|compareTo
argument_list|(
name|course
operator|.
name|getCourseName
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|CurriculumCourseInterface
implements|implements
name|IsSerializable
implements|,
name|Comparable
argument_list|<
name|CurriculumCourseInterface
argument_list|>
block|{
specifier|private
name|Long
name|iId
decl_stmt|,
name|iCourseId
decl_stmt|,
name|iClasfId
decl_stmt|;
specifier|private
name|String
name|iCourseName
decl_stmt|;
specifier|private
name|float
name|iShare
init|=
literal|0.0f
decl_stmt|;
specifier|private
name|Integer
name|iLastLike
init|=
literal|null
decl_stmt|,
name|iEnrollment
init|=
literal|null
decl_stmt|,
name|iProjection
init|=
literal|null
decl_stmt|,
name|iRequested
init|=
literal|null
decl_stmt|;
specifier|public
name|CurriculumCourseInterface
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|Long
name|getCourseOfferingId
parameter_list|()
block|{
return|return
name|iCourseId
return|;
block|}
specifier|public
name|void
name|setCourseOfferingId
parameter_list|(
name|Long
name|courseId
parameter_list|)
block|{
name|iCourseId
operator|=
name|courseId
expr_stmt|;
block|}
specifier|public
name|Long
name|getCurriculumClassificationId
parameter_list|()
block|{
return|return
name|iClasfId
return|;
block|}
specifier|public
name|void
name|setCurriculumClassificationId
parameter_list|(
name|Long
name|clasfId
parameter_list|)
block|{
name|iClasfId
operator|=
name|clasfId
expr_stmt|;
block|}
specifier|public
name|String
name|getCourseName
parameter_list|()
block|{
return|return
name|iCourseName
return|;
block|}
specifier|public
name|void
name|setCourseName
parameter_list|(
name|String
name|courseName
parameter_list|)
block|{
name|iCourseName
operator|=
name|courseName
expr_stmt|;
block|}
specifier|public
name|float
name|getShare
parameter_list|()
block|{
return|return
name|iShare
return|;
block|}
specifier|public
name|void
name|setShare
parameter_list|(
name|float
name|share
parameter_list|)
block|{
name|iShare
operator|=
name|share
expr_stmt|;
block|}
specifier|public
name|Integer
name|getLastLike
parameter_list|()
block|{
return|return
name|iLastLike
return|;
block|}
specifier|public
name|void
name|setLastLike
parameter_list|(
name|Integer
name|lastLike
parameter_list|)
block|{
name|iLastLike
operator|=
name|lastLike
expr_stmt|;
block|}
specifier|public
name|Integer
name|getEnrollment
parameter_list|()
block|{
return|return
name|iEnrollment
return|;
block|}
specifier|public
name|void
name|setEnrollment
parameter_list|(
name|Integer
name|enrollment
parameter_list|)
block|{
name|iEnrollment
operator|=
name|enrollment
expr_stmt|;
block|}
specifier|public
name|Integer
name|getRequested
parameter_list|()
block|{
return|return
name|iRequested
return|;
block|}
specifier|public
name|void
name|setRequested
parameter_list|(
name|Integer
name|requested
parameter_list|)
block|{
name|iRequested
operator|=
name|requested
expr_stmt|;
block|}
specifier|public
name|Integer
name|getProjection
parameter_list|()
block|{
return|return
name|iProjection
return|;
block|}
specifier|public
name|void
name|setProjection
parameter_list|(
name|Integer
name|projection
parameter_list|)
block|{
name|iProjection
operator|=
name|projection
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|CurriculumCourseInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|CurriculumCourseInterface
operator|)
name|o
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|int
name|compareTo
parameter_list|(
name|CurriculumCourseInterface
name|course
parameter_list|)
block|{
return|return
name|getCourseName
argument_list|()
operator|.
name|compareTo
argument_list|(
name|course
operator|.
name|getCourseName
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|CurriculumCourseGroupInterface
implements|implements
name|IsSerializable
implements|,
name|Comparable
argument_list|<
name|CurriculumCourseGroupInterface
argument_list|>
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iName
decl_stmt|,
name|iColor
decl_stmt|;
specifier|private
name|int
name|iType
decl_stmt|;
specifier|public
name|CurriculumCourseGroupInterface
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getColor
parameter_list|()
block|{
return|return
name|iColor
return|;
block|}
specifier|public
name|void
name|setColor
parameter_list|(
name|String
name|color
parameter_list|)
block|{
name|iColor
operator|=
name|color
expr_stmt|;
block|}
specifier|public
name|int
name|getType
parameter_list|()
block|{
return|return
name|iType
return|;
block|}
specifier|public
name|void
name|setType
parameter_list|(
name|int
name|type
parameter_list|)
block|{
name|iType
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|iName
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|CurriculumCourseGroupInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|CurriculumCourseGroupInterface
operator|)
name|o
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|compareTo
parameter_list|(
name|CurriculumCourseGroupInterface
name|g
parameter_list|)
block|{
return|return
name|getName
argument_list|()
operator|.
name|compareTo
argument_list|(
name|g
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|CurriculumStudentsInterface
implements|implements
name|IsSerializable
block|{
specifier|private
name|Set
argument_list|<
name|Long
argument_list|>
name|iEnrollment
init|=
literal|null
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|Long
argument_list|>
name|iRequested
init|=
literal|null
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|Long
argument_list|>
argument_list|>
name|iLastLike
init|=
literal|null
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|Float
argument_list|>
name|iProjection
init|=
literal|null
decl_stmt|;
specifier|public
name|CurriculumStudentsInterface
parameter_list|()
block|{
block|}
specifier|public
name|int
name|getEnrollment
parameter_list|()
block|{
return|return
operator|(
name|iEnrollment
operator|==
literal|null
operator|||
name|iEnrollment
operator|.
name|isEmpty
argument_list|()
condition|?
literal|0
else|:
name|iEnrollment
operator|.
name|size
argument_list|()
operator|)
return|;
block|}
specifier|public
name|int
name|getLastLike
parameter_list|()
block|{
if|if
condition|(
name|iLastLike
operator|==
literal|null
operator|||
name|iLastLike
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|0
return|;
name|int
name|lastLike
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|Long
argument_list|>
argument_list|>
name|entry
range|:
name|iLastLike
operator|.
name|entrySet
argument_list|()
control|)
name|lastLike
operator|+=
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
return|return
name|lastLike
return|;
block|}
specifier|public
name|int
name|getProjection
parameter_list|()
block|{
if|if
condition|(
name|iLastLike
operator|==
literal|null
operator|||
name|iLastLike
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|0
return|;
name|float
name|proj
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|Long
argument_list|>
argument_list|>
name|entry
range|:
name|iLastLike
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|Float
name|f
init|=
operator|(
name|iProjection
operator|==
literal|null
condition|?
literal|null
else|:
name|iProjection
operator|.
name|get
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|f
operator|==
literal|null
operator|&&
name|iProjection
operator|!=
literal|null
condition|)
name|f
operator|=
name|iProjection
operator|.
name|get
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|proj
operator|+=
operator|(
name|f
operator|==
literal|null
condition|?
literal|1.0f
else|:
name|f
operator|)
operator|*
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
return|return
name|Math
operator|.
name|round
argument_list|(
name|proj
argument_list|)
return|;
block|}
specifier|public
name|int
name|getRequested
parameter_list|()
block|{
return|return
operator|(
name|iRequested
operator|==
literal|null
operator|||
name|iRequested
operator|.
name|isEmpty
argument_list|()
condition|?
literal|0
else|:
name|iRequested
operator|.
name|size
argument_list|()
operator|)
return|;
block|}
specifier|public
name|Set
argument_list|<
name|Long
argument_list|>
name|getEnrolledStudents
parameter_list|()
block|{
return|return
name|iEnrollment
return|;
block|}
specifier|public
name|Set
argument_list|<
name|Long
argument_list|>
name|getLastLikeStudents
parameter_list|()
block|{
if|if
condition|(
name|iLastLike
operator|==
literal|null
operator|||
name|iLastLike
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|null
return|;
if|if
condition|(
name|iLastLike
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
return|return
name|iLastLike
operator|.
name|values
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
return|;
name|Set
argument_list|<
name|Long
argument_list|>
name|lastLike
init|=
operator|new
name|HashSet
argument_list|<
name|Long
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|Long
argument_list|>
argument_list|>
name|entry
range|:
name|iLastLike
operator|.
name|entrySet
argument_list|()
control|)
name|lastLike
operator|.
name|addAll
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|lastLike
return|;
block|}
specifier|public
name|Set
argument_list|<
name|Long
argument_list|>
name|getProjectedStudents
parameter_list|()
block|{
return|return
name|getLastLikeStudents
argument_list|()
return|;
block|}
specifier|public
name|int
name|countProjectedStudents
parameter_list|(
name|Set
argument_list|<
name|Long
argument_list|>
name|students
parameter_list|)
block|{
if|if
condition|(
name|iLastLike
operator|==
literal|null
operator|||
name|iLastLike
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|0
return|;
name|float
name|proj
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|Long
argument_list|>
argument_list|>
name|entry
range|:
name|iLastLike
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|int
name|share
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Long
name|student
range|:
name|entry
operator|.
name|getValue
argument_list|()
control|)
if|if
condition|(
name|students
operator|.
name|contains
argument_list|(
name|student
argument_list|)
condition|)
name|share
operator|++
expr_stmt|;
if|if
condition|(
name|share
operator|>
literal|0
condition|)
block|{
name|Float
name|f
init|=
operator|(
name|iProjection
operator|==
literal|null
condition|?
literal|null
else|:
name|iProjection
operator|.
name|get
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|f
operator|==
literal|null
operator|&&
name|iProjection
operator|!=
literal|null
condition|)
name|f
operator|=
name|iProjection
operator|.
name|get
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|proj
operator|+=
operator|(
name|f
operator|==
literal|null
condition|?
literal|1.0f
else|:
name|f
operator|)
operator|*
name|share
expr_stmt|;
block|}
block|}
return|return
name|Math
operator|.
name|round
argument_list|(
name|proj
argument_list|)
return|;
block|}
specifier|public
name|Set
argument_list|<
name|Long
argument_list|>
name|getRequestedStudents
parameter_list|()
block|{
return|return
name|iRequested
return|;
block|}
specifier|public
name|void
name|setEnrolledStudents
parameter_list|(
name|Set
argument_list|<
name|Long
argument_list|>
name|students
parameter_list|)
block|{
name|iEnrollment
operator|=
name|students
expr_stmt|;
block|}
specifier|public
name|void
name|setLastLikeStudents
parameter_list|(
name|HashMap
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|Long
argument_list|>
argument_list|>
name|students
parameter_list|)
block|{
name|iLastLike
operator|=
name|students
expr_stmt|;
block|}
specifier|public
name|void
name|setProjection
parameter_list|(
name|HashMap
argument_list|<
name|String
argument_list|,
name|Float
argument_list|>
name|projection
parameter_list|)
block|{
name|iProjection
operator|=
name|projection
expr_stmt|;
block|}
specifier|public
name|void
name|setRequestedStudents
parameter_list|(
name|Set
argument_list|<
name|Long
argument_list|>
name|students
parameter_list|)
block|{
name|iRequested
operator|=
name|students
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|CurriculumFilterRpcRequest
extends|extends
name|FilterRpcRequest
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|public
name|CurriculumFilterRpcRequest
parameter_list|()
block|{
block|}
block|}
block|}
end_class

end_unit

