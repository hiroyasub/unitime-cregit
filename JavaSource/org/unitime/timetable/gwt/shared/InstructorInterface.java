begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseNull
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|IsSerializable
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|InstructorInterface
implements|implements
name|IsSerializable
implements|,
name|Comparable
argument_list|<
name|InstructorInterface
argument_list|>
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iExternalId
decl_stmt|;
specifier|private
name|String
name|iFirstName
decl_stmt|,
name|iMiddleName
decl_stmt|,
name|iLastName
decl_stmt|,
name|iFormattedName
decl_stmt|,
name|iOrderName
decl_stmt|;
specifier|private
name|DepartmentInterface
name|iDepartment
init|=
literal|null
decl_stmt|;
specifier|private
name|PositionInterface
name|iPosition
init|=
literal|null
decl_stmt|;
specifier|private
name|PreferenceInterface
name|iTeachingPreference
init|=
literal|null
decl_stmt|;
specifier|private
name|Float
name|iMaxLoad
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|AttributeInterface
argument_list|>
name|iAttributes
decl_stmt|;
specifier|public
name|InstructorInterface
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getExternalId
parameter_list|()
block|{
return|return
name|iExternalId
return|;
block|}
specifier|public
name|void
name|setExternalId
parameter_list|(
name|String
name|externalId
parameter_list|)
block|{
name|iExternalId
operator|=
name|externalId
expr_stmt|;
block|}
specifier|public
name|String
name|getFirstName
parameter_list|()
block|{
return|return
name|iFirstName
return|;
block|}
specifier|public
name|void
name|setFirstName
parameter_list|(
name|String
name|fname
parameter_list|)
block|{
name|iFirstName
operator|=
name|fname
expr_stmt|;
block|}
specifier|public
name|String
name|getMiddleName
parameter_list|()
block|{
return|return
name|iMiddleName
return|;
block|}
specifier|public
name|void
name|setMiddleName
parameter_list|(
name|String
name|mname
parameter_list|)
block|{
name|iMiddleName
operator|=
name|mname
expr_stmt|;
block|}
specifier|public
name|String
name|getLastName
parameter_list|()
block|{
return|return
name|iLastName
return|;
block|}
specifier|public
name|void
name|setLastName
parameter_list|(
name|String
name|lname
parameter_list|)
block|{
name|iLastName
operator|=
name|lname
expr_stmt|;
block|}
specifier|public
name|String
name|getFormattedName
parameter_list|()
block|{
return|return
name|iFormattedName
return|;
block|}
specifier|public
name|void
name|setFormattedName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iFormattedName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getOrderName
parameter_list|()
block|{
return|return
operator|(
name|iOrderName
operator|!=
literal|null
condition|?
name|iOrderName
else|:
name|iFormattedName
operator|)
return|;
block|}
specifier|public
name|void
name|setOrderName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iOrderName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|DepartmentInterface
name|getDepartment
parameter_list|()
block|{
return|return
name|iDepartment
return|;
block|}
specifier|public
name|void
name|setDepartment
parameter_list|(
name|DepartmentInterface
name|department
parameter_list|)
block|{
name|iDepartment
operator|=
name|department
expr_stmt|;
block|}
specifier|public
name|PositionInterface
name|getPosition
parameter_list|()
block|{
return|return
name|iPosition
return|;
block|}
specifier|public
name|void
name|setPosition
parameter_list|(
name|PositionInterface
name|position
parameter_list|)
block|{
name|iPosition
operator|=
name|position
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasTeachingPreference
parameter_list|()
block|{
return|return
name|iTeachingPreference
operator|!=
literal|null
return|;
block|}
specifier|public
name|PreferenceInterface
name|getTeachingPreference
parameter_list|()
block|{
return|return
name|iTeachingPreference
return|;
block|}
specifier|public
name|void
name|setTeachingPreference
parameter_list|(
name|PreferenceInterface
name|teachingPreference
parameter_list|)
block|{
name|iTeachingPreference
operator|=
name|teachingPreference
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasMaxLoad
parameter_list|()
block|{
return|return
name|iTeachingPreference
operator|!=
literal|null
operator|&&
operator|!
literal|"P"
operator|.
name|equals
argument_list|(
name|iTeachingPreference
operator|.
name|getCode
argument_list|()
argument_list|)
operator|&&
name|iMaxLoad
operator|!=
literal|null
operator|&&
name|iMaxLoad
operator|>
literal|0f
return|;
block|}
specifier|public
name|Float
name|getMaxLoad
parameter_list|()
block|{
return|return
name|iMaxLoad
return|;
block|}
specifier|public
name|void
name|setMaxLoad
parameter_list|(
name|Float
name|maxLoad
parameter_list|)
block|{
name|iMaxLoad
operator|=
name|maxLoad
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasAttributes
parameter_list|()
block|{
return|return
name|iAttributes
operator|!=
literal|null
operator|&&
operator|!
name|iAttributes
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|AttributeInterface
argument_list|>
name|getAttributes
parameter_list|()
block|{
return|return
name|iAttributes
return|;
block|}
specifier|public
name|List
argument_list|<
name|AttributeInterface
argument_list|>
name|getAttributes
parameter_list|(
name|AttributeTypeInterface
name|type
parameter_list|)
block|{
name|List
argument_list|<
name|AttributeInterface
argument_list|>
name|ret
init|=
operator|new
name|ArrayList
argument_list|<
name|AttributeInterface
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|hasAttributes
argument_list|()
condition|)
for|for
control|(
name|AttributeInterface
name|a
range|:
name|getAttributes
argument_list|()
control|)
if|if
condition|(
name|type
operator|==
literal|null
operator|||
name|type
operator|.
name|equals
argument_list|(
name|a
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
name|ret
operator|.
name|add
argument_list|(
name|a
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
specifier|public
name|void
name|addAttribute
parameter_list|(
name|AttributeInterface
name|attribute
parameter_list|)
block|{
if|if
condition|(
name|iAttributes
operator|==
literal|null
condition|)
name|iAttributes
operator|=
operator|new
name|ArrayList
argument_list|<
name|AttributeInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iAttributes
operator|.
name|add
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasAttribute
parameter_list|(
name|Long
name|attributeId
parameter_list|)
block|{
if|if
condition|(
name|iAttributes
operator|==
literal|null
operator|||
name|attributeId
operator|==
literal|null
condition|)
return|return
literal|false
return|;
for|for
control|(
name|AttributeInterface
name|a
range|:
name|iAttributes
control|)
if|if
condition|(
name|a
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|attributeId
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|InstructorInterface
name|instructor
parameter_list|)
block|{
name|int
name|cmp
init|=
name|getOrderName
argument_list|()
operator|.
name|compareToIgnoreCase
argument_list|(
name|instructor
operator|.
name|getOrderName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
return|return
operator|(
name|getId
argument_list|()
operator|==
literal|null
condition|?
operator|new
name|Long
argument_list|(
operator|-
literal|1l
argument_list|)
else|:
name|getId
argument_list|()
operator|)
operator|.
name|compareTo
argument_list|(
name|instructor
operator|.
name|getId
argument_list|()
operator|==
literal|null
condition|?
operator|-
literal|1l
else|:
name|instructor
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
if|if
condition|(
name|object
operator|==
literal|null
operator|||
operator|!
operator|(
name|object
operator|instanceof
name|InstructorInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|InstructorInterface
operator|)
name|object
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
class|class
name|AttributeTypeInterface
implements|implements
name|GwtRpcResponse
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iAbbv
decl_stmt|;
specifier|private
name|String
name|iLabel
decl_stmt|;
specifier|private
name|boolean
name|iConjunctive
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|iRequired
init|=
literal|false
decl_stmt|;
specifier|public
name|AttributeTypeInterface
parameter_list|()
block|{
block|}
specifier|public
name|AttributeTypeInterface
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|abbv
parameter_list|,
name|String
name|label
parameter_list|,
name|boolean
name|conjunctive
parameter_list|,
name|boolean
name|required
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
name|iAbbv
operator|=
name|abbv
expr_stmt|;
name|iLabel
operator|=
name|label
expr_stmt|;
name|iConjunctive
operator|=
name|conjunctive
expr_stmt|;
name|iRequired
operator|=
name|required
expr_stmt|;
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getAbbreviation
parameter_list|()
block|{
return|return
name|iAbbv
return|;
block|}
specifier|public
name|void
name|setAbbreviation
parameter_list|(
name|String
name|abbv
parameter_list|)
block|{
name|iAbbv
operator|=
name|abbv
expr_stmt|;
block|}
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
name|iLabel
return|;
block|}
specifier|public
name|void
name|setLabel
parameter_list|(
name|String
name|label
parameter_list|)
block|{
name|iLabel
operator|=
name|label
expr_stmt|;
block|}
specifier|public
name|boolean
name|isConjunctive
parameter_list|()
block|{
return|return
name|iConjunctive
return|;
block|}
specifier|public
name|void
name|setConjunctive
parameter_list|(
name|boolean
name|conjunctive
parameter_list|)
block|{
name|iConjunctive
operator|=
name|conjunctive
expr_stmt|;
block|}
specifier|public
name|boolean
name|isRequired
parameter_list|()
block|{
return|return
name|iRequired
return|;
block|}
specifier|public
name|void
name|setRequired
parameter_list|(
name|boolean
name|required
parameter_list|)
block|{
name|iRequired
operator|=
name|required
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
if|if
condition|(
name|object
operator|==
literal|null
operator|||
operator|!
operator|(
name|object
operator|instanceof
name|AttributeTypeInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|AttributeTypeInterface
operator|)
name|object
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|PositionInterface
implements|implements
name|GwtRpcResponse
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iAbbv
decl_stmt|;
specifier|private
name|String
name|iLabel
decl_stmt|;
specifier|private
name|Integer
name|iSortOrder
decl_stmt|;
specifier|public
name|PositionInterface
parameter_list|()
block|{
block|}
specifier|public
name|PositionInterface
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|abbv
parameter_list|,
name|String
name|label
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
name|iAbbv
operator|=
name|abbv
expr_stmt|;
name|iLabel
operator|=
name|label
expr_stmt|;
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getAbbreviation
parameter_list|()
block|{
return|return
name|iAbbv
return|;
block|}
specifier|public
name|void
name|setAbbreviation
parameter_list|(
name|String
name|abbv
parameter_list|)
block|{
name|iAbbv
operator|=
name|abbv
expr_stmt|;
block|}
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
name|iLabel
return|;
block|}
specifier|public
name|void
name|setLabel
parameter_list|(
name|String
name|label
parameter_list|)
block|{
name|iLabel
operator|=
name|label
expr_stmt|;
block|}
specifier|public
name|Integer
name|getSortOrder
parameter_list|()
block|{
return|return
name|iSortOrder
return|;
block|}
specifier|public
name|void
name|setSortOrder
parameter_list|(
name|Integer
name|sortOrder
parameter_list|)
block|{
name|iSortOrder
operator|=
name|sortOrder
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
if|if
condition|(
name|object
operator|==
literal|null
operator|||
operator|!
operator|(
name|object
operator|instanceof
name|PositionInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|PositionInterface
operator|)
name|object
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|DepartmentInterface
implements|implements
name|IsSerializable
block|{
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|String
name|iAbbv
decl_stmt|;
specifier|private
name|String
name|iCode
decl_stmt|;
specifier|private
name|String
name|iLabel
decl_stmt|;
specifier|private
name|String
name|iTitle
decl_stmt|;
specifier|private
name|boolean
name|iCanAddAttribute
decl_stmt|,
name|iCanSeeAttributes
decl_stmt|;
specifier|public
name|DepartmentInterface
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getAbbreviation
parameter_list|()
block|{
return|return
name|iAbbv
return|;
block|}
specifier|public
name|void
name|setAbbreviation
parameter_list|(
name|String
name|abbv
parameter_list|)
block|{
name|iAbbv
operator|=
name|abbv
expr_stmt|;
block|}
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
name|iLabel
return|;
block|}
specifier|public
name|void
name|setLabel
parameter_list|(
name|String
name|label
parameter_list|)
block|{
name|iLabel
operator|=
name|label
expr_stmt|;
block|}
specifier|public
name|String
name|getDeptCode
parameter_list|()
block|{
return|return
name|iCode
return|;
block|}
specifier|public
name|void
name|setDeptCode
parameter_list|(
name|String
name|code
parameter_list|)
block|{
name|iCode
operator|=
name|code
expr_stmt|;
block|}
specifier|public
name|String
name|getTitle
parameter_list|()
block|{
return|return
name|iTitle
return|;
block|}
specifier|public
name|void
name|setTitle
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|iTitle
operator|=
name|title
expr_stmt|;
block|}
specifier|public
name|String
name|getAbbreviationOrCode
parameter_list|()
block|{
return|return
name|getAbbreviation
argument_list|()
operator|==
literal|null
operator|||
name|getAbbreviation
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|?
name|getDeptCode
argument_list|()
else|:
name|getAbbreviation
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isCanSeeAttributes
parameter_list|()
block|{
return|return
name|iCanSeeAttributes
return|;
block|}
specifier|public
name|void
name|setCanSeeAttributes
parameter_list|(
name|boolean
name|canSeeAttributes
parameter_list|)
block|{
name|iCanSeeAttributes
operator|=
name|canSeeAttributes
expr_stmt|;
block|}
specifier|public
name|boolean
name|isCanAddAttribute
parameter_list|()
block|{
return|return
name|iCanAddAttribute
return|;
block|}
specifier|public
name|void
name|setCanAddAttribute
parameter_list|(
name|boolean
name|canAddAttribute
parameter_list|)
block|{
name|iCanAddAttribute
operator|=
name|canAddAttribute
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|DepartmentInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|DepartmentInterface
operator|)
name|o
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|PreferenceInterface
implements|implements
name|IsSerializable
block|{
specifier|private
name|String
name|iCode
decl_stmt|,
name|iName
decl_stmt|,
name|iAbbv
decl_stmt|;
specifier|private
name|String
name|iColor
decl_stmt|;
specifier|private
name|Long
name|iId
decl_stmt|;
specifier|private
name|boolean
name|iEditable
decl_stmt|;
specifier|public
name|PreferenceInterface
parameter_list|()
block|{
block|}
specifier|public
name|PreferenceInterface
parameter_list|(
name|Long
name|id
parameter_list|,
name|String
name|color
parameter_list|,
name|String
name|code
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|abbv
parameter_list|,
name|boolean
name|editable
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
name|iColor
operator|=
name|color
expr_stmt|;
name|iCode
operator|=
name|code
expr_stmt|;
name|iName
operator|=
name|name
expr_stmt|;
name|iAbbv
operator|=
name|abbv
expr_stmt|;
name|iEditable
operator|=
name|editable
expr_stmt|;
block|}
specifier|public
name|String
name|getColor
parameter_list|()
block|{
return|return
name|iColor
return|;
block|}
specifier|public
name|void
name|setColor
parameter_list|(
name|String
name|color
parameter_list|)
block|{
name|iColor
operator|=
name|color
expr_stmt|;
block|}
specifier|public
name|String
name|getCode
parameter_list|()
block|{
return|return
name|iCode
return|;
block|}
specifier|public
name|void
name|setCode
parameter_list|(
name|String
name|code
parameter_list|)
block|{
name|iCode
operator|=
name|code
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getAbbv
parameter_list|()
block|{
return|return
name|iAbbv
return|;
block|}
specifier|public
name|void
name|setAbbv
parameter_list|(
name|String
name|abbv
parameter_list|)
block|{
name|iAbbv
operator|=
name|abbv
expr_stmt|;
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|void
name|setEditable
parameter_list|(
name|boolean
name|editable
parameter_list|)
block|{
name|iEditable
operator|=
name|editable
expr_stmt|;
block|}
specifier|public
name|boolean
name|isEditable
parameter_list|()
block|{
return|return
name|iEditable
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|PreferenceInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|PreferenceInterface
operator|)
name|o
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|AttributeInterface
implements|implements
name|GwtRpcResponse
block|{
specifier|private
name|Long
name|iId
decl_stmt|,
name|iParentId
decl_stmt|;
specifier|private
name|String
name|iCode
decl_stmt|;
specifier|private
name|String
name|iName
decl_stmt|;
specifier|private
name|String
name|iParentName
decl_stmt|;
specifier|private
name|DepartmentInterface
name|iDepartment
init|=
literal|null
decl_stmt|;
specifier|private
name|AttributeTypeInterface
name|iType
decl_stmt|;
specifier|private
name|TreeSet
argument_list|<
name|InstructorInterface
argument_list|>
name|iInstructors
init|=
literal|null
decl_stmt|;
specifier|private
name|Boolean
name|iCanEdit
init|=
literal|null
decl_stmt|,
name|iCanDelete
init|=
literal|null
decl_stmt|,
name|iCanAssign
init|=
literal|null
decl_stmt|,
name|iCanChangeType
init|=
literal|null
decl_stmt|;
specifier|public
name|AttributeInterface
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|Long
name|getParentId
parameter_list|()
block|{
return|return
name|iParentId
return|;
block|}
specifier|public
name|void
name|setParentId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iParentId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getParentName
parameter_list|()
block|{
return|return
name|iParentName
return|;
block|}
specifier|public
name|void
name|setParentName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iParentName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getCode
parameter_list|()
block|{
return|return
name|iCode
return|;
block|}
specifier|public
name|void
name|setCode
parameter_list|(
name|String
name|code
parameter_list|)
block|{
name|iCode
operator|=
name|code
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|AttributeInterface
parameter_list|(
name|AttributeInterface
name|attribute
parameter_list|)
block|{
name|iId
operator|=
name|attribute
operator|.
name|iId
expr_stmt|;
name|iCode
operator|=
name|attribute
operator|.
name|iCode
expr_stmt|;
name|iName
operator|=
name|attribute
operator|.
name|iName
expr_stmt|;
name|iParentId
operator|=
name|attribute
operator|.
name|iParentId
expr_stmt|;
name|iParentName
operator|=
name|attribute
operator|.
name|iParentName
expr_stmt|;
name|iDepartment
operator|=
name|attribute
operator|.
name|iDepartment
expr_stmt|;
name|iInstructors
operator|=
operator|(
name|attribute
operator|.
name|iInstructors
operator|==
literal|null
condition|?
literal|null
else|:
operator|new
name|TreeSet
argument_list|<
name|InstructorInterface
argument_list|>
argument_list|(
name|attribute
operator|.
name|iInstructors
argument_list|)
operator|)
expr_stmt|;
name|iCanEdit
operator|=
name|attribute
operator|.
name|iCanEdit
expr_stmt|;
name|iCanDelete
operator|=
name|attribute
operator|.
name|iCanDelete
expr_stmt|;
name|iCanAssign
operator|=
name|attribute
operator|.
name|iCanAssign
expr_stmt|;
name|iCanChangeType
operator|=
name|attribute
operator|.
name|iCanChangeType
expr_stmt|;
block|}
specifier|public
name|boolean
name|isDepartmental
parameter_list|()
block|{
return|return
name|iDepartment
operator|!=
literal|null
return|;
block|}
specifier|public
name|DepartmentInterface
name|getDepartment
parameter_list|()
block|{
return|return
name|iDepartment
return|;
block|}
specifier|public
name|void
name|setDepartment
parameter_list|(
name|DepartmentInterface
name|department
parameter_list|)
block|{
name|iDepartment
operator|=
name|department
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasType
parameter_list|()
block|{
return|return
name|iType
operator|!=
literal|null
return|;
block|}
specifier|public
name|AttributeTypeInterface
name|getType
parameter_list|()
block|{
return|return
name|iType
return|;
block|}
specifier|public
name|void
name|setType
parameter_list|(
name|AttributeTypeInterface
name|type
parameter_list|)
block|{
name|iType
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasInstructors
parameter_list|()
block|{
return|return
name|iInstructors
operator|!=
literal|null
operator|&&
operator|!
name|iInstructors
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addInstructor
parameter_list|(
name|InstructorInterface
name|instructor
parameter_list|)
block|{
if|if
condition|(
name|iInstructors
operator|==
literal|null
condition|)
name|iInstructors
operator|=
operator|new
name|TreeSet
argument_list|<
name|InstructorInterface
argument_list|>
argument_list|()
expr_stmt|;
name|iInstructors
operator|.
name|add
argument_list|(
name|instructor
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TreeSet
argument_list|<
name|InstructorInterface
argument_list|>
name|getInstructors
parameter_list|()
block|{
return|return
name|iInstructors
return|;
block|}
specifier|public
name|InstructorInterface
name|getInstructor
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
if|if
condition|(
name|iInstructors
operator|==
literal|null
operator|||
name|id
operator|==
literal|null
condition|)
return|return
literal|null
return|;
for|for
control|(
name|InstructorInterface
name|instructor
range|:
name|iInstructors
control|)
if|if
condition|(
name|id
operator|.
name|equals
argument_list|(
name|instructor
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
return|return
name|instructor
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|boolean
name|hasInstructor
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
if|if
condition|(
name|iInstructors
operator|==
literal|null
operator|||
name|id
operator|==
literal|null
condition|)
return|return
literal|false
return|;
for|for
control|(
name|InstructorInterface
name|instructor
range|:
name|iInstructors
control|)
if|if
condition|(
name|id
operator|.
name|equals
argument_list|(
name|instructor
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|canEdit
parameter_list|()
block|{
return|return
name|iCanEdit
operator|!=
literal|null
operator|&&
name|iCanEdit
return|;
block|}
specifier|public
name|void
name|setCanEdit
parameter_list|(
name|Boolean
name|canEdit
parameter_list|)
block|{
name|iCanEdit
operator|=
name|canEdit
expr_stmt|;
block|}
specifier|public
name|boolean
name|canDelete
parameter_list|()
block|{
return|return
name|iCanDelete
operator|!=
literal|null
operator|&&
name|iCanDelete
return|;
block|}
specifier|public
name|void
name|setCanDelete
parameter_list|(
name|Boolean
name|canDelete
parameter_list|)
block|{
name|iCanDelete
operator|=
name|canDelete
expr_stmt|;
block|}
specifier|public
name|boolean
name|canAssign
parameter_list|()
block|{
return|return
name|iCanAssign
operator|!=
literal|null
operator|&&
name|iCanAssign
return|;
block|}
specifier|public
name|void
name|setCanAssign
parameter_list|(
name|Boolean
name|canAssign
parameter_list|)
block|{
name|iCanAssign
operator|=
name|canAssign
expr_stmt|;
block|}
specifier|public
name|boolean
name|canChangeType
parameter_list|()
block|{
return|return
name|iCanChangeType
operator|!=
literal|null
operator|&&
name|iCanChangeType
return|;
block|}
specifier|public
name|void
name|setCanChangeType
parameter_list|(
name|Boolean
name|canChangeType
parameter_list|)
block|{
name|iCanChangeType
operator|=
name|canChangeType
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|AttributeInterface
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|AttributeInterface
operator|)
name|o
operator|)
operator|.
name|getId
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
block|}
specifier|public
specifier|static
enum|enum
name|InstructorsColumn
block|{
name|SELECTION
block|,
name|ID
block|,
name|NAME
block|,
name|POSITION
block|,
name|TEACHING_PREF
block|,
name|MAX_LOAD
block|,
name|ATTRIBUTES
block|, 		; 	}
specifier|public
specifier|static
enum|enum
name|AttributesColumn
block|{
name|CODE
block|,
name|NAME
block|,
name|TYPE
block|,
name|PARENT
block|,
name|INSTRUCTORS
block|, 		; 	}
specifier|public
specifier|static
class|class
name|InstructorAttributePropertiesInterface
implements|implements
name|GwtRpcResponse
block|{
specifier|private
name|List
argument_list|<
name|DepartmentInterface
argument_list|>
name|iDepartments
init|=
operator|new
name|ArrayList
argument_list|<
name|DepartmentInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|AttributeTypeInterface
argument_list|>
name|iAttributeTypes
init|=
operator|new
name|ArrayList
argument_list|<
name|AttributeTypeInterface
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|boolean
name|iCanAddGlobalAttribute
init|=
literal|false
decl_stmt|;
specifier|private
name|Long
name|iLastDepartmentId
init|=
literal|null
decl_stmt|;
specifier|public
name|InstructorAttributePropertiesInterface
parameter_list|()
block|{
block|}
specifier|public
name|boolean
name|hasDepartments
parameter_list|()
block|{
return|return
name|iDepartments
operator|!=
literal|null
operator|&&
operator|!
name|iDepartments
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addDepartment
parameter_list|(
name|DepartmentInterface
name|department
parameter_list|)
block|{
name|iDepartments
operator|.
name|add
argument_list|(
name|department
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|DepartmentInterface
argument_list|>
name|getDepartments
parameter_list|()
block|{
return|return
name|iDepartments
return|;
block|}
specifier|public
name|DepartmentInterface
name|getDepartment
parameter_list|(
name|Long
name|departmentId
parameter_list|)
block|{
for|for
control|(
name|DepartmentInterface
name|department
range|:
name|iDepartments
control|)
if|if
condition|(
name|department
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|departmentId
argument_list|)
condition|)
return|return
name|department
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|boolean
name|hasAttributeTypes
parameter_list|()
block|{
return|return
name|iAttributeTypes
operator|!=
literal|null
operator|&&
operator|!
name|iAttributeTypes
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|addAttributeType
parameter_list|(
name|AttributeTypeInterface
name|type
parameter_list|)
block|{
name|iAttributeTypes
operator|.
name|add
argument_list|(
name|type
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|AttributeTypeInterface
argument_list|>
name|getAttributeTypes
parameter_list|()
block|{
return|return
name|iAttributeTypes
return|;
block|}
specifier|public
name|AttributeTypeInterface
name|getAttributeType
parameter_list|(
name|Long
name|typeId
parameter_list|)
block|{
for|for
control|(
name|AttributeTypeInterface
name|type
range|:
name|iAttributeTypes
control|)
if|if
condition|(
name|type
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|typeId
argument_list|)
condition|)
return|return
name|type
return|;
return|return
literal|null
return|;
block|}
specifier|public
name|boolean
name|isCanAddGlobalAttribute
parameter_list|()
block|{
return|return
name|iCanAddGlobalAttribute
return|;
block|}
specifier|public
name|void
name|setCanAddGlobalAttribute
parameter_list|(
name|boolean
name|canAddGlobalAttribute
parameter_list|)
block|{
name|iCanAddGlobalAttribute
operator|=
name|canAddGlobalAttribute
expr_stmt|;
block|}
specifier|public
name|Long
name|getLastDepartmentId
parameter_list|()
block|{
return|return
name|iLastDepartmentId
return|;
block|}
specifier|public
name|void
name|setLastDepartmentId
parameter_list|(
name|Long
name|departmentId
parameter_list|)
block|{
name|iLastDepartmentId
operator|=
name|departmentId
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|InstructorAttributePropertiesRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|InstructorAttributePropertiesInterface
argument_list|>
block|{
specifier|public
name|InstructorAttributePropertiesRequest
parameter_list|()
block|{
block|}
block|}
specifier|public
specifier|static
class|class
name|GetInstructorAttributesRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|AttributeInterface
argument_list|>
argument_list|>
block|{
specifier|public
name|Long
name|iDepartmentId
decl_stmt|;
specifier|public
name|GetInstructorAttributesRequest
parameter_list|()
block|{
block|}
specifier|public
name|void
name|setDepartmentId
parameter_list|(
name|Long
name|departmentId
parameter_list|)
block|{
name|iDepartmentId
operator|=
name|departmentId
expr_stmt|;
block|}
specifier|public
name|Long
name|getDepartmentId
parameter_list|()
block|{
return|return
name|iDepartmentId
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|iDepartmentId
operator|==
literal|null
condition|?
literal|""
else|:
name|iDepartmentId
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|GetInstructorsRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|InstructorInterface
argument_list|>
argument_list|>
block|{
specifier|public
name|Long
name|iDepartmentId
decl_stmt|;
specifier|public
name|GetInstructorsRequest
parameter_list|()
block|{
block|}
specifier|public
name|void
name|setDepartmentId
parameter_list|(
name|Long
name|departmentId
parameter_list|)
block|{
name|iDepartmentId
operator|=
name|departmentId
expr_stmt|;
block|}
specifier|public
name|Long
name|getDepartmentId
parameter_list|()
block|{
return|return
name|iDepartmentId
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|iDepartmentId
operator|==
literal|null
condition|?
literal|""
else|:
name|iDepartmentId
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|UpdateInstructorAttributeRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|AttributeInterface
argument_list|>
block|{
specifier|private
name|Long
name|iDeleteAttributeId
init|=
literal|null
decl_stmt|;
specifier|private
name|AttributeInterface
name|iAttribute
init|=
literal|null
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Long
argument_list|>
name|iAddInstructors
init|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Long
argument_list|>
name|iDropInstructors
init|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|UpdateInstructorAttributeRequest
parameter_list|()
block|{
block|}
specifier|public
name|void
name|setDeleteAttributeId
parameter_list|(
name|Long
name|attributeId
parameter_list|)
block|{
name|iDeleteAttributeId
operator|=
name|attributeId
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasDeleteAttributeId
parameter_list|()
block|{
return|return
name|iDeleteAttributeId
operator|!=
literal|null
return|;
block|}
specifier|public
name|Long
name|getDeleteAttributeId
parameter_list|()
block|{
return|return
name|iDeleteAttributeId
return|;
block|}
specifier|public
name|boolean
name|hasAttribute
parameter_list|()
block|{
return|return
name|iAttribute
operator|!=
literal|null
return|;
block|}
specifier|public
name|void
name|setAttribute
parameter_list|(
name|AttributeInterface
name|attribute
parameter_list|)
block|{
name|iAttribute
operator|=
name|attribute
expr_stmt|;
block|}
specifier|public
name|AttributeInterface
name|getAttribute
parameter_list|()
block|{
return|return
name|iAttribute
return|;
block|}
specifier|public
name|void
name|addInstructor
parameter_list|(
name|Long
name|instructorId
parameter_list|)
block|{
name|iAddInstructors
operator|.
name|add
argument_list|(
name|instructorId
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Long
argument_list|>
name|getAddInstructors
parameter_list|()
block|{
return|return
name|iAddInstructors
return|;
block|}
specifier|public
name|boolean
name|hasAddInstructors
parameter_list|()
block|{
return|return
operator|!
name|iAddInstructors
operator|.
name|isEmpty
argument_list|()
return|;
block|}
specifier|public
name|void
name|dropInstructor
parameter_list|(
name|Long
name|instructorId
parameter_list|)
block|{
name|iDropInstructors
operator|.
name|add
argument_list|(
name|instructorId
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Long
argument_list|>
name|getDropInstructors
parameter_list|()
block|{
return|return
name|iDropInstructors
return|;
block|}
specifier|public
name|boolean
name|hasDropInstructors
parameter_list|()
block|{
return|return
operator|!
name|iDropInstructors
operator|.
name|isEmpty
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
if|if
condition|(
name|hasAttribute
argument_list|()
condition|)
return|return
name|getAttribute
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
operator|(
name|getAttribute
argument_list|()
operator|.
name|getType
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
literal|" ("
operator|+
name|getAttribute
argument_list|()
operator|.
name|getType
argument_list|()
operator|.
name|getAbbreviation
argument_list|()
operator|+
literal|")"
operator|)
operator|+
operator|(
name|hasAddInstructors
argument_list|()
condition|?
literal|" ADD"
operator|+
name|getAddInstructors
argument_list|()
else|:
literal|""
operator|)
operator|+
operator|(
name|hasDropInstructors
argument_list|()
condition|?
literal|" DROP"
operator|+
name|getDropInstructors
argument_list|()
else|:
literal|""
operator|)
return|;
else|else
return|return
literal|"DELETE "
operator|+
name|getDeleteAttributeId
argument_list|()
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|GetInstructorAttributeParentsRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|AttributeInterface
argument_list|>
argument_list|>
block|{
specifier|public
name|Long
name|iDepartmentId
decl_stmt|,
name|iTypeId
decl_stmt|,
name|iAttributeId
decl_stmt|;
specifier|public
name|GetInstructorAttributeParentsRequest
parameter_list|()
block|{
block|}
specifier|public
name|GetInstructorAttributeParentsRequest
parameter_list|(
name|Long
name|departmentId
parameter_list|,
name|Long
name|typeId
parameter_list|,
name|Long
name|attributeId
parameter_list|)
block|{
name|iDepartmentId
operator|=
name|departmentId
expr_stmt|;
name|iTypeId
operator|=
name|typeId
expr_stmt|;
name|iAttributeId
operator|=
name|attributeId
expr_stmt|;
block|}
specifier|public
name|void
name|setDepartmentId
parameter_list|(
name|Long
name|departmentId
parameter_list|)
block|{
name|iDepartmentId
operator|=
name|departmentId
expr_stmt|;
block|}
specifier|public
name|Long
name|getDepartmentId
parameter_list|()
block|{
return|return
name|iDepartmentId
return|;
block|}
specifier|public
name|void
name|setTypeId
parameter_list|(
name|Long
name|typeId
parameter_list|)
block|{
name|iTypeId
operator|=
name|typeId
expr_stmt|;
block|}
specifier|public
name|Long
name|getTypeId
parameter_list|()
block|{
return|return
name|iTypeId
return|;
block|}
specifier|public
name|void
name|setAttributeId
parameter_list|(
name|Long
name|attributeId
parameter_list|)
block|{
name|iAttributeId
operator|=
name|attributeId
expr_stmt|;
block|}
specifier|public
name|Long
name|getAttributeId
parameter_list|()
block|{
return|return
name|iAttributeId
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
operator|(
name|iDepartmentId
operator|==
literal|null
condition|?
literal|""
else|:
name|iDepartmentId
operator|.
name|toString
argument_list|()
operator|)
operator|+
literal|","
operator|+
operator|(
name|iTypeId
operator|==
literal|null
condition|?
literal|""
else|:
name|iTypeId
operator|.
name|toString
argument_list|()
operator|)
operator|+
literal|","
operator|+
operator|(
name|iAttributeId
operator|==
literal|null
condition|?
literal|""
else|:
name|iAttributeId
operator|.
name|toString
argument_list|()
operator|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|SetLastDepartmentRequest
implements|implements
name|GwtRpcRequest
argument_list|<
name|GwtRpcResponseNull
argument_list|>
block|{
specifier|public
name|Long
name|iDepartmentId
decl_stmt|;
specifier|public
name|SetLastDepartmentRequest
parameter_list|()
block|{
block|}
specifier|public
name|SetLastDepartmentRequest
parameter_list|(
name|Long
name|departmentId
parameter_list|)
block|{
name|setDepartmentId
argument_list|(
name|departmentId
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDepartmentId
parameter_list|(
name|Long
name|departmentId
parameter_list|)
block|{
name|iDepartmentId
operator|=
name|departmentId
expr_stmt|;
block|}
specifier|public
name|Long
name|getDepartmentId
parameter_list|()
block|{
return|return
name|iDepartmentId
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|iDepartmentId
operator|==
literal|null
condition|?
literal|""
else|:
name|iDepartmentId
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

