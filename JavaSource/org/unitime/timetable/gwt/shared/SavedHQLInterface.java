begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 - 3.5 (University Timetabling Application)  * Copyright (C) 2011 - 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|IsSerializable
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|SavedHQLInterface
implements|implements
name|IsSerializable
block|{
specifier|public
specifier|static
class|class
name|Flag
implements|implements
name|IsSerializable
block|{
specifier|private
name|int
name|iValue
decl_stmt|;
specifier|private
name|String
name|iText
decl_stmt|;
specifier|private
name|String
name|iAppearance
decl_stmt|;
specifier|public
name|Flag
parameter_list|()
block|{
block|}
specifier|public
name|int
name|getValue
parameter_list|()
block|{
return|return
name|iValue
return|;
block|}
specifier|public
name|void
name|setValue
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|iValue
operator|=
name|value
expr_stmt|;
block|}
specifier|public
name|String
name|getText
parameter_list|()
block|{
return|return
name|iText
return|;
block|}
specifier|public
name|void
name|setText
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|iText
operator|=
name|text
expr_stmt|;
block|}
specifier|public
name|boolean
name|isAppearance
parameter_list|()
block|{
return|return
name|iAppearance
operator|!=
literal|null
return|;
block|}
specifier|public
name|String
name|getAppearance
parameter_list|()
block|{
return|return
name|iAppearance
return|;
block|}
specifier|public
name|void
name|setAppearance
parameter_list|(
name|String
name|appearance
parameter_list|)
block|{
name|iAppearance
operator|=
name|appearance
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|IdValue
implements|implements
name|IsSerializable
implements|,
name|Comparable
argument_list|<
name|IdValue
argument_list|>
block|{
specifier|private
name|String
name|iValue
decl_stmt|,
name|iText
decl_stmt|;
specifier|public
name|IdValue
parameter_list|()
block|{
block|}
specifier|public
name|String
name|getValue
parameter_list|()
block|{
return|return
name|iValue
return|;
block|}
specifier|public
name|void
name|setValue
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|iValue
operator|=
name|value
expr_stmt|;
block|}
specifier|public
name|String
name|getText
parameter_list|()
block|{
return|return
name|iText
return|;
block|}
specifier|public
name|void
name|setText
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|iText
operator|=
name|text
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|IdValue
name|o
parameter_list|)
block|{
return|return
name|getText
argument_list|()
operator|.
name|compareTo
argument_list|(
name|o
operator|.
name|getText
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|Option
implements|implements
name|IsSerializable
block|{
specifier|private
name|String
name|iType
decl_stmt|,
name|iName
decl_stmt|;
specifier|private
name|List
argument_list|<
name|IdValue
argument_list|>
name|iValues
init|=
operator|new
name|ArrayList
argument_list|<
name|IdValue
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|boolean
name|iMultiSelect
decl_stmt|;
specifier|public
name|Option
parameter_list|()
block|{
block|}
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|iType
return|;
block|}
specifier|public
name|void
name|setType
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|iType
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|IdValue
argument_list|>
name|values
parameter_list|()
block|{
return|return
name|iValues
return|;
block|}
specifier|public
name|boolean
name|isMultiSelect
parameter_list|()
block|{
return|return
name|iMultiSelect
return|;
block|}
specifier|public
name|void
name|setMultiSelect
parameter_list|(
name|boolean
name|multiSelect
parameter_list|)
block|{
name|iMultiSelect
operator|=
name|multiSelect
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|Query
implements|implements
name|IsSerializable
block|{
specifier|private
name|Long
name|iId
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iName
decl_stmt|,
name|iDescription
decl_stmt|,
name|iQuery
decl_stmt|;
specifier|private
name|int
name|iFlags
init|=
literal|0
decl_stmt|;
specifier|public
name|Query
parameter_list|()
block|{
block|}
specifier|public
name|Long
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
name|iDescription
operator|==
literal|null
condition|?
literal|""
else|:
name|iDescription
return|;
block|}
specifier|public
name|void
name|setDescription
parameter_list|(
name|String
name|description
parameter_list|)
block|{
name|iDescription
operator|=
name|description
expr_stmt|;
block|}
specifier|public
name|String
name|getQuery
parameter_list|()
block|{
return|return
name|iQuery
return|;
block|}
specifier|public
name|void
name|setQuery
parameter_list|(
name|String
name|query
parameter_list|)
block|{
name|iQuery
operator|=
name|query
expr_stmt|;
block|}
specifier|public
name|int
name|getFlags
parameter_list|()
block|{
return|return
name|iFlags
return|;
block|}
specifier|public
name|void
name|setFlags
parameter_list|(
name|int
name|flags
parameter_list|)
block|{
name|iFlags
operator|=
name|flags
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

