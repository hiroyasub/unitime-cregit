begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|server
package|;
end_package

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_enum
specifier|public
enum|enum
name|TimeSlot
block|{
name|SLOT_LENGTH_MINS
argument_list|(
literal|5
argument_list|,
literal|"Number of minutes in one time slot."
argument_list|)
block|,
name|FIRST_SLOT_TIME_MIN
argument_list|(
literal|0
argument_list|,
literal|"Time of the first slot in minutes"
argument_list|)
block|,
name|NR_SLOTS_PER_DAY
argument_list|(
literal|288
argument_list|,
literal|"Number of slots per day."
argument_list|)
block|,
name|DAY_SLOTS_FIRST
argument_list|(
name|TimeSlot
operator|.
name|toSlot
argument_list|(
literal|7
argument_list|,
literal|30
argument_list|)
argument_list|,
literal|"First day-time slot."
argument_list|)
block|,
name|DAY_SLOTS_LAST
argument_list|(
name|TimeSlot
operator|.
name|toSlot
argument_list|(
literal|17
argument_list|,
literal|30
argument_list|)
operator|-
literal|1
argument_list|,
literal|"Last day-time slot."
argument_list|)
block|,
name|NR_DAY_SLOTS
argument_list|(
name|DAY_SLOTS_LAST
operator|.
name|value
argument_list|()
operator|-
name|DAY_SLOTS_FIRST
operator|.
name|value
argument_list|()
operator|+
literal|1
argument_list|,
literal|"Number of day-time slots."
argument_list|)
block|;
specifier|private
name|int
name|iValue
decl_stmt|;
specifier|private
name|String
name|iDescription
decl_stmt|;
name|TimeSlot
parameter_list|(
name|int
name|value
parameter_list|,
name|String
name|description
parameter_list|)
block|{
name|iValue
operator|=
name|value
expr_stmt|;
name|iDescription
operator|=
name|description
expr_stmt|;
block|}
specifier|public
name|int
name|value
parameter_list|()
block|{
return|return
name|iValue
return|;
block|}
specifier|public
name|String
name|description
parameter_list|()
block|{
return|return
name|iDescription
return|;
block|}
specifier|public
specifier|static
name|int
name|toSlot
parameter_list|(
name|int
name|hour
parameter_list|,
name|int
name|minute
parameter_list|)
block|{
name|int
name|min
init|=
literal|60
operator|*
name|hour
operator|+
name|minute
decl_stmt|;
return|return
operator|(
name|min
operator|-
name|FIRST_SLOT_TIME_MIN
operator|.
name|value
argument_list|()
operator|)
operator|/
name|SLOT_LENGTH_MINS
operator|.
name|value
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|int
name|toHour
parameter_list|(
name|int
name|slot
parameter_list|)
block|{
name|int
name|min
init|=
name|slot
operator|*
name|SLOT_LENGTH_MINS
operator|.
name|value
argument_list|()
operator|+
name|FIRST_SLOT_TIME_MIN
operator|.
name|value
argument_list|()
decl_stmt|;
return|return
name|min
operator|/
literal|60
return|;
block|}
specifier|public
specifier|static
name|int
name|toMinute
parameter_list|(
name|int
name|slot
parameter_list|)
block|{
name|int
name|min
init|=
name|slot
operator|*
name|SLOT_LENGTH_MINS
operator|.
name|value
argument_list|()
operator|+
name|FIRST_SLOT_TIME_MIN
operator|.
name|value
argument_list|()
decl_stmt|;
return|return
name|min
operator|%
literal|60
return|;
block|}
specifier|public
specifier|static
name|String
name|toString
parameter_list|(
name|int
name|hour
parameter_list|,
name|int
name|minute
parameter_list|)
block|{
return|return
operator|(
name|hour
operator|>
literal|12
condition|?
name|hour
operator|-
literal|12
else|:
name|hour
operator|)
operator|+
literal|":"
operator|+
operator|(
name|minute
operator|<
literal|10
condition|?
literal|"0"
else|:
literal|""
operator|)
operator|+
name|minute
operator|+
operator|(
name|hour
operator|>=
literal|12
condition|?
literal|"p"
else|:
literal|"a"
operator|)
return|;
block|}
specifier|public
specifier|static
name|String
name|toString
parameter_list|(
name|int
name|slot
parameter_list|)
block|{
return|return
name|toString
argument_list|(
name|toHour
argument_list|(
name|slot
argument_list|)
argument_list|,
name|toMinute
argument_list|(
name|slot
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|int
name|toEndSlot
parameter_list|(
name|int
name|startSlot
parameter_list|,
name|int
name|lengthInSlots
parameter_list|,
name|int
name|breakTime
parameter_list|)
block|{
return|return
name|startSlot
operator|+
name|lengthInSlots
operator|*
name|SLOT_LENGTH_MINS
operator|.
name|value
argument_list|()
operator|-
name|breakTime
return|;
block|}
block|}
end_enum

end_unit

