begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.5 (University Timetabling Application)  * Copyright (C) 2014, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|mobile
operator|.
name|client
operator|.
name|page
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeNotifications
operator|.
name|NotificationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|P
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeTable
operator|.
name|HasStyleName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Position
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasText
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|IsWidget
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|RootPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|MobileNotifications
implements|implements
name|UniTimeNotifications
operator|.
name|Display
block|{
specifier|protected
name|List
argument_list|<
name|Notification
argument_list|>
name|iNotifications
init|=
operator|new
name|ArrayList
argument_list|<
name|Notification
argument_list|>
argument_list|()
decl_stmt|;
specifier|protected
name|P
name|iPanel
init|=
operator|new
name|P
argument_list|(
literal|"unitime-MobileNotifications"
argument_list|)
decl_stmt|;
specifier|public
name|MobileNotifications
parameter_list|()
block|{
name|RootPanel
operator|.
name|get
argument_list|()
operator|.
name|add
argument_list|(
name|iPanel
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|addStyleName
argument_list|(
literal|"unitime-MobileNotifications"
argument_list|)
expr_stmt|;
name|iPanel
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setPosition
argument_list|(
name|Position
operator|.
name|FIXED
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addNotification
parameter_list|(
name|String
name|html
parameter_list|,
name|NotificationType
name|type
parameter_list|)
block|{
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|ERROR
case|:
name|addNotification
argument_list|(
operator|new
name|Notification
argument_list|(
name|html
argument_list|,
literal|"error"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|WARN
case|:
name|addNotification
argument_list|(
operator|new
name|Notification
argument_list|(
name|html
argument_list|,
literal|"warn"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|INFO
case|:
name|addNotification
argument_list|(
operator|new
name|Notification
argument_list|(
name|html
argument_list|,
literal|"info"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
specifier|protected
name|void
name|populate
parameter_list|(
name|String
name|style
parameter_list|)
block|{
name|iPanel
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|iNotifications
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|P
name|panel
init|=
operator|new
name|P
argument_list|(
literal|"container"
argument_list|,
name|style
argument_list|)
decl_stmt|;
for|for
control|(
name|Notification
name|n
range|:
name|iNotifications
control|)
block|{
name|panel
operator|.
name|add
argument_list|(
name|n
operator|.
name|asWidget
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|iPanel
operator|.
name|add
argument_list|(
name|panel
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|addNotification
parameter_list|(
specifier|final
name|Notification
name|notification
parameter_list|)
block|{
for|for
control|(
name|Iterator
argument_list|<
name|Notification
argument_list|>
name|i
init|=
name|iNotifications
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Notification
name|n
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|n
operator|.
name|getText
argument_list|()
operator|.
name|equals
argument_list|(
name|notification
operator|.
name|getText
argument_list|()
argument_list|)
condition|)
block|{
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
name|iNotifications
operator|.
name|add
argument_list|(
name|notification
argument_list|)
expr_stmt|;
name|populate
argument_list|(
literal|"slideup"
argument_list|)
expr_stmt|;
name|Timer
name|timer
init|=
operator|new
name|Timer
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|iNotifications
operator|.
name|remove
argument_list|(
name|notification
argument_list|)
expr_stmt|;
name|populate
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|timer
operator|.
name|schedule
argument_list|(
literal|10000
argument_list|)
expr_stmt|;
block|}
specifier|public
class|class
name|Notification
implements|implements
name|IsWidget
implements|,
name|HasText
implements|,
name|HasStyleName
block|{
name|String
name|iText
decl_stmt|,
name|iStyle
decl_stmt|;
name|Notification
parameter_list|(
name|String
name|text
parameter_list|,
name|String
name|style
parameter_list|)
block|{
name|iText
operator|=
name|text
expr_stmt|;
name|iStyle
operator|=
name|style
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getStyleName
parameter_list|()
block|{
return|return
name|iStyle
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getText
parameter_list|()
block|{
return|return
name|iText
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setText
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|iText
operator|=
name|text
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Widget
name|asWidget
parameter_list|()
block|{
specifier|final
name|P
name|p
init|=
operator|new
name|P
argument_list|(
literal|"notification"
argument_list|,
name|getStyleName
argument_list|()
argument_list|)
decl_stmt|;
name|p
operator|.
name|setHTML
argument_list|(
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|iNotifications
operator|.
name|remove
argument_list|(
name|Notification
operator|.
name|this
argument_list|)
expr_stmt|;
name|populate
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|p
return|;
block|}
block|}
block|}
end_class

end_unit

