begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.5 (University Timetabling Application)  * Copyright (C) 2014, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|mobile
operator|.
name|client
operator|.
name|page
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|page
operator|.
name|UniTimeMenu
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|LoadingWidget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|widgets
operator|.
name|UniTimeFrameDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcServiceAsync
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|mobile
operator|.
name|resources
operator|.
name|MobileResourceHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|MenuInterface
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|http
operator|.
name|client
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|safehtml
operator|.
name|client
operator|.
name|SafeHtmlTemplates
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|safehtml
operator|.
name|shared
operator|.
name|SafeHtml
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|safehtml
operator|.
name|shared
operator|.
name|SafeHtmlBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|RootPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|googlecode
operator|.
name|mgwt
operator|.
name|dom
operator|.
name|client
operator|.
name|event
operator|.
name|tap
operator|.
name|TapEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|googlecode
operator|.
name|mgwt
operator|.
name|dom
operator|.
name|client
operator|.
name|event
operator|.
name|tap
operator|.
name|TapHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|googlecode
operator|.
name|mgwt
operator|.
name|ui
operator|.
name|client
operator|.
name|MGWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|googlecode
operator|.
name|mgwt
operator|.
name|ui
operator|.
name|client
operator|.
name|animation
operator|.
name|AnimationHelper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|googlecode
operator|.
name|mgwt
operator|.
name|ui
operator|.
name|client
operator|.
name|widget
operator|.
name|animation
operator|.
name|AnimationEndCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|googlecode
operator|.
name|mgwt
operator|.
name|ui
operator|.
name|client
operator|.
name|widget
operator|.
name|animation
operator|.
name|Animations
import|;
end_import

begin_import
import|import
name|com
operator|.
name|googlecode
operator|.
name|mgwt
operator|.
name|ui
operator|.
name|client
operator|.
name|widget
operator|.
name|button
operator|.
name|ImageButton
import|;
end_import

begin_import
import|import
name|com
operator|.
name|googlecode
operator|.
name|mgwt
operator|.
name|ui
operator|.
name|client
operator|.
name|widget
operator|.
name|button
operator|.
name|image
operator|.
name|PreviousitemImageButton
import|;
end_import

begin_import
import|import
name|com
operator|.
name|googlecode
operator|.
name|mgwt
operator|.
name|ui
operator|.
name|client
operator|.
name|widget
operator|.
name|header
operator|.
name|HeaderPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|googlecode
operator|.
name|mgwt
operator|.
name|ui
operator|.
name|client
operator|.
name|widget
operator|.
name|header
operator|.
name|HeaderTitle
import|;
end_import

begin_import
import|import
name|com
operator|.
name|googlecode
operator|.
name|mgwt
operator|.
name|ui
operator|.
name|client
operator|.
name|widget
operator|.
name|list
operator|.
name|celllist
operator|.
name|Cell
import|;
end_import

begin_import
import|import
name|com
operator|.
name|googlecode
operator|.
name|mgwt
operator|.
name|ui
operator|.
name|client
operator|.
name|widget
operator|.
name|list
operator|.
name|celllist
operator|.
name|CellList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|googlecode
operator|.
name|mgwt
operator|.
name|ui
operator|.
name|client
operator|.
name|widget
operator|.
name|list
operator|.
name|celllist
operator|.
name|CellSelectedEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|googlecode
operator|.
name|mgwt
operator|.
name|ui
operator|.
name|client
operator|.
name|widget
operator|.
name|list
operator|.
name|celllist
operator|.
name|CellSelectedHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|googlecode
operator|.
name|mgwt
operator|.
name|ui
operator|.
name|client
operator|.
name|widget
operator|.
name|panel
operator|.
name|flex
operator|.
name|FixedSpacer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|googlecode
operator|.
name|mgwt
operator|.
name|ui
operator|.
name|client
operator|.
name|widget
operator|.
name|panel
operator|.
name|flex
operator|.
name|FlexPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|googlecode
operator|.
name|mgwt
operator|.
name|ui
operator|.
name|client
operator|.
name|widget
operator|.
name|panel
operator|.
name|flex
operator|.
name|FlexSpacer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|googlecode
operator|.
name|mgwt
operator|.
name|ui
operator|.
name|client
operator|.
name|widget
operator|.
name|panel
operator|.
name|scroll
operator|.
name|ScrollPanel
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|MobileMenu
extends|extends
name|UniTimeMenu
block|{
specifier|protected
specifier|static
specifier|final
name|GwtMessages
name|MESSAGES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|GwtResources
name|RESOURCES
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtResources
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|GwtRpcServiceAsync
name|RPC
init|=
name|GWT
operator|.
name|create
argument_list|(
name|GwtRpcService
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Template
name|TEMPLATE
init|=
name|GWT
operator|.
name|create
argument_list|(
name|Template
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|AnimationHelper
name|iAnimationHelper
decl_stmt|;
specifier|private
name|ImageButton
name|iButton
decl_stmt|;
specifier|private
name|MenuWidget
name|iMenu
init|=
literal|null
decl_stmt|;
specifier|public
interface|interface
name|Template
extends|extends
name|SafeHtmlTemplates
block|{
annotation|@
name|SafeHtmlTemplates
operator|.
name|Template
argument_list|(
literal|"<div>{0}</div>"
argument_list|)
name|SafeHtml
name|content
parameter_list|(
name|String
name|cellContents
parameter_list|)
function_decl|;
block|}
specifier|public
name|MobileMenu
parameter_list|()
block|{
name|iAnimationHelper
operator|=
operator|new
name|AnimationHelper
argument_list|()
expr_stmt|;
name|iAnimationHelper
operator|.
name|addStyleName
argument_list|(
literal|"unitime-AnimationHelper"
argument_list|)
expr_stmt|;
name|iButton
operator|=
operator|new
name|ImageButton
argument_list|(
name|MobileResourceHolder
operator|.
name|get
argument_list|()
operator|.
name|menu
argument_list|()
argument_list|)
expr_stmt|;
name|iButton
operator|.
name|addTapHandler
argument_list|(
operator|new
name|TapHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onTap
parameter_list|(
name|TapEvent
name|event
parameter_list|)
block|{
name|RootPanel
operator|.
name|get
argument_list|()
operator|.
name|add
argument_list|(
name|iAnimationHelper
argument_list|)
expr_stmt|;
name|iAnimationHelper
operator|.
name|goTo
argument_list|(
name|iMenu
argument_list|,
name|Animations
operator|.
name|SLIDE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|attach
parameter_list|(
specifier|final
name|RootPanel
name|rootPanel
parameter_list|)
block|{
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|MenuInterface
operator|.
name|MenuRpcRequest
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|MenuInterface
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|MenuInterface
argument_list|>
name|result
parameter_list|)
block|{
name|iMenu
operator|=
operator|new
name|MenuWidget
argument_list|(
literal|null
argument_list|,
name|result
argument_list|,
operator|new
name|TapHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onTap
parameter_list|(
name|TapEvent
name|event
parameter_list|)
block|{
name|iAnimationHelper
operator|.
name|goTo
argument_list|(
literal|null
argument_list|,
name|Animations
operator|.
name|SLIDE_REVERSE
argument_list|,
operator|new
name|AnimationEndCallback
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onAnimationEnd
parameter_list|()
block|{
if|if
condition|(
name|iAnimationHelper
operator|.
name|isAttached
argument_list|()
condition|)
name|RootPanel
operator|.
name|get
argument_list|()
operator|.
name|remove
argument_list|(
name|iAnimationHelper
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|rootPanel
operator|.
name|add
argument_list|(
name|iButton
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|reload
parameter_list|()
block|{
name|RPC
operator|.
name|execute
argument_list|(
operator|new
name|MenuInterface
operator|.
name|MenuRpcRequest
argument_list|()
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|GwtRpcResponseList
argument_list|<
name|MenuInterface
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|GwtRpcResponseList
argument_list|<
name|MenuInterface
argument_list|>
name|result
parameter_list|)
block|{
name|iMenu
operator|=
operator|new
name|MenuWidget
argument_list|(
literal|null
argument_list|,
name|result
argument_list|,
operator|new
name|TapHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onTap
parameter_list|(
name|TapEvent
name|event
parameter_list|)
block|{
name|iAnimationHelper
operator|.
name|goTo
argument_list|(
literal|null
argument_list|,
name|Animations
operator|.
name|SLIDE_REVERSE
argument_list|,
operator|new
name|AnimationEndCallback
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onAnimationEnd
parameter_list|()
block|{
if|if
condition|(
name|iAnimationHelper
operator|.
name|isAttached
argument_list|()
condition|)
name|RootPanel
operator|.
name|get
argument_list|()
operator|.
name|remove
argument_list|(
name|iAnimationHelper
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|insert
parameter_list|(
specifier|final
name|RootPanel
name|panel
parameter_list|)
block|{
if|if
condition|(
literal|"hide"
operator|.
name|equals
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getParameter
argument_list|(
literal|"menu"
argument_list|)
argument_list|)
condition|)
name|panel
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
else|else
name|attach
argument_list|(
name|panel
argument_list|)
expr_stmt|;
block|}
specifier|public
class|class
name|MenuWidget
extends|extends
name|FlexPanel
block|{
specifier|private
name|HeaderPanel
name|iHeaderPanel
decl_stmt|;
specifier|private
name|PreviousitemImageButton
name|iHeaderBackButton
decl_stmt|;
specifier|private
name|HeaderTitle
name|iHeaderTitle
decl_stmt|;
specifier|private
name|CellList
argument_list|<
name|MenuInterface
argument_list|>
name|iCellList
decl_stmt|;
specifier|private
name|List
argument_list|<
name|MenuInterface
argument_list|>
name|iMenu
decl_stmt|;
specifier|private
name|boolean
name|iFirstItemIsParent
init|=
literal|false
decl_stmt|;
specifier|public
name|MenuWidget
parameter_list|(
name|MenuInterface
name|parent
parameter_list|,
name|List
argument_list|<
name|MenuInterface
argument_list|>
name|menus
parameter_list|,
name|TapHandler
name|back
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
if|if
condition|(
name|MGWT
operator|.
name|getFormFactor
argument_list|()
operator|.
name|isTablet
argument_list|()
condition|)
name|setStyleName
argument_list|(
literal|"unitime-MobileMenuTablet"
argument_list|)
expr_stmt|;
else|else
name|setStyleName
argument_list|(
literal|"unitime-MobileMenuPhone"
argument_list|)
expr_stmt|;
name|iHeaderPanel
operator|=
operator|new
name|HeaderPanel
argument_list|()
expr_stmt|;
name|add
argument_list|(
name|iHeaderPanel
argument_list|)
expr_stmt|;
name|iHeaderBackButton
operator|=
operator|new
name|PreviousitemImageButton
argument_list|()
expr_stmt|;
name|iHeaderPanel
operator|.
name|add
argument_list|(
name|iHeaderBackButton
argument_list|)
expr_stmt|;
name|iHeaderPanel
operator|.
name|add
argument_list|(
operator|new
name|FlexSpacer
argument_list|()
argument_list|)
expr_stmt|;
name|iHeaderTitle
operator|=
operator|new
name|HeaderTitle
argument_list|(
name|parent
operator|==
literal|null
condition|?
name|MESSAGES
operator|.
name|navigation
argument_list|()
else|:
name|parent
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|iHeaderPanel
operator|.
name|add
argument_list|(
name|iHeaderTitle
argument_list|)
expr_stmt|;
name|iHeaderPanel
operator|.
name|add
argument_list|(
operator|new
name|FlexSpacer
argument_list|()
argument_list|)
expr_stmt|;
name|FixedSpacer
name|fixedSpacer
init|=
operator|new
name|FixedSpacer
argument_list|()
decl_stmt|;
name|fixedSpacer
operator|.
name|setVisible
argument_list|(
operator|!
name|MGWT
operator|.
name|getOsDetection
argument_list|()
operator|.
name|isAndroid
argument_list|()
argument_list|)
expr_stmt|;
name|iHeaderPanel
operator|.
name|add
argument_list|(
name|fixedSpacer
argument_list|)
expr_stmt|;
name|ScrollPanel
name|scrollPanel
init|=
operator|new
name|ScrollPanel
argument_list|()
decl_stmt|;
name|iCellList
operator|=
operator|new
name|CellList
argument_list|<
name|MenuInterface
argument_list|>
argument_list|(
operator|new
name|Cell
argument_list|<
name|MenuInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|render
parameter_list|(
name|SafeHtmlBuilder
name|safeHtmlBuilder
parameter_list|,
name|MenuInterface
name|item
parameter_list|)
block|{
name|safeHtmlBuilder
operator|.
name|append
argument_list|(
name|TEMPLATE
operator|.
name|content
argument_list|(
name|item
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|canBeSelected
parameter_list|(
name|MenuInterface
name|item
parameter_list|)
block|{
return|return
name|item
operator|.
name|hasSubMenus
argument_list|()
operator|||
name|item
operator|.
name|hasPage
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|scrollPanel
operator|.
name|setWidget
argument_list|(
name|iCellList
argument_list|)
expr_stmt|;
name|scrollPanel
operator|.
name|setScrollingEnabledX
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|scrollPanel
argument_list|)
expr_stmt|;
name|iMenu
operator|=
operator|new
name|ArrayList
argument_list|<
name|MenuInterface
argument_list|>
argument_list|()
expr_stmt|;
if|if
condition|(
name|parent
operator|!=
literal|null
operator|&&
name|parent
operator|.
name|hasPage
argument_list|()
condition|)
block|{
name|iFirstItemIsParent
operator|=
literal|true
expr_stmt|;
name|iMenu
operator|.
name|add
argument_list|(
name|parent
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iFirstItemIsParent
operator|=
literal|false
expr_stmt|;
block|}
for|for
control|(
name|MenuInterface
name|menu
range|:
name|menus
control|)
if|if
condition|(
operator|!
name|menu
operator|.
name|isSeparator
argument_list|()
condition|)
name|iMenu
operator|.
name|add
argument_list|(
name|menu
argument_list|)
expr_stmt|;
name|iCellList
operator|.
name|render
argument_list|(
name|iMenu
argument_list|)
expr_stmt|;
specifier|final
name|MenuInterface
operator|.
name|ValueEncoder
name|encoder
init|=
operator|new
name|MenuInterface
operator|.
name|ValueEncoder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|encode
parameter_list|(
name|String
name|value
parameter_list|)
block|{
return|return
name|URL
operator|.
name|encodeQueryString
argument_list|(
name|value
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|iCellList
operator|.
name|addCellSelectedHandler
argument_list|(
operator|new
name|CellSelectedHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onCellSelected
parameter_list|(
name|CellSelectedEvent
name|event
parameter_list|)
block|{
name|MenuInterface
name|item
init|=
name|iMenu
operator|.
name|get
argument_list|(
name|event
operator|.
name|getIndex
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|event
operator|.
name|getIndex
argument_list|()
operator|==
literal|0
operator|&&
name|iFirstItemIsParent
operator|&&
name|item
operator|.
name|hasPage
argument_list|()
condition|)
block|{
name|openUrl
argument_list|(
name|item
operator|.
name|getName
argument_list|()
argument_list|,
name|item
operator|.
name|getURL
argument_list|(
name|encoder
argument_list|)
argument_list|,
name|item
operator|.
name|getTarget
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|item
operator|.
name|hasSubMenus
argument_list|()
condition|)
block|{
name|MenuWidget
name|m
init|=
operator|new
name|MenuWidget
argument_list|(
name|item
argument_list|,
name|item
operator|.
name|getSubMenus
argument_list|()
argument_list|,
operator|new
name|TapHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onTap
parameter_list|(
name|TapEvent
name|event
parameter_list|)
block|{
name|iAnimationHelper
operator|.
name|goTo
argument_list|(
name|MenuWidget
operator|.
name|this
argument_list|,
name|Animations
operator|.
name|SLIDE_REVERSE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|iAnimationHelper
operator|.
name|goTo
argument_list|(
name|m
argument_list|,
name|Animations
operator|.
name|SLIDE
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|item
operator|.
name|hasPage
argument_list|()
condition|)
block|{
name|iAnimationHelper
operator|.
name|goTo
argument_list|(
literal|null
argument_list|,
name|Animations
operator|.
name|SLIDE_REVERSE
argument_list|,
operator|new
name|AnimationEndCallback
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onAnimationEnd
parameter_list|()
block|{
if|if
condition|(
name|iAnimationHelper
operator|.
name|isAttached
argument_list|()
condition|)
name|RootPanel
operator|.
name|get
argument_list|()
operator|.
name|remove
argument_list|(
name|iAnimationHelper
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|openUrl
argument_list|(
name|item
operator|.
name|getName
argument_list|()
argument_list|,
name|item
operator|.
name|getURL
argument_list|(
name|encoder
argument_list|)
argument_list|,
name|item
operator|.
name|getTarget
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iHeaderBackButton
operator|.
name|addTapHandler
argument_list|(
name|back
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|openUrl
parameter_list|(
specifier|final
name|String
name|name
parameter_list|,
specifier|final
name|String
name|url
parameter_list|,
name|String
name|target
parameter_list|)
block|{
if|if
condition|(
name|target
operator|==
literal|null
condition|)
name|LoadingWidget
operator|.
name|getInstance
argument_list|()
operator|.
name|show
argument_list|()
expr_stmt|;
if|if
condition|(
literal|"dialog"
operator|.
name|equals
argument_list|(
name|target
argument_list|)
condition|)
block|{
name|UniTimeFrameDialog
operator|.
name|openDialog
argument_list|(
name|name
argument_list|,
name|url
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
literal|"eval"
operator|.
name|equals
argument_list|(
name|target
argument_list|)
condition|)
block|{
name|ToolBox
operator|.
name|eval
argument_list|(
name|url
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
literal|"download"
operator|.
name|equals
argument_list|(
name|target
argument_list|)
condition|)
block|{
name|ToolBox
operator|.
name|open
argument_list|(
name|url
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ToolBox
operator|.
name|open
argument_list|(
name|GWT
operator|.
name|getHostPageBaseURL
argument_list|()
operator|+
name|url
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

