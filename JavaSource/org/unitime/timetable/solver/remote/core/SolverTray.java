begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.0 (University Course Timetabling& Student Sectioning Application)  * Copyright (C) 2007, UniTime.org, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program; if not, write to the Free Software Foundation, Inc.,  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|remote
operator|.
name|core
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|Icon
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ImageIcon
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JMenuItem
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPopupMenu
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|UIManager
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|SolverTray
block|{
specifier|private
specifier|static
name|SolverTray
name|sInstance
init|=
literal|null
decl_stmt|;
specifier|public
specifier|static
name|SolverTray
name|getInstance
parameter_list|()
block|{
return|return
name|sInstance
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
operator|(
name|sInstance
operator|!=
literal|null
operator|)
return|;
block|}
specifier|public
specifier|static
name|void
name|init
parameter_list|()
block|{
try|try
block|{
name|sInstance
operator|=
operator|new
name|SolverTray
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Unable to initialize solver tray -- "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|Object
name|iTray
init|=
literal|null
decl_stmt|;
specifier|private
name|Object
name|iTrayIcon
init|=
literal|null
decl_stmt|;
specifier|private
name|JPopupMenu
name|iMenu
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iStatus
init|=
literal|"starting"
decl_stmt|;
specifier|private
name|String
name|iLogFile
init|=
literal|null
decl_stmt|;
specifier|private
name|JMenuItem
name|iLogFileMenu
init|=
literal|null
decl_stmt|;
specifier|private
name|Class
name|iSystemTrayClass
init|=
literal|null
decl_stmt|;
specifier|private
name|Class
name|iTrayIconClass
init|=
literal|null
decl_stmt|;
specifier|public
specifier|static
name|Icon
name|sSolverIcon
init|=
literal|null
decl_stmt|;
specifier|public
specifier|static
name|Icon
name|sSolverDiscIcon
init|=
literal|null
decl_stmt|;
specifier|public
specifier|static
name|Icon
name|sSolverPauseIcon
init|=
literal|null
decl_stmt|;
specifier|public
specifier|static
name|Icon
name|sSolverRunIcon
init|=
literal|null
decl_stmt|;
specifier|public
specifier|static
name|Icon
name|sSolverStopIcon
init|=
literal|null
decl_stmt|;
specifier|private
name|SolverTray
parameter_list|()
throws|throws
name|Exception
block|{
name|iSystemTrayClass
operator|=
name|Class
operator|.
name|forName
argument_list|(
literal|"org.jdesktop.jdic.tray.SystemTray"
argument_list|)
expr_stmt|;
name|iTrayIconClass
operator|=
name|Class
operator|.
name|forName
argument_list|(
literal|"org.jdesktop.jdic.tray.TrayIcon"
argument_list|)
expr_stmt|;
name|iTray
operator|=
name|iSystemTrayClass
operator|.
name|getMethod
argument_list|(
literal|"getDefaultSystemTray"
argument_list|,
operator|new
name|Class
index|[]
block|{}
argument_list|)
operator|.
name|invoke
argument_list|(
literal|null
argument_list|,
operator|new
name|Object
index|[]
block|{}
argument_list|)
expr_stmt|;
try|try
block|{
name|UIManager
operator|.
name|setLookAndFeel
argument_list|(
name|UIManager
operator|.
name|getSystemLookAndFeelClassName
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
name|sSolverIcon
operator|=
operator|new
name|ImageIcon
argument_list|(
name|StartupMinimal
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"images/solver.gif"
argument_list|)
argument_list|)
expr_stmt|;
name|sSolverDiscIcon
operator|=
operator|new
name|ImageIcon
argument_list|(
name|StartupMinimal
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"images/solver-disc.gif"
argument_list|)
argument_list|)
expr_stmt|;
name|sSolverPauseIcon
operator|=
operator|new
name|ImageIcon
argument_list|(
name|StartupMinimal
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"images/solver-pause.gif"
argument_list|)
argument_list|)
expr_stmt|;
name|sSolverRunIcon
operator|=
operator|new
name|ImageIcon
argument_list|(
name|StartupMinimal
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"images/solver-run.gif"
argument_list|)
argument_list|)
expr_stmt|;
name|sSolverStopIcon
operator|=
operator|new
name|ImageIcon
argument_list|(
name|StartupMinimal
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"images/solver-stop.gif"
argument_list|)
argument_list|)
expr_stmt|;
name|iMenu
operator|=
operator|new
name|JPopupMenu
argument_list|(
literal|"A Menu"
argument_list|)
expr_stmt|;
name|iLogFileMenu
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Log File"
argument_list|)
expr_stmt|;
name|iLogFileMenu
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
try|try
block|{
name|Runtime
operator|.
name|getRuntime
argument_list|()
operator|.
name|exec
argument_list|(
literal|"\""
operator|+
name|iLogFile
operator|+
literal|"\""
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|x
parameter_list|)
block|{
try|try
block|{
name|Runtime
operator|.
name|getRuntime
argument_list|()
operator|.
name|exec
argument_list|(
literal|"notepad \""
operator|+
name|iLogFile
operator|+
literal|"\""
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|y
parameter_list|)
block|{
name|y
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|iLogFileMenu
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|iMenu
operator|.
name|add
argument_list|(
name|iLogFileMenu
argument_list|)
expr_stmt|;
name|JMenuItem
name|menuItem
init|=
operator|new
name|JMenuItem
argument_list|(
literal|"Quit"
argument_list|)
decl_stmt|;
name|menuItem
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|System
operator|.
name|exit
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|iMenu
operator|.
name|add
argument_list|(
name|menuItem
argument_list|)
expr_stmt|;
name|iTrayIcon
operator|=
name|iTrayIconClass
operator|.
name|getConstructor
argument_list|(
operator|new
name|Class
index|[]
block|{
name|Icon
operator|.
name|class
block|,
name|String
operator|.
name|class
block|,
name|JPopupMenu
operator|.
name|class
block|}
argument_list|)
operator|.
name|newInstance
argument_list|(
operator|new
name|Object
index|[]
block|{
name|sSolverIcon
block|,
name|iStatus
block|,
name|iMenu
block|}
argument_list|)
expr_stmt|;
name|iTrayIconClass
operator|.
name|getMethod
argument_list|(
literal|"setIconAutoSize"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|boolean
operator|.
name|class
block|}
argument_list|)
operator|.
name|invoke
argument_list|(
name|iTrayIcon
argument_list|,
operator|new
name|Object
index|[]
block|{
name|Boolean
operator|.
name|TRUE
block|}
argument_list|)
expr_stmt|;
name|iTrayIconClass
operator|.
name|getMethod
argument_list|(
literal|"addActionListener"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|ActionListener
operator|.
name|class
block|}
argument_list|)
operator|.
name|invoke
argument_list|(
name|iTrayIcon
argument_list|,
operator|new
name|Object
index|[]
block|{
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
literal|null
argument_list|,
literal|"Status: "
operator|+
name|iStatus
argument_list|,
literal|"Purdue University Timetabling Solver"
argument_list|,
name|JOptionPane
operator|.
name|INFORMATION_MESSAGE
argument_list|)
expr_stmt|;
block_content|}
block|}}
block|)
empty_stmt|;
name|iSystemTrayClass
operator|.
name|getMethod
argument_list|(
literal|"addTrayIcon"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|iTrayIconClass
block|}
argument_list|)
operator|.
name|invoke
argument_list|(
name|iTray
argument_list|,
operator|new
name|Object
index|[]
block|{
name|iTrayIcon
block|}
argument_list|)
argument_list|;
block|}
specifier|public
name|void
name|setStatus
parameter_list|(
name|String
name|status
parameter_list|,
name|Icon
name|icon
parameter_list|)
block|{
try|try
block|{
name|iStatus
operator|=
name|status
expr_stmt|;
name|iTrayIconClass
operator|.
name|getMethod
argument_list|(
literal|"setCaption"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|String
operator|.
name|class
block|}
argument_list|)
operator|.
name|invoke
argument_list|(
name|iTrayIcon
argument_list|,
operator|new
name|Object
index|[]
block|{
name|iStatus
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|icon
operator|!=
literal|null
condition|)
name|iTrayIconClass
operator|.
name|getMethod
argument_list|(
literal|"setIcon"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|Icon
operator|.
name|class
block|}
argument_list|)
operator|.
name|invoke
argument_list|(
name|iTrayIcon
argument_list|,
operator|new
name|Object
index|[]
block|{
name|icon
block|}
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Unable to change tray icon status -- "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setLogFile
parameter_list|(
name|String
name|logFile
parameter_list|)
block|{
name|iLogFile
operator|=
name|logFile
expr_stmt|;
name|iLogFileMenu
operator|.
name|setEnabled
argument_list|(
name|iLogFile
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|JPopupMenu
name|getMenu
parameter_list|()
block|{
return|return
name|iMenu
return|;
block|}
block|}
end_class

end_unit

