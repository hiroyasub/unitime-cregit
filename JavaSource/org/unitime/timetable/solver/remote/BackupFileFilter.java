begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2008 - 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileFilter
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|BackupFileFilter
implements|implements
name|FileFilter
block|{
specifier|public
specifier|static
name|String
name|sXmlExtension
init|=
literal|".backup.xml"
decl_stmt|;
specifier|public
specifier|static
name|String
name|sPropertiesExtension
init|=
literal|".backup.properties"
decl_stmt|;
specifier|private
name|boolean
name|iAcceptXml
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|iAcceptProperties
init|=
literal|false
decl_stmt|;
specifier|public
name|BackupFileFilter
parameter_list|(
name|boolean
name|acceptXml
parameter_list|,
name|boolean
name|acceptProperties
parameter_list|)
block|{
name|iAcceptXml
operator|=
name|acceptXml
expr_stmt|;
name|iAcceptProperties
operator|=
name|acceptProperties
expr_stmt|;
block|}
specifier|public
name|boolean
name|accept
parameter_list|(
name|File
name|file
parameter_list|)
block|{
return|return
operator|(
operator|(
name|iAcceptXml
operator|&&
name|file
operator|.
name|getName
argument_list|()
operator|.
name|endsWith
argument_list|(
name|sXmlExtension
argument_list|)
operator|)
operator|||
operator|(
name|iAcceptProperties
operator|&&
name|file
operator|.
name|getName
argument_list|()
operator|.
name|endsWith
argument_list|(
name|sPropertiesExtension
argument_list|)
operator|)
operator|)
return|;
block|}
block|}
end_class

end_unit

