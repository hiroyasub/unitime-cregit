begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|curricula
operator|.
name|students
package|;
end_package

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|DecimalFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|cpsolver
operator|.
name|ifs
operator|.
name|assignment
operator|.
name|Assignment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|cpsolver
operator|.
name|ifs
operator|.
name|assignment
operator|.
name|context
operator|.
name|AbstractClassWithContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|cpsolver
operator|.
name|ifs
operator|.
name|assignment
operator|.
name|context
operator|.
name|AssignmentContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|cpsolver
operator|.
name|ifs
operator|.
name|model
operator|.
name|Model
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|CurStudent
extends|extends
name|AbstractClassWithContext
argument_list|<
name|CurVariable
argument_list|,
name|CurValue
argument_list|,
name|CurStudent
operator|.
name|CurStudentContext
argument_list|>
block|{
specifier|private
specifier|static
name|DecimalFormat
name|sDF
init|=
operator|new
name|DecimalFormat
argument_list|(
literal|"0.###"
argument_list|)
decl_stmt|;
specifier|private
name|Long
name|iStudentId
decl_stmt|;
specifier|private
name|double
name|iWeight
decl_stmt|;
specifier|public
name|CurStudent
parameter_list|(
name|Long
name|studentId
parameter_list|,
name|double
name|weight
parameter_list|)
block|{
name|iStudentId
operator|=
name|studentId
expr_stmt|;
name|iWeight
operator|=
name|weight
expr_stmt|;
block|}
specifier|public
name|double
name|getWeight
parameter_list|()
block|{
return|return
name|iWeight
return|;
block|}
specifier|public
name|void
name|setWeight
parameter_list|(
name|double
name|weight
parameter_list|)
block|{
name|iWeight
operator|=
name|weight
expr_stmt|;
block|}
specifier|public
name|Long
name|getStudentId
parameter_list|()
block|{
return|return
name|iStudentId
return|;
block|}
specifier|public
name|Set
argument_list|<
name|CurCourse
argument_list|>
name|getCourses
parameter_list|(
name|Assignment
argument_list|<
name|CurVariable
argument_list|,
name|CurValue
argument_list|>
name|assignment
parameter_list|)
block|{
return|return
name|getContext
argument_list|(
name|assignment
argument_list|)
operator|.
name|getCourses
argument_list|()
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getStudentId
argument_list|()
operator|+
operator|(
name|getWeight
argument_list|()
operator|!=
literal|1.f
condition|?
literal|"@"
operator|+
name|sDF
operator|.
name|format
argument_list|(
name|getWeight
argument_list|()
argument_list|)
else|:
literal|""
operator|)
return|;
block|}
specifier|public
class|class
name|CurStudentContext
implements|implements
name|AssignmentContext
block|{
specifier|private
name|Set
argument_list|<
name|CurCourse
argument_list|>
name|iCourses
init|=
operator|new
name|HashSet
argument_list|<
name|CurCourse
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|CurStudentContext
parameter_list|(
name|Assignment
argument_list|<
name|CurVariable
argument_list|,
name|CurValue
argument_list|>
name|assignment
parameter_list|)
block|{
block|}
specifier|public
name|Set
argument_list|<
name|CurCourse
argument_list|>
name|getCourses
parameter_list|()
block|{
return|return
name|iCourses
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|CurStudentContext
name|createAssignmentContext
parameter_list|(
name|Assignment
argument_list|<
name|CurVariable
argument_list|,
name|CurValue
argument_list|>
name|assignment
parameter_list|)
block|{
return|return
operator|new
name|CurStudentContext
argument_list|(
name|assignment
argument_list|)
return|;
block|}
specifier|public
name|void
name|setModel
parameter_list|(
name|CurModel
name|model
parameter_list|)
block|{
name|setAssignmentContextReference
argument_list|(
name|model
operator|.
name|createReference
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Model
argument_list|<
name|CurVariable
argument_list|,
name|CurValue
argument_list|>
name|getModel
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

