begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 - 3.5 (University Timetabling Application)  * Copyright (C) 2010 - 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|solver
operator|.
name|curricula
operator|.
name|students
package|;
end_package

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|DecimalFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|CurStudent
block|{
specifier|private
specifier|static
name|DecimalFormat
name|sDF
init|=
operator|new
name|DecimalFormat
argument_list|(
literal|"0.###"
argument_list|)
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|CurCourse
argument_list|>
name|iCourses
init|=
operator|new
name|HashSet
argument_list|<
name|CurCourse
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Long
name|iStudentId
decl_stmt|;
specifier|private
name|double
name|iWeight
decl_stmt|;
specifier|public
name|CurStudent
parameter_list|(
name|Long
name|studentId
parameter_list|,
name|double
name|weight
parameter_list|)
block|{
name|iStudentId
operator|=
name|studentId
expr_stmt|;
name|iWeight
operator|=
name|weight
expr_stmt|;
block|}
specifier|public
name|double
name|getWeight
parameter_list|()
block|{
return|return
name|iWeight
return|;
block|}
specifier|public
name|void
name|setWeight
parameter_list|(
name|double
name|weight
parameter_list|)
block|{
name|iWeight
operator|=
name|weight
expr_stmt|;
block|}
specifier|public
name|Long
name|getStudentId
parameter_list|()
block|{
return|return
name|iStudentId
return|;
block|}
specifier|public
name|Set
argument_list|<
name|CurCourse
argument_list|>
name|getCourses
parameter_list|()
block|{
return|return
name|iCourses
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getStudentId
argument_list|()
operator|+
operator|(
name|getWeight
argument_list|()
operator|!=
literal|1.f
condition|?
literal|"@"
operator|+
name|sDF
operator|.
name|format
argument_list|(
name|getWeight
argument_list|()
argument_list|)
else|:
literal|""
operator|)
return|;
block|}
block|}
end_class

end_unit

