begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 (University Timetabling Application)  * Copyright (C) 2012, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
package|;
end_package

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|UserContext
import|;
end_import

begin_enum
specifier|public
enum|enum
name|UserProperty
block|{
name|LastAcademicSession
argument_list|(
literal|"LastUsed.acadSessionId"
argument_list|,
literal|"Last used academic session id"
argument_list|)
block|,
name|CourseOfferingNoteDisplay
argument_list|(
literal|"crsOffrNoteDisplay"
argument_list|,
name|CommonValues
operator|.
name|NoteAsIcon
argument_list|,
literal|"Display an icon or shortened text when a course offering has a schedule note."
argument_list|)
block|,
name|SchedulePrintNoteDisplay
argument_list|(
literal|"printNoteDisplay"
argument_list|,
name|CommonValues
operator|.
name|NoteAsIcon
argument_list|,
literal|"Display an icon or shortened text when a class has a schedule print note."
argument_list|)
block|,
name|ManagerNoteDisplay
argument_list|(
literal|"mgrNoteDisplay"
argument_list|,
name|CommonValues
operator|.
name|NoteAsIcon
argument_list|,
literal|"Display an icon or shortened text when a class has a note to the schedule manager."
argument_list|)
block|,
name|GridOrientation
argument_list|(
literal|"timeGrid"
argument_list|,
name|CommonValues
operator|.
name|VerticalGrid
argument_list|,
literal|"Time grid display format"
argument_list|)
block|,
name|GridSize
argument_list|(
literal|"timeGridSize"
argument_list|,
literal|"Workdays x Daytime"
argument_list|,
literal|"Time grid default selection"
argument_list|)
block|,
name|NameFormat
argument_list|(
literal|"name"
argument_list|,
name|CommonValues
operator|.
name|NameLastInitial
argument_list|,
literal|"Instructor name display format"
argument_list|)
block|,
name|ClassesKeepSort
argument_list|(
literal|"keepSort"
argument_list|,
name|CommonValues
operator|.
name|No
argument_list|,
literal|"Sort classes on detail pages based on Classes page sorting options."
argument_list|)
block|;
name|String
name|iKey
decl_stmt|,
name|iDefault
decl_stmt|,
name|iDescription
decl_stmt|;
name|UserProperty
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|defaultValue
parameter_list|,
name|String
name|description
parameter_list|)
block|{
name|iKey
operator|=
name|key
expr_stmt|;
name|iDefault
operator|=
name|defaultValue
expr_stmt|;
name|iDescription
operator|=
name|defaultValue
expr_stmt|;
block|}
name|UserProperty
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|description
parameter_list|)
block|{
name|this
argument_list|(
name|key
argument_list|,
operator|(
name|String
operator|)
literal|null
argument_list|,
name|description
argument_list|)
expr_stmt|;
block|}
name|UserProperty
parameter_list|(
name|String
name|key
parameter_list|,
name|CommonValues
name|defaultValue
parameter_list|,
name|String
name|description
parameter_list|)
block|{
name|this
argument_list|(
name|key
argument_list|,
name|defaultValue
operator|.
name|value
argument_list|()
argument_list|,
name|description
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|key
parameter_list|()
block|{
return|return
name|iKey
return|;
block|}
specifier|public
name|String
name|defaultValue
parameter_list|()
block|{
return|return
name|iDefault
return|;
block|}
specifier|public
name|String
name|description
parameter_list|()
block|{
return|return
name|iDescription
return|;
block|}
specifier|public
name|String
name|get
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
return|return
name|user
operator|==
literal|null
condition|?
name|defaultValue
argument_list|()
else|:
name|user
operator|.
name|getProperty
argument_list|(
name|this
argument_list|)
return|;
block|}
block|}
end_enum

end_unit

