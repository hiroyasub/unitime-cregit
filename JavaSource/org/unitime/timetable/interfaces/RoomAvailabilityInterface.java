begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 - 3.5 (University Timetabling Application)  * Copyright (C) 2008 - 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|interfaces
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|ApplicationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Location
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_interface
specifier|public
interface|interface
name|RoomAvailabilityInterface
block|{
specifier|public
specifier|static
specifier|final
name|String
name|sMidtermExamType
init|=
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.room.availability.eventType.midtermExam"
argument_list|,
name|Event
operator|.
name|sEventTypes
index|[
name|Event
operator|.
name|sEventTypeMidtermExam
index|]
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|sFinalExamType
init|=
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.room.availability.eventType.finalExam"
argument_list|,
name|Event
operator|.
name|sEventTypes
index|[
name|Event
operator|.
name|sEventTypeFinalExam
index|]
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|sClassType
init|=
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.room.availability.eventType.class"
argument_list|,
name|Event
operator|.
name|sEventTypes
index|[
name|Event
operator|.
name|sEventTypeClass
index|]
argument_list|)
decl_stmt|;
specifier|public
name|String
name|getTimeStamp
parameter_list|(
name|Date
name|startTime
parameter_list|,
name|Date
name|endTime
parameter_list|,
name|String
name|excludeType
parameter_list|)
function_decl|;
specifier|public
name|Collection
argument_list|<
name|TimeBlock
argument_list|>
name|getRoomAvailability
parameter_list|(
name|Location
name|location
parameter_list|,
name|Date
name|startTime
parameter_list|,
name|Date
name|endTime
parameter_list|,
name|String
name|excludeType
parameter_list|)
function_decl|;
specifier|public
name|void
name|activate
parameter_list|(
name|Session
name|session
parameter_list|,
name|Date
name|startTime
parameter_list|,
name|Date
name|endTime
parameter_list|,
name|String
name|excludeType
parameter_list|,
name|boolean
name|waitForSync
parameter_list|)
function_decl|;
specifier|public
name|void
name|startService
parameter_list|()
function_decl|;
specifier|public
name|void
name|stopService
parameter_list|()
function_decl|;
specifier|public
interface|interface
name|TimeBlock
extends|extends
name|Serializable
block|{
specifier|public
name|String
name|getEventName
parameter_list|()
function_decl|;
specifier|public
name|String
name|getEventType
parameter_list|()
function_decl|;
specifier|public
name|Date
name|getStartTime
parameter_list|()
function_decl|;
specifier|public
name|Date
name|getEndTime
parameter_list|()
function_decl|;
block|}
block|}
end_interface

end_unit

