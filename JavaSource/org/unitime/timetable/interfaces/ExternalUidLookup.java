begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2008 - 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|interfaces
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|StringTokenizer
import|;
end_import

begin_comment
comment|/**  * Interface to lookup external ids for manager  *   * @author Tomas Muller  *   */
end_comment

begin_interface
specifier|public
interface|interface
name|ExternalUidLookup
block|{
specifier|public
name|UserInfo
name|doLookup
parameter_list|(
name|String
name|searchId
parameter_list|)
throws|throws
name|Exception
function_decl|;
specifier|public
specifier|static
class|class
name|UserInfo
block|{
specifier|private
name|String
name|iExternalId
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iUserName
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iFirstName
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iMiddleName
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iLastName
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iEmail
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iName
init|=
literal|null
decl_stmt|;
specifier|public
name|UserInfo
parameter_list|()
block|{
block|}
specifier|public
name|String
name|getExternalId
parameter_list|()
block|{
return|return
name|iExternalId
return|;
block|}
specifier|public
name|void
name|setExternalId
parameter_list|(
name|String
name|externalId
parameter_list|)
block|{
name|iExternalId
operator|=
name|externalId
expr_stmt|;
block|}
specifier|public
name|String
name|getUserName
parameter_list|()
block|{
return|return
name|iUserName
return|;
block|}
specifier|public
name|void
name|setUserName
parameter_list|(
name|String
name|userName
parameter_list|)
block|{
name|iUserName
operator|=
name|userName
expr_stmt|;
block|}
specifier|public
name|String
name|getFirstName
parameter_list|()
block|{
if|if
condition|(
name|iFirstName
operator|!=
literal|null
condition|)
return|return
name|iFirstName
return|;
if|if
condition|(
name|iName
operator|!=
literal|null
condition|)
block|{
name|StringTokenizer
name|s
init|=
operator|new
name|StringTokenizer
argument_list|(
name|iName
argument_list|)
decl_stmt|;
if|if
condition|(
name|s
operator|.
name|countTokens
argument_list|()
operator|>
literal|1
condition|)
return|return
name|s
operator|.
name|nextToken
argument_list|()
return|;
block|}
return|return
literal|""
return|;
block|}
specifier|public
name|void
name|setFirstName
parameter_list|(
name|String
name|firstName
parameter_list|)
block|{
name|iFirstName
operator|=
name|firstName
expr_stmt|;
block|}
specifier|public
name|String
name|getMiddleName
parameter_list|()
block|{
if|if
condition|(
name|iMiddleName
operator|!=
literal|null
condition|)
return|return
name|iMiddleName
return|;
if|if
condition|(
name|iName
operator|!=
literal|null
condition|)
block|{
name|StringTokenizer
name|s
init|=
operator|new
name|StringTokenizer
argument_list|(
name|iName
argument_list|)
decl_stmt|;
if|if
condition|(
name|s
operator|.
name|countTokens
argument_list|()
operator|>
literal|2
condition|)
block|{
name|s
operator|.
name|nextToken
argument_list|()
expr_stmt|;
name|String
name|m
init|=
literal|""
decl_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
name|String
name|n
init|=
name|s
operator|.
name|nextToken
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|s
operator|.
name|hasMoreTokens
argument_list|()
condition|)
break|break;
name|m
operator|+=
operator|(
name|m
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
literal|" "
operator|)
operator|+
name|n
expr_stmt|;
block|}
return|return
name|m
return|;
block|}
block|}
return|return
literal|""
return|;
block|}
specifier|public
name|void
name|setMiddleName
parameter_list|(
name|String
name|middleName
parameter_list|)
block|{
name|iMiddleName
operator|=
name|middleName
expr_stmt|;
block|}
specifier|public
name|String
name|getLastName
parameter_list|()
block|{
if|if
condition|(
name|iLastName
operator|!=
literal|null
condition|)
return|return
name|iLastName
return|;
if|if
condition|(
name|iName
operator|!=
literal|null
condition|)
block|{
name|StringTokenizer
name|s
init|=
operator|new
name|StringTokenizer
argument_list|(
name|iName
argument_list|)
decl_stmt|;
if|if
condition|(
name|s
operator|.
name|countTokens
argument_list|()
operator|>
literal|0
condition|)
block|{
name|String
name|l
init|=
name|s
operator|.
name|nextToken
argument_list|()
decl_stmt|;
while|while
condition|(
name|s
operator|.
name|hasMoreTokens
argument_list|()
condition|)
name|l
operator|=
name|s
operator|.
name|nextToken
argument_list|()
expr_stmt|;
return|return
name|l
return|;
block|}
block|}
return|return
literal|""
return|;
block|}
specifier|public
name|void
name|setLastName
parameter_list|(
name|String
name|lastName
parameter_list|)
block|{
name|iLastName
operator|=
name|lastName
expr_stmt|;
block|}
specifier|public
name|String
name|getEmail
parameter_list|()
block|{
return|return
name|iEmail
return|;
block|}
specifier|public
name|void
name|setEmail
parameter_list|(
name|String
name|email
parameter_list|)
block|{
name|iEmail
operator|=
name|email
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
if|if
condition|(
name|iName
operator|!=
literal|null
condition|)
return|return
name|iName
return|;
return|return
operator|(
operator|(
name|iLastName
operator|==
literal|null
condition|?
literal|""
else|:
name|iLastName
operator|)
operator|+
literal|", "
operator|+
operator|(
name|iFirstName
operator|==
literal|null
condition|?
literal|""
else|:
name|iFirstName
operator|)
operator|+
operator|(
name|iMiddleName
operator|==
literal|null
condition|?
literal|""
else|:
literal|" "
operator|+
name|iMiddleName
operator|)
operator|)
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
block|}
block|}
end_interface

end_unit

