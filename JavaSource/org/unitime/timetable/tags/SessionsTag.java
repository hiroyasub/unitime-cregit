begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2008 - 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|tags
package|;
end_package

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSession
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|jsp
operator|.
name|JspException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|jsp
operator|.
name|JspTagException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|jsp
operator|.
name|tagext
operator|.
name|TagSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|Web
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|listeners
operator|.
name|SessionListener
import|;
end_import

begin_comment
comment|/**  * Counts active sessions  * @author Heston Fernandes  */
end_comment

begin_class
specifier|public
class|class
name|SessionsTag
extends|extends
name|TagSupport
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1332135385302161770L
decl_stmt|;
comment|/** 	 * Default method to handle start of tag. 	 */
specifier|public
name|int
name|doStartTag
parameter_list|()
throws|throws
name|JspException
block|{
comment|// Check Access
name|HttpServletRequest
name|request
init|=
operator|(
name|HttpServletRequest
operator|)
name|pageContext
operator|.
name|getRequest
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|Web
operator|.
name|isLoggedIn
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
operator|&&
operator|!
name|Web
operator|.
name|isAdmin
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|JspException
argument_list|(
literal|"Access Denied."
argument_list|)
throw|;
block|}
name|StringBuffer
name|html
init|=
operator|new
name|StringBuffer
argument_list|(
literal|""
argument_list|)
decl_stmt|;
name|SimpleDateFormat
name|sdf
init|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"MM/dd/yyyy hh:mm:ss a"
argument_list|)
decl_stmt|;
try|try
block|{
name|html
operator|.
name|append
argument_list|(
literal|"<TABLE border='0' cellspacing='1' cellpadding='2' width='100%'>"
argument_list|)
expr_stmt|;
name|html
operator|.
name|append
argument_list|(
literal|"<TR>"
argument_list|)
expr_stmt|;
name|html
operator|.
name|append
argument_list|(
literal|"<TD align='center'>User</TD>"
argument_list|)
expr_stmt|;
name|html
operator|.
name|append
argument_list|(
literal|"<TD align='center'>Created</TD>"
argument_list|)
expr_stmt|;
name|html
operator|.
name|append
argument_list|(
literal|"<TD align='center'>Last Access</TD>"
argument_list|)
expr_stmt|;
name|html
operator|.
name|append
argument_list|(
literal|"</TR>"
argument_list|)
expr_stmt|;
name|HashMap
name|s
init|=
name|SessionListener
operator|.
name|getSessions
argument_list|()
decl_stmt|;
name|Set
name|keys
init|=
name|s
operator|.
name|keySet
argument_list|()
decl_stmt|;
name|Iterator
name|i
init|=
name|keys
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|String
name|sessionId
init|=
name|i
operator|.
name|next
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|HttpSession
name|session
init|=
operator|(
name|HttpSession
operator|)
name|s
operator|.
name|get
argument_list|(
name|sessionId
argument_list|)
decl_stmt|;
if|if
condition|(
name|session
operator|!=
literal|null
condition|)
block|{
name|User
name|user
init|=
operator|(
name|User
operator|)
operator|(
name|session
operator|.
name|getAttribute
argument_list|(
literal|"User"
argument_list|)
operator|)
decl_stmt|;
name|String
name|userDetail
init|=
literal|"Cannot be determined"
decl_stmt|;
if|if
condition|(
name|user
operator|!=
literal|null
operator|&&
name|user
operator|.
name|getLogin
argument_list|()
operator|!=
literal|null
condition|)
name|userDetail
operator|=
name|user
operator|.
name|getName
argument_list|()
operator|+
literal|" ("
operator|+
name|user
operator|.
name|getCurrentRole
argument_list|()
operator|+
literal|")"
expr_stmt|;
name|html
operator|.
name|append
argument_list|(
literal|"<TR>"
argument_list|)
expr_stmt|;
name|html
operator|.
name|append
argument_list|(
literal|"<TD align='left'>"
operator|+
name|userDetail
operator|+
literal|"</TD>"
argument_list|)
expr_stmt|;
name|html
operator|.
name|append
argument_list|(
literal|"<TD align='left'>"
operator|+
name|sdf
operator|.
name|format
argument_list|(
operator|new
name|Date
argument_list|(
name|session
operator|.
name|getCreationTime
argument_list|()
argument_list|)
argument_list|)
operator|+
literal|"</TD>"
argument_list|)
expr_stmt|;
name|html
operator|.
name|append
argument_list|(
literal|"<TD align='left'>"
operator|+
name|sdf
operator|.
name|format
argument_list|(
operator|new
name|Date
argument_list|(
name|session
operator|.
name|getLastAccessedTime
argument_list|()
argument_list|)
argument_list|)
operator|+
literal|"</TD>"
argument_list|)
expr_stmt|;
name|html
operator|.
name|append
argument_list|(
literal|"</TR>"
argument_list|)
expr_stmt|;
block|}
block|}
name|html
operator|.
name|append
argument_list|(
literal|"</TABLE>"
argument_list|)
expr_stmt|;
name|pageContext
operator|.
name|getOut
argument_list|()
operator|.
name|print
argument_list|(
name|html
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|JspTagException
argument_list|(
literal|"SessionsTag: "
operator|+
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
return|return
name|SKIP_BODY
return|;
block|}
comment|/** 	 * Default method to handle end of tag 	 */
specifier|public
name|int
name|doEndTag
parameter_list|()
block|{
return|return
name|EVAL_PAGE
return|;
block|}
block|}
end_class

end_unit

