begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|tags
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|jsp
operator|.
name|JspException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|jsp
operator|.
name|tagext
operator|.
name|BodyTagSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|Debug
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|web
operator|.
name|WebTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|CommonValues
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|UserProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ChangeLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Class_
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Curriculum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DepartmentRoomFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DepartmentalInstructor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|GlobalRoomFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|InstrOfferingConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|InstructionalOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Location
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomFeature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomGroup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SchedulingSubpart
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|DepartmentalInstructorDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|InstructionalOfferingDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|LocationDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|context
operator|.
name|HttpSessionContext
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|LastChange
extends|extends
name|BodyTagSupport
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|983949265164022751L
decl_stmt|;
specifier|private
name|String
name|iPackage
init|=
literal|"org.unitime.timetable.model"
decl_stmt|;
specifier|private
name|String
name|iType
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iId
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|iSource
init|=
literal|null
decl_stmt|;
specifier|public
name|LastChange
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setType
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|iType
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|iType
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setPackage
parameter_list|(
name|String
name|packageStr
parameter_list|)
block|{
name|iPackage
operator|=
name|packageStr
expr_stmt|;
block|}
specifier|public
name|String
name|getPackage
parameter_list|()
block|{
return|return
name|iPackage
return|;
block|}
specifier|public
name|void
name|setSource
parameter_list|(
name|String
name|source
parameter_list|)
block|{
name|iSource
operator|=
name|source
expr_stmt|;
block|}
specifier|public
name|String
name|getSource
parameter_list|()
block|{
return|return
name|iSource
return|;
block|}
specifier|public
name|int
name|doStartTag
parameter_list|()
throws|throws
name|JspException
block|{
return|return
name|EVAL_BODY_BUFFERED
return|;
block|}
specifier|public
name|SessionContext
name|getSessionContext
parameter_list|()
block|{
return|return
name|HttpSessionContext
operator|.
name|getSessionContext
argument_list|(
name|pageContext
operator|.
name|getServletContext
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|int
name|printLastChangeTableRow
parameter_list|(
name|WebTable
name|webTable
parameter_list|,
name|ChangeLog
name|lastChange
parameter_list|)
block|{
if|if
condition|(
name|lastChange
operator|==
literal|null
condition|)
return|return
literal|0
return|;
name|webTable
operator|.
name|addLine
argument_list|(
literal|null
argument_list|,
operator|new
name|String
index|[]
block|{
name|lastChange
operator|.
name|getSourceTitle
argument_list|()
block|,
name|lastChange
operator|.
name|getObjectTitle
argument_list|()
block|,
name|lastChange
operator|.
name|getOperationTitle
argument_list|()
block|,
name|lastChange
operator|.
name|getManager
argument_list|()
operator|.
name|getShortName
argument_list|()
block|,
name|ChangeLog
operator|.
name|sDF
operator|.
name|format
argument_list|(
name|lastChange
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
block|}
argument_list|,
operator|new
name|Comparable
index|[]
block|{
name|lastChange
operator|.
name|getSourceTitle
argument_list|()
block|,
comment|//new Integer(lastChange.getSource().ordinal()),
name|lastChange
operator|.
name|getObjectTitle
argument_list|()
block|,
operator|new
name|Integer
argument_list|(
name|lastChange
operator|.
name|getOperation
argument_list|()
operator|.
name|ordinal
argument_list|()
argument_list|)
block|,
name|lastChange
operator|.
name|getManager
argument_list|()
operator|.
name|getName
argument_list|()
block|,
name|lastChange
operator|.
name|getTimeStamp
argument_list|()
operator|.
name|getTime
argument_list|()
block|}
argument_list|)
expr_stmt|;
return|return
literal|1
return|;
block|}
specifier|private
specifier|static
name|ChangeLog
name|combine
parameter_list|(
name|ChangeLog
name|c1
parameter_list|,
name|ChangeLog
name|c2
parameter_list|)
block|{
if|if
condition|(
name|c1
operator|==
literal|null
condition|)
return|return
name|c2
return|;
if|if
condition|(
name|c2
operator|==
literal|null
condition|)
return|return
name|c1
return|;
return|return
operator|(
name|c1
operator|.
name|compareTo
argument_list|(
name|c2
argument_list|)
operator|<
literal|0
condition|?
name|c2
else|:
name|c1
operator|)
return|;
block|}
specifier|public
name|boolean
name|printLastChange
parameter_list|(
name|InstructionalOffering
name|io
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|io
operator|==
literal|null
condition|)
return|return
literal|false
return|;
name|int
name|nrChanges
init|=
literal|0
decl_stmt|;
name|WebTable
operator|.
name|setOrder
argument_list|(
name|getSessionContext
argument_list|()
argument_list|,
literal|"lastChanges.ord"
argument_list|,
name|pageContext
operator|.
name|getRequest
argument_list|()
operator|.
name|getParameter
argument_list|(
literal|"lcord"
argument_list|)
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|WebTable
name|webTable
init|=
operator|new
name|WebTable
argument_list|(
literal|5
argument_list|,
literal|"Last Changes"
argument_list|,
literal|"instructionalOfferingDetail.do?io="
operator|+
name|io
operator|.
name|getUniqueId
argument_list|()
operator|+
literal|"&lcord=%%"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"Page"
block|,
literal|"Object"
block|,
literal|"Operation"
block|,
literal|"Manager"
block|,
literal|"Date"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|}
argument_list|,
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|false
block|}
argument_list|)
decl_stmt|;
comment|//webTable.setRowStyle("white-space:nowrap");
name|HashSet
name|configIds
init|=
operator|new
name|HashSet
argument_list|()
decl_stmt|;
name|HashSet
name|subpartIds
init|=
operator|new
name|HashSet
argument_list|()
decl_stmt|;
name|HashSet
name|classIds
init|=
operator|new
name|HashSet
argument_list|()
decl_stmt|;
name|HashSet
name|offeringIds
init|=
operator|new
name|HashSet
argument_list|()
decl_stmt|;
name|HashSet
name|curriculumIds
init|=
operator|new
name|HashSet
argument_list|()
decl_stmt|;
for|for
control|(
name|Iterator
name|i1
init|=
name|io
operator|.
name|getInstrOfferingConfigs
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i1
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|InstrOfferingConfig
name|ioc
init|=
operator|(
name|InstrOfferingConfig
operator|)
name|i1
operator|.
name|next
argument_list|()
decl_stmt|;
name|configIds
operator|.
name|add
argument_list|(
name|ioc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|i2
init|=
name|ioc
operator|.
name|getSchedulingSubparts
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i2
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|SchedulingSubpart
name|ss
init|=
operator|(
name|SchedulingSubpart
operator|)
name|i2
operator|.
name|next
argument_list|()
decl_stmt|;
name|subpartIds
operator|.
name|add
argument_list|(
name|ss
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|i3
init|=
name|ss
operator|.
name|getClasses
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i3
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Class_
name|c
init|=
operator|(
name|Class_
operator|)
name|i3
operator|.
name|next
argument_list|()
decl_stmt|;
name|classIds
operator|.
name|add
argument_list|(
name|c
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
for|for
control|(
name|Iterator
name|i1
init|=
name|io
operator|.
name|getCourseOfferings
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i1
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|CourseOffering
name|o
init|=
operator|(
name|CourseOffering
operator|)
name|i1
operator|.
name|next
argument_list|()
decl_stmt|;
name|offeringIds
operator|.
name|add
argument_list|(
name|o
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|curriculumIds
operator|.
name|addAll
argument_list|(
operator|(
name|List
argument_list|<
name|Long
argument_list|>
operator|)
name|InstructionalOfferingDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|getSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"select c.classification.curriculum.uniqueId from CurriculumCourse c where c.course.instructionalOffering.uniqueId = :offeringId"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"offeringId"
argument_list|,
name|io
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|io
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|CROSS_LIST
argument_list|)
argument_list|)
expr_stmt|;
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|combine
argument_list|(
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|io
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|MAKE_OFFERED
argument_list|)
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|io
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|MAKE_NOT_OFFERED
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|CourseOffering
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|offeringIds
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|COURSE_OFFERING_EDIT
argument_list|)
argument_list|)
expr_stmt|;
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|combine
argument_list|(
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|InstructionalOffering
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|io
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|RESERVATION
argument_list|)
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|Class_
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|classIds
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|RESERVATION
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|combine
argument_list|(
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|io
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|INSTR_CFG_EDIT
argument_list|)
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|InstrOfferingConfig
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|configIds
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|INSTR_CFG_EDIT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|InstrOfferingConfig
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|configIds
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|CLASS_SETUP
argument_list|)
argument_list|)
expr_stmt|;
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|InstrOfferingConfig
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|configIds
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|CLASS_INSTR_ASSIGN
argument_list|)
argument_list|)
expr_stmt|;
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|SchedulingSubpart
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|subpartIds
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|SCHEDULING_SUBPART_EDIT
argument_list|)
argument_list|)
expr_stmt|;
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|Class_
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|classIds
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|CLASS_EDIT
argument_list|)
argument_list|)
expr_stmt|;
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|io
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|DIST_PREF_EDIT
argument_list|)
argument_list|)
expr_stmt|;
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|CourseOffering
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|offeringIds
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|CURRICULA
argument_list|)
argument_list|)
expr_stmt|;
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|combine
argument_list|(
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|Curriculum
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|curriculumIds
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|CURRICULA
argument_list|)
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|Curriculum
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|curriculumIds
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|CURRICULUM_EDIT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|nrChanges
operator|>
literal|0
condition|)
block|{
name|pageContext
operator|.
name|getOut
argument_list|()
operator|.
name|println
argument_list|(
literal|"<TR><TD coslpan='2'>&nbsp;</TD></TR>"
operator|+
literal|"<TR><TD colspan='2'><table border='0' width='100%' cellspacing='0' cellpadding='3'>"
operator|+
name|webTable
operator|.
name|printTable
argument_list|(
name|WebTable
operator|.
name|getOrder
argument_list|(
name|getSessionContext
argument_list|()
argument_list|,
literal|"lastChanges.ord"
argument_list|)
argument_list|)
operator|+
literal|"</table></TD></TR>"
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|printLastChange
parameter_list|(
name|DepartmentalInstructor
name|inst
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|inst
operator|==
literal|null
condition|)
return|return
literal|false
return|;
name|int
name|nrChanges
init|=
literal|0
decl_stmt|;
name|WebTable
operator|.
name|setOrder
argument_list|(
name|getSessionContext
argument_list|()
argument_list|,
literal|"lastChanges.ord"
argument_list|,
name|pageContext
operator|.
name|getRequest
argument_list|()
operator|.
name|getParameter
argument_list|(
literal|"lcord"
argument_list|)
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|WebTable
name|webTable
init|=
operator|new
name|WebTable
argument_list|(
literal|5
argument_list|,
literal|"Last Changes"
argument_list|,
literal|"instructorDetail.do?instructorId="
operator|+
name|inst
operator|.
name|getUniqueId
argument_list|()
operator|+
literal|"&lcord=%%"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"Page"
block|,
literal|"Object"
block|,
literal|"Operation"
block|,
literal|"Manager"
block|,
literal|"Date"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|}
argument_list|,
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|false
block|}
argument_list|)
decl_stmt|;
comment|//webTable.setRowStyle("white-space:nowrap");
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|combine
argument_list|(
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|inst
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|INSTRUCTOR_EDIT
argument_list|)
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|inst
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|INSTRUCTOR_MANAGE
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|inst
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|INSTRUCTOR_PREF_EDIT
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|nrChanges
operator|>
literal|0
condition|)
block|{
name|pageContext
operator|.
name|getOut
argument_list|()
operator|.
name|println
argument_list|(
literal|"<TR><TD coslpan='2'>&nbsp;</TD></TR>"
operator|+
literal|"<TR><TD colspan='2'><table border='0' width='100%' cellspacing='0' cellpadding='3'>"
operator|+
name|webTable
operator|.
name|printTable
argument_list|(
name|WebTable
operator|.
name|getOrder
argument_list|(
name|getSessionContext
argument_list|()
argument_list|,
literal|"lastChanges.ord"
argument_list|)
argument_list|)
operator|+
literal|"</table></TD></TR>"
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|printLastChange
parameter_list|(
name|Location
name|location
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|location
operator|==
literal|null
condition|)
return|return
literal|false
return|;
name|int
name|nrChanges
init|=
literal|0
decl_stmt|;
name|WebTable
operator|.
name|setOrder
argument_list|(
name|getSessionContext
argument_list|()
argument_list|,
literal|"lastChanges.ord"
argument_list|,
name|pageContext
operator|.
name|getRequest
argument_list|()
operator|.
name|getParameter
argument_list|(
literal|"lcord"
argument_list|)
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|WebTable
name|webTable
init|=
operator|new
name|WebTable
argument_list|(
literal|5
argument_list|,
literal|"Last Changes"
argument_list|,
literal|"roomDetail.do?id="
operator|+
name|location
operator|.
name|getUniqueId
argument_list|()
operator|+
literal|"&lcord=%%"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"Page"
block|,
literal|"Object"
block|,
literal|"Operation"
block|,
literal|"Manager"
block|,
literal|"Date"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|,
literal|"left"
block|}
argument_list|,
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|false
block|}
argument_list|)
decl_stmt|;
comment|//webTable.setRowStyle("white-space:nowrap");
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|location
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|ROOM_EDIT
argument_list|)
argument_list|)
expr_stmt|;
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|location
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|ROOM_DEPT_EDIT
argument_list|)
argument_list|)
expr_stmt|;
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|location
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|ROOM_PREF_EDIT
argument_list|)
argument_list|)
expr_stmt|;
name|HashSet
name|roomFeatureIds
init|=
operator|new
name|HashSet
argument_list|()
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|location
operator|.
name|getGlobalRoomFeatures
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|roomFeatureIds
operator|.
name|add
argument_list|(
operator|(
operator|(
name|RoomFeature
operator|)
name|i
operator|.
name|next
argument_list|()
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Iterator
name|i
init|=
name|location
operator|.
name|getDepartmentRoomFeatures
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|roomFeatureIds
operator|.
name|add
argument_list|(
operator|(
operator|(
name|RoomFeature
operator|)
name|i
operator|.
name|next
argument_list|()
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|HashSet
name|roomGroupIds
init|=
operator|new
name|HashSet
argument_list|()
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|location
operator|.
name|getRoomGroups
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|roomGroupIds
operator|.
name|add
argument_list|(
operator|(
operator|(
name|RoomGroup
operator|)
name|i
operator|.
name|next
argument_list|()
operator|)
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|combine
argument_list|(
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|location
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|ROOM_FEATURE_EDIT
argument_list|)
argument_list|,
name|combine
argument_list|(
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|GlobalRoomFeature
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|roomFeatureIds
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|ROOM_FEATURE_EDIT
argument_list|)
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|DepartmentRoomFeature
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|roomFeatureIds
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|ROOM_FEATURE_EDIT
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|nrChanges
operator|+=
name|printLastChangeTableRow
argument_list|(
name|webTable
argument_list|,
name|combine
argument_list|(
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|location
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|ROOM_GROUP_EDIT
argument_list|)
argument_list|,
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|RoomGroup
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|roomGroupIds
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|ROOM_GROUP_EDIT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|nrChanges
operator|>
literal|0
condition|)
block|{
name|pageContext
operator|.
name|getOut
argument_list|()
operator|.
name|println
argument_list|(
literal|"<TR><TD coslpan='2'>&nbsp;</TD></TR>"
operator|+
literal|"<TR><TD colspan='2'><table border='0' width='100%' cellspacing='0' cellpadding='3'>"
operator|+
name|webTable
operator|.
name|printTable
argument_list|(
name|WebTable
operator|.
name|getOrder
argument_list|(
name|getSessionContext
argument_list|()
argument_list|,
literal|"lastChanges.ord"
argument_list|)
argument_list|)
operator|+
literal|"</table></TD></TR>"
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|int
name|doEndTag
parameter_list|()
throws|throws
name|JspException
block|{
try|try
block|{
if|if
condition|(
operator|!
name|getSessionContext
argument_list|()
operator|.
name|isAuthenticated
argument_list|()
operator|||
name|CommonValues
operator|.
name|No
operator|.
name|eq
argument_list|(
name|getSessionContext
argument_list|()
operator|.
name|getUser
argument_list|()
operator|.
name|getProperty
argument_list|(
name|UserProperty
operator|.
name|DisplayLastChanges
argument_list|)
argument_list|)
condition|)
return|return
name|EVAL_PAGE
return|;
name|String
name|objectIdStr
init|=
operator|(
name|getBodyContent
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|getBodyContent
argument_list|()
operator|.
name|getString
argument_list|()
operator|.
name|trim
argument_list|()
operator|)
decl_stmt|;
if|if
condition|(
name|objectIdStr
operator|==
literal|null
operator|||
name|objectIdStr
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|objectIdStr
operator|=
operator|(
name|getId
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|getId
argument_list|()
operator|.
name|trim
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|objectIdStr
operator|==
literal|null
operator|||
name|objectIdStr
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
return|return
name|EVAL_PAGE
return|;
name|Long
name|objectId
init|=
name|Long
operator|.
name|parseLong
argument_list|(
name|objectIdStr
argument_list|)
decl_stmt|;
name|String
name|objectType
init|=
name|getPackage
argument_list|()
operator|.
name|trim
argument_list|()
operator|+
literal|"."
operator|+
name|getType
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
name|ChangeLog
operator|.
name|Source
name|source
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|getSource
argument_list|()
operator|!=
literal|null
operator|&&
name|getSource
argument_list|()
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|ChangeLog
operator|.
name|Source
operator|.
name|valueOf
argument_list|(
name|getSource
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|source
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|InstructionalOffering
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|objectType
argument_list|)
operator|&&
name|printLastChange
argument_list|(
operator|new
name|InstructionalOfferingDAO
argument_list|()
operator|.
name|get
argument_list|(
name|objectId
argument_list|)
argument_list|)
condition|)
return|return
name|EVAL_PAGE
return|;
if|if
condition|(
name|DepartmentalInstructor
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|objectType
argument_list|)
operator|&&
name|printLastChange
argument_list|(
operator|new
name|DepartmentalInstructorDAO
argument_list|()
operator|.
name|get
argument_list|(
name|objectId
argument_list|)
argument_list|)
condition|)
return|return
name|EVAL_PAGE
return|;
if|if
condition|(
name|Location
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|objectType
argument_list|)
operator|&&
name|printLastChange
argument_list|(
operator|new
name|LocationDAO
argument_list|()
operator|.
name|get
argument_list|(
name|objectId
argument_list|)
argument_list|)
condition|)
return|return
name|EVAL_PAGE
return|;
block|}
name|ChangeLog
name|lch
init|=
name|ChangeLog
operator|.
name|findLastChange
argument_list|(
name|objectType
argument_list|,
name|objectId
argument_list|,
name|source
argument_list|)
decl_stmt|;
name|pageContext
operator|.
name|getOut
argument_list|()
operator|.
name|println
argument_list|(
literal|"<TR><TD>Last Change:</TD><TD>"
argument_list|)
expr_stmt|;
if|if
condition|(
name|lch
operator|==
literal|null
condition|)
name|pageContext
operator|.
name|getOut
argument_list|()
operator|.
name|print
argument_list|(
literal|"<i>N/A</i>"
argument_list|)
expr_stmt|;
else|else
name|pageContext
operator|.
name|getOut
argument_list|()
operator|.
name|print
argument_list|(
name|lch
operator|.
name|getShortLabel
argument_list|()
argument_list|)
expr_stmt|;
name|pageContext
operator|.
name|getOut
argument_list|()
operator|.
name|println
argument_list|(
literal|"</TD></TR>"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Debug
operator|.
name|error
argument_list|(
name|e
argument_list|)
expr_stmt|;
try|try
block|{
name|pageContext
operator|.
name|getOut
argument_list|()
operator|.
name|print
argument_list|(
literal|"<font color='red'>ERROR: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
operator|+
literal|"</font>"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|io
parameter_list|)
block|{
block|}
block|}
return|return
name|EVAL_PAGE
return|;
block|}
block|}
end_class

end_unit

