begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2008 - 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|tags
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|jsp
operator|.
name|tagext
operator|.
name|TagSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|ApplicationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ManagerSettings
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|NotHasProperty
extends|extends
name|TagSupport
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|2188052467367119211L
decl_stmt|;
specifier|private
name|String
name|iName
decl_stmt|;
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|private
name|boolean
name|iUser
init|=
literal|false
decl_stmt|;
specifier|public
name|boolean
name|isUser
parameter_list|()
block|{
return|return
name|iUser
return|;
block|}
specifier|public
name|void
name|setUser
parameter_list|(
name|boolean
name|user
parameter_list|)
block|{
name|iUser
operator|=
name|user
expr_stmt|;
block|}
specifier|protected
name|String
name|getProperty
parameter_list|()
block|{
if|if
condition|(
name|isUser
argument_list|()
condition|)
block|{
return|return
name|ManagerSettings
operator|.
name|getValue
argument_list|(
name|pageContext
operator|.
name|getSession
argument_list|()
argument_list|,
name|getName
argument_list|()
argument_list|,
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
name|getName
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
name|getName
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|public
name|int
name|doStartTag
parameter_list|()
block|{
try|try
block|{
name|String
name|value
init|=
name|getProperty
argument_list|()
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
operator|||
name|value
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
return|return
name|EVAL_BODY_INCLUDE
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
return|return
name|SKIP_BODY
return|;
block|}
specifier|public
name|int
name|doEndTag
parameter_list|()
block|{
return|return
name|EVAL_PAGE
return|;
block|}
block|}
end_class

end_unit

