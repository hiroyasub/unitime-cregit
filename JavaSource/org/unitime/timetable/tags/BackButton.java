begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|tags
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|jsp
operator|.
name|JspException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|jsp
operator|.
name|JspTagException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|jsp
operator|.
name|tagext
operator|.
name|BodyTagSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|webutil
operator|.
name|BackTracker
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|BackButton
extends|extends
name|BodyTagSupport
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|8565058511853635478L
decl_stmt|;
name|String
name|iTitle
init|=
literal|"Return to %%"
decl_stmt|;
name|String
name|iName
init|=
literal|"Back"
decl_stmt|;
name|String
name|iAccessKey
init|=
literal|null
decl_stmt|;
name|String
name|iStyle
init|=
literal|null
decl_stmt|;
name|String
name|iClass
init|=
literal|null
decl_stmt|;
name|String
name|iType
init|=
literal|null
decl_stmt|;
name|String
name|iId
init|=
literal|null
decl_stmt|;
name|int
name|iBack
init|=
literal|2
decl_stmt|;
specifier|public
name|String
name|getTitle
parameter_list|()
block|{
return|return
name|iTitle
return|;
block|}
specifier|public
name|void
name|setTitle
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|iTitle
operator|=
name|title
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getAccesskey
parameter_list|()
block|{
return|return
name|iAccessKey
return|;
block|}
specifier|public
name|void
name|setAccesskey
parameter_list|(
name|String
name|accessKey
parameter_list|)
block|{
name|iAccessKey
operator|=
name|accessKey
expr_stmt|;
block|}
specifier|public
name|String
name|getStyle
parameter_list|()
block|{
return|return
name|iStyle
return|;
block|}
specifier|public
name|void
name|setStyle
parameter_list|(
name|String
name|style
parameter_list|)
block|{
name|iStyle
operator|=
name|style
expr_stmt|;
block|}
specifier|public
name|String
name|getStyleClass
parameter_list|()
block|{
return|return
name|iClass
return|;
block|}
specifier|public
name|void
name|setStyleClass
parameter_list|(
name|String
name|styleClass
parameter_list|)
block|{
name|iClass
operator|=
name|styleClass
expr_stmt|;
block|}
specifier|public
name|int
name|getBack
parameter_list|()
block|{
return|return
name|iBack
return|;
block|}
specifier|public
name|void
name|setBack
parameter_list|(
name|int
name|back
parameter_list|)
block|{
name|iBack
operator|=
name|back
expr_stmt|;
block|}
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|iType
return|;
block|}
specifier|public
name|void
name|setType
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|iType
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
specifier|public
name|int
name|doStartTag
parameter_list|()
throws|throws
name|JspException
block|{
return|return
name|EVAL_BODY_BUFFERED
return|;
block|}
specifier|public
name|int
name|doEndTag
parameter_list|()
throws|throws
name|JspException
block|{
try|try
block|{
name|String
name|id
init|=
operator|(
name|getBodyContent
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|getBodyContent
argument_list|()
operator|.
name|getString
argument_list|()
operator|)
decl_stmt|;
name|pageContext
operator|.
name|getOut
argument_list|()
operator|.
name|print
argument_list|(
name|BackTracker
operator|.
name|getBackButton
argument_list|(
operator|(
name|HttpServletRequest
operator|)
name|pageContext
operator|.
name|getRequest
argument_list|()
argument_list|,
name|getBack
argument_list|()
argument_list|,
name|getName
argument_list|()
argument_list|,
name|getTitle
argument_list|()
argument_list|,
name|getAccesskey
argument_list|()
argument_list|,
name|getStyle
argument_list|()
argument_list|,
name|getStyleClass
argument_list|()
argument_list|,
name|getType
argument_list|()
argument_list|,
operator|(
name|id
operator|==
literal|null
operator|||
name|id
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|?
literal|null
else|:
name|id
operator|.
name|trim
argument_list|()
operator|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|JspTagException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
return|return
name|EVAL_PAGE
return|;
block|}
block|}
end_class

end_unit

