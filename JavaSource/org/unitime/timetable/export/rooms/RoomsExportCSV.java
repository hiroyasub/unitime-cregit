begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|export
operator|.
name|rooms
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|export
operator|.
name|CSVPrinter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|export
operator|.
name|ExportHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomDetailInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|RoomInterface
operator|.
name|RoomFlag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|rights
operator|.
name|Right
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"org.unitime.timetable.export.Exporter:rooms.csv"
argument_list|)
specifier|public
class|class
name|RoomsExportCSV
extends|extends
name|RoomsExporter
block|{
annotation|@
name|Override
specifier|public
name|String
name|reference
parameter_list|()
block|{
return|return
literal|"rooms.csv"
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|print
parameter_list|(
name|ExportHelper
name|helper
parameter_list|,
name|List
argument_list|<
name|RoomDetailInterface
argument_list|>
name|rooms
parameter_list|,
name|ExportContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|checkRights
argument_list|(
name|helper
argument_list|)
condition|)
name|helper
operator|.
name|getSessionContext
argument_list|()
operator|.
name|hasPermission
argument_list|(
name|Right
operator|.
name|RoomsExportCsv
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Integer
argument_list|>
name|columns
init|=
operator|new
name|ArrayList
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getNbrColumns
argument_list|(
name|context
argument_list|)
condition|;
name|i
operator|++
control|)
if|if
condition|(
name|isColumnVisible
argument_list|(
name|i
argument_list|,
name|context
argument_list|)
condition|)
name|columns
operator|.
name|add
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|Printer
name|printer
init|=
operator|new
name|CSVPrinter
argument_list|(
name|helper
operator|.
name|getWriter
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|helper
operator|.
name|setup
argument_list|(
name|printer
operator|.
name|getContentType
argument_list|()
argument_list|,
name|reference
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|String
index|[]
name|header
init|=
operator|new
name|String
index|[
name|columns
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|columns
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
name|header
index|[
name|i
index|]
operator|=
name|getColumnName
argument_list|(
name|columns
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|printer
operator|.
name|printHeader
argument_list|(
name|header
argument_list|)
expr_stmt|;
name|printer
operator|.
name|flush
argument_list|()
expr_stmt|;
for|for
control|(
name|RoomDetailInterface
name|room
range|:
name|rooms
control|)
block|{
name|String
index|[]
name|row
init|=
operator|new
name|String
index|[
name|columns
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|columns
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
name|row
index|[
name|i
index|]
operator|=
name|getCell
argument_list|(
name|room
argument_list|,
name|columns
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|printer
operator|.
name|printLine
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|printer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
name|printer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|int
name|getNbrColumns
parameter_list|(
name|ExportContext
name|context
parameter_list|)
block|{
return|return
literal|22
operator|+
name|context
operator|.
name|getRoomFeatureTypes
argument_list|()
operator|.
name|size
argument_list|()
return|;
block|}
specifier|protected
name|String
name|getColumnName
parameter_list|(
name|int
name|column
parameter_list|,
name|ExportContext
name|context
parameter_list|)
block|{
switch|switch
condition|(
name|column
condition|)
block|{
case|case
literal|0
case|:
return|return
name|MESSAGES
operator|.
name|colName
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|1
case|:
return|return
name|MESSAGES
operator|.
name|colType
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|2
case|:
return|return
name|MESSAGES
operator|.
name|colCapacity
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|3
case|:
return|return
name|MESSAGES
operator|.
name|colExaminationCapacity
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|4
case|:
return|return
name|MESSAGES
operator|.
name|colArea
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
operator|.
name|replace
argument_list|(
literal|"&sup2;"
argument_list|,
literal|"2"
argument_list|)
return|;
case|case
literal|5
case|:
return|return
name|MESSAGES
operator|.
name|colCoordinateX
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|6
case|:
return|return
name|MESSAGES
operator|.
name|colCoordinateY
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|7
case|:
return|return
name|MESSAGES
operator|.
name|colDistances
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|8
case|:
return|return
name|MESSAGES
operator|.
name|colRoomCheck
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|9
case|:
return|return
name|MESSAGES
operator|.
name|colPreference
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|10
case|:
return|return
name|MESSAGES
operator|.
name|colAvailability
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|11
case|:
return|return
name|MESSAGES
operator|.
name|colDepartments
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|12
case|:
return|return
name|MESSAGES
operator|.
name|colControl
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|13
case|:
return|return
name|MESSAGES
operator|.
name|colExamTypes
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|14
case|:
return|return
name|MESSAGES
operator|.
name|colPeriodPreferences
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|15
case|:
return|return
name|MESSAGES
operator|.
name|colEventDepartment
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|16
case|:
return|return
name|MESSAGES
operator|.
name|colEventStatus
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|17
case|:
return|return
name|MESSAGES
operator|.
name|colEventAvailability
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|18
case|:
return|return
name|MESSAGES
operator|.
name|colEventMessage
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|19
case|:
return|return
name|MESSAGES
operator|.
name|colBreakTime
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|20
case|:
return|return
name|MESSAGES
operator|.
name|colGroups
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
case|case
literal|21
case|:
return|return
name|MESSAGES
operator|.
name|colFeatures
argument_list|()
operator|.
name|replace
argument_list|(
literal|"<br>"
argument_list|,
literal|"\n"
argument_list|)
return|;
default|default:
return|return
name|context
operator|.
name|getRoomFeatureTypes
argument_list|()
operator|.
name|get
argument_list|(
name|column
operator|-
literal|22
argument_list|)
operator|.
name|getAbbreviation
argument_list|()
return|;
block|}
block|}
specifier|protected
name|boolean
name|isColumnVisible
parameter_list|(
name|int
name|column
parameter_list|,
name|ExportContext
name|context
parameter_list|)
block|{
name|int
name|flags
init|=
name|context
operator|.
name|getRoomCookieFlags
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|column
condition|)
block|{
case|case
literal|1
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_TYPE
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|2
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_CAPACITY
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|3
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_EXAM_CAPACITY
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|4
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_AREA
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|5
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_COORDINATES
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|6
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_COORDINATES
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|7
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_IGNORE_DISTANCES
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|8
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_IGNORE_ROOM_CHECK
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|9
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_PREFERENCE
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|10
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_AVAILABILITY
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|11
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_DEPARTMENTS
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|12
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_CONTROLLING_DEPARTMENT
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|13
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_EXAM_TYPES
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|14
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_PERIOD_PREFERENCES
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|15
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_EVENT_DEPARTMENT
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|16
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_EVENT_STATUS
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|17
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_EVENT_AVAILABILITY
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|18
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_EVENT_MESSAGE
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|19
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_BREAK_TIME
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|20
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_GROUPS
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
case|case
literal|21
case|:
return|return
name|RoomFlag
operator|.
name|SHOW_FEATURES
operator|.
name|in
argument_list|(
name|flags
argument_list|)
return|;
default|default:
if|if
condition|(
name|column
operator|>
literal|21
condition|)
block|{
name|int
name|flag
init|=
operator|(
literal|1
operator|<<
operator|(
name|column
operator|-
literal|22
operator|+
name|RoomFlag
operator|.
name|values
argument_list|()
operator|.
name|length
operator|)
operator|)
decl_stmt|;
return|return
operator|(
name|flags
operator|&
name|flag
operator|)
operator|==
literal|0
return|;
block|}
else|else
block|{
return|return
literal|true
return|;
block|}
block|}
block|}
specifier|protected
name|String
name|getCell
parameter_list|(
name|RoomDetailInterface
name|room
parameter_list|,
name|int
name|column
parameter_list|,
name|ExportContext
name|context
parameter_list|)
block|{
switch|switch
condition|(
name|column
condition|)
block|{
case|case
literal|0
case|:
return|return
name|room
operator|.
name|hasDisplayName
argument_list|()
condition|?
name|MESSAGES
operator|.
name|label
argument_list|(
name|room
operator|.
name|getLabel
argument_list|()
argument_list|,
name|room
operator|.
name|getDisplayName
argument_list|()
argument_list|)
else|:
name|room
operator|.
name|getLabel
argument_list|()
return|;
case|case
literal|1
case|:
return|return
name|room
operator|.
name|getRoomType
argument_list|()
operator|.
name|getLabel
argument_list|()
return|;
case|case
literal|2
case|:
return|return
name|room
operator|.
name|getCapacity
argument_list|()
operator|==
literal|null
condition|?
literal|"0"
else|:
name|room
operator|.
name|getCapacity
argument_list|()
operator|.
name|toString
argument_list|()
return|;
case|case
literal|3
case|:
return|return
name|room
operator|.
name|getExamCapacity
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|room
operator|.
name|getExamCapacity
argument_list|()
operator|.
name|toString
argument_list|()
return|;
case|case
literal|4
case|:
return|return
name|room
operator|.
name|getArea
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|room
operator|.
name|getArea
argument_list|()
operator|.
name|toString
argument_list|()
return|;
case|case
literal|5
case|:
return|return
name|room
operator|.
name|getX
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|room
operator|.
name|getX
argument_list|()
operator|.
name|toString
argument_list|()
return|;
case|case
literal|6
case|:
return|return
name|room
operator|.
name|getY
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|room
operator|.
name|getY
argument_list|()
operator|.
name|toString
argument_list|()
return|;
case|case
literal|7
case|:
return|return
name|room
operator|.
name|isIgnoreRoomCheck
argument_list|()
condition|?
name|MESSAGES
operator|.
name|exportFalse
argument_list|()
else|:
name|MESSAGES
operator|.
name|exportTrue
argument_list|()
return|;
case|case
literal|8
case|:
return|return
name|room
operator|.
name|isIgnoreTooFar
argument_list|()
condition|?
name|MESSAGES
operator|.
name|exportFalse
argument_list|()
else|:
name|MESSAGES
operator|.
name|exportTrue
argument_list|()
return|;
case|case
literal|9
case|:
return|return
name|context
operator|.
name|pref2string
argument_list|(
name|room
operator|.
name|getDepartments
argument_list|()
argument_list|)
return|;
case|case
literal|10
case|:
return|return
name|room
operator|.
name|getAvailability
argument_list|()
return|;
case|case
literal|11
case|:
return|return
name|context
operator|.
name|dept2string
argument_list|(
name|room
operator|.
name|getDepartments
argument_list|()
argument_list|)
return|;
case|case
literal|12
case|:
return|return
name|context
operator|.
name|dept2string
argument_list|(
name|room
operator|.
name|getControlDepartment
argument_list|()
argument_list|)
return|;
case|case
literal|13
case|:
return|return
name|context
operator|.
name|examTypes2string
argument_list|(
name|room
operator|.
name|getExamTypes
argument_list|()
argument_list|)
return|;
case|case
literal|14
case|:
return|return
name|room
operator|.
name|getPeriodPreference
argument_list|()
return|;
case|case
literal|15
case|:
return|return
name|context
operator|.
name|dept2string
argument_list|(
name|room
operator|.
name|getEventDepartment
argument_list|()
argument_list|)
return|;
case|case
literal|16
case|:
return|return
name|room
operator|.
name|getEventStatus
argument_list|()
operator|!=
literal|null
condition|?
name|CONSTANTS
operator|.
name|eventStatusAbbv
argument_list|()
index|[
name|room
operator|.
name|getEventStatus
argument_list|()
index|]
else|:
name|room
operator|.
name|getDefaultEventStatus
argument_list|()
operator|!=
literal|null
condition|?
name|CONSTANTS
operator|.
name|eventStatusAbbv
argument_list|()
index|[
name|room
operator|.
name|getDefaultEventStatus
argument_list|()
index|]
else|:
literal|""
return|;
case|case
literal|17
case|:
return|return
name|room
operator|.
name|getEventAvailability
argument_list|()
return|;
case|case
literal|18
case|:
return|return
name|room
operator|.
name|getEventNote
argument_list|()
operator|!=
literal|null
condition|?
name|room
operator|.
name|getEventNote
argument_list|()
else|:
name|room
operator|.
name|getDefaultEventNote
argument_list|()
return|;
case|case
literal|19
case|:
return|return
name|room
operator|.
name|getBreakTime
argument_list|()
operator|!=
literal|null
condition|?
name|room
operator|.
name|getBreakTime
argument_list|()
operator|.
name|toString
argument_list|()
else|:
name|room
operator|.
name|getDefaultBreakTime
argument_list|()
operator|!=
literal|null
condition|?
name|room
operator|.
name|getDefaultBreakTime
argument_list|()
operator|.
name|toString
argument_list|()
else|:
literal|""
return|;
case|case
literal|20
case|:
return|return
name|context
operator|.
name|groups2string
argument_list|(
name|room
operator|.
name|getGroups
argument_list|()
argument_list|)
return|;
case|case
literal|21
case|:
return|return
name|context
operator|.
name|features2string
argument_list|(
name|room
operator|.
name|getFeatures
argument_list|()
argument_list|,
literal|null
argument_list|)
return|;
default|default:
return|return
name|context
operator|.
name|features2string
argument_list|(
name|room
operator|.
name|getFeatures
argument_list|()
argument_list|,
name|context
operator|.
name|getRoomFeatureTypes
argument_list|()
operator|.
name|get
argument_list|(
name|column
operator|-
literal|22
argument_list|)
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

