begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 (University Timetabling Application)  * Copyright (C) 2012, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|events
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TimeZone
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|activation
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|MessagingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|fileupload
operator|.
name|FileItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|Email
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|ApplicationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|export
operator|.
name|events
operator|.
name|EventsExportEventsToICal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|server
operator|.
name|UploadServlet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|ContactInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|MeetingInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|MultiMeetingInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|SaveOrApproveEventRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|SaveOrApproveEventRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Meeting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|freemarker
operator|.
name|template
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|freemarker
operator|.
name|template
operator|.
name|Template
import|;
end_import

begin_import
import|import
name|freemarker
operator|.
name|template
operator|.
name|TemplateException
import|;
end_import

begin_class
specifier|public
class|class
name|EventEmail
block|{
specifier|protected
specifier|static
name|GwtMessages
name|MESSAGES
init|=
name|Localization
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
name|GwtConstants
name|CONSTANTS
init|=
name|Localization
operator|.
name|create
argument_list|(
name|GwtConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|sMessageId
init|=
operator|new
name|Hashtable
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|SaveOrApproveEventRpcRequest
name|iRequest
init|=
literal|null
decl_stmt|;
specifier|private
name|SaveOrApproveEventRpcResponse
name|iResponse
init|=
literal|null
decl_stmt|;
specifier|public
name|EventEmail
parameter_list|(
name|SaveOrApproveEventRpcRequest
name|request
parameter_list|,
name|SaveOrApproveEventRpcResponse
name|response
parameter_list|)
block|{
name|iRequest
operator|=
name|request
expr_stmt|;
name|iResponse
operator|=
name|response
expr_stmt|;
block|}
specifier|public
name|EventEmail
parameter_list|()
block|{
block|}
specifier|public
name|SaveOrApproveEventRpcRequest
name|request
parameter_list|()
block|{
return|return
name|iRequest
return|;
block|}
specifier|public
name|SaveOrApproveEventRpcResponse
name|response
parameter_list|()
block|{
return|return
name|iResponse
return|;
block|}
specifier|public
name|void
name|send
parameter_list|(
name|SessionContext
name|context
parameter_list|)
throws|throws
name|UnsupportedEncodingException
throws|,
name|MessagingException
block|{
try|try
block|{
if|if
condition|(
operator|!
name|request
argument_list|()
operator|.
name|isEmailConfirmation
argument_list|()
condition|)
return|return;
if|if
condition|(
operator|!
literal|"true"
operator|.
name|equals
argument_list|(
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"unitime.email.confirm.event"
argument_list|,
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.event.confirmationEmail"
argument_list|,
literal|"true"
argument_list|)
argument_list|)
argument_list|)
condition|)
block|{
name|response
argument_list|()
operator|.
name|info
argument_list|(
name|MESSAGES
operator|.
name|emailDisabled
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
name|Email
name|email
init|=
name|Email
operator|.
name|createEmail
argument_list|()
decl_stmt|;
if|if
condition|(
name|event
argument_list|()
operator|.
name|hasContact
argument_list|()
operator|&&
name|event
argument_list|()
operator|.
name|getContact
argument_list|()
operator|.
name|getEmail
argument_list|()
operator|!=
literal|null
condition|)
name|email
operator|.
name|addRecipient
argument_list|(
name|event
argument_list|()
operator|.
name|getContact
argument_list|()
operator|.
name|getEmail
argument_list|()
argument_list|,
name|event
argument_list|()
operator|.
name|getContact
argument_list|()
operator|.
name|getName
argument_list|(
name|MESSAGES
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
argument_list|()
operator|.
name|hasAdditionalContacts
argument_list|()
condition|)
block|{
for|for
control|(
name|ContactInterface
name|contact
range|:
name|event
argument_list|()
operator|.
name|getAdditionalContacts
argument_list|()
control|)
block|{
if|if
condition|(
name|contact
operator|.
name|getEmail
argument_list|()
operator|!=
literal|null
condition|)
name|email
operator|.
name|addRecipient
argument_list|(
name|contact
operator|.
name|getEmail
argument_list|()
argument_list|,
name|contact
operator|.
name|getName
argument_list|(
name|MESSAGES
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|event
argument_list|()
operator|.
name|hasSponsor
argument_list|()
operator|&&
name|event
argument_list|()
operator|.
name|getSponsor
argument_list|()
operator|.
name|hasEmail
argument_list|()
condition|)
name|email
operator|.
name|addRecipientCC
argument_list|(
name|event
argument_list|()
operator|.
name|getSponsor
argument_list|()
operator|.
name|getEmail
argument_list|()
argument_list|,
name|event
argument_list|()
operator|.
name|getSponsor
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
argument_list|()
operator|.
name|hasEmail
argument_list|()
condition|)
block|{
name|String
name|suffix
init|=
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"unitime.email.event.suffix"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|address
range|:
name|event
argument_list|()
operator|.
name|getEmail
argument_list|()
operator|.
name|split
argument_list|(
literal|"\n"
argument_list|)
control|)
block|{
if|if
condition|(
operator|!
name|address
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|suffix
operator|!=
literal|null
operator|&&
name|address
operator|.
name|indexOf
argument_list|(
literal|'@'
argument_list|)
operator|<
literal|0
condition|)
name|email
operator|.
name|addRecipientCC
argument_list|(
name|address
operator|.
name|trim
argument_list|()
operator|+
name|suffix
argument_list|,
literal|null
argument_list|)
expr_stmt|;
else|else
name|email
operator|.
name|addRecipientCC
argument_list|(
name|address
operator|.
name|trim
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|email
operator|.
name|setSubject
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" ("
operator|+
name|event
argument_list|()
operator|.
name|getType
argument_list|()
operator|.
name|getName
argument_list|(
name|CONSTANTS
argument_list|)
operator|+
literal|")"
argument_list|)
expr_stmt|;
if|if
condition|(
name|context
operator|.
name|isAuthenticated
argument_list|()
operator|&&
name|context
operator|.
name|getUser
argument_list|()
operator|.
name|getEmail
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|email
operator|.
name|setReplyTo
argument_list|(
name|context
operator|.
name|getUser
argument_list|()
operator|.
name|getEmail
argument_list|()
argument_list|,
name|context
operator|.
name|getUser
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|email
operator|.
name|setReplyTo
argument_list|(
name|event
argument_list|()
operator|.
name|getContact
argument_list|()
operator|.
name|getEmail
argument_list|()
argument_list|,
name|event
argument_list|()
operator|.
name|getContact
argument_list|()
operator|.
name|getName
argument_list|(
name|MESSAGES
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|final
name|FileItem
name|file
init|=
operator|(
name|FileItem
operator|)
name|context
operator|.
name|getAttribute
argument_list|(
name|UploadServlet
operator|.
name|SESSION_LAST_FILE
argument_list|)
decl_stmt|;
if|if
condition|(
name|file
operator|!=
literal|null
condition|)
block|{
name|email
operator|.
name|addAttachement
argument_list|(
operator|new
name|DataSource
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|OutputStream
name|getOutputStream
parameter_list|()
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"No output stream."
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|file
operator|.
name|getName
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|InputStream
name|getInputStream
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|file
operator|.
name|getInputStream
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getContentType
parameter_list|()
block|{
return|return
name|file
operator|.
name|getContentType
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|final
name|String
name|ical
init|=
name|icalendar
argument_list|()
decl_stmt|;
if|if
condition|(
name|ical
operator|!=
literal|null
condition|)
block|{
name|email
operator|.
name|addAttachement
argument_list|(
operator|new
name|DataSource
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|OutputStream
name|getOutputStream
parameter_list|()
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"No output stream."
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"event.ics"
return|;
block|}
annotation|@
name|Override
specifier|public
name|InputStream
name|getInputStream
parameter_list|()
throws|throws
name|IOException
block|{
return|return
operator|new
name|ByteArrayInputStream
argument_list|(
name|ical
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getContentType
parameter_list|()
block|{
return|return
literal|"text/calendar; charset=UTF-8"
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|email
operator|.
name|setHTML
argument_list|(
name|message
argument_list|()
argument_list|)
expr_stmt|;
name|Long
name|eventId
init|=
operator|(
name|response
argument_list|()
operator|.
name|hasEventWithId
argument_list|()
condition|?
name|response
argument_list|()
operator|.
name|getEvent
argument_list|()
operator|.
name|getId
argument_list|()
else|:
name|request
argument_list|()
operator|.
name|getEvent
argument_list|()
operator|.
name|getId
argument_list|()
operator|)
decl_stmt|;
if|if
condition|(
name|eventId
operator|!=
literal|null
condition|)
block|{
name|String
name|messageId
init|=
name|sMessageId
operator|.
name|get
argument_list|(
name|eventId
argument_list|)
decl_stmt|;
if|if
condition|(
name|messageId
operator|!=
literal|null
condition|)
name|email
operator|.
name|setInReplyTo
argument_list|(
name|messageId
argument_list|)
expr_stmt|;
block|}
name|email
operator|.
name|send
argument_list|()
expr_stmt|;
if|if
condition|(
name|eventId
operator|!=
literal|null
condition|)
block|{
name|String
name|messageId
init|=
name|email
operator|.
name|getMessageId
argument_list|()
decl_stmt|;
if|if
condition|(
name|messageId
operator|!=
literal|null
condition|)
name|sMessageId
operator|.
name|put
argument_list|(
name|eventId
argument_list|,
name|messageId
argument_list|)
expr_stmt|;
block|}
name|response
argument_list|()
operator|.
name|info
argument_list|(
name|MESSAGES
operator|.
name|infoConfirmationEmailSent
argument_list|(
name|event
argument_list|()
operator|.
name|hasContact
argument_list|()
condition|?
name|event
argument_list|()
operator|.
name|getContact
argument_list|()
operator|.
name|getName
argument_list|(
name|MESSAGES
argument_list|)
else|:
literal|"?"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|response
argument_list|()
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedToSendConfirmationEmail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|EventInterface
name|event
parameter_list|()
block|{
return|return
name|response
argument_list|()
operator|.
name|getEvent
argument_list|()
operator|!=
literal|null
condition|?
name|response
argument_list|()
operator|.
name|getEvent
argument_list|()
else|:
name|request
argument_list|()
operator|.
name|getEvent
argument_list|()
return|;
block|}
specifier|private
name|String
name|subject
parameter_list|()
block|{
switch|switch
condition|(
name|request
argument_list|()
operator|.
name|getOperation
argument_list|()
condition|)
block|{
case|case
name|CREATE
case|:
return|return
name|MESSAGES
operator|.
name|emailSubjectCreate
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
return|;
case|case
name|UPDATE
case|:
return|return
name|MESSAGES
operator|.
name|emailSubjectUpdate
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
return|;
case|case
name|DELETE
case|:
return|return
name|MESSAGES
operator|.
name|emailSubjectDelete
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
return|;
case|case
name|APPROVE
case|:
return|return
name|MESSAGES
operator|.
name|emailSubjectApprove
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
return|;
case|case
name|INQUIRE
case|:
return|return
name|MESSAGES
operator|.
name|emailSubjectInquire
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
return|;
case|case
name|REJECT
case|:
return|return
name|MESSAGES
operator|.
name|emailSubjectReject
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
return|;
case|case
name|CANCEL
case|:
return|return
name|MESSAGES
operator|.
name|emailSubjectCancel
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
return|;
default|default:
return|return
name|MESSAGES
operator|.
name|emailSubjectUpdate
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|private
name|String
name|message
parameter_list|()
throws|throws
name|IOException
throws|,
name|TemplateException
block|{
name|Configuration
name|cfg
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|cfg
operator|.
name|setClassForTemplateLoading
argument_list|(
name|EventEmail
operator|.
name|class
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|cfg
operator|.
name|setLocale
argument_list|(
name|Localization
operator|.
name|getJavaLocale
argument_list|()
argument_list|)
expr_stmt|;
name|cfg
operator|.
name|setOutputEncoding
argument_list|(
literal|"utf-8"
argument_list|)
expr_stmt|;
name|Template
name|template
init|=
name|cfg
operator|.
name|getTemplate
argument_list|(
literal|"confirmation.ftl"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|input
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"msg"
argument_list|,
name|MESSAGES
argument_list|)
expr_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"const"
argument_list|,
name|CONSTANTS
argument_list|)
expr_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"subject"
argument_list|,
name|subject
argument_list|()
argument_list|)
expr_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"event"
argument_list|,
name|event
argument_list|()
argument_list|)
expr_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"operation"
argument_list|,
name|request
argument_list|()
operator|.
name|getOperation
argument_list|()
operator|==
literal|null
condition|?
literal|"NONE"
else|:
name|request
argument_list|()
operator|.
name|getOperation
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|response
argument_list|()
operator|.
name|hasCreatedMeetings
argument_list|()
condition|)
name|input
operator|.
name|put
argument_list|(
literal|"created"
argument_list|,
name|EventInterface
operator|.
name|getMultiMeetings
argument_list|(
name|response
argument_list|()
operator|.
name|getCreatedMeetings
argument_list|()
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|response
argument_list|()
operator|.
name|hasDeletedMeetings
argument_list|()
condition|)
name|input
operator|.
name|put
argument_list|(
literal|"deleted"
argument_list|,
name|EventInterface
operator|.
name|getMultiMeetings
argument_list|(
name|response
argument_list|()
operator|.
name|getDeletedMeetings
argument_list|()
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|response
argument_list|()
operator|.
name|hasCancelledMeetings
argument_list|()
condition|)
name|input
operator|.
name|put
argument_list|(
literal|"cancelled"
argument_list|,
name|EventInterface
operator|.
name|getMultiMeetings
argument_list|(
name|response
argument_list|()
operator|.
name|getCancelledMeetings
argument_list|()
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|response
argument_list|()
operator|.
name|hasUpdatedMeetings
argument_list|()
condition|)
name|input
operator|.
name|put
argument_list|(
literal|"updated"
argument_list|,
name|EventInterface
operator|.
name|getMultiMeetings
argument_list|(
name|response
argument_list|()
operator|.
name|getUpdatedMeetings
argument_list|()
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
argument_list|()
operator|.
name|hasMessage
argument_list|()
condition|)
name|input
operator|.
name|put
argument_list|(
literal|"message"
argument_list|,
name|request
argument_list|()
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
argument_list|()
operator|.
name|getEvent
argument_list|()
operator|.
name|getId
argument_list|()
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|event
argument_list|()
operator|.
name|hasMeetings
argument_list|()
condition|)
name|input
operator|.
name|put
argument_list|(
literal|"meetings"
argument_list|,
name|EventInterface
operator|.
name|getMultiMeetings
argument_list|(
name|event
argument_list|()
operator|.
name|getMeetings
argument_list|()
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|input
operator|.
name|put
argument_list|(
literal|"meetings"
argument_list|,
operator|new
name|TreeSet
argument_list|<
name|MultiMeetingInterface
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|input
operator|.
name|put
argument_list|(
literal|"version"
argument_list|,
name|MESSAGES
operator|.
name|pageVersion
argument_list|(
name|Constants
operator|.
name|getVersion
argument_list|()
argument_list|,
name|Constants
operator|.
name|getReleaseDate
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"ts"
argument_list|,
operator|new
name|Date
argument_list|()
argument_list|)
expr_stmt|;
name|StringWriter
name|s
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|template
operator|.
name|process
argument_list|(
name|input
argument_list|,
operator|new
name|PrintWriter
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|.
name|flush
argument_list|()
expr_stmt|;
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|s
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|String
name|icalendar
parameter_list|()
throws|throws
name|IOException
block|{
name|StringWriter
name|buffer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|PrintWriter
name|out
init|=
operator|new
name|PrintWriter
argument_list|(
name|buffer
argument_list|)
decl_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"BEGIN:VCALENDAR"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"VERSION:2.0"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"CALSCALE:GREGORIAN"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"METHOD:PUBLISH"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"X-WR-CALNAME:"
operator|+
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"X-WR-TIMEZONE:"
operator|+
name|TimeZone
operator|.
name|getDefault
argument_list|()
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"PRODID:-//UniTime "
operator|+
name|Constants
operator|.
name|getVersion
argument_list|()
operator|+
literal|"/Events Calendar//NONSGML v1.0//EN"
argument_list|)
expr_stmt|;
name|boolean
name|exp
init|=
operator|new
name|EventsExportEventsToICal
argument_list|()
operator|.
name|print
argument_list|(
name|out
argument_list|,
name|response
argument_list|()
operator|.
name|hasEventWithId
argument_list|()
operator|&&
name|response
argument_list|()
operator|.
name|getEvent
argument_list|()
operator|.
name|hasMeetings
argument_list|()
condition|?
name|response
argument_list|()
operator|.
name|getEvent
argument_list|()
else|:
name|request
argument_list|()
operator|.
name|getEvent
argument_list|()
argument_list|,
name|response
argument_list|()
operator|.
name|hasEventWithId
argument_list|()
operator|&&
name|response
argument_list|()
operator|.
name|getEvent
argument_list|()
operator|.
name|hasMeetings
argument_list|()
condition|?
literal|null
else|:
name|EventsExportEventsToICal
operator|.
name|ICalendarStatus
operator|.
name|CANCELLED
argument_list|)
decl_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"END:VCALENDAR"
argument_list|)
expr_stmt|;
name|out
operator|.
name|flush
argument_list|()
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
operator|(
name|exp
condition|?
name|buffer
operator|.
name|getBuffer
argument_list|()
operator|.
name|toString
argument_list|()
else|:
literal|null
operator|)
return|;
block|}
specifier|public
specifier|static
name|void
name|eventExpired
parameter_list|(
name|Event
name|cancelledEvent
parameter_list|,
name|Set
argument_list|<
name|Meeting
argument_list|>
name|cancelledMeetings
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
operator|!
literal|"true"
operator|.
name|equals
argument_list|(
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"unitime.email.confirm.event"
argument_list|,
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.event.confirmationEmail"
argument_list|,
literal|"true"
argument_list|)
argument_list|)
argument_list|)
condition|)
return|return;
name|Session
name|session
init|=
name|cancelledEvent
operator|.
name|getSession
argument_list|()
decl_stmt|;
if|if
condition|(
name|session
operator|==
literal|null
condition|)
for|for
control|(
name|Meeting
name|m
range|:
name|cancelledEvent
operator|.
name|getMeetings
argument_list|()
control|)
if|if
condition|(
name|m
operator|.
name|getLocation
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|session
operator|=
name|m
operator|.
name|getLocation
argument_list|()
operator|.
name|getSession
argument_list|()
expr_stmt|;
break|break;
block|}
name|EventInterface
name|event
init|=
name|EventDetailBackend
operator|.
name|getEventDetail
argument_list|(
name|session
argument_list|,
name|cancelledEvent
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|TreeSet
argument_list|<
name|MeetingInterface
argument_list|>
name|meetings
init|=
operator|new
name|TreeSet
argument_list|<
name|EventInterface
operator|.
name|MeetingInterface
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Meeting
name|metting
range|:
name|cancelledMeetings
control|)
for|for
control|(
name|MeetingInterface
name|m
range|:
name|event
operator|.
name|getMeetings
argument_list|()
control|)
if|if
condition|(
name|m
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|metting
operator|.
name|getUniqueId
argument_list|()
argument_list|)
condition|)
name|meetings
operator|.
name|add
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|Email
name|email
init|=
name|Email
operator|.
name|createEmail
argument_list|()
decl_stmt|;
if|if
condition|(
name|event
operator|.
name|hasContact
argument_list|()
operator|&&
name|event
operator|.
name|getContact
argument_list|()
operator|.
name|getEmail
argument_list|()
operator|!=
literal|null
condition|)
name|email
operator|.
name|addRecipient
argument_list|(
name|event
operator|.
name|getContact
argument_list|()
operator|.
name|getEmail
argument_list|()
argument_list|,
name|event
operator|.
name|getContact
argument_list|()
operator|.
name|getName
argument_list|(
name|MESSAGES
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
operator|.
name|hasAdditionalContacts
argument_list|()
condition|)
block|{
for|for
control|(
name|ContactInterface
name|contact
range|:
name|event
operator|.
name|getAdditionalContacts
argument_list|()
control|)
block|{
if|if
condition|(
name|contact
operator|.
name|getEmail
argument_list|()
operator|!=
literal|null
condition|)
name|email
operator|.
name|addRecipient
argument_list|(
name|contact
operator|.
name|getEmail
argument_list|()
argument_list|,
name|contact
operator|.
name|getName
argument_list|(
name|MESSAGES
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|event
operator|.
name|hasSponsor
argument_list|()
operator|&&
name|event
operator|.
name|getSponsor
argument_list|()
operator|.
name|hasEmail
argument_list|()
condition|)
name|email
operator|.
name|addRecipientCC
argument_list|(
name|event
operator|.
name|getSponsor
argument_list|()
operator|.
name|getEmail
argument_list|()
argument_list|,
name|event
operator|.
name|getSponsor
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
operator|.
name|hasEmail
argument_list|()
condition|)
block|{
name|String
name|suffix
init|=
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"unitime.email.event.suffix"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|address
range|:
name|event
operator|.
name|getEmail
argument_list|()
operator|.
name|split
argument_list|(
literal|"\n"
argument_list|)
control|)
block|{
if|if
condition|(
operator|!
name|address
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|suffix
operator|!=
literal|null
operator|&&
name|address
operator|.
name|indexOf
argument_list|(
literal|'@'
argument_list|)
operator|<
literal|0
condition|)
name|email
operator|.
name|addRecipientCC
argument_list|(
name|address
operator|.
name|trim
argument_list|()
operator|+
name|suffix
argument_list|,
literal|null
argument_list|)
expr_stmt|;
else|else
name|email
operator|.
name|addRecipientCC
argument_list|(
name|address
operator|.
name|trim
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|email
operator|.
name|setSubject
argument_list|(
name|event
operator|.
name|getName
argument_list|()
operator|+
literal|" ("
operator|+
name|event
operator|.
name|getType
argument_list|()
operator|.
name|getName
argument_list|(
name|CONSTANTS
argument_list|)
operator|+
literal|")"
argument_list|)
expr_stmt|;
name|Configuration
name|cfg
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|cfg
operator|.
name|setClassForTemplateLoading
argument_list|(
name|EventEmail
operator|.
name|class
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|cfg
operator|.
name|setLocale
argument_list|(
name|Localization
operator|.
name|getJavaLocale
argument_list|()
argument_list|)
expr_stmt|;
name|cfg
operator|.
name|setOutputEncoding
argument_list|(
literal|"utf-8"
argument_list|)
expr_stmt|;
name|Template
name|template
init|=
name|cfg
operator|.
name|getTemplate
argument_list|(
literal|"confirmation.ftl"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|input
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"msg"
argument_list|,
name|MESSAGES
argument_list|)
expr_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"const"
argument_list|,
name|CONSTANTS
argument_list|)
expr_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"subject"
argument_list|,
name|MESSAGES
operator|.
name|emailSubjectExpired
argument_list|(
name|event
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"event"
argument_list|,
name|event
argument_list|)
expr_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"operation"
argument_list|,
name|SaveOrApproveEventRpcRequest
operator|.
name|Operation
operator|.
name|CANCEL
argument_list|)
expr_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"updated"
argument_list|,
name|EventInterface
operator|.
name|getMultiMeetings
argument_list|(
name|meetings
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"message"
argument_list|,
name|MESSAGES
operator|.
name|noteEventExpired
argument_list|()
argument_list|)
expr_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"meetings"
argument_list|,
name|EventInterface
operator|.
name|getMultiMeetings
argument_list|(
name|event
operator|.
name|getMeetings
argument_list|()
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"version"
argument_list|,
name|MESSAGES
operator|.
name|pageVersion
argument_list|(
name|Constants
operator|.
name|getVersion
argument_list|()
argument_list|,
name|Constants
operator|.
name|getReleaseDate
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|input
operator|.
name|put
argument_list|(
literal|"ts"
argument_list|,
operator|new
name|Date
argument_list|()
argument_list|)
expr_stmt|;
name|StringWriter
name|buffer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|template
operator|.
name|process
argument_list|(
name|input
argument_list|,
operator|new
name|PrintWriter
argument_list|(
name|buffer
argument_list|)
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|flush
argument_list|()
expr_stmt|;
name|buffer
operator|.
name|close
argument_list|()
expr_stmt|;
name|email
operator|.
name|setHTML
argument_list|(
name|buffer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|messageId
init|=
name|sMessageId
operator|.
name|get
argument_list|(
name|event
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|messageId
operator|!=
literal|null
condition|)
name|email
operator|.
name|setInReplyTo
argument_list|(
name|messageId
argument_list|)
expr_stmt|;
name|email
operator|.
name|send
argument_list|()
expr_stmt|;
if|if
condition|(
name|email
operator|.
name|getMessageId
argument_list|()
operator|!=
literal|null
condition|)
name|sMessageId
operator|.
name|put
argument_list|(
name|event
operator|.
name|getId
argument_list|()
argument_list|,
name|email
operator|.
name|getMessageId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

