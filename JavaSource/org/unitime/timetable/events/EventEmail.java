begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 (University Timetabling Application)  * Copyright (C) 2012, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|events
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|DateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TimeZone
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|activation
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|MessagingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|fileupload
operator|.
name|FileItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|Email
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|ApplicationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|export
operator|.
name|events
operator|.
name|EventsExportEventsToICal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|server
operator|.
name|UploadServlet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|ContactInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|MeetingInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|MultiMeetingInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|NoteInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|SaveOrApproveEventRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|SaveOrApproveEventRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimetableManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|TimetableManagerDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_class
specifier|public
class|class
name|EventEmail
block|{
specifier|protected
specifier|static
name|GwtMessages
name|MESSAGES
init|=
name|Localization
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
name|GwtConstants
name|CONSTANTS
init|=
name|Localization
operator|.
name|create
argument_list|(
name|GwtConstants
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|sMessageId
init|=
operator|new
name|Hashtable
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|SaveOrApproveEventRpcRequest
name|iRequest
decl_stmt|;
specifier|private
name|SaveOrApproveEventRpcResponse
name|iResponse
decl_stmt|;
specifier|public
name|EventEmail
parameter_list|(
name|SaveOrApproveEventRpcRequest
name|request
parameter_list|,
name|SaveOrApproveEventRpcResponse
name|response
parameter_list|)
block|{
name|iRequest
operator|=
name|request
expr_stmt|;
name|iResponse
operator|=
name|response
expr_stmt|;
block|}
specifier|public
name|SaveOrApproveEventRpcRequest
name|request
parameter_list|()
block|{
return|return
name|iRequest
return|;
block|}
specifier|public
name|SaveOrApproveEventRpcResponse
name|response
parameter_list|()
block|{
return|return
name|iResponse
return|;
block|}
specifier|public
name|void
name|send
parameter_list|(
name|SessionContext
name|context
parameter_list|)
throws|throws
name|UnsupportedEncodingException
throws|,
name|MessagingException
block|{
try|try
block|{
if|if
condition|(
operator|!
literal|"true"
operator|.
name|equals
argument_list|(
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"unitime.email.confirm.event"
argument_list|,
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.event.confirmationEmail"
argument_list|,
literal|"true"
argument_list|)
argument_list|)
argument_list|)
condition|)
block|{
name|response
argument_list|()
operator|.
name|info
argument_list|(
name|MESSAGES
operator|.
name|emailDisabled
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
name|Email
name|email
init|=
operator|new
name|Email
argument_list|()
decl_stmt|;
if|if
condition|(
name|event
argument_list|()
operator|.
name|hasContact
argument_list|()
operator|&&
name|event
argument_list|()
operator|.
name|getContact
argument_list|()
operator|.
name|getEmail
argument_list|()
operator|!=
literal|null
condition|)
name|email
operator|.
name|addRecipient
argument_list|(
name|event
argument_list|()
operator|.
name|getContact
argument_list|()
operator|.
name|getEmail
argument_list|()
argument_list|,
name|event
argument_list|()
operator|.
name|getContact
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
argument_list|()
operator|.
name|hasAdditionalContacts
argument_list|()
condition|)
block|{
for|for
control|(
name|ContactInterface
name|contact
range|:
name|event
argument_list|()
operator|.
name|getAdditionalContacts
argument_list|()
control|)
block|{
if|if
condition|(
name|contact
operator|.
name|getEmail
argument_list|()
operator|!=
literal|null
condition|)
name|email
operator|.
name|addRecipient
argument_list|(
name|contact
operator|.
name|getEmail
argument_list|()
argument_list|,
name|contact
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|event
argument_list|()
operator|.
name|hasSponsor
argument_list|()
operator|&&
name|event
argument_list|()
operator|.
name|getSponsor
argument_list|()
operator|.
name|hasEmail
argument_list|()
condition|)
name|email
operator|.
name|addRecipientCC
argument_list|(
name|event
argument_list|()
operator|.
name|getSponsor
argument_list|()
operator|.
name|getEmail
argument_list|()
argument_list|,
name|event
argument_list|()
operator|.
name|getSponsor
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
argument_list|()
operator|.
name|hasEmail
argument_list|()
condition|)
block|{
for|for
control|(
name|String
name|address
range|:
name|event
argument_list|()
operator|.
name|getEmail
argument_list|()
operator|.
name|split
argument_list|(
literal|"\n"
argument_list|)
control|)
block|{
if|if
condition|(
operator|!
name|address
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|email
operator|.
name|addRecipientCC
argument_list|(
name|address
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
name|email
operator|.
name|setSubject
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" ("
operator|+
name|event
argument_list|()
operator|.
name|getType
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|")"
argument_list|)
expr_stmt|;
if|if
condition|(
name|context
operator|.
name|isAuthenticated
argument_list|()
condition|)
block|{
name|TimetableManager
name|manager
init|=
operator|(
name|TimetableManager
operator|)
name|TimetableManagerDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|getSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"from TimetableManager where externalUniqueId = :id"
argument_list|)
operator|.
name|setString
argument_list|(
literal|"id"
argument_list|,
name|context
operator|.
name|getUser
argument_list|()
operator|.
name|getExternalUserId
argument_list|()
argument_list|)
operator|.
name|uniqueResult
argument_list|()
decl_stmt|;
if|if
condition|(
name|manager
operator|!=
literal|null
operator|&&
name|manager
operator|.
name|getEmailAddress
argument_list|()
operator|!=
literal|null
condition|)
name|email
operator|.
name|setReplyTo
argument_list|(
name|manager
operator|.
name|getEmailAddress
argument_list|()
argument_list|,
name|manager
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|final
name|FileItem
name|file
init|=
operator|(
name|FileItem
operator|)
name|context
operator|.
name|getAttribute
argument_list|(
name|UploadServlet
operator|.
name|SESSION_LAST_FILE
argument_list|)
decl_stmt|;
if|if
condition|(
name|file
operator|!=
literal|null
condition|)
block|{
name|email
operator|.
name|addAttachement
argument_list|(
operator|new
name|DataSource
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|OutputStream
name|getOutputStream
parameter_list|()
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"No output stream."
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|file
operator|.
name|getName
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|InputStream
name|getInputStream
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|file
operator|.
name|getInputStream
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getContentType
parameter_list|()
block|{
return|return
name|file
operator|.
name|getContentType
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|final
name|String
name|ical
init|=
name|icalendar
argument_list|()
decl_stmt|;
if|if
condition|(
name|ical
operator|!=
literal|null
condition|)
block|{
name|email
operator|.
name|addAttachement
argument_list|(
operator|new
name|DataSource
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|OutputStream
name|getOutputStream
parameter_list|()
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"No output stream."
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"event.ics"
return|;
block|}
annotation|@
name|Override
specifier|public
name|InputStream
name|getInputStream
parameter_list|()
throws|throws
name|IOException
block|{
return|return
operator|new
name|ByteArrayInputStream
argument_list|(
name|ical
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getContentType
parameter_list|()
block|{
return|return
literal|"text/calendar; charset=UTF-8"
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|email
operator|.
name|setHTML
argument_list|(
name|message
argument_list|()
argument_list|)
expr_stmt|;
name|Long
name|eventId
init|=
operator|(
name|response
argument_list|()
operator|.
name|hasEventWithId
argument_list|()
condition|?
name|response
argument_list|()
operator|.
name|getEvent
argument_list|()
operator|.
name|getId
argument_list|()
else|:
name|request
argument_list|()
operator|.
name|getEvent
argument_list|()
operator|.
name|getId
argument_list|()
operator|)
decl_stmt|;
if|if
condition|(
name|eventId
operator|!=
literal|null
condition|)
block|{
name|String
name|messageId
init|=
name|sMessageId
operator|.
name|get
argument_list|(
name|eventId
argument_list|)
decl_stmt|;
if|if
condition|(
name|messageId
operator|!=
literal|null
condition|)
name|email
operator|.
name|setInReplyTo
argument_list|(
name|messageId
argument_list|)
expr_stmt|;
block|}
name|email
operator|.
name|send
argument_list|()
expr_stmt|;
if|if
condition|(
name|eventId
operator|!=
literal|null
condition|)
block|{
name|String
name|messageId
init|=
name|email
operator|.
name|getMessageId
argument_list|()
decl_stmt|;
if|if
condition|(
name|messageId
operator|!=
literal|null
condition|)
name|sMessageId
operator|.
name|put
argument_list|(
name|eventId
argument_list|,
name|messageId
argument_list|)
expr_stmt|;
block|}
name|response
argument_list|()
operator|.
name|info
argument_list|(
name|MESSAGES
operator|.
name|infoConfirmationEmailSent
argument_list|(
name|event
argument_list|()
operator|.
name|hasContact
argument_list|()
condition|?
name|event
argument_list|()
operator|.
name|getContact
argument_list|()
operator|.
name|getName
argument_list|()
else|:
literal|"?"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|response
argument_list|()
operator|.
name|error
argument_list|(
name|MESSAGES
operator|.
name|failedToSendConfirmationEmail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|EventInterface
name|event
parameter_list|()
block|{
return|return
name|response
argument_list|()
operator|.
name|getEvent
argument_list|()
operator|!=
literal|null
condition|?
name|response
argument_list|()
operator|.
name|getEvent
argument_list|()
else|:
name|request
argument_list|()
operator|.
name|getEvent
argument_list|()
return|;
block|}
specifier|private
name|String
name|subject
parameter_list|()
block|{
switch|switch
condition|(
name|request
argument_list|()
operator|.
name|getOperation
argument_list|()
condition|)
block|{
case|case
name|CREATE
case|:
return|return
name|MESSAGES
operator|.
name|emailSubjectCreate
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
return|;
case|case
name|UPDATE
case|:
return|return
name|MESSAGES
operator|.
name|emailSubjectUpdate
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
return|;
case|case
name|DELETE
case|:
return|return
name|MESSAGES
operator|.
name|emailSubjectDelete
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
return|;
case|case
name|APPROVE
case|:
return|return
name|MESSAGES
operator|.
name|emailSubjectApprove
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
return|;
case|case
name|INQUIRE
case|:
return|return
name|MESSAGES
operator|.
name|emailSubjectInquire
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
return|;
case|case
name|REJECT
case|:
return|return
name|MESSAGES
operator|.
name|emailSubjectReject
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
return|;
default|default:
return|return
name|MESSAGES
operator|.
name|emailSubjectUpdate
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|private
name|String
name|message
parameter_list|()
block|{
name|StringWriter
name|buffer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|PrintWriter
name|out
init|=
operator|new
name|PrintWriter
argument_list|(
name|buffer
argument_list|)
decl_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<html>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<head>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<meta http-equiv='Content-Type' content='text/html; charset=UTF-8'>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<title>"
operator|+
name|subject
argument_list|()
operator|+
literal|"</title>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</head>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<body style=\"font-family: sans-serif, verdana, arial;\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<table style=\"border: 1px solid #9CB0CE; padding: 5px; margin-top: 10px; width: 800px;\" align=\"center\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td><table width=\"100%\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<tr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td rowspan=\"2\"><img src=\"http://www.unitime.org/include/unitime.png\" border=\"0\" height=\"100px\"/></td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td colspan=\"2\" style=\"font-size: x-large; font-weight: bold; color: #333333; text-align: right; padding: 20px 30px 10px 10px;\">"
operator|+
name|subject
argument_list|()
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</tr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</table></td></tr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td style=\"width: 100%; border-bottom: 1px solid #9CB0CE; padding-top: 5px; font-size: large; font-weight: bold; color: black; text-align: left;\">"
operator|+
name|event
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"</td></tr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td>"
argument_list|)
expr_stmt|;
name|generateEventDetails
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</td></tr>"
argument_list|)
expr_stmt|;
if|if
condition|(
name|response
argument_list|()
operator|.
name|hasCreatedMeetings
argument_list|()
condition|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td style=\"width: 100%; border-bottom: 1px solid #9CB0CE; padding-top: 10px; font-size: large; font-weight: bold; color: black; text-align: left;\">"
operator|+
name|MESSAGES
operator|.
name|emailCreatedMeetings
argument_list|()
operator|+
literal|"</td></tr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td>"
argument_list|)
expr_stmt|;
name|generateMeetings
argument_list|(
name|out
argument_list|,
name|response
argument_list|()
operator|.
name|getCreatedMeetings
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</td></tr>"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|response
argument_list|()
operator|.
name|hasDeletedMeetings
argument_list|()
condition|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td style=\"width: 100%; border-bottom: 1px solid #9CB0CE; padding-top: 10px; font-size: large; font-weight: bold; color: black; text-align: left;\">"
operator|+
name|MESSAGES
operator|.
name|emailDeletedMeetings
argument_list|()
operator|+
literal|"</td></tr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td>"
argument_list|)
expr_stmt|;
name|generateMeetings
argument_list|(
name|out
argument_list|,
name|response
argument_list|()
operator|.
name|getDeletedMeetings
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</td></tr>"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|response
argument_list|()
operator|.
name|hasUpdatedMeetings
argument_list|()
condition|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td style=\"width: 100%; border-bottom: 1px solid #9CB0CE; padding-top: 10px; font-size: large; font-weight: bold; color: black; text-align: left;\">"
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|request
argument_list|()
operator|.
name|getOperation
argument_list|()
condition|)
block|{
case|case
name|APPROVE
case|:
name|out
operator|.
name|println
argument_list|(
name|MESSAGES
operator|.
name|emailApprovedMeetings
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|REJECT
case|:
name|out
operator|.
name|println
argument_list|(
name|MESSAGES
operator|.
name|emailRejectedMeetings
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|INQUIRE
case|:
name|out
operator|.
name|println
argument_list|(
name|MESSAGES
operator|.
name|emailInquiredMeetings
argument_list|()
argument_list|)
expr_stmt|;
break|break;
default|default:
name|out
operator|.
name|println
argument_list|(
name|MESSAGES
operator|.
name|emailUpdatedMeetings
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
name|out
operator|.
name|println
argument_list|(
literal|"</td></tr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td>"
argument_list|)
expr_stmt|;
name|generateMeetings
argument_list|(
name|out
argument_list|,
name|response
argument_list|()
operator|.
name|getUpdatedMeetings
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</td></tr>"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|request
argument_list|()
operator|.
name|hasMessage
argument_list|()
condition|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td style=\"width: 100%; border-bottom: 1px solid #9CB0CE; padding-top: 10px; font-size: large; font-weight: bold; color: black; text-align: left;\">"
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|request
argument_list|()
operator|.
name|getOperation
argument_list|()
condition|)
block|{
case|case
name|APPROVE
case|:
name|out
operator|.
name|println
argument_list|(
name|MESSAGES
operator|.
name|emailMessageApproval
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|REJECT
case|:
name|out
operator|.
name|println
argument_list|(
name|MESSAGES
operator|.
name|emailMessageReject
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|INQUIRE
case|:
name|out
operator|.
name|println
argument_list|(
name|MESSAGES
operator|.
name|emailMessageInquiry
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|CREATE
case|:
name|out
operator|.
name|println
argument_list|(
name|MESSAGES
operator|.
name|emailMessageCreate
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|UPDATE
case|:
name|out
operator|.
name|println
argument_list|(
name|MESSAGES
operator|.
name|emailMessageUpdate
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|DELETE
case|:
name|out
operator|.
name|println
argument_list|(
name|MESSAGES
operator|.
name|emailMessageDelete
argument_list|()
argument_list|)
expr_stmt|;
break|break;
default|default:
name|out
operator|.
name|println
argument_list|(
name|MESSAGES
operator|.
name|emailMessageUpdate
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
name|out
operator|.
name|println
argument_list|(
literal|"</td></tr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|request
argument_list|()
operator|.
name|getMessage
argument_list|()
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|"<br>"
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</td></tr>"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|request
argument_list|()
operator|.
name|getEvent
argument_list|()
operator|.
name|getId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td style=\"width: 100%; border-bottom: 1px solid #9CB0CE; padding-top: 10px; font-size: large; font-weight: bold; color: black; text-align: left;\">"
operator|+
name|MESSAGES
operator|.
name|emailAllMeetings
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
operator|+
literal|"</td></tr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td>"
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
argument_list|()
operator|.
name|hasMeetings
argument_list|()
condition|)
block|{
name|generateMeetings
argument_list|(
name|out
argument_list|,
name|event
argument_list|()
operator|.
name|getMeetings
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|out
operator|.
name|println
argument_list|(
name|MESSAGES
operator|.
name|emailEventDeleted
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|println
argument_list|(
literal|"</td></tr>"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|event
argument_list|()
operator|.
name|hasNotes
argument_list|()
condition|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td style=\"width: 100%; border-bottom: 1px solid #9CB0CE; padding-top: 10px; font-size: large; font-weight: bold; color: black; text-align: left;\">"
operator|+
name|MESSAGES
operator|.
name|emailNotes
argument_list|(
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
operator|+
literal|"</td></tr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td>"
argument_list|)
expr_stmt|;
name|generateNotes
argument_list|(
name|out
argument_list|,
name|event
argument_list|()
operator|.
name|getNotes
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</td></tr>"
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|println
argument_list|(
literal|"</td></tr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</table>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<table style=\"width: 800px; margin-top: -3px;\" align=\"center\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<tr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td width=\"33%\" align=\"left\" style=\"font-size: 9pt; vertical-align: top; font-style: italic; color: #9CB0CE; white-space: nowrap;\">"
operator|+
name|MESSAGES
operator|.
name|pageVersion
argument_list|(
name|Constants
operator|.
name|getVersion
argument_list|()
argument_list|,
name|Constants
operator|.
name|getReleaseDate
argument_list|()
argument_list|)
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td width=\"34%\" align=\"center\" style=\"font-size: 9pt; vertical-align: top; font-style: italic; color: #9CB0CE; white-space: nowrap;\">"
operator|+
name|MESSAGES
operator|.
name|pageCopyright
argument_list|()
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td width=\"33%\" align=\"right\" style=\"font-size: 9pt; vertical-align: top; font-style: italic; color: #9CB0CE; white-space: nowrap;\">"
operator|+
operator|new
name|SimpleDateFormat
argument_list|(
name|CONSTANTS
operator|.
name|timeStampFormat
argument_list|()
argument_list|,
name|Localization
operator|.
name|getJavaLocale
argument_list|()
argument_list|)
operator|.
name|format
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</tr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</table>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</body>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</html>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|flush
argument_list|()
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|buffer
operator|.
name|getBuffer
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|private
name|void
name|generateEventDetails
parameter_list|(
name|PrintWriter
name|out
parameter_list|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"<table>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td>"
operator|+
name|MESSAGES
operator|.
name|propEventType
argument_list|()
operator|+
literal|"</td><td>"
operator|+
name|event
argument_list|()
operator|.
name|getType
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"</td></tr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td>"
operator|+
name|MESSAGES
operator|.
name|propContacts
argument_list|()
operator|+
literal|"</td><td>"
argument_list|)
expr_stmt|;
name|generateContacts
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</td></tr>"
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
argument_list|()
operator|.
name|hasEmail
argument_list|()
condition|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td>"
operator|+
name|MESSAGES
operator|.
name|propAdditionalEmails
argument_list|()
operator|+
literal|"</td><td>"
operator|+
name|event
argument_list|()
operator|.
name|getEmail
argument_list|()
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|"<br>"
argument_list|)
operator|+
literal|"</td></tr>"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|event
argument_list|()
operator|.
name|hasSponsor
argument_list|()
condition|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td>"
operator|+
name|MESSAGES
operator|.
name|propSponsor
argument_list|()
operator|+
literal|"</td><td>"
operator|+
name|event
argument_list|()
operator|.
name|getSponsor
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"</td></tr>"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|event
argument_list|()
operator|.
name|hasEnrollment
argument_list|()
condition|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td>"
operator|+
name|MESSAGES
operator|.
name|propEnrollment
argument_list|()
operator|+
literal|"</td><td>"
operator|+
name|event
argument_list|()
operator|.
name|getEnrollment
argument_list|()
operator|+
literal|"</td></tr>"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|event
argument_list|()
operator|.
name|hasMaxCapacity
argument_list|()
condition|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td>"
operator|+
name|MESSAGES
operator|.
name|propAttendance
argument_list|()
operator|+
literal|"</td><td>"
operator|+
name|event
argument_list|()
operator|.
name|getMaxCapacity
argument_list|()
operator|+
literal|"</td></tr>"
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|println
argument_list|(
literal|"</table>"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|generateContacts
parameter_list|(
name|PrintWriter
name|out
parameter_list|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"<table width=\"100%\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<tr>"
argument_list|)
expr_stmt|;
name|String
name|style
init|=
literal|"white-space: nowrap; font-weight: bold;"
decl_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td style=\""
operator|+
name|style
operator|+
literal|"\">"
operator|+
name|MESSAGES
operator|.
name|colName
argument_list|()
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td style=\""
operator|+
name|style
operator|+
literal|"\">"
operator|+
name|MESSAGES
operator|.
name|colEmail
argument_list|()
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td style=\""
operator|+
name|style
operator|+
literal|"\">"
operator|+
name|MESSAGES
operator|.
name|colPhone
argument_list|()
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</tr>"
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
argument_list|()
operator|.
name|hasContact
argument_list|()
condition|)
block|{
name|ContactInterface
name|contact
init|=
name|event
argument_list|()
operator|.
name|getContact
argument_list|()
decl_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td>"
operator|+
name|contact
operator|.
name|getName
argument_list|()
operator|+
literal|"</td><td>"
operator|+
operator|(
name|contact
operator|.
name|hasEmail
argument_list|()
condition|?
name|contact
operator|.
name|getEmail
argument_list|()
else|:
literal|""
operator|)
operator|+
literal|"</td><td>"
operator|+
operator|(
name|contact
operator|.
name|hasPhone
argument_list|()
condition|?
name|contact
operator|.
name|getPhone
argument_list|()
else|:
literal|""
operator|)
operator|+
literal|"</td></tr>"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|event
argument_list|()
operator|.
name|hasAdditionalContacts
argument_list|()
condition|)
block|{
for|for
control|(
name|ContactInterface
name|contact
range|:
name|event
argument_list|()
operator|.
name|getAdditionalContacts
argument_list|()
control|)
name|out
operator|.
name|println
argument_list|(
literal|"<tr><td>"
operator|+
name|contact
operator|.
name|getName
argument_list|()
operator|+
literal|"</td><td>"
operator|+
operator|(
name|contact
operator|.
name|hasEmail
argument_list|()
condition|?
name|contact
operator|.
name|getEmail
argument_list|()
else|:
literal|""
operator|)
operator|+
literal|"</td><td>"
operator|+
operator|(
name|contact
operator|.
name|hasPhone
argument_list|()
condition|?
name|contact
operator|.
name|getPhone
argument_list|()
else|:
literal|""
operator|)
operator|+
literal|"</td></tr>"
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|println
argument_list|(
literal|"</table>"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|generateMeetings
parameter_list|(
name|PrintWriter
name|out
parameter_list|,
name|Collection
argument_list|<
name|MeetingInterface
argument_list|>
name|meetings
parameter_list|,
name|boolean
name|approval
parameter_list|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"<table width=\"100%\">"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<tr>"
argument_list|)
expr_stmt|;
name|String
name|style
init|=
literal|"white-space: nowrap; font-weight: bold;"
decl_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td style=\""
operator|+
name|style
operator|+
literal|"\">"
operator|+
name|MESSAGES
operator|.
name|colDate
argument_list|()
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td style=\""
operator|+
name|style
operator|+
literal|"\">"
operator|+
name|MESSAGES
operator|.
name|colPublishedTime
argument_list|()
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td style=\""
operator|+
name|style
operator|+
literal|"\">"
operator|+
name|MESSAGES
operator|.
name|colAllocatedTime
argument_list|()
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td style=\""
operator|+
name|style
operator|+
literal|"\">"
operator|+
name|MESSAGES
operator|.
name|colLocation
argument_list|()
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
if|if
condition|(
name|approval
condition|)
name|out
operator|.
name|println
argument_list|(
literal|"<td style=\""
operator|+
name|style
operator|+
literal|"\">"
operator|+
name|MESSAGES
operator|.
name|colApproval
argument_list|()
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</tr>"
argument_list|)
expr_stmt|;
name|DateFormat
name|dfShort
init|=
operator|new
name|SimpleDateFormat
argument_list|(
name|CONSTANTS
operator|.
name|eventDateFormatShort
argument_list|()
argument_list|,
name|Localization
operator|.
name|getJavaLocale
argument_list|()
argument_list|)
decl_stmt|;
name|DateFormat
name|dfLong
init|=
operator|new
name|SimpleDateFormat
argument_list|(
name|CONSTANTS
operator|.
name|eventDateFormatLong
argument_list|()
argument_list|,
name|Localization
operator|.
name|getJavaLocale
argument_list|()
argument_list|)
decl_stmt|;
name|DateFormat
name|dfApproval
init|=
operator|new
name|SimpleDateFormat
argument_list|(
name|CONSTANTS
operator|.
name|eventDateFormat
argument_list|()
argument_list|,
name|Localization
operator|.
name|getJavaLocale
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|MultiMeetingInterface
name|meeting
range|:
name|EventInterface
operator|.
name|getMultiMeetings
argument_list|(
name|meetings
argument_list|,
name|approval
argument_list|,
name|approval
argument_list|)
control|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"<tr>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td>"
operator|+
name|meeting
operator|.
name|getDays
argument_list|(
name|CONSTANTS
argument_list|)
operator|+
literal|" "
operator|+
operator|(
name|meeting
operator|.
name|getNrMeetings
argument_list|()
operator|<=
literal|1
condition|?
name|dfLong
operator|.
name|format
argument_list|(
name|meeting
operator|.
name|getFirstMeetingDate
argument_list|()
argument_list|)
else|:
name|dfShort
operator|.
name|format
argument_list|(
name|meeting
operator|.
name|getFirstMeetingDate
argument_list|()
argument_list|)
operator|+
literal|" - "
operator|+
name|dfLong
operator|.
name|format
argument_list|(
name|meeting
operator|.
name|getLastMeetingDate
argument_list|()
argument_list|)
operator|)
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td>"
operator|+
name|meeting
operator|.
name|getMeetings
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|getMeetingTime
argument_list|(
name|CONSTANTS
argument_list|)
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td>"
operator|+
name|meeting
operator|.
name|getMeetings
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|getAllocatedTime
argument_list|(
name|CONSTANTS
argument_list|)
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td>"
operator|+
name|meeting
operator|.
name|getMeetings
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|getLocationName
argument_list|()
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
if|if
condition|(
name|approval
condition|)
name|out
operator|.
name|println
argument_list|(
literal|"<td>"
operator|+
operator|(
operator|!
name|meeting
operator|.
name|getMeetings
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|isApproved
argument_list|()
condition|?
literal|"<i>"
operator|+
operator|(
name|meeting
operator|.
name|getMeetings
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|isPast
argument_list|()
condition|?
name|MESSAGES
operator|.
name|approvalNotApprovedPast
argument_list|()
else|:
name|MESSAGES
operator|.
name|approvalWaiting
argument_list|()
operator|)
operator|+
literal|"</i>"
else|:
name|dfApproval
operator|.
name|format
argument_list|(
name|meeting
operator|.
name|getMeetings
argument_list|()
operator|.
name|first
argument_list|()
operator|.
name|getApprovalDate
argument_list|()
argument_list|)
operator|)
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</tr>"
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|println
argument_list|(
literal|"</table>"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|generateNotes
parameter_list|(
name|PrintWriter
name|out
parameter_list|,
name|Collection
argument_list|<
name|NoteInterface
argument_list|>
name|notes
parameter_list|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"<table width=\"100%\" cellspacing='0' cellpadding='3'>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<tr>"
argument_list|)
expr_stmt|;
name|String
name|style
init|=
literal|"white-space: nowrap; font-weight: bold;"
decl_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td style=\""
operator|+
name|style
operator|+
literal|"\">"
operator|+
name|MESSAGES
operator|.
name|colDate
argument_list|()
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td style=\""
operator|+
name|style
operator|+
literal|"\">"
operator|+
name|MESSAGES
operator|.
name|colUser
argument_list|()
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td style=\""
operator|+
name|style
operator|+
literal|"\">"
operator|+
name|MESSAGES
operator|.
name|colAction
argument_list|()
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td style=\""
operator|+
name|style
operator|+
literal|"\">"
operator|+
name|MESSAGES
operator|.
name|colMeetings
argument_list|()
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td style=\""
operator|+
name|style
operator|+
literal|"\">"
operator|+
name|MESSAGES
operator|.
name|colNote
argument_list|()
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</tr>"
argument_list|)
expr_stmt|;
name|DateFormat
name|df
init|=
operator|new
name|SimpleDateFormat
argument_list|(
name|CONSTANTS
operator|.
name|timeStampFormat
argument_list|()
argument_list|,
name|Localization
operator|.
name|getJavaLocale
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|NoteInterface
name|note
range|:
name|notes
control|)
block|{
name|style
operator|=
literal|""
expr_stmt|;
switch|switch
condition|(
name|note
operator|.
name|getType
argument_list|()
condition|)
block|{
case|case
name|Approve
case|:
name|style
operator|=
literal|"background-color: #D7FFD7;"
expr_stmt|;
break|break;
case|case
name|Reject
case|:
name|style
operator|=
literal|"background-color: #FFD7D7;"
expr_stmt|;
break|break;
block|}
name|out
operator|.
name|println
argument_list|(
literal|"<tr style='"
operator|+
name|style
operator|+
literal|"'>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td style='white-space: nowrap;'>"
operator|+
name|df
operator|.
name|format
argument_list|(
name|note
operator|.
name|getDate
argument_list|()
argument_list|)
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td style='white-space: nowrap;'>"
operator|+
name|note
operator|.
name|getUser
argument_list|()
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td style='white-space: nowrap;'>"
operator|+
name|note
operator|.
name|getType
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td style='white-space: nowrap;'>"
operator|+
operator|(
name|note
operator|.
name|getMeetings
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|.
name|getMeetings
argument_list|()
operator|)
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"<td>"
operator|+
operator|(
name|note
operator|.
name|getNote
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|note
operator|.
name|getNote
argument_list|()
operator|)
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|"<br>"
argument_list|)
operator|+
literal|"</td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"</tr>"
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|println
argument_list|(
literal|"</table>"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|icalendar
parameter_list|()
throws|throws
name|IOException
block|{
name|StringWriter
name|buffer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|PrintWriter
name|out
init|=
operator|new
name|PrintWriter
argument_list|(
name|buffer
argument_list|)
decl_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"BEGIN:VCALENDAR"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"VERSION:2.0"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"CALSCALE:GREGORIAN"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"METHOD:PUBLISH"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"X-WR-CALNAME:"
operator|+
name|event
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"X-WR-TIMEZONE:"
operator|+
name|TimeZone
operator|.
name|getDefault
argument_list|()
operator|.
name|getID
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"PRODID:-//UniTime "
operator|+
name|Constants
operator|.
name|getVersion
argument_list|()
operator|+
literal|"/Events Calendar//NONSGML v1.0//EN"
argument_list|)
expr_stmt|;
name|boolean
name|exp
init|=
operator|new
name|EventsExportEventsToICal
argument_list|()
operator|.
name|print
argument_list|(
name|out
argument_list|,
name|response
argument_list|()
operator|.
name|hasEventWithId
argument_list|()
operator|&&
name|response
argument_list|()
operator|.
name|getEvent
argument_list|()
operator|.
name|hasMeetings
argument_list|()
condition|?
name|response
argument_list|()
operator|.
name|getEvent
argument_list|()
else|:
name|request
argument_list|()
operator|.
name|getEvent
argument_list|()
argument_list|,
name|response
argument_list|()
operator|.
name|hasEventWithId
argument_list|()
operator|&&
name|response
argument_list|()
operator|.
name|getEvent
argument_list|()
operator|.
name|hasMeetings
argument_list|()
condition|?
literal|null
else|:
name|EventsExportEventsToICal
operator|.
name|ICalendarStatus
operator|.
name|CANCELLED
argument_list|)
decl_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"END:VCALENDAR"
argument_list|)
expr_stmt|;
name|out
operator|.
name|flush
argument_list|()
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
operator|(
name|exp
condition|?
name|buffer
operator|.
name|getBuffer
argument_list|()
operator|.
name|toString
argument_list|()
else|:
literal|null
operator|)
return|;
block|}
block|}
end_class

end_unit

