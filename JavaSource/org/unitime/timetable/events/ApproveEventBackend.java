begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 (University Timetabling Application)  * Copyright (C) 2012, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|events
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|fileupload
operator|.
name|FileItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|upload
operator|.
name|FormFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|Transaction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|resources
operator|.
name|GwtMessages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|server
operator|.
name|LookupServlet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|PersonInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|ApproveEventRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|ApproveEventRpcRequest
operator|.
name|Operation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|EventDetailRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|EventNote
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Meeting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimetableManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|EventDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|SessionDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|webutil
operator|.
name|EventEmail
import|;
end_import

begin_class
specifier|public
class|class
name|ApproveEventBackend
extends|extends
name|EventAction
argument_list|<
name|ApproveEventRpcRequest
argument_list|,
name|EventInterface
argument_list|>
block|{
specifier|protected
specifier|static
name|GwtMessages
name|MESSAGES
init|=
name|Localization
operator|.
name|create
argument_list|(
name|GwtMessages
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|EventInterface
name|execute
parameter_list|(
name|ApproveEventRpcRequest
name|request
parameter_list|,
name|GwtRpcHelper
name|helper
parameter_list|,
name|EventRights
name|rights
parameter_list|)
block|{
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
init|=
name|SessionDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|createNewSession
argument_list|()
decl_stmt|;
name|Transaction
name|tx
init|=
name|hibSession
operator|.
name|beginTransaction
argument_list|()
decl_stmt|;
try|try
block|{
name|Event
name|event
init|=
operator|(
name|request
operator|.
name|getEventId
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|EventDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|request
operator|.
name|getEventId
argument_list|()
argument_list|,
name|hibSession
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|event
operator|==
literal|null
condition|)
throw|throw
operator|new
name|GwtRpcException
argument_list|(
name|MESSAGES
operator|.
name|failedApproveEventNoEvent
argument_list|()
argument_list|)
throw|;
name|TimetableManager
name|manager
init|=
name|TimetableManager
operator|.
name|getManager
argument_list|(
name|helper
operator|.
name|getUser
argument_list|()
argument_list|)
decl_stmt|;
name|Date
name|now
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|String
name|uname
init|=
name|helper
operator|.
name|getUser
argument_list|()
operator|.
name|getName
argument_list|()
decl_stmt|;
if|if
condition|(
name|helper
operator|.
name|getUser
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|event
operator|.
name|getMainContact
argument_list|()
operator|.
name|getExternalUniqueId
argument_list|()
argument_list|)
condition|)
block|{
name|uname
operator|=
name|event
operator|.
name|getMainContact
argument_list|()
operator|.
name|getShortName
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|manager
operator|!=
literal|null
condition|)
block|{
name|uname
operator|=
name|manager
operator|.
name|getShortName
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|List
argument_list|<
name|PersonInterface
argument_list|>
name|people
init|=
operator|new
name|LookupServlet
argument_list|()
operator|.
name|lookupPeople
argument_list|(
name|helper
operator|.
name|getUser
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
literal|"mustHaveExternalId,session="
operator|+
name|request
operator|.
name|getSessionId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|people
operator|!=
literal|null
condition|)
for|for
control|(
name|PersonInterface
name|p
range|:
name|people
control|)
block|{
if|if
condition|(
name|helper
operator|.
name|getUser
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|p
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
block|{
name|uname
operator|=
name|p
operator|.
name|getShortName
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
name|TreeSet
argument_list|<
name|Meeting
argument_list|>
name|meetings
init|=
operator|new
name|TreeSet
argument_list|<
name|Meeting
argument_list|>
argument_list|()
decl_stmt|;
name|meetings
label|:
for|for
control|(
name|Iterator
argument_list|<
name|Meeting
argument_list|>
name|i
init|=
name|event
operator|.
name|getMeetings
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Meeting
name|meeting
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|hasMeetingIds
argument_list|()
operator|&&
name|request
operator|.
name|getMeetingIds
argument_list|()
operator|.
name|contains
argument_list|(
name|meeting
operator|.
name|getUniqueId
argument_list|()
argument_list|)
condition|)
block|{
name|meetings
operator|.
name|add
argument_list|(
name|meeting
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|request
operator|.
name|getOperation
argument_list|()
condition|)
block|{
case|case
name|REJECT
case|:
if|if
condition|(
operator|!
name|rights
operator|.
name|canApprove
argument_list|(
name|meeting
argument_list|)
condition|)
throw|throw
operator|new
name|GwtRpcException
argument_list|(
name|MESSAGES
operator|.
name|failedApproveEventNoRightsToReject
argument_list|(
name|toString
argument_list|(
name|meeting
argument_list|)
argument_list|)
argument_list|)
throw|;
name|hibSession
operator|.
name|delete
argument_list|(
name|meeting
argument_list|)
expr_stmt|;
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
continue|continue
name|meetings
continue|;
case|case
name|APPROVE
case|:
if|if
condition|(
operator|!
name|rights
operator|.
name|canApprove
argument_list|(
name|meeting
argument_list|)
condition|)
throw|throw
operator|new
name|GwtRpcException
argument_list|(
name|MESSAGES
operator|.
name|failedApproveEventNoRightsToApprove
argument_list|(
name|toString
argument_list|(
name|meeting
argument_list|)
argument_list|)
argument_list|)
throw|;
name|meeting
operator|.
name|setApprovedDate
argument_list|(
name|now
argument_list|)
expr_stmt|;
name|hibSession
operator|.
name|saveOrUpdate
argument_list|(
name|meeting
argument_list|)
expr_stmt|;
continue|continue
name|meetings
continue|;
block|}
block|}
block|}
specifier|final
name|FileItem
name|uploaded
init|=
name|helper
operator|.
name|getLastUploadedFile
argument_list|()
decl_stmt|;
name|EventNote
name|note
init|=
operator|new
name|EventNote
argument_list|()
decl_stmt|;
name|note
operator|.
name|setEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
name|note
operator|.
name|setNoteType
argument_list|(
name|request
operator|.
name|getOperation
argument_list|()
operator|==
name|Operation
operator|.
name|APPROVE
condition|?
name|EventNote
operator|.
name|sEventNoteTypeApproval
else|:
name|request
operator|.
name|getOperation
argument_list|()
operator|==
name|Operation
operator|.
name|REJECT
condition|?
name|EventNote
operator|.
name|sEventNoteTypeRejection
else|:
name|EventNote
operator|.
name|sEventNoteTypeInquire
argument_list|)
expr_stmt|;
name|note
operator|.
name|setTimeStamp
argument_list|(
name|now
argument_list|)
expr_stmt|;
name|note
operator|.
name|setUser
argument_list|(
name|uname
argument_list|)
expr_stmt|;
name|note
operator|.
name|setMeetingCollection
argument_list|(
name|meetings
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|hasMessage
argument_list|()
condition|)
name|note
operator|.
name|setTextNote
argument_list|(
name|request
operator|.
name|getMessage
argument_list|()
operator|+
operator|(
name|uploaded
operator|==
literal|null
condition|?
literal|""
else|:
literal|"\n\n"
operator|+
name|MESSAGES
operator|.
name|noteAttachement
argument_list|(
name|uploaded
operator|.
name|getName
argument_list|()
argument_list|)
operator|)
argument_list|)
expr_stmt|;
if|else if
condition|(
name|uploaded
operator|!=
literal|null
condition|)
name|note
operator|.
name|setTextNote
argument_list|(
name|MESSAGES
operator|.
name|noteAttachement
argument_list|(
name|uploaded
operator|.
name|getFieldName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|getNotes
argument_list|()
operator|.
name|add
argument_list|(
name|note
argument_list|)
expr_stmt|;
name|hibSession
operator|.
name|saveOrUpdate
argument_list|(
name|note
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
operator|.
name|getMeetings
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|hibSession
operator|.
name|delete
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|hibSession
operator|.
name|update
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
name|FormFile
name|attachement
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|uploaded
operator|!=
literal|null
condition|)
block|{
name|attachement
operator|=
operator|new
name|FormFile
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|setFileSize
parameter_list|(
name|int
name|fileSize
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|setFileName
parameter_list|(
name|String
name|fileName
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|setContentType
parameter_list|(
name|String
name|contentType
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|InputStream
name|getInputStream
parameter_list|()
throws|throws
name|FileNotFoundException
throws|,
name|IOException
block|{
return|return
name|uploaded
operator|.
name|getInputStream
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getFileSize
parameter_list|()
block|{
return|return
operator|(
name|int
operator|)
name|uploaded
operator|.
name|getSize
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getFileName
parameter_list|()
block|{
return|return
name|uploaded
operator|.
name|getName
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|byte
index|[]
name|getFileData
parameter_list|()
throws|throws
name|FileNotFoundException
throws|,
name|IOException
block|{
return|return
name|uploaded
operator|.
name|get
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getContentType
parameter_list|()
block|{
return|return
name|uploaded
operator|.
name|getContentType
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|destroy
parameter_list|()
block|{
block|}
block|}
expr_stmt|;
block|}
name|EventEmail
operator|.
name|Result
name|emailResult
init|=
operator|new
name|EventEmail
argument_list|(
name|event
argument_list|,
operator|(
name|request
operator|.
name|getOperation
argument_list|()
operator|==
name|Operation
operator|.
name|APPROVE
condition|?
name|EventEmail
operator|.
name|sActionApprove
else|:
name|request
operator|.
name|getOperation
argument_list|()
operator|==
name|Operation
operator|.
name|REJECT
condition|?
name|EventEmail
operator|.
name|sActionReject
else|:
name|EventEmail
operator|.
name|sActionInquire
operator|)
argument_list|,
name|Event
operator|.
name|getMultiMeetings
argument_list|(
name|meetings
argument_list|)
argument_list|,
name|request
operator|.
name|getMessage
argument_list|()
argument_list|,
name|attachement
argument_list|)
operator|.
name|send
argument_list|(
name|helper
operator|.
name|getRequestUrl
argument_list|()
argument_list|)
decl_stmt|;
name|tx
operator|.
name|commit
argument_list|()
expr_stmt|;
name|tx
operator|=
literal|null
expr_stmt|;
name|EventInterface
name|result
init|=
operator|new
name|EventInterface
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|event
operator|.
name|getMeetings
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|result
operator|=
operator|new
name|EventDetailBackend
argument_list|()
operator|.
name|execute
argument_list|(
name|EventDetailRpcRequest
operator|.
name|requestEventDetails
argument_list|(
name|request
operator|.
name|getSessionId
argument_list|()
argument_list|,
name|request
operator|.
name|getEventId
argument_list|()
argument_list|)
argument_list|,
name|helper
argument_list|,
name|rights
argument_list|)
expr_stmt|;
name|result
operator|.
name|setMessage
argument_list|(
operator|(
name|emailResult
operator|.
name|isWarning
argument_list|()
condition|?
literal|"WARN:"
else|:
literal|""
operator|)
operator|+
name|emailResult
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
if|if
condition|(
name|tx
operator|!=
literal|null
condition|)
name|tx
operator|.
name|rollback
argument_list|()
expr_stmt|;
if|if
condition|(
name|ex
operator|instanceof
name|GwtRpcException
condition|)
throw|throw
operator|(
name|GwtRpcException
operator|)
name|ex
throw|;
throw|throw
operator|new
name|GwtRpcException
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ex
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

