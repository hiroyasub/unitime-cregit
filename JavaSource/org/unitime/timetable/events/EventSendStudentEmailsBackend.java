begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|events
package|;
end_package

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|Email
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|UserProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponseNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplementation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplements
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|EventInterface
operator|.
name|SendStudentEmailsRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Student
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|StudentDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|rights
operator|.
name|Right
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|GwtRpcImplements
argument_list|(
name|SendStudentEmailsRpcRequest
operator|.
name|class
argument_list|)
specifier|public
class|class
name|EventSendStudentEmailsBackend
implements|implements
name|GwtRpcImplementation
argument_list|<
name|SendStudentEmailsRpcRequest
argument_list|,
name|GwtRpcResponseNull
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|GwtRpcResponseNull
name|execute
parameter_list|(
name|SendStudentEmailsRpcRequest
name|request
parameter_list|,
name|SessionContext
name|context
parameter_list|)
block|{
name|context
operator|.
name|checkPermission
argument_list|(
name|Right
operator|.
name|EventDetailEmailStudents
argument_list|)
expr_stmt|;
name|context
operator|.
name|checkPermission
argument_list|(
name|request
operator|.
name|getEventId
argument_list|()
argument_list|,
literal|"Event"
argument_list|,
name|Right
operator|.
name|EventDetail
argument_list|)
expr_stmt|;
name|String
name|nameFormat
init|=
name|UserProperty
operator|.
name|NameFormat
operator|.
name|get
argument_list|(
name|context
operator|.
name|getUser
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|Email
name|email
init|=
name|Email
operator|.
name|createEmail
argument_list|()
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|hasCC
argument_list|()
condition|)
name|email
operator|.
name|addRecipientCC
argument_list|(
name|request
operator|.
name|getCC
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|email
operator|.
name|setSubject
argument_list|(
name|request
operator|.
name|getSubject
argument_list|()
argument_list|)
expr_stmt|;
name|email
operator|.
name|setText
argument_list|(
name|request
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Long
name|studentId
range|:
name|request
operator|.
name|getStudentIds
argument_list|()
control|)
block|{
name|Student
name|student
init|=
name|StudentDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|studentId
argument_list|)
decl_stmt|;
if|if
condition|(
name|student
operator|!=
literal|null
operator|&&
name|student
operator|.
name|getEmail
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|student
operator|.
name|getEmail
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|email
operator|.
name|addRecipientBCC
argument_list|(
name|student
operator|.
name|getEmail
argument_list|()
argument_list|,
name|student
operator|.
name|getName
argument_list|(
name|nameFormat
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|context
operator|!=
literal|null
operator|&&
name|context
operator|.
name|isAuthenticated
argument_list|()
operator|&&
name|context
operator|.
name|getUser
argument_list|()
operator|.
name|getEmail
argument_list|()
operator|!=
literal|null
condition|)
name|email
operator|.
name|setReplyTo
argument_list|(
name|context
operator|.
name|getUser
argument_list|()
operator|.
name|getEmail
argument_list|()
argument_list|,
name|context
operator|.
name|getUser
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|else if
condition|(
name|request
operator|.
name|hasCC
argument_list|()
condition|)
name|email
operator|.
name|setReplyTo
argument_list|(
name|request
operator|.
name|getCC
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|email
operator|.
name|send
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|GwtRpcException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

