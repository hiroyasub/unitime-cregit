begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 - 3.5 (University Timetabling Application)  * Copyright (C) 2008 - 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|listeners
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSessionActivationListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSessionBindingEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSessionBindingListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSessionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|Debug
import|;
end_import

begin_comment
comment|/**  * @author Heston Fernandes  */
end_comment

begin_class
specifier|public
class|class
name|SessionActivationListener
implements|implements
name|HttpSessionActivationListener
implements|,
name|HttpSessionBindingListener
block|{
specifier|public
name|void
name|sessionWillPassivate
parameter_list|(
name|HttpSessionEvent
name|evt
parameter_list|)
block|{
name|Debug
operator|.
name|info
argument_list|(
literal|"TT Session will passivate ... "
operator|+
name|evt
operator|.
name|getSession
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|sessionDidActivate
parameter_list|(
name|HttpSessionEvent
name|evt
parameter_list|)
block|{
name|Debug
operator|.
name|info
argument_list|(
literal|"TT Session did activate ... "
operator|+
name|evt
operator|.
name|getSession
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|valueBound
parameter_list|(
name|HttpSessionBindingEvent
name|evt
parameter_list|)
block|{
name|Debug
operator|.
name|info
argument_list|(
literal|"TT Session value bound ... "
operator|+
name|evt
operator|.
name|getSession
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|valueUnbound
parameter_list|(
name|HttpSessionBindingEvent
name|evt
parameter_list|)
block|{
name|Debug
operator|.
name|info
argument_list|(
literal|"TT Session value unbound ... "
operator|+
name|evt
operator|.
name|getSession
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

