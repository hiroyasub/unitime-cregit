begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|listeners
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSessionActivationListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSessionBindingEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSessionBindingListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSessionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|Debug
import|;
end_import

begin_comment
comment|/**  * @author Heston Fernandes  */
end_comment

begin_class
specifier|public
class|class
name|SessionActivationListener
implements|implements
name|HttpSessionActivationListener
implements|,
name|HttpSessionBindingListener
block|{
specifier|public
name|void
name|sessionWillPassivate
parameter_list|(
name|HttpSessionEvent
name|evt
parameter_list|)
block|{
name|Debug
operator|.
name|info
argument_list|(
literal|"TT Session will passivate ... "
operator|+
name|evt
operator|.
name|getSession
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|sessionDidActivate
parameter_list|(
name|HttpSessionEvent
name|evt
parameter_list|)
block|{
name|Debug
operator|.
name|info
argument_list|(
literal|"TT Session did activate ... "
operator|+
name|evt
operator|.
name|getSession
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|valueBound
parameter_list|(
name|HttpSessionBindingEvent
name|evt
parameter_list|)
block|{
name|Debug
operator|.
name|info
argument_list|(
literal|"TT Session value bound ... "
operator|+
name|evt
operator|.
name|getSession
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|valueUnbound
parameter_list|(
name|HttpSessionBindingEvent
name|evt
parameter_list|)
block|{
name|Debug
operator|.
name|info
argument_list|(
literal|"TT Session value unbound ... "
operator|+
name|evt
operator|.
name|getSession
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

