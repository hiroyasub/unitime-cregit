begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 (University Timetabling Application)  * Copyright (C) 2012, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|spring
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
specifier|public
class|class
name|SimpleUserContext
implements|implements
name|UserContext
block|{
specifier|private
name|String
name|iId
decl_stmt|,
name|iName
decl_stmt|,
name|iRole
decl_stmt|;
specifier|private
name|Long
name|iSessionId
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|iProperties
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|String
name|getExternalUserId
parameter_list|()
block|{
return|return
name|iId
return|;
block|}
specifier|public
name|void
name|setExternalUsetId
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|iId
operator|=
name|id
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Long
name|getCurrentAcademicSessionId
parameter_list|()
block|{
return|return
name|iSessionId
return|;
block|}
specifier|public
name|void
name|setCurrentAcademicSessionId
parameter_list|(
name|Long
name|sessioId
parameter_list|)
block|{
name|iSessionId
operator|=
name|sessioId
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getCurrentRole
parameter_list|()
block|{
return|return
name|iRole
return|;
block|}
specifier|public
name|void
name|setCurrentRole
parameter_list|(
name|String
name|role
parameter_list|)
block|{
name|iRole
operator|=
name|role
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasRole
parameter_list|(
name|String
name|role
parameter_list|)
block|{
return|return
name|role
operator|==
literal|null
condition|?
name|iRole
operator|==
literal|null
else|:
name|role
operator|.
name|equals
argument_list|(
name|iRole
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getProperty
parameter_list|(
name|String
name|key
parameter_list|)
block|{
return|return
name|iProperties
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setProperty
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
name|iProperties
operator|.
name|remove
argument_list|(
name|key
argument_list|)
expr_stmt|;
else|else
name|iProperties
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getProperties
parameter_list|()
block|{
return|return
name|iProperties
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasDepartment
parameter_list|(
name|Long
name|departmentId
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

