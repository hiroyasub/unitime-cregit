begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|spring
operator|.
name|gwt
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Matcher
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|access
operator|.
name|AccessDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|web
operator|.
name|context
operator|.
name|WebApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|web
operator|.
name|context
operator|.
name|support
operator|.
name|WebApplicationContextUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|ApplicationProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|PageAccessException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|FieldNamingStrategy
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|Gson
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|GsonBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|JsonElement
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|JsonPrimitive
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|JsonSerializationContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|JsonSerializer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|IncompatibleRemoteServiceException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|SerializationException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|server
operator|.
name|rpc
operator|.
name|RPC
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|server
operator|.
name|rpc
operator|.
name|RPCRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|server
operator|.
name|rpc
operator|.
name|RemoteServiceServlet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|server
operator|.
name|rpc
operator|.
name|UnexpectedException
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|GwtDispatcherServlet
extends|extends
name|RemoteServiceServlet
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|Gson
name|iGson
init|=
literal|null
decl_stmt|;
specifier|private
specifier|static
name|ThreadLocal
argument_list|<
name|GwtCallInfo
argument_list|>
name|sLastQuery
init|=
operator|new
name|ThreadLocal
argument_list|<
name|GwtCallInfo
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|init
parameter_list|(
name|ServletConfig
name|config
parameter_list|)
throws|throws
name|ServletException
block|{
name|super
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|iGson
operator|=
operator|new
name|GsonBuilder
argument_list|()
operator|.
name|registerTypeAdapter
argument_list|(
name|java
operator|.
name|sql
operator|.
name|Timestamp
operator|.
name|class
argument_list|,
operator|new
name|JsonSerializer
argument_list|<
name|java
operator|.
name|sql
operator|.
name|Timestamp
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|JsonElement
name|serialize
parameter_list|(
name|java
operator|.
name|sql
operator|.
name|Timestamp
name|src
parameter_list|,
name|Type
name|typeOfSrc
parameter_list|,
name|JsonSerializationContext
name|context
parameter_list|)
block|{
return|return
operator|new
name|JsonPrimitive
argument_list|(
operator|new
name|SimpleDateFormat
argument_list|(
literal|"yyyy-MM-dd'T'HH:mm:ss'Z'"
argument_list|)
operator|.
name|format
argument_list|(
name|src
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|)
operator|.
name|registerTypeAdapter
argument_list|(
name|java
operator|.
name|sql
operator|.
name|Date
operator|.
name|class
argument_list|,
operator|new
name|JsonSerializer
argument_list|<
name|java
operator|.
name|sql
operator|.
name|Date
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|JsonElement
name|serialize
parameter_list|(
name|java
operator|.
name|sql
operator|.
name|Date
name|src
parameter_list|,
name|Type
name|typeOfSrc
parameter_list|,
name|JsonSerializationContext
name|context
parameter_list|)
block|{
return|return
operator|new
name|JsonPrimitive
argument_list|(
operator|new
name|SimpleDateFormat
argument_list|(
literal|"yyyy-MM-dd"
argument_list|)
operator|.
name|format
argument_list|(
name|src
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|)
operator|.
name|registerTypeAdapter
argument_list|(
name|Date
operator|.
name|class
argument_list|,
operator|new
name|JsonSerializer
argument_list|<
name|Date
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|JsonElement
name|serialize
parameter_list|(
name|Date
name|src
parameter_list|,
name|Type
name|typeOfSrc
parameter_list|,
name|JsonSerializationContext
name|context
parameter_list|)
block|{
return|return
operator|new
name|JsonPrimitive
argument_list|(
operator|new
name|SimpleDateFormat
argument_list|(
literal|"yyyy-MM-dd'T'HH:mm:ss'Z'"
argument_list|)
operator|.
name|format
argument_list|(
name|src
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|)
operator|.
name|setFieldNamingStrategy
argument_list|(
operator|new
name|FieldNamingStrategy
argument_list|()
block|{
name|Pattern
name|iPattern
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"i([A-Z])(.*)"
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|String
name|translateName
parameter_list|(
name|Field
name|f
parameter_list|)
block|{
name|Matcher
name|matcher
init|=
name|iPattern
operator|.
name|matcher
argument_list|(
name|f
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|matcher
operator|.
name|matches
argument_list|()
condition|)
return|return
name|matcher
operator|.
name|group
argument_list|(
literal|1
argument_list|)
operator|.
name|toLowerCase
argument_list|()
operator|+
name|matcher
operator|.
name|group
argument_list|(
literal|2
argument_list|)
return|;
else|else
return|return
name|f
operator|.
name|getName
argument_list|()
return|;
block|}
block|}
argument_list|)
operator|.
name|create
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|processCall
parameter_list|(
name|String
name|payload
parameter_list|)
throws|throws
name|SerializationException
block|{
try|try
block|{
name|Object
name|handler
init|=
name|getBean
argument_list|(
name|getThreadLocalRequest
argument_list|()
argument_list|)
decl_stmt|;
name|RPCRequest
name|rpcRequest
init|=
name|RPC
operator|.
name|decodeRequest
argument_list|(
name|payload
argument_list|,
name|handler
operator|.
name|getClass
argument_list|()
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|onAfterRequestDeserialized
argument_list|(
name|rpcRequest
argument_list|)
expr_stmt|;
try|try
block|{
if|if
condition|(
name|ApplicationProperty
operator|.
name|QueryLogJSON
operator|.
name|isTrue
argument_list|()
condition|)
name|sLastQuery
operator|.
name|set
argument_list|(
operator|new
name|GwtCallInfo
argument_list|(
name|rpcRequest
operator|.
name|getMethod
argument_list|()
operator|.
name|getDeclaringClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
operator|+
literal|"#"
operator|+
name|rpcRequest
operator|.
name|getMethod
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|iGson
operator|.
name|toJson
argument_list|(
name|rpcRequest
operator|.
name|getParameters
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|sLastQuery
operator|.
name|set
argument_list|(
operator|new
name|GwtCallInfo
argument_list|(
name|rpcRequest
operator|.
name|getMethod
argument_list|()
operator|.
name|getDeclaringClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
operator|+
literal|"#"
operator|+
name|rpcRequest
operator|.
name|getMethod
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|payload
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
block|}
try|try
block|{
return|return
name|RPC
operator|.
name|invokeAndEncodeResponse
argument_list|(
name|handler
argument_list|,
name|rpcRequest
operator|.
name|getMethod
argument_list|()
argument_list|,
name|rpcRequest
operator|.
name|getParameters
argument_list|()
argument_list|,
name|rpcRequest
operator|.
name|getSerializationPolicy
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|UnexpectedException
name|ex
parameter_list|)
block|{
if|if
condition|(
name|ex
operator|.
name|getCause
argument_list|()
operator|instanceof
name|AccessDeniedException
condition|)
return|return
name|RPC
operator|.
name|encodeResponseForFailure
argument_list|(
name|rpcRequest
operator|.
name|getMethod
argument_list|()
argument_list|,
operator|new
name|PageAccessException
argument_list|(
name|ex
operator|.
name|getCause
argument_list|()
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|,
name|rpcRequest
operator|.
name|getSerializationPolicy
argument_list|()
argument_list|)
return|;
throw|throw
name|ex
throw|;
block|}
block|}
catch|catch
parameter_list|(
name|IncompatibleRemoteServiceException
name|ex
parameter_list|)
block|{
return|return
name|RPC
operator|.
name|encodeResponseForFailure
argument_list|(
literal|null
argument_list|,
name|ex
argument_list|)
return|;
block|}
block|}
specifier|protected
name|String
name|getService
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|String
name|url
init|=
name|request
operator|.
name|getRequestURI
argument_list|()
decl_stmt|;
name|String
name|service
init|=
name|url
operator|.
name|substring
argument_list|(
name|url
operator|.
name|lastIndexOf
argument_list|(
literal|"/"
argument_list|)
operator|+
literal|1
argument_list|)
decl_stmt|;
return|return
name|service
return|;
block|}
specifier|protected
name|Object
name|getBean
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|String
name|service
init|=
name|getService
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|Object
name|bean
init|=
name|getBean
argument_list|(
name|service
argument_list|)
decl_stmt|;
return|return
name|bean
return|;
block|}
specifier|protected
name|Object
name|getBean
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|WebApplicationContext
name|applicationContext
init|=
name|WebApplicationContextUtils
operator|.
name|getWebApplicationContext
argument_list|(
name|getServletContext
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|applicationContext
operator|.
name|getBean
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|GwtCallInfo
name|getLastQuery
parameter_list|()
block|{
name|GwtCallInfo
name|q
init|=
name|sLastQuery
operator|.
name|get
argument_list|()
decl_stmt|;
if|if
condition|(
name|q
operator|!=
literal|null
condition|)
name|sLastQuery
operator|.
name|remove
argument_list|()
expr_stmt|;
return|return
name|q
return|;
block|}
specifier|public
specifier|static
class|class
name|GwtCallInfo
block|{
name|String
name|iTarget
decl_stmt|;
name|String
name|iQuery
decl_stmt|;
specifier|public
name|GwtCallInfo
parameter_list|(
name|String
name|target
parameter_list|,
name|String
name|query
parameter_list|)
block|{
name|iTarget
operator|=
name|target
expr_stmt|;
name|iQuery
operator|=
name|query
expr_stmt|;
block|}
specifier|public
name|String
name|getTarget
parameter_list|()
block|{
return|return
name|iTarget
return|;
block|}
specifier|public
name|String
name|getQuery
parameter_list|()
block|{
return|return
name|iQuery
return|;
block|}
block|}
block|}
end_class

end_unit

