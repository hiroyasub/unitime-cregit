begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 - 3.5 (University Timetabling Application)  * Copyright (C) 2012 - 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *   */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|spring
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|authentication
operator|.
name|LockedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|core
operator|.
name|AuthenticationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|web
operator|.
name|authentication
operator|.
name|SimpleUrlAuthenticationFailureHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|ApplicationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|LoginManager
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"unitimeAuthenticationFailureHandler"
argument_list|)
specifier|public
class|class
name|UniTimeAuthenticationFailureHandler
extends|extends
name|SimpleUrlAuthenticationFailureHandler
block|{
specifier|public
name|UniTimeAuthenticationFailureHandler
parameter_list|()
block|{
name|setDefaultFailureUrl
argument_list|(
literal|"/login.jsp"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onAuthenticationFailure
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|,
name|AuthenticationException
name|exception
parameter_list|)
throws|throws
name|IOException
throws|,
name|ServletException
block|{
comment|// Is already locked?
if|if
condition|(
name|exception
operator|!=
literal|null
operator|&&
name|exception
operator|instanceof
name|LockedException
condition|)
block|{
name|super
operator|.
name|onAuthenticationFailure
argument_list|(
name|request
argument_list|,
name|response
argument_list|,
name|exception
argument_list|)
expr_stmt|;
return|return;
block|}
name|LoginManager
operator|.
name|addFailedLoginAttempt
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"j_username"
argument_list|)
argument_list|,
operator|new
name|Date
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"true"
operator|.
name|equals
argument_list|(
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"unitime.password.reset"
argument_list|,
literal|"true"
argument_list|)
argument_list|)
operator|&&
name|User
operator|.
name|findByUserName
argument_list|(
name|request
operator|.
name|getParameter
argument_list|(
literal|"j_username"
argument_list|)
argument_list|)
operator|!=
literal|null
condition|)
name|request
operator|.
name|getSession
argument_list|()
operator|.
name|setAttribute
argument_list|(
literal|"SUGGEST_PASSWORD_RESET"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|super
operator|.
name|onAuthenticationFailure
argument_list|(
name|request
argument_list|,
name|response
argument_list|,
name|exception
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

