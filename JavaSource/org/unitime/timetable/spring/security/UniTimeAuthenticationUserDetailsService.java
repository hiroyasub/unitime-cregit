begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.5 (University Timetabling Application)  * Copyright (C) 2014, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|spring
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jasig
operator|.
name|cas
operator|.
name|client
operator|.
name|validation
operator|.
name|Assertion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|cas
operator|.
name|authentication
operator|.
name|CasAssertionAuthenticationToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|core
operator|.
name|userdetails
operator|.
name|AuthenticationUserDetailsService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|core
operator|.
name|userdetails
operator|.
name|UserDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|core
operator|.
name|userdetails
operator|.
name|UsernameNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|Debug
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|ApplicationProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|interfaces
operator|.
name|ExternalUidTranslation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|interfaces
operator|.
name|ExternalUidTranslation
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|context
operator|.
name|UniTimeUserContext
import|;
end_import

begin_class
annotation|@
name|Service
argument_list|(
literal|"unitimeAuthenticationUserDetailsService"
argument_list|)
specifier|public
class|class
name|UniTimeAuthenticationUserDetailsService
implements|implements
name|AuthenticationUserDetailsService
argument_list|<
name|CasAssertionAuthenticationToken
argument_list|>
block|{
specifier|private
name|ExternalUidTranslation
name|iTranslation
init|=
literal|null
decl_stmt|;
specifier|public
name|UniTimeAuthenticationUserDetailsService
parameter_list|()
block|{
if|if
condition|(
name|ApplicationProperty
operator|.
name|ExternalUserIdTranslation
operator|.
name|value
argument_list|()
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|iTranslation
operator|=
operator|(
name|ExternalUidTranslation
operator|)
name|Class
operator|.
name|forName
argument_list|(
name|ApplicationProperty
operator|.
name|ExternalUserIdTranslation
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|getConstructor
argument_list|()
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Debug
operator|.
name|error
argument_list|(
literal|"Unable to instantiate external uid translation class, "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|UserDetails
name|loadUserDetails
parameter_list|(
name|CasAssertionAuthenticationToken
name|token
parameter_list|)
throws|throws
name|UsernameNotFoundException
block|{
name|Assertion
name|assertion
init|=
name|token
operator|.
name|getAssertion
argument_list|()
decl_stmt|;
name|Map
name|attributes
init|=
name|assertion
operator|.
name|getPrincipal
argument_list|()
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
name|String
name|userId
init|=
name|token
operator|.
name|getName
argument_list|()
decl_stmt|;
if|if
condition|(
name|ApplicationProperty
operator|.
name|AuthenticationCasIdAttribute
operator|.
name|value
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|Object
name|value
init|=
name|attributes
operator|.
name|get
argument_list|(
name|ApplicationProperty
operator|.
name|AuthenticationCasIdAttribute
operator|.
name|value
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|instanceof
name|List
condition|)
block|{
for|for
control|(
name|Object
name|o
range|:
operator|(
operator|(
name|List
operator|)
name|value
operator|)
control|)
block|{
name|userId
operator|=
name|o
operator|.
name|toString
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
else|else
block|{
name|userId
operator|=
name|value
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
block|}
block|}
if|else if
condition|(
name|iTranslation
operator|!=
literal|null
condition|)
block|{
name|userId
operator|=
name|iTranslation
operator|.
name|translate
argument_list|(
name|userId
argument_list|,
name|Source
operator|.
name|LDAP
argument_list|,
name|Source
operator|.
name|User
argument_list|)
expr_stmt|;
block|}
name|String
name|name
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|ApplicationProperty
operator|.
name|AuthenticationCasNameAttribute
operator|.
name|value
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|Object
name|value
init|=
name|attributes
operator|.
name|get
argument_list|(
name|ApplicationProperty
operator|.
name|AuthenticationCasNameAttribute
operator|.
name|value
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|instanceof
name|List
condition|)
block|{
for|for
control|(
name|Object
name|o
range|:
operator|(
operator|(
name|List
operator|)
name|value
operator|)
control|)
block|{
name|name
operator|=
name|o
operator|.
name|toString
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
else|else
block|{
name|name
operator|=
name|value
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|ApplicationProperty
operator|.
name|AuthenticationCasIdTrimLeadingZerosFrom
operator|.
name|isTrue
argument_list|()
condition|)
block|{
while|while
condition|(
name|userId
operator|.
name|startsWith
argument_list|(
literal|"0"
argument_list|)
condition|)
name|userId
operator|=
name|userId
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|UniTimeUserContext
argument_list|(
name|userId
argument_list|,
name|token
operator|.
name|getName
argument_list|()
argument_list|,
name|name
argument_list|,
literal|null
argument_list|)
return|;
block|}
block|}
end_class

end_unit

