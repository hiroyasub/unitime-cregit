begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|spring
operator|.
name|security
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|authentication
operator|.
name|AnonymousAuthenticationToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|core
operator|.
name|Authentication
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|web
operator|.
name|authentication
operator|.
name|AnonymousAuthenticationFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|context
operator|.
name|AnonymousUserContext
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"unitimeAnonymousFilter"
argument_list|)
specifier|public
class|class
name|UniTimeAnonymousAuthenticationFilter
extends|extends
name|AnonymousAuthenticationFilter
block|{
specifier|public
name|UniTimeAnonymousAuthenticationFilter
parameter_list|()
block|{
name|super
argument_list|(
literal|"guest"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|Authentication
name|createAuthentication
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|)
block|{
try|try
block|{
name|AnonymousUserContext
name|user
init|=
operator|new
name|AnonymousUserContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|user
operator|.
name|getAuthorities
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
operator|new
name|AnonymousAuthenticationToken
argument_list|(
literal|"guest"
argument_list|,
name|user
argument_list|,
name|user
operator|.
name|getAuthorities
argument_list|()
argument_list|)
return|;
else|else
return|return
name|super
operator|.
name|createAuthentication
argument_list|(
name|request
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
return|return
name|super
operator|.
name|createAuthentication
argument_list|(
name|request
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

