begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *   */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|spring
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ldap
operator|.
name|core
operator|.
name|DirContextAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|ldap
operator|.
name|core
operator|.
name|DirContextOperations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|core
operator|.
name|GrantedAuthority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|core
operator|.
name|userdetails
operator|.
name|UserDetails
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|ldap
operator|.
name|userdetails
operator|.
name|UserDetailsContextMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|Debug
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|ApplicationProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|interfaces
operator|.
name|ExternalUidTranslation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|interfaces
operator|.
name|ExternalUidTranslation
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|context
operator|.
name|UniTimeUserContext
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"unitimeUserContextMapper"
argument_list|)
specifier|public
class|class
name|UniTimeUserContextMapper
implements|implements
name|UserDetailsContextMapper
block|{
specifier|private
name|ExternalUidTranslation
name|iTranslation
init|=
literal|null
decl_stmt|;
specifier|public
name|UniTimeUserContextMapper
parameter_list|()
block|{
if|if
condition|(
name|ApplicationProperty
operator|.
name|ExternalUserIdTranslation
operator|.
name|value
argument_list|()
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|iTranslation
operator|=
operator|(
name|ExternalUidTranslation
operator|)
name|Class
operator|.
name|forName
argument_list|(
name|ApplicationProperty
operator|.
name|ExternalUserIdTranslation
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|getConstructor
argument_list|()
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Debug
operator|.
name|error
argument_list|(
literal|"Unable to instantiate external uid translation class, "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|UserDetails
name|mapUserFromContext
parameter_list|(
name|DirContextOperations
name|ctx
parameter_list|,
name|String
name|username
parameter_list|,
name|Collection
argument_list|<
name|?
extends|extends
name|GrantedAuthority
argument_list|>
name|authorities
parameter_list|)
block|{
name|String
name|userId
init|=
name|username
decl_stmt|;
if|if
condition|(
operator|!
name|authorities
operator|.
name|isEmpty
argument_list|()
condition|)
name|userId
operator|=
name|authorities
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|getAuthority
argument_list|()
expr_stmt|;
if|if
condition|(
name|iTranslation
operator|!=
literal|null
operator|&&
name|ApplicationProperty
operator|.
name|AuthenticationLdapIdTranslate
operator|.
name|isTrue
argument_list|()
condition|)
name|userId
operator|=
name|iTranslation
operator|.
name|translate
argument_list|(
name|userId
argument_list|,
name|Source
operator|.
name|LDAP
argument_list|,
name|Source
operator|.
name|User
argument_list|)
expr_stmt|;
if|if
condition|(
name|ApplicationProperty
operator|.
name|AuthenticationLdapIdTrimLeadingZeros
operator|.
name|isTrue
argument_list|()
condition|)
while|while
condition|(
name|userId
operator|.
name|startsWith
argument_list|(
literal|"0"
argument_list|)
condition|)
name|userId
operator|=
name|userId
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
expr_stmt|;
return|return
operator|new
name|UniTimeUserContext
argument_list|(
name|userId
argument_list|,
name|username
argument_list|,
name|ctx
operator|.
name|getStringAttribute
argument_list|(
literal|"cn"
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|mapUserToContext
parameter_list|(
name|UserDetails
name|user
parameter_list|,
name|DirContextAdapter
name|ctx
parameter_list|)
block|{
block|}
block|}
end_class

end_unit

