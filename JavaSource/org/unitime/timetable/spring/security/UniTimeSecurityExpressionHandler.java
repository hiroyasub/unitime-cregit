begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|spring
operator|.
name|security
package|;
end_package

begin_import
import|import
name|org
operator|.
name|aopalliance
operator|.
name|intercept
operator|.
name|MethodInvocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|access
operator|.
name|AccessDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|access
operator|.
name|expression
operator|.
name|SecurityExpressionRoot
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|access
operator|.
name|expression
operator|.
name|method
operator|.
name|DefaultMethodSecurityExpressionHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|access
operator|.
name|expression
operator|.
name|method
operator|.
name|MethodSecurityExpressionOperations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|core
operator|.
name|Authentication
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|UniTimeSecurityExpressionHandler
extends|extends
name|DefaultMethodSecurityExpressionHandler
block|{
annotation|@
name|Override
specifier|protected
name|MethodSecurityExpressionOperations
name|createSecurityExpressionRoot
parameter_list|(
name|Authentication
name|authentication
parameter_list|,
name|MethodInvocation
name|invocation
parameter_list|)
block|{
name|MyMethodSecurityExpressionRoot
name|root
init|=
operator|new
name|MyMethodSecurityExpressionRoot
argument_list|(
name|authentication
argument_list|)
decl_stmt|;
name|root
operator|.
name|setThis
argument_list|(
name|invocation
operator|.
name|getThis
argument_list|()
argument_list|)
expr_stmt|;
name|root
operator|.
name|setPermissionEvaluator
argument_list|(
name|getPermissionEvaluator
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|root
return|;
block|}
class|class
name|MyMethodSecurityExpressionRoot
extends|extends
name|SecurityExpressionRoot
implements|implements
name|MethodSecurityExpressionOperations
block|{
specifier|private
name|Object
name|filterObject
decl_stmt|;
specifier|private
name|Object
name|returnObject
decl_stmt|;
specifier|private
name|Object
name|target
decl_stmt|;
name|MyMethodSecurityExpressionRoot
parameter_list|(
name|Authentication
name|a
parameter_list|)
block|{
name|super
argument_list|(
name|a
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setFilterObject
parameter_list|(
name|Object
name|filterObject
parameter_list|)
block|{
name|this
operator|.
name|filterObject
operator|=
name|filterObject
expr_stmt|;
block|}
specifier|public
name|Object
name|getFilterObject
parameter_list|()
block|{
return|return
name|filterObject
return|;
block|}
specifier|public
name|void
name|setReturnObject
parameter_list|(
name|Object
name|returnObject
parameter_list|)
block|{
name|this
operator|.
name|returnObject
operator|=
name|returnObject
expr_stmt|;
block|}
specifier|public
name|Object
name|getReturnObject
parameter_list|()
block|{
return|return
name|returnObject
return|;
block|}
name|void
name|setThis
parameter_list|(
name|Object
name|target
parameter_list|)
block|{
name|this
operator|.
name|target
operator|=
name|target
expr_stmt|;
block|}
specifier|public
name|Object
name|getThis
parameter_list|()
block|{
return|return
name|target
return|;
block|}
specifier|public
name|boolean
name|hasPermission
parameter_list|(
name|Object
name|permission
parameter_list|)
block|{
try|try
block|{
return|return
name|super
operator|.
name|hasPermission
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|permission
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|AccessDeniedException
name|e
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
block|}
specifier|public
name|boolean
name|checkPermission
parameter_list|(
name|Object
name|permission
parameter_list|)
block|{
return|return
name|super
operator|.
name|hasPermission
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|permission
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasPermission
parameter_list|(
name|Object
name|targetId
parameter_list|,
name|String
name|targetType
parameter_list|,
name|Object
name|permission
parameter_list|)
block|{
try|try
block|{
return|return
name|super
operator|.
name|hasPermission
argument_list|(
name|targetId
argument_list|,
name|targetType
argument_list|,
name|permission
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|AccessDeniedException
name|e
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
block|}
specifier|public
name|boolean
name|checkPermission
parameter_list|(
name|Object
name|targetId
parameter_list|,
name|String
name|targetType
parameter_list|,
name|Object
name|permission
parameter_list|)
block|{
return|return
name|super
operator|.
name|hasPermission
argument_list|(
name|targetId
argument_list|,
name|targetType
argument_list|,
name|permission
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasPermission
parameter_list|(
name|Object
name|target
parameter_list|,
name|Object
name|permission
parameter_list|)
block|{
try|try
block|{
return|return
name|super
operator|.
name|hasPermission
argument_list|(
name|target
argument_list|,
name|permission
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|AccessDeniedException
name|e
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
block|}
specifier|public
name|boolean
name|checkPermission
parameter_list|(
name|Object
name|target
parameter_list|,
name|Object
name|permission
parameter_list|)
block|{
return|return
name|super
operator|.
name|hasPermission
argument_list|(
name|target
argument_list|,
name|permission
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

