begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 - 3.5 (University Timetabling Application)  * Copyright (C) 2012 - 2013, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|dataexchange
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|cpsolver
operator|.
name|ifs
operator|.
name|util
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|criterion
operator|.
name|Order
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|hibernate
operator|.
name|util
operator|.
name|HibernateUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|ApplicationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Roles
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|RolesDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|rights
operator|.
name|Right
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|PermissionsExport
extends|extends
name|BaseExport
block|{
specifier|public
name|void
name|saveXml
parameter_list|(
name|Document
name|document
parameter_list|,
name|Session
name|session
parameter_list|,
name|Properties
name|parameters
parameter_list|)
throws|throws
name|Exception
block|{
try|try
block|{
name|beginTransaction
argument_list|()
expr_stmt|;
name|Element
name|root
init|=
name|document
operator|.
name|addElement
argument_list|(
literal|"permissions"
argument_list|)
decl_stmt|;
name|root
operator|.
name|addAttribute
argument_list|(
literal|"created"
argument_list|,
operator|new
name|Date
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|document
operator|.
name|addDocType
argument_list|(
literal|"curricula"
argument_list|,
literal|"-//UniTime//DTD University Course Timetabling/EN"
argument_list|,
literal|"http://www.unitime.org/interface/Permissions.dtd"
argument_list|)
expr_stmt|;
for|for
control|(
name|Roles
name|role
range|:
name|RolesDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|findAll
argument_list|(
name|getHibSession
argument_list|()
argument_list|,
name|Order
operator|.
name|asc
argument_list|(
literal|"abbv"
argument_list|)
argument_list|)
control|)
block|{
name|Element
name|r
init|=
name|root
operator|.
name|addElement
argument_list|(
literal|"role"
argument_list|)
decl_stmt|;
name|r
operator|.
name|addAttribute
argument_list|(
literal|"reference"
argument_list|,
name|role
operator|.
name|getReference
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|addAttribute
argument_list|(
literal|"name"
argument_list|,
name|role
operator|.
name|getAbbv
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|addAttribute
argument_list|(
literal|"manager"
argument_list|,
name|role
operator|.
name|isManager
argument_list|()
condition|?
literal|"true"
else|:
literal|"false"
argument_list|)
expr_stmt|;
name|r
operator|.
name|addAttribute
argument_list|(
literal|"enabled"
argument_list|,
name|role
operator|.
name|isEnabled
argument_list|()
condition|?
literal|"true"
else|:
literal|"false"
argument_list|)
expr_stmt|;
name|r
operator|.
name|addAttribute
argument_list|(
literal|"instructor"
argument_list|,
name|role
operator|.
name|isInstructor
argument_list|()
condition|?
literal|"true"
else|:
literal|"false"
argument_list|)
expr_stmt|;
for|for
control|(
name|Right
name|right
range|:
name|Right
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|role
operator|.
name|hasRight
argument_list|(
name|right
argument_list|)
condition|)
name|r
operator|.
name|addElement
argument_list|(
literal|"right"
argument_list|)
operator|.
name|setText
argument_list|(
name|right
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|commitTransaction
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fatal
argument_list|(
literal|"Exception: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|rollbackTransaction
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
if|if
condition|(
name|args
operator|.
name|length
operator|==
literal|0
condition|)
name|args
operator|=
operator|new
name|String
index|[]
block|{
literal|"/Users/muller/permissions.xml"
block|}
expr_stmt|;
name|ToolBox
operator|.
name|configureLogging
argument_list|()
expr_stmt|;
name|HibernateUtil
operator|.
name|configureHibernate
argument_list|(
name|ApplicationProperties
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
operator|new
name|PermissionsExport
argument_list|()
operator|.
name|saveXml
argument_list|(
name|args
index|[
literal|0
index|]
argument_list|,
literal|null
argument_list|,
name|ApplicationProperties
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

