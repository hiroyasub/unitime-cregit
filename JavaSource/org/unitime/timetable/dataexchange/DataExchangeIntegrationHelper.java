begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|dataexchange
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|DocumentException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|io
operator|.
name|SAXReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|ApplicationProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|queue
operator|.
name|QueueMessage
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"dataExchangeHelper"
argument_list|)
specifier|public
class|class
name|DataExchangeIntegrationHelper
block|{
specifier|public
name|Document
name|file2document
parameter_list|(
name|File
name|file
parameter_list|)
throws|throws
name|DocumentException
block|{
return|return
operator|new
name|SAXReader
argument_list|()
operator|.
name|read
argument_list|(
name|file
argument_list|)
return|;
block|}
specifier|public
name|String
name|exception2message
parameter_list|(
name|Exception
name|exception
parameter_list|)
throws|throws
name|IOException
block|{
name|StringWriter
name|out
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|exception
operator|.
name|printStackTrace
argument_list|(
operator|new
name|PrintWriter
argument_list|(
name|out
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|flush
argument_list|()
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|out
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|String
name|importDocument
parameter_list|(
name|Document
name|document
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|StringBuffer
name|log
init|=
operator|new
name|StringBuffer
argument_list|(
literal|"<html><header><title>XML Import Log</title></header><body>\n"
argument_list|)
decl_stmt|;
name|Log
name|logger
init|=
operator|new
name|Log
argument_list|()
block|{
specifier|protected
name|void
name|log
parameter_list|(
name|QueueMessage
operator|.
name|Level
name|level
parameter_list|,
name|Object
name|message
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
name|log
operator|.
name|append
argument_list|(
operator|new
name|QueueMessage
argument_list|(
name|level
argument_list|,
name|message
argument_list|,
name|t
argument_list|)
operator|.
name|toHTML
argument_list|()
operator|+
literal|"<br>\n"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|warn
parameter_list|(
name|Object
name|message
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
name|log
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|WARN
argument_list|,
name|message
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|warn
parameter_list|(
name|Object
name|message
parameter_list|)
block|{
name|log
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|WARN
argument_list|,
name|message
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|trace
parameter_list|(
name|Object
name|message
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
name|log
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|TRACE
argument_list|,
name|message
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|trace
parameter_list|(
name|Object
name|message
parameter_list|)
block|{
name|log
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|TRACE
argument_list|,
name|message
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isWarnEnabled
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isTraceEnabled
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isInfoEnabled
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isFatalEnabled
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isErrorEnabled
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isDebugEnabled
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|info
parameter_list|(
name|Object
name|message
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
name|log
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|INFO
argument_list|,
name|message
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|info
parameter_list|(
name|Object
name|message
parameter_list|)
block|{
name|log
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|INFO
argument_list|,
name|message
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|fatal
parameter_list|(
name|Object
name|message
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
name|log
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|FATAL
argument_list|,
name|message
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|fatal
parameter_list|(
name|Object
name|message
parameter_list|)
block|{
name|log
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|FATAL
argument_list|,
name|message
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|error
parameter_list|(
name|Object
name|message
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
name|log
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|ERROR
argument_list|,
name|message
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|error
parameter_list|(
name|Object
name|message
parameter_list|)
block|{
name|log
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|ERROR
argument_list|,
name|message
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|debug
parameter_list|(
name|Object
name|message
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
name|log
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|DEBUG
argument_list|,
name|message
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|debug
parameter_list|(
name|Object
name|message
parameter_list|)
block|{
name|log
argument_list|(
name|QueueMessage
operator|.
name|Level
operator|.
name|DEBUG
argument_list|,
name|message
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|String
name|manager
init|=
name|document
operator|.
name|getRootElement
argument_list|()
operator|.
name|attributeValue
argument_list|(
literal|"manager"
argument_list|,
name|ApplicationProperty
operator|.
name|DataExchangeXmlManager
operator|.
name|value
argument_list|()
argument_list|)
decl_stmt|;
name|DataExchangeHelper
operator|.
name|importDocument
argument_list|(
name|document
argument_list|,
name|manager
argument_list|,
name|logger
argument_list|)
expr_stmt|;
name|log
operator|.
name|append
argument_list|(
literal|"</body></html>"
argument_list|)
expr_stmt|;
return|return
name|log
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

