begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*   * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *   */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|dataexchange
package|;
end_package

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|ApplicationProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|AcademicArea
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|AcademicClassification
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Building
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ChangeLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ClassDurationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Class_
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseCreditType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseCreditUnitType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DatePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DepartmentStatusType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DepartmentalInstructor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|InstrOfferingConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|InstructionalMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|InstructionalOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ItypeDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Location
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|NonUniversityLocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitClassEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitClassInstructor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitClassMeeting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitClassMeetingUtilPeriod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitCourseOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitDepartmentalInstructor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitInstrOfferingConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitInstructionalOffering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitSchedulingSubpart
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitStudent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitStudentAcadAreaMajorClassification
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitStudentAcadAreaMinorClassification
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitStudentClassEnrollment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PointInTimeData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PosMajor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PosMinor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PositionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Room
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomDept
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SchedulingSubpart
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Student
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SubjectArea
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TeachingResponsibility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimePattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimePatternDays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimePatternTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|CalendarUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|ProgressTracker
import|;
end_import

begin_comment
comment|/**  * @author Stephanie Schluttenhofer  */
end_comment

begin_class
specifier|public
class|class
name|PointInTimeDataImport
extends|extends
name|EventRelatedImports
block|{
specifier|private
name|PointInTimeData
name|pointInTimeData
init|=
literal|null
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|SubjectArea
argument_list|>
name|subjectAreas
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|SubjectArea
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|ItypeDesc
argument_list|>
name|itypes
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|ItypeDesc
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|ClassDurationType
argument_list|>
name|classDurationTypes
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|ClassDurationType
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|InstructionalMethod
argument_list|>
name|instructionalMethods
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|InstructionalMethod
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|Department
argument_list|>
name|departmentsByCode
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Department
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|CourseType
argument_list|>
name|courseTypesByRef
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|CourseType
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|TeachingResponsibility
argument_list|>
name|teachingResponsibilitiesByRef
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|TeachingResponsibility
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|DatePattern
argument_list|>
name|datePatternsByName
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|DatePattern
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|TimePattern
argument_list|>
name|timePatternsByName
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|TimePattern
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|AcademicClassification
argument_list|>
name|academicClassificationsByCode
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|AcademicClassification
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|AcademicArea
argument_list|>
name|academicAreasByAbbv
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|AcademicArea
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|PosMajor
argument_list|>
name|majorsByCode
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|PosMajor
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|PosMinor
argument_list|>
name|minorsByCode
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|PosMinor
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|RoomType
argument_list|>
name|roomTypesByRef
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|RoomType
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|CourseCreditType
argument_list|>
name|creditTypesByRef
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|CourseCreditType
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|CourseCreditUnitType
argument_list|>
name|creditUnitTypesByRef
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|CourseCreditUnitType
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|PositionType
argument_list|>
name|positionTypesByRef
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|PositionType
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|Building
argument_list|>
name|buildingsByAbbv
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Building
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|Location
argument_list|>
name|locationsByName
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Location
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|DepartmentalInstructor
argument_list|>
name|departmentalInstructorsByName
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|DepartmentalInstructor
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|TimePattern
argument_list|>
name|timePatterns
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|TimePattern
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|DatePattern
argument_list|>
name|datePatterns
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|DatePattern
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Location
argument_list|>
name|locations
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Location
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Building
argument_list|>
name|buildings
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Building
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|InstructionalOffering
argument_list|>
name|instructionalOfferings
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|InstructionalOffering
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|CourseOffering
argument_list|>
name|courseOfferings
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|CourseOffering
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|PitCourseOffering
argument_list|>
name|pitCourseOfferings
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|PitCourseOffering
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|InstrOfferingConfig
argument_list|>
name|instrOfferingConfigs
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|InstrOfferingConfig
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|SchedulingSubpart
argument_list|>
name|schedulingSubparts
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|SchedulingSubpart
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Class_
argument_list|>
name|classes
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Class_
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|PitClass
argument_list|>
name|pitClasses
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|PitClass
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|RoomType
argument_list|>
name|roomTypes
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|RoomType
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|CourseCreditType
argument_list|>
name|creditTypes
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|CourseCreditType
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|CourseCreditUnitType
argument_list|>
name|creditUnitTypes
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|CourseCreditUnitType
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|PositionType
argument_list|>
name|positionTypes
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|PositionType
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|TeachingResponsibility
argument_list|>
name|teachingResponsibilities
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|TeachingResponsibility
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Department
argument_list|>
name|departments
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Department
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|PitDepartmentalInstructor
argument_list|>
name|pitDepartmentInstructors
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|PitDepartmentalInstructor
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|CourseType
argument_list|>
name|courseTypes
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|CourseType
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|AcademicArea
argument_list|>
name|academicAreas
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|AcademicArea
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|AcademicClassification
argument_list|>
name|academicClassifications
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|AcademicClassification
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|PosMajor
argument_list|>
name|majors
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|PosMajor
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|PosMinor
argument_list|>
name|minors
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|PosMinor
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Student
argument_list|>
name|students
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|Student
argument_list|>
argument_list|()
decl_stmt|;
specifier|protected
name|boolean
name|courseNumbersMustBeUnique
decl_stmt|;
specifier|public
name|PointInTimeDataImport
parameter_list|()
block|{
comment|//		super();
comment|//		courseNumbersMustBeUnique = ApplicationProperty.CourseOfferingNumberMustBeUnique.isTrue();
block|}
specifier|public
name|void
name|loadXml
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
name|initializeTrimLeadingZeros
argument_list|()
expr_stmt|;
try|try
block|{
if|if
condition|(
operator|!
name|rootElement
operator|.
name|getName
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|PointInTimeDataExport
operator|.
name|sRootElementName
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Given XML file is not a Course Offerings load file."
argument_list|)
throw|;
block|}
name|beginTransaction
argument_list|()
expr_stmt|;
name|initializeLoad
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
name|preLoadAction
argument_list|()
expr_stmt|;
name|loadOfferings
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
name|loadStudents
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
name|completeLoad
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fatal
argument_list|(
literal|"Exception: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|rollbackTransaction
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
name|postLoadAction
argument_list|()
expr_stmt|;
block|}
name|updateChangeList
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|reportMissingLocations
argument_list|()
expr_stmt|;
name|mailLoadResults
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|completeLoad
parameter_list|()
block|{
name|pointInTimeData
operator|.
name|setSavedSuccessfully
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|getHibSession
argument_list|()
operator|.
name|update
argument_list|(
name|pointInTimeData
argument_list|)
expr_stmt|;
name|flush
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|commitTransaction
argument_list|()
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|loadStudents
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
name|loadExistingStudents
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|Element
name|studentsElement
init|=
name|rootElement
operator|.
name|element
argument_list|(
name|PointInTimeDataExport
operator|.
name|sStudentsElementName
argument_list|)
decl_stmt|;
name|int
name|numStudents
init|=
name|studentsElement
operator|.
name|elements
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|info
argument_list|(
literal|"Loading data for "
operator|+
name|numStudents
operator|+
literal|" students."
argument_list|)
expr_stmt|;
name|ProgressTracker
name|progressTracker
init|=
operator|new
name|ProgressTracker
argument_list|(
literal|"Students"
argument_list|,
name|numStudents
argument_list|,
literal|5
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|progress
init|=
literal|null
decl_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Element
name|studentElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|studentsElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementStudent
argument_list|(
name|studentElement
argument_list|)
expr_stmt|;
name|count
operator|++
expr_stmt|;
comment|//        	if ((count % 100) == 0){
if|if
condition|(
operator|(
name|count
operator|%
literal|1
operator|)
operator|==
literal|0
condition|)
block|{
name|flush
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|progress
operator|=
name|progressTracker
operator|.
name|getProgressStringIfNeeded
argument_list|()
expr_stmt|;
if|if
condition|(
name|progress
operator|!=
literal|null
condition|)
block|{
name|info
argument_list|(
name|progress
argument_list|)
expr_stmt|;
block|}
block|}
name|flush
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|info
argument_list|(
literal|"Loading of student data complete."
argument_list|)
expr_stmt|;
comment|//    	progress = progressTracker.getElapsedTimeAnalysisString();
comment|//    	if (progress != null) {
comment|//    		info(progress);
comment|//    	}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|elementStudent
parameter_list|(
name|Element
name|studentElement
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|uidString
init|=
name|getRequiredStringAttribute
argument_list|(
name|studentElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sStudentElementName
argument_list|)
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|uidString
argument_list|)
decl_stmt|;
name|String
name|externalId
init|=
name|getRequiredStringAttribute
argument_list|(
name|studentElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sExternalIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sStudentElementName
argument_list|)
decl_stmt|;
name|PitStudent
name|s
init|=
operator|new
name|PitStudent
argument_list|()
decl_stmt|;
if|if
condition|(
name|students
operator|.
name|get
argument_list|(
name|uid
argument_list|)
operator|!=
literal|null
operator|&&
name|students
operator|.
name|get
argument_list|(
name|uid
argument_list|)
operator|.
name|getExternalUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
name|externalId
argument_list|)
condition|)
block|{
name|s
operator|.
name|setStudent
argument_list|(
name|students
operator|.
name|get
argument_list|(
name|uid
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|s
operator|.
name|setExternalUniqueId
argument_list|(
name|externalId
argument_list|)
expr_stmt|;
name|s
operator|.
name|setFirstName
argument_list|(
name|getOptionalStringAttribute
argument_list|(
name|studentElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sFirstNameAttribute
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|.
name|setMiddleName
argument_list|(
name|getOptionalStringAttribute
argument_list|(
name|studentElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sMiddleNameAttribute
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|.
name|setLastName
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|studentElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sLastNameAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sStudentElementName
argument_list|)
argument_list|)
expr_stmt|;
name|s
operator|.
name|setPointInTimeData
argument_list|(
name|pointInTimeData
argument_list|)
expr_stmt|;
name|s
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Element
name|element
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|studentElement
operator|.
name|elements
argument_list|()
control|)
block|{
if|if
condition|(
name|element
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|PointInTimeDataExport
operator|.
name|sEnrollmentElementName
argument_list|)
condition|)
block|{
name|elementEnrollment
argument_list|(
name|element
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|element
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|PointInTimeDataExport
operator|.
name|sAcadAreaMajorClassificationElementName
argument_list|)
condition|)
block|{
name|elementAcadAreaMajorClassification
argument_list|(
name|element
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|element
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|PointInTimeDataExport
operator|.
name|sAcadAreaMinorClassificationElementName
argument_list|)
condition|)
block|{
name|elementAcadAreaMinorClassification
argument_list|(
name|element
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|elementAcadAreaMajorClassification
parameter_list|(
name|Element
name|element
parameter_list|,
name|PitStudent
name|s
parameter_list|)
throws|throws
name|Exception
block|{
name|PitStudentAcadAreaMajorClassification
name|aamc
init|=
operator|new
name|PitStudentAcadAreaMajorClassification
argument_list|()
decl_stmt|;
name|aamc
operator|.
name|setAcademicArea
argument_list|(
name|academicAreas
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|element
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcademicAreaUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcadAreaMajorClassificationElementName
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|aamc
operator|.
name|setAcademicClassification
argument_list|(
name|academicClassifications
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|element
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcademicClassificationUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcadAreaMajorClassificationElementName
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|aamc
operator|.
name|setMajor
argument_list|(
name|majors
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|element
argument_list|,
name|PointInTimeDataExport
operator|.
name|sMajorUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcadAreaMajorClassificationElementName
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|aamc
operator|.
name|setPitStudent
argument_list|(
name|s
argument_list|)
expr_stmt|;
name|s
operator|.
name|addTopitAcadAreaMajorClassifications
argument_list|(
name|aamc
argument_list|)
expr_stmt|;
name|aamc
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|aamc
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|elementAcadAreaMinorClassification
parameter_list|(
name|Element
name|element
parameter_list|,
name|PitStudent
name|s
parameter_list|)
throws|throws
name|Exception
block|{
name|PitStudentAcadAreaMinorClassification
name|aamc
init|=
operator|new
name|PitStudentAcadAreaMinorClassification
argument_list|()
decl_stmt|;
name|aamc
operator|.
name|setAcademicArea
argument_list|(
name|academicAreas
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|element
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcademicAreaUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcadAreaMinorClassificationElementName
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|aamc
operator|.
name|setAcademicClassification
argument_list|(
name|academicClassifications
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|element
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcademicClassificationUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcadAreaMinorClassificationElementName
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|aamc
operator|.
name|setMinor
argument_list|(
name|minors
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|element
argument_list|,
name|PointInTimeDataExport
operator|.
name|sMinorUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcadAreaMinorClassificationElementName
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|aamc
operator|.
name|setPitStudent
argument_list|(
name|s
argument_list|)
expr_stmt|;
name|s
operator|.
name|addTopitAcadAreaMinorClassifications
argument_list|(
name|aamc
argument_list|)
expr_stmt|;
name|aamc
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|aamc
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|elementEnrollment
parameter_list|(
name|Element
name|element
parameter_list|,
name|PitStudent
name|s
parameter_list|)
throws|throws
name|NumberFormatException
throws|,
name|Exception
block|{
name|PitStudentClassEnrollment
name|psce
init|=
operator|new
name|PitStudentClassEnrollment
argument_list|()
decl_stmt|;
name|psce
operator|.
name|setPitClass
argument_list|(
name|pitClasses
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|element
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sEnrollmentElementName
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|PitCourseOffering
name|pco
init|=
name|pitCourseOfferings
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|element
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCourseOfferingUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sEnrollmentElementName
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|psce
operator|.
name|setPitCourseOffering
argument_list|(
name|pco
argument_list|)
expr_stmt|;
name|psce
operator|.
name|setTimestamp
argument_list|(
name|CalendarUtils
operator|.
name|getDate
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|element
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTimestampAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sEnrollmentElementName
argument_list|)
argument_list|,
operator|(
name|dateFormat
operator|+
literal|" "
operator|+
name|timeFormat
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|psce
operator|.
name|setChangedBy
argument_list|(
name|getOptionalStringAttribute
argument_list|(
name|element
argument_list|,
name|PointInTimeDataExport
operator|.
name|sChangedByAttribute
argument_list|)
argument_list|)
expr_stmt|;
name|psce
operator|.
name|setPitStudent
argument_list|(
name|s
argument_list|)
expr_stmt|;
name|s
operator|.
name|addTopitClassEnrollments
argument_list|(
name|psce
argument_list|)
expr_stmt|;
name|psce
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|psce
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// If a setup action needs to take place before the data is loaded override this method
specifier|private
name|void
name|preLoadAction
parameter_list|()
block|{
comment|// ???
block|}
comment|// If a post load action needs to take place before the data is loaded override this method
specifier|private
name|void
name|postLoadAction
parameter_list|()
block|{
comment|// ????
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|loadOfferings
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
name|Element
name|offeringsElement
init|=
name|rootElement
operator|.
name|element
argument_list|(
name|PointInTimeDataExport
operator|.
name|sOfferingsElementName
argument_list|)
decl_stmt|;
name|ProgressTracker
name|progressTracker
init|=
operator|new
name|ProgressTracker
argument_list|(
literal|"Instructional Offerings"
argument_list|,
name|offeringsElement
operator|.
name|elements
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
name|info
argument_list|(
literal|"Loading data for "
operator|+
name|offeringsElement
operator|.
name|elements
argument_list|()
operator|.
name|size
argument_list|()
operator|+
literal|" offerings."
argument_list|)
expr_stmt|;
name|String
name|progress
init|=
literal|null
decl_stmt|;
name|int
name|successCount
init|=
literal|0
decl_stmt|;
name|int
name|failCount
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Element
name|offeringElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|offeringsElement
operator|.
name|elements
argument_list|()
control|)
block|{
try|try
block|{
name|elementOffering
argument_list|(
name|offeringElement
argument_list|)
expr_stmt|;
name|flush
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|successCount
operator|++
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|addNote
argument_list|(
literal|"Not Loading 'offering' Error:  "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|addNote
argument_list|(
literal|"\t "
operator|+
name|offeringElement
operator|.
name|asXML
argument_list|()
argument_list|)
expr_stmt|;
name|failCount
operator|++
expr_stmt|;
throw|throw
operator|(
name|e
operator|)
throw|;
block|}
name|progress
operator|=
name|progressTracker
operator|.
name|getProgressStringIfNeeded
argument_list|()
expr_stmt|;
if|if
condition|(
name|progress
operator|!=
literal|null
condition|)
block|{
name|info
argument_list|(
name|progress
argument_list|)
expr_stmt|;
block|}
block|}
name|info
argument_list|(
literal|"Loading of offering data complete.  "
operator|+
name|successCount
operator|+
literal|" successfully loaded.  "
operator|+
name|failCount
operator|+
literal|" failed to load."
argument_list|)
expr_stmt|;
comment|//		progress = progressTracker.getElapsedTimeAnalysisString();
comment|//		if (progress != null) {
comment|//			info(progress);
comment|//		}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|elementOffering
parameter_list|(
name|Element
name|instructionalOfferingElement
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
operator|!
name|instructionalOfferingElement
operator|.
name|getName
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|PointInTimeDataExport
operator|.
name|sOfferingElementName
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Expecting to find an '"
operator|+
name|PointInTimeDataExport
operator|.
name|sOfferingElementName
operator|+
literal|"' at this level, instead found '"
operator|+
name|instructionalOfferingElement
operator|.
name|getName
argument_list|()
operator|+
literal|"'."
argument_list|)
throw|;
block|}
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|instructionalOfferingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sOfferingElementName
argument_list|)
argument_list|)
decl_stmt|;
name|PitInstructionalOffering
name|pio
init|=
operator|new
name|PitInstructionalOffering
argument_list|()
decl_stmt|;
if|if
condition|(
name|instructionalOfferings
operator|.
name|get
argument_list|(
name|uid
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|pio
operator|.
name|setInstructionalOffering
argument_list|(
name|instructionalOfferings
operator|.
name|get
argument_list|(
name|uid
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|externalId
init|=
name|getOptionalStringAttribute
argument_list|(
name|instructionalOfferingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sExternalIdAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|externalId
operator|!=
literal|null
condition|)
block|{
name|pio
operator|.
name|setExternalUniqueId
argument_list|(
name|externalId
argument_list|)
expr_stmt|;
block|}
name|pio
operator|.
name|setInstrOfferingPermId
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|instructionalOfferingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sPermanentIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sOfferingElementName
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|limitStr
init|=
name|getRequiredStringAttribute
argument_list|(
name|instructionalOfferingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sLimitAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sOfferingElementName
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
literal|"inf"
operator|.
name|equalsIgnoreCase
argument_list|(
name|limitStr
argument_list|)
condition|)
block|{
name|pio
operator|.
name|setLimit
argument_list|(
operator|new
name|Integer
argument_list|(
name|limitStr
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|pio
operator|.
name|setDemand
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|instructionalOfferingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sDemandAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sOfferingElementName
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|uidRollFwdFrmStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|instructionalOfferingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdRolledForwardFromAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|uidRollFwdFrmStr
operator|!=
literal|null
condition|)
block|{
name|pio
operator|.
name|setUniqueIdRolledForwardFrom
argument_list|(
operator|new
name|Long
argument_list|(
name|uidRollFwdFrmStr
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|pio
operator|.
name|setPointInTimeData
argument_list|(
name|pointInTimeData
argument_list|)
expr_stmt|;
name|pio
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|pio
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Element
name|element
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|instructionalOfferingElement
operator|.
name|elements
argument_list|()
control|)
block|{
if|if
condition|(
name|PointInTimeDataExport
operator|.
name|sCourseElementName
operator|.
name|equals
argument_list|(
name|element
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|elementCourse
argument_list|(
name|element
argument_list|,
name|pio
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|PointInTimeDataExport
operator|.
name|sConfigElementName
operator|.
name|equals
argument_list|(
name|element
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|elementInstrOffrConfig
argument_list|(
name|element
argument_list|,
name|pio
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|initializeLoad
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
name|initializeDateTimeFormats
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
name|initializeSessionIndependentData
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
name|initializeSessionData
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
name|loadSetupData
argument_list|()
expr_stmt|;
name|logXmlFileCreateInformation
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initializeSessionIndependentData
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
name|initializeRoomTypeData
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
name|initializePositionTypeData
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
name|initializeTeachingResponsibilityData
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
name|initializeCourseTypeData
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
name|initializeClassDurationTypeData
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
name|initializeCreditTypeData
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
name|initializeCreditUnitTypeData
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
name|initializeInstructionalMethodData
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|elementRoomType
parameter_list|(
name|Element
name|roomTypeElement
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|uidString
init|=
name|getRequiredStringAttribute
argument_list|(
name|roomTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sRoomTypeElementName
argument_list|)
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|uidString
argument_list|)
decl_stmt|;
name|String
name|reference
init|=
name|getRequiredStringAttribute
argument_list|(
name|roomTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sReferenceAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sRoomTypeElementName
argument_list|)
decl_stmt|;
name|RoomType
name|rt
init|=
name|roomTypesByRef
operator|.
name|get
argument_list|(
name|reference
argument_list|)
decl_stmt|;
if|if
condition|(
name|rt
operator|==
literal|null
condition|)
block|{
name|String
name|label
init|=
name|getRequiredStringAttribute
argument_list|(
name|roomTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sLabelAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sRoomTypeElementName
argument_list|)
decl_stmt|;
name|Boolean
name|isRoom
init|=
name|getRequiredBooleanAttribute
argument_list|(
name|roomTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sIsRoomAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sRoomTypeElementName
argument_list|)
decl_stmt|;
name|Integer
name|order
init|=
name|getRequiredIntegerAttribute
argument_list|(
name|roomTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sOrderAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sRoomTypeElementName
argument_list|)
decl_stmt|;
name|rt
operator|=
operator|new
name|RoomType
argument_list|()
expr_stmt|;
name|rt
operator|.
name|setReference
argument_list|(
name|reference
argument_list|)
expr_stmt|;
name|rt
operator|.
name|setLabel
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|rt
operator|.
name|setRoom
argument_list|(
name|isRoom
argument_list|)
expr_stmt|;
name|rt
operator|.
name|setOrd
argument_list|(
name|order
argument_list|)
expr_stmt|;
name|rt
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|rt
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|roomTypes
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|rt
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|elementPositionType
parameter_list|(
name|Element
name|positionTypeElement
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|uidString
init|=
name|getRequiredStringAttribute
argument_list|(
name|positionTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sRoomTypeElementName
argument_list|)
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|uidString
argument_list|)
decl_stmt|;
name|String
name|reference
init|=
name|getRequiredStringAttribute
argument_list|(
name|positionTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sReferenceAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sRoomTypeElementName
argument_list|)
decl_stmt|;
name|PositionType
name|pt
init|=
name|positionTypesByRef
operator|.
name|get
argument_list|(
name|reference
argument_list|)
decl_stmt|;
if|if
condition|(
name|pt
operator|==
literal|null
condition|)
block|{
name|String
name|label
init|=
name|getRequiredStringAttribute
argument_list|(
name|positionTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sLabelAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sRoomTypeElementName
argument_list|)
decl_stmt|;
name|Integer
name|order
init|=
name|getRequiredIntegerAttribute
argument_list|(
name|positionTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sOrderAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sRoomTypeElementName
argument_list|)
decl_stmt|;
name|pt
operator|=
operator|new
name|PositionType
argument_list|()
expr_stmt|;
name|pt
operator|.
name|setReference
argument_list|(
name|reference
argument_list|)
expr_stmt|;
name|pt
operator|.
name|setLabel
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|pt
operator|.
name|setSortOrder
argument_list|(
name|order
argument_list|)
expr_stmt|;
name|pt
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|pt
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|positionTypes
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|pt
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|elementTeachingResponsibility
parameter_list|(
name|Element
name|teachingResponsibilityElement
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|uidString
init|=
name|getRequiredStringAttribute
argument_list|(
name|teachingResponsibilityElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTeachingResponsibilityElementName
argument_list|)
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|uidString
argument_list|)
decl_stmt|;
name|String
name|reference
init|=
name|getRequiredStringAttribute
argument_list|(
name|teachingResponsibilityElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sReferenceAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTeachingResponsibilityElementName
argument_list|)
decl_stmt|;
name|TeachingResponsibility
name|tr
init|=
name|teachingResponsibilitiesByRef
operator|.
name|get
argument_list|(
name|reference
argument_list|)
decl_stmt|;
if|if
condition|(
name|tr
operator|==
literal|null
condition|)
block|{
name|String
name|label
init|=
name|getRequiredStringAttribute
argument_list|(
name|teachingResponsibilityElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sLabelAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTeachingResponsibilityElementName
argument_list|)
decl_stmt|;
name|String
name|abbreviation
init|=
name|getRequiredStringAttribute
argument_list|(
name|teachingResponsibilityElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAbbreviationAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTeachingResponsibilityElementName
argument_list|)
decl_stmt|;
name|Boolean
name|instructor
init|=
name|getRequiredBooleanAttribute
argument_list|(
name|teachingResponsibilityElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sInstructorAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTeachingResponsibilityElementName
argument_list|)
decl_stmt|;
name|Boolean
name|coordinator
init|=
name|getRequiredBooleanAttribute
argument_list|(
name|teachingResponsibilityElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCoordinatorAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTeachingResponsibilityElementName
argument_list|)
decl_stmt|;
name|tr
operator|=
operator|new
name|TeachingResponsibility
argument_list|()
expr_stmt|;
name|tr
operator|.
name|setReference
argument_list|(
name|reference
argument_list|)
expr_stmt|;
name|tr
operator|.
name|setLabel
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|tr
operator|.
name|setInstructor
argument_list|(
name|instructor
argument_list|)
expr_stmt|;
name|tr
operator|.
name|setCoordinator
argument_list|(
name|coordinator
argument_list|)
expr_stmt|;
name|tr
operator|.
name|setAbbreviation
argument_list|(
name|abbreviation
argument_list|)
expr_stmt|;
name|tr
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|tr
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|teachingResponsibilities
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|tr
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|initializeRoomTypeData
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|RoomType
name|roomType
range|:
name|RoomType
operator|.
name|findAll
argument_list|()
control|)
block|{
name|roomTypesByRef
operator|.
name|put
argument_list|(
name|roomType
operator|.
name|getReference
argument_list|()
argument_list|,
name|roomType
argument_list|)
expr_stmt|;
block|}
name|Element
name|roomTypesElement
init|=
name|rootElement
operator|.
name|element
argument_list|(
name|PointInTimeDataExport
operator|.
name|sRoomTypesElementName
argument_list|)
decl_stmt|;
for|for
control|(
name|Element
name|roomTypeElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|roomTypesElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementRoomType
argument_list|(
name|roomTypeElement
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|initializeCreditTypeData
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|CourseCreditType
name|creditType
range|:
name|CourseCreditType
operator|.
name|getCourseCreditTypeList
argument_list|()
control|)
block|{
name|creditTypesByRef
operator|.
name|put
argument_list|(
name|creditType
operator|.
name|getReference
argument_list|()
argument_list|,
name|creditType
argument_list|)
expr_stmt|;
block|}
name|Element
name|creditTypesElement
init|=
name|rootElement
operator|.
name|element
argument_list|(
name|PointInTimeDataExport
operator|.
name|sCreditTypesElementName
argument_list|)
decl_stmt|;
for|for
control|(
name|Element
name|creditTypeElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|creditTypesElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementCreditType
argument_list|(
name|creditTypeElement
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|elementCreditType
parameter_list|(
name|Element
name|creditTypeElement
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|uidString
init|=
name|getRequiredStringAttribute
argument_list|(
name|creditTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCreditTypeElementName
argument_list|)
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|uidString
argument_list|)
decl_stmt|;
name|String
name|reference
init|=
name|getRequiredStringAttribute
argument_list|(
name|creditTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sReferenceAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCreditTypeElementName
argument_list|)
decl_stmt|;
name|CourseCreditType
name|ct
init|=
name|creditTypesByRef
operator|.
name|get
argument_list|(
name|reference
argument_list|)
decl_stmt|;
if|if
condition|(
name|ct
operator|==
literal|null
condition|)
block|{
name|String
name|label
init|=
name|getRequiredStringAttribute
argument_list|(
name|creditTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sLabelAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCreditTypeElementName
argument_list|)
decl_stmt|;
name|String
name|abbreviation
init|=
name|getRequiredStringAttribute
argument_list|(
name|creditTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAbbreviationAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCreditTypeElementName
argument_list|)
decl_stmt|;
name|String
name|masterCode
init|=
name|getOptionalStringAttribute
argument_list|(
name|creditTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sLegacyCourseMasterCodeAttribute
argument_list|)
decl_stmt|;
name|ct
operator|=
operator|new
name|CourseCreditType
argument_list|()
expr_stmt|;
name|ct
operator|.
name|setReference
argument_list|(
name|reference
argument_list|)
expr_stmt|;
name|ct
operator|.
name|setLabel
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|ct
operator|.
name|setAbbreviation
argument_list|(
name|abbreviation
argument_list|)
expr_stmt|;
if|if
condition|(
name|masterCode
operator|!=
literal|null
condition|)
block|{
name|ct
operator|.
name|setLegacyCourseMasterCode
argument_list|(
name|masterCode
argument_list|)
expr_stmt|;
block|}
name|ct
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|ct
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|creditTypes
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|ct
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|initializeCreditUnitTypeData
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|CourseCreditUnitType
name|creditUnitType
range|:
name|CourseCreditUnitType
operator|.
name|getCourseCreditUnitTypeList
argument_list|()
control|)
block|{
name|creditUnitTypesByRef
operator|.
name|put
argument_list|(
name|creditUnitType
operator|.
name|getReference
argument_list|()
argument_list|,
name|creditUnitType
argument_list|)
expr_stmt|;
block|}
name|Element
name|creditUnitTypesElement
init|=
name|rootElement
operator|.
name|element
argument_list|(
name|PointInTimeDataExport
operator|.
name|sCreditUnitTypesElementName
argument_list|)
decl_stmt|;
for|for
control|(
name|Element
name|creditUnitTypeElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|creditUnitTypesElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementCreditUnitType
argument_list|(
name|creditUnitTypeElement
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|elementCreditUnitType
parameter_list|(
name|Element
name|creditUnitTypeElement
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|uidString
init|=
name|getRequiredStringAttribute
argument_list|(
name|creditUnitTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCreditUnitTypeElementName
argument_list|)
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|uidString
argument_list|)
decl_stmt|;
name|String
name|reference
init|=
name|getRequiredStringAttribute
argument_list|(
name|creditUnitTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sReferenceAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCreditUnitTypeElementName
argument_list|)
decl_stmt|;
name|CourseCreditUnitType
name|cut
init|=
name|creditUnitTypesByRef
operator|.
name|get
argument_list|(
name|reference
argument_list|)
decl_stmt|;
if|if
condition|(
name|cut
operator|==
literal|null
condition|)
block|{
name|String
name|label
init|=
name|getRequiredStringAttribute
argument_list|(
name|creditUnitTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sLabelAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCreditUnitTypeElementName
argument_list|)
decl_stmt|;
name|String
name|abbreviation
init|=
name|getRequiredStringAttribute
argument_list|(
name|creditUnitTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAbbreviationAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCreditUnitTypeElementName
argument_list|)
decl_stmt|;
name|cut
operator|=
operator|new
name|CourseCreditUnitType
argument_list|()
expr_stmt|;
name|cut
operator|.
name|setReference
argument_list|(
name|reference
argument_list|)
expr_stmt|;
name|cut
operator|.
name|setLabel
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|cut
operator|.
name|setAbbreviation
argument_list|(
name|abbreviation
argument_list|)
expr_stmt|;
name|cut
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|cut
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|creditUnitTypes
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|cut
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|initializePositionTypeData
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|PositionType
name|positionType
range|:
operator|(
name|TreeSet
argument_list|<
name|PositionType
argument_list|>
operator|)
name|PositionType
operator|.
name|findAll
argument_list|()
control|)
block|{
name|positionTypesByRef
operator|.
name|put
argument_list|(
name|positionType
operator|.
name|getReference
argument_list|()
argument_list|,
name|positionType
argument_list|)
expr_stmt|;
block|}
name|Element
name|positionTypesElement
init|=
name|rootElement
operator|.
name|element
argument_list|(
name|PointInTimeDataExport
operator|.
name|sPositionTypesElementName
argument_list|)
decl_stmt|;
for|for
control|(
name|Element
name|positionTypeElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|positionTypesElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementPositionType
argument_list|(
name|positionTypeElement
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|initializeTeachingResponsibilityData
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|TeachingResponsibility
name|instructorTeachingResponsibility
range|:
name|TeachingResponsibility
operator|.
name|getInstructorTeachingResponsibilities
argument_list|()
control|)
block|{
name|teachingResponsibilitiesByRef
operator|.
name|put
argument_list|(
name|instructorTeachingResponsibility
operator|.
name|getReference
argument_list|()
argument_list|,
name|instructorTeachingResponsibility
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|TeachingResponsibility
name|coordinatorTeachingResponsibility
range|:
name|TeachingResponsibility
operator|.
name|getCoordinatorTeachingResponsibilities
argument_list|()
control|)
block|{
name|teachingResponsibilitiesByRef
operator|.
name|put
argument_list|(
name|coordinatorTeachingResponsibility
operator|.
name|getReference
argument_list|()
argument_list|,
name|coordinatorTeachingResponsibility
argument_list|)
expr_stmt|;
block|}
name|Element
name|responsibilitiesElement
init|=
name|rootElement
operator|.
name|element
argument_list|(
name|PointInTimeDataExport
operator|.
name|sTeachingResponsibilitiesElementName
argument_list|)
decl_stmt|;
for|for
control|(
name|Element
name|responsibilityElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|responsibilitiesElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementTeachingResponsibility
argument_list|(
name|responsibilityElement
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|elementInstructionalMethod
parameter_list|(
name|Element
name|instructionalMethodElement
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|reference
init|=
name|getRequiredStringAttribute
argument_list|(
name|instructionalMethodElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sReferenceAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sInstructionalMethodElementName
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|instructionalMethods
operator|.
name|containsKey
argument_list|(
name|reference
argument_list|)
condition|)
block|{
name|String
name|label
init|=
name|getRequiredStringAttribute
argument_list|(
name|instructionalMethodElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sLabelAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sInstructionalMethodElementName
argument_list|)
decl_stmt|;
name|Boolean
name|visible
init|=
name|getRequiredBooleanAttribute
argument_list|(
name|instructionalMethodElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sVisibleAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sInstructionalMethodElementName
argument_list|)
decl_stmt|;
name|InstructionalMethod
name|im
init|=
operator|new
name|InstructionalMethod
argument_list|()
decl_stmt|;
name|im
operator|.
name|setReference
argument_list|(
name|reference
argument_list|)
expr_stmt|;
name|im
operator|.
name|setLabel
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|im
operator|.
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
name|im
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|im
argument_list|)
argument_list|)
expr_stmt|;
name|instructionalMethods
operator|.
name|put
argument_list|(
name|im
operator|.
name|getReference
argument_list|()
argument_list|,
name|im
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|initializeInstructionalMethodData
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|InstructionalMethod
name|instructionalMethod
range|:
name|InstructionalMethod
operator|.
name|findAll
argument_list|()
control|)
block|{
name|instructionalMethods
operator|.
name|put
argument_list|(
name|instructionalMethod
operator|.
name|getReference
argument_list|()
argument_list|,
name|instructionalMethod
argument_list|)
expr_stmt|;
block|}
name|Element
name|instructionalMethodsElement
init|=
name|rootElement
operator|.
name|element
argument_list|(
name|PointInTimeDataExport
operator|.
name|sInstructionalMethodsElementName
argument_list|)
decl_stmt|;
for|for
control|(
name|Element
name|instructionalMethodElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|instructionalMethodsElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementInstructionalMethod
argument_list|(
name|instructionalMethodElement
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|elementClassDurationType
parameter_list|(
name|Element
name|classDurationTypeElement
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|reference
init|=
name|getRequiredStringAttribute
argument_list|(
name|classDurationTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sReferenceAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassDurationTypeElementName
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|classDurationTypes
operator|.
name|containsKey
argument_list|(
name|reference
argument_list|)
condition|)
block|{
name|String
name|label
init|=
name|getRequiredStringAttribute
argument_list|(
name|classDurationTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sLabelAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassDurationTypeElementName
argument_list|)
decl_stmt|;
name|String
name|abbreviation
init|=
name|getRequiredStringAttribute
argument_list|(
name|classDurationTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAbbreviationAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassDurationTypeElementName
argument_list|)
decl_stmt|;
name|String
name|implementation
init|=
name|getRequiredStringAttribute
argument_list|(
name|classDurationTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sImplementationAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassDurationTypeElementName
argument_list|)
decl_stmt|;
name|String
name|parameter
init|=
name|getRequiredStringAttribute
argument_list|(
name|classDurationTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sParameterAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassDurationTypeElementName
argument_list|)
decl_stmt|;
name|Boolean
name|visible
init|=
name|getRequiredBooleanAttribute
argument_list|(
name|classDurationTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sVisibleAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassDurationTypeElementName
argument_list|)
decl_stmt|;
name|ClassDurationType
name|cdt
init|=
operator|new
name|ClassDurationType
argument_list|()
decl_stmt|;
name|cdt
operator|.
name|setReference
argument_list|(
name|reference
argument_list|)
expr_stmt|;
name|cdt
operator|.
name|setLabel
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|cdt
operator|.
name|setAbbreviation
argument_list|(
name|abbreviation
argument_list|)
expr_stmt|;
name|cdt
operator|.
name|setImplementation
argument_list|(
name|implementation
argument_list|)
expr_stmt|;
name|cdt
operator|.
name|setParameter
argument_list|(
name|parameter
argument_list|)
expr_stmt|;
name|cdt
operator|.
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
name|cdt
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|cdt
argument_list|)
argument_list|)
expr_stmt|;
name|classDurationTypes
operator|.
name|put
argument_list|(
name|cdt
operator|.
name|getReference
argument_list|()
argument_list|,
name|cdt
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|initializeClassDurationTypeData
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|ClassDurationType
name|classDurationType
range|:
name|ClassDurationType
operator|.
name|findAll
argument_list|()
control|)
block|{
name|classDurationTypes
operator|.
name|put
argument_list|(
name|classDurationType
operator|.
name|getReference
argument_list|()
argument_list|,
name|classDurationType
argument_list|)
expr_stmt|;
block|}
name|Element
name|classDurationTypesElement
init|=
name|rootElement
operator|.
name|element
argument_list|(
name|PointInTimeDataExport
operator|.
name|sClassDurationTypesElementName
argument_list|)
decl_stmt|;
for|for
control|(
name|Element
name|classDurationTypeElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|classDurationTypesElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementClassDurationType
argument_list|(
name|classDurationTypeElement
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|elementCourseType
parameter_list|(
name|Element
name|courseTypeElement
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|uidString
init|=
name|getRequiredStringAttribute
argument_list|(
name|courseTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCourseTypeElementName
argument_list|)
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|uidString
argument_list|)
decl_stmt|;
name|String
name|reference
init|=
name|getRequiredStringAttribute
argument_list|(
name|courseTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sReferenceAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCourseTypeElementName
argument_list|)
decl_stmt|;
name|CourseType
name|ct
init|=
name|courseTypesByRef
operator|.
name|get
argument_list|(
name|reference
argument_list|)
decl_stmt|;
if|if
condition|(
name|ct
operator|==
literal|null
condition|)
block|{
name|String
name|label
init|=
name|getRequiredStringAttribute
argument_list|(
name|courseTypeElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sLabelAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCourseTypeElementName
argument_list|)
decl_stmt|;
name|ct
operator|=
operator|new
name|CourseType
argument_list|()
expr_stmt|;
name|ct
operator|.
name|setReference
argument_list|(
name|reference
argument_list|)
expr_stmt|;
name|ct
operator|.
name|setLabel
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|ct
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|ct
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|courseTypes
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|ct
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|initializeCourseTypeData
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|CourseType
name|courseType
range|:
operator|(
name|List
argument_list|<
name|CourseType
argument_list|>
operator|)
name|getHibSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"from CourseType"
argument_list|)
operator|.
name|list
argument_list|()
control|)
block|{
name|courseTypesByRef
operator|.
name|put
argument_list|(
name|courseType
operator|.
name|getReference
argument_list|()
argument_list|,
name|courseType
argument_list|)
expr_stmt|;
block|}
name|Element
name|courseTypesElement
init|=
name|rootElement
operator|.
name|element
argument_list|(
name|PointInTimeDataExport
operator|.
name|sCourseTypesElementName
argument_list|)
decl_stmt|;
for|for
control|(
name|Element
name|courseTypeElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|courseTypesElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementCourseType
argument_list|(
name|courseTypeElement
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|logXmlFileCreateInformation
parameter_list|(
name|Element
name|rootElement
parameter_list|)
block|{
name|String
name|created
init|=
name|getOptionalStringAttribute
argument_list|(
name|rootElement
argument_list|,
literal|"created"
argument_list|)
decl_stmt|;
if|if
condition|(
name|created
operator|!=
literal|null
condition|)
block|{
name|addNote
argument_list|(
literal|"Loading offerings XML file created on: "
operator|+
name|created
argument_list|)
expr_stmt|;
name|ChangeLog
operator|.
name|addChange
argument_list|(
name|getHibSession
argument_list|()
argument_list|,
name|getManager
argument_list|()
argument_list|,
name|session
argument_list|,
name|session
argument_list|,
name|created
argument_list|,
name|ChangeLog
operator|.
name|Source
operator|.
name|DATA_IMPORT_OFFERINGS
argument_list|,
name|ChangeLog
operator|.
name|Operation
operator|.
name|UPDATE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|updateChangeList
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|initializeSession
parameter_list|(
name|Element
name|rootElement
parameter_list|,
name|String
name|rootElementName
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|sessionUidString
init|=
name|getRequiredStringAttribute
argument_list|(
name|rootElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcademicSessionUniqueIdAttribute
argument_list|,
name|rootElementName
argument_list|)
decl_stmt|;
name|String
name|campus
init|=
name|getRequiredStringAttribute
argument_list|(
name|rootElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcademicInitiativeAttribute
argument_list|,
name|rootElementName
argument_list|)
decl_stmt|;
name|String
name|year
init|=
name|getRequiredStringAttribute
argument_list|(
name|rootElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcademicYearAttribute
argument_list|,
name|rootElementName
argument_list|)
decl_stmt|;
name|String
name|term
init|=
name|getRequiredStringAttribute
argument_list|(
name|rootElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcademicTermAttribute
argument_list|,
name|rootElementName
argument_list|)
decl_stmt|;
name|Long
name|sessionUid
init|=
literal|null
decl_stmt|;
try|try
block|{
name|sessionUid
operator|=
operator|new
name|Long
argument_list|(
name|sessionUidString
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|info
argument_list|(
literal|"Could not convert sessionUidString to long: "
operator|+
name|sessionUidString
argument_list|)
expr_stmt|;
name|info
argument_list|(
literal|"Looking up session using academicInitiative:  "
operator|+
name|campus
operator|+
literal|", academicYear:  "
operator|+
name|year
operator|+
literal|" and academicTerm:  "
operator|+
name|term
argument_list|)
expr_stmt|;
name|sessionUid
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|sessionUid
operator|!=
literal|null
condition|)
block|{
name|session
operator|=
name|Session
operator|.
name|getSessionById
argument_list|(
name|sessionUid
argument_list|)
expr_stmt|;
name|info
argument_list|(
literal|"Could find session using uniqueId: "
operator|+
name|sessionUidString
argument_list|)
expr_stmt|;
name|info
argument_list|(
literal|"Looking up session using academicInitiative:  "
operator|+
name|campus
operator|+
literal|", academicYear:  "
operator|+
name|year
operator|+
literal|" and academicTerm:  "
operator|+
name|term
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|session
operator|==
literal|null
condition|)
block|{
name|session
operator|=
name|findSession
argument_list|(
name|campus
argument_list|,
name|year
argument_list|,
name|term
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|session
operator|==
literal|null
condition|)
block|{
name|info
argument_list|(
literal|"No session found for academicInitiative:  "
operator|+
name|campus
operator|+
literal|", academicYear:  "
operator|+
name|year
operator|+
literal|" and academicTerm:  "
operator|+
name|term
argument_list|)
expr_stmt|;
name|info
argument_list|(
literal|"Creating a new academic session based on data from import file"
argument_list|)
expr_stmt|;
name|session
operator|=
operator|new
name|Session
argument_list|()
expr_stmt|;
name|session
operator|.
name|setAcademicInitiative
argument_list|(
name|campus
argument_list|)
expr_stmt|;
name|session
operator|.
name|setAcademicTerm
argument_list|(
name|term
argument_list|)
expr_stmt|;
name|session
operator|.
name|setAcademicYear
argument_list|(
name|year
argument_list|)
expr_stmt|;
name|session
operator|.
name|setSessionBeginDateTime
argument_list|(
name|CalendarUtils
operator|.
name|getDate
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|rootElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sSessionBeginDateAttribute
argument_list|,
name|rootElementName
argument_list|)
argument_list|,
name|dateFormat
argument_list|)
argument_list|)
expr_stmt|;
name|session
operator|.
name|setSessionEndDateTime
argument_list|(
name|CalendarUtils
operator|.
name|getDate
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|rootElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sSessionEndDateAttribute
argument_list|,
name|rootElementName
argument_list|)
argument_list|,
name|dateFormat
argument_list|)
argument_list|)
expr_stmt|;
name|session
operator|.
name|setClassesEndDateTime
argument_list|(
name|CalendarUtils
operator|.
name|getDate
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|rootElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassesEndDateAttribute
argument_list|,
name|rootElementName
argument_list|)
argument_list|,
name|dateFormat
argument_list|)
argument_list|)
expr_stmt|;
name|session
operator|.
name|setExamBeginDate
argument_list|(
name|session
operator|.
name|getClassesEndDateTime
argument_list|()
argument_list|)
expr_stmt|;
name|session
operator|.
name|setEventBeginDate
argument_list|(
name|session
operator|.
name|getSessionBeginDateTime
argument_list|()
argument_list|)
expr_stmt|;
name|session
operator|.
name|setEventEndDate
argument_list|(
name|session
operator|.
name|getSessionEndDateTime
argument_list|()
argument_list|)
expr_stmt|;
name|session
operator|.
name|setStatusType
argument_list|(
name|DepartmentStatusType
operator|.
name|findByRef
argument_list|(
literal|"initial"
argument_list|)
argument_list|)
expr_stmt|;
name|session
operator|.
name|setLastWeekToEnroll
argument_list|(
operator|new
name|Integer
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|session
operator|.
name|setLastWeekToChange
argument_list|(
operator|new
name|Integer
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|session
operator|.
name|setLastWeekToDrop
argument_list|(
operator|new
name|Integer
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|defaultDurationType
init|=
name|getOptionalStringAttribute
argument_list|(
name|rootElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sDurationTypeAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|defaultDurationType
operator|!=
literal|null
condition|)
block|{
name|session
operator|.
name|setDefaultClassDurationType
argument_list|(
name|classDurationTypes
operator|.
name|get
argument_list|(
name|defaultDurationType
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|session
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|session
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|pointInTimeData
operator|=
operator|new
name|PointInTimeData
argument_list|()
expr_stmt|;
name|pointInTimeData
operator|.
name|setName
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|rootElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sPointInTimeNameAttribute
argument_list|,
name|rootElementName
argument_list|)
argument_list|)
expr_stmt|;
name|pointInTimeData
operator|.
name|setNote
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|rootElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sPointInTimeNoteAttribute
argument_list|,
name|rootElementName
argument_list|)
argument_list|)
expr_stmt|;
name|pointInTimeData
operator|.
name|setSavedSuccessfully
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|pointInTimeData
operator|.
name|setSession
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|pointInTimeData
operator|.
name|setTimestamp
argument_list|(
name|CalendarUtils
operator|.
name|getDate
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|rootElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCreatedAttribute
argument_list|,
name|rootElementName
argument_list|)
argument_list|,
operator|(
name|dateFormat
operator|+
literal|" "
operator|+
name|timeFormat
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|pointInTimeData
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|pointInTimeData
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|initializeSessionData
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
name|initializeSession
argument_list|(
name|rootElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sRootElementName
argument_list|)
expr_stmt|;
name|initializeDepartmentData
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
name|initializeCurriculaData
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
name|initializeDatePatternData
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
name|initializeTimePatternData
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
name|initializeLocationData
argument_list|(
name|rootElement
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|initializeCurriculaData
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
name|loadExistingAcademicAreas
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|loadExistingAcademicClassifications
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|loadExistingMajors
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|loadExistingMinors
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|Element
name|academicAreasElement
init|=
name|rootElement
operator|.
name|element
argument_list|(
name|PointInTimeDataExport
operator|.
name|sAcademicAreasElementName
argument_list|)
decl_stmt|;
if|if
condition|(
name|academicAreasElement
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Element
name|academicAreaElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|academicAreasElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementAcademicArea
argument_list|(
name|academicAreaElement
argument_list|)
expr_stmt|;
block|}
block|}
name|Element
name|academicClassificationsElement
init|=
name|rootElement
operator|.
name|element
argument_list|(
name|PointInTimeDataExport
operator|.
name|sAcademicClassificationsElementName
argument_list|)
decl_stmt|;
if|if
condition|(
name|academicClassificationsElement
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Element
name|academicClassificationElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|academicClassificationsElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementAcademicClassification
argument_list|(
name|academicClassificationElement
argument_list|)
expr_stmt|;
block|}
block|}
name|Element
name|majorsElement
init|=
name|rootElement
operator|.
name|element
argument_list|(
name|PointInTimeDataExport
operator|.
name|sMajorsElementName
argument_list|)
decl_stmt|;
if|if
condition|(
name|majorsElement
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Element
name|majorElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|majorsElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementMajor
argument_list|(
name|majorElement
argument_list|)
expr_stmt|;
block|}
block|}
name|Element
name|minorsElement
init|=
name|rootElement
operator|.
name|element
argument_list|(
name|PointInTimeDataExport
operator|.
name|sMinorsElementName
argument_list|)
decl_stmt|;
if|if
condition|(
name|minorsElement
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Element
name|minorElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|minorsElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementMinor
argument_list|(
name|minorElement
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|initializeDateTimeFormats
parameter_list|(
name|Element
name|rootElement
parameter_list|)
block|{
name|dateFormat
operator|=
name|getOptionalStringAttribute
argument_list|(
name|rootElement
argument_list|,
literal|"dateFormat"
argument_list|)
expr_stmt|;
name|timeFormat
operator|=
name|getOptionalStringAttribute
argument_list|(
name|rootElement
argument_list|,
literal|"timeFormat"
argument_list|)
expr_stmt|;
if|if
condition|(
name|timeFormat
operator|==
literal|null
condition|)
block|{
name|timeFormat
operator|=
literal|"HHmm"
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|initializeTrimLeadingZeros
parameter_list|()
block|{
name|trimLeadingZerosFromExternalId
operator|=
name|ApplicationProperty
operator|.
name|DataExchangeTrimLeadingZerosFromExternalIds
operator|.
name|isTrue
argument_list|()
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|initializeDatePatternData
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
name|loadExistingDatePatterns
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|Element
name|datePatternsElement
init|=
name|rootElement
operator|.
name|element
argument_list|(
name|PointInTimeDataExport
operator|.
name|sDatePatternsElementName
argument_list|)
decl_stmt|;
for|for
control|(
name|Element
name|datePatternElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|datePatternsElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementDatePattern
argument_list|(
name|datePatternElement
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|initializeTimePatternData
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
name|loadExistingTimePatterns
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|Element
name|timePatternsElement
init|=
name|rootElement
operator|.
name|element
argument_list|(
name|PointInTimeDataExport
operator|.
name|sTimePatternsElementName
argument_list|)
decl_stmt|;
for|for
control|(
name|Element
name|timePatternElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|timePatternsElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementTimePattern
argument_list|(
name|timePatternElement
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|elementDatePattern
parameter_list|(
name|Element
name|datePatternElement
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|uidString
init|=
name|getRequiredStringAttribute
argument_list|(
name|datePatternElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sDatePatternElementName
argument_list|)
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|uidString
argument_list|)
decl_stmt|;
name|String
name|name
init|=
name|getRequiredStringAttribute
argument_list|(
name|datePatternElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNameAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sDatePatternElementName
argument_list|)
decl_stmt|;
name|DatePattern
name|dp
init|=
name|datePatternsByName
operator|.
name|get
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|dp
operator|==
literal|null
condition|)
block|{
name|dp
operator|=
operator|new
name|DatePattern
argument_list|()
expr_stmt|;
name|dp
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|String
name|numWksStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|datePatternElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNumberOfWeeksAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|numWksStr
operator|!=
literal|null
condition|)
block|{
name|dp
operator|.
name|setNumberOfWeeks
argument_list|(
operator|new
name|Float
argument_list|(
name|numWksStr
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|dp
operator|.
name|setOffset
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|datePatternElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sOffsetAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sDatePatternElementName
argument_list|)
argument_list|)
expr_stmt|;
name|dp
operator|.
name|setPattern
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|datePatternElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sPatternAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sDatePatternElementName
argument_list|)
argument_list|)
expr_stmt|;
name|dp
operator|.
name|setVisible
argument_list|(
name|getRequiredBooleanAttribute
argument_list|(
name|datePatternElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sVisibleAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sDatePatternElementName
argument_list|)
argument_list|)
expr_stmt|;
name|dp
operator|.
name|setType
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|datePatternElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTypeAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sDatePatternElementName
argument_list|)
argument_list|)
expr_stmt|;
name|dp
operator|.
name|setSession
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|dp
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|dp
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|datePatterns
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|dp
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|elementTimePattern
parameter_list|(
name|Element
name|timePatternElement
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|uidString
init|=
name|getRequiredStringAttribute
argument_list|(
name|timePatternElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTimePatternElementName
argument_list|)
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|uidString
argument_list|)
decl_stmt|;
name|String
name|name
init|=
name|getRequiredStringAttribute
argument_list|(
name|timePatternElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNameAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTimePatternElementName
argument_list|)
decl_stmt|;
name|TimePattern
name|tp
init|=
name|timePatternsByName
operator|.
name|get
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|tp
operator|==
literal|null
condition|)
block|{
name|tp
operator|=
operator|new
name|TimePattern
argument_list|()
expr_stmt|;
name|tp
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|tp
operator|.
name|setMinPerMtg
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|timePatternElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sMinutesPerMeetingAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTimePatternElementName
argument_list|)
argument_list|)
expr_stmt|;
name|tp
operator|.
name|setSlotsPerMtg
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|timePatternElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sSlotsPerMeetingAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTimePatternElementName
argument_list|)
argument_list|)
expr_stmt|;
name|tp
operator|.
name|setNrMeetings
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|timePatternElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNumberOfMeetingsPerWeekAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTimePatternElementName
argument_list|)
argument_list|)
expr_stmt|;
name|tp
operator|.
name|setVisible
argument_list|(
name|getRequiredBooleanAttribute
argument_list|(
name|timePatternElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sVisibleAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTimePatternElementName
argument_list|)
argument_list|)
expr_stmt|;
name|tp
operator|.
name|setType
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|timePatternElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTypeAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTimePatternElementName
argument_list|)
argument_list|)
expr_stmt|;
name|tp
operator|.
name|setBreakTime
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|timePatternElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sBreakTimeAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTimePatternElementName
argument_list|)
argument_list|)
expr_stmt|;
name|tp
operator|.
name|setSession
argument_list|(
name|session
argument_list|)
expr_stmt|;
for|for
control|(
name|Element
name|element
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|timePatternElement
operator|.
name|elements
argument_list|()
control|)
block|{
if|if
condition|(
name|element
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|PointInTimeDataExport
operator|.
name|sTimePatternDaysElementName
argument_list|)
condition|)
block|{
name|elementTimePatternDays
argument_list|(
name|element
argument_list|,
name|tp
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|element
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|PointInTimeDataExport
operator|.
name|sTimePatternTimeElementName
argument_list|)
condition|)
block|{
name|elementTimePatternTime
argument_list|(
name|element
argument_list|,
name|tp
argument_list|)
expr_stmt|;
block|}
block|}
name|tp
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|tp
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|timePatterns
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|tp
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|elementTimePatternTime
parameter_list|(
name|Element
name|element
parameter_list|,
name|TimePattern
name|tp
parameter_list|)
throws|throws
name|Exception
block|{
name|TimePatternTime
name|timePatternTime
init|=
operator|new
name|TimePatternTime
argument_list|()
decl_stmt|;
name|timePatternTime
operator|.
name|setStartSlot
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|element
argument_list|,
name|PointInTimeDataExport
operator|.
name|sStartSlotAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTimePatternDaysElementName
argument_list|)
argument_list|)
expr_stmt|;
name|tp
operator|.
name|addTotimes
argument_list|(
name|timePatternTime
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|elementTimePatternDays
parameter_list|(
name|Element
name|element
parameter_list|,
name|TimePattern
name|tp
parameter_list|)
throws|throws
name|Exception
block|{
name|TimePatternDays
name|timePatternDays
init|=
operator|new
name|TimePatternDays
argument_list|()
decl_stmt|;
name|timePatternDays
operator|.
name|setDayCode
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|element
argument_list|,
name|PointInTimeDataExport
operator|.
name|sDayCodeAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTimePatternDaysElementName
argument_list|)
argument_list|)
expr_stmt|;
name|tp
operator|.
name|addTodays
argument_list|(
name|timePatternDays
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|initializeLocationData
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
name|loadExistingBuildings
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|loadExistingLocations
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|Element
name|locationsElement
init|=
name|rootElement
operator|.
name|element
argument_list|(
name|PointInTimeDataExport
operator|.
name|sLocationsElementName
argument_list|)
decl_stmt|;
for|for
control|(
name|Element
name|element
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|locationsElement
operator|.
name|elements
argument_list|()
control|)
block|{
if|if
condition|(
name|element
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|PointInTimeDataExport
operator|.
name|sBuildingElementName
argument_list|)
condition|)
block|{
name|elementBuilding
argument_list|(
name|element
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|element
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|PointInTimeDataExport
operator|.
name|sNonUniversityLocationElementName
argument_list|)
condition|)
block|{
name|elementNonUniversityLocation
argument_list|(
name|element
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|elementNonUniversityLocation
parameter_list|(
name|Element
name|nonUniversityLocationElement
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|uidString
init|=
name|getRequiredStringAttribute
argument_list|(
name|nonUniversityLocationElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNonUniversityLocationElementName
argument_list|)
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|uidString
argument_list|)
decl_stmt|;
name|Long
name|permId
init|=
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|nonUniversityLocationElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sPermanentIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNonUniversityLocationElementName
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|name
init|=
name|getRequiredStringAttribute
argument_list|(
name|nonUniversityLocationElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNameAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNonUniversityLocationElementName
argument_list|)
decl_stmt|;
name|Location
name|l
init|=
name|locationsByName
operator|.
name|get
argument_list|(
name|name
operator|+
name|permId
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|l
operator|==
literal|null
condition|)
block|{
name|NonUniversityLocation
name|n
init|=
operator|new
name|NonUniversityLocation
argument_list|()
decl_stmt|;
name|n
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|n
operator|.
name|setSession
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|session
operator|.
name|addTorooms
argument_list|(
name|n
argument_list|)
expr_stmt|;
name|String
name|roomTypeStr
init|=
name|getRequiredStringAttribute
argument_list|(
name|nonUniversityLocationElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sRoomTypeIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNonUniversityLocationElementName
argument_list|)
decl_stmt|;
name|n
operator|.
name|setRoomType
argument_list|(
name|roomTypes
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|roomTypeStr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|capacityStr
init|=
name|getRequiredStringAttribute
argument_list|(
name|nonUniversityLocationElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCapacityAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNonUniversityLocationElementName
argument_list|)
decl_stmt|;
name|n
operator|.
name|setCapacity
argument_list|(
operator|new
name|Integer
argument_list|(
name|capacityStr
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|externalId
init|=
name|getOptionalStringAttribute
argument_list|(
name|nonUniversityLocationElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sExternalIdAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|externalId
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|setExternalUniqueId
argument_list|(
name|externalId
argument_list|)
expr_stmt|;
block|}
name|String
name|coordinateXstr
init|=
name|getOptionalStringAttribute
argument_list|(
name|nonUniversityLocationElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCoordinateXAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|coordinateXstr
operator|!=
literal|null
condition|)
block|{
name|Double
name|coordinateX
init|=
operator|new
name|Double
argument_list|(
name|coordinateXstr
argument_list|)
decl_stmt|;
name|n
operator|.
name|setCoordinateX
argument_list|(
name|coordinateX
argument_list|)
expr_stmt|;
block|}
name|String
name|coordinateYstr
init|=
name|getOptionalStringAttribute
argument_list|(
name|nonUniversityLocationElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCoordinateXAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|coordinateYstr
operator|!=
literal|null
condition|)
block|{
name|Double
name|coordinateY
init|=
operator|new
name|Double
argument_list|(
name|coordinateYstr
argument_list|)
decl_stmt|;
name|n
operator|.
name|setCoordinateY
argument_list|(
name|coordinateY
argument_list|)
expr_stmt|;
block|}
name|n
operator|.
name|setIgnoreRoomCheck
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|n
operator|.
name|setIgnoreTooFar
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|n
operator|.
name|setPermanentId
argument_list|(
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|nonUniversityLocationElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sPermanentIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNonUniversityLocationElementName
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|n
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|n
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|ctrlDeptIdStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|nonUniversityLocationElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sControllingDepartmentUniqueIdAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|ctrlDeptIdStr
operator|!=
literal|null
condition|)
block|{
name|RoomDept
name|rd
init|=
operator|new
name|RoomDept
argument_list|()
decl_stmt|;
name|rd
operator|.
name|setControl
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|rd
operator|.
name|setDepartment
argument_list|(
name|departments
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|ctrlDeptIdStr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|rd
operator|.
name|setRoom
argument_list|(
name|n
argument_list|)
expr_stmt|;
name|n
operator|.
name|addToroomDepts
argument_list|(
name|rd
argument_list|)
expr_stmt|;
name|rd
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|rd
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|l
operator|=
name|n
expr_stmt|;
block|}
name|locations
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|elementBuilding
parameter_list|(
name|Element
name|buildingElement
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|uidString
init|=
name|getRequiredStringAttribute
argument_list|(
name|buildingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sBuildingElementName
argument_list|)
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|uidString
argument_list|)
decl_stmt|;
name|String
name|abbreviation
init|=
name|getRequiredStringAttribute
argument_list|(
name|buildingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAbbreviationAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sBuildingElementName
argument_list|)
decl_stmt|;
name|Building
name|b
init|=
name|buildingsByAbbv
operator|.
name|get
argument_list|(
name|abbreviation
argument_list|)
decl_stmt|;
if|if
condition|(
name|b
operator|==
literal|null
operator|||
operator|(
operator|!
name|b
operator|.
name|getAbbreviation
argument_list|()
operator|.
name|equals
argument_list|(
name|abbreviation
argument_list|)
operator|)
condition|)
block|{
name|b
operator|=
operator|new
name|Building
argument_list|()
expr_stmt|;
name|b
operator|.
name|setAbbreviation
argument_list|(
name|abbreviation
argument_list|)
expr_stmt|;
name|b
operator|.
name|setSession
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|session
operator|.
name|addTobuildings
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|String
name|name
init|=
name|getRequiredStringAttribute
argument_list|(
name|buildingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNameAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sBuildingElementName
argument_list|)
decl_stmt|;
name|b
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|String
name|externalId
init|=
name|getOptionalStringAttribute
argument_list|(
name|buildingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sExternalIdAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|externalId
operator|!=
literal|null
condition|)
block|{
name|b
operator|.
name|setExternalUniqueId
argument_list|(
name|externalId
argument_list|)
expr_stmt|;
block|}
name|String
name|coordinateXstr
init|=
name|getOptionalStringAttribute
argument_list|(
name|buildingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCoordinateXAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|coordinateXstr
operator|!=
literal|null
condition|)
block|{
name|Double
name|coordinateX
init|=
operator|new
name|Double
argument_list|(
name|coordinateXstr
argument_list|)
decl_stmt|;
name|b
operator|.
name|setCoordinateX
argument_list|(
name|coordinateX
argument_list|)
expr_stmt|;
block|}
name|String
name|coordinateYstr
init|=
name|getOptionalStringAttribute
argument_list|(
name|buildingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCoordinateXAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|coordinateYstr
operator|!=
literal|null
condition|)
block|{
name|Double
name|coordinateY
init|=
operator|new
name|Double
argument_list|(
name|coordinateYstr
argument_list|)
decl_stmt|;
name|b
operator|.
name|setCoordinateY
argument_list|(
name|coordinateY
argument_list|)
expr_stmt|;
block|}
name|b
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|b
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|buildings
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|b
argument_list|)
expr_stmt|;
for|for
control|(
name|Element
name|roomElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|buildingElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementRoom
argument_list|(
name|roomElement
argument_list|,
name|b
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|elementRoom
parameter_list|(
name|Element
name|roomElement
parameter_list|,
name|Building
name|building
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|uidString
init|=
name|getRequiredStringAttribute
argument_list|(
name|roomElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sRoomElementName
argument_list|)
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|uidString
argument_list|)
decl_stmt|;
name|String
name|roomNumber
init|=
name|getRequiredStringAttribute
argument_list|(
name|roomElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sRoomNumberAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sRoomElementName
argument_list|)
decl_stmt|;
name|Long
name|permId
init|=
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|roomElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sPermanentIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sRoomElementName
argument_list|)
argument_list|)
decl_stmt|;
name|Location
name|l
init|=
name|locationsByName
operator|.
name|get
argument_list|(
name|building
operator|.
name|getAbbreviation
argument_list|()
operator|+
name|roomNumber
operator|+
name|permId
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|l
operator|==
literal|null
condition|)
block|{
name|Room
name|r
init|=
operator|new
name|Room
argument_list|()
decl_stmt|;
name|r
operator|.
name|setBuilding
argument_list|(
name|building
argument_list|)
expr_stmt|;
name|r
operator|.
name|setRoomNumber
argument_list|(
name|roomNumber
argument_list|)
expr_stmt|;
name|r
operator|.
name|setSession
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|session
operator|.
name|addTorooms
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|String
name|roomTypeStr
init|=
name|getRequiredStringAttribute
argument_list|(
name|roomElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sRoomTypeIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sRoomElementName
argument_list|)
decl_stmt|;
name|r
operator|.
name|setRoomType
argument_list|(
name|roomTypes
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|roomTypeStr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|capacityStr
init|=
name|getRequiredStringAttribute
argument_list|(
name|roomElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCapacityAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sRoomElementName
argument_list|)
decl_stmt|;
name|r
operator|.
name|setCapacity
argument_list|(
operator|new
name|Integer
argument_list|(
name|capacityStr
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|externalId
init|=
name|getOptionalStringAttribute
argument_list|(
name|roomElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sExternalIdAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|externalId
operator|!=
literal|null
condition|)
block|{
name|r
operator|.
name|setExternalUniqueId
argument_list|(
name|externalId
argument_list|)
expr_stmt|;
block|}
name|r
operator|.
name|setPermanentId
argument_list|(
name|permId
argument_list|)
expr_stmt|;
name|r
operator|.
name|setIgnoreRoomCheck
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setIgnoreTooFar
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|coordinateXstr
init|=
name|getOptionalStringAttribute
argument_list|(
name|roomElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCoordinateXAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|coordinateXstr
operator|!=
literal|null
condition|)
block|{
name|Double
name|coordinateX
init|=
operator|new
name|Double
argument_list|(
name|coordinateXstr
argument_list|)
decl_stmt|;
name|r
operator|.
name|setCoordinateX
argument_list|(
name|coordinateX
argument_list|)
expr_stmt|;
block|}
name|String
name|coordinateYstr
init|=
name|getOptionalStringAttribute
argument_list|(
name|roomElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCoordinateXAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|coordinateYstr
operator|!=
literal|null
condition|)
block|{
name|Double
name|coordinateY
init|=
operator|new
name|Double
argument_list|(
name|coordinateYstr
argument_list|)
decl_stmt|;
name|r
operator|.
name|setCoordinateY
argument_list|(
name|coordinateY
argument_list|)
expr_stmt|;
block|}
name|r
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|r
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|ctrlDeptIdStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|roomElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sControllingDepartmentUniqueIdAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|ctrlDeptIdStr
operator|!=
literal|null
condition|)
block|{
name|RoomDept
name|rd
init|=
operator|new
name|RoomDept
argument_list|()
decl_stmt|;
name|rd
operator|.
name|setControl
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|rd
operator|.
name|setDepartment
argument_list|(
name|departments
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|ctrlDeptIdStr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|rd
operator|.
name|setRoom
argument_list|(
name|r
argument_list|)
expr_stmt|;
name|r
operator|.
name|addToroomDepts
argument_list|(
name|rd
argument_list|)
expr_stmt|;
name|rd
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|rd
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|l
operator|=
name|r
expr_stmt|;
block|}
name|locations
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|initializeDepartmentData
parameter_list|(
name|Element
name|rootElement
parameter_list|)
throws|throws
name|Exception
block|{
name|loadExistingDepartments
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|loadExistingSubjectAreas
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|loadDepartmentalInstructors
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|Element
name|departmentsElement
init|=
name|rootElement
operator|.
name|element
argument_list|(
name|PointInTimeDataExport
operator|.
name|sDepartmentsElementName
argument_list|)
decl_stmt|;
for|for
control|(
name|Element
name|departmentElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|departmentsElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementDepartment
argument_list|(
name|departmentElement
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|elementDepartment
parameter_list|(
name|Element
name|departmentElement
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|uniqueIdStr
init|=
name|getRequiredStringAttribute
argument_list|(
name|departmentElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sDepartmentElementName
argument_list|)
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|uniqueIdStr
argument_list|)
decl_stmt|;
name|String
name|deptCode
init|=
name|getRequiredStringAttribute
argument_list|(
name|departmentElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sDepartmentCode
argument_list|,
name|PointInTimeDataExport
operator|.
name|sDepartmentElementName
argument_list|)
decl_stmt|;
name|Department
name|d
init|=
name|departmentsByCode
operator|.
name|get
argument_list|(
name|deptCode
argument_list|)
decl_stmt|;
if|if
condition|(
name|d
operator|==
literal|null
condition|)
block|{
name|String
name|name
init|=
name|getRequiredStringAttribute
argument_list|(
name|departmentElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNameAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sDepartmentElementName
argument_list|)
decl_stmt|;
name|String
name|abbreviation
init|=
name|getOptionalStringAttribute
argument_list|(
name|departmentElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAbbreviationAttribute
argument_list|)
decl_stmt|;
name|String
name|externalId
init|=
name|getRequiredStringAttribute
argument_list|(
name|departmentElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sExternalIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sDepartmentElementName
argument_list|)
decl_stmt|;
name|d
operator|=
operator|new
name|Department
argument_list|()
expr_stmt|;
if|if
condition|(
name|abbreviation
operator|!=
literal|null
condition|)
block|{
name|d
operator|.
name|setAbbreviation
argument_list|(
name|abbreviation
argument_list|)
expr_stmt|;
block|}
name|d
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|d
operator|.
name|setDeptCode
argument_list|(
name|deptCode
argument_list|)
expr_stmt|;
name|d
operator|.
name|setExternalUniqueId
argument_list|(
name|externalId
argument_list|)
expr_stmt|;
name|d
operator|.
name|setSession
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|d
operator|.
name|setAllowEvents
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|setAllowReqTime
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|setAllowReqRoom
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|setAllowReqDistribution
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|setAllowStudentScheduling
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|setInheritInstructorPreferences
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|setExternalManager
argument_list|(
operator|new
name|Boolean
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|.
name|setDistributionPrefPriority
argument_list|(
operator|new
name|Integer
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|session
operator|.
name|addTodepartments
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|d
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|d
argument_list|)
argument_list|)
expr_stmt|;
name|departmentsByCode
operator|.
name|put
argument_list|(
name|deptCode
argument_list|,
name|d
argument_list|)
expr_stmt|;
block|}
name|departments
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|d
argument_list|)
expr_stmt|;
for|for
control|(
name|Element
name|element
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|departmentElement
operator|.
name|elements
argument_list|()
control|)
block|{
if|if
condition|(
name|element
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|PointInTimeDataExport
operator|.
name|sDeptInstructorElementName
argument_list|)
condition|)
block|{
name|elementDepartmentalInstructor
argument_list|(
name|element
argument_list|,
name|d
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|element
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|PointInTimeDataExport
operator|.
name|sSubjectAreaElementName
argument_list|)
condition|)
block|{
name|elementSubjectArea
argument_list|(
name|element
argument_list|,
name|d
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|elementDepartmentalInstructor
parameter_list|(
name|Element
name|departmentalInstructorElement
parameter_list|,
name|Department
name|department
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|departmentalInstructorElement
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|PointInTimeDataExport
operator|.
name|sDeptInstructorElementName
argument_list|)
condition|)
block|{
name|PitDepartmentalInstructor
name|pitDeptInstr
init|=
operator|new
name|PitDepartmentalInstructor
argument_list|()
decl_stmt|;
name|String
name|uniqueIdStr
init|=
name|getRequiredStringAttribute
argument_list|(
name|departmentalInstructorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sDeptInstructorElementName
argument_list|)
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|uniqueIdStr
argument_list|)
decl_stmt|;
name|String
name|externalId
init|=
name|getOptionalStringAttribute
argument_list|(
name|departmentalInstructorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sExternalIdAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|externalId
operator|!=
literal|null
condition|)
block|{
name|pitDeptInstr
operator|.
name|setExternalUniqueId
argument_list|(
name|externalId
argument_list|)
expr_stmt|;
block|}
name|String
name|firstName
init|=
name|getOptionalStringAttribute
argument_list|(
name|departmentalInstructorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sFirstNameAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|firstName
operator|!=
literal|null
condition|)
block|{
name|pitDeptInstr
operator|.
name|setFirstName
argument_list|(
name|firstName
argument_list|)
expr_stmt|;
block|}
name|String
name|middleName
init|=
name|getOptionalStringAttribute
argument_list|(
name|departmentalInstructorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sMiddleNameAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|middleName
operator|!=
literal|null
condition|)
block|{
name|pitDeptInstr
operator|.
name|setMiddleName
argument_list|(
name|middleName
argument_list|)
expr_stmt|;
block|}
name|String
name|lastName
init|=
name|getOptionalStringAttribute
argument_list|(
name|departmentalInstructorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sLastNameAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|lastName
operator|!=
literal|null
condition|)
block|{
name|pitDeptInstr
operator|.
name|setLastName
argument_list|(
name|lastName
argument_list|)
expr_stmt|;
block|}
name|DepartmentalInstructor
name|di
init|=
name|departmentalInstructorsByName
operator|.
name|get
argument_list|(
operator|(
name|lastName
operator|==
literal|null
condition|?
literal|""
else|:
name|lastName
operator|)
operator|+
operator|(
name|firstName
operator|==
literal|null
condition|?
literal|""
else|:
name|firstName
operator|)
operator|+
operator|(
name|middleName
operator|==
literal|null
condition|?
literal|""
else|:
name|middleName
operator|)
operator|+
operator|(
name|externalId
operator|==
literal|null
condition|?
literal|""
else|:
name|externalId
operator|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|di
operator|!=
literal|null
condition|)
block|{
name|pitDeptInstr
operator|.
name|setDepartmentalInstructor
argument_list|(
name|di
argument_list|)
expr_stmt|;
block|}
name|String
name|careerAcct
init|=
name|getOptionalStringAttribute
argument_list|(
name|departmentalInstructorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCareerAcctAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|careerAcct
operator|!=
literal|null
condition|)
block|{
name|pitDeptInstr
operator|.
name|setCareerAcct
argument_list|(
name|careerAcct
argument_list|)
expr_stmt|;
block|}
name|String
name|email
init|=
name|getOptionalStringAttribute
argument_list|(
name|departmentalInstructorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sEmailAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|email
operator|!=
literal|null
condition|)
block|{
name|pitDeptInstr
operator|.
name|setEmail
argument_list|(
name|email
argument_list|)
expr_stmt|;
block|}
name|String
name|positionTypeIdStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|departmentalInstructorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sPositionTypeUniqueIdAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|positionTypeIdStr
operator|!=
literal|null
condition|)
block|{
name|pitDeptInstr
operator|.
name|setPositionType
argument_list|(
name|positionTypes
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|positionTypeIdStr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|pitDeptInstr
operator|.
name|setDepartment
argument_list|(
name|department
argument_list|)
expr_stmt|;
name|pitDeptInstr
operator|.
name|setPointInTimeData
argument_list|(
name|pointInTimeData
argument_list|)
expr_stmt|;
name|pitDeptInstr
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|pitDeptInstr
argument_list|)
argument_list|)
expr_stmt|;
name|pitDepartmentInstructors
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|pitDeptInstr
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|elementSubjectArea
parameter_list|(
name|Element
name|subjectAreaElement
parameter_list|,
name|Department
name|department
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|subjectAreaElement
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|PointInTimeDataExport
operator|.
name|sSubjectAreaElementName
argument_list|)
condition|)
block|{
name|String
name|subjectAreaAbbreviation
init|=
name|getRequiredStringAttribute
argument_list|(
name|subjectAreaElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sSubjectAreaAbbreviationAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sSubjectAreaElementName
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|subjectAreas
operator|.
name|containsKey
argument_list|(
name|subjectAreaAbbreviation
argument_list|)
condition|)
block|{
name|String
name|title
init|=
name|getRequiredStringAttribute
argument_list|(
name|subjectAreaElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTitleAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sSubjectAreaElementName
argument_list|)
decl_stmt|;
name|String
name|externalId
init|=
name|getRequiredStringAttribute
argument_list|(
name|subjectAreaElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sExternalIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sSubjectAreaElementName
argument_list|)
decl_stmt|;
name|SubjectArea
name|sa
init|=
operator|new
name|SubjectArea
argument_list|()
decl_stmt|;
name|sa
operator|.
name|setSubjectAreaAbbreviation
argument_list|(
name|subjectAreaAbbreviation
argument_list|)
expr_stmt|;
name|sa
operator|.
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|sa
operator|.
name|setExternalUniqueId
argument_list|(
name|externalId
argument_list|)
expr_stmt|;
name|sa
operator|.
name|setDepartment
argument_list|(
name|department
argument_list|)
expr_stmt|;
name|department
operator|.
name|addTosubjectAreas
argument_list|(
name|sa
argument_list|)
expr_stmt|;
name|sa
operator|.
name|setSession
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|session
operator|.
name|addTosubjectAreas
argument_list|(
name|sa
argument_list|)
expr_stmt|;
name|sa
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|sa
argument_list|)
argument_list|)
expr_stmt|;
name|subjectAreas
operator|.
name|put
argument_list|(
name|sa
operator|.
name|getSubjectAreaAbbreviation
argument_list|()
argument_list|,
name|sa
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|elementMajor
parameter_list|(
name|Element
name|majorElement
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|uidString
init|=
name|getRequiredStringAttribute
argument_list|(
name|majorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sMajorElementName
argument_list|)
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|uidString
argument_list|)
decl_stmt|;
name|String
name|code
init|=
name|getRequiredStringAttribute
argument_list|(
name|majorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCodeAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sMajorElementName
argument_list|)
decl_stmt|;
name|PosMajor
name|major
init|=
name|majorsByCode
operator|.
name|get
argument_list|(
name|code
argument_list|)
decl_stmt|;
if|if
condition|(
name|major
operator|==
literal|null
condition|)
block|{
name|String
name|name
init|=
name|getRequiredStringAttribute
argument_list|(
name|majorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNameAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sMajorElementName
argument_list|)
decl_stmt|;
name|major
operator|=
operator|new
name|PosMajor
argument_list|()
expr_stmt|;
name|major
operator|.
name|setCode
argument_list|(
name|code
argument_list|)
expr_stmt|;
name|major
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|major
operator|.
name|setSession
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|String
name|externalId
init|=
name|getOptionalStringAttribute
argument_list|(
name|majorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sExternalIdAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|externalId
operator|!=
literal|null
condition|)
block|{
name|major
operator|.
name|setExternalUniqueId
argument_list|(
name|externalId
argument_list|)
expr_stmt|;
block|}
name|major
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|major
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|majors
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|major
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|elementMinor
parameter_list|(
name|Element
name|minorElement
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|uidString
init|=
name|getRequiredStringAttribute
argument_list|(
name|minorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sMinorElementName
argument_list|)
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|uidString
argument_list|)
decl_stmt|;
name|String
name|code
init|=
name|getRequiredStringAttribute
argument_list|(
name|minorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCodeAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sMinorElementName
argument_list|)
decl_stmt|;
name|PosMinor
name|minor
init|=
name|minorsByCode
operator|.
name|get
argument_list|(
name|code
argument_list|)
decl_stmt|;
if|if
condition|(
name|minor
operator|==
literal|null
condition|)
block|{
name|String
name|name
init|=
name|getRequiredStringAttribute
argument_list|(
name|minorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNameAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sMinorElementName
argument_list|)
decl_stmt|;
name|minor
operator|=
operator|new
name|PosMinor
argument_list|()
expr_stmt|;
name|minor
operator|.
name|setCode
argument_list|(
name|code
argument_list|)
expr_stmt|;
name|minor
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|minor
operator|.
name|setSession
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|String
name|externalId
init|=
name|getOptionalStringAttribute
argument_list|(
name|minorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sExternalIdAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|externalId
operator|!=
literal|null
condition|)
block|{
name|minor
operator|.
name|setExternalUniqueId
argument_list|(
name|externalId
argument_list|)
expr_stmt|;
block|}
name|minor
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|minor
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|minors
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|minor
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|elementAcademicClassification
parameter_list|(
name|Element
name|academicClassificationElement
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|uidString
init|=
name|getRequiredStringAttribute
argument_list|(
name|academicClassificationElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcademicClassificationElementName
argument_list|)
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|uidString
argument_list|)
decl_stmt|;
name|String
name|code
init|=
name|getRequiredStringAttribute
argument_list|(
name|academicClassificationElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCodeAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcademicClassificationElementName
argument_list|)
decl_stmt|;
name|AcademicClassification
name|ac
init|=
name|academicClassificationsByCode
operator|.
name|get
argument_list|(
name|code
argument_list|)
decl_stmt|;
if|if
condition|(
name|ac
operator|==
literal|null
condition|)
block|{
name|String
name|name
init|=
name|getRequiredStringAttribute
argument_list|(
name|academicClassificationElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNameAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcademicClassificationElementName
argument_list|)
decl_stmt|;
name|ac
operator|=
operator|new
name|AcademicClassification
argument_list|()
expr_stmt|;
name|ac
operator|.
name|setCode
argument_list|(
name|code
argument_list|)
expr_stmt|;
name|ac
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|ac
operator|.
name|setSession
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|String
name|externalId
init|=
name|getOptionalStringAttribute
argument_list|(
name|academicClassificationElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sExternalIdAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|externalId
operator|!=
literal|null
condition|)
block|{
name|ac
operator|.
name|setExternalUniqueId
argument_list|(
name|externalId
argument_list|)
expr_stmt|;
block|}
name|ac
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|ac
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|academicClassifications
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|ac
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|elementAcademicArea
parameter_list|(
name|Element
name|academicAreaElement
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|uidString
init|=
name|getRequiredStringAttribute
argument_list|(
name|academicAreaElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcademicAreaElementName
argument_list|)
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|uidString
argument_list|)
decl_stmt|;
name|String
name|abbreviation
init|=
name|getRequiredStringAttribute
argument_list|(
name|academicAreaElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAbbreviationAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcademicAreaElementName
argument_list|)
decl_stmt|;
name|AcademicArea
name|aa
init|=
name|academicAreasByAbbv
operator|.
name|get
argument_list|(
name|abbreviation
argument_list|)
decl_stmt|;
if|if
condition|(
name|aa
operator|==
literal|null
condition|)
block|{
name|String
name|title
init|=
name|getRequiredStringAttribute
argument_list|(
name|academicAreaElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTitleAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sAcademicAreaElementName
argument_list|)
decl_stmt|;
name|aa
operator|=
operator|new
name|AcademicArea
argument_list|()
expr_stmt|;
name|aa
operator|.
name|setAcademicAreaAbbreviation
argument_list|(
name|abbreviation
argument_list|)
expr_stmt|;
name|aa
operator|.
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|aa
operator|.
name|setSession
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|String
name|externalId
init|=
name|getOptionalStringAttribute
argument_list|(
name|academicAreaElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sExternalIdAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|externalId
operator|!=
literal|null
condition|)
block|{
name|aa
operator|.
name|setExternalUniqueId
argument_list|(
name|externalId
argument_list|)
expr_stmt|;
block|}
name|aa
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|aa
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|academicAreas
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|aa
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|loadSetupData
parameter_list|()
throws|throws
name|Exception
block|{
name|loadItypes
argument_list|()
expr_stmt|;
name|loadExistingInstructionalOfferings
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|loadExistingCourseOfferings
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|loadExistingInstrOfferingConfigs
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|loadExistingSchedulingSubparts
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|loadExistingClasses
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|loadExistingStudents
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
for|for
control|(
name|Student
name|s
range|:
operator|(
name|List
argument_list|<
name|Student
argument_list|>
operator|)
name|this
operator|.
name|getHibSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"select distinct s from Student as s where s.session.uniqueId=:sessionId"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
control|)
block|{
name|students
operator|.
name|put
argument_list|(
name|s
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|loadExistingTimePatterns
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|List
argument_list|<
name|TimePattern
argument_list|>
name|patterns
init|=
operator|(
name|List
argument_list|<
name|TimePattern
argument_list|>
operator|)
name|this
operator|.
name|getHibSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"select distinct tp from TimePattern as tp where tp.session.uniqueId=:sessionId"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
decl_stmt|;
for|for
control|(
name|TimePattern
name|tp
range|:
name|patterns
control|)
block|{
name|timePatternsByName
operator|.
name|put
argument_list|(
name|tp
operator|.
name|getName
argument_list|()
argument_list|,
name|tp
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|loadExistingDatePatterns
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|List
argument_list|<
name|DatePattern
argument_list|>
name|patterns
init|=
operator|(
name|List
argument_list|<
name|DatePattern
argument_list|>
operator|)
name|this
operator|.
name|getHibSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"select distinct dp from DatePattern as dp where dp.session.uniqueId=:sessionId"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
decl_stmt|;
for|for
control|(
name|DatePattern
name|dp
range|:
name|patterns
control|)
block|{
name|datePatternsByName
operator|.
name|put
argument_list|(
name|dp
operator|.
name|getName
argument_list|()
argument_list|,
name|dp
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|loadExistingBuildings
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|List
argument_list|<
name|Building
argument_list|>
name|existingBuildings
init|=
operator|(
name|List
argument_list|<
name|Building
argument_list|>
operator|)
name|this
operator|.
name|getHibSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"select distinct b from Building as b where b.session.uniqueId=:sessionId"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
decl_stmt|;
for|for
control|(
name|Building
name|building
range|:
name|existingBuildings
control|)
block|{
name|buildingsByAbbv
operator|.
name|put
argument_list|(
name|building
operator|.
name|getAbbreviation
argument_list|()
argument_list|,
name|building
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|loadExistingLocations
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|List
argument_list|<
name|Room
argument_list|>
name|existingRooms
init|=
operator|(
name|List
argument_list|<
name|Room
argument_list|>
operator|)
name|this
operator|.
name|getHibSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"select distinct r from Room as r where r.session.uniqueId=:sessionId"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
decl_stmt|;
for|for
control|(
name|Room
name|room
range|:
name|existingRooms
control|)
block|{
name|locationsByName
operator|.
name|put
argument_list|(
operator|(
name|room
operator|.
name|getBuildingAbbv
argument_list|()
operator|+
name|room
operator|.
name|getRoomNumber
argument_list|()
operator|+
name|room
operator|.
name|getPermanentId
argument_list|()
operator|.
name|toString
argument_list|()
operator|)
argument_list|,
name|room
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|List
argument_list|<
name|NonUniversityLocation
argument_list|>
name|existingNonUniversityLocation
init|=
operator|(
name|List
argument_list|<
name|NonUniversityLocation
argument_list|>
operator|)
name|this
operator|.
name|getHibSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"select distinct n from NonUniversityLocation as n where n.session.uniqueId=:sessionId"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
decl_stmt|;
for|for
control|(
name|NonUniversityLocation
name|nonUniversityLocation
range|:
name|existingNonUniversityLocation
control|)
block|{
name|locationsByName
operator|.
name|put
argument_list|(
operator|(
name|nonUniversityLocation
operator|.
name|getName
argument_list|()
operator|+
name|nonUniversityLocation
operator|.
name|getPermanentId
argument_list|()
operator|.
name|toString
argument_list|()
operator|)
argument_list|,
name|nonUniversityLocation
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|elementClassInstructor
parameter_list|(
name|Element
name|classInstructorElement
parameter_list|,
name|PitClass
name|pitClass
parameter_list|)
throws|throws
name|Exception
block|{
name|PitClassInstructor
name|pci
init|=
operator|new
name|PitClassInstructor
argument_list|()
decl_stmt|;
name|pci
operator|.
name|setPitClassInstructing
argument_list|(
name|pitClass
argument_list|)
expr_stmt|;
name|pitClass
operator|.
name|addTopitClassInstructors
argument_list|(
name|pci
argument_list|)
expr_stmt|;
name|pci
operator|.
name|setPitDepartmentalInstructor
argument_list|(
name|pitDepartmentInstructors
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|classInstructorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sDepartmentalInstructorUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassInstructorElementName
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|pci
operator|.
name|setPercentShare
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|classInstructorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sShareAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassInstructorElementName
argument_list|)
argument_list|)
expr_stmt|;
name|pci
operator|.
name|setNormalizedPercentShare
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|classInstructorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNormalizedPercentShareAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassInstructorElementName
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|responsibilityId
init|=
name|getOptionalStringAttribute
argument_list|(
name|classInstructorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sResponsibilityUniqueIdAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|responsibilityId
operator|!=
literal|null
condition|)
block|{
name|pci
operator|.
name|setResponsibility
argument_list|(
name|teachingResponsibilities
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|responsibilityId
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|pci
operator|.
name|setLead
argument_list|(
operator|new
name|Boolean
argument_list|(
name|getOptionalBooleanAttribute
argument_list|(
name|classInstructorElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sLeadAttribute
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|pci
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|pci
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|elementCourse
parameter_list|(
name|Element
name|courseElement
parameter_list|,
name|PitInstructionalOffering
name|pitInstructionalOffering
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|courseElement
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|PointInTimeDataExport
operator|.
name|sCourseElementName
argument_list|)
condition|)
block|{
name|PitCourseOffering
name|pco
init|=
operator|new
name|PitCourseOffering
argument_list|()
decl_stmt|;
name|pco
operator|.
name|setPitInstructionalOffering
argument_list|(
name|pitInstructionalOffering
argument_list|)
expr_stmt|;
name|pitInstructionalOffering
operator|.
name|addTopitCourseOfferings
argument_list|(
name|pco
argument_list|)
expr_stmt|;
name|pco
operator|.
name|setSubjectArea
argument_list|(
name|subjectAreas
operator|.
name|get
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|courseElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sSubjectAreaAbbreviationAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCourseElementName
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|pco
operator|.
name|setCourseNbr
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|courseElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCourseNbrAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCourseElementName
argument_list|)
argument_list|)
expr_stmt|;
name|pco
operator|.
name|setIsControl
argument_list|(
name|getOptionalBooleanAttribute
argument_list|(
name|courseElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sControllingAttribute
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|pco
operator|.
name|setPermId
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|courseElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sPermanentIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCourseElementName
argument_list|)
argument_list|)
expr_stmt|;
name|pco
operator|.
name|setExternalUniqueId
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|courseElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sExternalIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCourseElementName
argument_list|)
argument_list|)
expr_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|courseElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCourseElementName
argument_list|)
argument_list|)
decl_stmt|;
name|CourseOffering
name|co
init|=
name|courseOfferings
operator|.
name|get
argument_list|(
name|uid
argument_list|)
decl_stmt|;
if|if
condition|(
name|co
operator|!=
literal|null
operator|&&
name|co
operator|.
name|getSubjectArea
argument_list|()
operator|.
name|getUniqueId
argument_list|()
operator|.
name|equals
argument_list|(
name|pco
operator|.
name|getSubjectArea
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|&&
name|co
operator|.
name|getCourseNbr
argument_list|()
operator|.
name|equals
argument_list|(
name|pco
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
condition|)
block|{
name|pco
operator|.
name|setCourseOffering
argument_list|(
name|co
argument_list|)
expr_stmt|;
block|}
name|String
name|title
init|=
name|getOptionalStringAttribute
argument_list|(
name|courseElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTitleAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|title
operator|!=
literal|null
condition|)
block|{
name|pco
operator|.
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
block|}
name|Integer
name|projectedDemand
init|=
name|getOptionalIntegerAttribute
argument_list|(
name|courseElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sProjectedDemandAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|projectedDemand
operator|!=
literal|null
condition|)
block|{
name|pco
operator|.
name|setProjectedDemand
argument_list|(
name|projectedDemand
argument_list|)
expr_stmt|;
block|}
name|Integer
name|lastlikeDemand
init|=
name|getOptionalIntegerAttribute
argument_list|(
name|courseElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sLastlikeDemandAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|lastlikeDemand
operator|!=
literal|null
condition|)
block|{
name|pco
operator|.
name|setDemand
argument_list|(
name|lastlikeDemand
argument_list|)
expr_stmt|;
block|}
name|Integer
name|nbrExpectedStudents
init|=
name|getOptionalIntegerAttribute
argument_list|(
name|courseElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNumberExpectedStudentsAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|nbrExpectedStudents
operator|!=
literal|null
condition|)
block|{
name|pco
operator|.
name|setNbrExpectedStudents
argument_list|(
name|nbrExpectedStudents
argument_list|)
expr_stmt|;
block|}
name|String
name|courseTypeIdStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|courseElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCourseTypeIdAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|courseTypeIdStr
operator|!=
literal|null
condition|)
block|{
name|pco
operator|.
name|setCourseType
argument_list|(
name|courseTypes
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|courseTypeIdStr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|uidRollFwdFrmStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|courseElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdRolledForwardFromAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|uidRollFwdFrmStr
operator|!=
literal|null
condition|)
block|{
name|pco
operator|.
name|setUniqueIdRolledForwardFrom
argument_list|(
operator|new
name|Long
argument_list|(
name|uidRollFwdFrmStr
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|externalId
init|=
name|getOptionalStringAttribute
argument_list|(
name|courseElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sExternalIdAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|externalId
operator|!=
literal|null
condition|)
block|{
name|pco
operator|.
name|setExternalUniqueId
argument_list|(
name|externalId
argument_list|)
expr_stmt|;
block|}
name|pco
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|pco
argument_list|)
argument_list|)
expr_stmt|;
name|pitCourseOfferings
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|pco
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|elementInstrOffrConfig
parameter_list|(
name|Element
name|configElement
parameter_list|,
name|PitInstructionalOffering
name|pitInstructionalOffering
parameter_list|)
throws|throws
name|Exception
block|{
name|PitInstrOfferingConfig
name|pioc
init|=
operator|new
name|PitInstrOfferingConfig
argument_list|()
decl_stmt|;
name|InstrOfferingConfig
name|ioc
init|=
name|instrOfferingConfigs
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|configElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sConfigElementName
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|ioc
operator|!=
literal|null
condition|)
block|{
name|pioc
operator|.
name|setInstrOfferingConfig
argument_list|(
name|ioc
argument_list|)
expr_stmt|;
block|}
name|pioc
operator|.
name|setName
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|configElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNameAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sConfigElementName
argument_list|)
argument_list|)
expr_stmt|;
name|pioc
operator|.
name|setPitInstructionalOffering
argument_list|(
name|pitInstructionalOffering
argument_list|)
expr_stmt|;
name|pitInstructionalOffering
operator|.
name|addTopitInstrOfferingConfigs
argument_list|(
name|pioc
argument_list|)
expr_stmt|;
name|pioc
operator|.
name|setUnlimitedEnrollment
argument_list|(
name|getRequiredBooleanAttribute
argument_list|(
name|configElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUnlimitedEnrollmentAttributeName
argument_list|,
name|PointInTimeDataExport
operator|.
name|sConfigElementName
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|durationTypeStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|configElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sDurationTypeAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|durationTypeStr
operator|!=
literal|null
condition|)
block|{
name|pioc
operator|.
name|setClassDurationType
argument_list|(
name|classDurationTypes
operator|.
name|get
argument_list|(
name|durationTypeStr
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|instructionalMethodStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|configElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sInstructionalMethodAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|instructionalMethodStr
operator|!=
literal|null
condition|)
block|{
name|pioc
operator|.
name|setInstructionalMethod
argument_list|(
name|instructionalMethods
operator|.
name|get
argument_list|(
name|instructionalMethodStr
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|uidRollFwdFrmStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|configElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdRolledForwardFromAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|uidRollFwdFrmStr
operator|!=
literal|null
condition|)
block|{
name|pioc
operator|.
name|setUniqueIdRolledForwardFrom
argument_list|(
operator|new
name|Long
argument_list|(
name|uidRollFwdFrmStr
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|pioc
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|pioc
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Element
name|subpartElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|configElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementSubpart
argument_list|(
name|subpartElement
argument_list|,
name|pioc
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|elementClass
parameter_list|(
name|Element
name|classElement
parameter_list|,
name|PitSchedulingSubpart
name|pitSchedulingSubpart
parameter_list|)
throws|throws
name|Exception
block|{
name|PitClass
name|pc
init|=
operator|new
name|PitClass
argument_list|()
decl_stmt|;
name|Long
name|uid
init|=
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|classElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassElementName
argument_list|)
argument_list|)
decl_stmt|;
name|Class_
name|c
init|=
name|classes
operator|.
name|get
argument_list|(
name|uid
argument_list|)
decl_stmt|;
if|if
condition|(
name|c
operator|!=
literal|null
condition|)
block|{
name|pc
operator|.
name|setClazz
argument_list|(
name|c
argument_list|)
expr_stmt|;
block|}
name|pc
operator|.
name|setPitSchedulingSubpart
argument_list|(
name|pitSchedulingSubpart
argument_list|)
expr_stmt|;
name|pitSchedulingSubpart
operator|.
name|addTopitClasses
argument_list|(
name|pc
argument_list|)
expr_stmt|;
name|String
name|parentClassUidStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|classElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sParentClassUniqueIdAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|parentClassUidStr
operator|!=
literal|null
condition|)
block|{
name|PitClass
name|parentPitClass
init|=
name|pitClasses
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|parentClassUidStr
argument_list|)
argument_list|)
decl_stmt|;
name|pc
operator|.
name|setPitParentClass
argument_list|(
name|parentPitClass
argument_list|)
expr_stmt|;
name|parentPitClass
operator|.
name|addTopitChildClasses
argument_list|(
name|pc
argument_list|)
expr_stmt|;
block|}
name|pc
operator|.
name|setDatePattern
argument_list|(
name|datePatterns
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|classElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sDatePatternUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassElementName
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|timePatternIdStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|classElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTimePatternUniqueIdAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|timePatternIdStr
operator|!=
literal|null
condition|)
block|{
name|pc
operator|.
name|setTimePattern
argument_list|(
name|timePatterns
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|timePatternIdStr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|pc
operator|.
name|setManagingDept
argument_list|(
name|departments
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|classElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sManagingDepartmentUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassElementName
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|classSuffix
init|=
name|getOptionalStringAttribute
argument_list|(
name|classElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassSuffixAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|classSuffix
operator|!=
literal|null
condition|)
block|{
name|pc
operator|.
name|setClassSuffix
argument_list|(
name|classSuffix
argument_list|)
expr_stmt|;
block|}
name|pc
operator|.
name|setSectionNumber
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|classElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sSectionNumberAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassElementName
argument_list|)
argument_list|)
expr_stmt|;
name|pc
operator|.
name|setEnabledForStudentScheduling
argument_list|(
operator|new
name|Boolean
argument_list|(
name|getOptionalBooleanAttribute
argument_list|(
name|classElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sStudentSchedulingAttribute
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|limitStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|classElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sLimitAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|limitStr
operator|!=
literal|null
operator|&&
operator|!
name|limitStr
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"inf"
argument_list|)
condition|)
block|{
name|pc
operator|.
name|setLimit
argument_list|(
operator|new
name|Integer
argument_list|(
name|limitStr
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|Integer
name|numberOfRooms
init|=
name|getOptionalIntegerAttribute
argument_list|(
name|classElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNumberOfRoomsAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|numberOfRooms
operator|!=
literal|null
condition|)
block|{
name|pc
operator|.
name|setNbrRooms
argument_list|(
name|numberOfRooms
argument_list|)
expr_stmt|;
block|}
name|String
name|uidRollFwdFrmStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|classElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdRolledForwardFromAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|uidRollFwdFrmStr
operator|!=
literal|null
condition|)
block|{
name|pc
operator|.
name|setUniqueIdRolledForwardFrom
argument_list|(
operator|new
name|Long
argument_list|(
name|uidRollFwdFrmStr
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|externalId
init|=
name|getOptionalStringAttribute
argument_list|(
name|classElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sExternalIdAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|externalId
operator|!=
literal|null
condition|)
block|{
name|pc
operator|.
name|setExternalUniqueId
argument_list|(
name|externalId
argument_list|)
expr_stmt|;
block|}
name|pc
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|pc
argument_list|)
argument_list|)
expr_stmt|;
name|pitClasses
operator|.
name|put
argument_list|(
name|uid
argument_list|,
name|pc
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|Iterator
argument_list|<
name|Element
argument_list|>
name|classInstructorElementIt
init|=
name|classElement
operator|.
name|elementIterator
argument_list|(
name|PointInTimeDataExport
operator|.
name|sClassInstructorElementName
argument_list|)
decl_stmt|;
while|while
condition|(
name|classInstructorElementIt
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Element
name|classInstructorElement
init|=
name|classInstructorElementIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|elementClassInstructor
argument_list|(
name|classInstructorElement
argument_list|,
name|pc
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|Iterator
argument_list|<
name|Element
argument_list|>
name|classEventElementIt
init|=
name|classElement
operator|.
name|elementIterator
argument_list|(
name|PointInTimeDataExport
operator|.
name|sClassEventElementName
argument_list|)
decl_stmt|;
while|while
condition|(
name|classEventElementIt
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Element
name|classEventElement
init|=
name|classEventElementIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|elementClassEvent
argument_list|(
name|classEventElement
argument_list|,
name|pc
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|elementClassEvent
parameter_list|(
name|Element
name|classEventElement
parameter_list|,
name|PitClass
name|pc
parameter_list|)
throws|throws
name|Exception
block|{
name|PitClassEvent
name|pce
init|=
operator|new
name|PitClassEvent
argument_list|()
decl_stmt|;
name|pce
operator|.
name|setPitClass
argument_list|(
name|pc
argument_list|)
expr_stmt|;
name|pc
operator|.
name|addTopitClassEvents
argument_list|(
name|pce
argument_list|)
expr_stmt|;
name|pce
operator|.
name|setEventName
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|classEventElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sNameAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassEventElementName
argument_list|)
argument_list|)
expr_stmt|;
name|pce
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|pce
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Element
name|classMeetingElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|classEventElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementClassMeeting
argument_list|(
name|classMeetingElement
argument_list|,
name|pce
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|elementClassMeeting
parameter_list|(
name|Element
name|classMeetingElement
parameter_list|,
name|PitClassEvent
name|pce
parameter_list|)
throws|throws
name|Exception
block|{
name|PitClassMeeting
name|pcm
init|=
operator|new
name|PitClassMeeting
argument_list|()
decl_stmt|;
name|pcm
operator|.
name|setPitClassEvent
argument_list|(
name|pce
argument_list|)
expr_stmt|;
name|pce
operator|.
name|addTopitClassMeetings
argument_list|(
name|pcm
argument_list|)
expr_stmt|;
name|pcm
operator|.
name|setMeetingDate
argument_list|(
name|CalendarUtils
operator|.
name|getDate
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|classMeetingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sMeetingDateAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassMeetingElementName
argument_list|)
argument_list|,
name|dateFormat
argument_list|)
argument_list|)
expr_stmt|;
name|pcm
operator|.
name|setStartPeriod
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|classMeetingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sStartPeriodAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassMeetingElementName
argument_list|)
argument_list|)
expr_stmt|;
name|pcm
operator|.
name|setStopPeriod
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|classMeetingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sStopPeriodAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassMeetingElementName
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|startOffsetStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|classMeetingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sStartOffsetAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|startOffsetStr
operator|!=
literal|null
condition|)
block|{
name|pcm
operator|.
name|setStartOffset
argument_list|(
operator|new
name|Integer
argument_list|(
name|startOffsetStr
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|stopOffsetStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|classMeetingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sStopOffsetAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|stopOffsetStr
operator|!=
literal|null
condition|)
block|{
name|pcm
operator|.
name|setStopOffset
argument_list|(
operator|new
name|Integer
argument_list|(
name|stopOffsetStr
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|Location
name|loc
init|=
name|locations
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|classMeetingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sLocationUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassMeetingElementName
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|pcm
operator|.
name|setLocationPermanentId
argument_list|(
name|loc
operator|.
name|getPermanentId
argument_list|()
argument_list|)
expr_stmt|;
name|pcm
operator|.
name|setTimePatternMinPerMtg
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|classMeetingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTimePatternMinutesPerMeetingAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassMeetingElementName
argument_list|)
argument_list|)
expr_stmt|;
name|pcm
operator|.
name|setCalculatedMinPerMtg
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|classMeetingElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCalculatedMinutesPerMeetingAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassMeetingElementName
argument_list|)
argument_list|)
expr_stmt|;
name|pcm
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|pcm
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Element
name|classMeetingUtilPeriodElement
range|:
operator|(
name|List
argument_list|<
name|Element
argument_list|>
operator|)
name|classMeetingElement
operator|.
name|elements
argument_list|()
control|)
block|{
name|elementClassMeetingUtilPeriod
argument_list|(
name|classMeetingUtilPeriodElement
argument_list|,
name|pcm
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|elementClassMeetingUtilPeriod
parameter_list|(
name|Element
name|classMeetingUtilPeriodElement
parameter_list|,
name|PitClassMeeting
name|pitClassMeeting
parameter_list|)
throws|throws
name|Exception
block|{
name|PitClassMeetingUtilPeriod
name|pcmup
init|=
operator|new
name|PitClassMeetingUtilPeriod
argument_list|()
decl_stmt|;
name|pcmup
operator|.
name|setTimeSlot
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|classMeetingUtilPeriodElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sPeriodAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sClassMeetingUtilPeriodElementName
argument_list|)
argument_list|)
expr_stmt|;
name|pcmup
operator|.
name|setPitClassMeeting
argument_list|(
name|pitClassMeeting
argument_list|)
expr_stmt|;
name|pitClassMeeting
operator|.
name|addTopitClassMeetingUtilPeriods
argument_list|(
name|pcmup
argument_list|)
expr_stmt|;
name|pcmup
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|pcmup
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|elementSubpart
parameter_list|(
name|Element
name|subpartElement
parameter_list|,
name|PitInstrOfferingConfig
name|pitInstructionalOfferingConfig
parameter_list|,
name|PitSchedulingSubpart
name|parentPitSubpart
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|PointInTimeDataExport
operator|.
name|sSubpartElementName
operator|.
name|equals
argument_list|(
name|subpartElement
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|PitSchedulingSubpart
name|pss
init|=
operator|new
name|PitSchedulingSubpart
argument_list|()
decl_stmt|;
name|SchedulingSubpart
name|ss
init|=
name|schedulingSubparts
operator|.
name|get
argument_list|(
operator|new
name|Long
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|subpartElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sSubpartElementName
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|ss
operator|!=
literal|null
condition|)
block|{
name|pss
operator|.
name|setSchedulingSubpart
argument_list|(
name|ss
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|parentPitSubpart
operator|!=
literal|null
condition|)
block|{
name|pss
operator|.
name|setPitParentSubpart
argument_list|(
name|parentPitSubpart
argument_list|)
expr_stmt|;
name|parentPitSubpart
operator|.
name|addTopitChildSubparts
argument_list|(
name|pss
argument_list|)
expr_stmt|;
block|}
name|pss
operator|.
name|setPitInstrOfferingConfig
argument_list|(
name|pitInstructionalOfferingConfig
argument_list|)
expr_stmt|;
name|pitInstructionalOfferingConfig
operator|.
name|addToschedulingSubparts
argument_list|(
name|pss
argument_list|)
expr_stmt|;
name|pss
operator|.
name|setMinutesPerWk
argument_list|(
name|getRequiredIntegerAttribute
argument_list|(
name|subpartElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sMinPerWeekAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sSubpartElementName
argument_list|)
argument_list|)
expr_stmt|;
name|pss
operator|.
name|setSchedulingSubpartSuffixCache
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|subpartElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sSuffixAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sSubpartElementName
argument_list|)
argument_list|)
expr_stmt|;
name|pss
operator|.
name|setItype
argument_list|(
name|itypes
operator|.
name|get
argument_list|(
name|getRequiredStringAttribute
argument_list|(
name|subpartElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sTypeAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sSubpartElementName
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|pss
operator|.
name|setStudentAllowOverlap
argument_list|(
name|getRequiredBooleanAttribute
argument_list|(
name|subpartElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sStudentAllowOverlapAttribute
argument_list|,
name|PointInTimeDataExport
operator|.
name|sSubpartElementName
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|creditTypeStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|subpartElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCreditTypeAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|creditTypeStr
operator|!=
literal|null
condition|)
block|{
name|pss
operator|.
name|setCreditType
argument_list|(
name|creditTypes
operator|.
name|get
argument_list|(
operator|new
name|Integer
argument_list|(
name|creditTypeStr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|creditUnitTypeStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|subpartElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCreditUnitTypeAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|creditUnitTypeStr
operator|!=
literal|null
condition|)
block|{
name|pss
operator|.
name|setCreditUnitType
argument_list|(
name|creditUnitTypes
operator|.
name|get
argument_list|(
operator|new
name|Integer
argument_list|(
name|creditUnitTypeStr
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|creditStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|subpartElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sCreditAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|creditStr
operator|!=
literal|null
condition|)
block|{
name|pss
operator|.
name|setCredit
argument_list|(
operator|new
name|Float
argument_list|(
name|creditStr
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|uidRollFwdFrmStr
init|=
name|getOptionalStringAttribute
argument_list|(
name|subpartElement
argument_list|,
name|PointInTimeDataExport
operator|.
name|sUniqueIdRolledForwardFromAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|uidRollFwdFrmStr
operator|!=
literal|null
condition|)
block|{
name|pss
operator|.
name|setUniqueIdRolledForwardFrom
argument_list|(
operator|new
name|Long
argument_list|(
name|uidRollFwdFrmStr
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|pss
operator|.
name|setUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getHibSession
argument_list|()
operator|.
name|save
argument_list|(
name|pss
argument_list|)
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|Iterator
argument_list|<
name|Element
argument_list|>
name|classElementIterator
init|=
operator|(
name|Iterator
argument_list|<
name|Element
argument_list|>
operator|)
name|subpartElement
operator|.
name|elementIterator
argument_list|(
name|PointInTimeDataExport
operator|.
name|sClassElementName
argument_list|)
decl_stmt|;
while|while
condition|(
name|classElementIterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Element
name|classElement
init|=
name|classElementIterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|elementClass
argument_list|(
name|classElement
argument_list|,
name|pss
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|Iterator
argument_list|<
name|Element
argument_list|>
name|childSubpartElementIterator
init|=
operator|(
name|Iterator
argument_list|<
name|Element
argument_list|>
operator|)
name|subpartElement
operator|.
name|elementIterator
argument_list|(
name|PointInTimeDataExport
operator|.
name|sSubpartElementName
argument_list|)
decl_stmt|;
while|while
condition|(
name|childSubpartElementIterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Element
name|childSubpartElement
init|=
name|childSubpartElementIterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|elementSubpart
argument_list|(
name|childSubpartElement
argument_list|,
name|pitInstructionalOfferingConfig
argument_list|,
name|pss
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|loadExistingSubjectAreas
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
name|List
argument_list|<
name|?
argument_list|>
name|subjects
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|subjects
operator|=
name|this
operator|.
name|getHibSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"select distinct sa from SubjectArea as sa where sa.session.uniqueId=:sessionId"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
expr_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|?
argument_list|>
name|it
init|=
name|subjects
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|SubjectArea
name|sa
init|=
operator|(
name|SubjectArea
operator|)
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|subjectAreas
operator|.
name|put
argument_list|(
name|sa
operator|.
name|getSubjectAreaAbbreviation
argument_list|()
argument_list|,
name|sa
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|loadDepartmentalInstructors
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
for|for
control|(
name|DepartmentalInstructor
name|di
range|:
operator|(
name|List
argument_list|<
name|DepartmentalInstructor
argument_list|>
operator|)
name|this
operator|.
name|getHibSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"select distinct di from DepartmentalInstructor as di where di.department.session.uniqueId=:sessionId"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
control|)
block|{
name|departmentalInstructorsByName
operator|.
name|put
argument_list|(
operator|(
operator|(
name|di
operator|.
name|getLastName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|di
operator|.
name|getLastName
argument_list|()
operator|)
operator|+
operator|(
name|di
operator|.
name|getFirstName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|di
operator|.
name|getFirstName
argument_list|()
operator|)
operator|+
operator|(
name|di
operator|.
name|getMiddleName
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|di
operator|.
name|getMiddleName
argument_list|()
operator|)
operator|+
operator|(
name|di
operator|.
name|getExternalUniqueId
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|di
operator|.
name|getExternalUniqueId
argument_list|()
operator|)
operator|)
argument_list|,
name|di
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|loadExistingDepartments
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
for|for
control|(
name|Department
name|department
range|:
operator|(
name|List
argument_list|<
name|Department
argument_list|>
operator|)
name|this
operator|.
name|getHibSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"select distinct d from Department as d where d.session.uniqueId=:sessionId"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
control|)
block|{
name|departmentsByCode
operator|.
name|put
argument_list|(
name|department
operator|.
name|getDeptCode
argument_list|()
argument_list|,
name|department
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|loadExistingMinors
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
for|for
control|(
name|PosMinor
name|minor
range|:
operator|(
name|List
argument_list|<
name|PosMinor
argument_list|>
operator|)
name|this
operator|.
name|getHibSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"select distinct m from PosMinor as m where m.session.uniqueId=:sessionId"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
control|)
block|{
name|minorsByCode
operator|.
name|put
argument_list|(
name|minor
operator|.
name|getCode
argument_list|()
argument_list|,
name|minor
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|loadExistingMajors
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
for|for
control|(
name|PosMajor
name|major
range|:
operator|(
name|List
argument_list|<
name|PosMajor
argument_list|>
operator|)
name|this
operator|.
name|getHibSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"select distinct m from PosMajor as m where m.session.uniqueId=:sessionId"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
control|)
block|{
name|majorsByCode
operator|.
name|put
argument_list|(
name|major
operator|.
name|getCode
argument_list|()
argument_list|,
name|major
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|loadExistingAcademicClassifications
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
for|for
control|(
name|AcademicClassification
name|ac
range|:
operator|(
name|List
argument_list|<
name|AcademicClassification
argument_list|>
operator|)
name|this
operator|.
name|getHibSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"select distinct ac from AcademicClassification as ac where ac.session.uniqueId=:sessionId"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
control|)
block|{
name|academicClassificationsByCode
operator|.
name|put
argument_list|(
name|ac
operator|.
name|getCode
argument_list|()
argument_list|,
name|ac
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|loadExistingAcademicAreas
parameter_list|(
name|Long
name|sessionId
parameter_list|)
block|{
for|for
control|(
name|AcademicArea
name|aa
range|:
operator|(
name|List
argument_list|<
name|AcademicArea
argument_list|>
operator|)
name|this
operator|.
name|getHibSession
argument_list|()
operator|.
name|createQuery
argument_list|(
literal|"select distinct ac from AcademicArea as ac where ac.session.uniqueId=:sessionId"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
control|)
block|{
name|academicAreasByAbbv
operator|.
name|put
argument_list|(
name|aa
operator|.
name|getAcademicAreaAbbreviation
argument_list|()
argument_list|,
name|aa
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|loadItypes
parameter_list|()
block|{
name|Set
argument_list|<
name|?
argument_list|>
name|itypeDescs
init|=
name|ItypeDesc
operator|.
name|findAll
argument_list|(
literal|false
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|?
argument_list|>
name|it
init|=
name|itypeDescs
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|ItypeDesc
name|itype
init|=
operator|(
name|ItypeDesc
operator|)
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|itypes
operator|.
name|put
argument_list|(
name|itype
operator|.
name|getAbbv
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|,
name|itype
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|loadExistingInstructionalOfferings
parameter_list|(
name|Long
name|sessionId
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|InstructionalOffering
name|io
range|:
operator|(
name|List
argument_list|<
name|InstructionalOffering
argument_list|>
operator|)
name|InstructionalOffering
operator|.
name|findAll
argument_list|(
name|sessionId
argument_list|)
control|)
block|{
name|instructionalOfferings
operator|.
name|put
argument_list|(
name|io
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|io
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|loadExistingCourseOfferings
parameter_list|(
name|Long
name|sessionId
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|CourseOffering
name|courseOffering
range|:
operator|(
name|List
argument_list|<
name|CourseOffering
argument_list|>
operator|)
name|CourseOffering
operator|.
name|findAll
argument_list|(
name|sessionId
argument_list|)
control|)
block|{
name|courseOfferings
operator|.
name|put
argument_list|(
name|courseOffering
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|courseOffering
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|loadExistingInstrOfferingConfigs
parameter_list|(
name|Long
name|sessionId
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|qs
init|=
literal|"from InstrOfferingConfig ioc where ioc.instructionalOffering.session.uniqueId = :sessionId"
decl_stmt|;
for|for
control|(
name|InstrOfferingConfig
name|instrOfferingConfig
range|:
operator|(
name|List
argument_list|<
name|InstrOfferingConfig
argument_list|>
operator|)
name|getHibSession
argument_list|()
operator|.
name|createQuery
argument_list|(
name|qs
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
argument_list|)
operator|.
name|list
argument_list|()
control|)
block|{
name|instrOfferingConfigs
operator|.
name|put
argument_list|(
name|instrOfferingConfig
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|instrOfferingConfig
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|loadExistingSchedulingSubparts
parameter_list|(
name|Long
name|sessionId
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|qs
init|=
literal|"from SchedulingSubpart ss where ss.instrOfferingConfig.instructionalOffering.session.uniqueId = :sessionId"
decl_stmt|;
for|for
control|(
name|SchedulingSubpart
name|schedulingSubpart
range|:
operator|(
name|List
argument_list|<
name|SchedulingSubpart
argument_list|>
operator|)
name|getHibSession
argument_list|()
operator|.
name|createQuery
argument_list|(
name|qs
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"sessionId"
argument_list|,
name|sessionId
argument_list|)
operator|.
name|list
argument_list|()
control|)
block|{
name|schedulingSubparts
operator|.
name|put
argument_list|(
name|schedulingSubpart
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|schedulingSubpart
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|void
name|loadExistingClasses
parameter_list|(
name|Long
name|sessionId
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|Class_
name|c
range|:
operator|(
name|List
argument_list|<
name|Class_
argument_list|>
operator|)
name|Class_
operator|.
name|findAll
argument_list|(
name|sessionId
argument_list|)
control|)
block|{
name|classes
operator|.
name|put
argument_list|(
name|c
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|String
name|getEmailSubject
parameter_list|()
block|{
return|return
operator|(
literal|"Point In Time Data Import Results - "
operator|+
name|session
operator|.
name|getAcademicYearTerm
argument_list|()
operator|)
return|;
block|}
specifier|protected
specifier|static
name|boolean
name|equals
parameter_list|(
name|Object
name|o1
parameter_list|,
name|Object
name|o2
parameter_list|)
block|{
return|return
operator|(
name|o1
operator|==
literal|null
condition|?
name|o2
operator|==
literal|null
else|:
name|o1
operator|.
name|equals
argument_list|(
name|o2
argument_list|)
operator|)
return|;
block|}
specifier|public
name|Integer
name|str2Slot
parameter_list|(
name|String
name|timeString
parameter_list|,
name|Integer
name|printOffset
parameter_list|)
throws|throws
name|Exception
block|{
name|int
name|slot
init|=
operator|-
literal|1
decl_stmt|;
try|try
block|{
name|Date
name|date
init|=
name|CalendarUtils
operator|.
name|getDate
argument_list|(
name|timeString
argument_list|,
name|timeFormat
argument_list|)
decl_stmt|;
name|SimpleDateFormat
name|df
init|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"HHmm"
argument_list|)
decl_stmt|;
name|int
name|time
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|df
operator|.
name|format
argument_list|(
name|date
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|printOffset
operator|!=
literal|null
condition|)
name|time
operator|-=
name|printOffset
operator|.
name|intValue
argument_list|()
expr_stmt|;
name|int
name|hour
init|=
name|time
operator|/
literal|100
decl_stmt|;
name|int
name|min
init|=
name|time
operator|%
literal|100
decl_stmt|;
if|if
condition|(
name|hour
operator|>=
literal|24
condition|)
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Invalid time '"
operator|+
name|timeString
operator|+
literal|"' -- hour ("
operator|+
name|hour
operator|+
literal|") must be between 0 and 23."
argument_list|)
throw|;
if|if
condition|(
name|min
operator|>=
literal|60
condition|)
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Invalid time '"
operator|+
name|timeString
operator|+
literal|"' -- minute ("
operator|+
name|min
operator|+
literal|") must be between 0 and 59."
argument_list|)
throw|;
if|if
condition|(
operator|(
name|min
operator|%
name|Constants
operator|.
name|SLOT_LENGTH_MIN
operator|)
operator|!=
literal|0
condition|)
block|{
name|min
operator|=
name|min
operator|-
operator|(
name|min
operator|%
name|Constants
operator|.
name|SLOT_LENGTH_MIN
operator|)
expr_stmt|;
block|}
name|slot
operator|=
operator|(
name|hour
operator|*
literal|60
operator|+
name|min
operator|-
name|Constants
operator|.
name|FIRST_SLOT_TIME_MIN
operator|)
operator|/
name|Constants
operator|.
name|SLOT_LENGTH_MIN
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Invalid time '"
operator|+
name|timeString
operator|+
literal|"' -- not a number."
argument_list|)
throw|;
block|}
if|if
condition|(
name|slot
operator|<
literal|0
condition|)
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Invalid time '"
operator|+
name|timeString
operator|+
literal|"', did not meet format: "
operator|+
name|timeFormat
argument_list|)
throw|;
return|return
name|slot
return|;
block|}
block|}
end_class

end_unit

