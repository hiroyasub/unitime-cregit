begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|api
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|DocumentException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|io
operator|.
name|OutputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|io
operator|.
name|SAXReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|dom4j
operator|.
name|io
operator|.
name|XMLWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|CacheMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|SessionContext
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|XmlApiHelper
extends|extends
name|AbstractApiHelper
block|{
specifier|public
name|XmlApiHelper
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|,
name|SessionContext
name|context
parameter_list|,
name|CacheMode
name|cacheMode
parameter_list|)
block|{
name|super
argument_list|(
name|request
argument_list|,
name|response
argument_list|,
name|context
argument_list|,
name|cacheMode
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Document
name|getRequest
parameter_list|(
name|Type
name|requestType
parameter_list|)
throws|throws
name|IOException
block|{
name|Reader
name|reader
init|=
name|iRequest
operator|.
name|getReader
argument_list|()
decl_stmt|;
try|try
block|{
return|return
operator|new
name|SAXReader
argument_list|()
operator|.
name|read
argument_list|(
name|reader
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|DocumentException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
finally|finally
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|void
name|setResponse
parameter_list|(
name|R
name|response
parameter_list|)
throws|throws
name|IOException
block|{
name|iResponse
operator|.
name|setContentType
argument_list|(
literal|"application/xml"
argument_list|)
expr_stmt|;
name|iResponse
operator|.
name|setCharacterEncoding
argument_list|(
literal|"UTF-8"
argument_list|)
expr_stmt|;
name|iResponse
operator|.
name|setHeader
argument_list|(
literal|"Pragma"
argument_list|,
literal|"no-cache"
argument_list|)
expr_stmt|;
name|iResponse
operator|.
name|addHeader
argument_list|(
literal|"Cache-Control"
argument_list|,
literal|"must-revalidate"
argument_list|)
expr_stmt|;
name|iResponse
operator|.
name|addHeader
argument_list|(
literal|"Cache-Control"
argument_list|,
literal|"no-cache"
argument_list|)
expr_stmt|;
name|iResponse
operator|.
name|addHeader
argument_list|(
literal|"Cache-Control"
argument_list|,
literal|"no-store"
argument_list|)
expr_stmt|;
name|iResponse
operator|.
name|setDateHeader
argument_list|(
literal|"Date"
argument_list|,
operator|new
name|Date
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
name|iResponse
operator|.
name|setDateHeader
argument_list|(
literal|"Expires"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|iResponse
operator|.
name|setHeader
argument_list|(
literal|"Content-Disposition"
argument_list|,
literal|"attachment; filename=\"response.xml\""
argument_list|)
expr_stmt|;
name|Writer
name|writer
init|=
name|iResponse
operator|.
name|getWriter
argument_list|()
decl_stmt|;
try|try
block|{
operator|new
name|XMLWriter
argument_list|(
name|writer
argument_list|,
name|OutputFormat
operator|.
name|createPrettyPrint
argument_list|()
argument_list|)
operator|.
name|write
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|writer
operator|.
name|flush
argument_list|()
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

