begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|api
operator|.
name|connectors
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|api
operator|.
name|ApiConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|api
operator|.
name|ApiHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|SessionAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|client
operator|.
name|sectioning
operator|.
name|SectioningStatusFilterBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|server
operator|.
name|UniTimePrincipal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|services
operator|.
name|SectioningService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|AcademicSessionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|ClassAssignmentInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|DegreePlanInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|OnlineSectioningInterface
operator|.
name|StudentStatusInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|shared
operator|.
name|CourseRequestInterface
operator|.
name|CheckCoursesResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Student
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|StudentDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|UserAuthority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|UserContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|rights
operator|.
name|Right
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|NameFormat
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"/api/sectioning"
argument_list|)
specifier|public
class|class
name|OnlineStudentSchedulingConnector
extends|extends
name|ApiConnector
block|{
specifier|protected
annotation|@
name|Autowired
name|ApplicationContext
name|applicationContext
decl_stmt|;
specifier|protected
name|SectioningService
name|getSectioningService
parameter_list|()
block|{
return|return
name|applicationContext
operator|.
name|getBean
argument_list|(
literal|"sectioning.gwt"
argument_list|,
name|SectioningService
operator|.
name|class
argument_list|)
return|;
block|}
specifier|protected
name|void
name|execute
parameter_list|(
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|operation
init|=
name|helper
operator|.
name|getParameter
argument_list|(
literal|"operation"
argument_list|)
decl_stmt|;
if|if
condition|(
name|operation
operator|==
literal|null
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Parameter 'operation' was not provided."
argument_list|)
throw|;
name|Operation
name|op
init|=
literal|null
decl_stmt|;
try|try
block|{
name|op
operator|=
name|Operation
operator|.
name|valueOf
argument_list|(
name|operation
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Operation '"
operator|+
name|operation
operator|+
literal|"' is not a valid "
operator|+
name|type
operator|.
name|name
argument_list|()
operator|+
literal|" operation."
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|op
operator|==
literal|null
operator|||
operator|!
name|op
operator|.
name|hasFlag
argument_list|(
name|type
argument_list|)
condition|)
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Operation '"
operator|+
name|operation
operator|+
literal|"' is not a valid "
operator|+
name|type
operator|.
name|name
argument_list|()
operator|+
literal|" operation."
argument_list|)
expr_stmt|;
if|if
condition|(
name|op
operator|.
name|hasFlag
argument_list|(
name|Flag
operator|.
name|NO_SESSION
argument_list|)
condition|)
block|{
name|helper
operator|.
name|getSessionContext
argument_list|()
operator|.
name|checkPermissionAnyAuthority
argument_list|(
name|Right
operator|.
name|ApiOnlineStudentScheduliung
argument_list|)
expr_stmt|;
name|op
operator|.
name|execute
argument_list|(
name|getSectioningService
argument_list|()
argument_list|,
name|helper
argument_list|,
name|type
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
return|return;
block|}
name|Long
name|sessionId
init|=
name|helper
operator|.
name|getAcademicSessionId
argument_list|()
decl_stmt|;
if|if
condition|(
name|sessionId
operator|==
literal|null
operator|&&
name|helper
operator|.
name|getSessionContext
argument_list|()
operator|.
name|getUser
argument_list|()
operator|!=
literal|null
condition|)
name|sessionId
operator|=
name|helper
operator|.
name|getSessionContext
argument_list|()
operator|.
name|getUser
argument_list|()
operator|.
name|getCurrentAcademicSessionId
argument_list|()
expr_stmt|;
if|if
condition|(
name|sessionId
operator|==
literal|null
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Academic session not provided, please set the term parameter."
argument_list|)
throw|;
name|helper
operator|.
name|getSessionContext
argument_list|()
operator|.
name|checkPermissionAnyAuthority
argument_list|(
name|sessionId
argument_list|,
literal|"Session"
argument_list|,
name|Right
operator|.
name|ApiOnlineStudentScheduliung
argument_list|)
expr_stmt|;
for|for
control|(
name|UserAuthority
name|authority
range|:
name|helper
operator|.
name|getSessionContext
argument_list|()
operator|.
name|getUser
argument_list|()
operator|.
name|getAuthorities
argument_list|()
control|)
if|if
condition|(
name|authority
operator|.
name|getAcademicSession
argument_list|()
operator|!=
literal|null
operator|&&
name|sessionId
operator|.
name|equals
argument_list|(
name|authority
operator|.
name|getAcademicSession
argument_list|()
operator|.
name|getQualifierId
argument_list|()
argument_list|)
operator|&&
name|authority
operator|.
name|hasRight
argument_list|(
name|Right
operator|.
name|ApiOnlineStudentScheduliung
argument_list|)
condition|)
block|{
name|helper
operator|.
name|getSessionContext
argument_list|()
operator|.
name|getUser
argument_list|()
operator|.
name|setCurrentAuthority
argument_list|(
name|authority
argument_list|)
expr_stmt|;
if|if
condition|(
name|helper
operator|.
name|getSessionContext
argument_list|()
operator|.
name|hasPermission
argument_list|(
name|Right
operator|.
name|StudentSchedulingAdvisor
argument_list|)
condition|)
break|break;
block|}
name|helper
operator|.
name|getSessionContext
argument_list|()
operator|.
name|setAttribute
argument_list|(
name|SessionAttribute
operator|.
name|OnlineSchedulingLastSession
argument_list|,
name|sessionId
argument_list|)
expr_stmt|;
name|String
name|studentId
init|=
name|helper
operator|.
name|getParameter
argument_list|(
literal|"studentId"
argument_list|)
decl_stmt|;
name|UniTimePrincipal
name|principal
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|studentId
operator|!=
literal|null
operator|&&
name|helper
operator|.
name|getSessionContext
argument_list|()
operator|.
name|hasPermission
argument_list|(
name|Right
operator|.
name|StudentSchedulingAdvisor
argument_list|)
condition|)
block|{
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
init|=
name|StudentDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|createNewSession
argument_list|()
decl_stmt|;
try|try
block|{
name|List
argument_list|<
name|Student
argument_list|>
name|student
init|=
name|hibSession
operator|.
name|createQuery
argument_list|(
literal|"select m from Student m where m.externalUniqueId = :uid"
argument_list|)
operator|.
name|setString
argument_list|(
literal|"uid"
argument_list|,
name|studentId
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|student
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|UserContext
name|user
init|=
name|helper
operator|.
name|getSessionContext
argument_list|()
operator|.
name|getUser
argument_list|()
decl_stmt|;
name|principal
operator|=
operator|new
name|UniTimePrincipal
argument_list|(
name|user
operator|.
name|getExternalUserId
argument_list|()
argument_list|,
name|studentId
argument_list|,
name|user
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Student
name|s
range|:
name|student
control|)
block|{
name|principal
operator|.
name|addStudentId
argument_list|(
name|s
operator|.
name|getSession
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|s
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|principal
operator|.
name|setName
argument_list|(
name|NameFormat
operator|.
name|defaultFormat
argument_list|()
operator|.
name|format
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|helper
operator|.
name|getSessionContext
argument_list|()
operator|.
name|setAttribute
argument_list|(
name|SessionAttribute
operator|.
name|OnlineSchedulingUser
argument_list|,
name|principal
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|UserContext
name|user
init|=
name|helper
operator|.
name|getSessionContext
argument_list|()
operator|.
name|getUser
argument_list|()
decl_stmt|;
name|principal
operator|=
operator|new
name|UniTimePrincipal
argument_list|(
name|user
operator|.
name|getExternalUserId
argument_list|()
argument_list|,
name|studentId
argument_list|,
name|user
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|helper
operator|.
name|getSessionContext
argument_list|()
operator|.
name|setAttribute
argument_list|(
name|SessionAttribute
operator|.
name|OnlineSchedulingUser
argument_list|,
name|principal
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|hibSession
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
name|String
name|pin
init|=
name|helper
operator|.
name|getParameter
argument_list|(
literal|"pin"
argument_list|)
decl_stmt|;
if|if
condition|(
name|pin
operator|!=
literal|null
condition|)
name|helper
operator|.
name|getSessionContext
argument_list|()
operator|.
name|setAttribute
argument_list|(
name|SessionAttribute
operator|.
name|OnlineSchedulingPIN
argument_list|,
name|pin
argument_list|)
expr_stmt|;
name|op
operator|.
name|execute
argument_list|(
name|getSectioningService
argument_list|()
argument_list|,
name|helper
argument_list|,
name|type
argument_list|,
name|sessionId
argument_list|,
name|principal
operator|==
literal|null
condition|?
literal|null
else|:
name|principal
operator|.
name|getStudentId
argument_list|(
name|sessionId
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|doGet
parameter_list|(
name|ApiHelper
name|helper
parameter_list|)
throws|throws
name|IOException
block|{
name|execute
argument_list|(
name|helper
argument_list|,
name|Flag
operator|.
name|GET
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|doPost
parameter_list|(
name|ApiHelper
name|helper
parameter_list|)
throws|throws
name|IOException
block|{
name|execute
argument_list|(
name|helper
argument_list|,
name|Flag
operator|.
name|POST
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
enum|enum
name|Flag
block|{
name|GET
block|,
name|POST
block|,
name|NO_SESSION
block|, 		;
specifier|public
name|int
name|toInt
parameter_list|()
block|{
return|return
literal|1
operator|<<
name|ordinal
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|has
parameter_list|(
name|int
name|flags
parameter_list|)
block|{
return|return
operator|(
name|flags
operator|&
name|toInt
argument_list|()
operator|)
operator|==
name|toInt
argument_list|()
return|;
block|}
block|}
specifier|public
specifier|static
interface|interface
name|OpExecution
parameter_list|<
name|R
parameter_list|>
block|{
specifier|public
name|R
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
function_decl|;
block|}
specifier|public
specifier|static
enum|enum
name|Operation
block|{
name|listCourseOfferings
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|Collection
argument_list|<
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Collection
argument_list|<
name|ClassAssignmentInterface
operator|.
name|CourseAssignment
argument_list|>
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|service
operator|.
name|listCourseOfferings
argument_list|(
name|sessionId
argument_list|,
name|helper
operator|.
name|getOptinalParameter
argument_list|(
literal|"query"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameterInteger
argument_list|(
literal|"limit"
argument_list|,
literal|null
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|)
block|,
name|listAcademicSessions
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|Collection
argument_list|<
name|AcademicSessionProvider
operator|.
name|AcademicSessionInfo
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Collection
argument_list|<
name|AcademicSessionProvider
operator|.
name|AcademicSessionInfo
argument_list|>
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|service
operator|.
name|listAcademicSessions
argument_list|(
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"sectioning"
argument_list|,
literal|true
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|,
name|Flag
operator|.
name|NO_SESSION
argument_list|)
block|,
name|retrieveCourseDetails
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|service
operator|.
name|retrieveCourseDetails
argument_list|(
name|sessionId
argument_list|,
name|helper
operator|.
name|getRequiredParameter
argument_list|(
literal|"course"
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|)
block|,
name|listClasses
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|Collection
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Collection
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|service
operator|.
name|listClasses
argument_list|(
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"online"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|sessionId
argument_list|,
name|helper
operator|.
name|getRequiredParameter
argument_list|(
literal|"course"
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|)
block|,
name|retrieveCourseOfferingId
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|Long
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Long
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|service
operator|.
name|retrieveCourseOfferingId
argument_list|(
name|sessionId
argument_list|,
name|helper
operator|.
name|getRequiredParameter
argument_list|(
literal|"course"
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|)
block|,
name|checkCourses
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|CheckCoursesResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|CheckCoursesResponse
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
name|CourseRequestInterface
name|request
init|=
name|helper
operator|.
name|getRequest
argument_list|(
name|CourseRequestInterface
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setAcademicSessionId
argument_list|(
name|sessionId
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|getStudentId
argument_list|()
operator|==
literal|null
operator|&&
name|studentId
operator|!=
literal|null
condition|)
name|request
operator|.
name|setStudentId
argument_list|(
name|studentId
argument_list|)
expr_stmt|;
return|return
name|service
operator|.
name|checkCourses
argument_list|(
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"online"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"sectioning"
argument_list|,
literal|false
argument_list|)
argument_list|,
name|request
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|POST
argument_list|)
block|,
name|section
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|ClassAssignmentInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ClassAssignmentInterface
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
name|SectionRequest
name|request
init|=
name|helper
operator|.
name|getRequest
argument_list|(
name|SectionRequest
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|request
operator|!=
literal|null
condition|)
block|{
name|request
operator|.
name|request
operator|.
name|setAcademicSessionId
argument_list|(
name|sessionId
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|request
operator|.
name|getStudentId
argument_list|()
operator|==
literal|null
operator|&&
name|studentId
operator|!=
literal|null
condition|)
name|request
operator|.
name|request
operator|.
name|setStudentId
argument_list|(
name|studentId
argument_list|)
expr_stmt|;
block|}
return|return
name|service
operator|.
name|section
argument_list|(
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"online"
argument_list|,
name|request
operator|.
name|online
operator|==
literal|null
condition|?
literal|true
else|:
name|request
operator|.
name|online
argument_list|)
argument_list|,
name|request
operator|.
name|request
argument_list|,
name|request
operator|.
name|currentAssignment
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|POST
argument_list|)
block|,
name|computeSuggestions
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|Collection
argument_list|<
name|ClassAssignmentInterface
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Collection
argument_list|<
name|ClassAssignmentInterface
argument_list|>
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
name|SectionRequest
name|request
init|=
name|helper
operator|.
name|getRequest
argument_list|(
name|SectionRequest
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|request
operator|!=
literal|null
condition|)
block|{
name|request
operator|.
name|request
operator|.
name|setAcademicSessionId
argument_list|(
name|sessionId
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|request
operator|.
name|getStudentId
argument_list|()
operator|==
literal|null
operator|&&
name|studentId
operator|!=
literal|null
condition|)
name|request
operator|.
name|request
operator|.
name|setStudentId
argument_list|(
name|studentId
argument_list|)
expr_stmt|;
block|}
return|return
name|service
operator|.
name|computeSuggestions
argument_list|(
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"online"
argument_list|,
name|request
operator|.
name|online
operator|==
literal|null
condition|?
literal|true
else|:
name|request
operator|.
name|online
argument_list|)
argument_list|,
name|request
operator|.
name|request
argument_list|,
name|request
operator|.
name|currentAssignment
argument_list|,
name|helper
operator|.
name|getOptinalParameterInteger
argument_list|(
literal|"selectedAssignment"
argument_list|,
name|request
operator|.
name|selectedAssignment
operator|==
literal|null
condition|?
literal|0
else|:
name|request
operator|.
name|selectedAssignment
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameter
argument_list|(
literal|"filter"
argument_list|,
name|request
operator|.
name|filter
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|POST
argument_list|)
block|,
name|checkEligibility
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|OnlineSectioningInterface
operator|.
name|EligibilityCheck
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|OnlineSectioningInterface
operator|.
name|EligibilityCheck
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|service
operator|.
name|checkEligibility
argument_list|(
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"online"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"sectioning"
argument_list|,
literal|false
argument_list|)
argument_list|,
name|sessionId
argument_list|,
name|studentId
argument_list|,
name|helper
operator|.
name|getOptinalParameter
argument_list|(
literal|"pin"
argument_list|,
literal|null
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|)
block|,
name|saveRequest
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|CourseRequestInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|CourseRequestInterface
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
name|CourseRequestInterface
name|request
init|=
name|helper
operator|.
name|getRequest
argument_list|(
name|CourseRequestInterface
operator|.
name|class
argument_list|)
decl_stmt|;
name|request
operator|.
name|setAcademicSessionId
argument_list|(
name|sessionId
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|getStudentId
argument_list|()
operator|==
literal|null
operator|&&
name|studentId
operator|!=
literal|null
condition|)
name|request
operator|.
name|setStudentId
argument_list|(
name|studentId
argument_list|)
expr_stmt|;
return|return
name|service
operator|.
name|saveRequest
argument_list|(
name|request
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|POST
argument_list|)
block|,
name|enroll
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|ClassAssignmentInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ClassAssignmentInterface
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
name|SectionRequest
name|request
init|=
name|helper
operator|.
name|getRequest
argument_list|(
name|SectionRequest
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|request
operator|.
name|request
operator|!=
literal|null
condition|)
block|{
name|request
operator|.
name|request
operator|.
name|setAcademicSessionId
argument_list|(
name|sessionId
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|request
operator|.
name|getStudentId
argument_list|()
operator|==
literal|null
operator|&&
name|studentId
operator|!=
literal|null
condition|)
name|request
operator|.
name|request
operator|.
name|setStudentId
argument_list|(
name|studentId
argument_list|)
expr_stmt|;
block|}
return|return
name|service
operator|.
name|enroll
argument_list|(
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"online"
argument_list|,
name|request
operator|.
name|online
operator|==
literal|null
condition|?
literal|true
else|:
name|request
operator|.
name|online
argument_list|)
argument_list|,
name|request
operator|.
name|request
argument_list|,
name|request
operator|.
name|currentAssignment
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|POST
argument_list|)
block|,
name|getProperties
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|OnlineSectioningInterface
operator|.
name|SectioningProperties
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|OnlineSectioningInterface
operator|.
name|SectioningProperties
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|service
operator|.
name|getProperties
argument_list|(
name|sessionId
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|)
block|,
name|listEnrollments
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|List
argument_list|<
name|ClassAssignmentInterface
operator|.
name|Enrollment
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|ClassAssignmentInterface
operator|.
name|Enrollment
argument_list|>
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|service
operator|.
name|listEnrollments
argument_list|(
name|helper
operator|.
name|getRequiredParameterLong
argument_list|(
literal|"offeringId"
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|)
block|,
name|getEnrollment
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|ClassAssignmentInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ClassAssignmentInterface
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|service
operator|.
name|getEnrollment
argument_list|(
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"online"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|studentId
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|)
block|,
name|canApprove
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|List
argument_list|<
name|Long
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|Long
argument_list|>
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|service
operator|.
name|canApprove
argument_list|(
name|helper
operator|.
name|getRequiredParameterLong
argument_list|(
literal|"classOrOfferingId"
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|)
block|,
name|approveEnrollments
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
name|ApproveEnrollmentsRequest
name|request
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|Flag
operator|.
name|POST
operator|==
name|type
condition|)
name|request
operator|=
name|helper
operator|.
name|getRequest
argument_list|(
name|ApproveEnrollmentsRequest
operator|.
name|class
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|==
literal|null
condition|)
name|request
operator|=
operator|new
name|ApproveEnrollmentsRequest
argument_list|()
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|studentIds
operator|==
literal|null
condition|)
block|{
name|request
operator|.
name|studentIds
operator|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|request
operator|.
name|studentIds
operator|.
name|isEmpty
argument_list|()
operator|&&
name|studentId
operator|!=
literal|null
condition|)
name|request
operator|.
name|studentIds
operator|.
name|add
argument_list|(
name|studentId
argument_list|)
expr_stmt|;
return|return
name|service
operator|.
name|approveEnrollments
argument_list|(
name|helper
operator|.
name|getOptinalParameterLong
argument_list|(
literal|"classOrOfferingId"
argument_list|,
name|request
operator|.
name|classOrOfferingId
argument_list|)
argument_list|,
name|request
operator|.
name|studentIds
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|,
name|Flag
operator|.
name|POST
argument_list|)
block|,
name|rejectEnrollments
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
name|ApproveEnrollmentsRequest
name|request
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|Flag
operator|.
name|POST
operator|==
name|type
condition|)
name|request
operator|=
name|helper
operator|.
name|getRequest
argument_list|(
name|ApproveEnrollmentsRequest
operator|.
name|class
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|==
literal|null
condition|)
name|request
operator|=
operator|new
name|ApproveEnrollmentsRequest
argument_list|()
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|studentIds
operator|==
literal|null
condition|)
block|{
name|request
operator|.
name|studentIds
operator|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|request
operator|.
name|studentIds
operator|.
name|isEmpty
argument_list|()
operator|&&
name|studentId
operator|!=
literal|null
condition|)
name|request
operator|.
name|studentIds
operator|.
name|add
argument_list|(
name|studentId
argument_list|)
expr_stmt|;
return|return
name|service
operator|.
name|rejectEnrollments
argument_list|(
name|helper
operator|.
name|getOptinalParameterLong
argument_list|(
literal|"classOrOfferingId"
argument_list|,
name|request
operator|.
name|classOrOfferingId
argument_list|)
argument_list|,
name|request
operator|.
name|studentIds
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|,
name|Flag
operator|.
name|POST
argument_list|)
block|,
name|findEnrollmentInfos
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|List
argument_list|<
name|ClassAssignmentInterface
operator|.
name|EnrollmentInfo
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|ClassAssignmentInterface
operator|.
name|EnrollmentInfo
argument_list|>
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
name|FindInfosRequest
name|request
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|type
operator|==
name|Flag
operator|.
name|POST
condition|)
name|request
operator|=
name|helper
operator|.
name|getRequest
argument_list|(
name|FindInfosRequest
operator|.
name|class
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|==
literal|null
condition|)
name|request
operator|=
operator|new
name|FindInfosRequest
argument_list|()
expr_stmt|;
return|return
name|service
operator|.
name|findEnrollmentInfos
argument_list|(
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"online"
argument_list|,
operator|(
name|request
operator|.
name|online
operator|==
literal|null
condition|?
literal|true
else|:
name|request
operator|.
name|online
operator|)
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameter
argument_list|(
literal|"query"
argument_list|,
operator|(
name|request
operator|.
name|query
operator|==
literal|null
condition|?
literal|""
else|:
name|request
operator|.
name|query
operator|)
argument_list|)
argument_list|,
name|request
operator|.
name|filter
argument_list|,
name|helper
operator|.
name|getOptinalParameterLong
argument_list|(
literal|"courseId"
argument_list|,
name|request
operator|.
name|courseId
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|,
name|Flag
operator|.
name|POST
argument_list|)
block|,
name|findStudentInfos
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|List
argument_list|<
name|ClassAssignmentInterface
operator|.
name|StudentInfo
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|ClassAssignmentInterface
operator|.
name|StudentInfo
argument_list|>
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
name|FindInfosRequest
name|request
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|type
operator|==
name|Flag
operator|.
name|POST
condition|)
name|request
operator|=
name|helper
operator|.
name|getRequest
argument_list|(
name|FindInfosRequest
operator|.
name|class
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|==
literal|null
condition|)
name|request
operator|=
operator|new
name|FindInfosRequest
argument_list|()
expr_stmt|;
return|return
name|service
operator|.
name|findStudentInfos
argument_list|(
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"online"
argument_list|,
operator|(
name|request
operator|.
name|online
operator|==
literal|null
condition|?
literal|true
else|:
name|request
operator|.
name|online
operator|)
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameter
argument_list|(
literal|"query"
argument_list|,
operator|(
name|request
operator|.
name|query
operator|==
literal|null
condition|?
literal|""
else|:
name|request
operator|.
name|query
operator|)
argument_list|)
argument_list|,
name|request
operator|.
name|filter
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|,
name|Flag
operator|.
name|POST
argument_list|)
block|,
name|findEnrollments
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|List
argument_list|<
name|ClassAssignmentInterface
operator|.
name|Enrollment
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|ClassAssignmentInterface
operator|.
name|Enrollment
argument_list|>
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
name|FindInfosRequest
name|request
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|type
operator|==
name|Flag
operator|.
name|POST
condition|)
name|request
operator|=
name|helper
operator|.
name|getRequest
argument_list|(
name|FindInfosRequest
operator|.
name|class
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|==
literal|null
condition|)
name|request
operator|=
operator|new
name|FindInfosRequest
argument_list|()
expr_stmt|;
return|return
name|service
operator|.
name|findEnrollments
argument_list|(
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"online"
argument_list|,
operator|(
name|request
operator|.
name|online
operator|==
literal|null
condition|?
literal|true
else|:
name|request
operator|.
name|online
operator|)
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameter
argument_list|(
literal|"query"
argument_list|,
operator|(
name|request
operator|.
name|query
operator|==
literal|null
condition|?
literal|""
else|:
name|request
operator|.
name|query
operator|)
argument_list|)
argument_list|,
name|request
operator|.
name|filter
argument_list|,
name|helper
operator|.
name|getOptinalParameterLong
argument_list|(
literal|"courseId"
argument_list|,
name|request
operator|.
name|courseId
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameterLong
argument_list|(
literal|"classId"
argument_list|,
name|request
operator|.
name|classId
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|,
name|Flag
operator|.
name|POST
argument_list|)
block|,
name|querySuggestions
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|List
argument_list|<
name|String
index|[]
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|String
index|[]
argument_list|>
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|service
operator|.
name|querySuggestions
argument_list|(
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"online"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameter
argument_list|(
literal|"query"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameterInteger
argument_list|(
literal|"limit"
argument_list|,
literal|null
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|)
block|,
name|canEnroll
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|Long
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Long
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|service
operator|.
name|canEnroll
argument_list|(
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"online"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|studentId
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|)
block|,
name|savedRequest
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|CourseRequestInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|CourseRequestInterface
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|service
operator|.
name|savedRequest
argument_list|(
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"online"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"sectioning"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|sessionId
argument_list|,
name|studentId
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|)
block|,
name|savedResult
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|ClassAssignmentInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ClassAssignmentInterface
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|service
operator|.
name|savedResult
argument_list|(
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"online"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|sessionId
argument_list|,
name|studentId
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|)
block|,
name|lookupStudentSectioningStates
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|List
argument_list|<
name|StudentStatusInfo
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|StudentStatusInfo
argument_list|>
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|service
operator|.
name|lookupStudentSectioningStates
argument_list|()
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|)
block|,
name|sendEmail
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|service
operator|.
name|sendEmail
argument_list|(
name|sessionId
argument_list|,
name|studentId
argument_list|,
name|helper
operator|.
name|getOptinalParameter
argument_list|(
literal|"subject"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameter
argument_list|(
literal|"message"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameter
argument_list|(
literal|"cc"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"courseRequests"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"classSchedule"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"advisorRequests"
argument_list|,
literal|false
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"customEmail"
argument_list|,
literal|null
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|,
name|Flag
operator|.
name|POST
argument_list|)
block|,
name|changeStatus
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
name|ChangeStatusRequest
name|request
init|=
name|helper
operator|.
name|getRequest
argument_list|(
name|ChangeStatusRequest
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|request
operator|==
literal|null
condition|)
name|request
operator|=
operator|new
name|ChangeStatusRequest
argument_list|()
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|studentIds
operator|==
literal|null
condition|)
name|request
operator|.
name|studentIds
operator|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|studentIds
operator|.
name|isEmpty
argument_list|()
operator|&&
name|studentId
operator|!=
literal|null
condition|)
name|request
operator|.
name|studentIds
operator|.
name|add
argument_list|(
name|studentId
argument_list|)
expr_stmt|;
return|return
name|service
operator|.
name|changeStatus
argument_list|(
name|request
operator|.
name|studentIds
argument_list|,
name|helper
operator|.
name|getOptinalParameter
argument_list|(
literal|"note"
argument_list|,
name|request
operator|.
name|status
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameter
argument_list|(
literal|"status"
argument_list|,
name|request
operator|.
name|status
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|,
name|Flag
operator|.
name|POST
argument_list|)
block|,
name|changeLog
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|List
argument_list|<
name|ClassAssignmentInterface
operator|.
name|SectioningAction
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|ClassAssignmentInterface
operator|.
name|SectioningAction
argument_list|>
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|sid
init|=
name|helper
operator|.
name|getOptinalParameter
argument_list|(
literal|"studentId"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
return|return
name|service
operator|.
name|changeLog
argument_list|(
name|helper
operator|.
name|getOptinalParameter
argument_list|(
literal|"query"
argument_list|,
operator|(
name|sid
operator|==
literal|null
condition|?
literal|""
else|:
literal|"id:"
operator|+
name|sid
operator|)
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|)
block|,
name|massCancel
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
name|MassCancelRequest
name|request
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|type
operator|==
name|Flag
operator|.
name|POST
condition|)
name|request
operator|=
name|helper
operator|.
name|getRequest
argument_list|(
name|MassCancelRequest
operator|.
name|class
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|==
literal|null
condition|)
name|request
operator|=
operator|new
name|MassCancelRequest
argument_list|()
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|studentIds
operator|==
literal|null
condition|)
name|request
operator|.
name|studentIds
operator|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|studentIds
operator|.
name|isEmpty
argument_list|()
operator|&&
name|studentId
operator|!=
literal|null
condition|)
name|request
operator|.
name|studentIds
operator|.
name|add
argument_list|(
name|studentId
argument_list|)
expr_stmt|;
return|return
name|service
operator|.
name|massCancel
argument_list|(
name|request
operator|.
name|studentIds
argument_list|,
name|helper
operator|.
name|getOptinalParameter
argument_list|(
literal|"status"
argument_list|,
name|request
operator|.
name|status
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameter
argument_list|(
literal|"subject"
argument_list|,
name|request
operator|.
name|subject
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameter
argument_list|(
literal|"message"
argument_list|,
name|request
operator|.
name|message
argument_list|)
argument_list|,
name|helper
operator|.
name|getOptinalParameter
argument_list|(
literal|"cc"
argument_list|,
name|request
operator|.
name|cc
argument_list|)
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|,
name|Flag
operator|.
name|POST
argument_list|)
block|,
name|requestStudentUpdate
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
name|StudentIdsRequest
name|request
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|type
operator|==
name|Flag
operator|.
name|POST
condition|)
name|request
operator|=
name|helper
operator|.
name|getRequest
argument_list|(
name|StudentIdsRequest
operator|.
name|class
argument_list|)
expr_stmt|;
if|if
condition|(
name|request
operator|==
literal|null
condition|)
name|request
operator|=
operator|new
name|StudentIdsRequest
argument_list|()
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|studentIds
operator|==
literal|null
condition|)
name|request
operator|.
name|studentIds
operator|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
expr_stmt|;
if|if
condition|(
name|request
operator|.
name|studentIds
operator|.
name|isEmpty
argument_list|()
operator|&&
name|studentId
operator|!=
literal|null
condition|)
name|request
operator|.
name|studentIds
operator|.
name|add
argument_list|(
name|studentId
argument_list|)
expr_stmt|;
return|return
name|service
operator|.
name|requestStudentUpdate
argument_list|(
name|request
operator|.
name|studentIds
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|,
name|Flag
operator|.
name|POST
argument_list|)
block|,
name|listDegreePlans
argument_list|(
operator|new
name|OpExecution
argument_list|<
name|List
argument_list|<
name|DegreePlanInterface
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|DegreePlanInterface
argument_list|>
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|service
operator|.
name|listDegreePlans
argument_list|(
name|helper
operator|.
name|getOptinalParameterBoolean
argument_list|(
literal|"online"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|sessionId
argument_list|,
name|studentId
argument_list|)
return|;
block|}
block|}
argument_list|,
name|Flag
operator|.
name|GET
argument_list|)
block|, 		;
name|int
name|iFlags
init|=
literal|0
decl_stmt|;
name|OpExecution
name|iExecution
init|=
literal|null
decl_stmt|;
name|Operation
parameter_list|(
name|OpExecution
name|execution
parameter_list|,
name|Flag
modifier|...
name|flags
parameter_list|)
block|{
name|iExecution
operator|=
name|execution
expr_stmt|;
for|for
control|(
name|Flag
name|f
range|:
name|flags
control|)
block|{
name|iFlags
operator||=
name|f
operator|.
name|toInt
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|boolean
name|hasFlag
parameter_list|(
name|Flag
name|f
parameter_list|)
block|{
return|return
name|f
operator|.
name|has
argument_list|(
name|iFlags
argument_list|)
return|;
block|}
specifier|public
name|void
name|execute
parameter_list|(
name|SectioningService
name|service
parameter_list|,
name|ApiHelper
name|helper
parameter_list|,
name|Flag
name|type
parameter_list|,
name|Long
name|sessionId
parameter_list|,
name|Long
name|studentId
parameter_list|)
throws|throws
name|IOException
block|{
name|helper
operator|.
name|setResponse
argument_list|(
name|iExecution
operator|.
name|execute
argument_list|(
name|service
argument_list|,
name|helper
argument_list|,
name|type
argument_list|,
name|sessionId
argument_list|,
name|studentId
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"sectioning"
return|;
block|}
specifier|public
specifier|static
class|class
name|SectionRequest
block|{
name|Boolean
name|online
decl_stmt|;
name|CourseRequestInterface
name|request
decl_stmt|;
name|ArrayList
argument_list|<
name|ClassAssignmentInterface
operator|.
name|ClassAssignment
argument_list|>
name|currentAssignment
decl_stmt|;
name|Integer
name|selectedAssignment
decl_stmt|;
name|String
name|filter
decl_stmt|;
block|}
specifier|public
specifier|static
class|class
name|StudentIdsRequest
block|{
name|List
argument_list|<
name|Long
argument_list|>
name|studentIds
decl_stmt|;
block|}
specifier|public
specifier|static
class|class
name|ApproveEnrollmentsRequest
extends|extends
name|StudentIdsRequest
block|{
name|Long
name|classOrOfferingId
decl_stmt|;
block|}
specifier|public
specifier|static
class|class
name|ChangeStatusRequest
extends|extends
name|StudentIdsRequest
block|{
name|String
name|status
decl_stmt|;
block|}
specifier|public
specifier|static
class|class
name|MassCancelRequest
extends|extends
name|StudentIdsRequest
block|{
name|String
name|status
decl_stmt|;
name|String
name|subject
decl_stmt|;
name|String
name|message
decl_stmt|;
name|String
name|cc
decl_stmt|;
block|}
specifier|public
specifier|static
class|class
name|FindInfosRequest
block|{
name|Boolean
name|online
decl_stmt|;
name|String
name|query
decl_stmt|;
name|SectioningStatusFilterBox
operator|.
name|SectioningStatusFilterRpcRequest
name|filter
decl_stmt|;
name|Long
name|courseId
decl_stmt|;
name|Long
name|classId
decl_stmt|;
block|}
block|}
end_class

end_unit

