begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|api
operator|.
name|connectors
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|NoSuchBeanDefinitionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|context
operator|.
name|ApplicationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|api
operator|.
name|ApiConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|api
operator|.
name|ApiHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|client
operator|.
name|GwtRpcResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|gwt
operator|.
name|command
operator|.
name|server
operator|.
name|GwtRpcImplementation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|rights
operator|.
name|Right
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
annotation|@
name|Service
argument_list|(
literal|"/api/json"
argument_list|)
specifier|public
class|class
name|JsonConnector
extends|extends
name|ApiConnector
block|{
annotation|@
name|Autowired
name|ApplicationContext
name|applicationContext
decl_stmt|;
specifier|protected
parameter_list|<
name|T
extends|extends
name|GwtRpcResponse
parameter_list|>
name|void
name|execute
parameter_list|(
specifier|final
name|String
name|type
parameter_list|,
name|ApiHelper
name|helper
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|GwtRpcRequest
argument_list|<
name|T
argument_list|>
name|request
init|=
name|helper
operator|.
name|getRequest
argument_list|(
name|Class
operator|.
name|forName
argument_list|(
name|type
argument_list|)
argument_list|)
decl_stmt|;
comment|// retrieve implementation from given request
name|GwtRpcImplementation
argument_list|<
name|GwtRpcRequest
argument_list|<
name|T
argument_list|>
argument_list|,
name|T
argument_list|>
name|implementation
init|=
operator|(
name|GwtRpcImplementation
argument_list|<
name|GwtRpcRequest
argument_list|<
name|T
argument_list|>
argument_list|,
name|T
argument_list|>
operator|)
name|applicationContext
operator|.
name|getBean
argument_list|(
name|type
argument_list|)
decl_stmt|;
comment|// execute request
name|T
name|response
init|=
name|implementation
operator|.
name|execute
argument_list|(
name|request
argument_list|,
name|helper
operator|.
name|getSessionContext
argument_list|()
argument_list|)
decl_stmt|;
comment|// return response
name|helper
operator|.
name|setResponse
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchBeanDefinitionException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"There is no implementation for the given request type."
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Given type was not recognized."
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|void
name|doPost
parameter_list|(
name|ApiHelper
name|helper
parameter_list|)
throws|throws
name|IOException
block|{
name|helper
operator|.
name|getSessionContext
argument_list|()
operator|.
name|checkPermission
argument_list|(
name|Right
operator|.
name|ApiJsonConnector
argument_list|)
expr_stmt|;
name|String
name|type
init|=
name|helper
operator|.
name|getParameter
argument_list|(
literal|"type"
argument_list|)
decl_stmt|;
if|if
condition|(
name|type
operator|==
literal|null
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"TYPE parameter not provided."
argument_list|)
throw|;
name|execute
argument_list|(
name|type
argument_list|,
name|helper
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

