begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 (University Timetabling Application)  * Copyright (C) 2012, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *   */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|authority
package|;
end_package

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|security
operator|.
name|core
operator|.
name|GrantedAuthority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|UserAuthority
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|SimpleAuthority
implements|implements
name|UserAuthority
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|Long
name|iUniqueId
decl_stmt|;
specifier|private
name|Long
name|iAcademicSessionId
decl_stmt|;
specifier|private
name|String
name|iReference
decl_stmt|;
specifier|private
name|String
name|iLabel
decl_stmt|;
specifier|private
name|String
name|iRole
decl_stmt|;
specifier|private
name|String
name|iAuthority
decl_stmt|;
specifier|public
name|SimpleAuthority
parameter_list|(
name|Long
name|uniqueId
parameter_list|,
name|Long
name|academicSessionId
parameter_list|,
name|String
name|role
parameter_list|,
name|String
name|reference
parameter_list|,
name|String
name|label
parameter_list|)
block|{
name|iUniqueId
operator|=
name|uniqueId
expr_stmt|;
name|iAcademicSessionId
operator|=
name|academicSessionId
expr_stmt|;
name|iReference
operator|=
name|reference
expr_stmt|;
name|iLabel
operator|=
name|label
expr_stmt|;
name|iRole
operator|=
name|role
expr_stmt|;
name|iAuthority
operator|=
operator|(
name|iRole
operator|+
literal|"_"
operator|+
name|iReference
operator|)
operator|.
name|toUpperCase
argument_list|()
operator|.
name|replace
argument_list|(
literal|' '
argument_list|,
literal|'_'
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Long
name|getUniqueId
parameter_list|()
block|{
return|return
name|iUniqueId
return|;
block|}
annotation|@
name|Override
specifier|public
name|Long
name|getAcademicSessionId
parameter_list|()
block|{
return|return
name|iAcademicSessionId
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getReference
parameter_list|()
block|{
return|return
name|iReference
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLabel
parameter_list|()
block|{
return|return
name|iLabel
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getRole
parameter_list|()
block|{
return|return
name|iRole
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getAuthority
parameter_list|()
block|{
return|return
name|iAuthority
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getAuthority
argument_list|()
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getAuthority
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
operator|||
operator|!
operator|(
name|o
operator|instanceof
name|GrantedAuthority
operator|)
condition|)
return|return
literal|false
return|;
return|return
name|getAuthority
argument_list|()
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|GrantedAuthority
operator|)
name|o
operator|)
operator|.
name|getAuthority
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

