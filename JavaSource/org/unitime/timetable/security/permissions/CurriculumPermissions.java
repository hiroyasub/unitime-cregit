begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|permissions
package|;
end_package

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Curriculum
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DepartmentStatusType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|UserContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|rights
operator|.
name|Right
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|CurriculumPermissions
block|{
annotation|@
name|PermissionForRight
argument_list|(
name|Right
operator|.
name|CurriculumView
argument_list|)
specifier|public
specifier|static
class|class
name|CurriculumView
implements|implements
name|Permission
argument_list|<
name|Session
argument_list|>
block|{
annotation|@
name|Autowired
name|PermissionSession
name|permissionSession
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|check
parameter_list|(
name|UserContext
name|user
parameter_list|,
name|Session
name|source
parameter_list|)
block|{
return|return
name|permissionSession
operator|.
name|check
argument_list|(
name|user
argument_list|,
name|source
argument_list|,
name|DepartmentStatusType
operator|.
name|Status
operator|.
name|OwnerView
argument_list|,
name|DepartmentStatusType
operator|.
name|Status
operator|.
name|ManagerView
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Class
argument_list|<
name|Session
argument_list|>
name|type
parameter_list|()
block|{
return|return
name|Session
operator|.
name|class
return|;
block|}
block|}
annotation|@
name|PermissionForRight
argument_list|(
name|Right
operator|.
name|CurriculumAdd
argument_list|)
specifier|public
specifier|static
class|class
name|CurriculumAdd
implements|implements
name|Permission
argument_list|<
name|Department
argument_list|>
block|{
annotation|@
name|Autowired
name|PermissionDepartment
name|permissionDepartment
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|check
parameter_list|(
name|UserContext
name|user
parameter_list|,
name|Department
name|source
parameter_list|)
block|{
return|return
name|source
operator|!=
literal|null
operator|&&
name|permissionDepartment
operator|.
name|check
argument_list|(
name|user
argument_list|,
name|source
argument_list|,
name|DepartmentStatusType
operator|.
name|Status
operator|.
name|OwnerEdit
argument_list|,
name|DepartmentStatusType
operator|.
name|Status
operator|.
name|ManagerEdit
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Class
argument_list|<
name|Department
argument_list|>
name|type
parameter_list|()
block|{
return|return
name|Department
operator|.
name|class
return|;
block|}
block|}
annotation|@
name|PermissionForRight
argument_list|(
name|Right
operator|.
name|CurriculumEdit
argument_list|)
specifier|public
specifier|static
class|class
name|CurriculumEdit
implements|implements
name|Permission
argument_list|<
name|Curriculum
argument_list|>
block|{
annotation|@
name|Autowired
name|PermissionDepartment
name|permissionDepartment
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|check
parameter_list|(
name|UserContext
name|user
parameter_list|,
name|Curriculum
name|source
parameter_list|)
block|{
name|Department
name|department
init|=
operator|(
name|source
operator|==
literal|null
condition|?
literal|null
else|:
name|source
operator|.
name|getDepartment
argument_list|()
operator|)
decl_stmt|;
return|return
name|department
operator|!=
literal|null
operator|&&
name|permissionDepartment
operator|.
name|check
argument_list|(
name|user
argument_list|,
name|department
argument_list|,
name|DepartmentStatusType
operator|.
name|Status
operator|.
name|OwnerEdit
argument_list|,
name|DepartmentStatusType
operator|.
name|Status
operator|.
name|ManagerEdit
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Class
argument_list|<
name|Curriculum
argument_list|>
name|type
parameter_list|()
block|{
return|return
name|Curriculum
operator|.
name|class
return|;
block|}
block|}
annotation|@
name|PermissionForRight
argument_list|(
name|Right
operator|.
name|CurriculumDetail
argument_list|)
specifier|public
specifier|static
class|class
name|CurriculumDetail
implements|implements
name|Permission
argument_list|<
name|Curriculum
argument_list|>
block|{
annotation|@
name|Autowired
name|PermissionSession
name|permissionSession
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|check
parameter_list|(
name|UserContext
name|user
parameter_list|,
name|Curriculum
name|source
parameter_list|)
block|{
return|return
name|source
operator|!=
literal|null
operator|&&
name|permissionSession
operator|.
name|check
argument_list|(
name|user
argument_list|,
name|source
operator|.
name|getDepartment
argument_list|()
operator|.
name|getSession
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Class
argument_list|<
name|Curriculum
argument_list|>
name|type
parameter_list|()
block|{
return|return
name|Curriculum
operator|.
name|class
return|;
block|}
block|}
annotation|@
name|PermissionForRight
argument_list|(
name|Right
operator|.
name|CurriculumDelete
argument_list|)
specifier|public
specifier|static
class|class
name|CurriculumDelete
extends|extends
name|CurriculumEdit
block|{ }
annotation|@
name|PermissionForRight
argument_list|(
name|Right
operator|.
name|CurriculumMerge
argument_list|)
specifier|public
specifier|static
class|class
name|CurriculumMerge
extends|extends
name|CurriculumEdit
block|{ }
annotation|@
name|PermissionForRight
argument_list|(
name|Right
operator|.
name|CurriculumAdmin
argument_list|)
specifier|public
specifier|static
class|class
name|CurriculumAdmin
implements|implements
name|Permission
argument_list|<
name|Session
argument_list|>
block|{
annotation|@
name|Autowired
name|PermissionSession
name|permissionSession
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|check
parameter_list|(
name|UserContext
name|user
parameter_list|,
name|Session
name|source
parameter_list|)
block|{
return|return
name|user
operator|.
name|getCurrentAuthority
argument_list|()
operator|.
name|hasRight
argument_list|(
name|Right
operator|.
name|DepartmentIndependent
argument_list|)
operator|&&
name|permissionSession
operator|.
name|check
argument_list|(
name|user
argument_list|,
name|source
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Class
argument_list|<
name|Session
argument_list|>
name|type
parameter_list|()
block|{
return|return
name|Session
operator|.
name|class
return|;
block|}
block|}
annotation|@
name|PermissionForRight
argument_list|(
name|Right
operator|.
name|CurriculumProjectionRulesDetail
argument_list|)
specifier|public
specifier|static
class|class
name|CurriculumProjectionRulesDetail
extends|extends
name|CurriculumView
block|{}
annotation|@
name|PermissionForRight
argument_list|(
name|Right
operator|.
name|CurriculumProjectionRulesEdit
argument_list|)
specifier|public
specifier|static
class|class
name|CurriculumProjectionRulesEdit
extends|extends
name|CurriculumAdmin
block|{}
block|}
end_class

end_unit

