begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 (University Timetabling Application)  * Copyright (C) 2012, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|permissions
package|;
end_package

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|annotation
operator|.
name|Autowired
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|stereotype
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Class_
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DepartmentStatusType
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|UserContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|rights
operator|.
name|Right
import|;
end_import

begin_class
specifier|public
class|class
name|ClassPermissions
block|{
specifier|public
specifier|static
specifier|abstract
class|class
name|AbstractClassPermission
implements|implements
name|Permission
argument_list|<
name|Class_
argument_list|>
block|{
annotation|@
name|Autowired
name|SimpleDepartmentPermission
name|simpleDepartmentPermission
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|check
parameter_list|(
name|UserContext
name|user
parameter_list|,
name|Class_
name|clazz
parameter_list|)
block|{
return|return
name|clazz
operator|!=
literal|null
operator|&&
operator|(
name|simpleDepartmentPermission
operator|.
name|check
argument_list|(
name|user
argument_list|,
name|clazz
operator|.
name|getControllingDept
argument_list|()
argument_list|,
name|right
argument_list|()
argument_list|,
name|ownerStatus
argument_list|()
argument_list|)
operator|||
name|simpleDepartmentPermission
operator|.
name|check
argument_list|(
name|user
argument_list|,
name|clazz
operator|.
name|getManagingDept
argument_list|()
argument_list|,
name|right
argument_list|()
argument_list|,
name|managerStatus
argument_list|()
argument_list|)
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Class
argument_list|<
name|Class_
argument_list|>
name|type
parameter_list|()
block|{
return|return
name|Class_
operator|.
name|class
return|;
block|}
specifier|public
specifier|abstract
name|Right
name|right
parameter_list|()
function_decl|;
specifier|public
specifier|abstract
name|Status
name|ownerStatus
parameter_list|()
function_decl|;
specifier|public
specifier|abstract
name|Status
name|managerStatus
parameter_list|()
function_decl|;
block|}
annotation|@
name|Service
argument_list|(
literal|"permissionClassEdit"
argument_list|)
specifier|public
specifier|static
class|class
name|ClassEdit
extends|extends
name|AbstractClassPermission
block|{
annotation|@
name|Override
specifier|public
name|Right
name|right
parameter_list|()
block|{
return|return
name|Right
operator|.
name|ClassEdit
return|;
block|}
annotation|@
name|Override
specifier|public
name|Status
name|ownerStatus
parameter_list|()
block|{
return|return
name|Status
operator|.
name|OwnerEdit
return|;
block|}
annotation|@
name|Override
specifier|public
name|Status
name|managerStatus
parameter_list|()
block|{
return|return
name|Status
operator|.
name|ManagerEdit
return|;
block|}
block|}
annotation|@
name|Service
argument_list|(
literal|"permissionClassDetail"
argument_list|)
specifier|public
specifier|static
class|class
name|ClassDetail
extends|extends
name|AbstractClassPermission
block|{
annotation|@
name|Override
specifier|public
name|Right
name|right
parameter_list|()
block|{
return|return
name|Right
operator|.
name|ClassDetail
return|;
block|}
annotation|@
name|Override
specifier|public
name|Status
name|ownerStatus
parameter_list|()
block|{
return|return
name|Status
operator|.
name|OwnerView
return|;
block|}
annotation|@
name|Override
specifier|public
name|Status
name|managerStatus
parameter_list|()
block|{
return|return
name|Status
operator|.
name|ManagerView
return|;
block|}
block|}
block|}
end_class

end_unit

