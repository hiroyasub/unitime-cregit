begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.4 (University Timetabling Application)  * Copyright (C) 2012, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|context
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|UserAuthority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|authority
operator|.
name|RoleAuthority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|qualifiers
operator|.
name|SimpleQualifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|util
operator|.
name|Constants
import|;
end_import

begin_class
specifier|public
class|class
name|LegacyUserContext
extends|extends
name|UniTimeUserContext
block|{
specifier|private
name|User
name|iUser
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|public
name|LegacyUserContext
parameter_list|(
name|User
name|user
parameter_list|)
block|{
name|super
argument_list|(
name|user
operator|.
name|getId
argument_list|()
argument_list|,
name|user
operator|.
name|getLogin
argument_list|()
argument_list|,
name|user
operator|.
name|getName
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|iUser
operator|=
name|user
expr_stmt|;
name|Long
name|sessionId
init|=
operator|(
name|Long
operator|)
name|user
operator|.
name|getAttribute
argument_list|(
name|Constants
operator|.
name|SESSION_ID_ATTR_NAME
argument_list|)
decl_stmt|;
if|if
condition|(
name|sessionId
operator|!=
literal|null
operator|&&
name|user
operator|.
name|getRole
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|List
argument_list|<
name|?
extends|extends
name|UserAuthority
argument_list|>
name|authorities
init|=
name|getAuthorities
argument_list|(
name|user
operator|.
name|getCurrentRole
argument_list|()
argument_list|,
operator|new
name|SimpleQualifier
argument_list|(
literal|"Session"
argument_list|,
name|sessionId
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|authorities
operator|.
name|isEmpty
argument_list|()
condition|)
name|setCurrentAuthority
argument_list|(
name|authorities
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCurrentAuthority
parameter_list|(
name|UserAuthority
name|authority
parameter_list|)
block|{
name|super
operator|.
name|setCurrentAuthority
argument_list|(
name|authority
argument_list|)
expr_stmt|;
name|iUser
operator|.
name|setAttribute
argument_list|(
name|Constants
operator|.
name|SESSION_ID_ATTR_NAME
argument_list|,
name|authority
operator|.
name|getAcademicSession
argument_list|()
operator|.
name|getQualifierId
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|authority
operator|instanceof
name|RoleAuthority
condition|)
name|iUser
operator|.
name|setRole
argument_list|(
name|authority
operator|.
name|getRole
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

