begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|reports
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|reports
operator|.
name|AbstractReport
operator|.
name|Line
import|;
end_import

begin_import
import|import
name|com
operator|.
name|lowagie
operator|.
name|text
operator|.
name|DocumentException
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_interface
specifier|public
interface|interface
name|ReportWriter
block|{
specifier|public
name|void
name|setFooter
parameter_list|(
name|String
name|footer
parameter_list|)
function_decl|;
specifier|public
name|void
name|setHeader
parameter_list|(
name|Line
modifier|...
name|line
parameter_list|)
function_decl|;
specifier|public
name|Line
index|[]
name|getHeader
parameter_list|()
function_decl|;
specifier|public
name|void
name|printLine
parameter_list|(
name|Line
name|line
parameter_list|)
throws|throws
name|DocumentException
function_decl|;
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
throws|,
name|DocumentException
function_decl|;
specifier|public
name|void
name|open
parameter_list|(
name|OutputStream
name|out
parameter_list|)
throws|throws
name|DocumentException
throws|,
name|IOException
function_decl|;
specifier|public
name|void
name|setPageName
parameter_list|(
name|String
name|pageName
parameter_list|)
function_decl|;
specifier|public
name|void
name|setCont
parameter_list|(
name|String
name|cont
parameter_list|)
function_decl|;
specifier|public
name|void
name|printHeader
parameter_list|(
name|boolean
name|newPage
parameter_list|)
throws|throws
name|DocumentException
function_decl|;
specifier|public
name|void
name|newPage
parameter_list|()
throws|throws
name|DocumentException
function_decl|;
specifier|public
name|void
name|lastPage
parameter_list|()
throws|throws
name|DocumentException
function_decl|;
specifier|public
name|int
name|getLineNumber
parameter_list|()
function_decl|;
specifier|public
name|int
name|getNrLinesPerPage
parameter_list|()
function_decl|;
specifier|public
name|int
name|getNrCharsPerLine
parameter_list|()
function_decl|;
specifier|public
name|void
name|printSeparator
parameter_list|(
name|Line
name|line
parameter_list|)
throws|throws
name|DocumentException
function_decl|;
specifier|public
name|int
name|getSeparatorNrLines
parameter_list|()
function_decl|;
specifier|public
name|void
name|setListener
parameter_list|(
name|Listener
name|listener
parameter_list|)
function_decl|;
specifier|public
name|boolean
name|isSkipRepeating
parameter_list|()
function_decl|;
specifier|public
interface|interface
name|Listener
block|{
specifier|public
name|void
name|headerPrinted
parameter_list|()
function_decl|;
block|}
block|}
end_interface

end_unit

