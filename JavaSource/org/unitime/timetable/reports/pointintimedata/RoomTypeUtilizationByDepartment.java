begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|reports
operator|.
name|pointintimedata
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Location
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PointInTimeData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomType
import|;
end_import

begin_comment
comment|/**  * @author says  *  */
end_comment

begin_class
specifier|public
class|class
name|RoomTypeUtilizationByDepartment
extends|extends
name|RoomUtilization
block|{
specifier|public
name|RoomTypeUtilizationByDepartment
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|intializeHeader
parameter_list|()
block|{
name|ArrayList
argument_list|<
name|String
argument_list|>
name|hdr
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnRoomDepartmentCode
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnRoomDepartmentAbbreviation
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnRoomDepartmentName
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnRoomType
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnStationHours
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnOccupancy
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnOrganizedWeeklyRoomHours
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnNotOrganizedWeeklyRoomHours
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnWeeklyRoomHours
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnOrganizedWeeklyStudentClassHours
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnNotOrganizedWeeklyStudentClassHours
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnWeeklyStudentClassHours
argument_list|()
argument_list|)
expr_stmt|;
name|setHeader
argument_list|(
name|hdr
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|reportName
parameter_list|()
block|{
return|return
operator|(
name|MSG
operator|.
name|roomTypeUtilizationByDepartmentReport
argument_list|()
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|reportDescription
parameter_list|()
block|{
return|return
operator|(
name|MSG
operator|.
name|roomTypeUtilizationByDepartmentReportNote
argument_list|()
operator|)
return|;
block|}
specifier|private
name|void
name|addRowForDepartmentRoomType
parameter_list|(
name|DepartmentRoomTypeHours
name|departmentRoomTypeHours
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|String
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
name|departmentRoomTypeHours
operator|.
name|getDepartment
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|departmentRoomTypeHours
operator|.
name|getDepartment
argument_list|()
operator|.
name|getDeptCode
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|departmentRoomTypeHours
operator|.
name|getDepartment
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|departmentRoomTypeHours
operator|.
name|getDepartment
argument_list|()
operator|.
name|getAbbreviation
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|departmentRoomTypeHours
operator|.
name|getDepartment
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|departmentRoomTypeHours
operator|.
name|getDepartment
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|departmentRoomTypeHours
operator|.
name|getRoomType
argument_list|()
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
operator|(
name|Float
operator|.
name|toString
argument_list|(
name|departmentRoomTypeHours
operator|.
name|getStationHours
argument_list|()
argument_list|)
operator|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|departmentRoomTypeHours
operator|.
name|getOccupancy
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|departmentRoomTypeHours
operator|.
name|getOrganizedWeeklyRoomHours
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|departmentRoomTypeHours
operator|.
name|getNotOrganizedWeeklyRoomHours
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|departmentRoomTypeHours
operator|.
name|getWeeklyRoomHours
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|departmentRoomTypeHours
operator|.
name|getOrganizedWeeklyStudentClassHours
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|departmentRoomTypeHours
operator|.
name|getNotOrganizedWeeklyStudentClassHours
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|departmentRoomTypeHours
operator|.
name|getWeeklyStudentClassHours
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addDataRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|createRoomUtilizationReportFor
parameter_list|(
name|PointInTimeData
name|pointInTimeData
parameter_list|,
name|Session
name|hibSession
parameter_list|)
block|{
name|HashMap
argument_list|<
name|Long
argument_list|,
name|RoomTypeUtilizationByDepartment
operator|.
name|LocationHours
argument_list|>
name|locationUtilization
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|RoomTypeUtilizationByDepartment
operator|.
name|LocationHours
argument_list|>
argument_list|()
decl_stmt|;
name|HashSet
argument_list|<
name|Long
argument_list|>
name|processedClassIds
init|=
operator|new
name|HashSet
argument_list|<
name|Long
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|deptId
range|:
name|getDepartmentIds
argument_list|()
control|)
block|{
for|for
control|(
name|PitClass
name|pc
range|:
name|findAllPitClassesWithContactHoursForRoomDepartmentAndRoomTypes
argument_list|(
name|deptId
argument_list|,
name|pointInTimeData
argument_list|,
name|hibSession
argument_list|)
control|)
block|{
if|if
condition|(
operator|!
name|processedClassIds
operator|.
name|contains
argument_list|(
name|pc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
condition|)
block|{
name|processedClassIds
operator|.
name|add
argument_list|(
name|pc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Long
name|locationPermanentId
range|:
name|pc
operator|.
name|getLocationPermanentIdList
argument_list|()
control|)
block|{
name|LocationHours
name|lh
init|=
name|locationUtilization
operator|.
name|get
argument_list|(
name|locationPermanentId
argument_list|)
decl_stmt|;
if|if
condition|(
name|lh
operator|==
literal|null
condition|)
block|{
name|lh
operator|=
operator|new
name|LocationHours
argument_list|(
name|locationPermanentId
argument_list|,
name|getStandardMinutesInReportingHour
argument_list|()
argument_list|,
name|getStandardWeeksInReportingTerm
argument_list|()
argument_list|)
expr_stmt|;
name|locationUtilization
operator|.
name|put
argument_list|(
name|locationPermanentId
argument_list|,
name|lh
argument_list|)
expr_stmt|;
block|}
name|lh
operator|.
name|addRoomHours
argument_list|(
name|pc
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
name|HashMap
argument_list|<
name|Department
argument_list|,
name|HashMap
argument_list|<
name|RoomType
argument_list|,
name|DepartmentRoomTypeHours
argument_list|>
argument_list|>
name|departmentRoomTypeHours
init|=
operator|new
name|HashMap
argument_list|<
name|Department
argument_list|,
name|HashMap
argument_list|<
name|RoomType
argument_list|,
name|DepartmentRoomTypeHours
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|HashSet
argument_list|<
name|Location
argument_list|>
name|locations
init|=
operator|new
name|HashSet
argument_list|<
name|Location
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|pointInTimeData
operator|.
name|getSession
argument_list|()
operator|.
name|getRooms
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|pointInTimeData
operator|.
name|getSession
argument_list|()
operator|.
name|getRooms
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|locations
operator|.
name|addAll
argument_list|(
name|pointInTimeData
operator|.
name|getSession
argument_list|()
operator|.
name|getRooms
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Location
name|l
range|:
name|locations
control|)
block|{
name|LocationHours
name|lh
init|=
name|locationUtilization
operator|.
name|get
argument_list|(
name|l
operator|.
name|getPermanentId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|lh
operator|!=
literal|null
operator|&&
operator|(
operator|(
name|l
operator|.
name|getControllingDepartment
argument_list|()
operator|!=
literal|null
operator|&&
name|getDepartmentIds
argument_list|()
operator|.
name|contains
argument_list|(
name|l
operator|.
name|getControllingDepartment
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|&&
name|getRoomTypeIds
argument_list|()
operator|.
name|contains
argument_list|(
name|l
operator|.
name|getRoomType
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|)
operator|||
operator|(
name|l
operator|.
name|getControllingDepartment
argument_list|()
operator|==
literal|null
operator|&&
name|getRoomTypeIds
argument_list|()
operator|.
name|contains
argument_list|(
name|l
operator|.
name|getRoomType
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|)
operator|)
condition|)
block|{
name|HashMap
argument_list|<
name|RoomType
argument_list|,
name|DepartmentRoomTypeHours
argument_list|>
name|rth
init|=
name|departmentRoomTypeHours
operator|.
name|get
argument_list|(
name|l
operator|.
name|getControllingDepartment
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|rth
operator|==
literal|null
condition|)
block|{
name|rth
operator|=
operator|new
name|HashMap
argument_list|<
name|RoomType
argument_list|,
name|RoomTypeUtilizationByDepartment
operator|.
name|DepartmentRoomTypeHours
argument_list|>
argument_list|()
expr_stmt|;
name|departmentRoomTypeHours
operator|.
name|put
argument_list|(
name|l
operator|.
name|getControllingDepartment
argument_list|()
argument_list|,
name|rth
argument_list|)
expr_stmt|;
block|}
name|DepartmentRoomTypeHours
name|drth
init|=
name|rth
operator|.
name|get
argument_list|(
name|l
operator|.
name|getRoomType
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|drth
operator|==
literal|null
condition|)
block|{
name|drth
operator|=
operator|new
name|DepartmentRoomTypeHours
argument_list|(
name|l
operator|.
name|getControllingDepartment
argument_list|()
argument_list|,
name|l
operator|.
name|getRoomType
argument_list|()
argument_list|)
expr_stmt|;
name|rth
operator|.
name|put
argument_list|(
name|l
operator|.
name|getRoomType
argument_list|()
argument_list|,
name|drth
argument_list|)
expr_stmt|;
block|}
name|drth
operator|.
name|addRoomHours
argument_list|(
name|l
argument_list|,
name|lh
argument_list|)
expr_stmt|;
block|}
block|}
block|}
for|for
control|(
name|Department
name|d
range|:
name|departmentRoomTypeHours
operator|.
name|keySet
argument_list|()
control|)
block|{
for|for
control|(
name|RoomType
name|rt
range|:
name|departmentRoomTypeHours
operator|.
name|get
argument_list|(
name|d
argument_list|)
operator|.
name|keySet
argument_list|()
control|)
block|{
name|addRowForDepartmentRoomType
argument_list|(
name|departmentRoomTypeHours
operator|.
name|get
argument_list|(
name|d
argument_list|)
operator|.
name|get
argument_list|(
name|rt
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|runReport
parameter_list|(
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
parameter_list|)
block|{
name|PointInTimeData
name|pitd
init|=
operator|(
name|PointInTimeData
operator|)
name|hibSession
operator|.
name|createQuery
argument_list|(
literal|"from PointInTimeData pitd where pitd.uniqueId = :uid"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"uid"
argument_list|,
name|getPointInTimeDataUniqueId
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|uniqueResult
argument_list|()
decl_stmt|;
name|createRoomUtilizationReportFor
argument_list|(
name|pitd
argument_list|,
name|hibSession
argument_list|)
expr_stmt|;
block|}
specifier|private
class|class
name|DepartmentRoomTypeHours
block|{
specifier|private
name|float
name|iWeeklyRoomHours
init|=
literal|0.0f
decl_stmt|;
specifier|private
name|float
name|iOrganizedWeeklyRoomHours
init|=
literal|0.0f
decl_stmt|;
specifier|private
name|float
name|iNotOrganizedWeeklyRoomHours
init|=
literal|0.0f
decl_stmt|;
specifier|private
name|float
name|iWeeklyStudentClassHours
init|=
literal|0.0f
decl_stmt|;
specifier|private
name|float
name|iOrganizedWeeklyStudentClassHours
init|=
literal|0.0f
decl_stmt|;
specifier|private
name|float
name|iNotOrganizedWeeklyStudentClassHours
init|=
literal|0.0f
decl_stmt|;
specifier|private
name|float
name|iStationHours
init|=
literal|0.0f
decl_stmt|;
specifier|private
name|RoomType
name|iRoomType
decl_stmt|;
specifier|private
name|Department
name|iDepartment
decl_stmt|;
specifier|public
name|RoomType
name|getRoomType
parameter_list|()
block|{
return|return
name|iRoomType
return|;
block|}
specifier|public
name|Department
name|getDepartment
parameter_list|()
block|{
return|return
name|iDepartment
return|;
block|}
specifier|public
name|float
name|getOrganizedWeeklyStudentClassHours
parameter_list|()
block|{
return|return
name|iOrganizedWeeklyStudentClassHours
return|;
block|}
specifier|public
name|float
name|getNotOrganizedWeeklyStudentClassHours
parameter_list|()
block|{
return|return
name|iNotOrganizedWeeklyStudentClassHours
return|;
block|}
specifier|public
name|float
name|getWeeklyStudentClassHours
parameter_list|()
block|{
return|return
name|this
operator|.
name|iWeeklyStudentClassHours
return|;
block|}
specifier|public
name|float
name|getWeeklyRoomHours
parameter_list|()
block|{
return|return
name|iWeeklyRoomHours
return|;
block|}
specifier|public
name|float
name|getOrganizedWeeklyRoomHours
parameter_list|()
block|{
return|return
name|iOrganizedWeeklyRoomHours
return|;
block|}
specifier|public
name|float
name|getNotOrganizedWeeklyRoomHours
parameter_list|()
block|{
return|return
name|iNotOrganizedWeeklyRoomHours
return|;
block|}
specifier|public
name|float
name|getStationHours
parameter_list|()
block|{
return|return
name|iStationHours
return|;
block|}
specifier|public
name|float
name|getOccupancy
parameter_list|()
block|{
return|return
operator|(
name|getWeeklyStudentClassHours
argument_list|()
operator|/
name|getStationHours
argument_list|()
operator|)
return|;
block|}
specifier|public
name|DepartmentRoomTypeHours
parameter_list|(
name|Department
name|department
parameter_list|,
name|RoomType
name|roomType
parameter_list|)
block|{
name|this
operator|.
name|iDepartment
operator|=
name|department
expr_stmt|;
name|this
operator|.
name|iRoomType
operator|=
name|roomType
expr_stmt|;
block|}
specifier|public
name|void
name|addRoomHours
parameter_list|(
name|Location
name|location
parameter_list|,
name|LocationHours
name|locationHours
parameter_list|)
block|{
name|iStationHours
operator|+=
name|location
operator|.
name|getCapacity
argument_list|()
operator|.
name|intValue
argument_list|()
operator|*
name|locationHours
operator|.
name|getWeeklyRoomHours
argument_list|()
expr_stmt|;
name|iWeeklyRoomHours
operator|+=
operator|(
name|locationHours
operator|.
name|getWeeklyRoomHours
argument_list|()
operator|)
expr_stmt|;
name|iOrganizedWeeklyRoomHours
operator|+=
operator|(
name|locationHours
operator|.
name|getOrganizedWeeklyRoomHours
argument_list|()
operator|)
expr_stmt|;
name|iNotOrganizedWeeklyRoomHours
operator|+=
operator|(
name|locationHours
operator|.
name|getNotOrganizedWeeklyRoomHours
argument_list|()
operator|)
expr_stmt|;
name|iWeeklyStudentClassHours
operator|+=
operator|(
name|locationHours
operator|.
name|getWeeklyStudentClassHours
argument_list|()
operator|)
expr_stmt|;
name|iOrganizedWeeklyStudentClassHours
operator|+=
operator|(
name|locationHours
operator|.
name|getOrganizedWeeklyStudentClassHours
argument_list|()
operator|)
expr_stmt|;
name|iNotOrganizedWeeklyStudentClassHours
operator|+=
operator|(
name|locationHours
operator|.
name|getNotOrganizedWeeklyStudentClassHours
argument_list|()
operator|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

