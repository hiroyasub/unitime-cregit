begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|reports
operator|.
name|pointintimedata
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitClassEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PointInTimeData
import|;
end_import

begin_class
specifier|public
class|class
name|AllWSCHForDepartmentByClass
extends|extends
name|WSCHByDepartment
block|{
specifier|private
name|Long
name|departmentId
decl_stmt|;
specifier|public
name|AllWSCHForDepartmentByClass
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|getParameters
argument_list|()
operator|.
name|add
argument_list|(
name|Parameter
operator|.
name|DEPARTMENT
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|intializeHeader
parameter_list|()
block|{
name|ArrayList
argument_list|<
name|String
argument_list|>
name|hdr
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnDepartmentCode
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnDepartmentAbbreviation
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnDepartmentName
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnSubjectArea
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnCourseNumber
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnItype
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnOrganized
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnSectionNumber
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnExternalId
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnOrganizedWeeklyClassHours
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnNotOrganizedWeeklyClassHours
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnWeeklyClassHours
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnOrganizedWeeklyStudentClassHours
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnNotOrganizedWeeklyStudentClassHours
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnWeeklyStudentClassHours
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnNumberOfClassMeetings
argument_list|()
argument_list|)
expr_stmt|;
name|setHeader
argument_list|(
name|hdr
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|parseParameters
parameter_list|()
block|{
name|super
operator|.
name|parseParameters
argument_list|()
expr_stmt|;
if|if
condition|(
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|DEPARTMENT
argument_list|)
operator|.
name|size
argument_list|()
operator|!=
literal|1
condition|)
block|{
comment|//TODO: error
block|}
else|else
block|{
name|setDepartmentId
argument_list|(
operator|(
name|Long
operator|)
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|DEPARTMENT
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|reportName
parameter_list|()
block|{
return|return
operator|(
name|MSG
operator|.
name|deptWSCHReportAllHoursForDepartmentByClass
argument_list|()
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|reportDescription
parameter_list|()
block|{
return|return
operator|(
name|MSG
operator|.
name|deptWSCBReportAllHoursForDepartmentByClassNote
argument_list|()
operator|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|float
name|weeklyClassHours
parameter_list|(
name|PitClass
name|pitClass
parameter_list|)
block|{
return|return
operator|(
name|pitClass
operator|.
name|getAllWeeklyClassHours
argument_list|(
name|getStandardMinutesInReportingHour
argument_list|()
argument_list|,
name|getStandardWeeksInReportingTerm
argument_list|()
argument_list|)
operator|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|float
name|weeklyStudentClassHours
parameter_list|(
name|PitClass
name|pitClass
parameter_list|)
block|{
return|return
operator|(
name|pitClass
operator|.
name|getAllWeeklyStudentClassHours
argument_list|(
name|getStandardMinutesInReportingHour
argument_list|()
argument_list|,
name|getStandardWeeksInReportingTerm
argument_list|()
argument_list|)
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|createWeeklyStudentContactHoursByDepartmentReportFor
parameter_list|(
name|PointInTimeData
name|pointInTimeData
parameter_list|,
name|Session
name|hibSession
parameter_list|)
block|{
name|Department
name|d
init|=
operator|(
name|Department
operator|)
name|hibSession
operator|.
name|createQuery
argument_list|(
literal|"from Department d where d.uniqueId = :id"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"id"
argument_list|,
name|getDepartmentId
argument_list|()
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|uniqueResult
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|PitClass
argument_list|>
name|pitClassesForDept
init|=
name|findAllPitClassesWithContactHoursForDepartment
argument_list|(
name|pointInTimeData
argument_list|,
name|d
argument_list|,
name|hibSession
argument_list|)
decl_stmt|;
for|for
control|(
name|PitClass
name|pc
range|:
name|pitClassesForDept
control|)
block|{
name|ArrayList
argument_list|<
name|String
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
name|d
operator|.
name|getDeptCode
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|d
operator|.
name|getAbbreviation
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|d
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|pc
operator|.
name|getPitSchedulingSubpart
argument_list|()
operator|.
name|getPitInstrOfferingConfig
argument_list|()
operator|.
name|getPitInstructionalOffering
argument_list|()
operator|.
name|getControllingPitCourseOffering
argument_list|()
operator|.
name|getSubjectArea
argument_list|()
operator|.
name|getSubjectAreaAbbreviation
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|pc
operator|.
name|getPitSchedulingSubpart
argument_list|()
operator|.
name|getPitInstrOfferingConfig
argument_list|()
operator|.
name|getPitInstructionalOffering
argument_list|()
operator|.
name|getControllingPitCourseOffering
argument_list|()
operator|.
name|getCourseNbr
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|pc
operator|.
name|getPitSchedulingSubpart
argument_list|()
operator|.
name|getItype
argument_list|()
operator|.
name|getAbbv
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|pc
operator|.
name|getPitSchedulingSubpart
argument_list|()
operator|.
name|getItype
argument_list|()
operator|.
name|getOrganized
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|pc
operator|.
name|getSectionNumber
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
operator|(
name|pc
operator|.
name|getPitSchedulingSubpart
argument_list|()
operator|.
name|getSchedulingSubpartSuffixCache
argument_list|()
operator|.
name|equals
argument_list|(
literal|"-"
argument_list|)
condition|?
literal|""
else|:
name|pc
operator|.
name|getPitSchedulingSubpart
argument_list|()
operator|.
name|getSchedulingSubpartSuffixCache
argument_list|()
operator|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|pc
operator|.
name|getExternalUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|pc
operator|.
name|getOrganizedWeeklyClassHours
argument_list|(
name|getStandardMinutesInReportingHour
argument_list|()
argument_list|,
name|getStandardWeeksInReportingTerm
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|pc
operator|.
name|getNotOrganizedWeeklyClassHours
argument_list|(
name|getStandardMinutesInReportingHour
argument_list|()
argument_list|,
name|getStandardWeeksInReportingTerm
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|weeklyClassHours
argument_list|(
name|pc
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|pc
operator|.
name|getOrganizedWeeklyStudentClassHours
argument_list|(
name|getStandardMinutesInReportingHour
argument_list|()
argument_list|,
name|getStandardWeeksInReportingTerm
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|pc
operator|.
name|getNotOrganizedWeeklyStudentClassHours
argument_list|(
name|getStandardMinutesInReportingHour
argument_list|()
argument_list|,
name|getStandardWeeksInReportingTerm
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|weeklyStudentClassHours
argument_list|(
name|pc
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|cnt
init|=
literal|0
decl_stmt|;
for|for
control|(
name|PitClassEvent
name|pce
range|:
name|pc
operator|.
name|getPitClassEvents
argument_list|()
control|)
block|{
name|cnt
operator|+=
name|pce
operator|.
name|getPitClassMeetings
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
name|row
operator|.
name|add
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|cnt
argument_list|)
argument_list|)
expr_stmt|;
name|addDataRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|Long
name|getDepartmentId
parameter_list|()
block|{
return|return
name|departmentId
return|;
block|}
specifier|public
name|void
name|setDepartmentId
parameter_list|(
name|Long
name|departmentId
parameter_list|)
block|{
name|this
operator|.
name|departmentId
operator|=
name|departmentId
expr_stmt|;
block|}
block|}
end_class

end_unit

