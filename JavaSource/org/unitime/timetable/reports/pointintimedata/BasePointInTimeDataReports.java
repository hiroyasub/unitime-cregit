begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|reports
operator|.
name|pointintimedata
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|messages
operator|.
name|PointInTimeDataReports
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|ApplicationProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Building
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseCreditFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseCreditType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseCreditUnitType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|CourseType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DemandOfferingType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DepartmentStatusType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|DistributionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|ExamType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|OfferingConsentType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PointInTimeData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PositionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RefTableEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Room
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomFeatureType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|RoomType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|StudentSectioningStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|SubjectArea
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TimetableManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|dao
operator|.
name|SessionDAO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|security
operator|.
name|UserContext
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|BasePointInTimeDataReports
block|{
specifier|private
specifier|static
interface|interface
name|ParameterImplementation
block|{
specifier|public
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|getValues
parameter_list|(
name|UserContext
name|user
parameter_list|)
function_decl|;
specifier|public
name|String
name|getDefaultValue
parameter_list|(
name|UserContext
name|user
parameter_list|)
function_decl|;
specifier|public
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parseSetValue
parameter_list|(
name|String
name|valueString
parameter_list|)
function_decl|;
block|}
comment|//TODO: extend for unknown teaching responsibility
specifier|private
specifier|static
class|class
name|RefTableParameters
implements|implements
name|ParameterImplementation
block|{
specifier|protected
name|Class
argument_list|<
name|?
extends|extends
name|RefTableEntry
argument_list|>
name|iReference
decl_stmt|;
name|RefTableParameters
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|RefTableEntry
argument_list|>
name|reference
parameter_list|)
block|{
name|iReference
operator|=
name|reference
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|getValues
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|ret
init|=
operator|new
name|Hashtable
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|StudentSectioningStatus
operator|.
name|class
operator|.
name|equals
argument_list|(
name|iReference
argument_list|)
condition|)
block|{
for|for
control|(
name|StudentSectioningStatus
name|ref
range|:
name|StudentSectioningStatus
operator|.
name|findAll
argument_list|(
name|user
operator|.
name|getCurrentAcademicSessionId
argument_list|()
argument_list|)
control|)
name|ret
operator|.
name|put
argument_list|(
name|ref
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|ref
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|RefTableEntry
name|ref
range|:
operator|(
name|List
argument_list|<
name|RefTableEntry
argument_list|>
operator|)
name|SessionDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|getSession
argument_list|()
operator|.
name|createCriteria
argument_list|(
name|iReference
argument_list|)
operator|.
name|list
argument_list|()
control|)
name|ret
operator|.
name|put
argument_list|(
name|ref
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|ref
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDefaultValue
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parseSetValue
parameter_list|(
name|String
name|valueString
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parameterValues
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|valueString
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
block|{
name|parameterValues
operator|.
name|add
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
name|parameterValues
operator|)
return|;
block|}
block|}
specifier|private
specifier|static
class|class
name|RefTableParametersPlusUnknown
extends|extends
name|RefTableParameters
block|{
name|RefTableParametersPlusUnknown
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|RefTableEntry
argument_list|>
name|reference
parameter_list|)
block|{
name|super
argument_list|(
name|reference
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|getValues
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|map
init|=
name|super
operator|.
name|getValues
argument_list|(
name|user
argument_list|)
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
operator|new
name|Long
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|,
name|MSG
operator|.
name|labelUnknown
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|(
name|map
operator|)
return|;
block|}
block|}
specifier|public
specifier|static
enum|enum
name|Parameter
block|{
name|PITD
argument_list|(
literal|"Point In Time Data"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
operator|new
name|ParameterImplementation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|getValues
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
name|Long
name|sessionId
init|=
name|user
operator|.
name|getCurrentAcademicSessionId
argument_list|()
decl_stmt|;
name|Session
name|session
init|=
operator|(
name|sessionId
operator|==
literal|null
condition|?
literal|null
else|:
name|SessionDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|sessionId
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|session
operator|==
literal|null
condition|)
return|return
literal|null
return|;
name|List
argument_list|<
name|PointInTimeData
argument_list|>
name|pitdList
init|=
name|PointInTimeData
operator|.
name|findAllSavedSuccessfullyForSession
argument_list|(
name|sessionId
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|ret
init|=
operator|new
name|Hashtable
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|PointInTimeData
name|pitd
range|:
name|pitdList
control|)
block|{
name|ret
operator|.
name|put
argument_list|(
name|pitd
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|pitd
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
name|ret
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDefaultValue
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
return|return
operator|(
literal|null
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parseSetValue
parameter_list|(
name|String
name|valueString
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parameterValues
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|valueString
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
block|{
name|parameterValues
operator|.
name|add
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
name|parameterValues
operator|)
return|;
block|}
block|}
argument_list|)
block|,
name|PITD2
argument_list|(
literal|"Point In Time Data Comparison"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
name|PITD
operator|.
name|iImplementation
argument_list|)
block|,
name|SESSION
argument_list|(
literal|"Academic Session"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
operator|new
name|ParameterImplementation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|getValues
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
name|Long
name|sessionId
init|=
name|user
operator|.
name|getCurrentAcademicSessionId
argument_list|()
decl_stmt|;
name|Session
name|session
init|=
operator|(
name|sessionId
operator|==
literal|null
condition|?
literal|null
else|:
name|SessionDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|sessionId
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|session
operator|==
literal|null
condition|)
return|return
literal|null
return|;
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|ret
init|=
operator|new
name|Hashtable
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|ret
operator|.
name|put
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|session
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDefaultValue
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
name|Long
name|sessionId
init|=
name|user
operator|.
name|getCurrentAcademicSessionId
argument_list|()
decl_stmt|;
name|Session
name|session
init|=
operator|(
name|sessionId
operator|==
literal|null
condition|?
literal|null
else|:
name|SessionDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|sessionId
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|session
operator|==
literal|null
condition|)
return|return
literal|null
return|;
return|return
operator|(
name|sessionId
operator|.
name|toString
argument_list|()
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parseSetValue
parameter_list|(
name|String
name|valueString
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parameterValues
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|valueString
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
block|{
name|parameterValues
operator|.
name|add
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
name|parameterValues
operator|)
return|;
block|}
block|}
argument_list|)
block|,
name|DEPARTMENT
argument_list|(
literal|"Department"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
operator|new
name|ParameterImplementation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|getValues
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
name|Long
name|sessionId
init|=
name|user
operator|.
name|getCurrentAcademicSessionId
argument_list|()
decl_stmt|;
name|Session
name|session
init|=
operator|(
name|sessionId
operator|==
literal|null
condition|?
literal|null
else|:
name|SessionDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|sessionId
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|session
operator|==
literal|null
condition|)
return|return
literal|null
return|;
name|TimetableManager
name|manager
init|=
name|TimetableManager
operator|.
name|findByExternalId
argument_list|(
name|user
operator|.
name|getExternalUserId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|manager
operator|==
literal|null
condition|)
return|return
literal|null
return|;
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|ret
init|=
operator|new
name|Hashtable
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Department
name|d
range|:
name|Department
operator|.
name|getUserDepartments
argument_list|(
name|user
argument_list|)
control|)
name|ret
operator|.
name|put
argument_list|(
name|d
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|d
operator|.
name|htmlLabel
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDefaultValue
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parseSetValue
parameter_list|(
name|String
name|valueString
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parameterValues
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|valueString
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
block|{
name|parameterValues
operator|.
name|add
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
name|parameterValues
operator|)
return|;
block|}
block|}
argument_list|)
block|,
name|DEPARTMENTS
argument_list|(
literal|"Departments"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|DEPARTMENT
operator|.
name|iImplementation
argument_list|)
block|,
name|SUBJECT
argument_list|(
literal|"Subject Area"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
operator|new
name|ParameterImplementation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|getValues
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|ret
init|=
operator|new
name|Hashtable
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
try|try
block|{
for|for
control|(
name|SubjectArea
name|s
range|:
name|SubjectArea
operator|.
name|getUserSubjectAreas
argument_list|(
name|user
argument_list|)
control|)
block|{
name|ret
operator|.
name|put
argument_list|(
name|s
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|s
operator|.
name|getSubjectAreaAbbreviation
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
return|return
name|ret
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDefaultValue
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parseSetValue
parameter_list|(
name|String
name|valueString
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parameterValues
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|valueString
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
block|{
name|parameterValues
operator|.
name|add
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
name|parameterValues
operator|)
return|;
block|}
block|}
argument_list|)
block|,
name|SUBJECTS
argument_list|(
literal|"Subject Areas"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|SUBJECT
operator|.
name|iImplementation
argument_list|)
block|,
name|BUILDING
argument_list|(
literal|"Building"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
operator|new
name|ParameterImplementation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|getValues
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
name|Long
name|sessionId
init|=
name|user
operator|.
name|getCurrentAcademicSessionId
argument_list|()
decl_stmt|;
name|Session
name|session
init|=
operator|(
name|sessionId
operator|==
literal|null
condition|?
literal|null
else|:
name|SessionDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|sessionId
argument_list|)
operator|)
decl_stmt|;
name|TimetableManager
name|manager
init|=
name|TimetableManager
operator|.
name|findByExternalId
argument_list|(
name|user
operator|.
name|getExternalUserId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|manager
operator|==
literal|null
condition|)
return|return
literal|null
return|;
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|ret
init|=
operator|new
name|Hashtable
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Building
name|b
range|:
operator|(
name|List
argument_list|<
name|Building
argument_list|>
operator|)
name|Building
operator|.
name|findAll
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
control|)
name|ret
operator|.
name|put
argument_list|(
name|b
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|b
operator|.
name|getAbbrName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDefaultValue
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parseSetValue
parameter_list|(
name|String
name|valueString
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parameterValues
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|valueString
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
block|{
name|parameterValues
operator|.
name|add
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
name|parameterValues
operator|)
return|;
block|}
block|}
argument_list|)
block|,
name|BUILDINGS
argument_list|(
literal|"Buildings"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|BUILDING
operator|.
name|iImplementation
argument_list|)
block|,
name|ROOM
argument_list|(
literal|"Room"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
operator|new
name|ParameterImplementation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|getValues
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
name|Long
name|sessionId
init|=
name|user
operator|.
name|getCurrentAcademicSessionId
argument_list|()
decl_stmt|;
name|Session
name|session
init|=
operator|(
name|sessionId
operator|==
literal|null
condition|?
literal|null
else|:
name|SessionDAO
operator|.
name|getInstance
argument_list|()
operator|.
name|get
argument_list|(
name|sessionId
argument_list|)
operator|)
decl_stmt|;
name|TimetableManager
name|manager
init|=
name|TimetableManager
operator|.
name|findByExternalId
argument_list|(
name|user
operator|.
name|getExternalUserId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|manager
operator|==
literal|null
condition|)
return|return
literal|null
return|;
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|ret
init|=
operator|new
name|Hashtable
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Room
name|r
range|:
operator|(
name|List
argument_list|<
name|Room
argument_list|>
operator|)
name|Room
operator|.
name|findAllRooms
argument_list|(
name|session
operator|.
name|getUniqueId
argument_list|()
argument_list|)
control|)
block|{
name|ret
operator|.
name|put
argument_list|(
name|r
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|r
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDefaultValue
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parseSetValue
parameter_list|(
name|String
name|valueString
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parameterValues
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|valueString
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
block|{
name|parameterValues
operator|.
name|add
argument_list|(
name|Long
operator|.
name|parseLong
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
name|parameterValues
operator|)
return|;
block|}
block|}
argument_list|)
block|,
name|ROOMS
argument_list|(
literal|"Rooms"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
name|ROOM
operator|.
name|iImplementation
argument_list|)
block|,
name|MINUTES_IN_REPORTING_HOUR
argument_list|(
literal|"Minutes in Reporting Hour"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
operator|new
name|ParameterImplementation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|getValues
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDefaultValue
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
return|return
operator|(
name|ApplicationProperty
operator|.
name|StandardMinutesInReportingHour
operator|.
name|value
argument_list|()
operator|.
name|toString
argument_list|()
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parseSetValue
parameter_list|(
name|String
name|valueString
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parameterValues
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|valueString
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
block|{
name|parameterValues
operator|.
name|add
argument_list|(
name|Float
operator|.
name|parseFloat
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
name|parameterValues
operator|)
return|;
block|}
block|}
argument_list|)
block|,
name|WEEKS_IN_REPORTING_TERM
argument_list|(
literal|"Weeks in Reporting Term"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
operator|new
name|ParameterImplementation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|getValues
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDefaultValue
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
return|return
operator|(
name|ApplicationProperty
operator|.
name|StandardWeeksInReportingTerm
operator|.
name|value
argument_list|()
operator|.
name|toString
argument_list|()
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parseSetValue
parameter_list|(
name|String
name|valueString
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parameterValues
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|valueString
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
block|{
name|parameterValues
operator|.
name|add
argument_list|(
name|Float
operator|.
name|parseFloat
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
name|parameterValues
operator|)
return|;
block|}
block|}
argument_list|)
block|,
name|MINIMUM_LOCATION_CAPACITY
argument_list|(
literal|"Minimum Location Capacity"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
operator|new
name|ParameterImplementation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|getValues
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDefaultValue
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
return|return
operator|(
literal|"0"
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parseSetValue
parameter_list|(
name|String
name|valueString
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parameterValues
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|valueString
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
block|{
name|parameterValues
operator|.
name|add
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
name|parameterValues
operator|)
return|;
block|}
block|}
argument_list|)
block|,
name|MAXIMUM_LOCATION_CAPACITY
argument_list|(
literal|"Maximum Location Capacity"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
operator|new
name|ParameterImplementation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|getValues
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDefaultValue
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
return|return
operator|(
literal|"999999"
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parseSetValue
parameter_list|(
name|String
name|valueString
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parameterValues
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|value
range|:
name|valueString
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
block|{
name|parameterValues
operator|.
name|add
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
name|parameterValues
operator|)
return|;
block|}
block|}
argument_list|)
block|,
name|DistributionType
argument_list|(
name|DistributionType
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
block|,
name|DistributionTypes
argument_list|(
name|DistributionType
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
block|,
name|DemandOfferingType
argument_list|(
name|DemandOfferingType
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
block|,
name|DemandOfferingTypes
argument_list|(
name|DemandOfferingType
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
block|,
name|OfferingConsentType
argument_list|(
name|OfferingConsentType
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
block|,
name|OfferingConsentTypes
argument_list|(
name|OfferingConsentType
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
block|,
name|CourseCreditFormat
argument_list|(
name|CourseCreditFormat
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
block|,
name|CourseCreditFormats
argument_list|(
name|CourseCreditFormat
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
block|,
name|CourseCreditType
argument_list|(
name|CourseCreditType
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
block|,
name|CourseCreditTypes
argument_list|(
name|CourseCreditType
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
block|,
name|CourseCreditUnitType
argument_list|(
name|CourseCreditUnitType
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
block|,
name|CourseCreditUnitTypes
argument_list|(
name|CourseCreditUnitType
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
block|,
name|PositionType
argument_list|(
name|PositionType
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
block|,
name|PositionTypes
argument_list|(
name|PositionType
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
block|,
name|DepartmentStatusType
argument_list|(
name|DepartmentStatusType
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
block|,
name|DepartmentStatusTypes
argument_list|(
name|DepartmentStatusType
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
block|,
name|RoomType
argument_list|(
name|RoomType
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
block|,
name|RoomTypes
argument_list|(
name|RoomType
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
block|,
name|StudentSectioningStatus
argument_list|(
name|StudentSectioningStatus
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
block|,
name|StudentSectioningStatuses
argument_list|(
name|StudentSectioningStatus
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
block|,
name|ExamType
argument_list|(
name|ExamType
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
block|,
name|ExamTypes
argument_list|(
name|ExamType
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
block|,
name|RoomFeatureType
argument_list|(
name|RoomFeatureType
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
block|,
name|RoomFeatureTypes
argument_list|(
name|RoomFeatureType
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
block|,
name|CourseType
argument_list|(
name|CourseType
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
block|,
name|CourseTypes
argument_list|(
name|CourseType
operator|.
name|class
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
block|, 		;
name|String
name|iName
decl_stmt|;
name|ParameterImplementation
name|iImplementation
decl_stmt|;
name|boolean
name|iAllowSelection
decl_stmt|,
name|iMultiSelect
decl_stmt|,
name|iTextField
decl_stmt|;
name|Parameter
parameter_list|(
name|String
name|name
parameter_list|,
name|boolean
name|allowSelection
parameter_list|,
name|boolean
name|multiSelect
parameter_list|,
name|boolean
name|isText
parameter_list|,
name|ParameterImplementation
name|impl
parameter_list|)
block|{
name|iName
operator|=
name|name
expr_stmt|;
name|iAllowSelection
operator|=
name|allowSelection
expr_stmt|;
name|iMultiSelect
operator|=
name|multiSelect
expr_stmt|;
name|iTextField
operator|=
name|isText
expr_stmt|;
name|iImplementation
operator|=
name|impl
expr_stmt|;
block|}
name|Parameter
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|RefTableEntry
argument_list|>
name|reference
parameter_list|,
name|boolean
name|multiSelect
parameter_list|,
name|boolean
name|addUnknownValue
parameter_list|)
block|{
name|iName
operator|=
name|name
argument_list|()
operator|.
name|replaceAll
argument_list|(
literal|"(?<=[^A-Z])([A-Z])"
argument_list|,
literal|" $1"
argument_list|)
expr_stmt|;
name|iAllowSelection
operator|=
literal|true
expr_stmt|;
name|iMultiSelect
operator|=
name|multiSelect
expr_stmt|;
name|iTextField
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|addUnknownValue
condition|)
block|{
name|iImplementation
operator|=
operator|new
name|RefTableParametersPlusUnknown
argument_list|(
name|reference
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|iImplementation
operator|=
operator|new
name|RefTableParameters
argument_list|(
name|reference
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|text
parameter_list|()
block|{
return|return
name|iName
return|;
block|}
specifier|public
name|boolean
name|allowSingleSelection
parameter_list|()
block|{
return|return
name|iAllowSelection
return|;
block|}
specifier|public
name|boolean
name|allowMultiSelection
parameter_list|()
block|{
return|return
name|iAllowSelection
operator|&&
name|iMultiSelect
return|;
block|}
specifier|public
name|boolean
name|isTextField
parameter_list|()
block|{
return|return
name|iTextField
return|;
block|}
specifier|public
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|values
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
return|return
name|iImplementation
operator|.
name|getValues
argument_list|(
name|user
argument_list|)
return|;
block|}
specifier|public
name|String
name|defaultValue
parameter_list|(
name|UserContext
name|user
parameter_list|)
block|{
return|return
name|iImplementation
operator|.
name|getDefaultValue
argument_list|(
name|user
argument_list|)
return|;
block|}
specifier|public
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|parseSetValue
parameter_list|(
name|String
name|valueString
parameter_list|)
block|{
return|return
operator|(
name|iImplementation
operator|.
name|parseSetValue
argument_list|(
name|valueString
argument_list|)
operator|)
return|;
block|}
block|}
specifier|protected
specifier|static
name|PointInTimeDataReports
name|MSG
init|=
name|Localization
operator|.
name|create
argument_list|(
name|PointInTimeDataReports
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|Float
name|standardMinutesInReportingHour
init|=
literal|null
decl_stmt|;
specifier|private
name|Float
name|standardWeeksInReportingTerm
init|=
literal|null
decl_stmt|;
specifier|private
name|Long
name|pointInTimeDataUniqueId
init|=
literal|null
decl_stmt|;
specifier|public
specifier|static
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Class
argument_list|>
name|sPointInTimeDataReportRegister
decl_stmt|;
static|static
block|{
name|sPointInTimeDataReportRegister
operator|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Class
argument_list|>
argument_list|()
expr_stmt|;
name|sPointInTimeDataReportRegister
operator|.
name|put
argument_list|(
literal|"allWSCHbyDept"
argument_list|,
name|AllWSCHByDepartment
operator|.
name|class
argument_list|)
expr_stmt|;
name|sPointInTimeDataReportRegister
operator|.
name|put
argument_list|(
literal|"allWSCHforDeptbyClass"
argument_list|,
name|AllWSCHForDepartmentByClass
operator|.
name|class
argument_list|)
expr_stmt|;
name|sPointInTimeDataReportRegister
operator|.
name|put
argument_list|(
literal|"allWSCHforDeptbyPosition"
argument_list|,
name|AllWSCHForDepartmentByInstructorPosition
operator|.
name|class
argument_list|)
expr_stmt|;
name|sPointInTimeDataReportRegister
operator|.
name|put
argument_list|(
literal|"allWSCHforDeptbyInstructor"
argument_list|,
name|AllWSCHForDepartmentByInstructor
operator|.
name|class
argument_list|)
expr_stmt|;
name|sPointInTimeDataReportRegister
operator|.
name|put
argument_list|(
literal|"roomUtilization"
argument_list|,
name|RoomUtilization
operator|.
name|class
argument_list|)
expr_stmt|;
name|sPointInTimeDataReportRegister
operator|.
name|put
argument_list|(
literal|"roomTypeUtilization"
argument_list|,
name|RoomTypeUtilizationByDepartment
operator|.
name|class
argument_list|)
expr_stmt|;
name|sPointInTimeDataReportRegister
operator|.
name|put
argument_list|(
literal|"wschByDayOfWeekAndPeriod"
argument_list|,
name|WSEByDayOfWeekAndPeriod
operator|.
name|class
argument_list|)
expr_stmt|;
name|sPointInTimeDataReportRegister
operator|.
name|put
argument_list|(
literal|"wschByDayOfWeekAndHourOfDay"
argument_list|,
name|WSCHByDayOfWeekAndHourOfDay
operator|.
name|class
argument_list|)
expr_stmt|;
name|sPointInTimeDataReportRegister
operator|.
name|put
argument_list|(
literal|"wschByItypeDayOfWeekAndHourOfDay"
argument_list|,
name|WSCHByItypeDayOfWeekHourOfDay
operator|.
name|class
argument_list|)
expr_stmt|;
name|sPointInTimeDataReportRegister
operator|.
name|put
argument_list|(
literal|"wschByDeptDayOfWeekAndHourOfDay"
argument_list|,
name|WSCHByDepartmentDayOfWeekHourOfDay
operator|.
name|class
argument_list|)
expr_stmt|;
name|sPointInTimeDataReportRegister
operator|.
name|put
argument_list|(
literal|"wschBySubjectAreaDayOfWeekAndHourOfDay"
argument_list|,
name|WSCHBySubjectAreaDayOfWeekHourOfDay
operator|.
name|class
argument_list|)
expr_stmt|;
name|sPointInTimeDataReportRegister
operator|.
name|put
argument_list|(
literal|"wschByBuildingDayOfWeekAndHourOfDay"
argument_list|,
name|WSCHByBuildingDayOfWeekHourOfDay
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ArrayList
argument_list|<
name|Parameter
argument_list|>
name|parameters
init|=
operator|new
name|ArrayList
argument_list|<
name|BasePointInTimeDataReports
operator|.
name|Parameter
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|String
index|[]
name|header
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|String
index|[]
argument_list|>
name|data
init|=
operator|new
name|ArrayList
argument_list|<
name|String
index|[]
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|Parameter
argument_list|,
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|>
name|parameterValues
init|=
operator|new
name|HashMap
argument_list|<
name|Parameter
argument_list|,
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|BasePointInTimeDataReports
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|getParameters
argument_list|()
operator|.
name|add
argument_list|(
name|Parameter
operator|.
name|PITD
argument_list|)
expr_stmt|;
name|getParameters
argument_list|()
operator|.
name|add
argument_list|(
name|Parameter
operator|.
name|MINUTES_IN_REPORTING_HOUR
argument_list|)
expr_stmt|;
name|getParameters
argument_list|()
operator|.
name|add
argument_list|(
name|Parameter
operator|.
name|WEEKS_IN_REPORTING_TERM
argument_list|)
expr_stmt|;
name|intializeHeader
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|abstract
name|String
name|reportName
parameter_list|()
function_decl|;
specifier|public
specifier|abstract
name|String
name|reportDescription
parameter_list|()
function_decl|;
specifier|protected
specifier|abstract
name|void
name|intializeHeader
parameter_list|()
function_decl|;
specifier|protected
name|void
name|setHeader
parameter_list|(
name|ArrayList
argument_list|<
name|String
argument_list|>
name|header
parameter_list|)
block|{
name|this
operator|.
name|header
operator|=
operator|new
name|String
index|[
name|header
operator|.
name|size
argument_list|()
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|header
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|this
operator|.
name|header
index|[
name|i
index|]
operator|=
name|header
operator|.
name|get
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|String
index|[]
name|getHeader
parameter_list|()
block|{
return|return
operator|(
name|header
operator|)
return|;
block|}
specifier|protected
name|void
name|addDataRow
parameter_list|(
name|ArrayList
argument_list|<
name|String
argument_list|>
name|row
parameter_list|)
block|{
name|String
index|[]
name|r
init|=
operator|new
name|String
index|[
name|row
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|row
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|r
index|[
name|i
index|]
operator|=
name|row
operator|.
name|get
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|data
operator|.
name|add
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ArrayList
argument_list|<
name|String
index|[]
argument_list|>
name|getData
parameter_list|()
block|{
return|return
operator|(
name|data
operator|)
return|;
block|}
specifier|public
name|HashMap
argument_list|<
name|Parameter
argument_list|,
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|>
name|getParameterValues
parameter_list|()
block|{
return|return
name|parameterValues
return|;
block|}
specifier|public
name|Long
name|getPointInTimeDataUniqueId
parameter_list|()
block|{
return|return
name|pointInTimeDataUniqueId
return|;
block|}
specifier|public
name|void
name|setPointInTimeDataUniqueId
parameter_list|(
name|Long
name|pointInTimeDataUniqueId
parameter_list|)
block|{
name|this
operator|.
name|pointInTimeDataUniqueId
operator|=
name|pointInTimeDataUniqueId
expr_stmt|;
block|}
specifier|public
name|Float
name|getStandardMinutesInReportingHour
parameter_list|()
block|{
return|return
name|standardMinutesInReportingHour
return|;
block|}
specifier|public
name|void
name|setStandardMinutesInReportingHour
parameter_list|(
name|Float
name|standardMinutesInReportingHour
parameter_list|)
block|{
name|this
operator|.
name|standardMinutesInReportingHour
operator|=
name|standardMinutesInReportingHour
expr_stmt|;
block|}
specifier|public
name|Float
name|getStandardWeeksInReportingTerm
parameter_list|()
block|{
return|return
name|standardWeeksInReportingTerm
return|;
block|}
specifier|public
name|void
name|setStandardWeeksInReportingTerm
parameter_list|(
name|Float
name|standardWeeksInReportingTerm
parameter_list|)
block|{
name|this
operator|.
name|standardWeeksInReportingTerm
operator|=
name|standardWeeksInReportingTerm
expr_stmt|;
block|}
specifier|public
name|ArrayList
argument_list|<
name|Parameter
argument_list|>
name|getParameters
parameter_list|()
block|{
return|return
name|parameters
return|;
block|}
specifier|public
name|void
name|setParameters
parameter_list|(
name|ArrayList
argument_list|<
name|Parameter
argument_list|>
name|parameters
parameter_list|)
block|{
name|this
operator|.
name|parameters
operator|=
name|parameters
expr_stmt|;
block|}
specifier|protected
name|void
name|parseParameters
parameter_list|()
block|{
if|if
condition|(
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|PITD
argument_list|)
operator|.
name|size
argument_list|()
operator|!=
literal|1
condition|)
block|{
comment|//TODO: error
block|}
else|else
block|{
name|setPointInTimeDataUniqueId
argument_list|(
operator|(
name|Long
operator|)
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|PITD
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|MINUTES_IN_REPORTING_HOUR
argument_list|)
operator|.
name|size
argument_list|()
operator|!=
literal|1
condition|)
block|{
comment|//TODO: error
block|}
else|else
block|{
name|setStandardMinutesInReportingHour
argument_list|(
operator|(
name|Float
operator|)
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|MINUTES_IN_REPORTING_HOUR
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|WEEKS_IN_REPORTING_TERM
argument_list|)
operator|.
name|size
argument_list|()
operator|!=
literal|1
condition|)
block|{
comment|//TODO: error
block|}
else|else
block|{
name|setStandardWeeksInReportingTerm
argument_list|(
operator|(
name|Float
operator|)
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|WEEKS_IN_REPORTING_TERM
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
specifier|abstract
name|void
name|runReport
parameter_list|(
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
parameter_list|)
function_decl|;
specifier|private
name|ArrayList
argument_list|<
name|String
index|[]
argument_list|>
name|outputReport
parameter_list|()
block|{
name|ArrayList
argument_list|<
name|String
index|[]
argument_list|>
name|report
init|=
operator|new
name|ArrayList
argument_list|<
name|String
index|[]
argument_list|>
argument_list|()
decl_stmt|;
name|report
operator|.
name|add
argument_list|(
name|getHeader
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|String
index|[]
name|row
range|:
name|getData
argument_list|()
control|)
block|{
name|report
operator|.
name|add
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
name|report
operator|)
return|;
block|}
specifier|private
name|void
name|setParameterValues
parameter_list|(
name|HashMap
argument_list|<
name|Parameter
argument_list|,
name|String
argument_list|>
name|parameterValues
parameter_list|)
block|{
for|for
control|(
name|Parameter
name|p
range|:
name|parameterValues
operator|.
name|keySet
argument_list|()
control|)
block|{
name|getParameterValues
argument_list|()
operator|.
name|put
argument_list|(
name|p
argument_list|,
name|p
operator|.
name|parseSetValue
argument_list|(
name|parameterValues
operator|.
name|get
argument_list|(
name|p
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|ArrayList
argument_list|<
name|String
index|[]
argument_list|>
name|execute
parameter_list|(
name|HashMap
argument_list|<
name|Parameter
argument_list|,
name|String
argument_list|>
name|parameterValues
parameter_list|,
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
parameter_list|)
block|{
name|setParameterValues
argument_list|(
name|parameterValues
argument_list|)
expr_stmt|;
name|parseParameters
argument_list|()
expr_stmt|;
name|runReport
argument_list|(
name|hibSession
argument_list|)
expr_stmt|;
return|return
operator|(
name|outputReport
argument_list|()
operator|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|protected
name|List
argument_list|<
name|Long
argument_list|>
name|findAllPitInstructionalOfferingUniqueIdsForDepartment
parameter_list|(
name|PointInTimeData
name|pointInTimeData
parameter_list|,
name|Long
name|departmentId
parameter_list|,
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
parameter_list|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"select pio.uniqueId"
argument_list|)
operator|.
name|append
argument_list|(
literal|" from PitInstructionalOffering pio"
argument_list|)
operator|.
name|append
argument_list|(
literal|" inner join pio.pitCourseOfferings as pco"
argument_list|)
operator|.
name|append
argument_list|(
literal|" where pio.pointInTimeData.uniqueId = :pitdUid"
argument_list|)
operator|.
name|append
argument_list|(
literal|" and pco.isControl = true"
argument_list|)
operator|.
name|append
argument_list|(
literal|" and pco.subjectArea.department.uniqueId = :deptUid"
argument_list|)
expr_stmt|;
return|return
operator|(
operator|(
name|List
argument_list|<
name|Long
argument_list|>
operator|)
name|hibSession
operator|.
name|createQuery
argument_list|(
name|sb
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"pitdUid"
argument_list|,
name|pointInTimeData
operator|.
name|getUniqueId
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"deptUid"
argument_list|,
name|departmentId
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
operator|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|protected
name|List
argument_list|<
name|PitClass
argument_list|>
name|findAllPitClassesForPitInstructionalOfferingId
parameter_list|(
name|PointInTimeData
name|pointInTimeData
parameter_list|,
name|Long
name|pitOfferingId
parameter_list|,
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
parameter_list|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"select pc"
argument_list|)
operator|.
name|append
argument_list|(
literal|" from PitClass pc"
argument_list|)
operator|.
name|append
argument_list|(
literal|" inner join pc.pitClassEvents as pce"
argument_list|)
operator|.
name|append
argument_list|(
literal|" inner join pce.pitClassMeetings as pcm"
argument_list|)
operator|.
name|append
argument_list|(
literal|" inner join pcm.pitClassMeetingUtilPeriods as pcmup"
argument_list|)
operator|.
name|append
argument_list|(
literal|" inner join pc.pitSchedulingSubpart as pss"
argument_list|)
operator|.
name|append
argument_list|(
literal|" inner join pss.pitInstrOfferingConfig as pioc"
argument_list|)
operator|.
name|append
argument_list|(
literal|" inner join pioc.pitInstructionalOffering as pio"
argument_list|)
operator|.
name|append
argument_list|(
literal|" inner join pio.pitCourseOfferings as pco"
argument_list|)
operator|.
name|append
argument_list|(
literal|" inner join pco.subjectArea as sa"
argument_list|)
operator|.
name|append
argument_list|(
literal|" where pc.pitSchedulingSubpart.pitInstrOfferingConfig.pitInstructionalOffering.uniqueId = :offrId"
argument_list|)
operator|.
name|append
argument_list|(
literal|" and pco.isControl = true"
argument_list|)
operator|.
name|append
argument_list|(
literal|" and pc.pitClassEvents is not empty"
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|PitClass
argument_list|>
name|pitClasses
init|=
operator|new
name|ArrayList
argument_list|<
name|PitClass
argument_list|>
argument_list|()
decl_stmt|;
name|pitClasses
operator|.
name|addAll
argument_list|(
operator|(
name|List
argument_list|<
name|PitClass
argument_list|>
operator|)
name|hibSession
operator|.
name|createQuery
argument_list|(
name|sb
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"offrId"
argument_list|,
name|pitOfferingId
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|list
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|(
name|pitClasses
operator|)
return|;
block|}
block|}
end_class

end_unit

