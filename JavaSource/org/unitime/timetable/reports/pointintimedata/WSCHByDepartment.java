begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|reports
operator|.
name|pointintimedata
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PointInTimeData
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|WSCHByDepartment
extends|extends
name|BasePointInTimeDataReports
block|{
specifier|public
name|WSCHByDepartment
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|intializeHeader
parameter_list|()
block|{
name|ArrayList
argument_list|<
name|String
argument_list|>
name|hdr
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnDepartmentCode
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnDepartmentAbbreviation
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnDepartmentName
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnWeeklyClassHours
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnWeeklyStudentClassHours
argument_list|()
argument_list|)
expr_stmt|;
name|setHeader
argument_list|(
name|hdr
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|abstract
name|float
name|weeklyClassHours
parameter_list|(
name|PitClass
name|pitClass
parameter_list|)
function_decl|;
specifier|protected
specifier|abstract
name|float
name|weeklyStudentClassHours
parameter_list|(
name|PitClass
name|pitClass
parameter_list|)
function_decl|;
specifier|public
name|void
name|createWeeklyStudentContactHoursByDepartmentReportFor
parameter_list|(
name|PointInTimeData
name|pointInTimeData
parameter_list|,
name|Session
name|hibSession
parameter_list|)
block|{
name|HashSet
argument_list|<
name|Long
argument_list|>
name|processedClasses
init|=
operator|new
name|HashSet
argument_list|<
name|Long
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Department
name|d
range|:
name|pointInTimeData
operator|.
name|getSession
argument_list|()
operator|.
name|getDepartments
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|d
operator|.
name|getSubjectAreas
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|float
name|deptTotalWsch
init|=
literal|0
decl_stmt|;
name|float
name|deptTotalWch
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Long
name|pioUid
range|:
name|findAllPitInstructionalOfferingUniqueIdsForDepartment
argument_list|(
name|pointInTimeData
argument_list|,
name|d
operator|.
name|getUniqueId
argument_list|()
argument_list|,
name|hibSession
argument_list|)
control|)
block|{
for|for
control|(
name|PitClass
name|pc
range|:
name|findAllPitClassesForPitInstructionalOfferingId
argument_list|(
name|pointInTimeData
argument_list|,
name|pioUid
argument_list|,
name|hibSession
argument_list|)
control|)
block|{
if|if
condition|(
name|processedClasses
operator|.
name|contains
argument_list|(
name|pc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
condition|)
block|{
continue|continue;
block|}
name|processedClasses
operator|.
name|add
argument_list|(
name|pc
operator|.
name|getUniqueId
argument_list|()
argument_list|)
expr_stmt|;
name|deptTotalWch
operator|+=
name|weeklyClassHours
argument_list|(
name|pc
argument_list|)
expr_stmt|;
name|deptTotalWsch
operator|+=
name|weeklyStudentClassHours
argument_list|(
name|pc
argument_list|)
expr_stmt|;
block|}
block|}
name|ArrayList
argument_list|<
name|String
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
name|d
operator|.
name|getDeptCode
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|d
operator|.
name|getAbbreviation
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|d
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|deptTotalWch
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|deptTotalWsch
argument_list|)
argument_list|)
expr_stmt|;
name|addDataRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|runReport
parameter_list|(
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
parameter_list|)
block|{
name|PointInTimeData
name|pitd
init|=
operator|(
name|PointInTimeData
operator|)
name|hibSession
operator|.
name|createQuery
argument_list|(
literal|"from PointInTimeData pitd where pitd.uniqueId = :uid"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"uid"
argument_list|,
name|getPointInTimeDataUniqueId
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|uniqueResult
argument_list|()
decl_stmt|;
name|createWeeklyStudentContactHoursByDepartmentReportFor
argument_list|(
name|pitd
argument_list|,
name|hibSession
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

