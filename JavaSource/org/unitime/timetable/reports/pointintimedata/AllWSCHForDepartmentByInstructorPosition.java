begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|reports
operator|.
name|pointintimedata
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Department
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitClassInstructor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PointInTimeData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PositionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|TeachingResponsibility
import|;
end_import

begin_class
specifier|public
class|class
name|AllWSCHForDepartmentByInstructorPosition
extends|extends
name|WSCHByDepartment
block|{
specifier|private
name|ArrayList
argument_list|<
name|Long
argument_list|>
name|iDepartmentIds
decl_stmt|;
specifier|public
name|AllWSCHForDepartmentByInstructorPosition
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|getParameters
argument_list|()
operator|.
name|add
argument_list|(
name|Parameter
operator|.
name|DEPARTMENTS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|intializeHeader
parameter_list|()
block|{
name|ArrayList
argument_list|<
name|String
argument_list|>
name|hdr
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnDepartmentCode
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnDepartmentAbbreviation
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnDepartmentName
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnPosition
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnOrganizedWeeklyClassHours
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnNotOrganizedWeeklyClassHours
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnWeeklyClassHours
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnOrganizedWeeklyStudentClassHours
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnNotOrganizedWeeklyStudentClassHours
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnWeeklyStudentClassHours
argument_list|()
argument_list|)
expr_stmt|;
name|setHeader
argument_list|(
name|hdr
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|parseParameters
parameter_list|()
block|{
name|super
operator|.
name|parseParameters
argument_list|()
expr_stmt|;
if|if
condition|(
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|DEPARTMENTS
argument_list|)
operator|.
name|size
argument_list|()
operator|<
literal|1
condition|)
block|{
comment|//TODO: error
block|}
else|else
block|{
name|setDepartmentIds
argument_list|(
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|DEPARTMENTS
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|reportName
parameter_list|()
block|{
return|return
operator|(
name|MSG
operator|.
name|deptWSCHReportAllHoursForDepartmentByPosition
argument_list|()
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|reportDescription
parameter_list|()
block|{
return|return
operator|(
name|MSG
operator|.
name|deptWSCBReportAllHoursForDepartmentByPositionNote
argument_list|()
operator|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|float
name|weeklyClassHours
parameter_list|(
name|PitClass
name|pitClass
parameter_list|)
block|{
return|return
operator|(
name|pitClass
operator|.
name|getAllWeeklyClassHours
argument_list|(
name|getStandardMinutesInReportingHour
argument_list|()
argument_list|,
name|getStandardWeeksInReportingTerm
argument_list|()
argument_list|)
operator|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|float
name|weeklyStudentClassHours
parameter_list|(
name|PitClass
name|pitClass
parameter_list|)
block|{
return|return
operator|(
name|pitClass
operator|.
name|getAllWeeklyStudentClassHours
argument_list|(
name|getStandardMinutesInReportingHour
argument_list|()
argument_list|,
name|getStandardWeeksInReportingTerm
argument_list|()
argument_list|)
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|createWeeklyStudentContactHoursByDepartmentReportFor
parameter_list|(
name|PointInTimeData
name|pointInTimeData
parameter_list|,
name|Session
name|hibSession
parameter_list|)
block|{
for|for
control|(
name|Long
name|deptId
range|:
name|getDepartmentIds
argument_list|()
control|)
block|{
name|Department
name|d
init|=
operator|(
name|Department
operator|)
name|hibSession
operator|.
name|createQuery
argument_list|(
literal|"from Department d where d.uniqueId = :id"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"id"
argument_list|,
name|deptId
argument_list|)
operator|.
name|setCacheable
argument_list|(
literal|true
argument_list|)
operator|.
name|uniqueResult
argument_list|()
decl_stmt|;
name|HashMap
argument_list|<
name|PositionType
argument_list|,
name|PositionHours
argument_list|>
name|positionClassHours
init|=
operator|new
name|HashMap
argument_list|<
name|PositionType
argument_list|,
name|PositionHours
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|PitClass
argument_list|>
name|pitClassesForDept
init|=
name|findAllPitClassesWithContactHoursForDepartment
argument_list|(
name|pointInTimeData
argument_list|,
name|d
argument_list|,
name|hibSession
argument_list|)
decl_stmt|;
for|for
control|(
name|PitClass
name|pc
range|:
name|pitClassesForDept
control|)
block|{
if|if
condition|(
name|pc
operator|.
name|getPitClassInstructors
argument_list|()
operator|==
literal|null
operator|||
name|pc
operator|.
name|getPitClassInstructors
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|PositionHours
name|ph
init|=
name|positionClassHours
operator|.
name|get
argument_list|(
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|ph
operator|==
literal|null
condition|)
block|{
name|ph
operator|=
operator|new
name|PositionHours
argument_list|(
literal|null
argument_list|,
name|getStandardMinutesInReportingHour
argument_list|()
argument_list|,
name|getStandardWeeksInReportingTerm
argument_list|()
argument_list|)
expr_stmt|;
name|positionClassHours
operator|.
name|put
argument_list|(
literal|null
argument_list|,
name|ph
argument_list|)
expr_stmt|;
block|}
name|ph
operator|.
name|addClassHours
argument_list|(
literal|null
argument_list|,
name|pc
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|numInstructors
init|=
literal|0
decl_stmt|;
for|for
control|(
name|PitClassInstructor
name|pci
range|:
name|pc
operator|.
name|getPitClassInstructors
argument_list|()
control|)
block|{
name|PositionHours
name|ph
init|=
name|positionClassHours
operator|.
name|get
argument_list|(
name|pci
operator|.
name|getPitDepartmentalInstructor
argument_list|()
operator|.
name|getPositionType
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|ph
operator|==
literal|null
condition|)
block|{
name|ph
operator|=
operator|new
name|PositionHours
argument_list|(
name|pci
operator|.
name|getPitDepartmentalInstructor
argument_list|()
operator|.
name|getPositionType
argument_list|()
argument_list|,
name|getStandardMinutesInReportingHour
argument_list|()
argument_list|,
name|getStandardWeeksInReportingTerm
argument_list|()
argument_list|)
expr_stmt|;
name|positionClassHours
operator|.
name|put
argument_list|(
name|pci
operator|.
name|getPitDepartmentalInstructor
argument_list|()
operator|.
name|getPositionType
argument_list|()
argument_list|,
name|ph
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ph
operator|.
name|addClassHours
argument_list|(
name|pci
argument_list|,
name|pc
argument_list|)
condition|)
block|{
name|numInstructors
operator|++
expr_stmt|;
block|}
block|}
if|if
condition|(
name|numInstructors
operator|==
literal|0
condition|)
block|{
name|PositionHours
name|ph
init|=
name|positionClassHours
operator|.
name|get
argument_list|(
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|ph
operator|==
literal|null
condition|)
block|{
name|ph
operator|=
operator|new
name|PositionHours
argument_list|(
literal|null
argument_list|,
name|getStandardMinutesInReportingHour
argument_list|()
argument_list|,
name|getStandardWeeksInReportingTerm
argument_list|()
argument_list|)
expr_stmt|;
name|positionClassHours
operator|.
name|put
argument_list|(
literal|null
argument_list|,
name|ph
argument_list|)
expr_stmt|;
block|}
name|ph
operator|.
name|addClassHours
argument_list|(
literal|null
argument_list|,
name|pc
argument_list|)
expr_stmt|;
block|}
block|}
block|}
for|for
control|(
name|PositionType
name|pt
range|:
name|positionClassHours
operator|.
name|keySet
argument_list|()
control|)
block|{
name|PositionHours
name|ph
init|=
name|positionClassHours
operator|.
name|get
argument_list|(
name|pt
argument_list|)
decl_stmt|;
name|ArrayList
argument_list|<
name|String
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
name|d
operator|.
name|getDeptCode
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|d
operator|.
name|getAbbreviation
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|d
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|pt
operator|==
literal|null
condition|?
name|MSG
operator|.
name|labelUnknown
argument_list|()
else|:
name|pt
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|ph
operator|.
name|getOrganizedWeeklyClassHours
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|ph
operator|.
name|getNotOrganizedWeeklyClassHours
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|ph
operator|.
name|getWeeklyClassHours
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|ph
operator|.
name|getOrganizedWeeklyStudentClassHours
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|ph
operator|.
name|getNotOrganizedWeeklyStudentClassHours
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|ph
operator|.
name|getWeeklyStudentClassHours
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addDataRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|ArrayList
argument_list|<
name|Long
argument_list|>
name|getDepartmentIds
parameter_list|()
block|{
return|return
name|iDepartmentIds
return|;
block|}
specifier|public
name|void
name|setDepartmentIds
parameter_list|(
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|departmentIds
parameter_list|)
block|{
name|this
operator|.
name|iDepartmentIds
operator|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|Object
name|o
range|:
name|departmentIds
control|)
block|{
name|this
operator|.
name|iDepartmentIds
operator|.
name|add
argument_list|(
operator|(
name|Long
operator|)
name|o
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
class|class
name|PositionHours
block|{
specifier|private
name|float
name|iWeeklyClassHours
init|=
literal|0.0f
decl_stmt|;
specifier|private
name|float
name|iOrganizedWeeklyClassHours
init|=
literal|0.0f
decl_stmt|;
specifier|private
name|float
name|iNotOrganizedWeeklyClassHours
init|=
literal|0.0f
decl_stmt|;
specifier|private
name|float
name|iWeeklyStudentClassHours
init|=
literal|0.0f
decl_stmt|;
specifier|private
name|float
name|iOrganizedWeeklyStudentClassHours
init|=
literal|0.0f
decl_stmt|;
specifier|private
name|float
name|iNotOrganizedWeeklyStudentClassHours
init|=
literal|0.0f
decl_stmt|;
specifier|private
name|PositionType
name|iPositionType
decl_stmt|;
specifier|private
name|Float
name|iStandardMinutesInReportingHour
decl_stmt|;
specifier|private
name|Float
name|iStandardWeeksInReportingTerm
decl_stmt|;
specifier|public
name|PositionType
name|getPositionType
parameter_list|()
block|{
return|return
name|iPositionType
return|;
block|}
specifier|public
name|float
name|getOrganizedWeeklyClassHours
parameter_list|()
block|{
return|return
name|iOrganizedWeeklyClassHours
return|;
block|}
specifier|public
name|float
name|getNotOrganizedWeeklyClassHours
parameter_list|()
block|{
return|return
name|iNotOrganizedWeeklyClassHours
return|;
block|}
specifier|public
name|float
name|getOrganizedWeeklyStudentClassHours
parameter_list|()
block|{
return|return
name|iOrganizedWeeklyStudentClassHours
return|;
block|}
specifier|public
name|float
name|getNotOrganizedWeeklyStudentClassHours
parameter_list|()
block|{
return|return
name|iNotOrganizedWeeklyStudentClassHours
return|;
block|}
specifier|public
name|float
name|getWeeklyClassHours
parameter_list|()
block|{
return|return
name|this
operator|.
name|iWeeklyClassHours
return|;
block|}
specifier|public
name|float
name|getWeeklyStudentClassHours
parameter_list|()
block|{
return|return
name|this
operator|.
name|iWeeklyStudentClassHours
return|;
block|}
specifier|public
name|PositionHours
parameter_list|(
name|PositionType
name|positionType
parameter_list|,
name|Float
name|standardMinutesInReportingHour
parameter_list|,
name|Float
name|standardWeeksInReportingTerm
parameter_list|)
block|{
name|this
operator|.
name|iPositionType
operator|=
name|positionType
expr_stmt|;
name|this
operator|.
name|iStandardMinutesInReportingHour
operator|=
name|standardMinutesInReportingHour
expr_stmt|;
name|this
operator|.
name|iStandardWeeksInReportingTerm
operator|=
name|standardWeeksInReportingTerm
expr_stmt|;
block|}
specifier|public
name|boolean
name|addClassHours
parameter_list|(
name|PitClassInstructor
name|pitClassInstructor
parameter_list|,
name|PitClass
name|pitClass
parameter_list|)
block|{
if|if
condition|(
name|pitClassInstructor
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|this
operator|.
name|iPositionType
operator|==
literal|null
condition|)
block|{
name|updateHours
argument_list|(
name|pitClass
argument_list|,
literal|100
argument_list|)
expr_stmt|;
return|return
operator|(
literal|true
operator|)
return|;
block|}
return|return
operator|(
literal|false
operator|)
return|;
block|}
else|else
block|{
if|if
condition|(
name|pitClassInstructor
operator|.
name|getResponsibility
argument_list|()
operator|!=
literal|null
operator|&&
name|pitClassInstructor
operator|.
name|getResponsibility
argument_list|()
operator|.
name|hasOption
argument_list|(
name|TeachingResponsibility
operator|.
name|Option
operator|.
name|auxiliary
argument_list|)
condition|)
block|{
return|return
operator|(
literal|false
operator|)
return|;
block|}
if|if
condition|(
name|pitClassInstructor
operator|.
name|getNormalizedPercentShare
argument_list|()
operator|.
name|intValue
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return
operator|(
literal|false
operator|)
return|;
block|}
if|if
condition|(
name|pitClassInstructor
operator|.
name|getPitDepartmentalInstructor
argument_list|()
operator|.
name|getPositionType
argument_list|()
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|this
operator|.
name|iPositionType
operator|==
literal|null
condition|)
block|{
name|updateHours
argument_list|(
name|pitClass
argument_list|,
name|pitClassInstructor
operator|.
name|getNormalizedPercentShare
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|(
literal|true
operator|)
return|;
block|}
return|return
operator|(
literal|false
operator|)
return|;
block|}
if|else if
condition|(
name|pitClassInstructor
operator|.
name|getPitDepartmentalInstructor
argument_list|()
operator|.
name|getPositionType
argument_list|()
operator|.
name|equals
argument_list|(
name|getPositionType
argument_list|()
argument_list|)
condition|)
block|{
name|updateHours
argument_list|(
name|pitClass
argument_list|,
name|pitClassInstructor
operator|.
name|getNormalizedPercentShare
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|(
literal|true
operator|)
return|;
block|}
return|return
operator|(
literal|false
operator|)
return|;
block|}
block|}
specifier|private
name|void
name|updateHours
parameter_list|(
name|PitClass
name|pitClass
parameter_list|,
name|Integer
name|percentShare
parameter_list|)
block|{
name|iWeeklyClassHours
operator|+=
operator|(
name|pitClass
operator|.
name|getAllWeeklyClassHours
argument_list|(
name|iStandardMinutesInReportingHour
argument_list|,
name|iStandardWeeksInReportingTerm
argument_list|)
operator|*
operator|(
name|percentShare
operator|/
literal|100.0f
operator|)
operator|)
expr_stmt|;
name|iOrganizedWeeklyClassHours
operator|+=
operator|(
name|pitClass
operator|.
name|getOrganizedWeeklyClassHours
argument_list|(
name|iStandardMinutesInReportingHour
argument_list|,
name|iStandardWeeksInReportingTerm
argument_list|)
operator|*
operator|(
name|percentShare
operator|/
literal|100.0f
operator|)
operator|)
expr_stmt|;
name|iNotOrganizedWeeklyClassHours
operator|+=
operator|(
name|pitClass
operator|.
name|getNotOrganizedWeeklyClassHours
argument_list|(
name|iStandardMinutesInReportingHour
argument_list|,
name|iStandardWeeksInReportingTerm
argument_list|)
operator|*
operator|(
name|percentShare
operator|/
literal|100.0f
operator|)
operator|)
expr_stmt|;
name|iWeeklyStudentClassHours
operator|+=
operator|(
name|pitClass
operator|.
name|getAllWeeklyStudentClassHours
argument_list|(
name|iStandardMinutesInReportingHour
argument_list|,
name|iStandardWeeksInReportingTerm
argument_list|)
operator|*
operator|(
name|percentShare
operator|/
literal|100.0f
operator|)
operator|)
expr_stmt|;
name|iOrganizedWeeklyStudentClassHours
operator|+=
operator|(
name|pitClass
operator|.
name|getOrganizedWeeklyStudentClassHours
argument_list|(
name|iStandardMinutesInReportingHour
argument_list|,
name|iStandardWeeksInReportingTerm
argument_list|)
operator|*
operator|(
name|percentShare
operator|/
literal|100.0f
operator|)
operator|)
expr_stmt|;
name|iNotOrganizedWeeklyStudentClassHours
operator|+=
operator|(
name|pitClass
operator|.
name|getNotOrganizedWeeklyStudentClassHours
argument_list|(
name|iStandardMinutesInReportingHour
argument_list|,
name|iStandardWeeksInReportingTerm
argument_list|)
operator|*
operator|(
name|percentShare
operator|/
literal|100.0f
operator|)
operator|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

