begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|reports
operator|.
name|pointintimedata
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hibernate
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|Location
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PitClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|model
operator|.
name|PointInTimeData
import|;
end_import

begin_comment
comment|/**  * @author says  *  */
end_comment

begin_class
specifier|public
class|class
name|WSEByDayOfWeekAndPeriod
extends|extends
name|BasePointInTimeDataReports
block|{
specifier|private
name|ArrayList
argument_list|<
name|Long
argument_list|>
name|iDepartmentIds
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|Long
argument_list|>
name|iSubjectAreaIds
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|Long
argument_list|>
name|iRoomTypeIds
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|Long
argument_list|>
name|iPositionTypeIds
decl_stmt|;
specifier|private
name|Integer
name|iMinimumLocationCapacity
decl_stmt|;
specifier|private
name|Integer
name|iMaximumLocationCapacity
decl_stmt|;
specifier|private
name|HashMap
argument_list|<
name|String
argument_list|,
name|PeriodEnrollment
argument_list|>
name|periodEnrollmentMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|PeriodEnrollment
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|String
name|dayOfWeekTimeLabelFor
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Date
name|date
parameter_list|)
block|{
return|return
operator|(
name|Localization
operator|.
name|getDateFormat
argument_list|(
literal|"EEEE, HH:mm"
argument_list|)
operator|.
name|format
argument_list|(
name|date
argument_list|)
operator|)
return|;
block|}
specifier|public
name|WSEByDayOfWeekAndPeriod
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|getParameters
argument_list|()
operator|.
name|add
argument_list|(
name|Parameter
operator|.
name|DEPARTMENTS
argument_list|)
expr_stmt|;
name|getParameters
argument_list|()
operator|.
name|add
argument_list|(
name|Parameter
operator|.
name|SUBJECTS
argument_list|)
expr_stmt|;
name|getParameters
argument_list|()
operator|.
name|add
argument_list|(
name|Parameter
operator|.
name|RoomTypes
argument_list|)
expr_stmt|;
name|getParameters
argument_list|()
operator|.
name|add
argument_list|(
name|Parameter
operator|.
name|PositionTypes
argument_list|)
expr_stmt|;
name|getParameters
argument_list|()
operator|.
name|add
argument_list|(
name|Parameter
operator|.
name|MINIMUM_LOCATION_CAPACITY
argument_list|)
expr_stmt|;
name|getParameters
argument_list|()
operator|.
name|add
argument_list|(
name|Parameter
operator|.
name|MAXIMUM_LOCATION_CAPACITY
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|intializeHeader
parameter_list|()
block|{
name|ArrayList
argument_list|<
name|String
argument_list|>
name|hdr
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnDayOfWeek
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnPeriod
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnOrganizedWeeklyStudentEnrollmentPerPeriod
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnNotOrganizedWeeklyStudentEnrollmentPerPeriod
argument_list|()
argument_list|)
expr_stmt|;
name|hdr
operator|.
name|add
argument_list|(
name|MSG
operator|.
name|columnWeeklyStudentEnrollmentPerPeriod
argument_list|()
argument_list|)
expr_stmt|;
name|setHeader
argument_list|(
name|hdr
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|reportName
parameter_list|()
block|{
return|return
operator|(
name|MSG
operator|.
name|wseByDayOfWeekAndPeriodReport
argument_list|()
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|reportDescription
parameter_list|()
block|{
return|return
operator|(
name|MSG
operator|.
name|wseByDayOfWeekAndPeriodReportNote
argument_list|()
operator|)
return|;
block|}
specifier|public
name|void
name|createRoomUtilizationReportFor
parameter_list|(
name|PointInTimeData
name|pointInTimeData
parameter_list|,
name|Session
name|hibSession
parameter_list|)
block|{
name|HashSet
argument_list|<
name|Long
argument_list|>
name|validRoomPermanentIds
init|=
operator|new
name|HashSet
argument_list|<
name|Long
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Location
name|l
range|:
name|pointInTimeData
operator|.
name|getSession
argument_list|()
operator|.
name|getRooms
argument_list|()
control|)
block|{
if|if
condition|(
name|getRoomTypeIds
argument_list|()
operator|.
name|contains
argument_list|(
name|l
operator|.
name|getRoomType
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
operator|&&
name|l
operator|.
name|getCapacity
argument_list|()
operator|.
name|intValue
argument_list|()
operator|<=
name|getMaximumLocationCapacity
argument_list|()
operator|.
name|intValue
argument_list|()
operator|&&
name|l
operator|.
name|getCapacity
argument_list|()
operator|.
name|intValue
argument_list|()
operator|>=
name|getMinimumLocationCapacity
argument_list|()
operator|.
name|intValue
argument_list|()
condition|)
block|{
name|validRoomPermanentIds
operator|.
name|add
argument_list|(
name|l
operator|.
name|getPermanentId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|HashSet
argument_list|<
name|PitClass
argument_list|>
name|pitClasses
init|=
name|findAllPitClassesWithContactHoursForDepartmentsAndSubjectAreas
argument_list|(
name|pointInTimeData
argument_list|,
name|hibSession
argument_list|)
decl_stmt|;
name|ArrayList
argument_list|<
name|Long
argument_list|>
name|positionIds
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|BasePointInTimeDataReports
operator|.
name|Parameter
operator|.
name|PositionTypes
operator|.
name|values
argument_list|(
literal|null
argument_list|)
operator|.
name|size
argument_list|()
operator|!=
name|getPositionTypeIds
argument_list|()
operator|.
name|size
argument_list|()
condition|)
block|{
name|positionIds
operator|=
name|getPositionTypeIds
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|PitClass
name|pc
range|:
name|pitClasses
control|)
block|{
name|HashMap
argument_list|<
name|java
operator|.
name|util
operator|.
name|Date
argument_list|,
name|Float
argument_list|>
name|datePeriodEnrollments
init|=
name|pc
operator|.
name|findPeriodEnrollmentsForCriteria
argument_list|(
name|validRoomPermanentIds
argument_list|,
name|positionIds
argument_list|)
decl_stmt|;
for|for
control|(
name|java
operator|.
name|util
operator|.
name|Date
name|date
range|:
name|datePeriodEnrollments
operator|.
name|keySet
argument_list|()
control|)
block|{
name|String
name|label
init|=
name|dayOfWeekTimeLabelFor
argument_list|(
name|date
argument_list|)
decl_stmt|;
name|PeriodEnrollment
name|pe
init|=
name|periodEnrollmentMap
operator|.
name|get
argument_list|(
name|label
argument_list|)
decl_stmt|;
if|if
condition|(
name|pe
operator|==
literal|null
condition|)
block|{
name|pe
operator|=
operator|new
name|PeriodEnrollment
argument_list|(
name|date
argument_list|,
name|getStandardWeeksInReportingTerm
argument_list|()
argument_list|)
expr_stmt|;
name|periodEnrollmentMap
operator|.
name|put
argument_list|(
name|label
argument_list|,
name|pe
argument_list|)
expr_stmt|;
block|}
name|pe
operator|.
name|addEnrollment
argument_list|(
name|pc
argument_list|,
name|datePeriodEnrollments
operator|.
name|get
argument_list|(
name|date
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|TreeSet
argument_list|<
name|WSEByDayOfWeekAndPeriod
operator|.
name|PeriodEnrollment
argument_list|>
name|ts
init|=
operator|new
name|TreeSet
argument_list|<
name|WSEByDayOfWeekAndPeriod
operator|.
name|PeriodEnrollment
argument_list|>
argument_list|()
decl_stmt|;
name|ts
operator|.
name|addAll
argument_list|(
name|periodEnrollmentMap
operator|.
name|values
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|PeriodEnrollment
name|pe
range|:
name|ts
control|)
block|{
name|ArrayList
argument_list|<
name|String
argument_list|>
name|row
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|row
operator|.
name|add
argument_list|(
name|pe
operator|.
name|getDayOfWeekLabel
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|pe
operator|.
name|getTimeLabel
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|pe
operator|.
name|getOrganizedWeeklyStudentEnrollment
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|pe
operator|.
name|getNotOrganizedWeeklyStudentEnrollment
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|add
argument_list|(
name|Float
operator|.
name|toString
argument_list|(
name|pe
operator|.
name|getWeeklyStudentEnrollment
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addDataRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|HashSet
argument_list|<
name|PitClass
argument_list|>
name|findAllPitClassesWithContactHoursForDepartmentsAndSubjectAreas
parameter_list|(
name|PointInTimeData
name|pointInTimeData
parameter_list|,
name|Session
name|hibSession
parameter_list|)
block|{
name|HashSet
argument_list|<
name|PitClass
argument_list|>
name|pitClasses
init|=
operator|new
name|HashSet
argument_list|<
name|PitClass
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|deptId
range|:
name|getDepartmentIds
argument_list|()
control|)
block|{
name|List
argument_list|<
name|PitClass
argument_list|>
name|pitClassesQueryResult
init|=
name|findAllPitClassesWithContactHoursForDepartment
argument_list|(
name|pointInTimeData
argument_list|,
name|deptId
argument_list|,
name|hibSession
argument_list|)
decl_stmt|;
for|for
control|(
name|PitClass
name|pc
range|:
name|pitClassesQueryResult
control|)
block|{
if|if
condition|(
name|pc
operator|.
name|getPitSchedulingSubpart
argument_list|()
operator|.
name|getPitInstrOfferingConfig
argument_list|()
operator|.
name|getPitInstructionalOffering
argument_list|()
operator|.
name|getControllingPitCourseOffering
argument_list|()
operator|.
name|isIsControl
argument_list|()
operator|.
name|booleanValue
argument_list|()
operator|&&
name|getSubjectAreaIds
argument_list|()
operator|.
name|contains
argument_list|(
name|pc
operator|.
name|getPitSchedulingSubpart
argument_list|()
operator|.
name|getPitInstrOfferingConfig
argument_list|()
operator|.
name|getPitInstructionalOffering
argument_list|()
operator|.
name|getControllingPitCourseOffering
argument_list|()
operator|.
name|getSubjectArea
argument_list|()
operator|.
name|getUniqueId
argument_list|()
argument_list|)
condition|)
block|{
name|pitClasses
operator|.
name|add
argument_list|(
name|pc
argument_list|)
expr_stmt|;
block|}
empty_stmt|;
block|}
block|}
return|return
operator|(
name|pitClasses
operator|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|parseParameters
parameter_list|()
block|{
name|super
operator|.
name|parseParameters
argument_list|()
expr_stmt|;
if|if
condition|(
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|DEPARTMENTS
argument_list|)
operator|.
name|size
argument_list|()
operator|<
literal|1
condition|)
block|{
comment|//TODO: error
block|}
else|else
block|{
name|setDepartmentIds
argument_list|(
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|DEPARTMENTS
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|SUBJECTS
argument_list|)
operator|.
name|size
argument_list|()
operator|<
literal|1
condition|)
block|{
comment|//TODO: error
block|}
else|else
block|{
name|setSubjectAreaIds
argument_list|(
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|SUBJECTS
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|PositionTypes
argument_list|)
operator|.
name|size
argument_list|()
operator|<
literal|1
condition|)
block|{
comment|//TODO: error
block|}
else|else
block|{
name|setPositionTypeIds
argument_list|(
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|PositionTypes
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|RoomTypes
argument_list|)
operator|.
name|size
argument_list|()
operator|<
literal|1
condition|)
block|{
comment|//TODO: error
block|}
else|else
block|{
name|setRoomTypeIds
argument_list|(
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|RoomTypes
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|MINIMUM_LOCATION_CAPACITY
argument_list|)
operator|.
name|size
argument_list|()
operator|!=
literal|1
condition|)
block|{
comment|//TODO: error
block|}
else|else
block|{
name|setMinimumLocationCapacity
argument_list|(
operator|(
name|Integer
operator|)
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|MINIMUM_LOCATION_CAPACITY
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|MAXIMUM_LOCATION_CAPACITY
argument_list|)
operator|.
name|size
argument_list|()
operator|!=
literal|1
condition|)
block|{
comment|//TODO: error
block|}
else|else
block|{
name|setMaximumLocationCapacity
argument_list|(
operator|(
name|Integer
operator|)
name|getParameterValues
argument_list|()
operator|.
name|get
argument_list|(
name|Parameter
operator|.
name|MAXIMUM_LOCATION_CAPACITY
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|ArrayList
argument_list|<
name|Long
argument_list|>
name|getPositionTypeIds
parameter_list|()
block|{
return|return
name|iPositionTypeIds
return|;
block|}
specifier|public
name|void
name|setPositionTypeIds
parameter_list|(
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|positionTypeIds
parameter_list|)
block|{
name|this
operator|.
name|iPositionTypeIds
operator|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|Object
name|o
range|:
name|positionTypeIds
control|)
block|{
name|this
operator|.
name|iPositionTypeIds
operator|.
name|add
argument_list|(
operator|(
name|Long
operator|)
name|o
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|ArrayList
argument_list|<
name|Long
argument_list|>
name|getSubjectAreaIds
parameter_list|()
block|{
return|return
name|iSubjectAreaIds
return|;
block|}
specifier|public
name|void
name|setSubjectAreaIds
parameter_list|(
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|subjectAreaIds
parameter_list|)
block|{
name|this
operator|.
name|iSubjectAreaIds
operator|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|Object
name|o
range|:
name|subjectAreaIds
control|)
block|{
name|this
operator|.
name|iSubjectAreaIds
operator|.
name|add
argument_list|(
operator|(
name|Long
operator|)
name|o
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|Integer
name|getMinimumLocationCapacity
parameter_list|()
block|{
return|return
name|iMinimumLocationCapacity
return|;
block|}
specifier|public
name|void
name|setMinimumLocationCapacity
parameter_list|(
name|Integer
name|minimumLocationCapacity
parameter_list|)
block|{
name|this
operator|.
name|iMinimumLocationCapacity
operator|=
name|minimumLocationCapacity
expr_stmt|;
block|}
specifier|public
name|Integer
name|getMaximumLocationCapacity
parameter_list|()
block|{
return|return
name|iMaximumLocationCapacity
return|;
block|}
specifier|public
name|void
name|setMaximumLocationCapacity
parameter_list|(
name|Integer
name|maximumLocationCapacity
parameter_list|)
block|{
name|this
operator|.
name|iMaximumLocationCapacity
operator|=
name|maximumLocationCapacity
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|runReport
parameter_list|(
name|org
operator|.
name|hibernate
operator|.
name|Session
name|hibSession
parameter_list|)
block|{
name|PointInTimeData
name|pitd
init|=
operator|(
name|PointInTimeData
operator|)
name|hibSession
operator|.
name|createQuery
argument_list|(
literal|"from PointInTimeData pitd where pitd.uniqueId = :uid"
argument_list|)
operator|.
name|setLong
argument_list|(
literal|"uid"
argument_list|,
name|getPointInTimeDataUniqueId
argument_list|()
operator|.
name|longValue
argument_list|()
argument_list|)
operator|.
name|uniqueResult
argument_list|()
decl_stmt|;
name|createRoomUtilizationReportFor
argument_list|(
name|pitd
argument_list|,
name|hibSession
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ArrayList
argument_list|<
name|Long
argument_list|>
name|getDepartmentIds
parameter_list|()
block|{
return|return
name|iDepartmentIds
return|;
block|}
specifier|public
name|void
name|setDepartmentIds
parameter_list|(
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|departmentIds
parameter_list|)
block|{
name|this
operator|.
name|iDepartmentIds
operator|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|Object
name|o
range|:
name|departmentIds
control|)
block|{
name|this
operator|.
name|iDepartmentIds
operator|.
name|add
argument_list|(
operator|(
name|Long
operator|)
name|o
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|ArrayList
argument_list|<
name|Long
argument_list|>
name|getRoomTypeIds
parameter_list|()
block|{
return|return
name|iRoomTypeIds
return|;
block|}
specifier|public
name|void
name|setRoomTypeIds
parameter_list|(
name|ArrayList
argument_list|<
name|Object
argument_list|>
name|roomTypeIds
parameter_list|)
block|{
name|this
operator|.
name|iRoomTypeIds
operator|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|Object
name|o
range|:
name|roomTypeIds
control|)
block|{
name|this
operator|.
name|iRoomTypeIds
operator|.
name|add
argument_list|(
operator|(
name|Long
operator|)
name|o
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
class|class
name|PeriodEnrollment
implements|implements
name|Comparable
argument_list|<
name|PeriodEnrollment
argument_list|>
block|{
specifier|private
name|float
name|iWeeklyStudentEnrollment
init|=
literal|0.0f
decl_stmt|;
specifier|private
name|float
name|iOrganizedWeeklyStudentEnrollment
init|=
literal|0.0f
decl_stmt|;
specifier|private
name|float
name|iNotOrganizedWeeklyStudentEnrollment
init|=
literal|0.0f
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|Date
name|iPeriod
decl_stmt|;
specifier|private
name|Float
name|iStandardWeeksInReportingTerm
decl_stmt|;
specifier|private
name|int
name|iDayOfWeek
decl_stmt|;
specifier|private
name|int
name|iHourOfDay
decl_stmt|;
specifier|private
name|int
name|iMinute
decl_stmt|;
specifier|public
name|java
operator|.
name|util
operator|.
name|Date
name|getPeriod
parameter_list|()
block|{
return|return
name|iPeriod
return|;
block|}
specifier|public
name|int
name|getDayOfWeek
parameter_list|()
block|{
return|return
operator|(
name|iDayOfWeek
operator|)
return|;
block|}
specifier|public
name|int
name|getHourOfDay
parameter_list|()
block|{
return|return
operator|(
name|iHourOfDay
operator|)
return|;
block|}
specifier|public
name|int
name|getMinute
parameter_list|()
block|{
return|return
operator|(
name|iMinute
operator|)
return|;
block|}
specifier|public
name|float
name|getOrganizedWeeklyStudentEnrollment
parameter_list|()
block|{
return|return
name|iOrganizedWeeklyStudentEnrollment
return|;
block|}
specifier|public
name|float
name|getNotOrganizedWeeklyStudentEnrollment
parameter_list|()
block|{
return|return
name|iNotOrganizedWeeklyStudentEnrollment
return|;
block|}
specifier|public
name|float
name|getWeeklyStudentEnrollment
parameter_list|()
block|{
return|return
name|this
operator|.
name|iWeeklyStudentEnrollment
return|;
block|}
specifier|public
name|String
name|getDayOfWeekLabel
parameter_list|()
block|{
return|return
operator|(
name|Localization
operator|.
name|getDateFormat
argument_list|(
literal|"EEEE"
argument_list|)
operator|.
name|format
argument_list|(
name|getPeriod
argument_list|()
argument_list|)
operator|)
return|;
block|}
specifier|public
name|String
name|getTimeLabel
parameter_list|()
block|{
return|return
operator|(
name|Localization
operator|.
name|getDateFormat
argument_list|(
literal|"HH:mm"
argument_list|)
operator|.
name|format
argument_list|(
name|getPeriod
argument_list|()
argument_list|)
operator|)
return|;
block|}
specifier|public
name|PeriodEnrollment
parameter_list|(
name|java
operator|.
name|util
operator|.
name|Date
name|period
parameter_list|,
name|Float
name|standardWeeksInReportingTerm
parameter_list|)
block|{
name|this
operator|.
name|iPeriod
operator|=
name|period
expr_stmt|;
name|this
operator|.
name|iStandardWeeksInReportingTerm
operator|=
name|standardWeeksInReportingTerm
expr_stmt|;
name|Calendar
name|cal
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|cal
operator|.
name|setTime
argument_list|(
name|period
argument_list|)
expr_stmt|;
name|iDayOfWeek
operator|=
name|cal
operator|.
name|get
argument_list|(
name|Calendar
operator|.
name|DAY_OF_WEEK
argument_list|)
expr_stmt|;
name|iHourOfDay
operator|=
name|cal
operator|.
name|get
argument_list|(
name|Calendar
operator|.
name|HOUR_OF_DAY
argument_list|)
expr_stmt|;
name|iMinute
operator|=
name|cal
operator|.
name|get
argument_list|(
name|Calendar
operator|.
name|MINUTE
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addEnrollment
parameter_list|(
name|PitClass
name|pitClass
parameter_list|,
name|Float
name|enrollment
parameter_list|)
block|{
name|iWeeklyStudentEnrollment
operator|+=
operator|(
name|enrollment
operator|.
name|floatValue
argument_list|()
operator|/
name|iStandardWeeksInReportingTerm
operator|.
name|floatValue
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|pitClass
operator|.
name|isOrganized
argument_list|()
condition|)
block|{
name|iOrganizedWeeklyStudentEnrollment
operator|+=
operator|(
name|enrollment
operator|/
name|iStandardWeeksInReportingTerm
operator|.
name|floatValue
argument_list|()
operator|)
expr_stmt|;
block|}
else|else
block|{
name|iNotOrganizedWeeklyStudentEnrollment
operator|+=
operator|(
name|enrollment
operator|/
name|iStandardWeeksInReportingTerm
operator|.
name|floatValue
argument_list|()
operator|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|PeriodEnrollment
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|iDayOfWeek
operator|==
name|o
operator|.
name|getDayOfWeek
argument_list|()
condition|)
block|{
if|if
condition|(
name|this
operator|.
name|iHourOfDay
operator|==
name|o
operator|.
name|getHourOfDay
argument_list|()
condition|)
block|{
if|if
condition|(
name|this
operator|.
name|iMinute
operator|==
name|o
operator|.
name|getMinute
argument_list|()
condition|)
block|{
return|return
operator|(
literal|0
operator|)
return|;
block|}
if|else if
condition|(
name|this
operator|.
name|iMinute
operator|<
name|o
operator|.
name|getMinute
argument_list|()
condition|)
block|{
return|return
operator|(
operator|-
literal|1
operator|)
return|;
block|}
else|else
block|{
return|return
operator|(
literal|1
operator|)
return|;
block|}
block|}
if|else if
condition|(
name|this
operator|.
name|iHourOfDay
operator|<
name|o
operator|.
name|getHourOfDay
argument_list|()
condition|)
block|{
return|return
operator|(
operator|-
literal|1
operator|)
return|;
block|}
else|else
block|{
return|return
operator|(
literal|1
operator|)
return|;
block|}
block|}
if|else if
condition|(
name|this
operator|.
name|iDayOfWeek
operator|<
name|o
operator|.
name|getDayOfWeek
argument_list|()
condition|)
block|{
return|return
operator|(
operator|-
literal|1
operator|)
return|;
block|}
else|else
block|{
return|return
operator|(
literal|1
operator|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|!=
literal|null
operator|&&
name|o
operator|instanceof
name|PeriodEnrollment
condition|)
block|{
name|PeriodEnrollment
name|pe2
init|=
operator|(
name|PeriodEnrollment
operator|)
name|o
decl_stmt|;
return|return
operator|(
literal|0
operator|==
name|this
operator|.
name|compareTo
argument_list|(
name|pe2
argument_list|)
operator|)
return|;
block|}
else|else
block|{
return|return
operator|(
literal|false
operator|)
return|;
block|}
block|}
block|}
block|}
end_class

end_unit

