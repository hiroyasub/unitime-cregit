begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UniTime 3.2 (University Timetabling Application)  * Copyright (C) 2010, UniTime LLC, and individual contributors  * as indicated by the @authors tag.  *   * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *   * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *   * You should have received a copy of the GNU General Public License along  * with this program.  If not, see<http://www.gnu.org/licenses/>.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|authenticate
operator|.
name|jaas
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|Attribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|directory
operator|.
name|InitialDirContext
import|;
end_import

begin_class
specifier|public
class|class
name|LdapTest
block|{
specifier|private
specifier|static
class|class
name|LdapProperties
extends|extends
name|Properties
block|{
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|keys
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|public
name|LdapProperties
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|String
name|getProperty
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|defaultValue
parameter_list|)
block|{
if|if
condition|(
name|keys
operator|.
name|add
argument_list|(
name|key
argument_list|)
condition|)
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Using "
operator|+
name|key
operator|+
literal|"="
operator|+
name|super
operator|.
name|getProperty
argument_list|(
name|key
argument_list|,
name|defaultValue
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|getProperty
argument_list|(
name|key
argument_list|,
name|defaultValue
argument_list|)
return|;
block|}
specifier|public
name|String
name|getProperty
parameter_list|(
name|String
name|key
parameter_list|)
block|{
if|if
condition|(
name|keys
operator|.
name|add
argument_list|(
name|key
argument_list|)
condition|)
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Using "
operator|+
name|key
operator|+
literal|"="
operator|+
name|super
operator|.
name|getProperty
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|getProperty
argument_list|(
name|key
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|LdapProperties
name|prop
init|=
operator|new
name|LdapProperties
argument_list|()
decl_stmt|;
name|File
name|propFile
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|args
operator|.
name|length
operator|>
literal|0
condition|)
block|{
name|propFile
operator|=
operator|new
name|File
argument_list|(
name|args
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.custom.properties"
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|propFile
operator|=
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.custom.properties"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|propFile
operator|==
literal|null
operator|||
operator|!
name|propFile
operator|.
name|exists
argument_list|()
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Usage: java -jar ldap-test.jar ldap.properties"
argument_list|)
expr_stmt|;
if|if
condition|(
name|propFile
operator|!=
literal|null
condition|)
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"File "
operator|+
name|propFile
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|" does not exists."
argument_list|)
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Loading properties "
operator|+
name|propFile
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|" ..."
argument_list|)
expr_stmt|;
name|prop
operator|.
name|load
argument_list|(
operator|new
name|FileInputStream
argument_list|(
name|propFile
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|BufferedReader
name|in
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|System
operator|.
name|in
argument_list|)
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|print
argument_list|(
literal|"Username:"
argument_list|)
expr_stmt|;
name|String
name|n
init|=
name|in
operator|.
name|readLine
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|print
argument_list|(
literal|"Password:"
argument_list|)
expr_stmt|;
name|String
name|p
init|=
name|in
operator|.
name|readLine
argument_list|()
decl_stmt|;
comment|// get principal& query
name|String
name|principal
init|=
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.principal"
argument_list|)
decl_stmt|;
if|if
condition|(
name|principal
operator|==
literal|null
condition|)
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Ldap principal is not set."
argument_list|)
throw|;
name|String
name|query
init|=
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.query"
argument_list|)
decl_stmt|;
if|if
condition|(
name|query
operator|==
literal|null
condition|)
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Ldap query is not set."
argument_list|)
throw|;
comment|// create env
name|Hashtable
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|env
init|=
operator|new
name|Hashtable
argument_list|()
decl_stmt|;
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|INITIAL_CONTEXT_FACTORY
argument_list|,
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.ctxFactory"
argument_list|,
literal|"com.sun.jndi.ldap.LdapCtxFactory"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|PROVIDER_URL
argument_list|,
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.provider"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|REFERRAL
argument_list|,
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.referral"
argument_list|,
literal|"ignore"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.version"
argument_list|)
operator|!=
literal|null
condition|)
name|env
operator|.
name|put
argument_list|(
literal|"java.naming.ldap.version"
argument_list|,
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.version"
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|SECURITY_AUTHENTICATION
argument_list|,
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.security"
argument_list|,
literal|"simple"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.socketFactory"
argument_list|)
operator|!=
literal|null
condition|)
name|env
operator|.
name|put
argument_list|(
literal|"java.naming.ldap.factory.socket"
argument_list|,
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.socketFactory"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.ssl.keyStore"
argument_list|)
operator|!=
literal|null
condition|)
name|System
operator|.
name|setProperty
argument_list|(
literal|"javax.net.ssl.keyStore"
argument_list|,
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.ssl.keyStore"
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"%WEB-INF%"
argument_list|,
literal|"."
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.ssl.trustStore"
argument_list|)
operator|!=
literal|null
condition|)
name|System
operator|.
name|setProperty
argument_list|(
literal|"javax.net.ssl.trustStore"
argument_list|,
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.ssl.trustStore"
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"%WEB-INF%"
argument_list|,
literal|"."
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.ssl.trustStorePassword"
argument_list|)
operator|!=
literal|null
condition|)
name|System
operator|.
name|setProperty
argument_list|(
literal|"javax.net.ssl.keyStorePassword"
argument_list|,
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.ssl.keyStorePassword"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.ssl.trustStorePassword"
argument_list|)
operator|!=
literal|null
condition|)
name|System
operator|.
name|setProperty
argument_list|(
literal|"javax.net.ssl.trustStorePassword"
argument_list|,
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.ssl.trustStorePassword"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.ssl.trustStoreType"
argument_list|)
operator|!=
literal|null
condition|)
name|System
operator|.
name|setProperty
argument_list|(
literal|"javax.net.ssl.trustStoreType"
argument_list|,
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.ssl.trustStoreType"
argument_list|)
argument_list|)
expr_stmt|;
comment|// create context
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|SECURITY_PRINCIPAL
argument_list|,
name|principal
operator|.
name|replaceAll
argument_list|(
literal|"%"
argument_list|,
name|n
argument_list|)
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
name|Context
operator|.
name|SECURITY_CREDENTIALS
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|InitialDirContext
name|cx
init|=
operator|new
name|InitialDirContext
argument_list|(
name|env
argument_list|)
decl_stmt|;
comment|// authenticate& retrieve external user id
name|String
name|idAttributeName
init|=
name|prop
operator|.
name|getProperty
argument_list|(
literal|"tmtbl.authenticate.ldap.externalId"
argument_list|,
literal|"uid"
argument_list|)
decl_stmt|;
name|Attributes
name|attributes
init|=
name|cx
operator|.
name|getAttributes
argument_list|(
name|query
operator|.
name|replaceAll
argument_list|(
literal|"%"
argument_list|,
name|n
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
name|idAttributeName
block|}
argument_list|)
decl_stmt|;
name|Attribute
name|idAttribute
init|=
name|attributes
operator|.
name|get
argument_list|(
name|idAttributeName
argument_list|)
decl_stmt|;
if|if
condition|(
name|idAttribute
operator|!=
literal|null
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Authentication succeeded, external user id is "
operator|+
name|idAttribute
operator|.
name|get
argument_list|()
operator|+
literal|"."
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Authentication succeeded, but external user id (named "
operator|+
name|idAttributeName
operator|+
literal|") does not exists or it is not set."
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Authentication failed: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

