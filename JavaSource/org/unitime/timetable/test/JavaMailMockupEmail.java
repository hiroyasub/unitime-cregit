begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|test
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|MessagingException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|Address
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|Message
operator|.
name|RecipientType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|internet
operator|.
name|InternetAddress
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|mail
operator|.
name|internet
operator|.
name|MimeBodyPart
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|commons
operator|.
name|JavaMailWrapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|ApplicationProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|defaults
operator|.
name|ApplicationProperty
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
class|class
name|JavaMailMockupEmail
extends|extends
name|JavaMailWrapper
block|{
specifier|private
name|String
name|iSubject
init|=
literal|null
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|setSubject
parameter_list|(
name|String
name|subject
parameter_list|)
throws|throws
name|MessagingException
block|{
name|iSubject
operator|=
name|subject
expr_stmt|;
name|super
operator|.
name|setSubject
argument_list|(
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"unitime.email.test.subject"
argument_list|,
literal|"[TEST]"
argument_list|)
operator|+
literal|" "
operator|+
name|subject
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|space
parameter_list|(
name|StringBuffer
name|s
parameter_list|,
name|int
name|len
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|len
condition|;
name|i
operator|++
control|)
name|s
operator|.
name|append
argument_list|(
literal|' '
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|String
name|format
parameter_list|(
name|String
name|name
parameter_list|,
name|Address
modifier|...
name|list
parameter_list|)
block|{
if|if
condition|(
name|list
operator|==
literal|null
operator|||
name|list
operator|.
name|length
operator|==
literal|0
condition|)
return|return
literal|""
return|;
name|StringBuffer
name|ret
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|list
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|i
operator|==
literal|0
condition|)
name|ret
operator|.
name|append
argument_list|(
name|name
argument_list|)
expr_stmt|;
else|else
name|space
argument_list|(
name|ret
argument_list|,
name|name
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|append
argument_list|(
name|list
index|[
name|i
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ret
operator|.
name|append
argument_list|(
literal|'\n'
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|send
parameter_list|()
throws|throws
name|MessagingException
throws|,
name|UnsupportedEncodingException
block|{
name|StringBuffer
name|message
init|=
operator|new
name|StringBuffer
argument_list|(
literal|"\n"
argument_list|)
decl_stmt|;
if|if
condition|(
name|iSubject
operator|!=
literal|null
condition|)
name|message
operator|.
name|append
argument_list|(
literal|"Subject:  "
operator|+
name|iSubject
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
name|message
operator|.
name|append
argument_list|(
name|format
argument_list|(
literal|"From:     "
argument_list|,
name|iMail
operator|.
name|getFrom
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|message
operator|.
name|append
argument_list|(
name|format
argument_list|(
literal|"Reply-To: "
argument_list|,
name|iMail
operator|.
name|getReplyTo
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|message
operator|.
name|append
argument_list|(
name|format
argument_list|(
literal|"To:       "
argument_list|,
name|iMail
operator|.
name|getRecipients
argument_list|(
name|RecipientType
operator|.
name|TO
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|message
operator|.
name|append
argument_list|(
name|format
argument_list|(
literal|"CC:       "
argument_list|,
name|iMail
operator|.
name|getRecipients
argument_list|(
name|RecipientType
operator|.
name|CC
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|message
operator|.
name|append
argument_list|(
name|format
argument_list|(
literal|"BCC:      "
argument_list|,
name|iMail
operator|.
name|getRecipients
argument_list|(
name|RecipientType
operator|.
name|BCC
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|MimeBodyPart
name|text
init|=
operator|new
name|MimeBodyPart
argument_list|()
decl_stmt|;
name|text
operator|.
name|setContent
argument_list|(
name|message
operator|.
name|toString
argument_list|()
argument_list|,
literal|"text/plain"
argument_list|)
expr_stmt|;
name|text
operator|.
name|setFileName
argument_list|(
literal|"original-recipients.txt"
argument_list|)
expr_stmt|;
name|iBody
operator|.
name|addBodyPart
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|iMail
operator|.
name|setRecipients
argument_list|(
name|RecipientType
operator|.
name|TO
argument_list|,
operator|new
name|InternetAddress
index|[]
block|{
operator|new
name|InternetAddress
argument_list|(
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"unitime.email.test.recipient"
argument_list|,
name|ApplicationProperty
operator|.
name|EmailNotificationAddress
operator|.
name|value
argument_list|()
argument_list|)
argument_list|,
name|ApplicationProperties
operator|.
name|getProperty
argument_list|(
literal|"unitime.email.test.recipient.name"
argument_list|,
name|ApplicationProperty
operator|.
name|EmailNotificationAddressName
operator|.
name|value
argument_list|()
argument_list|)
argument_list|,
literal|"UTF-8"
argument_list|)
block|}
argument_list|)
expr_stmt|;
name|iMail
operator|.
name|setRecipients
argument_list|(
name|RecipientType
operator|.
name|CC
argument_list|,
operator|new
name|Address
index|[]
block|{}
argument_list|)
expr_stmt|;
name|iMail
operator|.
name|setRecipients
argument_list|(
name|RecipientType
operator|.
name|BCC
argument_list|,
operator|new
name|Address
index|[]
block|{}
argument_list|)
expr_stmt|;
name|super
operator|.
name|send
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

