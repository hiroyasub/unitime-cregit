begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|test
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Future
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|transaction
operator|.
name|TransactionManager
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|cpsolver
operator|.
name|ifs
operator|.
name|util
operator|.
name|ToolBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|Cache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|configuration
operator|.
name|cache
operator|.
name|CacheMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|configuration
operator|.
name|cache
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|configuration
operator|.
name|cache
operator|.
name|ConfigurationBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|configuration
operator|.
name|global
operator|.
name|GlobalConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|configuration
operator|.
name|global
operator|.
name|GlobalConfigurationBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|distexec
operator|.
name|DefaultExecutorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|distexec
operator|.
name|DistributedCallable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|distexec
operator|.
name|DistributedExecutorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|manager
operator|.
name|DefaultCacheManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|manager
operator|.
name|EmbeddedCacheManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|transaction
operator|.
name|LockingMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|transaction
operator|.
name|TransactionMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|infinispan
operator|.
name|transaction
operator|.
name|lookup
operator|.
name|JBossStandaloneJTAManagerLookup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|Address
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|JChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|Message
operator|.
name|Flag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|blocks
operator|.
name|RequestOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|blocks
operator|.
name|ResponseMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|blocks
operator|.
name|RpcDispatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|util
operator|.
name|Rsp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|util
operator|.
name|RspList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|util
operator|.
name|Util
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dev
operator|.
name|util
operator|.
name|collect
operator|.
name|HashMap
import|;
end_import

begin_class
specifier|public
class|class
name|JGroupsServer
block|{
specifier|public
name|boolean
name|hello
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Hello "
operator|+
name|name
operator|+
literal|"!"
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
specifier|static
name|void
name|test1
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|JChannel
name|channel
init|=
operator|new
name|JChannel
argument_list|()
decl_stmt|;
specifier|final
name|RpcDispatcher
name|dispatcher
init|=
operator|new
name|RpcDispatcher
argument_list|(
name|channel
argument_list|,
operator|new
name|JGroupsServer
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|RequestOptions
name|first
init|=
operator|new
name|RequestOptions
argument_list|(
name|ResponseMode
operator|.
name|GET_FIRST
argument_list|,
literal|0
argument_list|)
operator|.
name|setFlags
argument_list|(
name|Flag
operator|.
name|DONT_BUNDLE
argument_list|,
name|Flag
operator|.
name|OOB
argument_list|)
decl_stmt|;
specifier|final
name|RequestOptions
name|all
init|=
operator|new
name|RequestOptions
argument_list|(
name|ResponseMode
operator|.
name|GET_ALL
argument_list|,
literal|0
argument_list|)
operator|.
name|setFlags
argument_list|(
name|Flag
operator|.
name|DONT_BUNDLE
argument_list|,
name|Flag
operator|.
name|OOB
argument_list|)
decl_stmt|;
name|channel
operator|.
name|connect
argument_list|(
literal|"UniTime-2X"
argument_list|)
expr_stmt|;
for|for
control|(
init|;
condition|;
control|)
block|{
specifier|final
name|String
name|line
init|=
name|Util
operator|.
name|readStringFromStdin
argument_list|(
literal|": "
argument_list|)
decl_stmt|;
operator|new
name|Thread
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|RspList
argument_list|<
name|Boolean
argument_list|>
name|o
init|=
name|dispatcher
operator|.
name|callRemoteMethods
argument_list|(
literal|null
argument_list|,
literal|"hello"
argument_list|,
operator|new
name|String
index|[]
block|{
name|line
block|}
argument_list|,
operator|new
name|Class
index|[]
block|{
name|String
operator|.
name|class
block|}
argument_list|,
name|all
argument_list|)
decl_stmt|;
for|for
control|(
name|Rsp
argument_list|<
name|Boolean
argument_list|>
name|x
range|:
name|o
operator|.
name|values
argument_list|()
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"  -- returned["
operator|+
name|line
operator|+
literal|"]: "
operator|+
name|x
operator|.
name|getSender
argument_list|()
operator|+
literal|" ["
operator|+
name|x
operator|.
name|getValue
argument_list|()
operator|+
literal|"]"
argument_list|)
expr_stmt|;
block|}
name|Address
name|random
init|=
name|ToolBox
operator|.
name|random
argument_list|(
name|o
operator|.
name|values
argument_list|()
argument_list|)
operator|.
name|getSender
argument_list|()
decl_stmt|;
name|Boolean
name|x
init|=
name|dispatcher
operator|.
name|callRemoteMethod
argument_list|(
name|random
argument_list|,
literal|"hello"
argument_list|,
operator|new
name|String
index|[]
block|{
name|line
block|}
argument_list|,
operator|new
name|Class
index|[]
block|{
name|String
operator|.
name|class
block|}
argument_list|,
name|first
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"  -- returned["
operator|+
name|line
operator|+
literal|"-2]: "
operator|+
name|random
operator|+
literal|" ["
operator|+
name|x
operator|+
literal|"]"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
block|}
block|}
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
try|try
block|{
name|ToolBox
operator|.
name|configureLogging
argument_list|()
expr_stmt|;
name|GlobalConfiguration
name|global
init|=
name|GlobalConfigurationBuilder
operator|.
name|defaultClusteredBuilder
argument_list|()
operator|.
name|transport
argument_list|()
operator|.
name|addProperty
argument_list|(
literal|"configurationFile"
argument_list|,
literal|"jgroups-tcp.xml"
argument_list|)
operator|.
name|clusterName
argument_list|(
literal|"UniTime:inifispan-cluster"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Configuration
name|config
init|=
operator|new
name|ConfigurationBuilder
argument_list|()
operator|.
name|clustering
argument_list|()
operator|.
name|cacheMode
argument_list|(
name|CacheMode
operator|.
name|DIST_SYNC
argument_list|)
operator|.
name|hash
argument_list|()
operator|.
name|numOwners
argument_list|(
literal|2
argument_list|)
operator|.
name|transaction
argument_list|()
operator|.
name|transactionManagerLookup
argument_list|(
operator|new
name|JBossStandaloneJTAManagerLookup
argument_list|()
argument_list|)
operator|.
name|transactionMode
argument_list|(
name|TransactionMode
operator|.
name|TRANSACTIONAL
argument_list|)
operator|.
name|lockingMode
argument_list|(
name|LockingMode
operator|.
name|PESSIMISTIC
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|EmbeddedCacheManager
name|cm
init|=
operator|new
name|DefaultCacheManager
argument_list|(
name|global
argument_list|,
name|config
argument_list|)
decl_stmt|;
name|Cache
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|cache
init|=
name|cm
operator|.
name|getCache
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|Cache
argument_list|<
name|Long
argument_list|,
name|History
argument_list|>
name|history
init|=
name|cm
operator|.
name|getCache
argument_list|(
literal|"history"
argument_list|)
decl_stmt|;
name|cache
operator|.
name|put
argument_list|(
literal|5l
argument_list|,
literal|"Test"
argument_list|)
expr_stmt|;
name|history
operator|.
name|put
argument_list|(
literal|5l
argument_list|,
operator|new
name|History
argument_list|(
literal|"Test"
argument_list|)
argument_list|)
expr_stmt|;
name|TransactionManager
name|tm
init|=
name|cache
operator|.
name|getAdvancedCache
argument_list|()
operator|.
name|getTransactionManager
argument_list|()
decl_stmt|;
name|tm
operator|.
name|setTransactionTimeout
argument_list|(
literal|300
argument_list|)
expr_stmt|;
name|DistributedExecutorService
name|ex
init|=
operator|new
name|DefaultExecutorService
argument_list|(
name|cache
argument_list|)
decl_stmt|;
name|JChannel
name|channel
init|=
operator|new
name|JChannel
argument_list|(
literal|"udp.xml"
argument_list|)
decl_stmt|;
specifier|final
name|RpcDispatcher
name|dispatcher
init|=
operator|new
name|RpcDispatcher
argument_list|(
name|channel
argument_list|,
operator|new
name|JGroupsServer
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|RequestOptions
name|first
init|=
operator|new
name|RequestOptions
argument_list|(
name|ResponseMode
operator|.
name|GET_FIRST
argument_list|,
literal|0
argument_list|)
operator|.
name|setFlags
argument_list|(
name|Flag
operator|.
name|DONT_BUNDLE
argument_list|,
name|Flag
operator|.
name|OOB
argument_list|)
decl_stmt|;
specifier|final
name|RequestOptions
name|all
init|=
operator|new
name|RequestOptions
argument_list|(
name|ResponseMode
operator|.
name|GET_ALL
argument_list|,
literal|0
argument_list|)
operator|.
name|setFlags
argument_list|(
name|Flag
operator|.
name|DONT_BUNDLE
argument_list|,
name|Flag
operator|.
name|OOB
argument_list|)
decl_stmt|;
name|channel
operator|.
name|connect
argument_list|(
literal|"UniTime"
argument_list|)
expr_stmt|;
for|for
control|(
init|;
condition|;
control|)
block|{
try|try
block|{
specifier|final
name|String
name|line
init|=
name|Util
operator|.
name|readStringFromStdin
argument_list|(
literal|": "
argument_list|)
operator|.
name|trim
argument_list|()
decl_stmt|;
if|if
condition|(
name|line
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
block|}
if|else if
condition|(
literal|"exit"
operator|.
name|equals
argument_list|(
name|line
argument_list|)
condition|)
block|{
break|break;
block|}
if|else if
condition|(
literal|"begin"
operator|.
name|equals
argument_list|(
name|line
argument_list|)
condition|)
block|{
name|tm
operator|.
name|begin
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
literal|"commit"
operator|.
name|equals
argument_list|(
name|line
argument_list|)
condition|)
block|{
name|tm
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
literal|"rollback"
operator|.
name|equals
argument_list|(
name|line
argument_list|)
condition|)
block|{
name|tm
operator|.
name|rollback
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|line
operator|.
name|indexOf
argument_list|(
literal|' '
argument_list|)
operator|>=
literal|0
condition|)
block|{
name|Long
name|key
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|line
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|line
operator|.
name|indexOf
argument_list|(
literal|' '
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|value
init|=
name|line
operator|.
name|substring
argument_list|(
name|line
operator|.
name|indexOf
argument_list|(
literal|' '
argument_list|)
operator|+
literal|1
argument_list|)
decl_stmt|;
comment|// if (tm.getTransaction() != null) cache.getAdvancedCache().lock(key);
if|if
condition|(
literal|"?"
operator|.
name|equals
argument_list|(
name|value
argument_list|)
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Retrieved: "
operator|+
name|key
operator|+
literal|": "
operator|+
name|cache
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cache
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|History
name|h
init|=
name|history
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|h
operator|==
literal|null
condition|)
name|history
operator|.
name|put
argument_list|(
name|key
argument_list|,
operator|new
name|History
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
else|else
block|{
name|h
operator|.
name|insert
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|history
operator|.
name|replace
argument_list|(
name|key
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Added: "
operator|+
name|key
operator|+
literal|": "
operator|+
name|value
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|Long
name|key
init|=
name|Long
operator|.
name|valueOf
argument_list|(
name|line
argument_list|)
decl_stmt|;
name|String
name|value
init|=
name|cache
operator|.
name|remove
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
name|History
name|h
init|=
name|history
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|h
operator|.
name|insert
argument_list|(
literal|"NULL"
argument_list|)
expr_stmt|;
name|history
operator|.
name|replace
argument_list|(
name|key
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Removed: "
operator|+
name|key
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Local Entries: "
operator|+
name|ToolBox
operator|.
name|dict2string
argument_list|(
name|cache
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Local History: "
operator|+
name|ToolBox
operator|.
name|dict2string
argument_list|(
name|history
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Future
argument_list|<
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
argument_list|>
argument_list|>
name|futures
init|=
name|ex
operator|.
name|submitEverywhere
argument_list|(
operator|new
name|Test
argument_list|()
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Future
argument_list|<
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
argument_list|>
name|future
range|:
name|futures
control|)
block|{
name|map
operator|.
name|putAll
argument_list|(
name|future
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"All Entries: "
operator|+
name|ToolBox
operator|.
name|dict2string
argument_list|(
name|map
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|RspList
argument_list|<
name|Boolean
argument_list|>
name|o
init|=
name|dispatcher
operator|.
name|callRemoteMethods
argument_list|(
literal|null
argument_list|,
literal|"hello"
argument_list|,
operator|new
name|String
index|[]
block|{
name|line
block|}
argument_list|,
operator|new
name|Class
index|[]
block|{
name|String
operator|.
name|class
block|}
argument_list|,
name|all
argument_list|)
decl_stmt|;
for|for
control|(
name|Rsp
argument_list|<
name|Boolean
argument_list|>
name|x
range|:
name|o
operator|.
name|values
argument_list|()
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"  -- returned["
operator|+
name|line
operator|+
literal|"]: "
operator|+
name|x
operator|.
name|getSender
argument_list|()
operator|+
literal|" ["
operator|+
name|x
operator|.
name|getValue
argument_list|()
operator|+
literal|"]"
argument_list|)
expr_stmt|;
block|}
name|Address
name|random
init|=
name|ToolBox
operator|.
name|random
argument_list|(
name|channel
operator|.
name|getView
argument_list|()
operator|.
name|getMembers
argument_list|()
argument_list|)
decl_stmt|;
name|Boolean
name|x
init|=
name|dispatcher
operator|.
name|callRemoteMethod
argument_list|(
name|random
argument_list|,
literal|"hello"
argument_list|,
operator|new
name|String
index|[]
block|{
name|line
block|}
argument_list|,
operator|new
name|Class
index|[]
block|{
name|String
operator|.
name|class
block|}
argument_list|,
name|first
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"  -- returned["
operator|+
name|line
operator|+
literal|"-2]: "
operator|+
name|random
operator|+
literal|" ["
operator|+
name|x
operator|+
literal|"]"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
name|cm
operator|.
name|stop
argument_list|()
expr_stmt|;
name|channel
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|Test
implements|implements
name|DistributedCallable
argument_list|<
name|Long
argument_list|,
name|String
argument_list|,
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
argument_list|>
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|transient
name|Cache
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|cache
decl_stmt|;
specifier|transient
name|Set
argument_list|<
name|Long
argument_list|>
name|keys
decl_stmt|;
specifier|public
name|Test
parameter_list|()
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|setEnvironment
parameter_list|(
name|Cache
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|cache
parameter_list|,
name|Set
argument_list|<
name|Long
argument_list|>
name|inputKeys
parameter_list|)
block|{
name|this
operator|.
name|cache
operator|=
name|cache
expr_stmt|;
name|this
operator|.
name|keys
operator|=
name|inputKeys
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|call
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Got keys: "
operator|+
name|keys
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Returning local entries: "
operator|+
name|ToolBox
operator|.
name|dict2string
argument_list|(
name|cache
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
return|return
operator|new
name|HashMap
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
argument_list|(
name|cache
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|History
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|entries
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|History
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|entries
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|insert
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|entries
operator|.
name|add
argument_list|(
literal|0
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|entries
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

