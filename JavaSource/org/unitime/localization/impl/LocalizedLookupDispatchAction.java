begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to The Apereo Foundation under one or more contributor license  * agreements. See the NOTICE file distributed with this work for  * additional information regarding copyright ownership.  *  * The Apereo Foundation licenses this file to you under the Apache License,  * Version 2.0 (the "License"); you may not use this file except in  * compliance with the License. You may obtain a copy of the License at:  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  * See the License for the specific language governing permissions and  * limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|struts
operator|.
name|action
operator|.
name|ActionMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|localization
operator|.
name|messages
operator|.
name|Messages
import|;
end_import

begin_import
import|import
name|org
operator|.
name|unitime
operator|.
name|timetable
operator|.
name|spring
operator|.
name|struts
operator|.
name|SpringAwareLookupDispatchAction
import|;
end_import

begin_comment
comment|/**  * @author Tomas Muller  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|LocalizedLookupDispatchAction
extends|extends
name|SpringAwareLookupDispatchAction
block|{
annotation|@
name|Override
specifier|protected
name|Map
name|getKeyMethodMap
parameter_list|()
block|{
return|return
operator|new
name|Hashtable
argument_list|()
return|;
block|}
specifier|protected
specifier|abstract
name|Messages
name|getMessages
parameter_list|()
function_decl|;
annotation|@
name|Override
specifier|protected
name|String
name|getLookupMapName
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|String
name|keyName
parameter_list|,
name|ActionMapping
name|mapping
parameter_list|)
throws|throws
name|ServletException
block|{
try|try
block|{
synchronized|synchronized
init|(
name|localeMap
init|)
block|{
if|if
condition|(
name|keyMethodMap
operator|==
literal|null
operator|||
literal|true
condition|)
name|keyMethodMap
operator|=
operator|(
operator|(
name|Localization
operator|.
name|StrutsActionsRetriever
operator|)
name|getMessages
argument_list|()
operator|)
operator|.
name|getStrutsActions
argument_list|(
operator|(
name|Class
argument_list|<
name|LocalizedLookupDispatchAction
argument_list|>
operator|)
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
name|String
operator|)
name|keyMethodMap
operator|.
name|get
argument_list|(
name|keyName
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServletException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

